//////////////////////////////////////////
//
// NOTE: This is *not* a valid shader file
//
///////////////////////////////////////////
Shader "Custom/SliderRampTransparent" {
Properties {
[HeaderHelp(BASE, Base Properties)] _Color ("Color", Color) = (1,1,1,1)
_HColor ("Highlight Color", Color) = (0.785,0.785,0.785,1)
_SColor ("Shadow Color", Color) = (0.195,0.195,0.195,1)
_MainTex ("Main Texture", 2D) = "white" { }
[Separator] [Header(RAMP SETTINGS)] _RampThreshold ("Ramp Threshold", Range(0, 1)) = 0.5
_RampSmooth ("Ramp Smoothing", Range(0.001, 1)) = 0.1
[Separator] [HeaderHelp(TRANSPARENCY)] [Enum(UnityEngine.Rendering.BlendMode)] _SrcBlend ("Blending Source", Float) = 5
[Enum(UnityEngine.Rendering.BlendMode)] _DstBlend ("Blending Dest", Float) = 10
[Separator] __dummy__ ("unused", Float) = 0
}
SubShader {
 Tags { "IGNOREPROJECTOR" = "true" "QUEUE" = "Transparent" "RenderType" = "Transparent" }
 Pass {
  Name "FORWARD"
  Tags { "IGNOREPROJECTOR" = "true" "LIGHTMODE" = "FORWARDBASE" "QUEUE" = "Transparent" "RenderType" = "Transparent" "SHADOWSUPPORT" = "true" }
  GpuProgramID 28288
Program "vp" {
SubProgram "gles3 hw_tier00 " {
Keywords { "DIRECTIONAL" }
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in highp vec3 in_NORMAL0;
in highp vec4 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out highp vec3 vs_TEXCOORD1;
out highp vec3 vs_TEXCOORD2;
out highp vec4 vs_TEXCOORD5;
out highp vec4 vs_TEXCOORD6;
vec4 u_xlat0;
vec4 u_xlat1;
float u_xlat6;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    vs_TEXCOORD2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
    u_xlat0 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat0;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat0;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat0.xy;
    u_xlat0.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat6 = dot(u_xlat0.xyz, u_xlat0.xyz);
    u_xlat6 = inversesqrt(u_xlat6);
    vs_TEXCOORD1.xyz = vec3(u_xlat6) * u_xlat0.xyz;
    vs_TEXCOORD5 = vec4(0.0, 0.0, 0.0, 0.0);
    vs_TEXCOORD6 = vec4(0.0, 0.0, 0.0, 0.0);
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 _LightColor0;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 _HColor;
uniform 	mediump vec4 _SColor;
uniform 	mediump float _RampThreshold;
uniform 	mediump float _RampSmooth;
UNITY_LOCATION(0) uniform mediump sampler2D _MainTex;
in mediump vec2 vs_TEXCOORD0;
in highp vec3 vs_TEXCOORD1;
layout(location = 0) out mediump vec4 SV_Target0;
mediump vec3 u_xlat16_0;
mediump vec4 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
mediump float u_xlat16_6;
void main()
{
    u_xlat16_0.x = dot(vs_TEXCOORD1.xyz, vs_TEXCOORD1.xyz);
    u_xlat16_0.x = inversesqrt(u_xlat16_0.x);
    u_xlat16_0.xyz = u_xlat16_0.xxx * vs_TEXCOORD1.xyz;
    u_xlat16_0.x = dot(u_xlat16_0.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat16_0.x = max(u_xlat16_0.x, 0.0);
    u_xlat16_3.x = (-_RampSmooth) * 0.5 + _RampThreshold;
    u_xlat16_0.x = (-u_xlat16_3.x) + u_xlat16_0.x;
    u_xlat16_6 = _RampSmooth * 0.5 + _RampThreshold;
    u_xlat16_3.x = (-u_xlat16_3.x) + u_xlat16_6;
    u_xlat16_3.x = float(1.0) / u_xlat16_3.x;
    u_xlat16_0.x = u_xlat16_3.x * u_xlat16_0.x;
#ifdef UNITY_ADRENO_ES3
    u_xlat16_0.x = min(max(u_xlat16_0.x, 0.0), 1.0);
#else
    u_xlat16_0.x = clamp(u_xlat16_0.x, 0.0, 1.0);
#endif
    u_xlat16_3.x = u_xlat16_0.x * -2.0 + 3.0;
    u_xlat16_0.x = u_xlat16_0.x * u_xlat16_0.x;
    u_xlat16_0.x = u_xlat16_0.x * u_xlat16_3.x;
    u_xlat16_3.xyz = (-_HColor.xyz) + _SColor.xyz;
    u_xlat16_3.xyz = _SColor.www * u_xlat16_3.xyz + _HColor.xyz;
    u_xlat16_1.xyz = (-u_xlat16_3.xyz) + _HColor.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xxx * u_xlat16_1.xyz + u_xlat16_3.xyz;
    u_xlat16_1 = texture(_MainTex, vs_TEXCOORD0.xy);
    u_xlat16_2.xyz = u_xlat16_1.xyz * _Color.xyz;
    SV_Target0.w = u_xlat16_1.w * _Color.w;
    u_xlat16_2.xyz = u_xlat16_2.xyz * _LightColor0.xyz;
    SV_Target0.xyz = u_xlat16_0.xyz * u_xlat16_2.xyz;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier01 " {
Keywords { "DIRECTIONAL" }
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in highp vec3 in_NORMAL0;
in highp vec4 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out highp vec3 vs_TEXCOORD1;
out highp vec3 vs_TEXCOORD2;
out highp vec4 vs_TEXCOORD5;
out highp vec4 vs_TEXCOORD6;
vec4 u_xlat0;
vec4 u_xlat1;
float u_xlat6;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    vs_TEXCOORD2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
    u_xlat0 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat0;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat0;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat0.xy;
    u_xlat0.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat6 = dot(u_xlat0.xyz, u_xlat0.xyz);
    u_xlat6 = inversesqrt(u_xlat6);
    vs_TEXCOORD1.xyz = vec3(u_xlat6) * u_xlat0.xyz;
    vs_TEXCOORD5 = vec4(0.0, 0.0, 0.0, 0.0);
    vs_TEXCOORD6 = vec4(0.0, 0.0, 0.0, 0.0);
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 _LightColor0;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 _HColor;
uniform 	mediump vec4 _SColor;
uniform 	mediump float _RampThreshold;
uniform 	mediump float _RampSmooth;
UNITY_LOCATION(0) uniform mediump sampler2D _MainTex;
in mediump vec2 vs_TEXCOORD0;
in highp vec3 vs_TEXCOORD1;
layout(location = 0) out mediump vec4 SV_Target0;
mediump vec3 u_xlat16_0;
mediump vec4 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
mediump float u_xlat16_6;
void main()
{
    u_xlat16_0.x = dot(vs_TEXCOORD1.xyz, vs_TEXCOORD1.xyz);
    u_xlat16_0.x = inversesqrt(u_xlat16_0.x);
    u_xlat16_0.xyz = u_xlat16_0.xxx * vs_TEXCOORD1.xyz;
    u_xlat16_0.x = dot(u_xlat16_0.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat16_0.x = max(u_xlat16_0.x, 0.0);
    u_xlat16_3.x = (-_RampSmooth) * 0.5 + _RampThreshold;
    u_xlat16_0.x = (-u_xlat16_3.x) + u_xlat16_0.x;
    u_xlat16_6 = _RampSmooth * 0.5 + _RampThreshold;
    u_xlat16_3.x = (-u_xlat16_3.x) + u_xlat16_6;
    u_xlat16_3.x = float(1.0) / u_xlat16_3.x;
    u_xlat16_0.x = u_xlat16_3.x * u_xlat16_0.x;
#ifdef UNITY_ADRENO_ES3
    u_xlat16_0.x = min(max(u_xlat16_0.x, 0.0), 1.0);
#else
    u_xlat16_0.x = clamp(u_xlat16_0.x, 0.0, 1.0);
#endif
    u_xlat16_3.x = u_xlat16_0.x * -2.0 + 3.0;
    u_xlat16_0.x = u_xlat16_0.x * u_xlat16_0.x;
    u_xlat16_0.x = u_xlat16_0.x * u_xlat16_3.x;
    u_xlat16_3.xyz = (-_HColor.xyz) + _SColor.xyz;
    u_xlat16_3.xyz = _SColor.www * u_xlat16_3.xyz + _HColor.xyz;
    u_xlat16_1.xyz = (-u_xlat16_3.xyz) + _HColor.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xxx * u_xlat16_1.xyz + u_xlat16_3.xyz;
    u_xlat16_1 = texture(_MainTex, vs_TEXCOORD0.xy);
    u_xlat16_2.xyz = u_xlat16_1.xyz * _Color.xyz;
    SV_Target0.w = u_xlat16_1.w * _Color.w;
    u_xlat16_2.xyz = u_xlat16_2.xyz * _LightColor0.xyz;
    SV_Target0.xyz = u_xlat16_0.xyz * u_xlat16_2.xyz;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier02 " {
Keywords { "DIRECTIONAL" }
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in highp vec3 in_NORMAL0;
in highp vec4 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out highp vec3 vs_TEXCOORD1;
out highp vec3 vs_TEXCOORD2;
out highp vec4 vs_TEXCOORD5;
out highp vec4 vs_TEXCOORD6;
vec4 u_xlat0;
vec4 u_xlat1;
float u_xlat6;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    vs_TEXCOORD2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
    u_xlat0 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat0;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat0;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat0.xy;
    u_xlat0.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat6 = dot(u_xlat0.xyz, u_xlat0.xyz);
    u_xlat6 = inversesqrt(u_xlat6);
    vs_TEXCOORD1.xyz = vec3(u_xlat6) * u_xlat0.xyz;
    vs_TEXCOORD5 = vec4(0.0, 0.0, 0.0, 0.0);
    vs_TEXCOORD6 = vec4(0.0, 0.0, 0.0, 0.0);
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 _LightColor0;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 _HColor;
uniform 	mediump vec4 _SColor;
uniform 	mediump float _RampThreshold;
uniform 	mediump float _RampSmooth;
UNITY_LOCATION(0) uniform mediump sampler2D _MainTex;
in mediump vec2 vs_TEXCOORD0;
in highp vec3 vs_TEXCOORD1;
layout(location = 0) out mediump vec4 SV_Target0;
mediump vec3 u_xlat16_0;
mediump vec4 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
mediump float u_xlat16_6;
void main()
{
    u_xlat16_0.x = dot(vs_TEXCOORD1.xyz, vs_TEXCOORD1.xyz);
    u_xlat16_0.x = inversesqrt(u_xlat16_0.x);
    u_xlat16_0.xyz = u_xlat16_0.xxx * vs_TEXCOORD1.xyz;
    u_xlat16_0.x = dot(u_xlat16_0.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat16_0.x = max(u_xlat16_0.x, 0.0);
    u_xlat16_3.x = (-_RampSmooth) * 0.5 + _RampThreshold;
    u_xlat16_0.x = (-u_xlat16_3.x) + u_xlat16_0.x;
    u_xlat16_6 = _RampSmooth * 0.5 + _RampThreshold;
    u_xlat16_3.x = (-u_xlat16_3.x) + u_xlat16_6;
    u_xlat16_3.x = float(1.0) / u_xlat16_3.x;
    u_xlat16_0.x = u_xlat16_3.x * u_xlat16_0.x;
#ifdef UNITY_ADRENO_ES3
    u_xlat16_0.x = min(max(u_xlat16_0.x, 0.0), 1.0);
#else
    u_xlat16_0.x = clamp(u_xlat16_0.x, 0.0, 1.0);
#endif
    u_xlat16_3.x = u_xlat16_0.x * -2.0 + 3.0;
    u_xlat16_0.x = u_xlat16_0.x * u_xlat16_0.x;
    u_xlat16_0.x = u_xlat16_0.x * u_xlat16_3.x;
    u_xlat16_3.xyz = (-_HColor.xyz) + _SColor.xyz;
    u_xlat16_3.xyz = _SColor.www * u_xlat16_3.xyz + _HColor.xyz;
    u_xlat16_1.xyz = (-u_xlat16_3.xyz) + _HColor.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xxx * u_xlat16_1.xyz + u_xlat16_3.xyz;
    u_xlat16_1 = texture(_MainTex, vs_TEXCOORD0.xy);
    u_xlat16_2.xyz = u_xlat16_1.xyz * _Color.xyz;
    SV_Target0.w = u_xlat16_1.w * _Color.w;
    u_xlat16_2.xyz = u_xlat16_2.xyz * _LightColor0.xyz;
    SV_Target0.xyz = u_xlat16_0.xyz * u_xlat16_2.xyz;
    return;
}

#endif
"
}
SubProgram "vulkan hw_tier00 " {
Keywords { "DIRECTIONAL" }
"; SPIR-V
; Version: 1.0
; Generator: Khronos Glslang Reference Front End; 6
; Bound: 160
; Schema: 0
                                                      OpCapability Shader 
                                               %1 = OpExtInstImport "GLSL.std.450" 
                                                      OpMemoryModel Logical GLSL450 
                                                      OpEntryPoint Vertex %4 "main" %11 %52 %85 %95 %110 %114 %144 %150 %153 
                                                      OpName vs_TEXCOORD2 "vs_TEXCOORD2" 
                                                      OpName vs_TEXCOORD0 "vs_TEXCOORD0" 
                                                      OpName vs_TEXCOORD1 "vs_TEXCOORD1" 
                                                      OpName vs_TEXCOORD5 "vs_TEXCOORD5" 
                                                      OpName vs_TEXCOORD6 "vs_TEXCOORD6" 
                                                      OpDecorate %11 Location 11 
                                                      OpDecorate %16 ArrayStride 16 
                                                      OpDecorate %17 ArrayStride 17 
                                                      OpDecorate %18 ArrayStride 18 
                                                      OpMemberDecorate %19 0 Offset 19 
                                                      OpMemberDecorate %19 1 Offset 19 
                                                      OpMemberDecorate %19 2 Offset 19 
                                                      OpMemberDecorate %19 3 Offset 19 
                                                      OpDecorate %19 Block 
                                                      OpDecorate %21 DescriptorSet 21 
                                                      OpDecorate %21 Binding 21 
                                                      OpDecorate vs_TEXCOORD2 Location 52 
                                                      OpMemberDecorate %83 0 BuiltIn 83 
                                                      OpMemberDecorate %83 1 BuiltIn 83 
                                                      OpMemberDecorate %83 2 BuiltIn 83 
                                                      OpDecorate %83 Block 
                                                      OpDecorate %95 Location 95 
                                                      OpDecorate vs_TEXCOORD0 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD0 Location 110 
                                                      OpDecorate %114 Location 114 
                                                      OpDecorate vs_TEXCOORD1 Location 144 
                                                      OpDecorate vs_TEXCOORD5 Location 150 
                                                      OpDecorate vs_TEXCOORD6 Location 153 
                                               %2 = OpTypeVoid 
                                               %3 = OpTypeFunction %2 
                                               %6 = OpTypeFloat 32 
                                               %7 = OpTypeVector %6 4 
                                               %8 = OpTypePointer Private %7 
                                Private f32_4* %9 = OpVariable Private 
                                              %10 = OpTypePointer Input %7 
                                 Input f32_4* %11 = OpVariable Input 
                                              %14 = OpTypeInt 32 0 
                                          u32 %15 = OpConstant 4 
                                              %16 = OpTypeArray %7 %15 
                                              %17 = OpTypeArray %7 %15 
                                              %18 = OpTypeArray %7 %15 
                                              %19 = OpTypeStruct %16 %17 %18 %7 
                                              %20 = OpTypePointer Uniform %19 
Uniform struct {f32_4[4]; f32_4[4]; f32_4[4]; f32_4;}* %21 = OpVariable Uniform 
                                              %22 = OpTypeInt 32 1 
                                          i32 %23 = OpConstant 0 
                                          i32 %24 = OpConstant 1 
                                              %25 = OpTypePointer Uniform %7 
                                          i32 %36 = OpConstant 2 
                               Private f32_4* %44 = OpVariable Private 
                                          i32 %46 = OpConstant 3 
                                              %50 = OpTypeVector %6 3 
                                              %51 = OpTypePointer Output %50 
                       Output f32_3* vs_TEXCOORD2 = OpVariable Output 
                                          u32 %81 = OpConstant 1 
                                              %82 = OpTypeArray %6 %81 
                                              %83 = OpTypeStruct %7 %6 %82 
                                              %84 = OpTypePointer Output %83 
         Output struct {f32_4; f32; f32[1];}* %85 = OpVariable Output 
                                              %93 = OpTypePointer Output %7 
                                 Input f32_4* %95 = OpVariable Input 
                                              %96 = OpTypeVector %6 2 
                                             %109 = OpTypePointer Output %96 
                       Output f32_2* vs_TEXCOORD0 = OpVariable Output 
                                             %113 = OpTypePointer Input %50 
                                Input f32_3* %114 = OpVariable Input 
                                         u32 %120 = OpConstant 0 
                                             %121 = OpTypePointer Private %6 
                                         u32 %134 = OpConstant 2 
                                Private f32* %136 = OpVariable Private 
                       Output f32_3* vs_TEXCOORD1 = OpVariable Output 
                       Output f32_4* vs_TEXCOORD5 = OpVariable Output 
                                         f32 %151 = OpConstant 3.674022E-40 
                                       f32_4 %152 = OpConstantComposite %151 %151 %151 %151 
                       Output f32_4* vs_TEXCOORD6 = OpVariable Output 
                                             %154 = OpTypePointer Output %6 
                                          void %4 = OpFunction None %3 
                                               %5 = OpLabel 
                                        f32_4 %12 = OpLoad %11 
                                        f32_4 %13 = OpVectorShuffle %12 %12 1 1 1 1 
                               Uniform f32_4* %26 = OpAccessChain %21 %23 %24 
                                        f32_4 %27 = OpLoad %26 
                                        f32_4 %28 = OpFMul %13 %27 
                                                      OpStore %9 %28 
                               Uniform f32_4* %29 = OpAccessChain %21 %23 %23 
                                        f32_4 %30 = OpLoad %29 
                                        f32_4 %31 = OpLoad %11 
                                        f32_4 %32 = OpVectorShuffle %31 %31 0 0 0 0 
                                        f32_4 %33 = OpFMul %30 %32 
                                        f32_4 %34 = OpLoad %9 
                                        f32_4 %35 = OpFAdd %33 %34 
                                                      OpStore %9 %35 
                               Uniform f32_4* %37 = OpAccessChain %21 %23 %36 
                                        f32_4 %38 = OpLoad %37 
                                        f32_4 %39 = OpLoad %11 
                                        f32_4 %40 = OpVectorShuffle %39 %39 2 2 2 2 
                                        f32_4 %41 = OpFMul %38 %40 
                                        f32_4 %42 = OpLoad %9 
                                        f32_4 %43 = OpFAdd %41 %42 
                                                      OpStore %9 %43 
                                        f32_4 %45 = OpLoad %9 
                               Uniform f32_4* %47 = OpAccessChain %21 %23 %46 
                                        f32_4 %48 = OpLoad %47 
                                        f32_4 %49 = OpFAdd %45 %48 
                                                      OpStore %44 %49 
                               Uniform f32_4* %53 = OpAccessChain %21 %23 %46 
                                        f32_4 %54 = OpLoad %53 
                                        f32_3 %55 = OpVectorShuffle %54 %54 0 1 2 
                                        f32_4 %56 = OpLoad %11 
                                        f32_3 %57 = OpVectorShuffle %56 %56 3 3 3 
                                        f32_3 %58 = OpFMul %55 %57 
                                        f32_4 %59 = OpLoad %9 
                                        f32_3 %60 = OpVectorShuffle %59 %59 0 1 2 
                                        f32_3 %61 = OpFAdd %58 %60 
                                                      OpStore vs_TEXCOORD2 %61 
                                        f32_4 %62 = OpLoad %44 
                                        f32_4 %63 = OpVectorShuffle %62 %62 1 1 1 1 
                               Uniform f32_4* %64 = OpAccessChain %21 %36 %24 
                                        f32_4 %65 = OpLoad %64 
                                        f32_4 %66 = OpFMul %63 %65 
                                                      OpStore %9 %66 
                               Uniform f32_4* %67 = OpAccessChain %21 %36 %23 
                                        f32_4 %68 = OpLoad %67 
                                        f32_4 %69 = OpLoad %44 
                                        f32_4 %70 = OpVectorShuffle %69 %69 0 0 0 0 
                                        f32_4 %71 = OpFMul %68 %70 
                                        f32_4 %72 = OpLoad %9 
                                        f32_4 %73 = OpFAdd %71 %72 
                                                      OpStore %9 %73 
                               Uniform f32_4* %74 = OpAccessChain %21 %36 %36 
                                        f32_4 %75 = OpLoad %74 
                                        f32_4 %76 = OpLoad %44 
                                        f32_4 %77 = OpVectorShuffle %76 %76 2 2 2 2 
                                        f32_4 %78 = OpFMul %75 %77 
                                        f32_4 %79 = OpLoad %9 
                                        f32_4 %80 = OpFAdd %78 %79 
                                                      OpStore %9 %80 
                               Uniform f32_4* %86 = OpAccessChain %21 %36 %46 
                                        f32_4 %87 = OpLoad %86 
                                        f32_4 %88 = OpLoad %44 
                                        f32_4 %89 = OpVectorShuffle %88 %88 3 3 3 3 
                                        f32_4 %90 = OpFMul %87 %89 
                                        f32_4 %91 = OpLoad %9 
                                        f32_4 %92 = OpFAdd %90 %91 
                                Output f32_4* %94 = OpAccessChain %85 %23 
                                                      OpStore %94 %92 
                                        f32_4 %97 = OpLoad %95 
                                        f32_2 %98 = OpVectorShuffle %97 %97 0 1 
                               Uniform f32_4* %99 = OpAccessChain %21 %46 
                                       f32_4 %100 = OpLoad %99 
                                       f32_2 %101 = OpVectorShuffle %100 %100 0 1 
                                       f32_2 %102 = OpFMul %98 %101 
                              Uniform f32_4* %103 = OpAccessChain %21 %46 
                                       f32_4 %104 = OpLoad %103 
                                       f32_2 %105 = OpVectorShuffle %104 %104 2 3 
                                       f32_2 %106 = OpFAdd %102 %105 
                                       f32_4 %107 = OpLoad %9 
                                       f32_4 %108 = OpVectorShuffle %107 %106 4 5 2 3 
                                                      OpStore %9 %108 
                                       f32_4 %111 = OpLoad %9 
                                       f32_2 %112 = OpVectorShuffle %111 %111 0 1 
                                                      OpStore vs_TEXCOORD0 %112 
                                       f32_3 %115 = OpLoad %114 
                              Uniform f32_4* %116 = OpAccessChain %21 %24 %23 
                                       f32_4 %117 = OpLoad %116 
                                       f32_3 %118 = OpVectorShuffle %117 %117 0 1 2 
                                         f32 %119 = OpDot %115 %118 
                                Private f32* %122 = OpAccessChain %9 %120 
                                                      OpStore %122 %119 
                                       f32_3 %123 = OpLoad %114 
                              Uniform f32_4* %124 = OpAccessChain %21 %24 %24 
                                       f32_4 %125 = OpLoad %124 
                                       f32_3 %126 = OpVectorShuffle %125 %125 0 1 2 
                                         f32 %127 = OpDot %123 %126 
                                Private f32* %128 = OpAccessChain %9 %81 
                                                      OpStore %128 %127 
                                       f32_3 %129 = OpLoad %114 
                              Uniform f32_4* %130 = OpAccessChain %21 %24 %36 
                                       f32_4 %131 = OpLoad %130 
                                       f32_3 %132 = OpVectorShuffle %131 %131 0 1 2 
                                         f32 %133 = OpDot %129 %132 
                                Private f32* %135 = OpAccessChain %9 %134 
                                                      OpStore %135 %133 
                                       f32_4 %137 = OpLoad %9 
                                       f32_3 %138 = OpVectorShuffle %137 %137 0 1 2 
                                       f32_4 %139 = OpLoad %9 
                                       f32_3 %140 = OpVectorShuffle %139 %139 0 1 2 
                                         f32 %141 = OpDot %138 %140 
                                                      OpStore %136 %141 
                                         f32 %142 = OpLoad %136 
                                         f32 %143 = OpExtInst %1 32 %142 
                                                      OpStore %136 %143 
                                         f32 %145 = OpLoad %136 
                                       f32_3 %146 = OpCompositeConstruct %145 %145 %145 
                                       f32_4 %147 = OpLoad %9 
                                       f32_3 %148 = OpVectorShuffle %147 %147 0 1 2 
                                       f32_3 %149 = OpFMul %146 %148 
                                                      OpStore vs_TEXCOORD1 %149 
                                                      OpStore vs_TEXCOORD5 %152 
                                                      OpStore vs_TEXCOORD6 %152 
                                 Output f32* %155 = OpAccessChain %85 %23 %81 
                                         f32 %156 = OpLoad %155 
                                         f32 %157 = OpFNegate %156 
                                 Output f32* %158 = OpAccessChain %85 %23 %81 
                                                      OpStore %158 %157 
                                                      OpReturn
                                                      OpFunctionEnd
; SPIR-V
; Version: 1.0
; Generator: Khronos Glslang Reference Front End; 6
; Bound: 191
; Schema: 0
                                                      OpCapability Shader 
                                               %1 = OpExtInstImport "GLSL.std.450" 
                                                      OpMemoryModel Logical GLSL450 
                                                      OpEntryPoint Fragment %4 "main" %11 %158 %170 
                                                      OpExecutionMode %4 OriginUpperLeft 
                                                      OpName vs_TEXCOORD1 "vs_TEXCOORD1" 
                                                      OpName vs_TEXCOORD0 "vs_TEXCOORD0" 
                                                      OpDecorate %9 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD1 Location 11 
                                                      OpDecorate %20 RelaxedPrecision 
                                                      OpDecorate %21 RelaxedPrecision 
                                                      OpDecorate %23 RelaxedPrecision 
                                                      OpDecorate %24 RelaxedPrecision 
                                                      OpDecorate %27 RelaxedPrecision 
                                                      OpMemberDecorate %29 0 RelaxedPrecision 
                                                      OpMemberDecorate %29 0 Offset 29 
                                                      OpMemberDecorate %29 1 RelaxedPrecision 
                                                      OpMemberDecorate %29 1 Offset 29 
                                                      OpMemberDecorate %29 2 RelaxedPrecision 
                                                      OpMemberDecorate %29 2 Offset 29 
                                                      OpMemberDecorate %29 3 RelaxedPrecision 
                                                      OpMemberDecorate %29 3 Offset 29 
                                                      OpMemberDecorate %29 4 RelaxedPrecision 
                                                      OpMemberDecorate %29 4 Offset 29 
                                                      OpMemberDecorate %29 5 RelaxedPrecision 
                                                      OpMemberDecorate %29 5 Offset 29 
                                                      OpMemberDecorate %29 6 RelaxedPrecision 
                                                      OpMemberDecorate %29 6 Offset 29 
                                                      OpDecorate %29 Block 
                                                      OpDecorate %31 DescriptorSet 31 
                                                      OpDecorate %31 Binding 31 
                                                      OpDecorate %36 RelaxedPrecision 
                                                      OpDecorate %37 RelaxedPrecision 
                                                      OpDecorate %38 RelaxedPrecision 
                                                      OpDecorate %41 RelaxedPrecision 
                                                      OpDecorate %43 RelaxedPrecision 
                                                      OpDecorate %45 RelaxedPrecision 
                                                      OpDecorate %49 RelaxedPrecision 
                                                      OpDecorate %50 RelaxedPrecision 
                                                      OpDecorate %52 RelaxedPrecision 
                                                      OpDecorate %55 RelaxedPrecision 
                                                      OpDecorate %56 RelaxedPrecision 
                                                      OpDecorate %59 RelaxedPrecision 
                                                      OpDecorate %60 RelaxedPrecision 
                                                      OpDecorate %62 RelaxedPrecision 
                                                      OpDecorate %63 RelaxedPrecision 
                                                      OpDecorate %65 RelaxedPrecision 
                                                      OpDecorate %67 RelaxedPrecision 
                                                      OpDecorate %68 RelaxedPrecision 
                                                      OpDecorate %70 RelaxedPrecision 
                                                      OpDecorate %71 RelaxedPrecision 
                                                      OpDecorate %73 RelaxedPrecision 
                                                      OpDecorate %74 RelaxedPrecision 
                                                      OpDecorate %75 RelaxedPrecision 
                                                      OpDecorate %76 RelaxedPrecision 
                                                      OpDecorate %80 RelaxedPrecision 
                                                      OpDecorate %81 RelaxedPrecision 
                                                      OpDecorate %84 RelaxedPrecision 
                                                      OpDecorate %86 RelaxedPrecision 
                                                      OpDecorate %87 RelaxedPrecision 
                                                      OpDecorate %90 RelaxedPrecision 
                                                      OpDecorate %91 RelaxedPrecision 
                                                      OpDecorate %94 RelaxedPrecision 
                                                      OpDecorate %96 RelaxedPrecision 
                                                      OpDecorate %98 RelaxedPrecision 
                                                      OpDecorate %101 RelaxedPrecision 
                                                      OpDecorate %103 RelaxedPrecision 
                                                      OpDecorate %104 RelaxedPrecision 
                                                      OpDecorate %107 RelaxedPrecision 
                                                      OpDecorate %109 RelaxedPrecision 
                                                      OpDecorate %110 RelaxedPrecision 
                                                      OpDecorate %114 RelaxedPrecision 
                                                      OpDecorate %115 RelaxedPrecision 
                                                      OpDecorate %116 RelaxedPrecision 
                                                      OpDecorate %119 RelaxedPrecision 
                                                      OpDecorate %120 RelaxedPrecision 
                                                      OpDecorate %121 RelaxedPrecision 
                                                      OpDecorate %123 RelaxedPrecision 
                                                      OpDecorate %124 RelaxedPrecision 
                                                      OpDecorate %125 RelaxedPrecision 
                                                      OpDecorate %126 RelaxedPrecision 
                                                      OpDecorate %128 RelaxedPrecision 
                                                      OpDecorate %129 RelaxedPrecision 
                                                      OpDecorate %130 RelaxedPrecision 
                                                      OpDecorate %131 RelaxedPrecision 
                                                      OpDecorate %132 RelaxedPrecision 
                                                      OpDecorate %133 RelaxedPrecision 
                                                      OpDecorate %135 RelaxedPrecision 
                                                      OpDecorate %136 RelaxedPrecision 
                                                      OpDecorate %137 RelaxedPrecision 
                                                      OpDecorate %138 RelaxedPrecision 
                                                      OpDecorate %139 RelaxedPrecision 
                                                      OpDecorate %140 RelaxedPrecision 
                                                      OpDecorate %141 RelaxedPrecision 
                                                      OpDecorate %142 RelaxedPrecision 
                                                      OpDecorate %143 RelaxedPrecision 
                                                      OpDecorate %145 RelaxedPrecision 
                                                      OpDecorate %148 RelaxedPrecision 
                                                      OpDecorate %148 DescriptorSet 148 
                                                      OpDecorate %148 Binding 148 
                                                      OpDecorate %149 RelaxedPrecision 
                                                      OpDecorate %152 RelaxedPrecision 
                                                      OpDecorate %152 DescriptorSet 152 
                                                      OpDecorate %152 Binding 152 
                                                      OpDecorate %153 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD0 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD0 Location 158 
                                                      OpDecorate %159 RelaxedPrecision 
                                                      OpDecorate %160 RelaxedPrecision 
                                                      OpDecorate %161 RelaxedPrecision 
                                                      OpDecorate %162 RelaxedPrecision 
                                                      OpDecorate %163 RelaxedPrecision 
                                                      OpDecorate %166 RelaxedPrecision 
                                                      OpDecorate %167 RelaxedPrecision 
                                                      OpDecorate %168 RelaxedPrecision 
                                                      OpDecorate %170 RelaxedPrecision 
                                                      OpDecorate %170 Location 170 
                                                      OpDecorate %173 RelaxedPrecision 
                                                      OpDecorate %175 RelaxedPrecision 
                                                      OpDecorate %176 RelaxedPrecision 
                                                      OpDecorate %179 RelaxedPrecision 
                                                      OpDecorate %182 RelaxedPrecision 
                                                      OpDecorate %183 RelaxedPrecision 
                                                      OpDecorate %184 RelaxedPrecision 
                                                      OpDecorate %185 RelaxedPrecision 
                                                      OpDecorate %186 RelaxedPrecision 
                                                      OpDecorate %187 RelaxedPrecision 
                                               %2 = OpTypeVoid 
                                               %3 = OpTypeFunction %2 
                                               %6 = OpTypeFloat 32 
                                               %7 = OpTypeVector %6 3 
                                               %8 = OpTypePointer Private %7 
                                Private f32_3* %9 = OpVariable Private 
                                              %10 = OpTypePointer Input %7 
                        Input f32_3* vs_TEXCOORD1 = OpVariable Input 
                                              %15 = OpTypeInt 32 0 
                                          u32 %16 = OpConstant 0 
                                              %17 = OpTypePointer Private %6 
                                              %28 = OpTypeVector %6 4 
                                              %29 = OpTypeStruct %28 %28 %28 %28 %28 %6 %6 
                                              %30 = OpTypePointer Uniform %29 
Uniform struct {f32_4; f32_4; f32_4; f32_4; f32_4; f32; f32;}* %31 = OpVariable Uniform 
                                              %32 = OpTypeInt 32 1 
                                          i32 %33 = OpConstant 0 
                                              %34 = OpTypePointer Uniform %28 
                                          f32 %42 = OpConstant 3.674022E-40 
                               Private f32_3* %45 = OpVariable Private 
                                          i32 %46 = OpConstant 6 
                                              %47 = OpTypePointer Uniform %6 
                                          f32 %51 = OpConstant 3.674022E-40 
                                          i32 %53 = OpConstant 5 
                                 Private f32* %65 = OpVariable Private 
                                          f32 %78 = OpConstant 3.674022E-40 
                                          f32 %95 = OpConstant 3.674022E-40 
                                          f32 %97 = OpConstant 3.674022E-40 
                                         i32 %112 = OpConstant 3 
                                         i32 %117 = OpConstant 4 
                              Private f32_3* %131 = OpVariable Private 
                                             %144 = OpTypePointer Private %28 
                              Private f32_4* %145 = OpVariable Private 
                                             %146 = OpTypeImage %6 Dim2D 0 0 0 1 Unknown 
                                             %147 = OpTypePointer UniformConstant %146 
        UniformConstant read_only Texture2D* %148 = OpVariable UniformConstant 
                                             %150 = OpTypeSampler 
                                             %151 = OpTypePointer UniformConstant %150 
                    UniformConstant sampler* %152 = OpVariable UniformConstant 
                                             %154 = OpTypeSampledImage %146 
                                             %156 = OpTypeVector %6 2 
                                             %157 = OpTypePointer Input %156 
                        Input f32_2* vs_TEXCOORD0 = OpVariable Input 
                              Private f32_3* %161 = OpVariable Private 
                                         i32 %164 = OpConstant 2 
                                             %169 = OpTypePointer Output %28 
                               Output f32_4* %170 = OpVariable Output 
                                         u32 %171 = OpConstant 3 
                                             %177 = OpTypePointer Output %6 
                                         i32 %180 = OpConstant 1 
                                          void %4 = OpFunction None %3 
                                               %5 = OpLabel 
                                        f32_3 %12 = OpLoad vs_TEXCOORD1 
                                        f32_3 %13 = OpLoad vs_TEXCOORD1 
                                          f32 %14 = OpDot %12 %13 
                                 Private f32* %18 = OpAccessChain %9 %16 
                                                      OpStore %18 %14 
                                 Private f32* %19 = OpAccessChain %9 %16 
                                          f32 %20 = OpLoad %19 
                                          f32 %21 = OpExtInst %1 32 %20 
                                 Private f32* %22 = OpAccessChain %9 %16 
                                                      OpStore %22 %21 
                                        f32_3 %23 = OpLoad %9 
                                        f32_3 %24 = OpVectorShuffle %23 %23 0 0 0 
                                        f32_3 %25 = OpLoad vs_TEXCOORD1 
                                        f32_3 %26 = OpFMul %24 %25 
                                                      OpStore %9 %26 
                                        f32_3 %27 = OpLoad %9 
                               Uniform f32_4* %35 = OpAccessChain %31 %33 
                                        f32_4 %36 = OpLoad %35 
                                        f32_3 %37 = OpVectorShuffle %36 %36 0 1 2 
                                          f32 %38 = OpDot %27 %37 
                                 Private f32* %39 = OpAccessChain %9 %16 
                                                      OpStore %39 %38 
                                 Private f32* %40 = OpAccessChain %9 %16 
                                          f32 %41 = OpLoad %40 
                                          f32 %43 = OpExtInst %1 40 %41 %42 
                                 Private f32* %44 = OpAccessChain %9 %16 
                                                      OpStore %44 %43 
                                 Uniform f32* %48 = OpAccessChain %31 %46 
                                          f32 %49 = OpLoad %48 
                                          f32 %50 = OpFNegate %49 
                                          f32 %52 = OpFMul %50 %51 
                                 Uniform f32* %54 = OpAccessChain %31 %53 
                                          f32 %55 = OpLoad %54 
                                          f32 %56 = OpFAdd %52 %55 
                                 Private f32* %57 = OpAccessChain %45 %16 
                                                      OpStore %57 %56 
                                 Private f32* %58 = OpAccessChain %45 %16 
                                          f32 %59 = OpLoad %58 
                                          f32 %60 = OpFNegate %59 
                                 Private f32* %61 = OpAccessChain %9 %16 
                                          f32 %62 = OpLoad %61 
                                          f32 %63 = OpFAdd %60 %62 
                                 Private f32* %64 = OpAccessChain %9 %16 
                                                      OpStore %64 %63 
                                 Uniform f32* %66 = OpAccessChain %31 %46 
                                          f32 %67 = OpLoad %66 
                                          f32 %68 = OpFMul %67 %51 
                                 Uniform f32* %69 = OpAccessChain %31 %53 
                                          f32 %70 = OpLoad %69 
                                          f32 %71 = OpFAdd %68 %70 
                                                      OpStore %65 %71 
                                 Private f32* %72 = OpAccessChain %45 %16 
                                          f32 %73 = OpLoad %72 
                                          f32 %74 = OpFNegate %73 
                                          f32 %75 = OpLoad %65 
                                          f32 %76 = OpFAdd %74 %75 
                                 Private f32* %77 = OpAccessChain %45 %16 
                                                      OpStore %77 %76 
                                 Private f32* %79 = OpAccessChain %45 %16 
                                          f32 %80 = OpLoad %79 
                                          f32 %81 = OpFDiv %78 %80 
                                 Private f32* %82 = OpAccessChain %45 %16 
                                                      OpStore %82 %81 
                                 Private f32* %83 = OpAccessChain %45 %16 
                                          f32 %84 = OpLoad %83 
                                 Private f32* %85 = OpAccessChain %9 %16 
                                          f32 %86 = OpLoad %85 
                                          f32 %87 = OpFMul %84 %86 
                                 Private f32* %88 = OpAccessChain %9 %16 
                                                      OpStore %88 %87 
                                 Private f32* %89 = OpAccessChain %9 %16 
                                          f32 %90 = OpLoad %89 
                                          f32 %91 = OpExtInst %1 43 %90 %42 %78 
                                 Private f32* %92 = OpAccessChain %9 %16 
                                                      OpStore %92 %91 
                                 Private f32* %93 = OpAccessChain %9 %16 
                                          f32 %94 = OpLoad %93 
                                          f32 %96 = OpFMul %94 %95 
                                          f32 %98 = OpFAdd %96 %97 
                                 Private f32* %99 = OpAccessChain %45 %16 
                                                      OpStore %99 %98 
                                Private f32* %100 = OpAccessChain %9 %16 
                                         f32 %101 = OpLoad %100 
                                Private f32* %102 = OpAccessChain %9 %16 
                                         f32 %103 = OpLoad %102 
                                         f32 %104 = OpFMul %101 %103 
                                Private f32* %105 = OpAccessChain %9 %16 
                                                      OpStore %105 %104 
                                Private f32* %106 = OpAccessChain %9 %16 
                                         f32 %107 = OpLoad %106 
                                Private f32* %108 = OpAccessChain %45 %16 
                                         f32 %109 = OpLoad %108 
                                         f32 %110 = OpFMul %107 %109 
                                Private f32* %111 = OpAccessChain %9 %16 
                                                      OpStore %111 %110 
                              Uniform f32_4* %113 = OpAccessChain %31 %112 
                                       f32_4 %114 = OpLoad %113 
                                       f32_3 %115 = OpVectorShuffle %114 %114 0 1 2 
                                       f32_3 %116 = OpFNegate %115 
                              Uniform f32_4* %118 = OpAccessChain %31 %117 
                                       f32_4 %119 = OpLoad %118 
                                       f32_3 %120 = OpVectorShuffle %119 %119 0 1 2 
                                       f32_3 %121 = OpFAdd %116 %120 
                                                      OpStore %45 %121 
                              Uniform f32_4* %122 = OpAccessChain %31 %117 
                                       f32_4 %123 = OpLoad %122 
                                       f32_3 %124 = OpVectorShuffle %123 %123 3 3 3 
                                       f32_3 %125 = OpLoad %45 
                                       f32_3 %126 = OpFMul %124 %125 
                              Uniform f32_4* %127 = OpAccessChain %31 %112 
                                       f32_4 %128 = OpLoad %127 
                                       f32_3 %129 = OpVectorShuffle %128 %128 0 1 2 
                                       f32_3 %130 = OpFAdd %126 %129 
                                                      OpStore %45 %130 
                                       f32_3 %132 = OpLoad %45 
                                       f32_3 %133 = OpFNegate %132 
                              Uniform f32_4* %134 = OpAccessChain %31 %112 
                                       f32_4 %135 = OpLoad %134 
                                       f32_3 %136 = OpVectorShuffle %135 %135 0 1 2 
                                       f32_3 %137 = OpFAdd %133 %136 
                                                      OpStore %131 %137 
                                       f32_3 %138 = OpLoad %9 
                                       f32_3 %139 = OpVectorShuffle %138 %138 0 0 0 
                                       f32_3 %140 = OpLoad %131 
                                       f32_3 %141 = OpFMul %139 %140 
                                       f32_3 %142 = OpLoad %45 
                                       f32_3 %143 = OpFAdd %141 %142 
                                                      OpStore %9 %143 
                         read_only Texture2D %149 = OpLoad %148 
                                     sampler %153 = OpLoad %152 
                  read_only Texture2DSampled %155 = OpSampledImage %149 %153 
                                       f32_2 %159 = OpLoad vs_TEXCOORD0 
                                       f32_4 %160 = OpImageSampleImplicitLod %155 %159 
                                                      OpStore %145 %160 
                                       f32_4 %162 = OpLoad %145 
                                       f32_3 %163 = OpVectorShuffle %162 %162 0 1 2 
                              Uniform f32_4* %165 = OpAccessChain %31 %164 
                                       f32_4 %166 = OpLoad %165 
                                       f32_3 %167 = OpVectorShuffle %166 %166 0 1 2 
                                       f32_3 %168 = OpFMul %163 %167 
                                                      OpStore %161 %168 
                                Private f32* %172 = OpAccessChain %145 %171 
                                         f32 %173 = OpLoad %172 
                                Uniform f32* %174 = OpAccessChain %31 %164 %171 
                                         f32 %175 = OpLoad %174 
                                         f32 %176 = OpFMul %173 %175 
                                 Output f32* %178 = OpAccessChain %170 %171 
                                                      OpStore %178 %176 
                                       f32_3 %179 = OpLoad %161 
                              Uniform f32_4* %181 = OpAccessChain %31 %180 
                                       f32_4 %182 = OpLoad %181 
                                       f32_3 %183 = OpVectorShuffle %182 %182 0 1 2 
                                       f32_3 %184 = OpFMul %179 %183 
                                                      OpStore %161 %184 
                                       f32_3 %185 = OpLoad %9 
                                       f32_3 %186 = OpLoad %161 
                                       f32_3 %187 = OpFMul %185 %186 
                                       f32_4 %188 = OpLoad %170 
                                       f32_4 %189 = OpVectorShuffle %188 %187 4 5 6 3 
                                                      OpStore %170 %189 
                                                      OpReturn
                                                      OpFunctionEnd
"
}
SubProgram "vulkan hw_tier01 " {
Keywords { "DIRECTIONAL" }
"; SPIR-V
; Version: 1.0
; Generator: Khronos Glslang Reference Front End; 6
; Bound: 160
; Schema: 0
                                                      OpCapability Shader 
                                               %1 = OpExtInstImport "GLSL.std.450" 
                                                      OpMemoryModel Logical GLSL450 
                                                      OpEntryPoint Vertex %4 "main" %11 %52 %85 %95 %110 %114 %144 %150 %153 
                                                      OpName vs_TEXCOORD2 "vs_TEXCOORD2" 
                                                      OpName vs_TEXCOORD0 "vs_TEXCOORD0" 
                                                      OpName vs_TEXCOORD1 "vs_TEXCOORD1" 
                                                      OpName vs_TEXCOORD5 "vs_TEXCOORD5" 
                                                      OpName vs_TEXCOORD6 "vs_TEXCOORD6" 
                                                      OpDecorate %11 Location 11 
                                                      OpDecorate %16 ArrayStride 16 
                                                      OpDecorate %17 ArrayStride 17 
                                                      OpDecorate %18 ArrayStride 18 
                                                      OpMemberDecorate %19 0 Offset 19 
                                                      OpMemberDecorate %19 1 Offset 19 
                                                      OpMemberDecorate %19 2 Offset 19 
                                                      OpMemberDecorate %19 3 Offset 19 
                                                      OpDecorate %19 Block 
                                                      OpDecorate %21 DescriptorSet 21 
                                                      OpDecorate %21 Binding 21 
                                                      OpDecorate vs_TEXCOORD2 Location 52 
                                                      OpMemberDecorate %83 0 BuiltIn 83 
                                                      OpMemberDecorate %83 1 BuiltIn 83 
                                                      OpMemberDecorate %83 2 BuiltIn 83 
                                                      OpDecorate %83 Block 
                                                      OpDecorate %95 Location 95 
                                                      OpDecorate vs_TEXCOORD0 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD0 Location 110 
                                                      OpDecorate %114 Location 114 
                                                      OpDecorate vs_TEXCOORD1 Location 144 
                                                      OpDecorate vs_TEXCOORD5 Location 150 
                                                      OpDecorate vs_TEXCOORD6 Location 153 
                                               %2 = OpTypeVoid 
                                               %3 = OpTypeFunction %2 
                                               %6 = OpTypeFloat 32 
                                               %7 = OpTypeVector %6 4 
                                               %8 = OpTypePointer Private %7 
                                Private f32_4* %9 = OpVariable Private 
                                              %10 = OpTypePointer Input %7 
                                 Input f32_4* %11 = OpVariable Input 
                                              %14 = OpTypeInt 32 0 
                                          u32 %15 = OpConstant 4 
                                              %16 = OpTypeArray %7 %15 
                                              %17 = OpTypeArray %7 %15 
                                              %18 = OpTypeArray %7 %15 
                                              %19 = OpTypeStruct %16 %17 %18 %7 
                                              %20 = OpTypePointer Uniform %19 
Uniform struct {f32_4[4]; f32_4[4]; f32_4[4]; f32_4;}* %21 = OpVariable Uniform 
                                              %22 = OpTypeInt 32 1 
                                          i32 %23 = OpConstant 0 
                                          i32 %24 = OpConstant 1 
                                              %25 = OpTypePointer Uniform %7 
                                          i32 %36 = OpConstant 2 
                               Private f32_4* %44 = OpVariable Private 
                                          i32 %46 = OpConstant 3 
                                              %50 = OpTypeVector %6 3 
                                              %51 = OpTypePointer Output %50 
                       Output f32_3* vs_TEXCOORD2 = OpVariable Output 
                                          u32 %81 = OpConstant 1 
                                              %82 = OpTypeArray %6 %81 
                                              %83 = OpTypeStruct %7 %6 %82 
                                              %84 = OpTypePointer Output %83 
         Output struct {f32_4; f32; f32[1];}* %85 = OpVariable Output 
                                              %93 = OpTypePointer Output %7 
                                 Input f32_4* %95 = OpVariable Input 
                                              %96 = OpTypeVector %6 2 
                                             %109 = OpTypePointer Output %96 
                       Output f32_2* vs_TEXCOORD0 = OpVariable Output 
                                             %113 = OpTypePointer Input %50 
                                Input f32_3* %114 = OpVariable Input 
                                         u32 %120 = OpConstant 0 
                                             %121 = OpTypePointer Private %6 
                                         u32 %134 = OpConstant 2 
                                Private f32* %136 = OpVariable Private 
                       Output f32_3* vs_TEXCOORD1 = OpVariable Output 
                       Output f32_4* vs_TEXCOORD5 = OpVariable Output 
                                         f32 %151 = OpConstant 3.674022E-40 
                                       f32_4 %152 = OpConstantComposite %151 %151 %151 %151 
                       Output f32_4* vs_TEXCOORD6 = OpVariable Output 
                                             %154 = OpTypePointer Output %6 
                                          void %4 = OpFunction None %3 
                                               %5 = OpLabel 
                                        f32_4 %12 = OpLoad %11 
                                        f32_4 %13 = OpVectorShuffle %12 %12 1 1 1 1 
                               Uniform f32_4* %26 = OpAccessChain %21 %23 %24 
                                        f32_4 %27 = OpLoad %26 
                                        f32_4 %28 = OpFMul %13 %27 
                                                      OpStore %9 %28 
                               Uniform f32_4* %29 = OpAccessChain %21 %23 %23 
                                        f32_4 %30 = OpLoad %29 
                                        f32_4 %31 = OpLoad %11 
                                        f32_4 %32 = OpVectorShuffle %31 %31 0 0 0 0 
                                        f32_4 %33 = OpFMul %30 %32 
                                        f32_4 %34 = OpLoad %9 
                                        f32_4 %35 = OpFAdd %33 %34 
                                                      OpStore %9 %35 
                               Uniform f32_4* %37 = OpAccessChain %21 %23 %36 
                                        f32_4 %38 = OpLoad %37 
                                        f32_4 %39 = OpLoad %11 
                                        f32_4 %40 = OpVectorShuffle %39 %39 2 2 2 2 
                                        f32_4 %41 = OpFMul %38 %40 
                                        f32_4 %42 = OpLoad %9 
                                        f32_4 %43 = OpFAdd %41 %42 
                                                      OpStore %9 %43 
                                        f32_4 %45 = OpLoad %9 
                               Uniform f32_4* %47 = OpAccessChain %21 %23 %46 
                                        f32_4 %48 = OpLoad %47 
                                        f32_4 %49 = OpFAdd %45 %48 
                                                      OpStore %44 %49 
                               Uniform f32_4* %53 = OpAccessChain %21 %23 %46 
                                        f32_4 %54 = OpLoad %53 
                                        f32_3 %55 = OpVectorShuffle %54 %54 0 1 2 
                                        f32_4 %56 = OpLoad %11 
                                        f32_3 %57 = OpVectorShuffle %56 %56 3 3 3 
                                        f32_3 %58 = OpFMul %55 %57 
                                        f32_4 %59 = OpLoad %9 
                                        f32_3 %60 = OpVectorShuffle %59 %59 0 1 2 
                                        f32_3 %61 = OpFAdd %58 %60 
                                                      OpStore vs_TEXCOORD2 %61 
                                        f32_4 %62 = OpLoad %44 
                                        f32_4 %63 = OpVectorShuffle %62 %62 1 1 1 1 
                               Uniform f32_4* %64 = OpAccessChain %21 %36 %24 
                                        f32_4 %65 = OpLoad %64 
                                        f32_4 %66 = OpFMul %63 %65 
                                                      OpStore %9 %66 
                               Uniform f32_4* %67 = OpAccessChain %21 %36 %23 
                                        f32_4 %68 = OpLoad %67 
                                        f32_4 %69 = OpLoad %44 
                                        f32_4 %70 = OpVectorShuffle %69 %69 0 0 0 0 
                                        f32_4 %71 = OpFMul %68 %70 
                                        f32_4 %72 = OpLoad %9 
                                        f32_4 %73 = OpFAdd %71 %72 
                                                      OpStore %9 %73 
                               Uniform f32_4* %74 = OpAccessChain %21 %36 %36 
                                        f32_4 %75 = OpLoad %74 
                                        f32_4 %76 = OpLoad %44 
                                        f32_4 %77 = OpVectorShuffle %76 %76 2 2 2 2 
                                        f32_4 %78 = OpFMul %75 %77 
                                        f32_4 %79 = OpLoad %9 
                                        f32_4 %80 = OpFAdd %78 %79 
                                                      OpStore %9 %80 
                               Uniform f32_4* %86 = OpAccessChain %21 %36 %46 
                                        f32_4 %87 = OpLoad %86 
                                        f32_4 %88 = OpLoad %44 
                                        f32_4 %89 = OpVectorShuffle %88 %88 3 3 3 3 
                                        f32_4 %90 = OpFMul %87 %89 
                                        f32_4 %91 = OpLoad %9 
                                        f32_4 %92 = OpFAdd %90 %91 
                                Output f32_4* %94 = OpAccessChain %85 %23 
                                                      OpStore %94 %92 
                                        f32_4 %97 = OpLoad %95 
                                        f32_2 %98 = OpVectorShuffle %97 %97 0 1 
                               Uniform f32_4* %99 = OpAccessChain %21 %46 
                                       f32_4 %100 = OpLoad %99 
                                       f32_2 %101 = OpVectorShuffle %100 %100 0 1 
                                       f32_2 %102 = OpFMul %98 %101 
                              Uniform f32_4* %103 = OpAccessChain %21 %46 
                                       f32_4 %104 = OpLoad %103 
                                       f32_2 %105 = OpVectorShuffle %104 %104 2 3 
                                       f32_2 %106 = OpFAdd %102 %105 
                                       f32_4 %107 = OpLoad %9 
                                       f32_4 %108 = OpVectorShuffle %107 %106 4 5 2 3 
                                                      OpStore %9 %108 
                                       f32_4 %111 = OpLoad %9 
                                       f32_2 %112 = OpVectorShuffle %111 %111 0 1 
                                                      OpStore vs_TEXCOORD0 %112 
                                       f32_3 %115 = OpLoad %114 
                              Uniform f32_4* %116 = OpAccessChain %21 %24 %23 
                                       f32_4 %117 = OpLoad %116 
                                       f32_3 %118 = OpVectorShuffle %117 %117 0 1 2 
                                         f32 %119 = OpDot %115 %118 
                                Private f32* %122 = OpAccessChain %9 %120 
                                                      OpStore %122 %119 
                                       f32_3 %123 = OpLoad %114 
                              Uniform f32_4* %124 = OpAccessChain %21 %24 %24 
                                       f32_4 %125 = OpLoad %124 
                                       f32_3 %126 = OpVectorShuffle %125 %125 0 1 2 
                                         f32 %127 = OpDot %123 %126 
                                Private f32* %128 = OpAccessChain %9 %81 
                                                      OpStore %128 %127 
                                       f32_3 %129 = OpLoad %114 
                              Uniform f32_4* %130 = OpAccessChain %21 %24 %36 
                                       f32_4 %131 = OpLoad %130 
                                       f32_3 %132 = OpVectorShuffle %131 %131 0 1 2 
                                         f32 %133 = OpDot %129 %132 
                                Private f32* %135 = OpAccessChain %9 %134 
                                                      OpStore %135 %133 
                                       f32_4 %137 = OpLoad %9 
                                       f32_3 %138 = OpVectorShuffle %137 %137 0 1 2 
                                       f32_4 %139 = OpLoad %9 
                                       f32_3 %140 = OpVectorShuffle %139 %139 0 1 2 
                                         f32 %141 = OpDot %138 %140 
                                                      OpStore %136 %141 
                                         f32 %142 = OpLoad %136 
                                         f32 %143 = OpExtInst %1 32 %142 
                                                      OpStore %136 %143 
                                         f32 %145 = OpLoad %136 
                                       f32_3 %146 = OpCompositeConstruct %145 %145 %145 
                                       f32_4 %147 = OpLoad %9 
                                       f32_3 %148 = OpVectorShuffle %147 %147 0 1 2 
                                       f32_3 %149 = OpFMul %146 %148 
                                                      OpStore vs_TEXCOORD1 %149 
                                                      OpStore vs_TEXCOORD5 %152 
                                                      OpStore vs_TEXCOORD6 %152 
                                 Output f32* %155 = OpAccessChain %85 %23 %81 
                                         f32 %156 = OpLoad %155 
                                         f32 %157 = OpFNegate %156 
                                 Output f32* %158 = OpAccessChain %85 %23 %81 
                                                      OpStore %158 %157 
                                                      OpReturn
                                                      OpFunctionEnd
; SPIR-V
; Version: 1.0
; Generator: Khronos Glslang Reference Front End; 6
; Bound: 191
; Schema: 0
                                                      OpCapability Shader 
                                               %1 = OpExtInstImport "GLSL.std.450" 
                                                      OpMemoryModel Logical GLSL450 
                                                      OpEntryPoint Fragment %4 "main" %11 %158 %170 
                                                      OpExecutionMode %4 OriginUpperLeft 
                                                      OpName vs_TEXCOORD1 "vs_TEXCOORD1" 
                                                      OpName vs_TEXCOORD0 "vs_TEXCOORD0" 
                                                      OpDecorate %9 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD1 Location 11 
                                                      OpDecorate %20 RelaxedPrecision 
                                                      OpDecorate %21 RelaxedPrecision 
                                                      OpDecorate %23 RelaxedPrecision 
                                                      OpDecorate %24 RelaxedPrecision 
                                                      OpDecorate %27 RelaxedPrecision 
                                                      OpMemberDecorate %29 0 RelaxedPrecision 
                                                      OpMemberDecorate %29 0 Offset 29 
                                                      OpMemberDecorate %29 1 RelaxedPrecision 
                                                      OpMemberDecorate %29 1 Offset 29 
                                                      OpMemberDecorate %29 2 RelaxedPrecision 
                                                      OpMemberDecorate %29 2 Offset 29 
                                                      OpMemberDecorate %29 3 RelaxedPrecision 
                                                      OpMemberDecorate %29 3 Offset 29 
                                                      OpMemberDecorate %29 4 RelaxedPrecision 
                                                      OpMemberDecorate %29 4 Offset 29 
                                                      OpMemberDecorate %29 5 RelaxedPrecision 
                                                      OpMemberDecorate %29 5 Offset 29 
                                                      OpMemberDecorate %29 6 RelaxedPrecision 
                                                      OpMemberDecorate %29 6 Offset 29 
                                                      OpDecorate %29 Block 
                                                      OpDecorate %31 DescriptorSet 31 
                                                      OpDecorate %31 Binding 31 
                                                      OpDecorate %36 RelaxedPrecision 
                                                      OpDecorate %37 RelaxedPrecision 
                                                      OpDecorate %38 RelaxedPrecision 
                                                      OpDecorate %41 RelaxedPrecision 
                                                      OpDecorate %43 RelaxedPrecision 
                                                      OpDecorate %45 RelaxedPrecision 
                                                      OpDecorate %49 RelaxedPrecision 
                                                      OpDecorate %50 RelaxedPrecision 
                                                      OpDecorate %52 RelaxedPrecision 
                                                      OpDecorate %55 RelaxedPrecision 
                                                      OpDecorate %56 RelaxedPrecision 
                                                      OpDecorate %59 RelaxedPrecision 
                                                      OpDecorate %60 RelaxedPrecision 
                                                      OpDecorate %62 RelaxedPrecision 
                                                      OpDecorate %63 RelaxedPrecision 
                                                      OpDecorate %65 RelaxedPrecision 
                                                      OpDecorate %67 RelaxedPrecision 
                                                      OpDecorate %68 RelaxedPrecision 
                                                      OpDecorate %70 RelaxedPrecision 
                                                      OpDecorate %71 RelaxedPrecision 
                                                      OpDecorate %73 RelaxedPrecision 
                                                      OpDecorate %74 RelaxedPrecision 
                                                      OpDecorate %75 RelaxedPrecision 
                                                      OpDecorate %76 RelaxedPrecision 
                                                      OpDecorate %80 RelaxedPrecision 
                                                      OpDecorate %81 RelaxedPrecision 
                                                      OpDecorate %84 RelaxedPrecision 
                                                      OpDecorate %86 RelaxedPrecision 
                                                      OpDecorate %87 RelaxedPrecision 
                                                      OpDecorate %90 RelaxedPrecision 
                                                      OpDecorate %91 RelaxedPrecision 
                                                      OpDecorate %94 RelaxedPrecision 
                                                      OpDecorate %96 RelaxedPrecision 
                                                      OpDecorate %98 RelaxedPrecision 
                                                      OpDecorate %101 RelaxedPrecision 
                                                      OpDecorate %103 RelaxedPrecision 
                                                      OpDecorate %104 RelaxedPrecision 
                                                      OpDecorate %107 RelaxedPrecision 
                                                      OpDecorate %109 RelaxedPrecision 
                                                      OpDecorate %110 RelaxedPrecision 
                                                      OpDecorate %114 RelaxedPrecision 
                                                      OpDecorate %115 RelaxedPrecision 
                                                      OpDecorate %116 RelaxedPrecision 
                                                      OpDecorate %119 RelaxedPrecision 
                                                      OpDecorate %120 RelaxedPrecision 
                                                      OpDecorate %121 RelaxedPrecision 
                                                      OpDecorate %123 RelaxedPrecision 
                                                      OpDecorate %124 RelaxedPrecision 
                                                      OpDecorate %125 RelaxedPrecision 
                                                      OpDecorate %126 RelaxedPrecision 
                                                      OpDecorate %128 RelaxedPrecision 
                                                      OpDecorate %129 RelaxedPrecision 
                                                      OpDecorate %130 RelaxedPrecision 
                                                      OpDecorate %131 RelaxedPrecision 
                                                      OpDecorate %132 RelaxedPrecision 
                                                      OpDecorate %133 RelaxedPrecision 
                                                      OpDecorate %135 RelaxedPrecision 
                                                      OpDecorate %136 RelaxedPrecision 
                                                      OpDecorate %137 RelaxedPrecision 
                                                      OpDecorate %138 RelaxedPrecision 
                                                      OpDecorate %139 RelaxedPrecision 
                                                      OpDecorate %140 RelaxedPrecision 
                                                      OpDecorate %141 RelaxedPrecision 
                                                      OpDecorate %142 RelaxedPrecision 
                                                      OpDecorate %143 RelaxedPrecision 
                                                      OpDecorate %145 RelaxedPrecision 
                                                      OpDecorate %148 RelaxedPrecision 
                                                      OpDecorate %148 DescriptorSet 148 
                                                      OpDecorate %148 Binding 148 
                                                      OpDecorate %149 RelaxedPrecision 
                                                      OpDecorate %152 RelaxedPrecision 
                                                      OpDecorate %152 DescriptorSet 152 
                                                      OpDecorate %152 Binding 152 
                                                      OpDecorate %153 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD0 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD0 Location 158 
                                                      OpDecorate %159 RelaxedPrecision 
                                                      OpDecorate %160 RelaxedPrecision 
                                                      OpDecorate %161 RelaxedPrecision 
                                                      OpDecorate %162 RelaxedPrecision 
                                                      OpDecorate %163 RelaxedPrecision 
                                                      OpDecorate %166 RelaxedPrecision 
                                                      OpDecorate %167 RelaxedPrecision 
                                                      OpDecorate %168 RelaxedPrecision 
                                                      OpDecorate %170 RelaxedPrecision 
                                                      OpDecorate %170 Location 170 
                                                      OpDecorate %173 RelaxedPrecision 
                                                      OpDecorate %175 RelaxedPrecision 
                                                      OpDecorate %176 RelaxedPrecision 
                                                      OpDecorate %179 RelaxedPrecision 
                                                      OpDecorate %182 RelaxedPrecision 
                                                      OpDecorate %183 RelaxedPrecision 
                                                      OpDecorate %184 RelaxedPrecision 
                                                      OpDecorate %185 RelaxedPrecision 
                                                      OpDecorate %186 RelaxedPrecision 
                                                      OpDecorate %187 RelaxedPrecision 
                                               %2 = OpTypeVoid 
                                               %3 = OpTypeFunction %2 
                                               %6 = OpTypeFloat 32 
                                               %7 = OpTypeVector %6 3 
                                               %8 = OpTypePointer Private %7 
                                Private f32_3* %9 = OpVariable Private 
                                              %10 = OpTypePointer Input %7 
                        Input f32_3* vs_TEXCOORD1 = OpVariable Input 
                                              %15 = OpTypeInt 32 0 
                                          u32 %16 = OpConstant 0 
                                              %17 = OpTypePointer Private %6 
                                              %28 = OpTypeVector %6 4 
                                              %29 = OpTypeStruct %28 %28 %28 %28 %28 %6 %6 
                                              %30 = OpTypePointer Uniform %29 
Uniform struct {f32_4; f32_4; f32_4; f32_4; f32_4; f32; f32;}* %31 = OpVariable Uniform 
                                              %32 = OpTypeInt 32 1 
                                          i32 %33 = OpConstant 0 
                                              %34 = OpTypePointer Uniform %28 
                                          f32 %42 = OpConstant 3.674022E-40 
                               Private f32_3* %45 = OpVariable Private 
                                          i32 %46 = OpConstant 6 
                                              %47 = OpTypePointer Uniform %6 
                                          f32 %51 = OpConstant 3.674022E-40 
                                          i32 %53 = OpConstant 5 
                                 Private f32* %65 = OpVariable Private 
                                          f32 %78 = OpConstant 3.674022E-40 
                                          f32 %95 = OpConstant 3.674022E-40 
                                          f32 %97 = OpConstant 3.674022E-40 
                                         i32 %112 = OpConstant 3 
                                         i32 %117 = OpConstant 4 
                              Private f32_3* %131 = OpVariable Private 
                                             %144 = OpTypePointer Private %28 
                              Private f32_4* %145 = OpVariable Private 
                                             %146 = OpTypeImage %6 Dim2D 0 0 0 1 Unknown 
                                             %147 = OpTypePointer UniformConstant %146 
        UniformConstant read_only Texture2D* %148 = OpVariable UniformConstant 
                                             %150 = OpTypeSampler 
                                             %151 = OpTypePointer UniformConstant %150 
                    UniformConstant sampler* %152 = OpVariable UniformConstant 
                                             %154 = OpTypeSampledImage %146 
                                             %156 = OpTypeVector %6 2 
                                             %157 = OpTypePointer Input %156 
                        Input f32_2* vs_TEXCOORD0 = OpVariable Input 
                              Private f32_3* %161 = OpVariable Private 
                                         i32 %164 = OpConstant 2 
                                             %169 = OpTypePointer Output %28 
                               Output f32_4* %170 = OpVariable Output 
                                         u32 %171 = OpConstant 3 
                                             %177 = OpTypePointer Output %6 
                                         i32 %180 = OpConstant 1 
                                          void %4 = OpFunction None %3 
                                               %5 = OpLabel 
                                        f32_3 %12 = OpLoad vs_TEXCOORD1 
                                        f32_3 %13 = OpLoad vs_TEXCOORD1 
                                          f32 %14 = OpDot %12 %13 
                                 Private f32* %18 = OpAccessChain %9 %16 
                                                      OpStore %18 %14 
                                 Private f32* %19 = OpAccessChain %9 %16 
                                          f32 %20 = OpLoad %19 
                                          f32 %21 = OpExtInst %1 32 %20 
                                 Private f32* %22 = OpAccessChain %9 %16 
                                                      OpStore %22 %21 
                                        f32_3 %23 = OpLoad %9 
                                        f32_3 %24 = OpVectorShuffle %23 %23 0 0 0 
                                        f32_3 %25 = OpLoad vs_TEXCOORD1 
                                        f32_3 %26 = OpFMul %24 %25 
                                                      OpStore %9 %26 
                                        f32_3 %27 = OpLoad %9 
                               Uniform f32_4* %35 = OpAccessChain %31 %33 
                                        f32_4 %36 = OpLoad %35 
                                        f32_3 %37 = OpVectorShuffle %36 %36 0 1 2 
                                          f32 %38 = OpDot %27 %37 
                                 Private f32* %39 = OpAccessChain %9 %16 
                                                      OpStore %39 %38 
                                 Private f32* %40 = OpAccessChain %9 %16 
                                          f32 %41 = OpLoad %40 
                                          f32 %43 = OpExtInst %1 40 %41 %42 
                                 Private f32* %44 = OpAccessChain %9 %16 
                                                      OpStore %44 %43 
                                 Uniform f32* %48 = OpAccessChain %31 %46 
                                          f32 %49 = OpLoad %48 
                                          f32 %50 = OpFNegate %49 
                                          f32 %52 = OpFMul %50 %51 
                                 Uniform f32* %54 = OpAccessChain %31 %53 
                                          f32 %55 = OpLoad %54 
                                          f32 %56 = OpFAdd %52 %55 
                                 Private f32* %57 = OpAccessChain %45 %16 
                                                      OpStore %57 %56 
                                 Private f32* %58 = OpAccessChain %45 %16 
                                          f32 %59 = OpLoad %58 
                                          f32 %60 = OpFNegate %59 
                                 Private f32* %61 = OpAccessChain %9 %16 
                                          f32 %62 = OpLoad %61 
                                          f32 %63 = OpFAdd %60 %62 
                                 Private f32* %64 = OpAccessChain %9 %16 
                                                      OpStore %64 %63 
                                 Uniform f32* %66 = OpAccessChain %31 %46 
                                          f32 %67 = OpLoad %66 
                                          f32 %68 = OpFMul %67 %51 
                                 Uniform f32* %69 = OpAccessChain %31 %53 
                                          f32 %70 = OpLoad %69 
                                          f32 %71 = OpFAdd %68 %70 
                                                      OpStore %65 %71 
                                 Private f32* %72 = OpAccessChain %45 %16 
                                          f32 %73 = OpLoad %72 
                                          f32 %74 = OpFNegate %73 
                                          f32 %75 = OpLoad %65 
                                          f32 %76 = OpFAdd %74 %75 
                                 Private f32* %77 = OpAccessChain %45 %16 
                                                      OpStore %77 %76 
                                 Private f32* %79 = OpAccessChain %45 %16 
                                          f32 %80 = OpLoad %79 
                                          f32 %81 = OpFDiv %78 %80 
                                 Private f32* %82 = OpAccessChain %45 %16 
                                                      OpStore %82 %81 
                                 Private f32* %83 = OpAccessChain %45 %16 
                                          f32 %84 = OpLoad %83 
                                 Private f32* %85 = OpAccessChain %9 %16 
                                          f32 %86 = OpLoad %85 
                                          f32 %87 = OpFMul %84 %86 
                                 Private f32* %88 = OpAccessChain %9 %16 
                                                      OpStore %88 %87 
                                 Private f32* %89 = OpAccessChain %9 %16 
                                          f32 %90 = OpLoad %89 
                                          f32 %91 = OpExtInst %1 43 %90 %42 %78 
                                 Private f32* %92 = OpAccessChain %9 %16 
                                                      OpStore %92 %91 
                                 Private f32* %93 = OpAccessChain %9 %16 
                                          f32 %94 = OpLoad %93 
                                          f32 %96 = OpFMul %94 %95 
                                          f32 %98 = OpFAdd %96 %97 
                                 Private f32* %99 = OpAccessChain %45 %16 
                                                      OpStore %99 %98 
                                Private f32* %100 = OpAccessChain %9 %16 
                                         f32 %101 = OpLoad %100 
                                Private f32* %102 = OpAccessChain %9 %16 
                                         f32 %103 = OpLoad %102 
                                         f32 %104 = OpFMul %101 %103 
                                Private f32* %105 = OpAccessChain %9 %16 
                                                      OpStore %105 %104 
                                Private f32* %106 = OpAccessChain %9 %16 
                                         f32 %107 = OpLoad %106 
                                Private f32* %108 = OpAccessChain %45 %16 
                                         f32 %109 = OpLoad %108 
                                         f32 %110 = OpFMul %107 %109 
                                Private f32* %111 = OpAccessChain %9 %16 
                                                      OpStore %111 %110 
                              Uniform f32_4* %113 = OpAccessChain %31 %112 
                                       f32_4 %114 = OpLoad %113 
                                       f32_3 %115 = OpVectorShuffle %114 %114 0 1 2 
                                       f32_3 %116 = OpFNegate %115 
                              Uniform f32_4* %118 = OpAccessChain %31 %117 
                                       f32_4 %119 = OpLoad %118 
                                       f32_3 %120 = OpVectorShuffle %119 %119 0 1 2 
                                       f32_3 %121 = OpFAdd %116 %120 
                                                      OpStore %45 %121 
                              Uniform f32_4* %122 = OpAccessChain %31 %117 
                                       f32_4 %123 = OpLoad %122 
                                       f32_3 %124 = OpVectorShuffle %123 %123 3 3 3 
                                       f32_3 %125 = OpLoad %45 
                                       f32_3 %126 = OpFMul %124 %125 
                              Uniform f32_4* %127 = OpAccessChain %31 %112 
                                       f32_4 %128 = OpLoad %127 
                                       f32_3 %129 = OpVectorShuffle %128 %128 0 1 2 
                                       f32_3 %130 = OpFAdd %126 %129 
                                                      OpStore %45 %130 
                                       f32_3 %132 = OpLoad %45 
                                       f32_3 %133 = OpFNegate %132 
                              Uniform f32_4* %134 = OpAccessChain %31 %112 
                                       f32_4 %135 = OpLoad %134 
                                       f32_3 %136 = OpVectorShuffle %135 %135 0 1 2 
                                       f32_3 %137 = OpFAdd %133 %136 
                                                      OpStore %131 %137 
                                       f32_3 %138 = OpLoad %9 
                                       f32_3 %139 = OpVectorShuffle %138 %138 0 0 0 
                                       f32_3 %140 = OpLoad %131 
                                       f32_3 %141 = OpFMul %139 %140 
                                       f32_3 %142 = OpLoad %45 
                                       f32_3 %143 = OpFAdd %141 %142 
                                                      OpStore %9 %143 
                         read_only Texture2D %149 = OpLoad %148 
                                     sampler %153 = OpLoad %152 
                  read_only Texture2DSampled %155 = OpSampledImage %149 %153 
                                       f32_2 %159 = OpLoad vs_TEXCOORD0 
                                       f32_4 %160 = OpImageSampleImplicitLod %155 %159 
                                                      OpStore %145 %160 
                                       f32_4 %162 = OpLoad %145 
                                       f32_3 %163 = OpVectorShuffle %162 %162 0 1 2 
                              Uniform f32_4* %165 = OpAccessChain %31 %164 
                                       f32_4 %166 = OpLoad %165 
                                       f32_3 %167 = OpVectorShuffle %166 %166 0 1 2 
                                       f32_3 %168 = OpFMul %163 %167 
                                                      OpStore %161 %168 
                                Private f32* %172 = OpAccessChain %145 %171 
                                         f32 %173 = OpLoad %172 
                                Uniform f32* %174 = OpAccessChain %31 %164 %171 
                                         f32 %175 = OpLoad %174 
                                         f32 %176 = OpFMul %173 %175 
                                 Output f32* %178 = OpAccessChain %170 %171 
                                                      OpStore %178 %176 
                                       f32_3 %179 = OpLoad %161 
                              Uniform f32_4* %181 = OpAccessChain %31 %180 
                                       f32_4 %182 = OpLoad %181 
                                       f32_3 %183 = OpVectorShuffle %182 %182 0 1 2 
                                       f32_3 %184 = OpFMul %179 %183 
                                                      OpStore %161 %184 
                                       f32_3 %185 = OpLoad %9 
                                       f32_3 %186 = OpLoad %161 
                                       f32_3 %187 = OpFMul %185 %186 
                                       f32_4 %188 = OpLoad %170 
                                       f32_4 %189 = OpVectorShuffle %188 %187 4 5 6 3 
                                                      OpStore %170 %189 
                                                      OpReturn
                                                      OpFunctionEnd
"
}
SubProgram "vulkan hw_tier02 " {
Keywords { "DIRECTIONAL" }
"; SPIR-V
; Version: 1.0
; Generator: Khronos Glslang Reference Front End; 6
; Bound: 160
; Schema: 0
                                                      OpCapability Shader 
                                               %1 = OpExtInstImport "GLSL.std.450" 
                                                      OpMemoryModel Logical GLSL450 
                                                      OpEntryPoint Vertex %4 "main" %11 %52 %85 %95 %110 %114 %144 %150 %153 
                                                      OpName vs_TEXCOORD2 "vs_TEXCOORD2" 
                                                      OpName vs_TEXCOORD0 "vs_TEXCOORD0" 
                                                      OpName vs_TEXCOORD1 "vs_TEXCOORD1" 
                                                      OpName vs_TEXCOORD5 "vs_TEXCOORD5" 
                                                      OpName vs_TEXCOORD6 "vs_TEXCOORD6" 
                                                      OpDecorate %11 Location 11 
                                                      OpDecorate %16 ArrayStride 16 
                                                      OpDecorate %17 ArrayStride 17 
                                                      OpDecorate %18 ArrayStride 18 
                                                      OpMemberDecorate %19 0 Offset 19 
                                                      OpMemberDecorate %19 1 Offset 19 
                                                      OpMemberDecorate %19 2 Offset 19 
                                                      OpMemberDecorate %19 3 Offset 19 
                                                      OpDecorate %19 Block 
                                                      OpDecorate %21 DescriptorSet 21 
                                                      OpDecorate %21 Binding 21 
                                                      OpDecorate vs_TEXCOORD2 Location 52 
                                                      OpMemberDecorate %83 0 BuiltIn 83 
                                                      OpMemberDecorate %83 1 BuiltIn 83 
                                                      OpMemberDecorate %83 2 BuiltIn 83 
                                                      OpDecorate %83 Block 
                                                      OpDecorate %95 Location 95 
                                                      OpDecorate vs_TEXCOORD0 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD0 Location 110 
                                                      OpDecorate %114 Location 114 
                                                      OpDecorate vs_TEXCOORD1 Location 144 
                                                      OpDecorate vs_TEXCOORD5 Location 150 
                                                      OpDecorate vs_TEXCOORD6 Location 153 
                                               %2 = OpTypeVoid 
                                               %3 = OpTypeFunction %2 
                                               %6 = OpTypeFloat 32 
                                               %7 = OpTypeVector %6 4 
                                               %8 = OpTypePointer Private %7 
                                Private f32_4* %9 = OpVariable Private 
                                              %10 = OpTypePointer Input %7 
                                 Input f32_4* %11 = OpVariable Input 
                                              %14 = OpTypeInt 32 0 
                                          u32 %15 = OpConstant 4 
                                              %16 = OpTypeArray %7 %15 
                                              %17 = OpTypeArray %7 %15 
                                              %18 = OpTypeArray %7 %15 
                                              %19 = OpTypeStruct %16 %17 %18 %7 
                                              %20 = OpTypePointer Uniform %19 
Uniform struct {f32_4[4]; f32_4[4]; f32_4[4]; f32_4;}* %21 = OpVariable Uniform 
                                              %22 = OpTypeInt 32 1 
                                          i32 %23 = OpConstant 0 
                                          i32 %24 = OpConstant 1 
                                              %25 = OpTypePointer Uniform %7 
                                          i32 %36 = OpConstant 2 
                               Private f32_4* %44 = OpVariable Private 
                                          i32 %46 = OpConstant 3 
                                              %50 = OpTypeVector %6 3 
                                              %51 = OpTypePointer Output %50 
                       Output f32_3* vs_TEXCOORD2 = OpVariable Output 
                                          u32 %81 = OpConstant 1 
                                              %82 = OpTypeArray %6 %81 
                                              %83 = OpTypeStruct %7 %6 %82 
                                              %84 = OpTypePointer Output %83 
         Output struct {f32_4; f32; f32[1];}* %85 = OpVariable Output 
                                              %93 = OpTypePointer Output %7 
                                 Input f32_4* %95 = OpVariable Input 
                                              %96 = OpTypeVector %6 2 
                                             %109 = OpTypePointer Output %96 
                       Output f32_2* vs_TEXCOORD0 = OpVariable Output 
                                             %113 = OpTypePointer Input %50 
                                Input f32_3* %114 = OpVariable Input 
                                         u32 %120 = OpConstant 0 
                                             %121 = OpTypePointer Private %6 
                                         u32 %134 = OpConstant 2 
                                Private f32* %136 = OpVariable Private 
                       Output f32_3* vs_TEXCOORD1 = OpVariable Output 
                       Output f32_4* vs_TEXCOORD5 = OpVariable Output 
                                         f32 %151 = OpConstant 3.674022E-40 
                                       f32_4 %152 = OpConstantComposite %151 %151 %151 %151 
                       Output f32_4* vs_TEXCOORD6 = OpVariable Output 
                                             %154 = OpTypePointer Output %6 
                                          void %4 = OpFunction None %3 
                                               %5 = OpLabel 
                                        f32_4 %12 = OpLoad %11 
                                        f32_4 %13 = OpVectorShuffle %12 %12 1 1 1 1 
                               Uniform f32_4* %26 = OpAccessChain %21 %23 %24 
                                        f32_4 %27 = OpLoad %26 
                                        f32_4 %28 = OpFMul %13 %27 
                                                      OpStore %9 %28 
                               Uniform f32_4* %29 = OpAccessChain %21 %23 %23 
                                        f32_4 %30 = OpLoad %29 
                                        f32_4 %31 = OpLoad %11 
                                        f32_4 %32 = OpVectorShuffle %31 %31 0 0 0 0 
                                        f32_4 %33 = OpFMul %30 %32 
                                        f32_4 %34 = OpLoad %9 
                                        f32_4 %35 = OpFAdd %33 %34 
                                                      OpStore %9 %35 
                               Uniform f32_4* %37 = OpAccessChain %21 %23 %36 
                                        f32_4 %38 = OpLoad %37 
                                        f32_4 %39 = OpLoad %11 
                                        f32_4 %40 = OpVectorShuffle %39 %39 2 2 2 2 
                                        f32_4 %41 = OpFMul %38 %40 
                                        f32_4 %42 = OpLoad %9 
                                        f32_4 %43 = OpFAdd %41 %42 
                                                      OpStore %9 %43 
                                        f32_4 %45 = OpLoad %9 
                               Uniform f32_4* %47 = OpAccessChain %21 %23 %46 
                                        f32_4 %48 = OpLoad %47 
                                        f32_4 %49 = OpFAdd %45 %48 
                                                      OpStore %44 %49 
                               Uniform f32_4* %53 = OpAccessChain %21 %23 %46 
                                        f32_4 %54 = OpLoad %53 
                                        f32_3 %55 = OpVectorShuffle %54 %54 0 1 2 
                                        f32_4 %56 = OpLoad %11 
                                        f32_3 %57 = OpVectorShuffle %56 %56 3 3 3 
                                        f32_3 %58 = OpFMul %55 %57 
                                        f32_4 %59 = OpLoad %9 
                                        f32_3 %60 = OpVectorShuffle %59 %59 0 1 2 
                                        f32_3 %61 = OpFAdd %58 %60 
                                                      OpStore vs_TEXCOORD2 %61 
                                        f32_4 %62 = OpLoad %44 
                                        f32_4 %63 = OpVectorShuffle %62 %62 1 1 1 1 
                               Uniform f32_4* %64 = OpAccessChain %21 %36 %24 
                                        f32_4 %65 = OpLoad %64 
                                        f32_4 %66 = OpFMul %63 %65 
                                                      OpStore %9 %66 
                               Uniform f32_4* %67 = OpAccessChain %21 %36 %23 
                                        f32_4 %68 = OpLoad %67 
                                        f32_4 %69 = OpLoad %44 
                                        f32_4 %70 = OpVectorShuffle %69 %69 0 0 0 0 
                                        f32_4 %71 = OpFMul %68 %70 
                                        f32_4 %72 = OpLoad %9 
                                        f32_4 %73 = OpFAdd %71 %72 
                                                      OpStore %9 %73 
                               Uniform f32_4* %74 = OpAccessChain %21 %36 %36 
                                        f32_4 %75 = OpLoad %74 
                                        f32_4 %76 = OpLoad %44 
                                        f32_4 %77 = OpVectorShuffle %76 %76 2 2 2 2 
                                        f32_4 %78 = OpFMul %75 %77 
                                        f32_4 %79 = OpLoad %9 
                                        f32_4 %80 = OpFAdd %78 %79 
                                                      OpStore %9 %80 
                               Uniform f32_4* %86 = OpAccessChain %21 %36 %46 
                                        f32_4 %87 = OpLoad %86 
                                        f32_4 %88 = OpLoad %44 
                                        f32_4 %89 = OpVectorShuffle %88 %88 3 3 3 3 
                                        f32_4 %90 = OpFMul %87 %89 
                                        f32_4 %91 = OpLoad %9 
                                        f32_4 %92 = OpFAdd %90 %91 
                                Output f32_4* %94 = OpAccessChain %85 %23 
                                                      OpStore %94 %92 
                                        f32_4 %97 = OpLoad %95 
                                        f32_2 %98 = OpVectorShuffle %97 %97 0 1 
                               Uniform f32_4* %99 = OpAccessChain %21 %46 
                                       f32_4 %100 = OpLoad %99 
                                       f32_2 %101 = OpVectorShuffle %100 %100 0 1 
                                       f32_2 %102 = OpFMul %98 %101 
                              Uniform f32_4* %103 = OpAccessChain %21 %46 
                                       f32_4 %104 = OpLoad %103 
                                       f32_2 %105 = OpVectorShuffle %104 %104 2 3 
                                       f32_2 %106 = OpFAdd %102 %105 
                                       f32_4 %107 = OpLoad %9 
                                       f32_4 %108 = OpVectorShuffle %107 %106 4 5 2 3 
                                                      OpStore %9 %108 
                                       f32_4 %111 = OpLoad %9 
                                       f32_2 %112 = OpVectorShuffle %111 %111 0 1 
                                                      OpStore vs_TEXCOORD0 %112 
                                       f32_3 %115 = OpLoad %114 
                              Uniform f32_4* %116 = OpAccessChain %21 %24 %23 
                                       f32_4 %117 = OpLoad %116 
                                       f32_3 %118 = OpVectorShuffle %117 %117 0 1 2 
                                         f32 %119 = OpDot %115 %118 
                                Private f32* %122 = OpAccessChain %9 %120 
                                                      OpStore %122 %119 
                                       f32_3 %123 = OpLoad %114 
                              Uniform f32_4* %124 = OpAccessChain %21 %24 %24 
                                       f32_4 %125 = OpLoad %124 
                                       f32_3 %126 = OpVectorShuffle %125 %125 0 1 2 
                                         f32 %127 = OpDot %123 %126 
                                Private f32* %128 = OpAccessChain %9 %81 
                                                      OpStore %128 %127 
                                       f32_3 %129 = OpLoad %114 
                              Uniform f32_4* %130 = OpAccessChain %21 %24 %36 
                                       f32_4 %131 = OpLoad %130 
                                       f32_3 %132 = OpVectorShuffle %131 %131 0 1 2 
                                         f32 %133 = OpDot %129 %132 
                                Private f32* %135 = OpAccessChain %9 %134 
                                                      OpStore %135 %133 
                                       f32_4 %137 = OpLoad %9 
                                       f32_3 %138 = OpVectorShuffle %137 %137 0 1 2 
                                       f32_4 %139 = OpLoad %9 
                                       f32_3 %140 = OpVectorShuffle %139 %139 0 1 2 
                                         f32 %141 = OpDot %138 %140 
                                                      OpStore %136 %141 
                                         f32 %142 = OpLoad %136 
                                         f32 %143 = OpExtInst %1 32 %142 
                                                      OpStore %136 %143 
                                         f32 %145 = OpLoad %136 
                                       f32_3 %146 = OpCompositeConstruct %145 %145 %145 
                                       f32_4 %147 = OpLoad %9 
                                       f32_3 %148 = OpVectorShuffle %147 %147 0 1 2 
                                       f32_3 %149 = OpFMul %146 %148 
                                                      OpStore vs_TEXCOORD1 %149 
                                                      OpStore vs_TEXCOORD5 %152 
                                                      OpStore vs_TEXCOORD6 %152 
                                 Output f32* %155 = OpAccessChain %85 %23 %81 
                                         f32 %156 = OpLoad %155 
                                         f32 %157 = OpFNegate %156 
                                 Output f32* %158 = OpAccessChain %85 %23 %81 
                                                      OpStore %158 %157 
                                                      OpReturn
                                                      OpFunctionEnd
; SPIR-V
; Version: 1.0
; Generator: Khronos Glslang Reference Front End; 6
; Bound: 191
; Schema: 0
                                                      OpCapability Shader 
                                               %1 = OpExtInstImport "GLSL.std.450" 
                                                      OpMemoryModel Logical GLSL450 
                                                      OpEntryPoint Fragment %4 "main" %11 %158 %170 
                                                      OpExecutionMode %4 OriginUpperLeft 
                                                      OpName vs_TEXCOORD1 "vs_TEXCOORD1" 
                                                      OpName vs_TEXCOORD0 "vs_TEXCOORD0" 
                                                      OpDecorate %9 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD1 Location 11 
                                                      OpDecorate %20 RelaxedPrecision 
                                                      OpDecorate %21 RelaxedPrecision 
                                                      OpDecorate %23 RelaxedPrecision 
                                                      OpDecorate %24 RelaxedPrecision 
                                                      OpDecorate %27 RelaxedPrecision 
                                                      OpMemberDecorate %29 0 RelaxedPrecision 
                                                      OpMemberDecorate %29 0 Offset 29 
                                                      OpMemberDecorate %29 1 RelaxedPrecision 
                                                      OpMemberDecorate %29 1 Offset 29 
                                                      OpMemberDecorate %29 2 RelaxedPrecision 
                                                      OpMemberDecorate %29 2 Offset 29 
                                                      OpMemberDecorate %29 3 RelaxedPrecision 
                                                      OpMemberDecorate %29 3 Offset 29 
                                                      OpMemberDecorate %29 4 RelaxedPrecision 
                                                      OpMemberDecorate %29 4 Offset 29 
                                                      OpMemberDecorate %29 5 RelaxedPrecision 
                                                      OpMemberDecorate %29 5 Offset 29 
                                                      OpMemberDecorate %29 6 RelaxedPrecision 
                                                      OpMemberDecorate %29 6 Offset 29 
                                                      OpDecorate %29 Block 
                                                      OpDecorate %31 DescriptorSet 31 
                                                      OpDecorate %31 Binding 31 
                                                      OpDecorate %36 RelaxedPrecision 
                                                      OpDecorate %37 RelaxedPrecision 
                                                      OpDecorate %38 RelaxedPrecision 
                                                      OpDecorate %41 RelaxedPrecision 
                                                      OpDecorate %43 RelaxedPrecision 
                                                      OpDecorate %45 RelaxedPrecision 
                                                      OpDecorate %49 RelaxedPrecision 
                                                      OpDecorate %50 RelaxedPrecision 
                                                      OpDecorate %52 RelaxedPrecision 
                                                      OpDecorate %55 RelaxedPrecision 
                                                      OpDecorate %56 RelaxedPrecision 
                                                      OpDecorate %59 RelaxedPrecision 
                                                      OpDecorate %60 RelaxedPrecision 
                                                      OpDecorate %62 RelaxedPrecision 
                                                      OpDecorate %63 RelaxedPrecision 
                                                      OpDecorate %65 RelaxedPrecision 
                                                      OpDecorate %67 RelaxedPrecision 
                                                      OpDecorate %68 RelaxedPrecision 
                                                      OpDecorate %70 RelaxedPrecision 
                                                      OpDecorate %71 RelaxedPrecision 
                                                      OpDecorate %73 RelaxedPrecision 
                                                      OpDecorate %74 RelaxedPrecision 
                                                      OpDecorate %75 RelaxedPrecision 
                                                      OpDecorate %76 RelaxedPrecision 
                                                      OpDecorate %80 RelaxedPrecision 
                                                      OpDecorate %81 RelaxedPrecision 
                                                      OpDecorate %84 RelaxedPrecision 
                                                      OpDecorate %86 RelaxedPrecision 
                                                      OpDecorate %87 RelaxedPrecision 
                                                      OpDecorate %90 RelaxedPrecision 
                                                      OpDecorate %91 RelaxedPrecision 
                                                      OpDecorate %94 RelaxedPrecision 
                                                      OpDecorate %96 RelaxedPrecision 
                                                      OpDecorate %98 RelaxedPrecision 
                                                      OpDecorate %101 RelaxedPrecision 
                                                      OpDecorate %103 RelaxedPrecision 
                                                      OpDecorate %104 RelaxedPrecision 
                                                      OpDecorate %107 RelaxedPrecision 
                                                      OpDecorate %109 RelaxedPrecision 
                                                      OpDecorate %110 RelaxedPrecision 
                                                      OpDecorate %114 RelaxedPrecision 
                                                      OpDecorate %115 RelaxedPrecision 
                                                      OpDecorate %116 RelaxedPrecision 
                                                      OpDecorate %119 RelaxedPrecision 
                                                      OpDecorate %120 RelaxedPrecision 
                                                      OpDecorate %121 RelaxedPrecision 
                                                      OpDecorate %123 RelaxedPrecision 
                                                      OpDecorate %124 RelaxedPrecision 
                                                      OpDecorate %125 RelaxedPrecision 
                                                      OpDecorate %126 RelaxedPrecision 
                                                      OpDecorate %128 RelaxedPrecision 
                                                      OpDecorate %129 RelaxedPrecision 
                                                      OpDecorate %130 RelaxedPrecision 
                                                      OpDecorate %131 RelaxedPrecision 
                                                      OpDecorate %132 RelaxedPrecision 
                                                      OpDecorate %133 RelaxedPrecision 
                                                      OpDecorate %135 RelaxedPrecision 
                                                      OpDecorate %136 RelaxedPrecision 
                                                      OpDecorate %137 RelaxedPrecision 
                                                      OpDecorate %138 RelaxedPrecision 
                                                      OpDecorate %139 RelaxedPrecision 
                                                      OpDecorate %140 RelaxedPrecision 
                                                      OpDecorate %141 RelaxedPrecision 
                                                      OpDecorate %142 RelaxedPrecision 
                                                      OpDecorate %143 RelaxedPrecision 
                                                      OpDecorate %145 RelaxedPrecision 
                                                      OpDecorate %148 RelaxedPrecision 
                                                      OpDecorate %148 DescriptorSet 148 
                                                      OpDecorate %148 Binding 148 
                                                      OpDecorate %149 RelaxedPrecision 
                                                      OpDecorate %152 RelaxedPrecision 
                                                      OpDecorate %152 DescriptorSet 152 
                                                      OpDecorate %152 Binding 152 
                                                      OpDecorate %153 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD0 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD0 Location 158 
                                                      OpDecorate %159 RelaxedPrecision 
                                                      OpDecorate %160 RelaxedPrecision 
                                                      OpDecorate %161 RelaxedPrecision 
                                                      OpDecorate %162 RelaxedPrecision 
                                                      OpDecorate %163 RelaxedPrecision 
                                                      OpDecorate %166 RelaxedPrecision 
                                                      OpDecorate %167 RelaxedPrecision 
                                                      OpDecorate %168 RelaxedPrecision 
                                                      OpDecorate %170 RelaxedPrecision 
                                                      OpDecorate %170 Location 170 
                                                      OpDecorate %173 RelaxedPrecision 
                                                      OpDecorate %175 RelaxedPrecision 
                                                      OpDecorate %176 RelaxedPrecision 
                                                      OpDecorate %179 RelaxedPrecision 
                                                      OpDecorate %182 RelaxedPrecision 
                                                      OpDecorate %183 RelaxedPrecision 
                                                      OpDecorate %184 RelaxedPrecision 
                                                      OpDecorate %185 RelaxedPrecision 
                                                      OpDecorate %186 RelaxedPrecision 
                                                      OpDecorate %187 RelaxedPrecision 
                                               %2 = OpTypeVoid 
                                               %3 = OpTypeFunction %2 
                                               %6 = OpTypeFloat 32 
                                               %7 = OpTypeVector %6 3 
                                               %8 = OpTypePointer Private %7 
                                Private f32_3* %9 = OpVariable Private 
                                              %10 = OpTypePointer Input %7 
                        Input f32_3* vs_TEXCOORD1 = OpVariable Input 
                                              %15 = OpTypeInt 32 0 
                                          u32 %16 = OpConstant 0 
                                              %17 = OpTypePointer Private %6 
                                              %28 = OpTypeVector %6 4 
                                              %29 = OpTypeStruct %28 %28 %28 %28 %28 %6 %6 
                                              %30 = OpTypePointer Uniform %29 
Uniform struct {f32_4; f32_4; f32_4; f32_4; f32_4; f32; f32;}* %31 = OpVariable Uniform 
                                              %32 = OpTypeInt 32 1 
                                          i32 %33 = OpConstant 0 
                                              %34 = OpTypePointer Uniform %28 
                                          f32 %42 = OpConstant 3.674022E-40 
                               Private f32_3* %45 = OpVariable Private 
                                          i32 %46 = OpConstant 6 
                                              %47 = OpTypePointer Uniform %6 
                                          f32 %51 = OpConstant 3.674022E-40 
                                          i32 %53 = OpConstant 5 
                                 Private f32* %65 = OpVariable Private 
                                          f32 %78 = OpConstant 3.674022E-40 
                                          f32 %95 = OpConstant 3.674022E-40 
                                          f32 %97 = OpConstant 3.674022E-40 
                                         i32 %112 = OpConstant 3 
                                         i32 %117 = OpConstant 4 
                              Private f32_3* %131 = OpVariable Private 
                                             %144 = OpTypePointer Private %28 
                              Private f32_4* %145 = OpVariable Private 
                                             %146 = OpTypeImage %6 Dim2D 0 0 0 1 Unknown 
                                             %147 = OpTypePointer UniformConstant %146 
        UniformConstant read_only Texture2D* %148 = OpVariable UniformConstant 
                                             %150 = OpTypeSampler 
                                             %151 = OpTypePointer UniformConstant %150 
                    UniformConstant sampler* %152 = OpVariable UniformConstant 
                                             %154 = OpTypeSampledImage %146 
                                             %156 = OpTypeVector %6 2 
                                             %157 = OpTypePointer Input %156 
                        Input f32_2* vs_TEXCOORD0 = OpVariable Input 
                              Private f32_3* %161 = OpVariable Private 
                                         i32 %164 = OpConstant 2 
                                             %169 = OpTypePointer Output %28 
                               Output f32_4* %170 = OpVariable Output 
                                         u32 %171 = OpConstant 3 
                                             %177 = OpTypePointer Output %6 
                                         i32 %180 = OpConstant 1 
                                          void %4 = OpFunction None %3 
                                               %5 = OpLabel 
                                        f32_3 %12 = OpLoad vs_TEXCOORD1 
                                        f32_3 %13 = OpLoad vs_TEXCOORD1 
                                          f32 %14 = OpDot %12 %13 
                                 Private f32* %18 = OpAccessChain %9 %16 
                                                      OpStore %18 %14 
                                 Private f32* %19 = OpAccessChain %9 %16 
                                          f32 %20 = OpLoad %19 
                                          f32 %21 = OpExtInst %1 32 %20 
                                 Private f32* %22 = OpAccessChain %9 %16 
                                                      OpStore %22 %21 
                                        f32_3 %23 = OpLoad %9 
                                        f32_3 %24 = OpVectorShuffle %23 %23 0 0 0 
                                        f32_3 %25 = OpLoad vs_TEXCOORD1 
                                        f32_3 %26 = OpFMul %24 %25 
                                                      OpStore %9 %26 
                                        f32_3 %27 = OpLoad %9 
                               Uniform f32_4* %35 = OpAccessChain %31 %33 
                                        f32_4 %36 = OpLoad %35 
                                        f32_3 %37 = OpVectorShuffle %36 %36 0 1 2 
                                          f32 %38 = OpDot %27 %37 
                                 Private f32* %39 = OpAccessChain %9 %16 
                                                      OpStore %39 %38 
                                 Private f32* %40 = OpAccessChain %9 %16 
                                          f32 %41 = OpLoad %40 
                                          f32 %43 = OpExtInst %1 40 %41 %42 
                                 Private f32* %44 = OpAccessChain %9 %16 
                                                      OpStore %44 %43 
                                 Uniform f32* %48 = OpAccessChain %31 %46 
                                          f32 %49 = OpLoad %48 
                                          f32 %50 = OpFNegate %49 
                                          f32 %52 = OpFMul %50 %51 
                                 Uniform f32* %54 = OpAccessChain %31 %53 
                                          f32 %55 = OpLoad %54 
                                          f32 %56 = OpFAdd %52 %55 
                                 Private f32* %57 = OpAccessChain %45 %16 
                                                      OpStore %57 %56 
                                 Private f32* %58 = OpAccessChain %45 %16 
                                          f32 %59 = OpLoad %58 
                                          f32 %60 = OpFNegate %59 
                                 Private f32* %61 = OpAccessChain %9 %16 
                                          f32 %62 = OpLoad %61 
                                          f32 %63 = OpFAdd %60 %62 
                                 Private f32* %64 = OpAccessChain %9 %16 
                                                      OpStore %64 %63 
                                 Uniform f32* %66 = OpAccessChain %31 %46 
                                          f32 %67 = OpLoad %66 
                                          f32 %68 = OpFMul %67 %51 
                                 Uniform f32* %69 = OpAccessChain %31 %53 
                                          f32 %70 = OpLoad %69 
                                          f32 %71 = OpFAdd %68 %70 
                                                      OpStore %65 %71 
                                 Private f32* %72 = OpAccessChain %45 %16 
                                          f32 %73 = OpLoad %72 
                                          f32 %74 = OpFNegate %73 
                                          f32 %75 = OpLoad %65 
                                          f32 %76 = OpFAdd %74 %75 
                                 Private f32* %77 = OpAccessChain %45 %16 
                                                      OpStore %77 %76 
                                 Private f32* %79 = OpAccessChain %45 %16 
                                          f32 %80 = OpLoad %79 
                                          f32 %81 = OpFDiv %78 %80 
                                 Private f32* %82 = OpAccessChain %45 %16 
                                                      OpStore %82 %81 
                                 Private f32* %83 = OpAccessChain %45 %16 
                                          f32 %84 = OpLoad %83 
                                 Private f32* %85 = OpAccessChain %9 %16 
                                          f32 %86 = OpLoad %85 
                                          f32 %87 = OpFMul %84 %86 
                                 Private f32* %88 = OpAccessChain %9 %16 
                                                      OpStore %88 %87 
                                 Private f32* %89 = OpAccessChain %9 %16 
                                          f32 %90 = OpLoad %89 
                                          f32 %91 = OpExtInst %1 43 %90 %42 %78 
                                 Private f32* %92 = OpAccessChain %9 %16 
                                                      OpStore %92 %91 
                                 Private f32* %93 = OpAccessChain %9 %16 
                                          f32 %94 = OpLoad %93 
                                          f32 %96 = OpFMul %94 %95 
                                          f32 %98 = OpFAdd %96 %97 
                                 Private f32* %99 = OpAccessChain %45 %16 
                                                      OpStore %99 %98 
                                Private f32* %100 = OpAccessChain %9 %16 
                                         f32 %101 = OpLoad %100 
                                Private f32* %102 = OpAccessChain %9 %16 
                                         f32 %103 = OpLoad %102 
                                         f32 %104 = OpFMul %101 %103 
                                Private f32* %105 = OpAccessChain %9 %16 
                                                      OpStore %105 %104 
                                Private f32* %106 = OpAccessChain %9 %16 
                                         f32 %107 = OpLoad %106 
                                Private f32* %108 = OpAccessChain %45 %16 
                                         f32 %109 = OpLoad %108 
                                         f32 %110 = OpFMul %107 %109 
                                Private f32* %111 = OpAccessChain %9 %16 
                                                      OpStore %111 %110 
                              Uniform f32_4* %113 = OpAccessChain %31 %112 
                                       f32_4 %114 = OpLoad %113 
                                       f32_3 %115 = OpVectorShuffle %114 %114 0 1 2 
                                       f32_3 %116 = OpFNegate %115 
                              Uniform f32_4* %118 = OpAccessChain %31 %117 
                                       f32_4 %119 = OpLoad %118 
                                       f32_3 %120 = OpVectorShuffle %119 %119 0 1 2 
                                       f32_3 %121 = OpFAdd %116 %120 
                                                      OpStore %45 %121 
                              Uniform f32_4* %122 = OpAccessChain %31 %117 
                                       f32_4 %123 = OpLoad %122 
                                       f32_3 %124 = OpVectorShuffle %123 %123 3 3 3 
                                       f32_3 %125 = OpLoad %45 
                                       f32_3 %126 = OpFMul %124 %125 
                              Uniform f32_4* %127 = OpAccessChain %31 %112 
                                       f32_4 %128 = OpLoad %127 
                                       f32_3 %129 = OpVectorShuffle %128 %128 0 1 2 
                                       f32_3 %130 = OpFAdd %126 %129 
                                                      OpStore %45 %130 
                                       f32_3 %132 = OpLoad %45 
                                       f32_3 %133 = OpFNegate %132 
                              Uniform f32_4* %134 = OpAccessChain %31 %112 
                                       f32_4 %135 = OpLoad %134 
                                       f32_3 %136 = OpVectorShuffle %135 %135 0 1 2 
                                       f32_3 %137 = OpFAdd %133 %136 
                                                      OpStore %131 %137 
                                       f32_3 %138 = OpLoad %9 
                                       f32_3 %139 = OpVectorShuffle %138 %138 0 0 0 
                                       f32_3 %140 = OpLoad %131 
                                       f32_3 %141 = OpFMul %139 %140 
                                       f32_3 %142 = OpLoad %45 
                                       f32_3 %143 = OpFAdd %141 %142 
                                                      OpStore %9 %143 
                         read_only Texture2D %149 = OpLoad %148 
                                     sampler %153 = OpLoad %152 
                  read_only Texture2DSampled %155 = OpSampledImage %149 %153 
                                       f32_2 %159 = OpLoad vs_TEXCOORD0 
                                       f32_4 %160 = OpImageSampleImplicitLod %155 %159 
                                                      OpStore %145 %160 
                                       f32_4 %162 = OpLoad %145 
                                       f32_3 %163 = OpVectorShuffle %162 %162 0 1 2 
                              Uniform f32_4* %165 = OpAccessChain %31 %164 
                                       f32_4 %166 = OpLoad %165 
                                       f32_3 %167 = OpVectorShuffle %166 %166 0 1 2 
                                       f32_3 %168 = OpFMul %163 %167 
                                                      OpStore %161 %168 
                                Private f32* %172 = OpAccessChain %145 %171 
                                         f32 %173 = OpLoad %172 
                                Uniform f32* %174 = OpAccessChain %31 %164 %171 
                                         f32 %175 = OpLoad %174 
                                         f32 %176 = OpFMul %173 %175 
                                 Output f32* %178 = OpAccessChain %170 %171 
                                                      OpStore %178 %176 
                                       f32_3 %179 = OpLoad %161 
                              Uniform f32_4* %181 = OpAccessChain %31 %180 
                                       f32_4 %182 = OpLoad %181 
                                       f32_3 %183 = OpVectorShuffle %182 %182 0 1 2 
                                       f32_3 %184 = OpFMul %179 %183 
                                                      OpStore %161 %184 
                                       f32_3 %185 = OpLoad %9 
                                       f32_3 %186 = OpLoad %161 
                                       f32_3 %187 = OpFMul %185 %186 
                                       f32_4 %188 = OpLoad %170 
                                       f32_4 %189 = OpVectorShuffle %188 %187 4 5 6 3 
                                                      OpStore %170 %189 
                                                      OpReturn
                                                      OpFunctionEnd
"
}
SubProgram "gles3 hw_tier00 " {
Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" }
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in highp vec3 in_NORMAL0;
in highp vec4 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out highp vec3 vs_TEXCOORD1;
out highp vec3 vs_TEXCOORD2;
out mediump vec3 vs_TEXCOORD3;
out highp vec4 vs_TEXCOORD5;
out highp vec4 vs_TEXCOORD6;
vec4 u_xlat0;
mediump vec4 u_xlat16_0;
vec4 u_xlat1;
mediump float u_xlat16_2;
mediump vec3 u_xlat16_3;
float u_xlat12;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    vs_TEXCOORD2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
    u_xlat0 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat0;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat0;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat0.xy;
    u_xlat0.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat12 = dot(u_xlat0.xyz, u_xlat0.xyz);
    u_xlat12 = inversesqrt(u_xlat12);
    u_xlat0.xyz = vec3(u_xlat12) * u_xlat0.xyz;
    vs_TEXCOORD1.xyz = u_xlat0.xyz;
    u_xlat16_2 = u_xlat0.y * u_xlat0.y;
    u_xlat16_2 = u_xlat0.x * u_xlat0.x + (-u_xlat16_2);
    u_xlat16_0 = u_xlat0.yzzx * u_xlat0.xyzz;
    u_xlat16_3.x = dot(unity_SHBr, u_xlat16_0);
    u_xlat16_3.y = dot(unity_SHBg, u_xlat16_0);
    u_xlat16_3.z = dot(unity_SHBb, u_xlat16_0);
    vs_TEXCOORD3.xyz = unity_SHC.xyz * vec3(u_xlat16_2) + u_xlat16_3.xyz;
    vs_TEXCOORD5 = vec4(0.0, 0.0, 0.0, 0.0);
    vs_TEXCOORD6 = vec4(0.0, 0.0, 0.0, 0.0);
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 _LightColor0;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 _HColor;
uniform 	mediump vec4 _SColor;
uniform 	mediump float _RampThreshold;
uniform 	mediump float _RampSmooth;
UNITY_LOCATION(0) uniform mediump sampler2D _MainTex;
in mediump vec2 vs_TEXCOORD0;
in highp vec3 vs_TEXCOORD1;
in mediump vec3 vs_TEXCOORD3;
layout(location = 0) out mediump vec4 SV_Target0;
mediump vec3 u_xlat16_0;
vec4 u_xlat1;
mediump vec4 u_xlat16_1;
mediump vec3 u_xlat16_2;
vec3 u_xlat3;
mediump vec3 u_xlat16_4;
mediump vec3 u_xlat16_5;
mediump float u_xlat16_10;
void main()
{
    u_xlat16_0.x = dot(vs_TEXCOORD1.xyz, vs_TEXCOORD1.xyz);
    u_xlat16_0.x = inversesqrt(u_xlat16_0.x);
    u_xlat16_0.xyz = u_xlat16_0.xxx * vs_TEXCOORD1.xyz;
    u_xlat16_0.x = dot(u_xlat16_0.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat16_0.x = max(u_xlat16_0.x, 0.0);
    u_xlat16_5.x = (-_RampSmooth) * 0.5 + _RampThreshold;
    u_xlat16_0.x = (-u_xlat16_5.x) + u_xlat16_0.x;
    u_xlat16_10 = _RampSmooth * 0.5 + _RampThreshold;
    u_xlat16_5.x = (-u_xlat16_5.x) + u_xlat16_10;
    u_xlat16_5.x = float(1.0) / u_xlat16_5.x;
    u_xlat16_0.x = u_xlat16_5.x * u_xlat16_0.x;
#ifdef UNITY_ADRENO_ES3
    u_xlat16_0.x = min(max(u_xlat16_0.x, 0.0), 1.0);
#else
    u_xlat16_0.x = clamp(u_xlat16_0.x, 0.0, 1.0);
#endif
    u_xlat16_5.x = u_xlat16_0.x * -2.0 + 3.0;
    u_xlat16_0.x = u_xlat16_0.x * u_xlat16_0.x;
    u_xlat16_0.x = u_xlat16_0.x * u_xlat16_5.x;
    u_xlat16_5.xyz = (-_HColor.xyz) + _SColor.xyz;
    u_xlat16_5.xyz = _SColor.www * u_xlat16_5.xyz + _HColor.xyz;
    u_xlat16_1.xyz = (-u_xlat16_5.xyz) + _HColor.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xxx * u_xlat16_1.xyz + u_xlat16_5.xyz;
    u_xlat1.xyz = vs_TEXCOORD1.xyz;
    u_xlat1.w = 1.0;
    u_xlat16_2.x = dot(unity_SHAr, u_xlat1);
    u_xlat16_2.y = dot(unity_SHAg, u_xlat1);
    u_xlat16_2.z = dot(unity_SHAb, u_xlat1);
    u_xlat16_2.xyz = u_xlat16_2.xyz + vs_TEXCOORD3.xyz;
    u_xlat16_2.xyz = max(u_xlat16_2.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat3.xyz = log2(u_xlat16_2.xyz);
    u_xlat3.xyz = u_xlat3.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
    u_xlat3.xyz = exp2(u_xlat3.xyz);
    u_xlat3.xyz = u_xlat3.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
    u_xlat3.xyz = max(u_xlat3.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat16_1 = texture(_MainTex, vs_TEXCOORD0.xy);
    u_xlat16_2.xyz = u_xlat16_1.xyz * _Color.xyz;
    SV_Target0.w = u_xlat16_1.w * _Color.w;
    u_xlat16_4.xyz = u_xlat3.xyz * u_xlat16_2.xyz;
    u_xlat16_2.xyz = u_xlat16_2.xyz * _LightColor0.xyz;
    SV_Target0.xyz = u_xlat16_2.xyz * u_xlat16_0.xyz + u_xlat16_4.xyz;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier01 " {
Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" }
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in highp vec3 in_NORMAL0;
in highp vec4 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out highp vec3 vs_TEXCOORD1;
out highp vec3 vs_TEXCOORD2;
out mediump vec3 vs_TEXCOORD3;
out highp vec4 vs_TEXCOORD5;
out highp vec4 vs_TEXCOORD6;
vec4 u_xlat0;
mediump vec4 u_xlat16_0;
vec4 u_xlat1;
mediump float u_xlat16_2;
mediump vec3 u_xlat16_3;
float u_xlat12;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    vs_TEXCOORD2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
    u_xlat0 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat0;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat0;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat0.xy;
    u_xlat0.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat12 = dot(u_xlat0.xyz, u_xlat0.xyz);
    u_xlat12 = inversesqrt(u_xlat12);
    u_xlat0.xyz = vec3(u_xlat12) * u_xlat0.xyz;
    vs_TEXCOORD1.xyz = u_xlat0.xyz;
    u_xlat16_2 = u_xlat0.y * u_xlat0.y;
    u_xlat16_2 = u_xlat0.x * u_xlat0.x + (-u_xlat16_2);
    u_xlat16_0 = u_xlat0.yzzx * u_xlat0.xyzz;
    u_xlat16_3.x = dot(unity_SHBr, u_xlat16_0);
    u_xlat16_3.y = dot(unity_SHBg, u_xlat16_0);
    u_xlat16_3.z = dot(unity_SHBb, u_xlat16_0);
    vs_TEXCOORD3.xyz = unity_SHC.xyz * vec3(u_xlat16_2) + u_xlat16_3.xyz;
    vs_TEXCOORD5 = vec4(0.0, 0.0, 0.0, 0.0);
    vs_TEXCOORD6 = vec4(0.0, 0.0, 0.0, 0.0);
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 _LightColor0;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 _HColor;
uniform 	mediump vec4 _SColor;
uniform 	mediump float _RampThreshold;
uniform 	mediump float _RampSmooth;
UNITY_LOCATION(0) uniform mediump sampler2D _MainTex;
in mediump vec2 vs_TEXCOORD0;
in highp vec3 vs_TEXCOORD1;
in mediump vec3 vs_TEXCOORD3;
layout(location = 0) out mediump vec4 SV_Target0;
mediump vec3 u_xlat16_0;
vec4 u_xlat1;
mediump vec4 u_xlat16_1;
mediump vec3 u_xlat16_2;
vec3 u_xlat3;
mediump vec3 u_xlat16_4;
mediump vec3 u_xlat16_5;
mediump float u_xlat16_10;
void main()
{
    u_xlat16_0.x = dot(vs_TEXCOORD1.xyz, vs_TEXCOORD1.xyz);
    u_xlat16_0.x = inversesqrt(u_xlat16_0.x);
    u_xlat16_0.xyz = u_xlat16_0.xxx * vs_TEXCOORD1.xyz;
    u_xlat16_0.x = dot(u_xlat16_0.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat16_0.x = max(u_xlat16_0.x, 0.0);
    u_xlat16_5.x = (-_RampSmooth) * 0.5 + _RampThreshold;
    u_xlat16_0.x = (-u_xlat16_5.x) + u_xlat16_0.x;
    u_xlat16_10 = _RampSmooth * 0.5 + _RampThreshold;
    u_xlat16_5.x = (-u_xlat16_5.x) + u_xlat16_10;
    u_xlat16_5.x = float(1.0) / u_xlat16_5.x;
    u_xlat16_0.x = u_xlat16_5.x * u_xlat16_0.x;
#ifdef UNITY_ADRENO_ES3
    u_xlat16_0.x = min(max(u_xlat16_0.x, 0.0), 1.0);
#else
    u_xlat16_0.x = clamp(u_xlat16_0.x, 0.0, 1.0);
#endif
    u_xlat16_5.x = u_xlat16_0.x * -2.0 + 3.0;
    u_xlat16_0.x = u_xlat16_0.x * u_xlat16_0.x;
    u_xlat16_0.x = u_xlat16_0.x * u_xlat16_5.x;
    u_xlat16_5.xyz = (-_HColor.xyz) + _SColor.xyz;
    u_xlat16_5.xyz = _SColor.www * u_xlat16_5.xyz + _HColor.xyz;
    u_xlat16_1.xyz = (-u_xlat16_5.xyz) + _HColor.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xxx * u_xlat16_1.xyz + u_xlat16_5.xyz;
    u_xlat1.xyz = vs_TEXCOORD1.xyz;
    u_xlat1.w = 1.0;
    u_xlat16_2.x = dot(unity_SHAr, u_xlat1);
    u_xlat16_2.y = dot(unity_SHAg, u_xlat1);
    u_xlat16_2.z = dot(unity_SHAb, u_xlat1);
    u_xlat16_2.xyz = u_xlat16_2.xyz + vs_TEXCOORD3.xyz;
    u_xlat16_2.xyz = max(u_xlat16_2.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat3.xyz = log2(u_xlat16_2.xyz);
    u_xlat3.xyz = u_xlat3.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
    u_xlat3.xyz = exp2(u_xlat3.xyz);
    u_xlat3.xyz = u_xlat3.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
    u_xlat3.xyz = max(u_xlat3.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat16_1 = texture(_MainTex, vs_TEXCOORD0.xy);
    u_xlat16_2.xyz = u_xlat16_1.xyz * _Color.xyz;
    SV_Target0.w = u_xlat16_1.w * _Color.w;
    u_xlat16_4.xyz = u_xlat3.xyz * u_xlat16_2.xyz;
    u_xlat16_2.xyz = u_xlat16_2.xyz * _LightColor0.xyz;
    SV_Target0.xyz = u_xlat16_2.xyz * u_xlat16_0.xyz + u_xlat16_4.xyz;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier02 " {
Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" }
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in highp vec3 in_NORMAL0;
in highp vec4 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out highp vec3 vs_TEXCOORD1;
out highp vec3 vs_TEXCOORD2;
out mediump vec3 vs_TEXCOORD3;
out highp vec4 vs_TEXCOORD5;
out highp vec4 vs_TEXCOORD6;
vec4 u_xlat0;
mediump vec4 u_xlat16_0;
vec4 u_xlat1;
mediump float u_xlat16_2;
mediump vec3 u_xlat16_3;
float u_xlat12;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    vs_TEXCOORD2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
    u_xlat0 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat0;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat0;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat0.xy;
    u_xlat0.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat12 = dot(u_xlat0.xyz, u_xlat0.xyz);
    u_xlat12 = inversesqrt(u_xlat12);
    u_xlat0.xyz = vec3(u_xlat12) * u_xlat0.xyz;
    vs_TEXCOORD1.xyz = u_xlat0.xyz;
    u_xlat16_2 = u_xlat0.y * u_xlat0.y;
    u_xlat16_2 = u_xlat0.x * u_xlat0.x + (-u_xlat16_2);
    u_xlat16_0 = u_xlat0.yzzx * u_xlat0.xyzz;
    u_xlat16_3.x = dot(unity_SHBr, u_xlat16_0);
    u_xlat16_3.y = dot(unity_SHBg, u_xlat16_0);
    u_xlat16_3.z = dot(unity_SHBb, u_xlat16_0);
    vs_TEXCOORD3.xyz = unity_SHC.xyz * vec3(u_xlat16_2) + u_xlat16_3.xyz;
    vs_TEXCOORD5 = vec4(0.0, 0.0, 0.0, 0.0);
    vs_TEXCOORD6 = vec4(0.0, 0.0, 0.0, 0.0);
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 _LightColor0;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 _HColor;
uniform 	mediump vec4 _SColor;
uniform 	mediump float _RampThreshold;
uniform 	mediump float _RampSmooth;
UNITY_LOCATION(0) uniform mediump sampler2D _MainTex;
in mediump vec2 vs_TEXCOORD0;
in highp vec3 vs_TEXCOORD1;
in mediump vec3 vs_TEXCOORD3;
layout(location = 0) out mediump vec4 SV_Target0;
mediump vec3 u_xlat16_0;
vec4 u_xlat1;
mediump vec4 u_xlat16_1;
mediump vec3 u_xlat16_2;
vec3 u_xlat3;
mediump vec3 u_xlat16_4;
mediump vec3 u_xlat16_5;
mediump float u_xlat16_10;
void main()
{
    u_xlat16_0.x = dot(vs_TEXCOORD1.xyz, vs_TEXCOORD1.xyz);
    u_xlat16_0.x = inversesqrt(u_xlat16_0.x);
    u_xlat16_0.xyz = u_xlat16_0.xxx * vs_TEXCOORD1.xyz;
    u_xlat16_0.x = dot(u_xlat16_0.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat16_0.x = max(u_xlat16_0.x, 0.0);
    u_xlat16_5.x = (-_RampSmooth) * 0.5 + _RampThreshold;
    u_xlat16_0.x = (-u_xlat16_5.x) + u_xlat16_0.x;
    u_xlat16_10 = _RampSmooth * 0.5 + _RampThreshold;
    u_xlat16_5.x = (-u_xlat16_5.x) + u_xlat16_10;
    u_xlat16_5.x = float(1.0) / u_xlat16_5.x;
    u_xlat16_0.x = u_xlat16_5.x * u_xlat16_0.x;
#ifdef UNITY_ADRENO_ES3
    u_xlat16_0.x = min(max(u_xlat16_0.x, 0.0), 1.0);
#else
    u_xlat16_0.x = clamp(u_xlat16_0.x, 0.0, 1.0);
#endif
    u_xlat16_5.x = u_xlat16_0.x * -2.0 + 3.0;
    u_xlat16_0.x = u_xlat16_0.x * u_xlat16_0.x;
    u_xlat16_0.x = u_xlat16_0.x * u_xlat16_5.x;
    u_xlat16_5.xyz = (-_HColor.xyz) + _SColor.xyz;
    u_xlat16_5.xyz = _SColor.www * u_xlat16_5.xyz + _HColor.xyz;
    u_xlat16_1.xyz = (-u_xlat16_5.xyz) + _HColor.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xxx * u_xlat16_1.xyz + u_xlat16_5.xyz;
    u_xlat1.xyz = vs_TEXCOORD1.xyz;
    u_xlat1.w = 1.0;
    u_xlat16_2.x = dot(unity_SHAr, u_xlat1);
    u_xlat16_2.y = dot(unity_SHAg, u_xlat1);
    u_xlat16_2.z = dot(unity_SHAb, u_xlat1);
    u_xlat16_2.xyz = u_xlat16_2.xyz + vs_TEXCOORD3.xyz;
    u_xlat16_2.xyz = max(u_xlat16_2.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat3.xyz = log2(u_xlat16_2.xyz);
    u_xlat3.xyz = u_xlat3.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
    u_xlat3.xyz = exp2(u_xlat3.xyz);
    u_xlat3.xyz = u_xlat3.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
    u_xlat3.xyz = max(u_xlat3.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat16_1 = texture(_MainTex, vs_TEXCOORD0.xy);
    u_xlat16_2.xyz = u_xlat16_1.xyz * _Color.xyz;
    SV_Target0.w = u_xlat16_1.w * _Color.w;
    u_xlat16_4.xyz = u_xlat3.xyz * u_xlat16_2.xyz;
    u_xlat16_2.xyz = u_xlat16_2.xyz * _LightColor0.xyz;
    SV_Target0.xyz = u_xlat16_2.xyz * u_xlat16_0.xyz + u_xlat16_4.xyz;
    return;
}

#endif
"
}
SubProgram "vulkan hw_tier00 " {
Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" }
"; SPIR-V
; Version: 1.0
; Generator: Khronos Glslang Reference Front End; 6
; Bound: 214
; Schema: 0
                                                      OpCapability Shader 
                                               %1 = OpExtInstImport "GLSL.std.450" 
                                                      OpMemoryModel Logical GLSL450 
                                                      OpEntryPoint Vertex %4 "main" %11 %53 %87 %97 %113 %117 %155 %195 %204 %207 
                                                      OpName vs_TEXCOORD2 "vs_TEXCOORD2" 
                                                      OpName vs_TEXCOORD0 "vs_TEXCOORD0" 
                                                      OpName vs_TEXCOORD1 "vs_TEXCOORD1" 
                                                      OpName vs_TEXCOORD3 "vs_TEXCOORD3" 
                                                      OpName vs_TEXCOORD5 "vs_TEXCOORD5" 
                                                      OpName vs_TEXCOORD6 "vs_TEXCOORD6" 
                                                      OpDecorate %11 Location 11 
                                                      OpDecorate %16 ArrayStride 16 
                                                      OpDecorate %17 ArrayStride 17 
                                                      OpDecorate %18 ArrayStride 18 
                                                      OpMemberDecorate %19 0 RelaxedPrecision 
                                                      OpMemberDecorate %19 0 Offset 19 
                                                      OpMemberDecorate %19 1 RelaxedPrecision 
                                                      OpMemberDecorate %19 1 Offset 19 
                                                      OpMemberDecorate %19 2 RelaxedPrecision 
                                                      OpMemberDecorate %19 2 Offset 19 
                                                      OpMemberDecorate %19 3 RelaxedPrecision 
                                                      OpMemberDecorate %19 3 Offset 19 
                                                      OpMemberDecorate %19 4 Offset 19 
                                                      OpMemberDecorate %19 5 Offset 19 
                                                      OpMemberDecorate %19 6 Offset 19 
                                                      OpMemberDecorate %19 7 Offset 19 
                                                      OpDecorate %19 Block 
                                                      OpDecorate %21 DescriptorSet 21 
                                                      OpDecorate %21 Binding 21 
                                                      OpDecorate vs_TEXCOORD2 Location 53 
                                                      OpMemberDecorate %85 0 BuiltIn 85 
                                                      OpMemberDecorate %85 1 BuiltIn 85 
                                                      OpMemberDecorate %85 2 BuiltIn 85 
                                                      OpDecorate %85 Block 
                                                      OpDecorate %97 Location 97 
                                                      OpDecorate vs_TEXCOORD0 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD0 Location 113 
                                                      OpDecorate %117 Location 117 
                                                      OpDecorate vs_TEXCOORD1 Location 155 
                                                      OpDecorate %158 RelaxedPrecision 
                                                      OpDecorate %169 RelaxedPrecision 
                                                      OpDecorate %170 RelaxedPrecision 
                                                      OpDecorate %172 RelaxedPrecision 
                                                      OpDecorate %179 RelaxedPrecision 
                                                      OpDecorate %181 RelaxedPrecision 
                                                      OpDecorate %182 RelaxedPrecision 
                                                      OpDecorate %183 RelaxedPrecision 
                                                      OpDecorate %186 RelaxedPrecision 
                                                      OpDecorate %187 RelaxedPrecision 
                                                      OpDecorate %188 RelaxedPrecision 
                                                      OpDecorate %191 RelaxedPrecision 
                                                      OpDecorate %192 RelaxedPrecision 
                                                      OpDecorate %193 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD3 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD3 Location 195 
                                                      OpDecorate %197 RelaxedPrecision 
                                                      OpDecorate %198 RelaxedPrecision 
                                                      OpDecorate %199 RelaxedPrecision 
                                                      OpDecorate %200 RelaxedPrecision 
                                                      OpDecorate %201 RelaxedPrecision 
                                                      OpDecorate %202 RelaxedPrecision 
                                                      OpDecorate %203 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD5 Location 204 
                                                      OpDecorate vs_TEXCOORD6 Location 207 
                                               %2 = OpTypeVoid 
                                               %3 = OpTypeFunction %2 
                                               %6 = OpTypeFloat 32 
                                               %7 = OpTypeVector %6 4 
                                               %8 = OpTypePointer Private %7 
                                Private f32_4* %9 = OpVariable Private 
                                              %10 = OpTypePointer Input %7 
                                 Input f32_4* %11 = OpVariable Input 
                                              %14 = OpTypeInt 32 0 
                                          u32 %15 = OpConstant 4 
                                              %16 = OpTypeArray %7 %15 
                                              %17 = OpTypeArray %7 %15 
                                              %18 = OpTypeArray %7 %15 
                                              %19 = OpTypeStruct %7 %7 %7 %7 %16 %17 %18 %7 
                                              %20 = OpTypePointer Uniform %19 
Uniform struct {f32_4; f32_4; f32_4; f32_4; f32_4[4]; f32_4[4]; f32_4[4]; f32_4;}* %21 = OpVariable Uniform 
                                              %22 = OpTypeInt 32 1 
                                          i32 %23 = OpConstant 4 
                                          i32 %24 = OpConstant 1 
                                              %25 = OpTypePointer Uniform %7 
                                          i32 %29 = OpConstant 0 
                                          i32 %37 = OpConstant 2 
                               Private f32_4* %45 = OpVariable Private 
                                          i32 %47 = OpConstant 3 
                                              %51 = OpTypeVector %6 3 
                                              %52 = OpTypePointer Output %51 
                       Output f32_3* vs_TEXCOORD2 = OpVariable Output 
                                          i32 %65 = OpConstant 6 
                                          u32 %83 = OpConstant 1 
                                              %84 = OpTypeArray %6 %83 
                                              %85 = OpTypeStruct %7 %6 %84 
                                              %86 = OpTypePointer Output %85 
         Output struct {f32_4; f32; f32[1];}* %87 = OpVariable Output 
                                              %95 = OpTypePointer Output %7 
                                 Input f32_4* %97 = OpVariable Input 
                                              %98 = OpTypeVector %6 2 
                                         i32 %101 = OpConstant 7 
                                             %112 = OpTypePointer Output %98 
                       Output f32_2* vs_TEXCOORD0 = OpVariable Output 
                                             %116 = OpTypePointer Input %51 
                                Input f32_3* %117 = OpVariable Input 
                                         i32 %119 = OpConstant 5 
                                         u32 %124 = OpConstant 0 
                                             %125 = OpTypePointer Private %6 
                                         u32 %138 = OpConstant 2 
                                Private f32* %140 = OpVariable Private 
                       Output f32_3* vs_TEXCOORD1 = OpVariable Output 
                                Private f32* %158 = OpVariable Private 
                              Private f32_4* %172 = OpVariable Private 
                                             %178 = OpTypePointer Private %51 
                              Private f32_3* %179 = OpVariable Private 
                       Output f32_3* vs_TEXCOORD3 = OpVariable Output 
                       Output f32_4* vs_TEXCOORD5 = OpVariable Output 
                                         f32 %205 = OpConstant 3.674022E-40 
                                       f32_4 %206 = OpConstantComposite %205 %205 %205 %205 
                       Output f32_4* vs_TEXCOORD6 = OpVariable Output 
                                             %208 = OpTypePointer Output %6 
                                          void %4 = OpFunction None %3 
                                               %5 = OpLabel 
                                        f32_4 %12 = OpLoad %11 
                                        f32_4 %13 = OpVectorShuffle %12 %12 1 1 1 1 
                               Uniform f32_4* %26 = OpAccessChain %21 %23 %24 
                                        f32_4 %27 = OpLoad %26 
                                        f32_4 %28 = OpFMul %13 %27 
                                                      OpStore %9 %28 
                               Uniform f32_4* %30 = OpAccessChain %21 %23 %29 
                                        f32_4 %31 = OpLoad %30 
                                        f32_4 %32 = OpLoad %11 
                                        f32_4 %33 = OpVectorShuffle %32 %32 0 0 0 0 
                                        f32_4 %34 = OpFMul %31 %33 
                                        f32_4 %35 = OpLoad %9 
                                        f32_4 %36 = OpFAdd %34 %35 
                                                      OpStore %9 %36 
                               Uniform f32_4* %38 = OpAccessChain %21 %23 %37 
                                        f32_4 %39 = OpLoad %38 
                                        f32_4 %40 = OpLoad %11 
                                        f32_4 %41 = OpVectorShuffle %40 %40 2 2 2 2 
                                        f32_4 %42 = OpFMul %39 %41 
                                        f32_4 %43 = OpLoad %9 
                                        f32_4 %44 = OpFAdd %42 %43 
                                                      OpStore %9 %44 
                                        f32_4 %46 = OpLoad %9 
                               Uniform f32_4* %48 = OpAccessChain %21 %23 %47 
                                        f32_4 %49 = OpLoad %48 
                                        f32_4 %50 = OpFAdd %46 %49 
                                                      OpStore %45 %50 
                               Uniform f32_4* %54 = OpAccessChain %21 %23 %47 
                                        f32_4 %55 = OpLoad %54 
                                        f32_3 %56 = OpVectorShuffle %55 %55 0 1 2 
                                        f32_4 %57 = OpLoad %11 
                                        f32_3 %58 = OpVectorShuffle %57 %57 3 3 3 
                                        f32_3 %59 = OpFMul %56 %58 
                                        f32_4 %60 = OpLoad %9 
                                        f32_3 %61 = OpVectorShuffle %60 %60 0 1 2 
                                        f32_3 %62 = OpFAdd %59 %61 
                                                      OpStore vs_TEXCOORD2 %62 
                                        f32_4 %63 = OpLoad %45 
                                        f32_4 %64 = OpVectorShuffle %63 %63 1 1 1 1 
                               Uniform f32_4* %66 = OpAccessChain %21 %65 %24 
                                        f32_4 %67 = OpLoad %66 
                                        f32_4 %68 = OpFMul %64 %67 
                                                      OpStore %9 %68 
                               Uniform f32_4* %69 = OpAccessChain %21 %65 %29 
                                        f32_4 %70 = OpLoad %69 
                                        f32_4 %71 = OpLoad %45 
                                        f32_4 %72 = OpVectorShuffle %71 %71 0 0 0 0 
                                        f32_4 %73 = OpFMul %70 %72 
                                        f32_4 %74 = OpLoad %9 
                                        f32_4 %75 = OpFAdd %73 %74 
                                                      OpStore %9 %75 
                               Uniform f32_4* %76 = OpAccessChain %21 %65 %37 
                                        f32_4 %77 = OpLoad %76 
                                        f32_4 %78 = OpLoad %45 
                                        f32_4 %79 = OpVectorShuffle %78 %78 2 2 2 2 
                                        f32_4 %80 = OpFMul %77 %79 
                                        f32_4 %81 = OpLoad %9 
                                        f32_4 %82 = OpFAdd %80 %81 
                                                      OpStore %9 %82 
                               Uniform f32_4* %88 = OpAccessChain %21 %65 %47 
                                        f32_4 %89 = OpLoad %88 
                                        f32_4 %90 = OpLoad %45 
                                        f32_4 %91 = OpVectorShuffle %90 %90 3 3 3 3 
                                        f32_4 %92 = OpFMul %89 %91 
                                        f32_4 %93 = OpLoad %9 
                                        f32_4 %94 = OpFAdd %92 %93 
                                Output f32_4* %96 = OpAccessChain %87 %29 
                                                      OpStore %96 %94 
                                        f32_4 %99 = OpLoad %97 
                                       f32_2 %100 = OpVectorShuffle %99 %99 0 1 
                              Uniform f32_4* %102 = OpAccessChain %21 %101 
                                       f32_4 %103 = OpLoad %102 
                                       f32_2 %104 = OpVectorShuffle %103 %103 0 1 
                                       f32_2 %105 = OpFMul %100 %104 
                              Uniform f32_4* %106 = OpAccessChain %21 %101 
                                       f32_4 %107 = OpLoad %106 
                                       f32_2 %108 = OpVectorShuffle %107 %107 2 3 
                                       f32_2 %109 = OpFAdd %105 %108 
                                       f32_4 %110 = OpLoad %9 
                                       f32_4 %111 = OpVectorShuffle %110 %109 4 5 2 3 
                                                      OpStore %9 %111 
                                       f32_4 %114 = OpLoad %9 
                                       f32_2 %115 = OpVectorShuffle %114 %114 0 1 
                                                      OpStore vs_TEXCOORD0 %115 
                                       f32_3 %118 = OpLoad %117 
                              Uniform f32_4* %120 = OpAccessChain %21 %119 %29 
                                       f32_4 %121 = OpLoad %120 
                                       f32_3 %122 = OpVectorShuffle %121 %121 0 1 2 
                                         f32 %123 = OpDot %118 %122 
                                Private f32* %126 = OpAccessChain %9 %124 
                                                      OpStore %126 %123 
                                       f32_3 %127 = OpLoad %117 
                              Uniform f32_4* %128 = OpAccessChain %21 %119 %24 
                                       f32_4 %129 = OpLoad %128 
                                       f32_3 %130 = OpVectorShuffle %129 %129 0 1 2 
                                         f32 %131 = OpDot %127 %130 
                                Private f32* %132 = OpAccessChain %9 %83 
                                                      OpStore %132 %131 
                                       f32_3 %133 = OpLoad %117 
                              Uniform f32_4* %134 = OpAccessChain %21 %119 %37 
                                       f32_4 %135 = OpLoad %134 
                                       f32_3 %136 = OpVectorShuffle %135 %135 0 1 2 
                                         f32 %137 = OpDot %133 %136 
                                Private f32* %139 = OpAccessChain %9 %138 
                                                      OpStore %139 %137 
                                       f32_4 %141 = OpLoad %9 
                                       f32_3 %142 = OpVectorShuffle %141 %141 0 1 2 
                                       f32_4 %143 = OpLoad %9 
                                       f32_3 %144 = OpVectorShuffle %143 %143 0 1 2 
                                         f32 %145 = OpDot %142 %144 
                                                      OpStore %140 %145 
                                         f32 %146 = OpLoad %140 
                                         f32 %147 = OpExtInst %1 32 %146 
                                                      OpStore %140 %147 
                                         f32 %148 = OpLoad %140 
                                       f32_3 %149 = OpCompositeConstruct %148 %148 %148 
                                       f32_4 %150 = OpLoad %9 
                                       f32_3 %151 = OpVectorShuffle %150 %150 0 1 2 
                                       f32_3 %152 = OpFMul %149 %151 
                                       f32_4 %153 = OpLoad %9 
                                       f32_4 %154 = OpVectorShuffle %153 %152 4 5 6 3 
                                                      OpStore %9 %154 
                                       f32_4 %156 = OpLoad %9 
                                       f32_3 %157 = OpVectorShuffle %156 %156 0 1 2 
                                                      OpStore vs_TEXCOORD1 %157 
                                Private f32* %159 = OpAccessChain %9 %83 
                                         f32 %160 = OpLoad %159 
                                Private f32* %161 = OpAccessChain %9 %83 
                                         f32 %162 = OpLoad %161 
                                         f32 %163 = OpFMul %160 %162 
                                                      OpStore %158 %163 
                                Private f32* %164 = OpAccessChain %9 %124 
                                         f32 %165 = OpLoad %164 
                                Private f32* %166 = OpAccessChain %9 %124 
                                         f32 %167 = OpLoad %166 
                                         f32 %168 = OpFMul %165 %167 
                                         f32 %169 = OpLoad %158 
                                         f32 %170 = OpFNegate %169 
                                         f32 %171 = OpFAdd %168 %170 
                                                      OpStore %158 %171 
                                       f32_4 %173 = OpLoad %9 
                                       f32_4 %174 = OpVectorShuffle %173 %173 1 2 2 0 
                                       f32_4 %175 = OpLoad %9 
                                       f32_4 %176 = OpVectorShuffle %175 %175 0 1 2 2 
                                       f32_4 %177 = OpFMul %174 %176 
                                                      OpStore %172 %177 
                              Uniform f32_4* %180 = OpAccessChain %21 %29 
                                       f32_4 %181 = OpLoad %180 
                                       f32_4 %182 = OpLoad %172 
                                         f32 %183 = OpDot %181 %182 
                                Private f32* %184 = OpAccessChain %179 %124 
                                                      OpStore %184 %183 
                              Uniform f32_4* %185 = OpAccessChain %21 %24 
                                       f32_4 %186 = OpLoad %185 
                                       f32_4 %187 = OpLoad %172 
                                         f32 %188 = OpDot %186 %187 
                                Private f32* %189 = OpAccessChain %179 %83 
                                                      OpStore %189 %188 
                              Uniform f32_4* %190 = OpAccessChain %21 %37 
                                       f32_4 %191 = OpLoad %190 
                                       f32_4 %192 = OpLoad %172 
                                         f32 %193 = OpDot %191 %192 
                                Private f32* %194 = OpAccessChain %179 %138 
                                                      OpStore %194 %193 
                              Uniform f32_4* %196 = OpAccessChain %21 %47 
                                       f32_4 %197 = OpLoad %196 
                                       f32_3 %198 = OpVectorShuffle %197 %197 0 1 2 
                                         f32 %199 = OpLoad %158 
                                       f32_3 %200 = OpCompositeConstruct %199 %199 %199 
                                       f32_3 %201 = OpFMul %198 %200 
                                       f32_3 %202 = OpLoad %179 
                                       f32_3 %203 = OpFAdd %201 %202 
                                                      OpStore vs_TEXCOORD3 %203 
                                                      OpStore vs_TEXCOORD5 %206 
                                                      OpStore vs_TEXCOORD6 %206 
                                 Output f32* %209 = OpAccessChain %87 %29 %83 
                                         f32 %210 = OpLoad %209 
                                         f32 %211 = OpFNegate %210 
                                 Output f32* %212 = OpAccessChain %87 %29 %83 
                                                      OpStore %212 %211 
                                                      OpReturn
                                                      OpFunctionEnd
; SPIR-V
; Version: 1.0
; Generator: Khronos Glslang Reference Front End; 6
; Bound: 247
; Schema: 0
                                                      OpCapability Shader 
                                               %1 = OpExtInstImport "GLSL.std.450" 
                                                      OpMemoryModel Logical GLSL450 
                                                      OpEntryPoint Fragment %4 "main" %11 %173 %210 %221 
                                                      OpExecutionMode %4 OriginUpperLeft 
                                                      OpName vs_TEXCOORD1 "vs_TEXCOORD1" 
                                                      OpName vs_TEXCOORD3 "vs_TEXCOORD3" 
                                                      OpName vs_TEXCOORD0 "vs_TEXCOORD0" 
                                                      OpDecorate %9 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD1 Location 11 
                                                      OpDecorate %20 RelaxedPrecision 
                                                      OpDecorate %21 RelaxedPrecision 
                                                      OpDecorate %23 RelaxedPrecision 
                                                      OpDecorate %24 RelaxedPrecision 
                                                      OpDecorate %27 RelaxedPrecision 
                                                      OpMemberDecorate %29 0 RelaxedPrecision 
                                                      OpMemberDecorate %29 0 Offset 29 
                                                      OpMemberDecorate %29 1 RelaxedPrecision 
                                                      OpMemberDecorate %29 1 Offset 29 
                                                      OpMemberDecorate %29 2 RelaxedPrecision 
                                                      OpMemberDecorate %29 2 Offset 29 
                                                      OpMemberDecorate %29 3 RelaxedPrecision 
                                                      OpMemberDecorate %29 3 Offset 29 
                                                      OpMemberDecorate %29 4 RelaxedPrecision 
                                                      OpMemberDecorate %29 4 Offset 29 
                                                      OpMemberDecorate %29 5 RelaxedPrecision 
                                                      OpMemberDecorate %29 5 Offset 29 
                                                      OpMemberDecorate %29 6 RelaxedPrecision 
                                                      OpMemberDecorate %29 6 Offset 29 
                                                      OpMemberDecorate %29 7 RelaxedPrecision 
                                                      OpMemberDecorate %29 7 Offset 29 
                                                      OpMemberDecorate %29 8 RelaxedPrecision 
                                                      OpMemberDecorate %29 8 Offset 29 
                                                      OpMemberDecorate %29 9 RelaxedPrecision 
                                                      OpMemberDecorate %29 9 Offset 29 
                                                      OpDecorate %29 Block 
                                                      OpDecorate %31 DescriptorSet 31 
                                                      OpDecorate %31 Binding 31 
                                                      OpDecorate %36 RelaxedPrecision 
                                                      OpDecorate %37 RelaxedPrecision 
                                                      OpDecorate %38 RelaxedPrecision 
                                                      OpDecorate %41 RelaxedPrecision 
                                                      OpDecorate %43 RelaxedPrecision 
                                                      OpDecorate %45 RelaxedPrecision 
                                                      OpDecorate %49 RelaxedPrecision 
                                                      OpDecorate %50 RelaxedPrecision 
                                                      OpDecorate %52 RelaxedPrecision 
                                                      OpDecorate %55 RelaxedPrecision 
                                                      OpDecorate %56 RelaxedPrecision 
                                                      OpDecorate %59 RelaxedPrecision 
                                                      OpDecorate %60 RelaxedPrecision 
                                                      OpDecorate %62 RelaxedPrecision 
                                                      OpDecorate %63 RelaxedPrecision 
                                                      OpDecorate %65 RelaxedPrecision 
                                                      OpDecorate %67 RelaxedPrecision 
                                                      OpDecorate %68 RelaxedPrecision 
                                                      OpDecorate %70 RelaxedPrecision 
                                                      OpDecorate %71 RelaxedPrecision 
                                                      OpDecorate %73 RelaxedPrecision 
                                                      OpDecorate %74 RelaxedPrecision 
                                                      OpDecorate %75 RelaxedPrecision 
                                                      OpDecorate %76 RelaxedPrecision 
                                                      OpDecorate %80 RelaxedPrecision 
                                                      OpDecorate %81 RelaxedPrecision 
                                                      OpDecorate %84 RelaxedPrecision 
                                                      OpDecorate %86 RelaxedPrecision 
                                                      OpDecorate %87 RelaxedPrecision 
                                                      OpDecorate %90 RelaxedPrecision 
                                                      OpDecorate %91 RelaxedPrecision 
                                                      OpDecorate %94 RelaxedPrecision 
                                                      OpDecorate %96 RelaxedPrecision 
                                                      OpDecorate %98 RelaxedPrecision 
                                                      OpDecorate %101 RelaxedPrecision 
                                                      OpDecorate %103 RelaxedPrecision 
                                                      OpDecorate %104 RelaxedPrecision 
                                                      OpDecorate %107 RelaxedPrecision 
                                                      OpDecorate %109 RelaxedPrecision 
                                                      OpDecorate %110 RelaxedPrecision 
                                                      OpDecorate %114 RelaxedPrecision 
                                                      OpDecorate %115 RelaxedPrecision 
                                                      OpDecorate %116 RelaxedPrecision 
                                                      OpDecorate %119 RelaxedPrecision 
                                                      OpDecorate %120 RelaxedPrecision 
                                                      OpDecorate %121 RelaxedPrecision 
                                                      OpDecorate %123 RelaxedPrecision 
                                                      OpDecorate %124 RelaxedPrecision 
                                                      OpDecorate %125 RelaxedPrecision 
                                                      OpDecorate %126 RelaxedPrecision 
                                                      OpDecorate %128 RelaxedPrecision 
                                                      OpDecorate %129 RelaxedPrecision 
                                                      OpDecorate %130 RelaxedPrecision 
                                                      OpDecorate %131 RelaxedPrecision 
                                                      OpDecorate %132 RelaxedPrecision 
                                                      OpDecorate %133 RelaxedPrecision 
                                                      OpDecorate %135 RelaxedPrecision 
                                                      OpDecorate %136 RelaxedPrecision 
                                                      OpDecorate %137 RelaxedPrecision 
                                                      OpDecorate %138 RelaxedPrecision 
                                                      OpDecorate %139 RelaxedPrecision 
                                                      OpDecorate %140 RelaxedPrecision 
                                                      OpDecorate %141 RelaxedPrecision 
                                                      OpDecorate %142 RelaxedPrecision 
                                                      OpDecorate %143 RelaxedPrecision 
                                                      OpDecorate %151 RelaxedPrecision 
                                                      OpDecorate %154 RelaxedPrecision 
                                                      OpDecorate %160 RelaxedPrecision 
                                                      OpDecorate %167 RelaxedPrecision 
                                                      OpDecorate %172 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD3 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD3 Location 173 
                                                      OpDecorate %174 RelaxedPrecision 
                                                      OpDecorate %175 RelaxedPrecision 
                                                      OpDecorate %176 RelaxedPrecision 
                                                      OpDecorate %178 RelaxedPrecision 
                                                      OpDecorate %180 RelaxedPrecision 
                                                      OpDecorate %181 RelaxedPrecision 
                                                      OpDecorate %197 RelaxedPrecision 
                                                      OpDecorate %200 RelaxedPrecision 
                                                      OpDecorate %200 DescriptorSet 200 
                                                      OpDecorate %200 Binding 200 
                                                      OpDecorate %201 RelaxedPrecision 
                                                      OpDecorate %204 RelaxedPrecision 
                                                      OpDecorate %204 DescriptorSet 204 
                                                      OpDecorate %204 Binding 204 
                                                      OpDecorate %205 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD0 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD0 Location 210 
                                                      OpDecorate %211 RelaxedPrecision 
                                                      OpDecorate %212 RelaxedPrecision 
                                                      OpDecorate %213 RelaxedPrecision 
                                                      OpDecorate %214 RelaxedPrecision 
                                                      OpDecorate %217 RelaxedPrecision 
                                                      OpDecorate %218 RelaxedPrecision 
                                                      OpDecorate %219 RelaxedPrecision 
                                                      OpDecorate %221 RelaxedPrecision 
                                                      OpDecorate %221 Location 221 
                                                      OpDecorate %223 RelaxedPrecision 
                                                      OpDecorate %225 RelaxedPrecision 
                                                      OpDecorate %226 RelaxedPrecision 
                                                      OpDecorate %229 RelaxedPrecision 
                                                      OpDecorate %231 RelaxedPrecision 
                                                      OpDecorate %233 RelaxedPrecision 
                                                      OpDecorate %236 RelaxedPrecision 
                                                      OpDecorate %237 RelaxedPrecision 
                                                      OpDecorate %238 RelaxedPrecision 
                                                      OpDecorate %239 RelaxedPrecision 
                                                      OpDecorate %240 RelaxedPrecision 
                                                      OpDecorate %241 RelaxedPrecision 
                                                      OpDecorate %242 RelaxedPrecision 
                                                      OpDecorate %243 RelaxedPrecision 
                                               %2 = OpTypeVoid 
                                               %3 = OpTypeFunction %2 
                                               %6 = OpTypeFloat 32 
                                               %7 = OpTypeVector %6 3 
                                               %8 = OpTypePointer Private %7 
                                Private f32_3* %9 = OpVariable Private 
                                              %10 = OpTypePointer Input %7 
                        Input f32_3* vs_TEXCOORD1 = OpVariable Input 
                                              %15 = OpTypeInt 32 0 
                                          u32 %16 = OpConstant 0 
                                              %17 = OpTypePointer Private %6 
                                              %28 = OpTypeVector %6 4 
                                              %29 = OpTypeStruct %28 %28 %28 %28 %28 %28 %28 %28 %6 %6 
                                              %30 = OpTypePointer Uniform %29 
Uniform struct {f32_4; f32_4; f32_4; f32_4; f32_4; f32_4; f32_4; f32_4; f32; f32;}* %31 = OpVariable Uniform 
                                              %32 = OpTypeInt 32 1 
                                          i32 %33 = OpConstant 0 
                                              %34 = OpTypePointer Uniform %28 
                                          f32 %42 = OpConstant 3.674022E-40 
                               Private f32_3* %45 = OpVariable Private 
                                          i32 %46 = OpConstant 9 
                                              %47 = OpTypePointer Uniform %6 
                                          f32 %51 = OpConstant 3.674022E-40 
                                          i32 %53 = OpConstant 8 
                                 Private f32* %65 = OpVariable Private 
                                          f32 %78 = OpConstant 3.674022E-40 
                                          f32 %95 = OpConstant 3.674022E-40 
                                          f32 %97 = OpConstant 3.674022E-40 
                                         i32 %112 = OpConstant 6 
                                         i32 %117 = OpConstant 7 
                              Private f32_3* %131 = OpVariable Private 
                                             %144 = OpTypePointer Private %28 
                              Private f32_4* %145 = OpVariable Private 
                                         u32 %149 = OpConstant 3 
                              Private f32_3* %151 = OpVariable Private 
                                         i32 %152 = OpConstant 1 
                                         i32 %158 = OpConstant 2 
                                         u32 %163 = OpConstant 1 
                                         i32 %165 = OpConstant 3 
                                         u32 %170 = OpConstant 2 
                        Input f32_3* vs_TEXCOORD3 = OpVariable Input 
                                       f32_3 %177 = OpConstantComposite %42 %42 %42 
                              Private f32_3* %179 = OpVariable Private 
                                         f32 %183 = OpConstant 3.674022E-40 
                                       f32_3 %184 = OpConstantComposite %183 %183 %183 
                                         f32 %189 = OpConstant 3.674022E-40 
                                       f32_3 %190 = OpConstantComposite %189 %189 %189 
                                         f32 %192 = OpConstant 3.674022E-40 
                                       f32_3 %193 = OpConstantComposite %192 %192 %192 
                              Private f32_4* %197 = OpVariable Private 
                                             %198 = OpTypeImage %6 Dim2D 0 0 0 1 Unknown 
                                             %199 = OpTypePointer UniformConstant %198 
        UniformConstant read_only Texture2D* %200 = OpVariable UniformConstant 
                                             %202 = OpTypeSampler 
                                             %203 = OpTypePointer UniformConstant %202 
                    UniformConstant sampler* %204 = OpVariable UniformConstant 
                                             %206 = OpTypeSampledImage %198 
                                             %208 = OpTypeVector %6 2 
                                             %209 = OpTypePointer Input %208 
                        Input f32_2* vs_TEXCOORD0 = OpVariable Input 
                                         i32 %215 = OpConstant 5 
                                             %220 = OpTypePointer Output %28 
                               Output f32_4* %221 = OpVariable Output 
                                             %227 = OpTypePointer Output %6 
                              Private f32_3* %229 = OpVariable Private 
                                         i32 %234 = OpConstant 4 
                                          void %4 = OpFunction None %3 
                                               %5 = OpLabel 
                                        f32_3 %12 = OpLoad vs_TEXCOORD1 
                                        f32_3 %13 = OpLoad vs_TEXCOORD1 
                                          f32 %14 = OpDot %12 %13 
                                 Private f32* %18 = OpAccessChain %9 %16 
                                                      OpStore %18 %14 
                                 Private f32* %19 = OpAccessChain %9 %16 
                                          f32 %20 = OpLoad %19 
                                          f32 %21 = OpExtInst %1 32 %20 
                                 Private f32* %22 = OpAccessChain %9 %16 
                                                      OpStore %22 %21 
                                        f32_3 %23 = OpLoad %9 
                                        f32_3 %24 = OpVectorShuffle %23 %23 0 0 0 
                                        f32_3 %25 = OpLoad vs_TEXCOORD1 
                                        f32_3 %26 = OpFMul %24 %25 
                                                      OpStore %9 %26 
                                        f32_3 %27 = OpLoad %9 
                               Uniform f32_4* %35 = OpAccessChain %31 %33 
                                        f32_4 %36 = OpLoad %35 
                                        f32_3 %37 = OpVectorShuffle %36 %36 0 1 2 
                                          f32 %38 = OpDot %27 %37 
                                 Private f32* %39 = OpAccessChain %9 %16 
                                                      OpStore %39 %38 
                                 Private f32* %40 = OpAccessChain %9 %16 
                                          f32 %41 = OpLoad %40 
                                          f32 %43 = OpExtInst %1 40 %41 %42 
                                 Private f32* %44 = OpAccessChain %9 %16 
                                                      OpStore %44 %43 
                                 Uniform f32* %48 = OpAccessChain %31 %46 
                                          f32 %49 = OpLoad %48 
                                          f32 %50 = OpFNegate %49 
                                          f32 %52 = OpFMul %50 %51 
                                 Uniform f32* %54 = OpAccessChain %31 %53 
                                          f32 %55 = OpLoad %54 
                                          f32 %56 = OpFAdd %52 %55 
                                 Private f32* %57 = OpAccessChain %45 %16 
                                                      OpStore %57 %56 
                                 Private f32* %58 = OpAccessChain %45 %16 
                                          f32 %59 = OpLoad %58 
                                          f32 %60 = OpFNegate %59 
                                 Private f32* %61 = OpAccessChain %9 %16 
                                          f32 %62 = OpLoad %61 
                                          f32 %63 = OpFAdd %60 %62 
                                 Private f32* %64 = OpAccessChain %9 %16 
                                                      OpStore %64 %63 
                                 Uniform f32* %66 = OpAccessChain %31 %46 
                                          f32 %67 = OpLoad %66 
                                          f32 %68 = OpFMul %67 %51 
                                 Uniform f32* %69 = OpAccessChain %31 %53 
                                          f32 %70 = OpLoad %69 
                                          f32 %71 = OpFAdd %68 %70 
                                                      OpStore %65 %71 
                                 Private f32* %72 = OpAccessChain %45 %16 
                                          f32 %73 = OpLoad %72 
                                          f32 %74 = OpFNegate %73 
                                          f32 %75 = OpLoad %65 
                                          f32 %76 = OpFAdd %74 %75 
                                 Private f32* %77 = OpAccessChain %45 %16 
                                                      OpStore %77 %76 
                                 Private f32* %79 = OpAccessChain %45 %16 
                                          f32 %80 = OpLoad %79 
                                          f32 %81 = OpFDiv %78 %80 
                                 Private f32* %82 = OpAccessChain %45 %16 
                                                      OpStore %82 %81 
                                 Private f32* %83 = OpAccessChain %45 %16 
                                          f32 %84 = OpLoad %83 
                                 Private f32* %85 = OpAccessChain %9 %16 
                                          f32 %86 = OpLoad %85 
                                          f32 %87 = OpFMul %84 %86 
                                 Private f32* %88 = OpAccessChain %9 %16 
                                                      OpStore %88 %87 
                                 Private f32* %89 = OpAccessChain %9 %16 
                                          f32 %90 = OpLoad %89 
                                          f32 %91 = OpExtInst %1 43 %90 %42 %78 
                                 Private f32* %92 = OpAccessChain %9 %16 
                                                      OpStore %92 %91 
                                 Private f32* %93 = OpAccessChain %9 %16 
                                          f32 %94 = OpLoad %93 
                                          f32 %96 = OpFMul %94 %95 
                                          f32 %98 = OpFAdd %96 %97 
                                 Private f32* %99 = OpAccessChain %45 %16 
                                                      OpStore %99 %98 
                                Private f32* %100 = OpAccessChain %9 %16 
                                         f32 %101 = OpLoad %100 
                                Private f32* %102 = OpAccessChain %9 %16 
                                         f32 %103 = OpLoad %102 
                                         f32 %104 = OpFMul %101 %103 
                                Private f32* %105 = OpAccessChain %9 %16 
                                                      OpStore %105 %104 
                                Private f32* %106 = OpAccessChain %9 %16 
                                         f32 %107 = OpLoad %106 
                                Private f32* %108 = OpAccessChain %45 %16 
                                         f32 %109 = OpLoad %108 
                                         f32 %110 = OpFMul %107 %109 
                                Private f32* %111 = OpAccessChain %9 %16 
                                                      OpStore %111 %110 
                              Uniform f32_4* %113 = OpAccessChain %31 %112 
                                       f32_4 %114 = OpLoad %113 
                                       f32_3 %115 = OpVectorShuffle %114 %114 0 1 2 
                                       f32_3 %116 = OpFNegate %115 
                              Uniform f32_4* %118 = OpAccessChain %31 %117 
                                       f32_4 %119 = OpLoad %118 
                                       f32_3 %120 = OpVectorShuffle %119 %119 0 1 2 
                                       f32_3 %121 = OpFAdd %116 %120 
                                                      OpStore %45 %121 
                              Uniform f32_4* %122 = OpAccessChain %31 %117 
                                       f32_4 %123 = OpLoad %122 
                                       f32_3 %124 = OpVectorShuffle %123 %123 3 3 3 
                                       f32_3 %125 = OpLoad %45 
                                       f32_3 %126 = OpFMul %124 %125 
                              Uniform f32_4* %127 = OpAccessChain %31 %112 
                                       f32_4 %128 = OpLoad %127 
                                       f32_3 %129 = OpVectorShuffle %128 %128 0 1 2 
                                       f32_3 %130 = OpFAdd %126 %129 
                                                      OpStore %45 %130 
                                       f32_3 %132 = OpLoad %45 
                                       f32_3 %133 = OpFNegate %132 
                              Uniform f32_4* %134 = OpAccessChain %31 %112 
                                       f32_4 %135 = OpLoad %134 
                                       f32_3 %136 = OpVectorShuffle %135 %135 0 1 2 
                                       f32_3 %137 = OpFAdd %133 %136 
                                                      OpStore %131 %137 
                                       f32_3 %138 = OpLoad %9 
                                       f32_3 %139 = OpVectorShuffle %138 %138 0 0 0 
                                       f32_3 %140 = OpLoad %131 
                                       f32_3 %141 = OpFMul %139 %140 
                                       f32_3 %142 = OpLoad %45 
                                       f32_3 %143 = OpFAdd %141 %142 
                                                      OpStore %9 %143 
                                       f32_3 %146 = OpLoad vs_TEXCOORD1 
                                       f32_4 %147 = OpLoad %145 
                                       f32_4 %148 = OpVectorShuffle %147 %146 4 5 6 3 
                                                      OpStore %145 %148 
                                Private f32* %150 = OpAccessChain %145 %149 
                                                      OpStore %150 %78 
                              Uniform f32_4* %153 = OpAccessChain %31 %152 
                                       f32_4 %154 = OpLoad %153 
                                       f32_4 %155 = OpLoad %145 
                                         f32 %156 = OpDot %154 %155 
                                Private f32* %157 = OpAccessChain %151 %16 
                                                      OpStore %157 %156 
                              Uniform f32_4* %159 = OpAccessChain %31 %158 
                                       f32_4 %160 = OpLoad %159 
                                       f32_4 %161 = OpLoad %145 
                                         f32 %162 = OpDot %160 %161 
                                Private f32* %164 = OpAccessChain %151 %163 
                                                      OpStore %164 %162 
                              Uniform f32_4* %166 = OpAccessChain %31 %165 
                                       f32_4 %167 = OpLoad %166 
                                       f32_4 %168 = OpLoad %145 
                                         f32 %169 = OpDot %167 %168 
                                Private f32* %171 = OpAccessChain %151 %170 
                                                      OpStore %171 %169 
                                       f32_3 %172 = OpLoad %151 
                                       f32_3 %174 = OpLoad vs_TEXCOORD3 
                                       f32_3 %175 = OpFAdd %172 %174 
                                                      OpStore %151 %175 
                                       f32_3 %176 = OpLoad %151 
                                       f32_3 %178 = OpExtInst %1 40 %176 %177 
                                                      OpStore %151 %178 
                                       f32_3 %180 = OpLoad %151 
                                       f32_3 %181 = OpExtInst %1 30 %180 
                                                      OpStore %179 %181 
                                       f32_3 %182 = OpLoad %179 
                                       f32_3 %185 = OpFMul %182 %184 
                                                      OpStore %179 %185 
                                       f32_3 %186 = OpLoad %179 
                                       f32_3 %187 = OpExtInst %1 29 %186 
                                                      OpStore %179 %187 
                                       f32_3 %188 = OpLoad %179 
                                       f32_3 %191 = OpFMul %188 %190 
                                       f32_3 %194 = OpFAdd %191 %193 
                                                      OpStore %179 %194 
                                       f32_3 %195 = OpLoad %179 
                                       f32_3 %196 = OpExtInst %1 40 %195 %177 
                                                      OpStore %179 %196 
                         read_only Texture2D %201 = OpLoad %200 
                                     sampler %205 = OpLoad %204 
                  read_only Texture2DSampled %207 = OpSampledImage %201 %205 
                                       f32_2 %211 = OpLoad vs_TEXCOORD0 
                                       f32_4 %212 = OpImageSampleImplicitLod %207 %211 
                                                      OpStore %197 %212 
                                       f32_4 %213 = OpLoad %197 
                                       f32_3 %214 = OpVectorShuffle %213 %213 0 1 2 
                              Uniform f32_4* %216 = OpAccessChain %31 %215 
                                       f32_4 %217 = OpLoad %216 
                                       f32_3 %218 = OpVectorShuffle %217 %217 0 1 2 
                                       f32_3 %219 = OpFMul %214 %218 
                                                      OpStore %151 %219 
                                Private f32* %222 = OpAccessChain %197 %149 
                                         f32 %223 = OpLoad %222 
                                Uniform f32* %224 = OpAccessChain %31 %215 %149 
                                         f32 %225 = OpLoad %224 
                                         f32 %226 = OpFMul %223 %225 
                                 Output f32* %228 = OpAccessChain %221 %149 
                                                      OpStore %228 %226 
                                       f32_3 %230 = OpLoad %179 
                                       f32_3 %231 = OpLoad %151 
                                       f32_3 %232 = OpFMul %230 %231 
                                                      OpStore %229 %232 
                                       f32_3 %233 = OpLoad %151 
                              Uniform f32_4* %235 = OpAccessChain %31 %234 
                                       f32_4 %236 = OpLoad %235 
                                       f32_3 %237 = OpVectorShuffle %236 %236 0 1 2 
                                       f32_3 %238 = OpFMul %233 %237 
                                                      OpStore %151 %238 
                                       f32_3 %239 = OpLoad %151 
                                       f32_3 %240 = OpLoad %9 
                                       f32_3 %241 = OpFMul %239 %240 
                                       f32_3 %242 = OpLoad %229 
                                       f32_3 %243 = OpFAdd %241 %242 
                                       f32_4 %244 = OpLoad %221 
                                       f32_4 %245 = OpVectorShuffle %244 %243 4 5 6 3 
                                                      OpStore %221 %245 
                                                      OpReturn
                                                      OpFunctionEnd
"
}
SubProgram "vulkan hw_tier01 " {
Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" }
"; SPIR-V
; Version: 1.0
; Generator: Khronos Glslang Reference Front End; 6
; Bound: 214
; Schema: 0
                                                      OpCapability Shader 
                                               %1 = OpExtInstImport "GLSL.std.450" 
                                                      OpMemoryModel Logical GLSL450 
                                                      OpEntryPoint Vertex %4 "main" %11 %53 %87 %97 %113 %117 %155 %195 %204 %207 
                                                      OpName vs_TEXCOORD2 "vs_TEXCOORD2" 
                                                      OpName vs_TEXCOORD0 "vs_TEXCOORD0" 
                                                      OpName vs_TEXCOORD1 "vs_TEXCOORD1" 
                                                      OpName vs_TEXCOORD3 "vs_TEXCOORD3" 
                                                      OpName vs_TEXCOORD5 "vs_TEXCOORD5" 
                                                      OpName vs_TEXCOORD6 "vs_TEXCOORD6" 
                                                      OpDecorate %11 Location 11 
                                                      OpDecorate %16 ArrayStride 16 
                                                      OpDecorate %17 ArrayStride 17 
                                                      OpDecorate %18 ArrayStride 18 
                                                      OpMemberDecorate %19 0 RelaxedPrecision 
                                                      OpMemberDecorate %19 0 Offset 19 
                                                      OpMemberDecorate %19 1 RelaxedPrecision 
                                                      OpMemberDecorate %19 1 Offset 19 
                                                      OpMemberDecorate %19 2 RelaxedPrecision 
                                                      OpMemberDecorate %19 2 Offset 19 
                                                      OpMemberDecorate %19 3 RelaxedPrecision 
                                                      OpMemberDecorate %19 3 Offset 19 
                                                      OpMemberDecorate %19 4 Offset 19 
                                                      OpMemberDecorate %19 5 Offset 19 
                                                      OpMemberDecorate %19 6 Offset 19 
                                                      OpMemberDecorate %19 7 Offset 19 
                                                      OpDecorate %19 Block 
                                                      OpDecorate %21 DescriptorSet 21 
                                                      OpDecorate %21 Binding 21 
                                                      OpDecorate vs_TEXCOORD2 Location 53 
                                                      OpMemberDecorate %85 0 BuiltIn 85 
                                                      OpMemberDecorate %85 1 BuiltIn 85 
                                                      OpMemberDecorate %85 2 BuiltIn 85 
                                                      OpDecorate %85 Block 
                                                      OpDecorate %97 Location 97 
                                                      OpDecorate vs_TEXCOORD0 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD0 Location 113 
                                                      OpDecorate %117 Location 117 
                                                      OpDecorate vs_TEXCOORD1 Location 155 
                                                      OpDecorate %158 RelaxedPrecision 
                                                      OpDecorate %169 RelaxedPrecision 
                                                      OpDecorate %170 RelaxedPrecision 
                                                      OpDecorate %172 RelaxedPrecision 
                                                      OpDecorate %179 RelaxedPrecision 
                                                      OpDecorate %181 RelaxedPrecision 
                                                      OpDecorate %182 RelaxedPrecision 
                                                      OpDecorate %183 RelaxedPrecision 
                                                      OpDecorate %186 RelaxedPrecision 
                                                      OpDecorate %187 RelaxedPrecision 
                                                      OpDecorate %188 RelaxedPrecision 
                                                      OpDecorate %191 RelaxedPrecision 
                                                      OpDecorate %192 RelaxedPrecision 
                                                      OpDecorate %193 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD3 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD3 Location 195 
                                                      OpDecorate %197 RelaxedPrecision 
                                                      OpDecorate %198 RelaxedPrecision 
                                                      OpDecorate %199 RelaxedPrecision 
                                                      OpDecorate %200 RelaxedPrecision 
                                                      OpDecorate %201 RelaxedPrecision 
                                                      OpDecorate %202 RelaxedPrecision 
                                                      OpDecorate %203 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD5 Location 204 
                                                      OpDecorate vs_TEXCOORD6 Location 207 
                                               %2 = OpTypeVoid 
                                               %3 = OpTypeFunction %2 
                                               %6 = OpTypeFloat 32 
                                               %7 = OpTypeVector %6 4 
                                               %8 = OpTypePointer Private %7 
                                Private f32_4* %9 = OpVariable Private 
                                              %10 = OpTypePointer Input %7 
                                 Input f32_4* %11 = OpVariable Input 
                                              %14 = OpTypeInt 32 0 
                                          u32 %15 = OpConstant 4 
                                              %16 = OpTypeArray %7 %15 
                                              %17 = OpTypeArray %7 %15 
                                              %18 = OpTypeArray %7 %15 
                                              %19 = OpTypeStruct %7 %7 %7 %7 %16 %17 %18 %7 
                                              %20 = OpTypePointer Uniform %19 
Uniform struct {f32_4; f32_4; f32_4; f32_4; f32_4[4]; f32_4[4]; f32_4[4]; f32_4;}* %21 = OpVariable Uniform 
                                              %22 = OpTypeInt 32 1 
                                          i32 %23 = OpConstant 4 
                                          i32 %24 = OpConstant 1 
                                              %25 = OpTypePointer Uniform %7 
                                          i32 %29 = OpConstant 0 
                                          i32 %37 = OpConstant 2 
                               Private f32_4* %45 = OpVariable Private 
                                          i32 %47 = OpConstant 3 
                                              %51 = OpTypeVector %6 3 
                                              %52 = OpTypePointer Output %51 
                       Output f32_3* vs_TEXCOORD2 = OpVariable Output 
                                          i32 %65 = OpConstant 6 
                                          u32 %83 = OpConstant 1 
                                              %84 = OpTypeArray %6 %83 
                                              %85 = OpTypeStruct %7 %6 %84 
                                              %86 = OpTypePointer Output %85 
         Output struct {f32_4; f32; f32[1];}* %87 = OpVariable Output 
                                              %95 = OpTypePointer Output %7 
                                 Input f32_4* %97 = OpVariable Input 
                                              %98 = OpTypeVector %6 2 
                                         i32 %101 = OpConstant 7 
                                             %112 = OpTypePointer Output %98 
                       Output f32_2* vs_TEXCOORD0 = OpVariable Output 
                                             %116 = OpTypePointer Input %51 
                                Input f32_3* %117 = OpVariable Input 
                                         i32 %119 = OpConstant 5 
                                         u32 %124 = OpConstant 0 
                                             %125 = OpTypePointer Private %6 
                                         u32 %138 = OpConstant 2 
                                Private f32* %140 = OpVariable Private 
                       Output f32_3* vs_TEXCOORD1 = OpVariable Output 
                                Private f32* %158 = OpVariable Private 
                              Private f32_4* %172 = OpVariable Private 
                                             %178 = OpTypePointer Private %51 
                              Private f32_3* %179 = OpVariable Private 
                       Output f32_3* vs_TEXCOORD3 = OpVariable Output 
                       Output f32_4* vs_TEXCOORD5 = OpVariable Output 
                                         f32 %205 = OpConstant 3.674022E-40 
                                       f32_4 %206 = OpConstantComposite %205 %205 %205 %205 
                       Output f32_4* vs_TEXCOORD6 = OpVariable Output 
                                             %208 = OpTypePointer Output %6 
                                          void %4 = OpFunction None %3 
                                               %5 = OpLabel 
                                        f32_4 %12 = OpLoad %11 
                                        f32_4 %13 = OpVectorShuffle %12 %12 1 1 1 1 
                               Uniform f32_4* %26 = OpAccessChain %21 %23 %24 
                                        f32_4 %27 = OpLoad %26 
                                        f32_4 %28 = OpFMul %13 %27 
                                                      OpStore %9 %28 
                               Uniform f32_4* %30 = OpAccessChain %21 %23 %29 
                                        f32_4 %31 = OpLoad %30 
                                        f32_4 %32 = OpLoad %11 
                                        f32_4 %33 = OpVectorShuffle %32 %32 0 0 0 0 
                                        f32_4 %34 = OpFMul %31 %33 
                                        f32_4 %35 = OpLoad %9 
                                        f32_4 %36 = OpFAdd %34 %35 
                                                      OpStore %9 %36 
                               Uniform f32_4* %38 = OpAccessChain %21 %23 %37 
                                        f32_4 %39 = OpLoad %38 
                                        f32_4 %40 = OpLoad %11 
                                        f32_4 %41 = OpVectorShuffle %40 %40 2 2 2 2 
                                        f32_4 %42 = OpFMul %39 %41 
                                        f32_4 %43 = OpLoad %9 
                                        f32_4 %44 = OpFAdd %42 %43 
                                                      OpStore %9 %44 
                                        f32_4 %46 = OpLoad %9 
                               Uniform f32_4* %48 = OpAccessChain %21 %23 %47 
                                        f32_4 %49 = OpLoad %48 
                                        f32_4 %50 = OpFAdd %46 %49 
                                                      OpStore %45 %50 
                               Uniform f32_4* %54 = OpAccessChain %21 %23 %47 
                                        f32_4 %55 = OpLoad %54 
                                        f32_3 %56 = OpVectorShuffle %55 %55 0 1 2 
                                        f32_4 %57 = OpLoad %11 
                                        f32_3 %58 = OpVectorShuffle %57 %57 3 3 3 
                                        f32_3 %59 = OpFMul %56 %58 
                                        f32_4 %60 = OpLoad %9 
                                        f32_3 %61 = OpVectorShuffle %60 %60 0 1 2 
                                        f32_3 %62 = OpFAdd %59 %61 
                                                      OpStore vs_TEXCOORD2 %62 
                                        f32_4 %63 = OpLoad %45 
                                        f32_4 %64 = OpVectorShuffle %63 %63 1 1 1 1 
                               Uniform f32_4* %66 = OpAccessChain %21 %65 %24 
                                        f32_4 %67 = OpLoad %66 
                                        f32_4 %68 = OpFMul %64 %67 
                                                      OpStore %9 %68 
                               Uniform f32_4* %69 = OpAccessChain %21 %65 %29 
                                        f32_4 %70 = OpLoad %69 
                                        f32_4 %71 = OpLoad %45 
                                        f32_4 %72 = OpVectorShuffle %71 %71 0 0 0 0 
                                        f32_4 %73 = OpFMul %70 %72 
                                        f32_4 %74 = OpLoad %9 
                                        f32_4 %75 = OpFAdd %73 %74 
                                                      OpStore %9 %75 
                               Uniform f32_4* %76 = OpAccessChain %21 %65 %37 
                                        f32_4 %77 = OpLoad %76 
                                        f32_4 %78 = OpLoad %45 
                                        f32_4 %79 = OpVectorShuffle %78 %78 2 2 2 2 
                                        f32_4 %80 = OpFMul %77 %79 
                                        f32_4 %81 = OpLoad %9 
                                        f32_4 %82 = OpFAdd %80 %81 
                                                      OpStore %9 %82 
                               Uniform f32_4* %88 = OpAccessChain %21 %65 %47 
                                        f32_4 %89 = OpLoad %88 
                                        f32_4 %90 = OpLoad %45 
                                        f32_4 %91 = OpVectorShuffle %90 %90 3 3 3 3 
                                        f32_4 %92 = OpFMul %89 %91 
                                        f32_4 %93 = OpLoad %9 
                                        f32_4 %94 = OpFAdd %92 %93 
                                Output f32_4* %96 = OpAccessChain %87 %29 
                                                      OpStore %96 %94 
                                        f32_4 %99 = OpLoad %97 
                                       f32_2 %100 = OpVectorShuffle %99 %99 0 1 
                              Uniform f32_4* %102 = OpAccessChain %21 %101 
                                       f32_4 %103 = OpLoad %102 
                                       f32_2 %104 = OpVectorShuffle %103 %103 0 1 
                                       f32_2 %105 = OpFMul %100 %104 
                              Uniform f32_4* %106 = OpAccessChain %21 %101 
                                       f32_4 %107 = OpLoad %106 
                                       f32_2 %108 = OpVectorShuffle %107 %107 2 3 
                                       f32_2 %109 = OpFAdd %105 %108 
                                       f32_4 %110 = OpLoad %9 
                                       f32_4 %111 = OpVectorShuffle %110 %109 4 5 2 3 
                                                      OpStore %9 %111 
                                       f32_4 %114 = OpLoad %9 
                                       f32_2 %115 = OpVectorShuffle %114 %114 0 1 
                                                      OpStore vs_TEXCOORD0 %115 
                                       f32_3 %118 = OpLoad %117 
                              Uniform f32_4* %120 = OpAccessChain %21 %119 %29 
                                       f32_4 %121 = OpLoad %120 
                                       f32_3 %122 = OpVectorShuffle %121 %121 0 1 2 
                                         f32 %123 = OpDot %118 %122 
                                Private f32* %126 = OpAccessChain %9 %124 
                                                      OpStore %126 %123 
                                       f32_3 %127 = OpLoad %117 
                              Uniform f32_4* %128 = OpAccessChain %21 %119 %24 
                                       f32_4 %129 = OpLoad %128 
                                       f32_3 %130 = OpVectorShuffle %129 %129 0 1 2 
                                         f32 %131 = OpDot %127 %130 
                                Private f32* %132 = OpAccessChain %9 %83 
                                                      OpStore %132 %131 
                                       f32_3 %133 = OpLoad %117 
                              Uniform f32_4* %134 = OpAccessChain %21 %119 %37 
                                       f32_4 %135 = OpLoad %134 
                                       f32_3 %136 = OpVectorShuffle %135 %135 0 1 2 
                                         f32 %137 = OpDot %133 %136 
                                Private f32* %139 = OpAccessChain %9 %138 
                                                      OpStore %139 %137 
                                       f32_4 %141 = OpLoad %9 
                                       f32_3 %142 = OpVectorShuffle %141 %141 0 1 2 
                                       f32_4 %143 = OpLoad %9 
                                       f32_3 %144 = OpVectorShuffle %143 %143 0 1 2 
                                         f32 %145 = OpDot %142 %144 
                                                      OpStore %140 %145 
                                         f32 %146 = OpLoad %140 
                                         f32 %147 = OpExtInst %1 32 %146 
                                                      OpStore %140 %147 
                                         f32 %148 = OpLoad %140 
                                       f32_3 %149 = OpCompositeConstruct %148 %148 %148 
                                       f32_4 %150 = OpLoad %9 
                                       f32_3 %151 = OpVectorShuffle %150 %150 0 1 2 
                                       f32_3 %152 = OpFMul %149 %151 
                                       f32_4 %153 = OpLoad %9 
                                       f32_4 %154 = OpVectorShuffle %153 %152 4 5 6 3 
                                                      OpStore %9 %154 
                                       f32_4 %156 = OpLoad %9 
                                       f32_3 %157 = OpVectorShuffle %156 %156 0 1 2 
                                                      OpStore vs_TEXCOORD1 %157 
                                Private f32* %159 = OpAccessChain %9 %83 
                                         f32 %160 = OpLoad %159 
                                Private f32* %161 = OpAccessChain %9 %83 
                                         f32 %162 = OpLoad %161 
                                         f32 %163 = OpFMul %160 %162 
                                                      OpStore %158 %163 
                                Private f32* %164 = OpAccessChain %9 %124 
                                         f32 %165 = OpLoad %164 
                                Private f32* %166 = OpAccessChain %9 %124 
                                         f32 %167 = OpLoad %166 
                                         f32 %168 = OpFMul %165 %167 
                                         f32 %169 = OpLoad %158 
                                         f32 %170 = OpFNegate %169 
                                         f32 %171 = OpFAdd %168 %170 
                                                      OpStore %158 %171 
                                       f32_4 %173 = OpLoad %9 
                                       f32_4 %174 = OpVectorShuffle %173 %173 1 2 2 0 
                                       f32_4 %175 = OpLoad %9 
                                       f32_4 %176 = OpVectorShuffle %175 %175 0 1 2 2 
                                       f32_4 %177 = OpFMul %174 %176 
                                                      OpStore %172 %177 
                              Uniform f32_4* %180 = OpAccessChain %21 %29 
                                       f32_4 %181 = OpLoad %180 
                                       f32_4 %182 = OpLoad %172 
                                         f32 %183 = OpDot %181 %182 
                                Private f32* %184 = OpAccessChain %179 %124 
                                                      OpStore %184 %183 
                              Uniform f32_4* %185 = OpAccessChain %21 %24 
                                       f32_4 %186 = OpLoad %185 
                                       f32_4 %187 = OpLoad %172 
                                         f32 %188 = OpDot %186 %187 
                                Private f32* %189 = OpAccessChain %179 %83 
                                                      OpStore %189 %188 
                              Uniform f32_4* %190 = OpAccessChain %21 %37 
                                       f32_4 %191 = OpLoad %190 
                                       f32_4 %192 = OpLoad %172 
                                         f32 %193 = OpDot %191 %192 
                                Private f32* %194 = OpAccessChain %179 %138 
                                                      OpStore %194 %193 
                              Uniform f32_4* %196 = OpAccessChain %21 %47 
                                       f32_4 %197 = OpLoad %196 
                                       f32_3 %198 = OpVectorShuffle %197 %197 0 1 2 
                                         f32 %199 = OpLoad %158 
                                       f32_3 %200 = OpCompositeConstruct %199 %199 %199 
                                       f32_3 %201 = OpFMul %198 %200 
                                       f32_3 %202 = OpLoad %179 
                                       f32_3 %203 = OpFAdd %201 %202 
                                                      OpStore vs_TEXCOORD3 %203 
                                                      OpStore vs_TEXCOORD5 %206 
                                                      OpStore vs_TEXCOORD6 %206 
                                 Output f32* %209 = OpAccessChain %87 %29 %83 
                                         f32 %210 = OpLoad %209 
                                         f32 %211 = OpFNegate %210 
                                 Output f32* %212 = OpAccessChain %87 %29 %83 
                                                      OpStore %212 %211 
                                                      OpReturn
                                                      OpFunctionEnd
; SPIR-V
; Version: 1.0
; Generator: Khronos Glslang Reference Front End; 6
; Bound: 247
; Schema: 0
                                                      OpCapability Shader 
                                               %1 = OpExtInstImport "GLSL.std.450" 
                                                      OpMemoryModel Logical GLSL450 
                                                      OpEntryPoint Fragment %4 "main" %11 %173 %210 %221 
                                                      OpExecutionMode %4 OriginUpperLeft 
                                                      OpName vs_TEXCOORD1 "vs_TEXCOORD1" 
                                                      OpName vs_TEXCOORD3 "vs_TEXCOORD3" 
                                                      OpName vs_TEXCOORD0 "vs_TEXCOORD0" 
                                                      OpDecorate %9 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD1 Location 11 
                                                      OpDecorate %20 RelaxedPrecision 
                                                      OpDecorate %21 RelaxedPrecision 
                                                      OpDecorate %23 RelaxedPrecision 
                                                      OpDecorate %24 RelaxedPrecision 
                                                      OpDecorate %27 RelaxedPrecision 
                                                      OpMemberDecorate %29 0 RelaxedPrecision 
                                                      OpMemberDecorate %29 0 Offset 29 
                                                      OpMemberDecorate %29 1 RelaxedPrecision 
                                                      OpMemberDecorate %29 1 Offset 29 
                                                      OpMemberDecorate %29 2 RelaxedPrecision 
                                                      OpMemberDecorate %29 2 Offset 29 
                                                      OpMemberDecorate %29 3 RelaxedPrecision 
                                                      OpMemberDecorate %29 3 Offset 29 
                                                      OpMemberDecorate %29 4 RelaxedPrecision 
                                                      OpMemberDecorate %29 4 Offset 29 
                                                      OpMemberDecorate %29 5 RelaxedPrecision 
                                                      OpMemberDecorate %29 5 Offset 29 
                                                      OpMemberDecorate %29 6 RelaxedPrecision 
                                                      OpMemberDecorate %29 6 Offset 29 
                                                      OpMemberDecorate %29 7 RelaxedPrecision 
                                                      OpMemberDecorate %29 7 Offset 29 
                                                      OpMemberDecorate %29 8 RelaxedPrecision 
                                                      OpMemberDecorate %29 8 Offset 29 
                                                      OpMemberDecorate %29 9 RelaxedPrecision 
                                                      OpMemberDecorate %29 9 Offset 29 
                                                      OpDecorate %29 Block 
                                                      OpDecorate %31 DescriptorSet 31 
                                                      OpDecorate %31 Binding 31 
                                                      OpDecorate %36 RelaxedPrecision 
                                                      OpDecorate %37 RelaxedPrecision 
                                                      OpDecorate %38 RelaxedPrecision 
                                                      OpDecorate %41 RelaxedPrecision 
                                                      OpDecorate %43 RelaxedPrecision 
                                                      OpDecorate %45 RelaxedPrecision 
                                                      OpDecorate %49 RelaxedPrecision 
                                                      OpDecorate %50 RelaxedPrecision 
                                                      OpDecorate %52 RelaxedPrecision 
                                                      OpDecorate %55 RelaxedPrecision 
                                                      OpDecorate %56 RelaxedPrecision 
                                                      OpDecorate %59 RelaxedPrecision 
                                                      OpDecorate %60 RelaxedPrecision 
                                                      OpDecorate %62 RelaxedPrecision 
                                                      OpDecorate %63 RelaxedPrecision 
                                                      OpDecorate %65 RelaxedPrecision 
                                                      OpDecorate %67 RelaxedPrecision 
                                                      OpDecorate %68 RelaxedPrecision 
                                                      OpDecorate %70 RelaxedPrecision 
                                                      OpDecorate %71 RelaxedPrecision 
                                                      OpDecorate %73 RelaxedPrecision 
                                                      OpDecorate %74 RelaxedPrecision 
                                                      OpDecorate %75 RelaxedPrecision 
                                                      OpDecorate %76 RelaxedPrecision 
                                                      OpDecorate %80 RelaxedPrecision 
                                                      OpDecorate %81 RelaxedPrecision 
                                                      OpDecorate %84 RelaxedPrecision 
                                                      OpDecorate %86 RelaxedPrecision 
                                                      OpDecorate %87 RelaxedPrecision 
                                                      OpDecorate %90 RelaxedPrecision 
                                                      OpDecorate %91 RelaxedPrecision 
                                                      OpDecorate %94 RelaxedPrecision 
                                                      OpDecorate %96 RelaxedPrecision 
                                                      OpDecorate %98 RelaxedPrecision 
                                                      OpDecorate %101 RelaxedPrecision 
                                                      OpDecorate %103 RelaxedPrecision 
                                                      OpDecorate %104 RelaxedPrecision 
                                                      OpDecorate %107 RelaxedPrecision 
                                                      OpDecorate %109 RelaxedPrecision 
                                                      OpDecorate %110 RelaxedPrecision 
                                                      OpDecorate %114 RelaxedPrecision 
                                                      OpDecorate %115 RelaxedPrecision 
                                                      OpDecorate %116 RelaxedPrecision 
                                                      OpDecorate %119 RelaxedPrecision 
                                                      OpDecorate %120 RelaxedPrecision 
                                                      OpDecorate %121 RelaxedPrecision 
                                                      OpDecorate %123 RelaxedPrecision 
                                                      OpDecorate %124 RelaxedPrecision 
                                                      OpDecorate %125 RelaxedPrecision 
                                                      OpDecorate %126 RelaxedPrecision 
                                                      OpDecorate %128 RelaxedPrecision 
                                                      OpDecorate %129 RelaxedPrecision 
                                                      OpDecorate %130 RelaxedPrecision 
                                                      OpDecorate %131 RelaxedPrecision 
                                                      OpDecorate %132 RelaxedPrecision 
                                                      OpDecorate %133 RelaxedPrecision 
                                                      OpDecorate %135 RelaxedPrecision 
                                                      OpDecorate %136 RelaxedPrecision 
                                                      OpDecorate %137 RelaxedPrecision 
                                                      OpDecorate %138 RelaxedPrecision 
                                                      OpDecorate %139 RelaxedPrecision 
                                                      OpDecorate %140 RelaxedPrecision 
                                                      OpDecorate %141 RelaxedPrecision 
                                                      OpDecorate %142 RelaxedPrecision 
                                                      OpDecorate %143 RelaxedPrecision 
                                                      OpDecorate %151 RelaxedPrecision 
                                                      OpDecorate %154 RelaxedPrecision 
                                                      OpDecorate %160 RelaxedPrecision 
                                                      OpDecorate %167 RelaxedPrecision 
                                                      OpDecorate %172 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD3 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD3 Location 173 
                                                      OpDecorate %174 RelaxedPrecision 
                                                      OpDecorate %175 RelaxedPrecision 
                                                      OpDecorate %176 RelaxedPrecision 
                                                      OpDecorate %178 RelaxedPrecision 
                                                      OpDecorate %180 RelaxedPrecision 
                                                      OpDecorate %181 RelaxedPrecision 
                                                      OpDecorate %197 RelaxedPrecision 
                                                      OpDecorate %200 RelaxedPrecision 
                                                      OpDecorate %200 DescriptorSet 200 
                                                      OpDecorate %200 Binding 200 
                                                      OpDecorate %201 RelaxedPrecision 
                                                      OpDecorate %204 RelaxedPrecision 
                                                      OpDecorate %204 DescriptorSet 204 
                                                      OpDecorate %204 Binding 204 
                                                      OpDecorate %205 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD0 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD0 Location 210 
                                                      OpDecorate %211 RelaxedPrecision 
                                                      OpDecorate %212 RelaxedPrecision 
                                                      OpDecorate %213 RelaxedPrecision 
                                                      OpDecorate %214 RelaxedPrecision 
                                                      OpDecorate %217 RelaxedPrecision 
                                                      OpDecorate %218 RelaxedPrecision 
                                                      OpDecorate %219 RelaxedPrecision 
                                                      OpDecorate %221 RelaxedPrecision 
                                                      OpDecorate %221 Location 221 
                                                      OpDecorate %223 RelaxedPrecision 
                                                      OpDecorate %225 RelaxedPrecision 
                                                      OpDecorate %226 RelaxedPrecision 
                                                      OpDecorate %229 RelaxedPrecision 
                                                      OpDecorate %231 RelaxedPrecision 
                                                      OpDecorate %233 RelaxedPrecision 
                                                      OpDecorate %236 RelaxedPrecision 
                                                      OpDecorate %237 RelaxedPrecision 
                                                      OpDecorate %238 RelaxedPrecision 
                                                      OpDecorate %239 RelaxedPrecision 
                                                      OpDecorate %240 RelaxedPrecision 
                                                      OpDecorate %241 RelaxedPrecision 
                                                      OpDecorate %242 RelaxedPrecision 
                                                      OpDecorate %243 RelaxedPrecision 
                                               %2 = OpTypeVoid 
                                               %3 = OpTypeFunction %2 
                                               %6 = OpTypeFloat 32 
                                               %7 = OpTypeVector %6 3 
                                               %8 = OpTypePointer Private %7 
                                Private f32_3* %9 = OpVariable Private 
                                              %10 = OpTypePointer Input %7 
                        Input f32_3* vs_TEXCOORD1 = OpVariable Input 
                                              %15 = OpTypeInt 32 0 
                                          u32 %16 = OpConstant 0 
                                              %17 = OpTypePointer Private %6 
                                              %28 = OpTypeVector %6 4 
                                              %29 = OpTypeStruct %28 %28 %28 %28 %28 %28 %28 %28 %6 %6 
                                              %30 = OpTypePointer Uniform %29 
Uniform struct {f32_4; f32_4; f32_4; f32_4; f32_4; f32_4; f32_4; f32_4; f32; f32;}* %31 = OpVariable Uniform 
                                              %32 = OpTypeInt 32 1 
                                          i32 %33 = OpConstant 0 
                                              %34 = OpTypePointer Uniform %28 
                                          f32 %42 = OpConstant 3.674022E-40 
                               Private f32_3* %45 = OpVariable Private 
                                          i32 %46 = OpConstant 9 
                                              %47 = OpTypePointer Uniform %6 
                                          f32 %51 = OpConstant 3.674022E-40 
                                          i32 %53 = OpConstant 8 
                                 Private f32* %65 = OpVariable Private 
                                          f32 %78 = OpConstant 3.674022E-40 
                                          f32 %95 = OpConstant 3.674022E-40 
                                          f32 %97 = OpConstant 3.674022E-40 
                                         i32 %112 = OpConstant 6 
                                         i32 %117 = OpConstant 7 
                              Private f32_3* %131 = OpVariable Private 
                                             %144 = OpTypePointer Private %28 
                              Private f32_4* %145 = OpVariable Private 
                                         u32 %149 = OpConstant 3 
                              Private f32_3* %151 = OpVariable Private 
                                         i32 %152 = OpConstant 1 
                                         i32 %158 = OpConstant 2 
                                         u32 %163 = OpConstant 1 
                                         i32 %165 = OpConstant 3 
                                         u32 %170 = OpConstant 2 
                        Input f32_3* vs_TEXCOORD3 = OpVariable Input 
                                       f32_3 %177 = OpConstantComposite %42 %42 %42 
                              Private f32_3* %179 = OpVariable Private 
                                         f32 %183 = OpConstant 3.674022E-40 
                                       f32_3 %184 = OpConstantComposite %183 %183 %183 
                                         f32 %189 = OpConstant 3.674022E-40 
                                       f32_3 %190 = OpConstantComposite %189 %189 %189 
                                         f32 %192 = OpConstant 3.674022E-40 
                                       f32_3 %193 = OpConstantComposite %192 %192 %192 
                              Private f32_4* %197 = OpVariable Private 
                                             %198 = OpTypeImage %6 Dim2D 0 0 0 1 Unknown 
                                             %199 = OpTypePointer UniformConstant %198 
        UniformConstant read_only Texture2D* %200 = OpVariable UniformConstant 
                                             %202 = OpTypeSampler 
                                             %203 = OpTypePointer UniformConstant %202 
                    UniformConstant sampler* %204 = OpVariable UniformConstant 
                                             %206 = OpTypeSampledImage %198 
                                             %208 = OpTypeVector %6 2 
                                             %209 = OpTypePointer Input %208 
                        Input f32_2* vs_TEXCOORD0 = OpVariable Input 
                                         i32 %215 = OpConstant 5 
                                             %220 = OpTypePointer Output %28 
                               Output f32_4* %221 = OpVariable Output 
                                             %227 = OpTypePointer Output %6 
                              Private f32_3* %229 = OpVariable Private 
                                         i32 %234 = OpConstant 4 
                                          void %4 = OpFunction None %3 
                                               %5 = OpLabel 
                                        f32_3 %12 = OpLoad vs_TEXCOORD1 
                                        f32_3 %13 = OpLoad vs_TEXCOORD1 
                                          f32 %14 = OpDot %12 %13 
                                 Private f32* %18 = OpAccessChain %9 %16 
                                                      OpStore %18 %14 
                                 Private f32* %19 = OpAccessChain %9 %16 
                                          f32 %20 = OpLoad %19 
                                          f32 %21 = OpExtInst %1 32 %20 
                                 Private f32* %22 = OpAccessChain %9 %16 
                                                      OpStore %22 %21 
                                        f32_3 %23 = OpLoad %9 
                                        f32_3 %24 = OpVectorShuffle %23 %23 0 0 0 
                                        f32_3 %25 = OpLoad vs_TEXCOORD1 
                                        f32_3 %26 = OpFMul %24 %25 
                                                      OpStore %9 %26 
                                        f32_3 %27 = OpLoad %9 
                               Uniform f32_4* %35 = OpAccessChain %31 %33 
                                        f32_4 %36 = OpLoad %35 
                                        f32_3 %37 = OpVectorShuffle %36 %36 0 1 2 
                                          f32 %38 = OpDot %27 %37 
                                 Private f32* %39 = OpAccessChain %9 %16 
                                                      OpStore %39 %38 
                                 Private f32* %40 = OpAccessChain %9 %16 
                                          f32 %41 = OpLoad %40 
                                          f32 %43 = OpExtInst %1 40 %41 %42 
                                 Private f32* %44 = OpAccessChain %9 %16 
                                                      OpStore %44 %43 
                                 Uniform f32* %48 = OpAccessChain %31 %46 
                                          f32 %49 = OpLoad %48 
                                          f32 %50 = OpFNegate %49 
                                          f32 %52 = OpFMul %50 %51 
                                 Uniform f32* %54 = OpAccessChain %31 %53 
                                          f32 %55 = OpLoad %54 
                                          f32 %56 = OpFAdd %52 %55 
                                 Private f32* %57 = OpAccessChain %45 %16 
                                                      OpStore %57 %56 
                                 Private f32* %58 = OpAccessChain %45 %16 
                                          f32 %59 = OpLoad %58 
                                          f32 %60 = OpFNegate %59 
                                 Private f32* %61 = OpAccessChain %9 %16 
                                          f32 %62 = OpLoad %61 
                                          f32 %63 = OpFAdd %60 %62 
                                 Private f32* %64 = OpAccessChain %9 %16 
                                                      OpStore %64 %63 
                                 Uniform f32* %66 = OpAccessChain %31 %46 
                                          f32 %67 = OpLoad %66 
                                          f32 %68 = OpFMul %67 %51 
                                 Uniform f32* %69 = OpAccessChain %31 %53 
                                          f32 %70 = OpLoad %69 
                                          f32 %71 = OpFAdd %68 %70 
                                                      OpStore %65 %71 
                                 Private f32* %72 = OpAccessChain %45 %16 
                                          f32 %73 = OpLoad %72 
                                          f32 %74 = OpFNegate %73 
                                          f32 %75 = OpLoad %65 
                                          f32 %76 = OpFAdd %74 %75 
                                 Private f32* %77 = OpAccessChain %45 %16 
                                                      OpStore %77 %76 
                                 Private f32* %79 = OpAccessChain %45 %16 
                                          f32 %80 = OpLoad %79 
                                          f32 %81 = OpFDiv %78 %80 
                                 Private f32* %82 = OpAccessChain %45 %16 
                                                      OpStore %82 %81 
                                 Private f32* %83 = OpAccessChain %45 %16 
                                          f32 %84 = OpLoad %83 
                                 Private f32* %85 = OpAccessChain %9 %16 
                                          f32 %86 = OpLoad %85 
                                          f32 %87 = OpFMul %84 %86 
                                 Private f32* %88 = OpAccessChain %9 %16 
                                                      OpStore %88 %87 
                                 Private f32* %89 = OpAccessChain %9 %16 
                                          f32 %90 = OpLoad %89 
                                          f32 %91 = OpExtInst %1 43 %90 %42 %78 
                                 Private f32* %92 = OpAccessChain %9 %16 
                                                      OpStore %92 %91 
                                 Private f32* %93 = OpAccessChain %9 %16 
                                          f32 %94 = OpLoad %93 
                                          f32 %96 = OpFMul %94 %95 
                                          f32 %98 = OpFAdd %96 %97 
                                 Private f32* %99 = OpAccessChain %45 %16 
                                                      OpStore %99 %98 
                                Private f32* %100 = OpAccessChain %9 %16 
                                         f32 %101 = OpLoad %100 
                                Private f32* %102 = OpAccessChain %9 %16 
                                         f32 %103 = OpLoad %102 
                                         f32 %104 = OpFMul %101 %103 
                                Private f32* %105 = OpAccessChain %9 %16 
                                                      OpStore %105 %104 
                                Private f32* %106 = OpAccessChain %9 %16 
                                         f32 %107 = OpLoad %106 
                                Private f32* %108 = OpAccessChain %45 %16 
                                         f32 %109 = OpLoad %108 
                                         f32 %110 = OpFMul %107 %109 
                                Private f32* %111 = OpAccessChain %9 %16 
                                                      OpStore %111 %110 
                              Uniform f32_4* %113 = OpAccessChain %31 %112 
                                       f32_4 %114 = OpLoad %113 
                                       f32_3 %115 = OpVectorShuffle %114 %114 0 1 2 
                                       f32_3 %116 = OpFNegate %115 
                              Uniform f32_4* %118 = OpAccessChain %31 %117 
                                       f32_4 %119 = OpLoad %118 
                                       f32_3 %120 = OpVectorShuffle %119 %119 0 1 2 
                                       f32_3 %121 = OpFAdd %116 %120 
                                                      OpStore %45 %121 
                              Uniform f32_4* %122 = OpAccessChain %31 %117 
                                       f32_4 %123 = OpLoad %122 
                                       f32_3 %124 = OpVectorShuffle %123 %123 3 3 3 
                                       f32_3 %125 = OpLoad %45 
                                       f32_3 %126 = OpFMul %124 %125 
                              Uniform f32_4* %127 = OpAccessChain %31 %112 
                                       f32_4 %128 = OpLoad %127 
                                       f32_3 %129 = OpVectorShuffle %128 %128 0 1 2 
                                       f32_3 %130 = OpFAdd %126 %129 
                                                      OpStore %45 %130 
                                       f32_3 %132 = OpLoad %45 
                                       f32_3 %133 = OpFNegate %132 
                              Uniform f32_4* %134 = OpAccessChain %31 %112 
                                       f32_4 %135 = OpLoad %134 
                                       f32_3 %136 = OpVectorShuffle %135 %135 0 1 2 
                                       f32_3 %137 = OpFAdd %133 %136 
                                                      OpStore %131 %137 
                                       f32_3 %138 = OpLoad %9 
                                       f32_3 %139 = OpVectorShuffle %138 %138 0 0 0 
                                       f32_3 %140 = OpLoad %131 
                                       f32_3 %141 = OpFMul %139 %140 
                                       f32_3 %142 = OpLoad %45 
                                       f32_3 %143 = OpFAdd %141 %142 
                                                      OpStore %9 %143 
                                       f32_3 %146 = OpLoad vs_TEXCOORD1 
                                       f32_4 %147 = OpLoad %145 
                                       f32_4 %148 = OpVectorShuffle %147 %146 4 5 6 3 
                                                      OpStore %145 %148 
                                Private f32* %150 = OpAccessChain %145 %149 
                                                      OpStore %150 %78 
                              Uniform f32_4* %153 = OpAccessChain %31 %152 
                                       f32_4 %154 = OpLoad %153 
                                       f32_4 %155 = OpLoad %145 
                                         f32 %156 = OpDot %154 %155 
                                Private f32* %157 = OpAccessChain %151 %16 
                                                      OpStore %157 %156 
                              Uniform f32_4* %159 = OpAccessChain %31 %158 
                                       f32_4 %160 = OpLoad %159 
                                       f32_4 %161 = OpLoad %145 
                                         f32 %162 = OpDot %160 %161 
                                Private f32* %164 = OpAccessChain %151 %163 
                                                      OpStore %164 %162 
                              Uniform f32_4* %166 = OpAccessChain %31 %165 
                                       f32_4 %167 = OpLoad %166 
                                       f32_4 %168 = OpLoad %145 
                                         f32 %169 = OpDot %167 %168 
                                Private f32* %171 = OpAccessChain %151 %170 
                                                      OpStore %171 %169 
                                       f32_3 %172 = OpLoad %151 
                                       f32_3 %174 = OpLoad vs_TEXCOORD3 
                                       f32_3 %175 = OpFAdd %172 %174 
                                                      OpStore %151 %175 
                                       f32_3 %176 = OpLoad %151 
                                       f32_3 %178 = OpExtInst %1 40 %176 %177 
                                                      OpStore %151 %178 
                                       f32_3 %180 = OpLoad %151 
                                       f32_3 %181 = OpExtInst %1 30 %180 
                                                      OpStore %179 %181 
                                       f32_3 %182 = OpLoad %179 
                                       f32_3 %185 = OpFMul %182 %184 
                                                      OpStore %179 %185 
                                       f32_3 %186 = OpLoad %179 
                                       f32_3 %187 = OpExtInst %1 29 %186 
                                                      OpStore %179 %187 
                                       f32_3 %188 = OpLoad %179 
                                       f32_3 %191 = OpFMul %188 %190 
                                       f32_3 %194 = OpFAdd %191 %193 
                                                      OpStore %179 %194 
                                       f32_3 %195 = OpLoad %179 
                                       f32_3 %196 = OpExtInst %1 40 %195 %177 
                                                      OpStore %179 %196 
                         read_only Texture2D %201 = OpLoad %200 
                                     sampler %205 = OpLoad %204 
                  read_only Texture2DSampled %207 = OpSampledImage %201 %205 
                                       f32_2 %211 = OpLoad vs_TEXCOORD0 
                                       f32_4 %212 = OpImageSampleImplicitLod %207 %211 
                                                      OpStore %197 %212 
                                       f32_4 %213 = OpLoad %197 
                                       f32_3 %214 = OpVectorShuffle %213 %213 0 1 2 
                              Uniform f32_4* %216 = OpAccessChain %31 %215 
                                       f32_4 %217 = OpLoad %216 
                                       f32_3 %218 = OpVectorShuffle %217 %217 0 1 2 
                                       f32_3 %219 = OpFMul %214 %218 
                                                      OpStore %151 %219 
                                Private f32* %222 = OpAccessChain %197 %149 
                                         f32 %223 = OpLoad %222 
                                Uniform f32* %224 = OpAccessChain %31 %215 %149 
                                         f32 %225 = OpLoad %224 
                                         f32 %226 = OpFMul %223 %225 
                                 Output f32* %228 = OpAccessChain %221 %149 
                                                      OpStore %228 %226 
                                       f32_3 %230 = OpLoad %179 
                                       f32_3 %231 = OpLoad %151 
                                       f32_3 %232 = OpFMul %230 %231 
                                                      OpStore %229 %232 
                                       f32_3 %233 = OpLoad %151 
                              Uniform f32_4* %235 = OpAccessChain %31 %234 
                                       f32_4 %236 = OpLoad %235 
                                       f32_3 %237 = OpVectorShuffle %236 %236 0 1 2 
                                       f32_3 %238 = OpFMul %233 %237 
                                                      OpStore %151 %238 
                                       f32_3 %239 = OpLoad %151 
                                       f32_3 %240 = OpLoad %9 
                                       f32_3 %241 = OpFMul %239 %240 
                                       f32_3 %242 = OpLoad %229 
                                       f32_3 %243 = OpFAdd %241 %242 
                                       f32_4 %244 = OpLoad %221 
                                       f32_4 %245 = OpVectorShuffle %244 %243 4 5 6 3 
                                                      OpStore %221 %245 
                                                      OpReturn
                                                      OpFunctionEnd
"
}
SubProgram "vulkan hw_tier02 " {
Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" }
"; SPIR-V
; Version: 1.0
; Generator: Khronos Glslang Reference Front End; 6
; Bound: 214
; Schema: 0
                                                      OpCapability Shader 
                                               %1 = OpExtInstImport "GLSL.std.450" 
                                                      OpMemoryModel Logical GLSL450 
                                                      OpEntryPoint Vertex %4 "main" %11 %53 %87 %97 %113 %117 %155 %195 %204 %207 
                                                      OpName vs_TEXCOORD2 "vs_TEXCOORD2" 
                                                      OpName vs_TEXCOORD0 "vs_TEXCOORD0" 
                                                      OpName vs_TEXCOORD1 "vs_TEXCOORD1" 
                                                      OpName vs_TEXCOORD3 "vs_TEXCOORD3" 
                                                      OpName vs_TEXCOORD5 "vs_TEXCOORD5" 
                                                      OpName vs_TEXCOORD6 "vs_TEXCOORD6" 
                                                      OpDecorate %11 Location 11 
                                                      OpDecorate %16 ArrayStride 16 
                                                      OpDecorate %17 ArrayStride 17 
                                                      OpDecorate %18 ArrayStride 18 
                                                      OpMemberDecorate %19 0 RelaxedPrecision 
                                                      OpMemberDecorate %19 0 Offset 19 
                                                      OpMemberDecorate %19 1 RelaxedPrecision 
                                                      OpMemberDecorate %19 1 Offset 19 
                                                      OpMemberDecorate %19 2 RelaxedPrecision 
                                                      OpMemberDecorate %19 2 Offset 19 
                                                      OpMemberDecorate %19 3 RelaxedPrecision 
                                                      OpMemberDecorate %19 3 Offset 19 
                                                      OpMemberDecorate %19 4 Offset 19 
                                                      OpMemberDecorate %19 5 Offset 19 
                                                      OpMemberDecorate %19 6 Offset 19 
                                                      OpMemberDecorate %19 7 Offset 19 
                                                      OpDecorate %19 Block 
                                                      OpDecorate %21 DescriptorSet 21 
                                                      OpDecorate %21 Binding 21 
                                                      OpDecorate vs_TEXCOORD2 Location 53 
                                                      OpMemberDecorate %85 0 BuiltIn 85 
                                                      OpMemberDecorate %85 1 BuiltIn 85 
                                                      OpMemberDecorate %85 2 BuiltIn 85 
                                                      OpDecorate %85 Block 
                                                      OpDecorate %97 Location 97 
                                                      OpDecorate vs_TEXCOORD0 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD0 Location 113 
                                                      OpDecorate %117 Location 117 
                                                      OpDecorate vs_TEXCOORD1 Location 155 
                                                      OpDecorate %158 RelaxedPrecision 
                                                      OpDecorate %169 RelaxedPrecision 
                                                      OpDecorate %170 RelaxedPrecision 
                                                      OpDecorate %172 RelaxedPrecision 
                                                      OpDecorate %179 RelaxedPrecision 
                                                      OpDecorate %181 RelaxedPrecision 
                                                      OpDecorate %182 RelaxedPrecision 
                                                      OpDecorate %183 RelaxedPrecision 
                                                      OpDecorate %186 RelaxedPrecision 
                                                      OpDecorate %187 RelaxedPrecision 
                                                      OpDecorate %188 RelaxedPrecision 
                                                      OpDecorate %191 RelaxedPrecision 
                                                      OpDecorate %192 RelaxedPrecision 
                                                      OpDecorate %193 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD3 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD3 Location 195 
                                                      OpDecorate %197 RelaxedPrecision 
                                                      OpDecorate %198 RelaxedPrecision 
                                                      OpDecorate %199 RelaxedPrecision 
                                                      OpDecorate %200 RelaxedPrecision 
                                                      OpDecorate %201 RelaxedPrecision 
                                                      OpDecorate %202 RelaxedPrecision 
                                                      OpDecorate %203 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD5 Location 204 
                                                      OpDecorate vs_TEXCOORD6 Location 207 
                                               %2 = OpTypeVoid 
                                               %3 = OpTypeFunction %2 
                                               %6 = OpTypeFloat 32 
                                               %7 = OpTypeVector %6 4 
                                               %8 = OpTypePointer Private %7 
                                Private f32_4* %9 = OpVariable Private 
                                              %10 = OpTypePointer Input %7 
                                 Input f32_4* %11 = OpVariable Input 
                                              %14 = OpTypeInt 32 0 
                                          u32 %15 = OpConstant 4 
                                              %16 = OpTypeArray %7 %15 
                                              %17 = OpTypeArray %7 %15 
                                              %18 = OpTypeArray %7 %15 
                                              %19 = OpTypeStruct %7 %7 %7 %7 %16 %17 %18 %7 
                                              %20 = OpTypePointer Uniform %19 
Uniform struct {f32_4; f32_4; f32_4; f32_4; f32_4[4]; f32_4[4]; f32_4[4]; f32_4;}* %21 = OpVariable Uniform 
                                              %22 = OpTypeInt 32 1 
                                          i32 %23 = OpConstant 4 
                                          i32 %24 = OpConstant 1 
                                              %25 = OpTypePointer Uniform %7 
                                          i32 %29 = OpConstant 0 
                                          i32 %37 = OpConstant 2 
                               Private f32_4* %45 = OpVariable Private 
                                          i32 %47 = OpConstant 3 
                                              %51 = OpTypeVector %6 3 
                                              %52 = OpTypePointer Output %51 
                       Output f32_3* vs_TEXCOORD2 = OpVariable Output 
                                          i32 %65 = OpConstant 6 
                                          u32 %83 = OpConstant 1 
                                              %84 = OpTypeArray %6 %83 
                                              %85 = OpTypeStruct %7 %6 %84 
                                              %86 = OpTypePointer Output %85 
         Output struct {f32_4; f32; f32[1];}* %87 = OpVariable Output 
                                              %95 = OpTypePointer Output %7 
                                 Input f32_4* %97 = OpVariable Input 
                                              %98 = OpTypeVector %6 2 
                                         i32 %101 = OpConstant 7 
                                             %112 = OpTypePointer Output %98 
                       Output f32_2* vs_TEXCOORD0 = OpVariable Output 
                                             %116 = OpTypePointer Input %51 
                                Input f32_3* %117 = OpVariable Input 
                                         i32 %119 = OpConstant 5 
                                         u32 %124 = OpConstant 0 
                                             %125 = OpTypePointer Private %6 
                                         u32 %138 = OpConstant 2 
                                Private f32* %140 = OpVariable Private 
                       Output f32_3* vs_TEXCOORD1 = OpVariable Output 
                                Private f32* %158 = OpVariable Private 
                              Private f32_4* %172 = OpVariable Private 
                                             %178 = OpTypePointer Private %51 
                              Private f32_3* %179 = OpVariable Private 
                       Output f32_3* vs_TEXCOORD3 = OpVariable Output 
                       Output f32_4* vs_TEXCOORD5 = OpVariable Output 
                                         f32 %205 = OpConstant 3.674022E-40 
                                       f32_4 %206 = OpConstantComposite %205 %205 %205 %205 
                       Output f32_4* vs_TEXCOORD6 = OpVariable Output 
                                             %208 = OpTypePointer Output %6 
                                          void %4 = OpFunction None %3 
                                               %5 = OpLabel 
                                        f32_4 %12 = OpLoad %11 
                                        f32_4 %13 = OpVectorShuffle %12 %12 1 1 1 1 
                               Uniform f32_4* %26 = OpAccessChain %21 %23 %24 
                                        f32_4 %27 = OpLoad %26 
                                        f32_4 %28 = OpFMul %13 %27 
                                                      OpStore %9 %28 
                               Uniform f32_4* %30 = OpAccessChain %21 %23 %29 
                                        f32_4 %31 = OpLoad %30 
                                        f32_4 %32 = OpLoad %11 
                                        f32_4 %33 = OpVectorShuffle %32 %32 0 0 0 0 
                                        f32_4 %34 = OpFMul %31 %33 
                                        f32_4 %35 = OpLoad %9 
                                        f32_4 %36 = OpFAdd %34 %35 
                                                      OpStore %9 %36 
                               Uniform f32_4* %38 = OpAccessChain %21 %23 %37 
                                        f32_4 %39 = OpLoad %38 
                                        f32_4 %40 = OpLoad %11 
                                        f32_4 %41 = OpVectorShuffle %40 %40 2 2 2 2 
                                        f32_4 %42 = OpFMul %39 %41 
                                        f32_4 %43 = OpLoad %9 
                                        f32_4 %44 = OpFAdd %42 %43 
                                                      OpStore %9 %44 
                                        f32_4 %46 = OpLoad %9 
                               Uniform f32_4* %48 = OpAccessChain %21 %23 %47 
                                        f32_4 %49 = OpLoad %48 
                                        f32_4 %50 = OpFAdd %46 %49 
                                                      OpStore %45 %50 
                               Uniform f32_4* %54 = OpAccessChain %21 %23 %47 
                                        f32_4 %55 = OpLoad %54 
                                        f32_3 %56 = OpVectorShuffle %55 %55 0 1 2 
                                        f32_4 %57 = OpLoad %11 
                                        f32_3 %58 = OpVectorShuffle %57 %57 3 3 3 
                                        f32_3 %59 = OpFMul %56 %58 
                                        f32_4 %60 = OpLoad %9 
                                        f32_3 %61 = OpVectorShuffle %60 %60 0 1 2 
                                        f32_3 %62 = OpFAdd %59 %61 
                                                      OpStore vs_TEXCOORD2 %62 
                                        f32_4 %63 = OpLoad %45 
                                        f32_4 %64 = OpVectorShuffle %63 %63 1 1 1 1 
                               Uniform f32_4* %66 = OpAccessChain %21 %65 %24 
                                        f32_4 %67 = OpLoad %66 
                                        f32_4 %68 = OpFMul %64 %67 
                                                      OpStore %9 %68 
                               Uniform f32_4* %69 = OpAccessChain %21 %65 %29 
                                        f32_4 %70 = OpLoad %69 
                                        f32_4 %71 = OpLoad %45 
                                        f32_4 %72 = OpVectorShuffle %71 %71 0 0 0 0 
                                        f32_4 %73 = OpFMul %70 %72 
                                        f32_4 %74 = OpLoad %9 
                                        f32_4 %75 = OpFAdd %73 %74 
                                                      OpStore %9 %75 
                               Uniform f32_4* %76 = OpAccessChain %21 %65 %37 
                                        f32_4 %77 = OpLoad %76 
                                        f32_4 %78 = OpLoad %45 
                                        f32_4 %79 = OpVectorShuffle %78 %78 2 2 2 2 
                                        f32_4 %80 = OpFMul %77 %79 
                                        f32_4 %81 = OpLoad %9 
                                        f32_4 %82 = OpFAdd %80 %81 
                                                      OpStore %9 %82 
                               Uniform f32_4* %88 = OpAccessChain %21 %65 %47 
                                        f32_4 %89 = OpLoad %88 
                                        f32_4 %90 = OpLoad %45 
                                        f32_4 %91 = OpVectorShuffle %90 %90 3 3 3 3 
                                        f32_4 %92 = OpFMul %89 %91 
                                        f32_4 %93 = OpLoad %9 
                                        f32_4 %94 = OpFAdd %92 %93 
                                Output f32_4* %96 = OpAccessChain %87 %29 
                                                      OpStore %96 %94 
                                        f32_4 %99 = OpLoad %97 
                                       f32_2 %100 = OpVectorShuffle %99 %99 0 1 
                              Uniform f32_4* %102 = OpAccessChain %21 %101 
                                       f32_4 %103 = OpLoad %102 
                                       f32_2 %104 = OpVectorShuffle %103 %103 0 1 
                                       f32_2 %105 = OpFMul %100 %104 
                              Uniform f32_4* %106 = OpAccessChain %21 %101 
                                       f32_4 %107 = OpLoad %106 
                                       f32_2 %108 = OpVectorShuffle %107 %107 2 3 
                                       f32_2 %109 = OpFAdd %105 %108 
                                       f32_4 %110 = OpLoad %9 
                                       f32_4 %111 = OpVectorShuffle %110 %109 4 5 2 3 
                                                      OpStore %9 %111 
                                       f32_4 %114 = OpLoad %9 
                                       f32_2 %115 = OpVectorShuffle %114 %114 0 1 
                                                      OpStore vs_TEXCOORD0 %115 
                                       f32_3 %118 = OpLoad %117 
                              Uniform f32_4* %120 = OpAccessChain %21 %119 %29 
                                       f32_4 %121 = OpLoad %120 
                                       f32_3 %122 = OpVectorShuffle %121 %121 0 1 2 
                                         f32 %123 = OpDot %118 %122 
                                Private f32* %126 = OpAccessChain %9 %124 
                                                      OpStore %126 %123 
                                       f32_3 %127 = OpLoad %117 
                              Uniform f32_4* %128 = OpAccessChain %21 %119 %24 
                                       f32_4 %129 = OpLoad %128 
                                       f32_3 %130 = OpVectorShuffle %129 %129 0 1 2 
                                         f32 %131 = OpDot %127 %130 
                                Private f32* %132 = OpAccessChain %9 %83 
                                                      OpStore %132 %131 
                                       f32_3 %133 = OpLoad %117 
                              Uniform f32_4* %134 = OpAccessChain %21 %119 %37 
                                       f32_4 %135 = OpLoad %134 
                                       f32_3 %136 = OpVectorShuffle %135 %135 0 1 2 
                                         f32 %137 = OpDot %133 %136 
                                Private f32* %139 = OpAccessChain %9 %138 
                                                      OpStore %139 %137 
                                       f32_4 %141 = OpLoad %9 
                                       f32_3 %142 = OpVectorShuffle %141 %141 0 1 2 
                                       f32_4 %143 = OpLoad %9 
                                       f32_3 %144 = OpVectorShuffle %143 %143 0 1 2 
                                         f32 %145 = OpDot %142 %144 
                                                      OpStore %140 %145 
                                         f32 %146 = OpLoad %140 
                                         f32 %147 = OpExtInst %1 32 %146 
                                                      OpStore %140 %147 
                                         f32 %148 = OpLoad %140 
                                       f32_3 %149 = OpCompositeConstruct %148 %148 %148 
                                       f32_4 %150 = OpLoad %9 
                                       f32_3 %151 = OpVectorShuffle %150 %150 0 1 2 
                                       f32_3 %152 = OpFMul %149 %151 
                                       f32_4 %153 = OpLoad %9 
                                       f32_4 %154 = OpVectorShuffle %153 %152 4 5 6 3 
                                                      OpStore %9 %154 
                                       f32_4 %156 = OpLoad %9 
                                       f32_3 %157 = OpVectorShuffle %156 %156 0 1 2 
                                                      OpStore vs_TEXCOORD1 %157 
                                Private f32* %159 = OpAccessChain %9 %83 
                                         f32 %160 = OpLoad %159 
                                Private f32* %161 = OpAccessChain %9 %83 
                                         f32 %162 = OpLoad %161 
                                         f32 %163 = OpFMul %160 %162 
                                                      OpStore %158 %163 
                                Private f32* %164 = OpAccessChain %9 %124 
                                         f32 %165 = OpLoad %164 
                                Private f32* %166 = OpAccessChain %9 %124 
                                         f32 %167 = OpLoad %166 
                                         f32 %168 = OpFMul %165 %167 
                                         f32 %169 = OpLoad %158 
                                         f32 %170 = OpFNegate %169 
                                         f32 %171 = OpFAdd %168 %170 
                                                      OpStore %158 %171 
                                       f32_4 %173 = OpLoad %9 
                                       f32_4 %174 = OpVectorShuffle %173 %173 1 2 2 0 
                                       f32_4 %175 = OpLoad %9 
                                       f32_4 %176 = OpVectorShuffle %175 %175 0 1 2 2 
                                       f32_4 %177 = OpFMul %174 %176 
                                                      OpStore %172 %177 
                              Uniform f32_4* %180 = OpAccessChain %21 %29 
                                       f32_4 %181 = OpLoad %180 
                                       f32_4 %182 = OpLoad %172 
                                         f32 %183 = OpDot %181 %182 
                                Private f32* %184 = OpAccessChain %179 %124 
                                                      OpStore %184 %183 
                              Uniform f32_4* %185 = OpAccessChain %21 %24 
                                       f32_4 %186 = OpLoad %185 
                                       f32_4 %187 = OpLoad %172 
                                         f32 %188 = OpDot %186 %187 
                                Private f32* %189 = OpAccessChain %179 %83 
                                                      OpStore %189 %188 
                              Uniform f32_4* %190 = OpAccessChain %21 %37 
                                       f32_4 %191 = OpLoad %190 
                                       f32_4 %192 = OpLoad %172 
                                         f32 %193 = OpDot %191 %192 
                                Private f32* %194 = OpAccessChain %179 %138 
                                                      OpStore %194 %193 
                              Uniform f32_4* %196 = OpAccessChain %21 %47 
                                       f32_4 %197 = OpLoad %196 
                                       f32_3 %198 = OpVectorShuffle %197 %197 0 1 2 
                                         f32 %199 = OpLoad %158 
                                       f32_3 %200 = OpCompositeConstruct %199 %199 %199 
                                       f32_3 %201 = OpFMul %198 %200 
                                       f32_3 %202 = OpLoad %179 
                                       f32_3 %203 = OpFAdd %201 %202 
                                                      OpStore vs_TEXCOORD3 %203 
                                                      OpStore vs_TEXCOORD5 %206 
                                                      OpStore vs_TEXCOORD6 %206 
                                 Output f32* %209 = OpAccessChain %87 %29 %83 
                                         f32 %210 = OpLoad %209 
                                         f32 %211 = OpFNegate %210 
                                 Output f32* %212 = OpAccessChain %87 %29 %83 
                                                      OpStore %212 %211 
                                                      OpReturn
                                                      OpFunctionEnd
; SPIR-V
; Version: 1.0
; Generator: Khronos Glslang Reference Front End; 6
; Bound: 247
; Schema: 0
                                                      OpCapability Shader 
                                               %1 = OpExtInstImport "GLSL.std.450" 
                                                      OpMemoryModel Logical GLSL450 
                                                      OpEntryPoint Fragment %4 "main" %11 %173 %210 %221 
                                                      OpExecutionMode %4 OriginUpperLeft 
                                                      OpName vs_TEXCOORD1 "vs_TEXCOORD1" 
                                                      OpName vs_TEXCOORD3 "vs_TEXCOORD3" 
                                                      OpName vs_TEXCOORD0 "vs_TEXCOORD0" 
                                                      OpDecorate %9 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD1 Location 11 
                                                      OpDecorate %20 RelaxedPrecision 
                                                      OpDecorate %21 RelaxedPrecision 
                                                      OpDecorate %23 RelaxedPrecision 
                                                      OpDecorate %24 RelaxedPrecision 
                                                      OpDecorate %27 RelaxedPrecision 
                                                      OpMemberDecorate %29 0 RelaxedPrecision 
                                                      OpMemberDecorate %29 0 Offset 29 
                                                      OpMemberDecorate %29 1 RelaxedPrecision 
                                                      OpMemberDecorate %29 1 Offset 29 
                                                      OpMemberDecorate %29 2 RelaxedPrecision 
                                                      OpMemberDecorate %29 2 Offset 29 
                                                      OpMemberDecorate %29 3 RelaxedPrecision 
                                                      OpMemberDecorate %29 3 Offset 29 
                                                      OpMemberDecorate %29 4 RelaxedPrecision 
                                                      OpMemberDecorate %29 4 Offset 29 
                                                      OpMemberDecorate %29 5 RelaxedPrecision 
                                                      OpMemberDecorate %29 5 Offset 29 
                                                      OpMemberDecorate %29 6 RelaxedPrecision 
                                                      OpMemberDecorate %29 6 Offset 29 
                                                      OpMemberDecorate %29 7 RelaxedPrecision 
                                                      OpMemberDecorate %29 7 Offset 29 
                                                      OpMemberDecorate %29 8 RelaxedPrecision 
                                                      OpMemberDecorate %29 8 Offset 29 
                                                      OpMemberDecorate %29 9 RelaxedPrecision 
                                                      OpMemberDecorate %29 9 Offset 29 
                                                      OpDecorate %29 Block 
                                                      OpDecorate %31 DescriptorSet 31 
                                                      OpDecorate %31 Binding 31 
                                                      OpDecorate %36 RelaxedPrecision 
                                                      OpDecorate %37 RelaxedPrecision 
                                                      OpDecorate %38 RelaxedPrecision 
                                                      OpDecorate %41 RelaxedPrecision 
                                                      OpDecorate %43 RelaxedPrecision 
                                                      OpDecorate %45 RelaxedPrecision 
                                                      OpDecorate %49 RelaxedPrecision 
                                                      OpDecorate %50 RelaxedPrecision 
                                                      OpDecorate %52 RelaxedPrecision 
                                                      OpDecorate %55 RelaxedPrecision 
                                                      OpDecorate %56 RelaxedPrecision 
                                                      OpDecorate %59 RelaxedPrecision 
                                                      OpDecorate %60 RelaxedPrecision 
                                                      OpDecorate %62 RelaxedPrecision 
                                                      OpDecorate %63 RelaxedPrecision 
                                                      OpDecorate %65 RelaxedPrecision 
                                                      OpDecorate %67 RelaxedPrecision 
                                                      OpDecorate %68 RelaxedPrecision 
                                                      OpDecorate %70 RelaxedPrecision 
                                                      OpDecorate %71 RelaxedPrecision 
                                                      OpDecorate %73 RelaxedPrecision 
                                                      OpDecorate %74 RelaxedPrecision 
                                                      OpDecorate %75 RelaxedPrecision 
                                                      OpDecorate %76 RelaxedPrecision 
                                                      OpDecorate %80 RelaxedPrecision 
                                                      OpDecorate %81 RelaxedPrecision 
                                                      OpDecorate %84 RelaxedPrecision 
                                                      OpDecorate %86 RelaxedPrecision 
                                                      OpDecorate %87 RelaxedPrecision 
                                                      OpDecorate %90 RelaxedPrecision 
                                                      OpDecorate %91 RelaxedPrecision 
                                                      OpDecorate %94 RelaxedPrecision 
                                                      OpDecorate %96 RelaxedPrecision 
                                                      OpDecorate %98 RelaxedPrecision 
                                                      OpDecorate %101 RelaxedPrecision 
                                                      OpDecorate %103 RelaxedPrecision 
                                                      OpDecorate %104 RelaxedPrecision 
                                                      OpDecorate %107 RelaxedPrecision 
                                                      OpDecorate %109 RelaxedPrecision 
                                                      OpDecorate %110 RelaxedPrecision 
                                                      OpDecorate %114 RelaxedPrecision 
                                                      OpDecorate %115 RelaxedPrecision 
                                                      OpDecorate %116 RelaxedPrecision 
                                                      OpDecorate %119 RelaxedPrecision 
                                                      OpDecorate %120 RelaxedPrecision 
                                                      OpDecorate %121 RelaxedPrecision 
                                                      OpDecorate %123 RelaxedPrecision 
                                                      OpDecorate %124 RelaxedPrecision 
                                                      OpDecorate %125 RelaxedPrecision 
                                                      OpDecorate %126 RelaxedPrecision 
                                                      OpDecorate %128 RelaxedPrecision 
                                                      OpDecorate %129 RelaxedPrecision 
                                                      OpDecorate %130 RelaxedPrecision 
                                                      OpDecorate %131 RelaxedPrecision 
                                                      OpDecorate %132 RelaxedPrecision 
                                                      OpDecorate %133 RelaxedPrecision 
                                                      OpDecorate %135 RelaxedPrecision 
                                                      OpDecorate %136 RelaxedPrecision 
                                                      OpDecorate %137 RelaxedPrecision 
                                                      OpDecorate %138 RelaxedPrecision 
                                                      OpDecorate %139 RelaxedPrecision 
                                                      OpDecorate %140 RelaxedPrecision 
                                                      OpDecorate %141 RelaxedPrecision 
                                                      OpDecorate %142 RelaxedPrecision 
                                                      OpDecorate %143 RelaxedPrecision 
                                                      OpDecorate %151 RelaxedPrecision 
                                                      OpDecorate %154 RelaxedPrecision 
                                                      OpDecorate %160 RelaxedPrecision 
                                                      OpDecorate %167 RelaxedPrecision 
                                                      OpDecorate %172 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD3 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD3 Location 173 
                                                      OpDecorate %174 RelaxedPrecision 
                                                      OpDecorate %175 RelaxedPrecision 
                                                      OpDecorate %176 RelaxedPrecision 
                                                      OpDecorate %178 RelaxedPrecision 
                                                      OpDecorate %180 RelaxedPrecision 
                                                      OpDecorate %181 RelaxedPrecision 
                                                      OpDecorate %197 RelaxedPrecision 
                                                      OpDecorate %200 RelaxedPrecision 
                                                      OpDecorate %200 DescriptorSet 200 
                                                      OpDecorate %200 Binding 200 
                                                      OpDecorate %201 RelaxedPrecision 
                                                      OpDecorate %204 RelaxedPrecision 
                                                      OpDecorate %204 DescriptorSet 204 
                                                      OpDecorate %204 Binding 204 
                                                      OpDecorate %205 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD0 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD0 Location 210 
                                                      OpDecorate %211 RelaxedPrecision 
                                                      OpDecorate %212 RelaxedPrecision 
                                                      OpDecorate %213 RelaxedPrecision 
                                                      OpDecorate %214 RelaxedPrecision 
                                                      OpDecorate %217 RelaxedPrecision 
                                                      OpDecorate %218 RelaxedPrecision 
                                                      OpDecorate %219 RelaxedPrecision 
                                                      OpDecorate %221 RelaxedPrecision 
                                                      OpDecorate %221 Location 221 
                                                      OpDecorate %223 RelaxedPrecision 
                                                      OpDecorate %225 RelaxedPrecision 
                                                      OpDecorate %226 RelaxedPrecision 
                                                      OpDecorate %229 RelaxedPrecision 
                                                      OpDecorate %231 RelaxedPrecision 
                                                      OpDecorate %233 RelaxedPrecision 
                                                      OpDecorate %236 RelaxedPrecision 
                                                      OpDecorate %237 RelaxedPrecision 
                                                      OpDecorate %238 RelaxedPrecision 
                                                      OpDecorate %239 RelaxedPrecision 
                                                      OpDecorate %240 RelaxedPrecision 
                                                      OpDecorate %241 RelaxedPrecision 
                                                      OpDecorate %242 RelaxedPrecision 
                                                      OpDecorate %243 RelaxedPrecision 
                                               %2 = OpTypeVoid 
                                               %3 = OpTypeFunction %2 
                                               %6 = OpTypeFloat 32 
                                               %7 = OpTypeVector %6 3 
                                               %8 = OpTypePointer Private %7 
                                Private f32_3* %9 = OpVariable Private 
                                              %10 = OpTypePointer Input %7 
                        Input f32_3* vs_TEXCOORD1 = OpVariable Input 
                                              %15 = OpTypeInt 32 0 
                                          u32 %16 = OpConstant 0 
                                              %17 = OpTypePointer Private %6 
                                              %28 = OpTypeVector %6 4 
                                              %29 = OpTypeStruct %28 %28 %28 %28 %28 %28 %28 %28 %6 %6 
                                              %30 = OpTypePointer Uniform %29 
Uniform struct {f32_4; f32_4; f32_4; f32_4; f32_4; f32_4; f32_4; f32_4; f32; f32;}* %31 = OpVariable Uniform 
                                              %32 = OpTypeInt 32 1 
                                          i32 %33 = OpConstant 0 
                                              %34 = OpTypePointer Uniform %28 
                                          f32 %42 = OpConstant 3.674022E-40 
                               Private f32_3* %45 = OpVariable Private 
                                          i32 %46 = OpConstant 9 
                                              %47 = OpTypePointer Uniform %6 
                                          f32 %51 = OpConstant 3.674022E-40 
                                          i32 %53 = OpConstant 8 
                                 Private f32* %65 = OpVariable Private 
                                          f32 %78 = OpConstant 3.674022E-40 
                                          f32 %95 = OpConstant 3.674022E-40 
                                          f32 %97 = OpConstant 3.674022E-40 
                                         i32 %112 = OpConstant 6 
                                         i32 %117 = OpConstant 7 
                              Private f32_3* %131 = OpVariable Private 
                                             %144 = OpTypePointer Private %28 
                              Private f32_4* %145 = OpVariable Private 
                                         u32 %149 = OpConstant 3 
                              Private f32_3* %151 = OpVariable Private 
                                         i32 %152 = OpConstant 1 
                                         i32 %158 = OpConstant 2 
                                         u32 %163 = OpConstant 1 
                                         i32 %165 = OpConstant 3 
                                         u32 %170 = OpConstant 2 
                        Input f32_3* vs_TEXCOORD3 = OpVariable Input 
                                       f32_3 %177 = OpConstantComposite %42 %42 %42 
                              Private f32_3* %179 = OpVariable Private 
                                         f32 %183 = OpConstant 3.674022E-40 
                                       f32_3 %184 = OpConstantComposite %183 %183 %183 
                                         f32 %189 = OpConstant 3.674022E-40 
                                       f32_3 %190 = OpConstantComposite %189 %189 %189 
                                         f32 %192 = OpConstant 3.674022E-40 
                                       f32_3 %193 = OpConstantComposite %192 %192 %192 
                              Private f32_4* %197 = OpVariable Private 
                                             %198 = OpTypeImage %6 Dim2D 0 0 0 1 Unknown 
                                             %199 = OpTypePointer UniformConstant %198 
        UniformConstant read_only Texture2D* %200 = OpVariable UniformConstant 
                                             %202 = OpTypeSampler 
                                             %203 = OpTypePointer UniformConstant %202 
                    UniformConstant sampler* %204 = OpVariable UniformConstant 
                                             %206 = OpTypeSampledImage %198 
                                             %208 = OpTypeVector %6 2 
                                             %209 = OpTypePointer Input %208 
                        Input f32_2* vs_TEXCOORD0 = OpVariable Input 
                                         i32 %215 = OpConstant 5 
                                             %220 = OpTypePointer Output %28 
                               Output f32_4* %221 = OpVariable Output 
                                             %227 = OpTypePointer Output %6 
                              Private f32_3* %229 = OpVariable Private 
                                         i32 %234 = OpConstant 4 
                                          void %4 = OpFunction None %3 
                                               %5 = OpLabel 
                                        f32_3 %12 = OpLoad vs_TEXCOORD1 
                                        f32_3 %13 = OpLoad vs_TEXCOORD1 
                                          f32 %14 = OpDot %12 %13 
                                 Private f32* %18 = OpAccessChain %9 %16 
                                                      OpStore %18 %14 
                                 Private f32* %19 = OpAccessChain %9 %16 
                                          f32 %20 = OpLoad %19 
                                          f32 %21 = OpExtInst %1 32 %20 
                                 Private f32* %22 = OpAccessChain %9 %16 
                                                      OpStore %22 %21 
                                        f32_3 %23 = OpLoad %9 
                                        f32_3 %24 = OpVectorShuffle %23 %23 0 0 0 
                                        f32_3 %25 = OpLoad vs_TEXCOORD1 
                                        f32_3 %26 = OpFMul %24 %25 
                                                      OpStore %9 %26 
                                        f32_3 %27 = OpLoad %9 
                               Uniform f32_4* %35 = OpAccessChain %31 %33 
                                        f32_4 %36 = OpLoad %35 
                                        f32_3 %37 = OpVectorShuffle %36 %36 0 1 2 
                                          f32 %38 = OpDot %27 %37 
                                 Private f32* %39 = OpAccessChain %9 %16 
                                                      OpStore %39 %38 
                                 Private f32* %40 = OpAccessChain %9 %16 
                                          f32 %41 = OpLoad %40 
                                          f32 %43 = OpExtInst %1 40 %41 %42 
                                 Private f32* %44 = OpAccessChain %9 %16 
                                                      OpStore %44 %43 
                                 Uniform f32* %48 = OpAccessChain %31 %46 
                                          f32 %49 = OpLoad %48 
                                          f32 %50 = OpFNegate %49 
                                          f32 %52 = OpFMul %50 %51 
                                 Uniform f32* %54 = OpAccessChain %31 %53 
                                          f32 %55 = OpLoad %54 
                                          f32 %56 = OpFAdd %52 %55 
                                 Private f32* %57 = OpAccessChain %45 %16 
                                                      OpStore %57 %56 
                                 Private f32* %58 = OpAccessChain %45 %16 
                                          f32 %59 = OpLoad %58 
                                          f32 %60 = OpFNegate %59 
                                 Private f32* %61 = OpAccessChain %9 %16 
                                          f32 %62 = OpLoad %61 
                                          f32 %63 = OpFAdd %60 %62 
                                 Private f32* %64 = OpAccessChain %9 %16 
                                                      OpStore %64 %63 
                                 Uniform f32* %66 = OpAccessChain %31 %46 
                                          f32 %67 = OpLoad %66 
                                          f32 %68 = OpFMul %67 %51 
                                 Uniform f32* %69 = OpAccessChain %31 %53 
                                          f32 %70 = OpLoad %69 
                                          f32 %71 = OpFAdd %68 %70 
                                                      OpStore %65 %71 
                                 Private f32* %72 = OpAccessChain %45 %16 
                                          f32 %73 = OpLoad %72 
                                          f32 %74 = OpFNegate %73 
                                          f32 %75 = OpLoad %65 
                                          f32 %76 = OpFAdd %74 %75 
                                 Private f32* %77 = OpAccessChain %45 %16 
                                                      OpStore %77 %76 
                                 Private f32* %79 = OpAccessChain %45 %16 
                                          f32 %80 = OpLoad %79 
                                          f32 %81 = OpFDiv %78 %80 
                                 Private f32* %82 = OpAccessChain %45 %16 
                                                      OpStore %82 %81 
                                 Private f32* %83 = OpAccessChain %45 %16 
                                          f32 %84 = OpLoad %83 
                                 Private f32* %85 = OpAccessChain %9 %16 
                                          f32 %86 = OpLoad %85 
                                          f32 %87 = OpFMul %84 %86 
                                 Private f32* %88 = OpAccessChain %9 %16 
                                                      OpStore %88 %87 
                                 Private f32* %89 = OpAccessChain %9 %16 
                                          f32 %90 = OpLoad %89 
                                          f32 %91 = OpExtInst %1 43 %90 %42 %78 
                                 Private f32* %92 = OpAccessChain %9 %16 
                                                      OpStore %92 %91 
                                 Private f32* %93 = OpAccessChain %9 %16 
                                          f32 %94 = OpLoad %93 
                                          f32 %96 = OpFMul %94 %95 
                                          f32 %98 = OpFAdd %96 %97 
                                 Private f32* %99 = OpAccessChain %45 %16 
                                                      OpStore %99 %98 
                                Private f32* %100 = OpAccessChain %9 %16 
                                         f32 %101 = OpLoad %100 
                                Private f32* %102 = OpAccessChain %9 %16 
                                         f32 %103 = OpLoad %102 
                                         f32 %104 = OpFMul %101 %103 
                                Private f32* %105 = OpAccessChain %9 %16 
                                                      OpStore %105 %104 
                                Private f32* %106 = OpAccessChain %9 %16 
                                         f32 %107 = OpLoad %106 
                                Private f32* %108 = OpAccessChain %45 %16 
                                         f32 %109 = OpLoad %108 
                                         f32 %110 = OpFMul %107 %109 
                                Private f32* %111 = OpAccessChain %9 %16 
                                                      OpStore %111 %110 
                              Uniform f32_4* %113 = OpAccessChain %31 %112 
                                       f32_4 %114 = OpLoad %113 
                                       f32_3 %115 = OpVectorShuffle %114 %114 0 1 2 
                                       f32_3 %116 = OpFNegate %115 
                              Uniform f32_4* %118 = OpAccessChain %31 %117 
                                       f32_4 %119 = OpLoad %118 
                                       f32_3 %120 = OpVectorShuffle %119 %119 0 1 2 
                                       f32_3 %121 = OpFAdd %116 %120 
                                                      OpStore %45 %121 
                              Uniform f32_4* %122 = OpAccessChain %31 %117 
                                       f32_4 %123 = OpLoad %122 
                                       f32_3 %124 = OpVectorShuffle %123 %123 3 3 3 
                                       f32_3 %125 = OpLoad %45 
                                       f32_3 %126 = OpFMul %124 %125 
                              Uniform f32_4* %127 = OpAccessChain %31 %112 
                                       f32_4 %128 = OpLoad %127 
                                       f32_3 %129 = OpVectorShuffle %128 %128 0 1 2 
                                       f32_3 %130 = OpFAdd %126 %129 
                                                      OpStore %45 %130 
                                       f32_3 %132 = OpLoad %45 
                                       f32_3 %133 = OpFNegate %132 
                              Uniform f32_4* %134 = OpAccessChain %31 %112 
                                       f32_4 %135 = OpLoad %134 
                                       f32_3 %136 = OpVectorShuffle %135 %135 0 1 2 
                                       f32_3 %137 = OpFAdd %133 %136 
                                                      OpStore %131 %137 
                                       f32_3 %138 = OpLoad %9 
                                       f32_3 %139 = OpVectorShuffle %138 %138 0 0 0 
                                       f32_3 %140 = OpLoad %131 
                                       f32_3 %141 = OpFMul %139 %140 
                                       f32_3 %142 = OpLoad %45 
                                       f32_3 %143 = OpFAdd %141 %142 
                                                      OpStore %9 %143 
                                       f32_3 %146 = OpLoad vs_TEXCOORD1 
                                       f32_4 %147 = OpLoad %145 
                                       f32_4 %148 = OpVectorShuffle %147 %146 4 5 6 3 
                                                      OpStore %145 %148 
                                Private f32* %150 = OpAccessChain %145 %149 
                                                      OpStore %150 %78 
                              Uniform f32_4* %153 = OpAccessChain %31 %152 
                                       f32_4 %154 = OpLoad %153 
                                       f32_4 %155 = OpLoad %145 
                                         f32 %156 = OpDot %154 %155 
                                Private f32* %157 = OpAccessChain %151 %16 
                                                      OpStore %157 %156 
                              Uniform f32_4* %159 = OpAccessChain %31 %158 
                                       f32_4 %160 = OpLoad %159 
                                       f32_4 %161 = OpLoad %145 
                                         f32 %162 = OpDot %160 %161 
                                Private f32* %164 = OpAccessChain %151 %163 
                                                      OpStore %164 %162 
                              Uniform f32_4* %166 = OpAccessChain %31 %165 
                                       f32_4 %167 = OpLoad %166 
                                       f32_4 %168 = OpLoad %145 
                                         f32 %169 = OpDot %167 %168 
                                Private f32* %171 = OpAccessChain %151 %170 
                                                      OpStore %171 %169 
                                       f32_3 %172 = OpLoad %151 
                                       f32_3 %174 = OpLoad vs_TEXCOORD3 
                                       f32_3 %175 = OpFAdd %172 %174 
                                                      OpStore %151 %175 
                                       f32_3 %176 = OpLoad %151 
                                       f32_3 %178 = OpExtInst %1 40 %176 %177 
                                                      OpStore %151 %178 
                                       f32_3 %180 = OpLoad %151 
                                       f32_3 %181 = OpExtInst %1 30 %180 
                                                      OpStore %179 %181 
                                       f32_3 %182 = OpLoad %179 
                                       f32_3 %185 = OpFMul %182 %184 
                                                      OpStore %179 %185 
                                       f32_3 %186 = OpLoad %179 
                                       f32_3 %187 = OpExtInst %1 29 %186 
                                                      OpStore %179 %187 
                                       f32_3 %188 = OpLoad %179 
                                       f32_3 %191 = OpFMul %188 %190 
                                       f32_3 %194 = OpFAdd %191 %193 
                                                      OpStore %179 %194 
                                       f32_3 %195 = OpLoad %179 
                                       f32_3 %196 = OpExtInst %1 40 %195 %177 
                                                      OpStore %179 %196 
                         read_only Texture2D %201 = OpLoad %200 
                                     sampler %205 = OpLoad %204 
                  read_only Texture2DSampled %207 = OpSampledImage %201 %205 
                                       f32_2 %211 = OpLoad vs_TEXCOORD0 
                                       f32_4 %212 = OpImageSampleImplicitLod %207 %211 
                                                      OpStore %197 %212 
                                       f32_4 %213 = OpLoad %197 
                                       f32_3 %214 = OpVectorShuffle %213 %213 0 1 2 
                              Uniform f32_4* %216 = OpAccessChain %31 %215 
                                       f32_4 %217 = OpLoad %216 
                                       f32_3 %218 = OpVectorShuffle %217 %217 0 1 2 
                                       f32_3 %219 = OpFMul %214 %218 
                                                      OpStore %151 %219 
                                Private f32* %222 = OpAccessChain %197 %149 
                                         f32 %223 = OpLoad %222 
                                Uniform f32* %224 = OpAccessChain %31 %215 %149 
                                         f32 %225 = OpLoad %224 
                                         f32 %226 = OpFMul %223 %225 
                                 Output f32* %228 = OpAccessChain %221 %149 
                                                      OpStore %228 %226 
                                       f32_3 %230 = OpLoad %179 
                                       f32_3 %231 = OpLoad %151 
                                       f32_3 %232 = OpFMul %230 %231 
                                                      OpStore %229 %232 
                                       f32_3 %233 = OpLoad %151 
                              Uniform f32_4* %235 = OpAccessChain %31 %234 
                                       f32_4 %236 = OpLoad %235 
                                       f32_3 %237 = OpVectorShuffle %236 %236 0 1 2 
                                       f32_3 %238 = OpFMul %233 %237 
                                                      OpStore %151 %238 
                                       f32_3 %239 = OpLoad %151 
                                       f32_3 %240 = OpLoad %9 
                                       f32_3 %241 = OpFMul %239 %240 
                                       f32_3 %242 = OpLoad %229 
                                       f32_3 %243 = OpFAdd %241 %242 
                                       f32_4 %244 = OpLoad %221 
                                       f32_4 %245 = OpVectorShuffle %244 %243 4 5 6 3 
                                                      OpStore %221 %245 
                                                      OpReturn
                                                      OpFunctionEnd
"
}
SubProgram "gles3 hw_tier00 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" }
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in highp vec3 in_NORMAL0;
in highp vec4 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out highp vec3 vs_TEXCOORD1;
out highp vec3 vs_TEXCOORD2;
out highp vec4 vs_TEXCOORD5;
out highp vec4 vs_TEXCOORD6;
vec4 u_xlat0;
vec4 u_xlat1;
float u_xlat6;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    vs_TEXCOORD2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
    u_xlat0 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat0;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat0;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat0.xy;
    u_xlat0.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat6 = dot(u_xlat0.xyz, u_xlat0.xyz);
    u_xlat6 = inversesqrt(u_xlat6);
    vs_TEXCOORD1.xyz = vec3(u_xlat6) * u_xlat0.xyz;
    vs_TEXCOORD5 = vec4(0.0, 0.0, 0.0, 0.0);
    vs_TEXCOORD6 = vec4(0.0, 0.0, 0.0, 0.0);
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es
#ifdef GL_EXT_shader_texture_lod
#extension GL_EXT_shader_texture_lod : enable
#endif

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec3 _WorldSpaceCameraPos;
uniform 	mediump vec4 _WorldSpaceLightPos0;
uniform 	vec4 hlslcc_mtx4x4unity_WorldToShadow[16];
uniform 	mediump vec4 _LightShadowData;
uniform 	vec4 unity_ShadowFadeCenterAndType;
uniform 	vec4 hlslcc_mtx4x4unity_MatrixV[4];
uniform 	mediump vec4 _LightColor0;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 _HColor;
uniform 	mediump vec4 _SColor;
uniform 	mediump float _RampThreshold;
uniform 	mediump float _RampSmooth;
UNITY_LOCATION(0) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(1) uniform highp sampler2D _ShadowMapTexture;
UNITY_LOCATION(2) uniform highp sampler2DShadow hlslcc_zcmp_ShadowMapTexture;
in mediump vec2 vs_TEXCOORD0;
in highp vec3 vs_TEXCOORD1;
in highp vec3 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec4 u_xlat16_0;
vec3 u_xlat1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
vec3 u_xlat4;
mediump vec3 u_xlat16_6;
mediump float u_xlat16_10;
mediump float u_xlat16_14;
void main()
{
    u_xlat0.xyz = vs_TEXCOORD2.xyz + (-unity_ShadowFadeCenterAndType.xyz);
    u_xlat0.x = dot(u_xlat0.xyz, u_xlat0.xyz);
    u_xlat0.x = sqrt(u_xlat0.x);
    u_xlat4.xyz = (-vs_TEXCOORD2.xyz) + _WorldSpaceCameraPos.xyz;
    u_xlat1.x = hlslcc_mtx4x4unity_MatrixV[0].z;
    u_xlat1.y = hlslcc_mtx4x4unity_MatrixV[1].z;
    u_xlat1.z = hlslcc_mtx4x4unity_MatrixV[2].z;
    u_xlat4.x = dot(u_xlat4.xyz, u_xlat1.xyz);
    u_xlat0.x = (-u_xlat4.x) + u_xlat0.x;
    u_xlat0.x = unity_ShadowFadeCenterAndType.w * u_xlat0.x + u_xlat4.x;
    u_xlat0.x = u_xlat0.x * _LightShadowData.z + _LightShadowData.w;
#ifdef UNITY_ADRENO_ES3
    u_xlat0.x = min(max(u_xlat0.x, 0.0), 1.0);
#else
    u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);
#endif
    u_xlat4.xyz = vs_TEXCOORD2.yyy * hlslcc_mtx4x4unity_WorldToShadow[1].xyz;
    u_xlat4.xyz = hlslcc_mtx4x4unity_WorldToShadow[0].xyz * vs_TEXCOORD2.xxx + u_xlat4.xyz;
    u_xlat4.xyz = hlslcc_mtx4x4unity_WorldToShadow[2].xyz * vs_TEXCOORD2.zzz + u_xlat4.xyz;
    u_xlat4.xyz = u_xlat4.xyz + hlslcc_mtx4x4unity_WorldToShadow[3].xyz;
    vec3 txVec0 = vec3(u_xlat4.xy,u_xlat4.z);
    u_xlat4.x = textureLod(hlslcc_zcmp_ShadowMapTexture, txVec0, 0.0);
    u_xlat16_2.x = (-_LightShadowData.x) + 1.0;
    u_xlat16_2.x = u_xlat4.x * u_xlat16_2.x + _LightShadowData.x;
    u_xlat16_6.x = (-u_xlat16_2.x) + 1.0;
    u_xlat16_2.x = u_xlat0.x * u_xlat16_6.x + u_xlat16_2.x;
    u_xlat16_6.x = dot(vs_TEXCOORD1.xyz, vs_TEXCOORD1.xyz);
    u_xlat16_6.x = inversesqrt(u_xlat16_6.x);
    u_xlat16_6.xyz = u_xlat16_6.xxx * vs_TEXCOORD1.xyz;
    u_xlat16_6.x = dot(u_xlat16_6.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat16_6.x = max(u_xlat16_6.x, 0.0);
    u_xlat16_10 = (-_RampSmooth) * 0.5 + _RampThreshold;
    u_xlat16_6.x = (-u_xlat16_10) + u_xlat16_6.x;
    u_xlat16_14 = _RampSmooth * 0.5 + _RampThreshold;
    u_xlat16_10 = (-u_xlat16_10) + u_xlat16_14;
    u_xlat16_10 = float(1.0) / u_xlat16_10;
    u_xlat16_6.x = u_xlat16_10 * u_xlat16_6.x;
#ifdef UNITY_ADRENO_ES3
    u_xlat16_6.x = min(max(u_xlat16_6.x, 0.0), 1.0);
#else
    u_xlat16_6.x = clamp(u_xlat16_6.x, 0.0, 1.0);
#endif
    u_xlat16_10 = u_xlat16_6.x * -2.0 + 3.0;
    u_xlat16_6.x = u_xlat16_6.x * u_xlat16_6.x;
    u_xlat16_6.x = u_xlat16_6.x * u_xlat16_10;
    u_xlat16_2.x = u_xlat16_2.x * u_xlat16_6.x;
    u_xlat16_6.xyz = (-_HColor.xyz) + _SColor.xyz;
    u_xlat16_6.xyz = _SColor.www * u_xlat16_6.xyz + _HColor.xyz;
    u_xlat16_3.xyz = (-u_xlat16_6.xyz) + _HColor.xyz;
    u_xlat16_2.xyz = u_xlat16_2.xxx * u_xlat16_3.xyz + u_xlat16_6.xyz;
    u_xlat16_0 = texture(_MainTex, vs_TEXCOORD0.xy);
    u_xlat16_3.xyz = u_xlat16_0.xyz * _Color.xyz;
    SV_Target0.w = u_xlat16_0.w * _Color.w;
    u_xlat16_3.xyz = u_xlat16_3.xyz * _LightColor0.xyz;
    SV_Target0.xyz = u_xlat16_2.xyz * u_xlat16_3.xyz;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier01 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" }
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in highp vec3 in_NORMAL0;
in highp vec4 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out highp vec3 vs_TEXCOORD1;
out highp vec3 vs_TEXCOORD2;
out highp vec4 vs_TEXCOORD5;
out highp vec4 vs_TEXCOORD6;
vec4 u_xlat0;
vec4 u_xlat1;
float u_xlat6;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    vs_TEXCOORD2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
    u_xlat0 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat0;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat0;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat0.xy;
    u_xlat0.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat6 = dot(u_xlat0.xyz, u_xlat0.xyz);
    u_xlat6 = inversesqrt(u_xlat6);
    vs_TEXCOORD1.xyz = vec3(u_xlat6) * u_xlat0.xyz;
    vs_TEXCOORD5 = vec4(0.0, 0.0, 0.0, 0.0);
    vs_TEXCOORD6 = vec4(0.0, 0.0, 0.0, 0.0);
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es
#ifdef GL_EXT_shader_texture_lod
#extension GL_EXT_shader_texture_lod : enable
#endif

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec3 _WorldSpaceCameraPos;
uniform 	mediump vec4 _WorldSpaceLightPos0;
uniform 	vec4 hlslcc_mtx4x4unity_WorldToShadow[16];
uniform 	mediump vec4 _LightShadowData;
uniform 	vec4 unity_ShadowFadeCenterAndType;
uniform 	vec4 hlslcc_mtx4x4unity_MatrixV[4];
uniform 	mediump vec4 _LightColor0;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 _HColor;
uniform 	mediump vec4 _SColor;
uniform 	mediump float _RampThreshold;
uniform 	mediump float _RampSmooth;
UNITY_LOCATION(0) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(1) uniform highp sampler2D _ShadowMapTexture;
UNITY_LOCATION(2) uniform highp sampler2DShadow hlslcc_zcmp_ShadowMapTexture;
in mediump vec2 vs_TEXCOORD0;
in highp vec3 vs_TEXCOORD1;
in highp vec3 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec4 u_xlat16_0;
vec3 u_xlat1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
vec3 u_xlat4;
mediump vec3 u_xlat16_6;
mediump float u_xlat16_10;
mediump float u_xlat16_14;
void main()
{
    u_xlat0.xyz = vs_TEXCOORD2.xyz + (-unity_ShadowFadeCenterAndType.xyz);
    u_xlat0.x = dot(u_xlat0.xyz, u_xlat0.xyz);
    u_xlat0.x = sqrt(u_xlat0.x);
    u_xlat4.xyz = (-vs_TEXCOORD2.xyz) + _WorldSpaceCameraPos.xyz;
    u_xlat1.x = hlslcc_mtx4x4unity_MatrixV[0].z;
    u_xlat1.y = hlslcc_mtx4x4unity_MatrixV[1].z;
    u_xlat1.z = hlslcc_mtx4x4unity_MatrixV[2].z;
    u_xlat4.x = dot(u_xlat4.xyz, u_xlat1.xyz);
    u_xlat0.x = (-u_xlat4.x) + u_xlat0.x;
    u_xlat0.x = unity_ShadowFadeCenterAndType.w * u_xlat0.x + u_xlat4.x;
    u_xlat0.x = u_xlat0.x * _LightShadowData.z + _LightShadowData.w;
#ifdef UNITY_ADRENO_ES3
    u_xlat0.x = min(max(u_xlat0.x, 0.0), 1.0);
#else
    u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);
#endif
    u_xlat4.xyz = vs_TEXCOORD2.yyy * hlslcc_mtx4x4unity_WorldToShadow[1].xyz;
    u_xlat4.xyz = hlslcc_mtx4x4unity_WorldToShadow[0].xyz * vs_TEXCOORD2.xxx + u_xlat4.xyz;
    u_xlat4.xyz = hlslcc_mtx4x4unity_WorldToShadow[2].xyz * vs_TEXCOORD2.zzz + u_xlat4.xyz;
    u_xlat4.xyz = u_xlat4.xyz + hlslcc_mtx4x4unity_WorldToShadow[3].xyz;
    vec3 txVec0 = vec3(u_xlat4.xy,u_xlat4.z);
    u_xlat4.x = textureLod(hlslcc_zcmp_ShadowMapTexture, txVec0, 0.0);
    u_xlat16_2.x = (-_LightShadowData.x) + 1.0;
    u_xlat16_2.x = u_xlat4.x * u_xlat16_2.x + _LightShadowData.x;
    u_xlat16_6.x = (-u_xlat16_2.x) + 1.0;
    u_xlat16_2.x = u_xlat0.x * u_xlat16_6.x + u_xlat16_2.x;
    u_xlat16_6.x = dot(vs_TEXCOORD1.xyz, vs_TEXCOORD1.xyz);
    u_xlat16_6.x = inversesqrt(u_xlat16_6.x);
    u_xlat16_6.xyz = u_xlat16_6.xxx * vs_TEXCOORD1.xyz;
    u_xlat16_6.x = dot(u_xlat16_6.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat16_6.x = max(u_xlat16_6.x, 0.0);
    u_xlat16_10 = (-_RampSmooth) * 0.5 + _RampThreshold;
    u_xlat16_6.x = (-u_xlat16_10) + u_xlat16_6.x;
    u_xlat16_14 = _RampSmooth * 0.5 + _RampThreshold;
    u_xlat16_10 = (-u_xlat16_10) + u_xlat16_14;
    u_xlat16_10 = float(1.0) / u_xlat16_10;
    u_xlat16_6.x = u_xlat16_10 * u_xlat16_6.x;
#ifdef UNITY_ADRENO_ES3
    u_xlat16_6.x = min(max(u_xlat16_6.x, 0.0), 1.0);
#else
    u_xlat16_6.x = clamp(u_xlat16_6.x, 0.0, 1.0);
#endif
    u_xlat16_10 = u_xlat16_6.x * -2.0 + 3.0;
    u_xlat16_6.x = u_xlat16_6.x * u_xlat16_6.x;
    u_xlat16_6.x = u_xlat16_6.x * u_xlat16_10;
    u_xlat16_2.x = u_xlat16_2.x * u_xlat16_6.x;
    u_xlat16_6.xyz = (-_HColor.xyz) + _SColor.xyz;
    u_xlat16_6.xyz = _SColor.www * u_xlat16_6.xyz + _HColor.xyz;
    u_xlat16_3.xyz = (-u_xlat16_6.xyz) + _HColor.xyz;
    u_xlat16_2.xyz = u_xlat16_2.xxx * u_xlat16_3.xyz + u_xlat16_6.xyz;
    u_xlat16_0 = texture(_MainTex, vs_TEXCOORD0.xy);
    u_xlat16_3.xyz = u_xlat16_0.xyz * _Color.xyz;
    SV_Target0.w = u_xlat16_0.w * _Color.w;
    u_xlat16_3.xyz = u_xlat16_3.xyz * _LightColor0.xyz;
    SV_Target0.xyz = u_xlat16_2.xyz * u_xlat16_3.xyz;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier02 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" }
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in highp vec3 in_NORMAL0;
in highp vec4 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out highp vec3 vs_TEXCOORD1;
out highp vec3 vs_TEXCOORD2;
out highp vec4 vs_TEXCOORD5;
out highp vec4 vs_TEXCOORD6;
vec4 u_xlat0;
vec4 u_xlat1;
float u_xlat6;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    vs_TEXCOORD2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
    u_xlat0 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat0;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat0;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat0.xy;
    u_xlat0.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat6 = dot(u_xlat0.xyz, u_xlat0.xyz);
    u_xlat6 = inversesqrt(u_xlat6);
    vs_TEXCOORD1.xyz = vec3(u_xlat6) * u_xlat0.xyz;
    vs_TEXCOORD5 = vec4(0.0, 0.0, 0.0, 0.0);
    vs_TEXCOORD6 = vec4(0.0, 0.0, 0.0, 0.0);
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es
#ifdef GL_EXT_shader_texture_lod
#extension GL_EXT_shader_texture_lod : enable
#endif

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec3 _WorldSpaceCameraPos;
uniform 	mediump vec4 _WorldSpaceLightPos0;
uniform 	vec4 hlslcc_mtx4x4unity_WorldToShadow[16];
uniform 	mediump vec4 _LightShadowData;
uniform 	vec4 unity_ShadowFadeCenterAndType;
uniform 	vec4 hlslcc_mtx4x4unity_MatrixV[4];
uniform 	mediump vec4 _LightColor0;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 _HColor;
uniform 	mediump vec4 _SColor;
uniform 	mediump float _RampThreshold;
uniform 	mediump float _RampSmooth;
UNITY_LOCATION(0) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(1) uniform highp sampler2D _ShadowMapTexture;
UNITY_LOCATION(2) uniform highp sampler2DShadow hlslcc_zcmp_ShadowMapTexture;
in mediump vec2 vs_TEXCOORD0;
in highp vec3 vs_TEXCOORD1;
in highp vec3 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec4 u_xlat16_0;
vec3 u_xlat1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
vec3 u_xlat4;
mediump vec3 u_xlat16_6;
mediump float u_xlat16_10;
mediump float u_xlat16_14;
void main()
{
    u_xlat0.xyz = vs_TEXCOORD2.xyz + (-unity_ShadowFadeCenterAndType.xyz);
    u_xlat0.x = dot(u_xlat0.xyz, u_xlat0.xyz);
    u_xlat0.x = sqrt(u_xlat0.x);
    u_xlat4.xyz = (-vs_TEXCOORD2.xyz) + _WorldSpaceCameraPos.xyz;
    u_xlat1.x = hlslcc_mtx4x4unity_MatrixV[0].z;
    u_xlat1.y = hlslcc_mtx4x4unity_MatrixV[1].z;
    u_xlat1.z = hlslcc_mtx4x4unity_MatrixV[2].z;
    u_xlat4.x = dot(u_xlat4.xyz, u_xlat1.xyz);
    u_xlat0.x = (-u_xlat4.x) + u_xlat0.x;
    u_xlat0.x = unity_ShadowFadeCenterAndType.w * u_xlat0.x + u_xlat4.x;
    u_xlat0.x = u_xlat0.x * _LightShadowData.z + _LightShadowData.w;
#ifdef UNITY_ADRENO_ES3
    u_xlat0.x = min(max(u_xlat0.x, 0.0), 1.0);
#else
    u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);
#endif
    u_xlat4.xyz = vs_TEXCOORD2.yyy * hlslcc_mtx4x4unity_WorldToShadow[1].xyz;
    u_xlat4.xyz = hlslcc_mtx4x4unity_WorldToShadow[0].xyz * vs_TEXCOORD2.xxx + u_xlat4.xyz;
    u_xlat4.xyz = hlslcc_mtx4x4unity_WorldToShadow[2].xyz * vs_TEXCOORD2.zzz + u_xlat4.xyz;
    u_xlat4.xyz = u_xlat4.xyz + hlslcc_mtx4x4unity_WorldToShadow[3].xyz;
    vec3 txVec0 = vec3(u_xlat4.xy,u_xlat4.z);
    u_xlat4.x = textureLod(hlslcc_zcmp_ShadowMapTexture, txVec0, 0.0);
    u_xlat16_2.x = (-_LightShadowData.x) + 1.0;
    u_xlat16_2.x = u_xlat4.x * u_xlat16_2.x + _LightShadowData.x;
    u_xlat16_6.x = (-u_xlat16_2.x) + 1.0;
    u_xlat16_2.x = u_xlat0.x * u_xlat16_6.x + u_xlat16_2.x;
    u_xlat16_6.x = dot(vs_TEXCOORD1.xyz, vs_TEXCOORD1.xyz);
    u_xlat16_6.x = inversesqrt(u_xlat16_6.x);
    u_xlat16_6.xyz = u_xlat16_6.xxx * vs_TEXCOORD1.xyz;
    u_xlat16_6.x = dot(u_xlat16_6.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat16_6.x = max(u_xlat16_6.x, 0.0);
    u_xlat16_10 = (-_RampSmooth) * 0.5 + _RampThreshold;
    u_xlat16_6.x = (-u_xlat16_10) + u_xlat16_6.x;
    u_xlat16_14 = _RampSmooth * 0.5 + _RampThreshold;
    u_xlat16_10 = (-u_xlat16_10) + u_xlat16_14;
    u_xlat16_10 = float(1.0) / u_xlat16_10;
    u_xlat16_6.x = u_xlat16_10 * u_xlat16_6.x;
#ifdef UNITY_ADRENO_ES3
    u_xlat16_6.x = min(max(u_xlat16_6.x, 0.0), 1.0);
#else
    u_xlat16_6.x = clamp(u_xlat16_6.x, 0.0, 1.0);
#endif
    u_xlat16_10 = u_xlat16_6.x * -2.0 + 3.0;
    u_xlat16_6.x = u_xlat16_6.x * u_xlat16_6.x;
    u_xlat16_6.x = u_xlat16_6.x * u_xlat16_10;
    u_xlat16_2.x = u_xlat16_2.x * u_xlat16_6.x;
    u_xlat16_6.xyz = (-_HColor.xyz) + _SColor.xyz;
    u_xlat16_6.xyz = _SColor.www * u_xlat16_6.xyz + _HColor.xyz;
    u_xlat16_3.xyz = (-u_xlat16_6.xyz) + _HColor.xyz;
    u_xlat16_2.xyz = u_xlat16_2.xxx * u_xlat16_3.xyz + u_xlat16_6.xyz;
    u_xlat16_0 = texture(_MainTex, vs_TEXCOORD0.xy);
    u_xlat16_3.xyz = u_xlat16_0.xyz * _Color.xyz;
    SV_Target0.w = u_xlat16_0.w * _Color.w;
    u_xlat16_3.xyz = u_xlat16_3.xyz * _LightColor0.xyz;
    SV_Target0.xyz = u_xlat16_2.xyz * u_xlat16_3.xyz;
    return;
}

#endif
"
}
SubProgram "vulkan hw_tier00 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" }
"; SPIR-V
; Version: 1.0
; Generator: Khronos Glslang Reference Front End; 6
; Bound: 160
; Schema: 0
                                                      OpCapability Shader 
                                               %1 = OpExtInstImport "GLSL.std.450" 
                                                      OpMemoryModel Logical GLSL450 
                                                      OpEntryPoint Vertex %4 "main" %11 %52 %85 %95 %110 %114 %144 %150 %153 
                                                      OpName vs_TEXCOORD2 "vs_TEXCOORD2" 
                                                      OpName vs_TEXCOORD0 "vs_TEXCOORD0" 
                                                      OpName vs_TEXCOORD1 "vs_TEXCOORD1" 
                                                      OpName vs_TEXCOORD5 "vs_TEXCOORD5" 
                                                      OpName vs_TEXCOORD6 "vs_TEXCOORD6" 
                                                      OpDecorate %11 Location 11 
                                                      OpDecorate %16 ArrayStride 16 
                                                      OpDecorate %17 ArrayStride 17 
                                                      OpDecorate %18 ArrayStride 18 
                                                      OpMemberDecorate %19 0 Offset 19 
                                                      OpMemberDecorate %19 1 Offset 19 
                                                      OpMemberDecorate %19 2 Offset 19 
                                                      OpMemberDecorate %19 3 Offset 19 
                                                      OpDecorate %19 Block 
                                                      OpDecorate %21 DescriptorSet 21 
                                                      OpDecorate %21 Binding 21 
                                                      OpDecorate vs_TEXCOORD2 Location 52 
                                                      OpMemberDecorate %83 0 BuiltIn 83 
                                                      OpMemberDecorate %83 1 BuiltIn 83 
                                                      OpMemberDecorate %83 2 BuiltIn 83 
                                                      OpDecorate %83 Block 
                                                      OpDecorate %95 Location 95 
                                                      OpDecorate vs_TEXCOORD0 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD0 Location 110 
                                                      OpDecorate %114 Location 114 
                                                      OpDecorate vs_TEXCOORD1 Location 144 
                                                      OpDecorate vs_TEXCOORD5 Location 150 
                                                      OpDecorate vs_TEXCOORD6 Location 153 
                                               %2 = OpTypeVoid 
                                               %3 = OpTypeFunction %2 
                                               %6 = OpTypeFloat 32 
                                               %7 = OpTypeVector %6 4 
                                               %8 = OpTypePointer Private %7 
                                Private f32_4* %9 = OpVariable Private 
                                              %10 = OpTypePointer Input %7 
                                 Input f32_4* %11 = OpVariable Input 
                                              %14 = OpTypeInt 32 0 
                                          u32 %15 = OpConstant 4 
                                              %16 = OpTypeArray %7 %15 
                                              %17 = OpTypeArray %7 %15 
                                              %18 = OpTypeArray %7 %15 
                                              %19 = OpTypeStruct %16 %17 %18 %7 
                                              %20 = OpTypePointer Uniform %19 
Uniform struct {f32_4[4]; f32_4[4]; f32_4[4]; f32_4;}* %21 = OpVariable Uniform 
                                              %22 = OpTypeInt 32 1 
                                          i32 %23 = OpConstant 0 
                                          i32 %24 = OpConstant 1 
                                              %25 = OpTypePointer Uniform %7 
                                          i32 %36 = OpConstant 2 
                               Private f32_4* %44 = OpVariable Private 
                                          i32 %46 = OpConstant 3 
                                              %50 = OpTypeVector %6 3 
                                              %51 = OpTypePointer Output %50 
                       Output f32_3* vs_TEXCOORD2 = OpVariable Output 
                                          u32 %81 = OpConstant 1 
                                              %82 = OpTypeArray %6 %81 
                                              %83 = OpTypeStruct %7 %6 %82 
                                              %84 = OpTypePointer Output %83 
         Output struct {f32_4; f32; f32[1];}* %85 = OpVariable Output 
                                              %93 = OpTypePointer Output %7 
                                 Input f32_4* %95 = OpVariable Input 
                                              %96 = OpTypeVector %6 2 
                                             %109 = OpTypePointer Output %96 
                       Output f32_2* vs_TEXCOORD0 = OpVariable Output 
                                             %113 = OpTypePointer Input %50 
                                Input f32_3* %114 = OpVariable Input 
                                         u32 %120 = OpConstant 0 
                                             %121 = OpTypePointer Private %6 
                                         u32 %134 = OpConstant 2 
                                Private f32* %136 = OpVariable Private 
                       Output f32_3* vs_TEXCOORD1 = OpVariable Output 
                       Output f32_4* vs_TEXCOORD5 = OpVariable Output 
                                         f32 %151 = OpConstant 3.674022E-40 
                                       f32_4 %152 = OpConstantComposite %151 %151 %151 %151 
                       Output f32_4* vs_TEXCOORD6 = OpVariable Output 
                                             %154 = OpTypePointer Output %6 
                                          void %4 = OpFunction None %3 
                                               %5 = OpLabel 
                                        f32_4 %12 = OpLoad %11 
                                        f32_4 %13 = OpVectorShuffle %12 %12 1 1 1 1 
                               Uniform f32_4* %26 = OpAccessChain %21 %23 %24 
                                        f32_4 %27 = OpLoad %26 
                                        f32_4 %28 = OpFMul %13 %27 
                                                      OpStore %9 %28 
                               Uniform f32_4* %29 = OpAccessChain %21 %23 %23 
                                        f32_4 %30 = OpLoad %29 
                                        f32_4 %31 = OpLoad %11 
                                        f32_4 %32 = OpVectorShuffle %31 %31 0 0 0 0 
                                        f32_4 %33 = OpFMul %30 %32 
                                        f32_4 %34 = OpLoad %9 
                                        f32_4 %35 = OpFAdd %33 %34 
                                                      OpStore %9 %35 
                               Uniform f32_4* %37 = OpAccessChain %21 %23 %36 
                                        f32_4 %38 = OpLoad %37 
                                        f32_4 %39 = OpLoad %11 
                                        f32_4 %40 = OpVectorShuffle %39 %39 2 2 2 2 
                                        f32_4 %41 = OpFMul %38 %40 
                                        f32_4 %42 = OpLoad %9 
                                        f32_4 %43 = OpFAdd %41 %42 
                                                      OpStore %9 %43 
                                        f32_4 %45 = OpLoad %9 
                               Uniform f32_4* %47 = OpAccessChain %21 %23 %46 
                                        f32_4 %48 = OpLoad %47 
                                        f32_4 %49 = OpFAdd %45 %48 
                                                      OpStore %44 %49 
                               Uniform f32_4* %53 = OpAccessChain %21 %23 %46 
                                        f32_4 %54 = OpLoad %53 
                                        f32_3 %55 = OpVectorShuffle %54 %54 0 1 2 
                                        f32_4 %56 = OpLoad %11 
                                        f32_3 %57 = OpVectorShuffle %56 %56 3 3 3 
                                        f32_3 %58 = OpFMul %55 %57 
                                        f32_4 %59 = OpLoad %9 
                                        f32_3 %60 = OpVectorShuffle %59 %59 0 1 2 
                                        f32_3 %61 = OpFAdd %58 %60 
                                                      OpStore vs_TEXCOORD2 %61 
                                        f32_4 %62 = OpLoad %44 
                                        f32_4 %63 = OpVectorShuffle %62 %62 1 1 1 1 
                               Uniform f32_4* %64 = OpAccessChain %21 %36 %24 
                                        f32_4 %65 = OpLoad %64 
                                        f32_4 %66 = OpFMul %63 %65 
                                                      OpStore %9 %66 
                               Uniform f32_4* %67 = OpAccessChain %21 %36 %23 
                                        f32_4 %68 = OpLoad %67 
                                        f32_4 %69 = OpLoad %44 
                                        f32_4 %70 = OpVectorShuffle %69 %69 0 0 0 0 
                                        f32_4 %71 = OpFMul %68 %70 
                                        f32_4 %72 = OpLoad %9 
                                        f32_4 %73 = OpFAdd %71 %72 
                                                      OpStore %9 %73 
                               Uniform f32_4* %74 = OpAccessChain %21 %36 %36 
                                        f32_4 %75 = OpLoad %74 
                                        f32_4 %76 = OpLoad %44 
                                        f32_4 %77 = OpVectorShuffle %76 %76 2 2 2 2 
                                        f32_4 %78 = OpFMul %75 %77 
                                        f32_4 %79 = OpLoad %9 
                                        f32_4 %80 = OpFAdd %78 %79 
                                                      OpStore %9 %80 
                               Uniform f32_4* %86 = OpAccessChain %21 %36 %46 
                                        f32_4 %87 = OpLoad %86 
                                        f32_4 %88 = OpLoad %44 
                                        f32_4 %89 = OpVectorShuffle %88 %88 3 3 3 3 
                                        f32_4 %90 = OpFMul %87 %89 
                                        f32_4 %91 = OpLoad %9 
                                        f32_4 %92 = OpFAdd %90 %91 
                                Output f32_4* %94 = OpAccessChain %85 %23 
                                                      OpStore %94 %92 
                                        f32_4 %97 = OpLoad %95 
                                        f32_2 %98 = OpVectorShuffle %97 %97 0 1 
                               Uniform f32_4* %99 = OpAccessChain %21 %46 
                                       f32_4 %100 = OpLoad %99 
                                       f32_2 %101 = OpVectorShuffle %100 %100 0 1 
                                       f32_2 %102 = OpFMul %98 %101 
                              Uniform f32_4* %103 = OpAccessChain %21 %46 
                                       f32_4 %104 = OpLoad %103 
                                       f32_2 %105 = OpVectorShuffle %104 %104 2 3 
                                       f32_2 %106 = OpFAdd %102 %105 
                                       f32_4 %107 = OpLoad %9 
                                       f32_4 %108 = OpVectorShuffle %107 %106 4 5 2 3 
                                                      OpStore %9 %108 
                                       f32_4 %111 = OpLoad %9 
                                       f32_2 %112 = OpVectorShuffle %111 %111 0 1 
                                                      OpStore vs_TEXCOORD0 %112 
                                       f32_3 %115 = OpLoad %114 
                              Uniform f32_4* %116 = OpAccessChain %21 %24 %23 
                                       f32_4 %117 = OpLoad %116 
                                       f32_3 %118 = OpVectorShuffle %117 %117 0 1 2 
                                         f32 %119 = OpDot %115 %118 
                                Private f32* %122 = OpAccessChain %9 %120 
                                                      OpStore %122 %119 
                                       f32_3 %123 = OpLoad %114 
                              Uniform f32_4* %124 = OpAccessChain %21 %24 %24 
                                       f32_4 %125 = OpLoad %124 
                                       f32_3 %126 = OpVectorShuffle %125 %125 0 1 2 
                                         f32 %127 = OpDot %123 %126 
                                Private f32* %128 = OpAccessChain %9 %81 
                                                      OpStore %128 %127 
                                       f32_3 %129 = OpLoad %114 
                              Uniform f32_4* %130 = OpAccessChain %21 %24 %36 
                                       f32_4 %131 = OpLoad %130 
                                       f32_3 %132 = OpVectorShuffle %131 %131 0 1 2 
                                         f32 %133 = OpDot %129 %132 
                                Private f32* %135 = OpAccessChain %9 %134 
                                                      OpStore %135 %133 
                                       f32_4 %137 = OpLoad %9 
                                       f32_3 %138 = OpVectorShuffle %137 %137 0 1 2 
                                       f32_4 %139 = OpLoad %9 
                                       f32_3 %140 = OpVectorShuffle %139 %139 0 1 2 
                                         f32 %141 = OpDot %138 %140 
                                                      OpStore %136 %141 
                                         f32 %142 = OpLoad %136 
                                         f32 %143 = OpExtInst %1 32 %142 
                                                      OpStore %136 %143 
                                         f32 %145 = OpLoad %136 
                                       f32_3 %146 = OpCompositeConstruct %145 %145 %145 
                                       f32_4 %147 = OpLoad %9 
                                       f32_3 %148 = OpVectorShuffle %147 %147 0 1 2 
                                       f32_3 %149 = OpFMul %146 %148 
                                                      OpStore vs_TEXCOORD1 %149 
                                                      OpStore vs_TEXCOORD5 %152 
                                                      OpStore vs_TEXCOORD6 %152 
                                 Output f32* %155 = OpAccessChain %85 %23 %81 
                                         f32 %156 = OpLoad %155 
                                         f32 %157 = OpFNegate %156 
                                 Output f32* %158 = OpAccessChain %85 %23 %81 
                                                      OpStore %158 %157 
                                                      OpReturn
                                                      OpFunctionEnd
; SPIR-V
; Version: 1.0
; Generator: Khronos Glslang Reference Front End; 6
; Bound: 340
; Schema: 0
                                                      OpCapability Shader 
                                               %1 = OpExtInstImport "GLSL.std.450" 
                                                      OpMemoryModel Logical GLSL450 
                                                      OpEntryPoint Fragment %4 "main" %11 %183 %309 %320 
                                                      OpExecutionMode %4 OriginUpperLeft 
                                                      OpName vs_TEXCOORD2 "vs_TEXCOORD2" 
                                                      OpName vs_TEXCOORD1 "vs_TEXCOORD1" 
                                                      OpName vs_TEXCOORD0 "vs_TEXCOORD0" 
                                                      OpDecorate vs_TEXCOORD2 Location 11 
                                                      OpDecorate %16 ArrayStride 16 
                                                      OpDecorate %18 ArrayStride 18 
                                                      OpMemberDecorate %19 0 Offset 19 
                                                      OpMemberDecorate %19 1 RelaxedPrecision 
                                                      OpMemberDecorate %19 1 Offset 19 
                                                      OpMemberDecorate %19 2 Offset 19 
                                                      OpMemberDecorate %19 3 RelaxedPrecision 
                                                      OpMemberDecorate %19 3 Offset 19 
                                                      OpMemberDecorate %19 4 Offset 19 
                                                      OpMemberDecorate %19 5 Offset 19 
                                                      OpMemberDecorate %19 6 RelaxedPrecision 
                                                      OpMemberDecorate %19 6 Offset 19 
                                                      OpMemberDecorate %19 7 RelaxedPrecision 
                                                      OpMemberDecorate %19 7 Offset 19 
                                                      OpMemberDecorate %19 8 RelaxedPrecision 
                                                      OpMemberDecorate %19 8 Offset 19 
                                                      OpMemberDecorate %19 9 RelaxedPrecision 
                                                      OpMemberDecorate %19 9 Offset 19 
                                                      OpMemberDecorate %19 10 RelaxedPrecision 
                                                      OpMemberDecorate %19 10 Offset 19 
                                                      OpMemberDecorate %19 11 RelaxedPrecision 
                                                      OpMemberDecorate %19 11 Offset 19 
                                                      OpDecorate %19 Block 
                                                      OpDecorate %21 DescriptorSet 21 
                                                      OpDecorate %21 Binding 21 
                                                      OpDecorate %89 RelaxedPrecision 
                                                      OpDecorate %92 RelaxedPrecision 
                                                      OpDecorate %140 DescriptorSet 140 
                                                      OpDecorate %140 Binding 140 
                                                      OpDecorate %144 DescriptorSet 144 
                                                      OpDecorate %144 Binding 144 
                                                      OpDecorate %153 RelaxedPrecision 
                                                      OpDecorate %155 RelaxedPrecision 
                                                      OpDecorate %156 RelaxedPrecision 
                                                      OpDecorate %157 RelaxedPrecision 
                                                      OpDecorate %162 RelaxedPrecision 
                                                      OpDecorate %165 RelaxedPrecision 
                                                      OpDecorate %168 RelaxedPrecision 
                                                      OpDecorate %170 RelaxedPrecision 
                                                      OpDecorate %171 RelaxedPrecision 
                                                      OpDecorate %172 RelaxedPrecision 
                                                      OpDecorate %177 RelaxedPrecision 
                                                      OpDecorate %180 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD1 Location 183 
                                                      OpDecorate %189 RelaxedPrecision 
                                                      OpDecorate %190 RelaxedPrecision 
                                                      OpDecorate %192 RelaxedPrecision 
                                                      OpDecorate %193 RelaxedPrecision 
                                                      OpDecorate %196 RelaxedPrecision 
                                                      OpDecorate %198 RelaxedPrecision 
                                                      OpDecorate %199 RelaxedPrecision 
                                                      OpDecorate %200 RelaxedPrecision 
                                                      OpDecorate %203 RelaxedPrecision 
                                                      OpDecorate %204 RelaxedPrecision 
                                                      OpDecorate %206 RelaxedPrecision 
                                                      OpDecorate %209 RelaxedPrecision 
                                                      OpDecorate %210 RelaxedPrecision 
                                                      OpDecorate %212 RelaxedPrecision 
                                                      OpDecorate %215 RelaxedPrecision 
                                                      OpDecorate %216 RelaxedPrecision 
                                                      OpDecorate %217 RelaxedPrecision 
                                                      OpDecorate %218 RelaxedPrecision 
                                                      OpDecorate %220 RelaxedPrecision 
                                                      OpDecorate %221 RelaxedPrecision 
                                                      OpDecorate %223 RelaxedPrecision 
                                                      OpDecorate %225 RelaxedPrecision 
                                                      OpDecorate %226 RelaxedPrecision 
                                                      OpDecorate %228 RelaxedPrecision 
                                                      OpDecorate %229 RelaxedPrecision 
                                                      OpDecorate %230 RelaxedPrecision 
                                                      OpDecorate %231 RelaxedPrecision 
                                                      OpDecorate %232 RelaxedPrecision 
                                                      OpDecorate %233 RelaxedPrecision 
                                                      OpDecorate %234 RelaxedPrecision 
                                                      OpDecorate %235 RelaxedPrecision 
                                                      OpDecorate %236 RelaxedPrecision 
                                                      OpDecorate %238 RelaxedPrecision 
                                                      OpDecorate %239 RelaxedPrecision 
                                                      OpDecorate %242 RelaxedPrecision 
                                                      OpDecorate %243 RelaxedPrecision 
                                                      OpDecorate %246 RelaxedPrecision 
                                                      OpDecorate %248 RelaxedPrecision 
                                                      OpDecorate %250 RelaxedPrecision 
                                                      OpDecorate %252 RelaxedPrecision 
                                                      OpDecorate %254 RelaxedPrecision 
                                                      OpDecorate %255 RelaxedPrecision 
                                                      OpDecorate %258 RelaxedPrecision 
                                                      OpDecorate %259 RelaxedPrecision 
                                                      OpDecorate %260 RelaxedPrecision 
                                                      OpDecorate %263 RelaxedPrecision 
                                                      OpDecorate %265 RelaxedPrecision 
                                                      OpDecorate %266 RelaxedPrecision 
                                                      OpDecorate %270 RelaxedPrecision 
                                                      OpDecorate %271 RelaxedPrecision 
                                                      OpDecorate %272 RelaxedPrecision 
                                                      OpDecorate %275 RelaxedPrecision 
                                                      OpDecorate %276 RelaxedPrecision 
                                                      OpDecorate %277 RelaxedPrecision 
                                                      OpDecorate %279 RelaxedPrecision 
                                                      OpDecorate %280 RelaxedPrecision 
                                                      OpDecorate %281 RelaxedPrecision 
                                                      OpDecorate %282 RelaxedPrecision 
                                                      OpDecorate %284 RelaxedPrecision 
                                                      OpDecorate %285 RelaxedPrecision 
                                                      OpDecorate %286 RelaxedPrecision 
                                                      OpDecorate %287 RelaxedPrecision 
                                                      OpDecorate %288 RelaxedPrecision 
                                                      OpDecorate %289 RelaxedPrecision 
                                                      OpDecorate %291 RelaxedPrecision 
                                                      OpDecorate %292 RelaxedPrecision 
                                                      OpDecorate %293 RelaxedPrecision 
                                                      OpDecorate %294 RelaxedPrecision 
                                                      OpDecorate %295 RelaxedPrecision 
                                                      OpDecorate %296 RelaxedPrecision 
                                                      OpDecorate %297 RelaxedPrecision 
                                                      OpDecorate %298 RelaxedPrecision 
                                                      OpDecorate %299 RelaxedPrecision 
                                                      OpDecorate %301 RelaxedPrecision 
                                                      OpDecorate %302 RelaxedPrecision 
                                                      OpDecorate %302 DescriptorSet 302 
                                                      OpDecorate %302 Binding 302 
                                                      OpDecorate %303 RelaxedPrecision 
                                                      OpDecorate %304 RelaxedPrecision 
                                                      OpDecorate %304 DescriptorSet 304 
                                                      OpDecorate %304 Binding 304 
                                                      OpDecorate %305 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD0 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD0 Location 309 
                                                      OpDecorate %310 RelaxedPrecision 
                                                      OpDecorate %311 RelaxedPrecision 
                                                      OpDecorate %312 RelaxedPrecision 
                                                      OpDecorate %313 RelaxedPrecision 
                                                      OpDecorate %316 RelaxedPrecision 
                                                      OpDecorate %317 RelaxedPrecision 
                                                      OpDecorate %318 RelaxedPrecision 
                                                      OpDecorate %320 RelaxedPrecision 
                                                      OpDecorate %320 Location 320 
                                                      OpDecorate %322 RelaxedPrecision 
                                                      OpDecorate %324 RelaxedPrecision 
                                                      OpDecorate %325 RelaxedPrecision 
                                                      OpDecorate %328 RelaxedPrecision 
                                                      OpDecorate %331 RelaxedPrecision 
                                                      OpDecorate %332 RelaxedPrecision 
                                                      OpDecorate %333 RelaxedPrecision 
                                                      OpDecorate %334 RelaxedPrecision 
                                                      OpDecorate %335 RelaxedPrecision 
                                                      OpDecorate %336 RelaxedPrecision 
                                               %2 = OpTypeVoid 
                                               %3 = OpTypeFunction %2 
                                               %6 = OpTypeFloat 32 
                                               %7 = OpTypeVector %6 3 
                                               %8 = OpTypePointer Private %7 
                                Private f32_3* %9 = OpVariable Private 
                                              %10 = OpTypePointer Input %7 
                        Input f32_3* vs_TEXCOORD2 = OpVariable Input 
                                              %13 = OpTypeVector %6 4 
                                              %14 = OpTypeInt 32 0 
                                          u32 %15 = OpConstant 16 
                                              %16 = OpTypeArray %13 %15 
                                          u32 %17 = OpConstant 4 
                                              %18 = OpTypeArray %13 %17 
                                              %19 = OpTypeStruct %7 %13 %16 %13 %13 %18 %13 %13 %13 %13 %6 %6 
                                              %20 = OpTypePointer Uniform %19 
Uniform struct {f32_3; f32_4; f32_4[16]; f32_4; f32_4; f32_4[4]; f32_4; f32_4; f32_4; f32_4; f32; f32;}* %21 = OpVariable Uniform 
                                              %22 = OpTypeInt 32 1 
                                          i32 %23 = OpConstant 4 
                                              %24 = OpTypePointer Uniform %13 
                                          u32 %33 = OpConstant 0 
                                              %34 = OpTypePointer Private %6 
                               Private f32_3* %40 = OpVariable Private 
                                          i32 %43 = OpConstant 0 
                                              %44 = OpTypePointer Uniform %7 
                               Private f32_3* %48 = OpVariable Private 
                                          i32 %49 = OpConstant 5 
                                          u32 %50 = OpConstant 2 
                                              %51 = OpTypePointer Uniform %6 
                                          i32 %55 = OpConstant 1 
                                          u32 %58 = OpConstant 1 
                                          i32 %60 = OpConstant 2 
                                          u32 %75 = OpConstant 3 
                                          i32 %87 = OpConstant 3 
                                          f32 %97 = OpConstant 3.674022E-40 
                                          f32 %98 = OpConstant 3.674022E-40 
                                             %128 = OpTypePointer Function %7 
                                             %130 = OpTypeVector %6 2 
                                             %138 = OpTypeImage %6 Dim2D 0 0 0 1 Unknown 
                                             %139 = OpTypePointer UniformConstant %138 
        UniformConstant read_only Texture2D* %140 = OpVariable UniformConstant 
                                             %142 = OpTypeSampler 
                                             %143 = OpTypePointer UniformConstant %142 
                    UniformConstant sampler* %144 = OpVariable UniformConstant 
                                             %146 = OpTypeImage %6 Dim2D 1 0 0 1 Unknown 
                                             %147 = OpTypeSampledImage %146 
                              Private f32_3* %153 = OpVariable Private 
                              Private f32_3* %168 = OpVariable Private 
                        Input f32_3* vs_TEXCOORD1 = OpVariable Input 
                                Private f32* %206 = OpVariable Private 
                                         i32 %207 = OpConstant 11 
                                         f32 %211 = OpConstant 3.674022E-40 
                                         i32 %213 = OpConstant 10 
                                Private f32* %223 = OpVariable Private 
                                         f32 %247 = OpConstant 3.674022E-40 
                                         f32 %249 = OpConstant 3.674022E-40 
                                         i32 %268 = OpConstant 8 
                                         i32 %273 = OpConstant 9 
                              Private f32_3* %287 = OpVariable Private 
                                             %300 = OpTypePointer Private %13 
                              Private f32_4* %301 = OpVariable Private 
        UniformConstant read_only Texture2D* %302 = OpVariable UniformConstant 
                    UniformConstant sampler* %304 = OpVariable UniformConstant 
                                             %306 = OpTypeSampledImage %138 
                                             %308 = OpTypePointer Input %130 
                        Input f32_2* vs_TEXCOORD0 = OpVariable Input 
                                         i32 %314 = OpConstant 7 
                                             %319 = OpTypePointer Output %13 
                               Output f32_4* %320 = OpVariable Output 
                                             %326 = OpTypePointer Output %6 
                                         i32 %329 = OpConstant 6 
                                          void %4 = OpFunction None %3 
                                               %5 = OpLabel 
                             Function f32_3* %129 = OpVariable Function 
                                        f32_3 %12 = OpLoad vs_TEXCOORD2 
                               Uniform f32_4* %25 = OpAccessChain %21 %23 
                                        f32_4 %26 = OpLoad %25 
                                        f32_3 %27 = OpVectorShuffle %26 %26 0 1 2 
                                        f32_3 %28 = OpFNegate %27 
                                        f32_3 %29 = OpFAdd %12 %28 
                                                      OpStore %9 %29 
                                        f32_3 %30 = OpLoad %9 
                                        f32_3 %31 = OpLoad %9 
                                          f32 %32 = OpDot %30 %31 
                                 Private f32* %35 = OpAccessChain %9 %33 
                                                      OpStore %35 %32 
                                 Private f32* %36 = OpAccessChain %9 %33 
                                          f32 %37 = OpLoad %36 
                                          f32 %38 = OpExtInst %1 31 %37 
                                 Private f32* %39 = OpAccessChain %9 %33 
                                                      OpStore %39 %38 
                                        f32_3 %41 = OpLoad vs_TEXCOORD2 
                                        f32_3 %42 = OpFNegate %41 
                               Uniform f32_3* %45 = OpAccessChain %21 %43 
                                        f32_3 %46 = OpLoad %45 
                                        f32_3 %47 = OpFAdd %42 %46 
                                                      OpStore %40 %47 
                                 Uniform f32* %52 = OpAccessChain %21 %49 %43 %50 
                                          f32 %53 = OpLoad %52 
                                 Private f32* %54 = OpAccessChain %48 %33 
                                                      OpStore %54 %53 
                                 Uniform f32* %56 = OpAccessChain %21 %49 %55 %50 
                                          f32 %57 = OpLoad %56 
                                 Private f32* %59 = OpAccessChain %48 %58 
                                                      OpStore %59 %57 
                                 Uniform f32* %61 = OpAccessChain %21 %49 %60 %50 
                                          f32 %62 = OpLoad %61 
                                 Private f32* %63 = OpAccessChain %48 %50 
                                                      OpStore %63 %62 
                                        f32_3 %64 = OpLoad %40 
                                        f32_3 %65 = OpLoad %48 
                                          f32 %66 = OpDot %64 %65 
                                 Private f32* %67 = OpAccessChain %40 %33 
                                                      OpStore %67 %66 
                                 Private f32* %68 = OpAccessChain %40 %33 
                                          f32 %69 = OpLoad %68 
                                          f32 %70 = OpFNegate %69 
                                 Private f32* %71 = OpAccessChain %9 %33 
                                          f32 %72 = OpLoad %71 
                                          f32 %73 = OpFAdd %70 %72 
                                 Private f32* %74 = OpAccessChain %9 %33 
                                                      OpStore %74 %73 
                                 Uniform f32* %76 = OpAccessChain %21 %23 %75 
                                          f32 %77 = OpLoad %76 
                                 Private f32* %78 = OpAccessChain %9 %33 
                                          f32 %79 = OpLoad %78 
                                          f32 %80 = OpFMul %77 %79 
                                 Private f32* %81 = OpAccessChain %40 %33 
                                          f32 %82 = OpLoad %81 
                                          f32 %83 = OpFAdd %80 %82 
                                 Private f32* %84 = OpAccessChain %9 %33 
                                                      OpStore %84 %83 
                                 Private f32* %85 = OpAccessChain %9 %33 
                                          f32 %86 = OpLoad %85 
                                 Uniform f32* %88 = OpAccessChain %21 %87 %50 
                                          f32 %89 = OpLoad %88 
                                          f32 %90 = OpFMul %86 %89 
                                 Uniform f32* %91 = OpAccessChain %21 %87 %75 
                                          f32 %92 = OpLoad %91 
                                          f32 %93 = OpFAdd %90 %92 
                                 Private f32* %94 = OpAccessChain %9 %33 
                                                      OpStore %94 %93 
                                 Private f32* %95 = OpAccessChain %9 %33 
                                          f32 %96 = OpLoad %95 
                                          f32 %99 = OpExtInst %1 43 %96 %97 %98 
                                Private f32* %100 = OpAccessChain %9 %33 
                                                      OpStore %100 %99 
                                       f32_3 %101 = OpLoad vs_TEXCOORD2 
                                       f32_3 %102 = OpVectorShuffle %101 %101 1 1 1 
                              Uniform f32_4* %103 = OpAccessChain %21 %60 %55 
                                       f32_4 %104 = OpLoad %103 
                                       f32_3 %105 = OpVectorShuffle %104 %104 0 1 2 
                                       f32_3 %106 = OpFMul %102 %105 
                                                      OpStore %40 %106 
                              Uniform f32_4* %107 = OpAccessChain %21 %60 %43 
                                       f32_4 %108 = OpLoad %107 
                                       f32_3 %109 = OpVectorShuffle %108 %108 0 1 2 
                                       f32_3 %110 = OpLoad vs_TEXCOORD2 
                                       f32_3 %111 = OpVectorShuffle %110 %110 0 0 0 
                                       f32_3 %112 = OpFMul %109 %111 
                                       f32_3 %113 = OpLoad %40 
                                       f32_3 %114 = OpFAdd %112 %113 
                                                      OpStore %40 %114 
                              Uniform f32_4* %115 = OpAccessChain %21 %60 %60 
                                       f32_4 %116 = OpLoad %115 
                                       f32_3 %117 = OpVectorShuffle %116 %116 0 1 2 
                                       f32_3 %118 = OpLoad vs_TEXCOORD2 
                                       f32_3 %119 = OpVectorShuffle %118 %118 2 2 2 
                                       f32_3 %120 = OpFMul %117 %119 
                                       f32_3 %121 = OpLoad %40 
                                       f32_3 %122 = OpFAdd %120 %121 
                                                      OpStore %40 %122 
                                       f32_3 %123 = OpLoad %40 
                              Uniform f32_4* %124 = OpAccessChain %21 %60 %87 
                                       f32_4 %125 = OpLoad %124 
                                       f32_3 %126 = OpVectorShuffle %125 %125 0 1 2 
                                       f32_3 %127 = OpFAdd %123 %126 
                                                      OpStore %40 %127 
                                       f32_3 %131 = OpLoad %40 
                                       f32_2 %132 = OpVectorShuffle %131 %131 0 1 
                                Private f32* %133 = OpAccessChain %40 %50 
                                         f32 %134 = OpLoad %133 
                                         f32 %135 = OpCompositeExtract %132 0 
                                         f32 %136 = OpCompositeExtract %132 1 
                                       f32_3 %137 = OpCompositeConstruct %135 %136 %134 
                                                      OpStore %129 %137 
                         read_only Texture2D %141 = OpLoad %140 
                                     sampler %145 = OpLoad %144 
                  read_only Texture2DSampled %148 = OpSampledImage %141 %145 
                                       f32_3 %149 = OpLoad %129 
                                         f32 %150 = OpCompositeExtract %149 2 
                                         f32 %151 = OpImageSampleDrefExplicitLod %148 %149 %150 Lod %6 
                                Private f32* %152 = OpAccessChain %40 %33 
                                                      OpStore %152 %151 
                                Uniform f32* %154 = OpAccessChain %21 %87 %33 
                                         f32 %155 = OpLoad %154 
                                         f32 %156 = OpFNegate %155 
                                         f32 %157 = OpFAdd %156 %98 
                                Private f32* %158 = OpAccessChain %153 %33 
                                                      OpStore %158 %157 
                                Private f32* %159 = OpAccessChain %40 %33 
                                         f32 %160 = OpLoad %159 
                                Private f32* %161 = OpAccessChain %153 %33 
                                         f32 %162 = OpLoad %161 
                                         f32 %163 = OpFMul %160 %162 
                                Uniform f32* %164 = OpAccessChain %21 %87 %33 
                                         f32 %165 = OpLoad %164 
                                         f32 %166 = OpFAdd %163 %165 
                                Private f32* %167 = OpAccessChain %153 %33 
                                                      OpStore %167 %166 
                                Private f32* %169 = OpAccessChain %153 %33 
                                         f32 %170 = OpLoad %169 
                                         f32 %171 = OpFNegate %170 
                                         f32 %172 = OpFAdd %171 %98 
                                Private f32* %173 = OpAccessChain %168 %33 
                                                      OpStore %173 %172 
                                Private f32* %174 = OpAccessChain %9 %33 
                                         f32 %175 = OpLoad %174 
                                Private f32* %176 = OpAccessChain %168 %33 
                                         f32 %177 = OpLoad %176 
                                         f32 %178 = OpFMul %175 %177 
                                Private f32* %179 = OpAccessChain %153 %33 
                                         f32 %180 = OpLoad %179 
                                         f32 %181 = OpFAdd %178 %180 
                                Private f32* %182 = OpAccessChain %153 %33 
                                                      OpStore %182 %181 
                                       f32_3 %184 = OpLoad vs_TEXCOORD1 
                                       f32_3 %185 = OpLoad vs_TEXCOORD1 
                                         f32 %186 = OpDot %184 %185 
                                Private f32* %187 = OpAccessChain %168 %33 
                                                      OpStore %187 %186 
                                Private f32* %188 = OpAccessChain %168 %33 
                                         f32 %189 = OpLoad %188 
                                         f32 %190 = OpExtInst %1 32 %189 
                                Private f32* %191 = OpAccessChain %168 %33 
                                                      OpStore %191 %190 
                                       f32_3 %192 = OpLoad %168 
                                       f32_3 %193 = OpVectorShuffle %192 %192 0 0 0 
                                       f32_3 %194 = OpLoad vs_TEXCOORD1 
                                       f32_3 %195 = OpFMul %193 %194 
                                                      OpStore %168 %195 
                                       f32_3 %196 = OpLoad %168 
                              Uniform f32_4* %197 = OpAccessChain %21 %55 
                                       f32_4 %198 = OpLoad %197 
                                       f32_3 %199 = OpVectorShuffle %198 %198 0 1 2 
                                         f32 %200 = OpDot %196 %199 
                                Private f32* %201 = OpAccessChain %168 %33 
                                                      OpStore %201 %200 
                                Private f32* %202 = OpAccessChain %168 %33 
                                         f32 %203 = OpLoad %202 
                                         f32 %204 = OpExtInst %1 40 %203 %97 
                                Private f32* %205 = OpAccessChain %168 %33 
                                                      OpStore %205 %204 
                                Uniform f32* %208 = OpAccessChain %21 %207 
                                         f32 %209 = OpLoad %208 
                                         f32 %210 = OpFNegate %209 
                                         f32 %212 = OpFMul %210 %211 
                                Uniform f32* %214 = OpAccessChain %21 %213 
                                         f32 %215 = OpLoad %214 
                                         f32 %216 = OpFAdd %212 %215 
                                                      OpStore %206 %216 
                                         f32 %217 = OpLoad %206 
                                         f32 %218 = OpFNegate %217 
                                Private f32* %219 = OpAccessChain %168 %33 
                                         f32 %220 = OpLoad %219 
                                         f32 %221 = OpFAdd %218 %220 
                                Private f32* %222 = OpAccessChain %168 %33 
                                                      OpStore %222 %221 
                                Uniform f32* %224 = OpAccessChain %21 %207 
                                         f32 %225 = OpLoad %224 
                                         f32 %226 = OpFMul %225 %211 
                                Uniform f32* %227 = OpAccessChain %21 %213 
                                         f32 %228 = OpLoad %227 
                                         f32 %229 = OpFAdd %226 %228 
                                                      OpStore %223 %229 
                                         f32 %230 = OpLoad %206 
                                         f32 %231 = OpFNegate %230 
                                         f32 %232 = OpLoad %223 
                                         f32 %233 = OpFAdd %231 %232 
                                                      OpStore %206 %233 
                                         f32 %234 = OpLoad %206 
                                         f32 %235 = OpFDiv %98 %234 
                                                      OpStore %206 %235 
                                         f32 %236 = OpLoad %206 
                                Private f32* %237 = OpAccessChain %168 %33 
                                         f32 %238 = OpLoad %237 
                                         f32 %239 = OpFMul %236 %238 
                                Private f32* %240 = OpAccessChain %168 %33 
                                                      OpStore %240 %239 
                                Private f32* %241 = OpAccessChain %168 %33 
                                         f32 %242 = OpLoad %241 
                                         f32 %243 = OpExtInst %1 43 %242 %97 %98 
                                Private f32* %244 = OpAccessChain %168 %33 
                                                      OpStore %244 %243 
                                Private f32* %245 = OpAccessChain %168 %33 
                                         f32 %246 = OpLoad %245 
                                         f32 %248 = OpFMul %246 %247 
                                         f32 %250 = OpFAdd %248 %249 
                                                      OpStore %206 %250 
                                Private f32* %251 = OpAccessChain %168 %33 
                                         f32 %252 = OpLoad %251 
                                Private f32* %253 = OpAccessChain %168 %33 
                                         f32 %254 = OpLoad %253 
                                         f32 %255 = OpFMul %252 %254 
                                Private f32* %256 = OpAccessChain %168 %33 
                                                      OpStore %256 %255 
                                Private f32* %257 = OpAccessChain %168 %33 
                                         f32 %258 = OpLoad %257 
                                         f32 %259 = OpLoad %206 
                                         f32 %260 = OpFMul %258 %259 
                                Private f32* %261 = OpAccessChain %168 %33 
                                                      OpStore %261 %260 
                                Private f32* %262 = OpAccessChain %153 %33 
                                         f32 %263 = OpLoad %262 
                                Private f32* %264 = OpAccessChain %168 %33 
                                         f32 %265 = OpLoad %264 
                                         f32 %266 = OpFMul %263 %265 
                                Private f32* %267 = OpAccessChain %153 %33 
                                                      OpStore %267 %266 
                              Uniform f32_4* %269 = OpAccessChain %21 %268 
                                       f32_4 %270 = OpLoad %269 
                                       f32_3 %271 = OpVectorShuffle %270 %270 0 1 2 
                                       f32_3 %272 = OpFNegate %271 
                              Uniform f32_4* %274 = OpAccessChain %21 %273 
                                       f32_4 %275 = OpLoad %274 
                                       f32_3 %276 = OpVectorShuffle %275 %275 0 1 2 
                                       f32_3 %277 = OpFAdd %272 %276 
                                                      OpStore %168 %277 
                              Uniform f32_4* %278 = OpAccessChain %21 %273 
                                       f32_4 %279 = OpLoad %278 
                                       f32_3 %280 = OpVectorShuffle %279 %279 3 3 3 
                                       f32_3 %281 = OpLoad %168 
                                       f32_3 %282 = OpFMul %280 %281 
                              Uniform f32_4* %283 = OpAccessChain %21 %268 
                                       f32_4 %284 = OpLoad %283 
                                       f32_3 %285 = OpVectorShuffle %284 %284 0 1 2 
                                       f32_3 %286 = OpFAdd %282 %285 
                                                      OpStore %168 %286 
                                       f32_3 %288 = OpLoad %168 
                                       f32_3 %289 = OpFNegate %288 
                              Uniform f32_4* %290 = OpAccessChain %21 %268 
                                       f32_4 %291 = OpLoad %290 
                                       f32_3 %292 = OpVectorShuffle %291 %291 0 1 2 
                                       f32_3 %293 = OpFAdd %289 %292 
                                                      OpStore %287 %293 
                                       f32_3 %294 = OpLoad %153 
                                       f32_3 %295 = OpVectorShuffle %294 %294 0 0 0 
                                       f32_3 %296 = OpLoad %287 
                                       f32_3 %297 = OpFMul %295 %296 
                                       f32_3 %298 = OpLoad %168 
                                       f32_3 %299 = OpFAdd %297 %298 
                                                      OpStore %153 %299 
                         read_only Texture2D %303 = OpLoad %302 
                                     sampler %305 = OpLoad %304 
                  read_only Texture2DSampled %307 = OpSampledImage %303 %305 
                                       f32_2 %310 = OpLoad vs_TEXCOORD0 
                                       f32_4 %311 = OpImageSampleImplicitLod %307 %310 
                                                      OpStore %301 %311 
                                       f32_4 %312 = OpLoad %301 
                                       f32_3 %313 = OpVectorShuffle %312 %312 0 1 2 
                              Uniform f32_4* %315 = OpAccessChain %21 %314 
                                       f32_4 %316 = OpLoad %315 
                                       f32_3 %317 = OpVectorShuffle %316 %316 0 1 2 
                                       f32_3 %318 = OpFMul %313 %317 
                                                      OpStore %287 %318 
                                Private f32* %321 = OpAccessChain %301 %75 
                                         f32 %322 = OpLoad %321 
                                Uniform f32* %323 = OpAccessChain %21 %314 %75 
                                         f32 %324 = OpLoad %323 
                                         f32 %325 = OpFMul %322 %324 
                                 Output f32* %327 = OpAccessChain %320 %75 
                                                      OpStore %327 %325 
                                       f32_3 %328 = OpLoad %287 
                              Uniform f32_4* %330 = OpAccessChain %21 %329 
                                       f32_4 %331 = OpLoad %330 
                                       f32_3 %332 = OpVectorShuffle %331 %331 0 1 2 
                                       f32_3 %333 = OpFMul %328 %332 
                                                      OpStore %287 %333 
                                       f32_3 %334 = OpLoad %153 
                                       f32_3 %335 = OpLoad %287 
                                       f32_3 %336 = OpFMul %334 %335 
                                       f32_4 %337 = OpLoad %320 
                                       f32_4 %338 = OpVectorShuffle %337 %336 4 5 6 3 
                                                      OpStore %320 %338 
                                                      OpReturn
                                                      OpFunctionEnd
"
}
SubProgram "vulkan hw_tier01 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" }
"; SPIR-V
; Version: 1.0
; Generator: Khronos Glslang Reference Front End; 6
; Bound: 160
; Schema: 0
                                                      OpCapability Shader 
                                               %1 = OpExtInstImport "GLSL.std.450" 
                                                      OpMemoryModel Logical GLSL450 
                                                      OpEntryPoint Vertex %4 "main" %11 %52 %85 %95 %110 %114 %144 %150 %153 
                                                      OpName vs_TEXCOORD2 "vs_TEXCOORD2" 
                                                      OpName vs_TEXCOORD0 "vs_TEXCOORD0" 
                                                      OpName vs_TEXCOORD1 "vs_TEXCOORD1" 
                                                      OpName vs_TEXCOORD5 "vs_TEXCOORD5" 
                                                      OpName vs_TEXCOORD6 "vs_TEXCOORD6" 
                                                      OpDecorate %11 Location 11 
                                                      OpDecorate %16 ArrayStride 16 
                                                      OpDecorate %17 ArrayStride 17 
                                                      OpDecorate %18 ArrayStride 18 
                                                      OpMemberDecorate %19 0 Offset 19 
                                                      OpMemberDecorate %19 1 Offset 19 
                                                      OpMemberDecorate %19 2 Offset 19 
                                                      OpMemberDecorate %19 3 Offset 19 
                                                      OpDecorate %19 Block 
                                                      OpDecorate %21 DescriptorSet 21 
                                                      OpDecorate %21 Binding 21 
                                                      OpDecorate vs_TEXCOORD2 Location 52 
                                                      OpMemberDecorate %83 0 BuiltIn 83 
                                                      OpMemberDecorate %83 1 BuiltIn 83 
                                                      OpMemberDecorate %83 2 BuiltIn 83 
                                                      OpDecorate %83 Block 
                                                      OpDecorate %95 Location 95 
                                                      OpDecorate vs_TEXCOORD0 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD0 Location 110 
                                                      OpDecorate %114 Location 114 
                                                      OpDecorate vs_TEXCOORD1 Location 144 
                                                      OpDecorate vs_TEXCOORD5 Location 150 
                                                      OpDecorate vs_TEXCOORD6 Location 153 
                                               %2 = OpTypeVoid 
                                               %3 = OpTypeFunction %2 
                                               %6 = OpTypeFloat 32 
                                               %7 = OpTypeVector %6 4 
                                               %8 = OpTypePointer Private %7 
                                Private f32_4* %9 = OpVariable Private 
                                              %10 = OpTypePointer Input %7 
                                 Input f32_4* %11 = OpVariable Input 
                                              %14 = OpTypeInt 32 0 
                                          u32 %15 = OpConstant 4 
                                              %16 = OpTypeArray %7 %15 
                                              %17 = OpTypeArray %7 %15 
                                              %18 = OpTypeArray %7 %15 
                                              %19 = OpTypeStruct %16 %17 %18 %7 
                                              %20 = OpTypePointer Uniform %19 
Uniform struct {f32_4[4]; f32_4[4]; f32_4[4]; f32_4;}* %21 = OpVariable Uniform 
                                              %22 = OpTypeInt 32 1 
                                          i32 %23 = OpConstant 0 
                                          i32 %24 = OpConstant 1 
                                              %25 = OpTypePointer Uniform %7 
                                          i32 %36 = OpConstant 2 
                               Private f32_4* %44 = OpVariable Private 
                                          i32 %46 = OpConstant 3 
                                              %50 = OpTypeVector %6 3 
                                              %51 = OpTypePointer Output %50 
                       Output f32_3* vs_TEXCOORD2 = OpVariable Output 
                                          u32 %81 = OpConstant 1 
                                              %82 = OpTypeArray %6 %81 
                                              %83 = OpTypeStruct %7 %6 %82 
                                              %84 = OpTypePointer Output %83 
         Output struct {f32_4; f32; f32[1];}* %85 = OpVariable Output 
                                              %93 = OpTypePointer Output %7 
                                 Input f32_4* %95 = OpVariable Input 
                                              %96 = OpTypeVector %6 2 
                                             %109 = OpTypePointer Output %96 
                       Output f32_2* vs_TEXCOORD0 = OpVariable Output 
                                             %113 = OpTypePointer Input %50 
                                Input f32_3* %114 = OpVariable Input 
                                         u32 %120 = OpConstant 0 
                                             %121 = OpTypePointer Private %6 
                                         u32 %134 = OpConstant 2 
                                Private f32* %136 = OpVariable Private 
                       Output f32_3* vs_TEXCOORD1 = OpVariable Output 
                       Output f32_4* vs_TEXCOORD5 = OpVariable Output 
                                         f32 %151 = OpConstant 3.674022E-40 
                                       f32_4 %152 = OpConstantComposite %151 %151 %151 %151 
                       Output f32_4* vs_TEXCOORD6 = OpVariable Output 
                                             %154 = OpTypePointer Output %6 
                                          void %4 = OpFunction None %3 
                                               %5 = OpLabel 
                                        f32_4 %12 = OpLoad %11 
                                        f32_4 %13 = OpVectorShuffle %12 %12 1 1 1 1 
                               Uniform f32_4* %26 = OpAccessChain %21 %23 %24 
                                        f32_4 %27 = OpLoad %26 
                                        f32_4 %28 = OpFMul %13 %27 
                                                      OpStore %9 %28 
                               Uniform f32_4* %29 = OpAccessChain %21 %23 %23 
                                        f32_4 %30 = OpLoad %29 
                                        f32_4 %31 = OpLoad %11 
                                        f32_4 %32 = OpVectorShuffle %31 %31 0 0 0 0 
                                        f32_4 %33 = OpFMul %30 %32 
                                        f32_4 %34 = OpLoad %9 
                                        f32_4 %35 = OpFAdd %33 %34 
                                                      OpStore %9 %35 
                               Uniform f32_4* %37 = OpAccessChain %21 %23 %36 
                                        f32_4 %38 = OpLoad %37 
                                        f32_4 %39 = OpLoad %11 
                                        f32_4 %40 = OpVectorShuffle %39 %39 2 2 2 2 
                                        f32_4 %41 = OpFMul %38 %40 
                                        f32_4 %42 = OpLoad %9 
                                        f32_4 %43 = OpFAdd %41 %42 
                                                      OpStore %9 %43 
                                        f32_4 %45 = OpLoad %9 
                               Uniform f32_4* %47 = OpAccessChain %21 %23 %46 
                                        f32_4 %48 = OpLoad %47 
                                        f32_4 %49 = OpFAdd %45 %48 
                                                      OpStore %44 %49 
                               Uniform f32_4* %53 = OpAccessChain %21 %23 %46 
                                        f32_4 %54 = OpLoad %53 
                                        f32_3 %55 = OpVectorShuffle %54 %54 0 1 2 
                                        f32_4 %56 = OpLoad %11 
                                        f32_3 %57 = OpVectorShuffle %56 %56 3 3 3 
                                        f32_3 %58 = OpFMul %55 %57 
                                        f32_4 %59 = OpLoad %9 
                                        f32_3 %60 = OpVectorShuffle %59 %59 0 1 2 
                                        f32_3 %61 = OpFAdd %58 %60 
                                                      OpStore vs_TEXCOORD2 %61 
                                        f32_4 %62 = OpLoad %44 
                                        f32_4 %63 = OpVectorShuffle %62 %62 1 1 1 1 
                               Uniform f32_4* %64 = OpAccessChain %21 %36 %24 
                                        f32_4 %65 = OpLoad %64 
                                        f32_4 %66 = OpFMul %63 %65 
                                                      OpStore %9 %66 
                               Uniform f32_4* %67 = OpAccessChain %21 %36 %23 
                                        f32_4 %68 = OpLoad %67 
                                        f32_4 %69 = OpLoad %44 
                                        f32_4 %70 = OpVectorShuffle %69 %69 0 0 0 0 
                                        f32_4 %71 = OpFMul %68 %70 
                                        f32_4 %72 = OpLoad %9 
                                        f32_4 %73 = OpFAdd %71 %72 
                                                      OpStore %9 %73 
                               Uniform f32_4* %74 = OpAccessChain %21 %36 %36 
                                        f32_4 %75 = OpLoad %74 
                                        f32_4 %76 = OpLoad %44 
                                        f32_4 %77 = OpVectorShuffle %76 %76 2 2 2 2 
                                        f32_4 %78 = OpFMul %75 %77 
                                        f32_4 %79 = OpLoad %9 
                                        f32_4 %80 = OpFAdd %78 %79 
                                                      OpStore %9 %80 
                               Uniform f32_4* %86 = OpAccessChain %21 %36 %46 
                                        f32_4 %87 = OpLoad %86 
                                        f32_4 %88 = OpLoad %44 
                                        f32_4 %89 = OpVectorShuffle %88 %88 3 3 3 3 
                                        f32_4 %90 = OpFMul %87 %89 
                                        f32_4 %91 = OpLoad %9 
                                        f32_4 %92 = OpFAdd %90 %91 
                                Output f32_4* %94 = OpAccessChain %85 %23 
                                                      OpStore %94 %92 
                                        f32_4 %97 = OpLoad %95 
                                        f32_2 %98 = OpVectorShuffle %97 %97 0 1 
                               Uniform f32_4* %99 = OpAccessChain %21 %46 
                                       f32_4 %100 = OpLoad %99 
                                       f32_2 %101 = OpVectorShuffle %100 %100 0 1 
                                       f32_2 %102 = OpFMul %98 %101 
                              Uniform f32_4* %103 = OpAccessChain %21 %46 
                                       f32_4 %104 = OpLoad %103 
                                       f32_2 %105 = OpVectorShuffle %104 %104 2 3 
                                       f32_2 %106 = OpFAdd %102 %105 
                                       f32_4 %107 = OpLoad %9 
                                       f32_4 %108 = OpVectorShuffle %107 %106 4 5 2 3 
                                                      OpStore %9 %108 
                                       f32_4 %111 = OpLoad %9 
                                       f32_2 %112 = OpVectorShuffle %111 %111 0 1 
                                                      OpStore vs_TEXCOORD0 %112 
                                       f32_3 %115 = OpLoad %114 
                              Uniform f32_4* %116 = OpAccessChain %21 %24 %23 
                                       f32_4 %117 = OpLoad %116 
                                       f32_3 %118 = OpVectorShuffle %117 %117 0 1 2 
                                         f32 %119 = OpDot %115 %118 
                                Private f32* %122 = OpAccessChain %9 %120 
                                                      OpStore %122 %119 
                                       f32_3 %123 = OpLoad %114 
                              Uniform f32_4* %124 = OpAccessChain %21 %24 %24 
                                       f32_4 %125 = OpLoad %124 
                                       f32_3 %126 = OpVectorShuffle %125 %125 0 1 2 
                                         f32 %127 = OpDot %123 %126 
                                Private f32* %128 = OpAccessChain %9 %81 
                                                      OpStore %128 %127 
                                       f32_3 %129 = OpLoad %114 
                              Uniform f32_4* %130 = OpAccessChain %21 %24 %36 
                                       f32_4 %131 = OpLoad %130 
                                       f32_3 %132 = OpVectorShuffle %131 %131 0 1 2 
                                         f32 %133 = OpDot %129 %132 
                                Private f32* %135 = OpAccessChain %9 %134 
                                                      OpStore %135 %133 
                                       f32_4 %137 = OpLoad %9 
                                       f32_3 %138 = OpVectorShuffle %137 %137 0 1 2 
                                       f32_4 %139 = OpLoad %9 
                                       f32_3 %140 = OpVectorShuffle %139 %139 0 1 2 
                                         f32 %141 = OpDot %138 %140 
                                                      OpStore %136 %141 
                                         f32 %142 = OpLoad %136 
                                         f32 %143 = OpExtInst %1 32 %142 
                                                      OpStore %136 %143 
                                         f32 %145 = OpLoad %136 
                                       f32_3 %146 = OpCompositeConstruct %145 %145 %145 
                                       f32_4 %147 = OpLoad %9 
                                       f32_3 %148 = OpVectorShuffle %147 %147 0 1 2 
                                       f32_3 %149 = OpFMul %146 %148 
                                                      OpStore vs_TEXCOORD1 %149 
                                                      OpStore vs_TEXCOORD5 %152 
                                                      OpStore vs_TEXCOORD6 %152 
                                 Output f32* %155 = OpAccessChain %85 %23 %81 
                                         f32 %156 = OpLoad %155 
                                         f32 %157 = OpFNegate %156 
                                 Output f32* %158 = OpAccessChain %85 %23 %81 
                                                      OpStore %158 %157 
                                                      OpReturn
                                                      OpFunctionEnd
; SPIR-V
; Version: 1.0
; Generator: Khronos Glslang Reference Front End; 6
; Bound: 340
; Schema: 0
                                                      OpCapability Shader 
                                               %1 = OpExtInstImport "GLSL.std.450" 
                                                      OpMemoryModel Logical GLSL450 
                                                      OpEntryPoint Fragment %4 "main" %11 %183 %309 %320 
                                                      OpExecutionMode %4 OriginUpperLeft 
                                                      OpName vs_TEXCOORD2 "vs_TEXCOORD2" 
                                                      OpName vs_TEXCOORD1 "vs_TEXCOORD1" 
                                                      OpName vs_TEXCOORD0 "vs_TEXCOORD0" 
                                                      OpDecorate vs_TEXCOORD2 Location 11 
                                                      OpDecorate %16 ArrayStride 16 
                                                      OpDecorate %18 ArrayStride 18 
                                                      OpMemberDecorate %19 0 Offset 19 
                                                      OpMemberDecorate %19 1 RelaxedPrecision 
                                                      OpMemberDecorate %19 1 Offset 19 
                                                      OpMemberDecorate %19 2 Offset 19 
                                                      OpMemberDecorate %19 3 RelaxedPrecision 
                                                      OpMemberDecorate %19 3 Offset 19 
                                                      OpMemberDecorate %19 4 Offset 19 
                                                      OpMemberDecorate %19 5 Offset 19 
                                                      OpMemberDecorate %19 6 RelaxedPrecision 
                                                      OpMemberDecorate %19 6 Offset 19 
                                                      OpMemberDecorate %19 7 RelaxedPrecision 
                                                      OpMemberDecorate %19 7 Offset 19 
                                                      OpMemberDecorate %19 8 RelaxedPrecision 
                                                      OpMemberDecorate %19 8 Offset 19 
                                                      OpMemberDecorate %19 9 RelaxedPrecision 
                                                      OpMemberDecorate %19 9 Offset 19 
                                                      OpMemberDecorate %19 10 RelaxedPrecision 
                                                      OpMemberDecorate %19 10 Offset 19 
                                                      OpMemberDecorate %19 11 RelaxedPrecision 
                                                      OpMemberDecorate %19 11 Offset 19 
                                                      OpDecorate %19 Block 
                                                      OpDecorate %21 DescriptorSet 21 
                                                      OpDecorate %21 Binding 21 
                                                      OpDecorate %89 RelaxedPrecision 
                                                      OpDecorate %92 RelaxedPrecision 
                                                      OpDecorate %140 DescriptorSet 140 
                                                      OpDecorate %140 Binding 140 
                                                      OpDecorate %144 DescriptorSet 144 
                                                      OpDecorate %144 Binding 144 
                                                      OpDecorate %153 RelaxedPrecision 
                                                      OpDecorate %155 RelaxedPrecision 
                                                      OpDecorate %156 RelaxedPrecision 
                                                      OpDecorate %157 RelaxedPrecision 
                                                      OpDecorate %162 RelaxedPrecision 
                                                      OpDecorate %165 RelaxedPrecision 
                                                      OpDecorate %168 RelaxedPrecision 
                                                      OpDecorate %170 RelaxedPrecision 
                                                      OpDecorate %171 RelaxedPrecision 
                                                      OpDecorate %172 RelaxedPrecision 
                                                      OpDecorate %177 RelaxedPrecision 
                                                      OpDecorate %180 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD1 Location 183 
                                                      OpDecorate %189 RelaxedPrecision 
                                                      OpDecorate %190 RelaxedPrecision 
                                                      OpDecorate %192 RelaxedPrecision 
                                                      OpDecorate %193 RelaxedPrecision 
                                                      OpDecorate %196 RelaxedPrecision 
                                                      OpDecorate %198 RelaxedPrecision 
                                                      OpDecorate %199 RelaxedPrecision 
                                                      OpDecorate %200 RelaxedPrecision 
                                                      OpDecorate %203 RelaxedPrecision 
                                                      OpDecorate %204 RelaxedPrecision 
                                                      OpDecorate %206 RelaxedPrecision 
                                                      OpDecorate %209 RelaxedPrecision 
                                                      OpDecorate %210 RelaxedPrecision 
                                                      OpDecorate %212 RelaxedPrecision 
                                                      OpDecorate %215 RelaxedPrecision 
                                                      OpDecorate %216 RelaxedPrecision 
                                                      OpDecorate %217 RelaxedPrecision 
                                                      OpDecorate %218 RelaxedPrecision 
                                                      OpDecorate %220 RelaxedPrecision 
                                                      OpDecorate %221 RelaxedPrecision 
                                                      OpDecorate %223 RelaxedPrecision 
                                                      OpDecorate %225 RelaxedPrecision 
                                                      OpDecorate %226 RelaxedPrecision 
                                                      OpDecorate %228 RelaxedPrecision 
                                                      OpDecorate %229 RelaxedPrecision 
                                                      OpDecorate %230 RelaxedPrecision 
                                                      OpDecorate %231 RelaxedPrecision 
                                                      OpDecorate %232 RelaxedPrecision 
                                                      OpDecorate %233 RelaxedPrecision 
                                                      OpDecorate %234 RelaxedPrecision 
                                                      OpDecorate %235 RelaxedPrecision 
                                                      OpDecorate %236 RelaxedPrecision 
                                                      OpDecorate %238 RelaxedPrecision 
                                                      OpDecorate %239 RelaxedPrecision 
                                                      OpDecorate %242 RelaxedPrecision 
                                                      OpDecorate %243 RelaxedPrecision 
                                                      OpDecorate %246 RelaxedPrecision 
                                                      OpDecorate %248 RelaxedPrecision 
                                                      OpDecorate %250 RelaxedPrecision 
                                                      OpDecorate %252 RelaxedPrecision 
                                                      OpDecorate %254 RelaxedPrecision 
                                                      OpDecorate %255 RelaxedPrecision 
                                                      OpDecorate %258 RelaxedPrecision 
                                                      OpDecorate %259 RelaxedPrecision 
                                                      OpDecorate %260 RelaxedPrecision 
                                                      OpDecorate %263 RelaxedPrecision 
                                                      OpDecorate %265 RelaxedPrecision 
                                                      OpDecorate %266 RelaxedPrecision 
                                                      OpDecorate %270 RelaxedPrecision 
                                                      OpDecorate %271 RelaxedPrecision 
                                                      OpDecorate %272 RelaxedPrecision 
                                                      OpDecorate %275 RelaxedPrecision 
                                                      OpDecorate %276 RelaxedPrecision 
                                                      OpDecorate %277 RelaxedPrecision 
                                                      OpDecorate %279 RelaxedPrecision 
                                                      OpDecorate %280 RelaxedPrecision 
                                                      OpDecorate %281 RelaxedPrecision 
                                                      OpDecorate %282 RelaxedPrecision 
                                                      OpDecorate %284 RelaxedPrecision 
                                                      OpDecorate %285 RelaxedPrecision 
                                                      OpDecorate %286 RelaxedPrecision 
                                                      OpDecorate %287 RelaxedPrecision 
                                                      OpDecorate %288 RelaxedPrecision 
                                                      OpDecorate %289 RelaxedPrecision 
                                                      OpDecorate %291 RelaxedPrecision 
                                                      OpDecorate %292 RelaxedPrecision 
                                                      OpDecorate %293 RelaxedPrecision 
                                                      OpDecorate %294 RelaxedPrecision 
                                                      OpDecorate %295 RelaxedPrecision 
                                                      OpDecorate %296 RelaxedPrecision 
                                                      OpDecorate %297 RelaxedPrecision 
                                                      OpDecorate %298 RelaxedPrecision 
                                                      OpDecorate %299 RelaxedPrecision 
                                                      OpDecorate %301 RelaxedPrecision 
                                                      OpDecorate %302 RelaxedPrecision 
                                                      OpDecorate %302 DescriptorSet 302 
                                                      OpDecorate %302 Binding 302 
                                                      OpDecorate %303 RelaxedPrecision 
                                                      OpDecorate %304 RelaxedPrecision 
                                                      OpDecorate %304 DescriptorSet 304 
                                                      OpDecorate %304 Binding 304 
                                                      OpDecorate %305 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD0 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD0 Location 309 
                                                      OpDecorate %310 RelaxedPrecision 
                                                      OpDecorate %311 RelaxedPrecision 
                                                      OpDecorate %312 RelaxedPrecision 
                                                      OpDecorate %313 RelaxedPrecision 
                                                      OpDecorate %316 RelaxedPrecision 
                                                      OpDecorate %317 RelaxedPrecision 
                                                      OpDecorate %318 RelaxedPrecision 
                                                      OpDecorate %320 RelaxedPrecision 
                                                      OpDecorate %320 Location 320 
                                                      OpDecorate %322 RelaxedPrecision 
                                                      OpDecorate %324 RelaxedPrecision 
                                                      OpDecorate %325 RelaxedPrecision 
                                                      OpDecorate %328 RelaxedPrecision 
                                                      OpDecorate %331 RelaxedPrecision 
                                                      OpDecorate %332 RelaxedPrecision 
                                                      OpDecorate %333 RelaxedPrecision 
                                                      OpDecorate %334 RelaxedPrecision 
                                                      OpDecorate %335 RelaxedPrecision 
                                                      OpDecorate %336 RelaxedPrecision 
                                               %2 = OpTypeVoid 
                                               %3 = OpTypeFunction %2 
                                               %6 = OpTypeFloat 32 
                                               %7 = OpTypeVector %6 3 
                                               %8 = OpTypePointer Private %7 
                                Private f32_3* %9 = OpVariable Private 
                                              %10 = OpTypePointer Input %7 
                        Input f32_3* vs_TEXCOORD2 = OpVariable Input 
                                              %13 = OpTypeVector %6 4 
                                              %14 = OpTypeInt 32 0 
                                          u32 %15 = OpConstant 16 
                                              %16 = OpTypeArray %13 %15 
                                          u32 %17 = OpConstant 4 
                                              %18 = OpTypeArray %13 %17 
                                              %19 = OpTypeStruct %7 %13 %16 %13 %13 %18 %13 %13 %13 %13 %6 %6 
                                              %20 = OpTypePointer Uniform %19 
Uniform struct {f32_3; f32_4; f32_4[16]; f32_4; f32_4; f32_4[4]; f32_4; f32_4; f32_4; f32_4; f32; f32;}* %21 = OpVariable Uniform 
                                              %22 = OpTypeInt 32 1 
                                          i32 %23 = OpConstant 4 
                                              %24 = OpTypePointer Uniform %13 
                                          u32 %33 = OpConstant 0 
                                              %34 = OpTypePointer Private %6 
                               Private f32_3* %40 = OpVariable Private 
                                          i32 %43 = OpConstant 0 
                                              %44 = OpTypePointer Uniform %7 
                               Private f32_3* %48 = OpVariable Private 
                                          i32 %49 = OpConstant 5 
                                          u32 %50 = OpConstant 2 
                                              %51 = OpTypePointer Uniform %6 
                                          i32 %55 = OpConstant 1 
                                          u32 %58 = OpConstant 1 
                                          i32 %60 = OpConstant 2 
                                          u32 %75 = OpConstant 3 
                                          i32 %87 = OpConstant 3 
                                          f32 %97 = OpConstant 3.674022E-40 
                                          f32 %98 = OpConstant 3.674022E-40 
                                             %128 = OpTypePointer Function %7 
                                             %130 = OpTypeVector %6 2 
                                             %138 = OpTypeImage %6 Dim2D 0 0 0 1 Unknown 
                                             %139 = OpTypePointer UniformConstant %138 
        UniformConstant read_only Texture2D* %140 = OpVariable UniformConstant 
                                             %142 = OpTypeSampler 
                                             %143 = OpTypePointer UniformConstant %142 
                    UniformConstant sampler* %144 = OpVariable UniformConstant 
                                             %146 = OpTypeImage %6 Dim2D 1 0 0 1 Unknown 
                                             %147 = OpTypeSampledImage %146 
                              Private f32_3* %153 = OpVariable Private 
                              Private f32_3* %168 = OpVariable Private 
                        Input f32_3* vs_TEXCOORD1 = OpVariable Input 
                                Private f32* %206 = OpVariable Private 
                                         i32 %207 = OpConstant 11 
                                         f32 %211 = OpConstant 3.674022E-40 
                                         i32 %213 = OpConstant 10 
                                Private f32* %223 = OpVariable Private 
                                         f32 %247 = OpConstant 3.674022E-40 
                                         f32 %249 = OpConstant 3.674022E-40 
                                         i32 %268 = OpConstant 8 
                                         i32 %273 = OpConstant 9 
                              Private f32_3* %287 = OpVariable Private 
                                             %300 = OpTypePointer Private %13 
                              Private f32_4* %301 = OpVariable Private 
        UniformConstant read_only Texture2D* %302 = OpVariable UniformConstant 
                    UniformConstant sampler* %304 = OpVariable UniformConstant 
                                             %306 = OpTypeSampledImage %138 
                                             %308 = OpTypePointer Input %130 
                        Input f32_2* vs_TEXCOORD0 = OpVariable Input 
                                         i32 %314 = OpConstant 7 
                                             %319 = OpTypePointer Output %13 
                               Output f32_4* %320 = OpVariable Output 
                                             %326 = OpTypePointer Output %6 
                                         i32 %329 = OpConstant 6 
                                          void %4 = OpFunction None %3 
                                               %5 = OpLabel 
                             Function f32_3* %129 = OpVariable Function 
                                        f32_3 %12 = OpLoad vs_TEXCOORD2 
                               Uniform f32_4* %25 = OpAccessChain %21 %23 
                                        f32_4 %26 = OpLoad %25 
                                        f32_3 %27 = OpVectorShuffle %26 %26 0 1 2 
                                        f32_3 %28 = OpFNegate %27 
                                        f32_3 %29 = OpFAdd %12 %28 
                                                      OpStore %9 %29 
                                        f32_3 %30 = OpLoad %9 
                                        f32_3 %31 = OpLoad %9 
                                          f32 %32 = OpDot %30 %31 
                                 Private f32* %35 = OpAccessChain %9 %33 
                                                      OpStore %35 %32 
                                 Private f32* %36 = OpAccessChain %9 %33 
                                          f32 %37 = OpLoad %36 
                                          f32 %38 = OpExtInst %1 31 %37 
                                 Private f32* %39 = OpAccessChain %9 %33 
                                                      OpStore %39 %38 
                                        f32_3 %41 = OpLoad vs_TEXCOORD2 
                                        f32_3 %42 = OpFNegate %41 
                               Uniform f32_3* %45 = OpAccessChain %21 %43 
                                        f32_3 %46 = OpLoad %45 
                                        f32_3 %47 = OpFAdd %42 %46 
                                                      OpStore %40 %47 
                                 Uniform f32* %52 = OpAccessChain %21 %49 %43 %50 
                                          f32 %53 = OpLoad %52 
                                 Private f32* %54 = OpAccessChain %48 %33 
                                                      OpStore %54 %53 
                                 Uniform f32* %56 = OpAccessChain %21 %49 %55 %50 
                                          f32 %57 = OpLoad %56 
                                 Private f32* %59 = OpAccessChain %48 %58 
                                                      OpStore %59 %57 
                                 Uniform f32* %61 = OpAccessChain %21 %49 %60 %50 
                                          f32 %62 = OpLoad %61 
                                 Private f32* %63 = OpAccessChain %48 %50 
                                                      OpStore %63 %62 
                                        f32_3 %64 = OpLoad %40 
                                        f32_3 %65 = OpLoad %48 
                                          f32 %66 = OpDot %64 %65 
                                 Private f32* %67 = OpAccessChain %40 %33 
                                                      OpStore %67 %66 
                                 Private f32* %68 = OpAccessChain %40 %33 
                                          f32 %69 = OpLoad %68 
                                          f32 %70 = OpFNegate %69 
                                 Private f32* %71 = OpAccessChain %9 %33 
                                          f32 %72 = OpLoad %71 
                                          f32 %73 = OpFAdd %70 %72 
                                 Private f32* %74 = OpAccessChain %9 %33 
                                                      OpStore %74 %73 
                                 Uniform f32* %76 = OpAccessChain %21 %23 %75 
                                          f32 %77 = OpLoad %76 
                                 Private f32* %78 = OpAccessChain %9 %33 
                                          f32 %79 = OpLoad %78 
                                          f32 %80 = OpFMul %77 %79 
                                 Private f32* %81 = OpAccessChain %40 %33 
                                          f32 %82 = OpLoad %81 
                                          f32 %83 = OpFAdd %80 %82 
                                 Private f32* %84 = OpAccessChain %9 %33 
                                                      OpStore %84 %83 
                                 Private f32* %85 = OpAccessChain %9 %33 
                                          f32 %86 = OpLoad %85 
                                 Uniform f32* %88 = OpAccessChain %21 %87 %50 
                                          f32 %89 = OpLoad %88 
                                          f32 %90 = OpFMul %86 %89 
                                 Uniform f32* %91 = OpAccessChain %21 %87 %75 
                                          f32 %92 = OpLoad %91 
                                          f32 %93 = OpFAdd %90 %92 
                                 Private f32* %94 = OpAccessChain %9 %33 
                                                      OpStore %94 %93 
                                 Private f32* %95 = OpAccessChain %9 %33 
                                          f32 %96 = OpLoad %95 
                                          f32 %99 = OpExtInst %1 43 %96 %97 %98 
                                Private f32* %100 = OpAccessChain %9 %33 
                                                      OpStore %100 %99 
                                       f32_3 %101 = OpLoad vs_TEXCOORD2 
                                       f32_3 %102 = OpVectorShuffle %101 %101 1 1 1 
                              Uniform f32_4* %103 = OpAccessChain %21 %60 %55 
                                       f32_4 %104 = OpLoad %103 
                                       f32_3 %105 = OpVectorShuffle %104 %104 0 1 2 
                                       f32_3 %106 = OpFMul %102 %105 
                                                      OpStore %40 %106 
                              Uniform f32_4* %107 = OpAccessChain %21 %60 %43 
                                       f32_4 %108 = OpLoad %107 
                                       f32_3 %109 = OpVectorShuffle %108 %108 0 1 2 
                                       f32_3 %110 = OpLoad vs_TEXCOORD2 
                                       f32_3 %111 = OpVectorShuffle %110 %110 0 0 0 
                                       f32_3 %112 = OpFMul %109 %111 
                                       f32_3 %113 = OpLoad %40 
                                       f32_3 %114 = OpFAdd %112 %113 
                                                      OpStore %40 %114 
                              Uniform f32_4* %115 = OpAccessChain %21 %60 %60 
                                       f32_4 %116 = OpLoad %115 
                                       f32_3 %117 = OpVectorShuffle %116 %116 0 1 2 
                                       f32_3 %118 = OpLoad vs_TEXCOORD2 
                                       f32_3 %119 = OpVectorShuffle %118 %118 2 2 2 
                                       f32_3 %120 = OpFMul %117 %119 
                                       f32_3 %121 = OpLoad %40 
                                       f32_3 %122 = OpFAdd %120 %121 
                                                      OpStore %40 %122 
                                       f32_3 %123 = OpLoad %40 
                              Uniform f32_4* %124 = OpAccessChain %21 %60 %87 
                                       f32_4 %125 = OpLoad %124 
                                       f32_3 %126 = OpVectorShuffle %125 %125 0 1 2 
                                       f32_3 %127 = OpFAdd %123 %126 
                                                      OpStore %40 %127 
                                       f32_3 %131 = OpLoad %40 
                                       f32_2 %132 = OpVectorShuffle %131 %131 0 1 
                                Private f32* %133 = OpAccessChain %40 %50 
                                         f32 %134 = OpLoad %133 
                                         f32 %135 = OpCompositeExtract %132 0 
                                         f32 %136 = OpCompositeExtract %132 1 
                                       f32_3 %137 = OpCompositeConstruct %135 %136 %134 
                                                      OpStore %129 %137 
                         read_only Texture2D %141 = OpLoad %140 
                                     sampler %145 = OpLoad %144 
                  read_only Texture2DSampled %148 = OpSampledImage %141 %145 
                                       f32_3 %149 = OpLoad %129 
                                         f32 %150 = OpCompositeExtract %149 2 
                                         f32 %151 = OpImageSampleDrefExplicitLod %148 %149 %150 Lod %6 
                                Private f32* %152 = OpAccessChain %40 %33 
                                                      OpStore %152 %151 
                                Uniform f32* %154 = OpAccessChain %21 %87 %33 
                                         f32 %155 = OpLoad %154 
                                         f32 %156 = OpFNegate %155 
                                         f32 %157 = OpFAdd %156 %98 
                                Private f32* %158 = OpAccessChain %153 %33 
                                                      OpStore %158 %157 
                                Private f32* %159 = OpAccessChain %40 %33 
                                         f32 %160 = OpLoad %159 
                                Private f32* %161 = OpAccessChain %153 %33 
                                         f32 %162 = OpLoad %161 
                                         f32 %163 = OpFMul %160 %162 
                                Uniform f32* %164 = OpAccessChain %21 %87 %33 
                                         f32 %165 = OpLoad %164 
                                         f32 %166 = OpFAdd %163 %165 
                                Private f32* %167 = OpAccessChain %153 %33 
                                                      OpStore %167 %166 
                                Private f32* %169 = OpAccessChain %153 %33 
                                         f32 %170 = OpLoad %169 
                                         f32 %171 = OpFNegate %170 
                                         f32 %172 = OpFAdd %171 %98 
                                Private f32* %173 = OpAccessChain %168 %33 
                                                      OpStore %173 %172 
                                Private f32* %174 = OpAccessChain %9 %33 
                                         f32 %175 = OpLoad %174 
                                Private f32* %176 = OpAccessChain %168 %33 
                                         f32 %177 = OpLoad %176 
                                         f32 %178 = OpFMul %175 %177 
                                Private f32* %179 = OpAccessChain %153 %33 
                                         f32 %180 = OpLoad %179 
                                         f32 %181 = OpFAdd %178 %180 
                                Private f32* %182 = OpAccessChain %153 %33 
                                                      OpStore %182 %181 
                                       f32_3 %184 = OpLoad vs_TEXCOORD1 
                                       f32_3 %185 = OpLoad vs_TEXCOORD1 
                                         f32 %186 = OpDot %184 %185 
                                Private f32* %187 = OpAccessChain %168 %33 
                                                      OpStore %187 %186 
                                Private f32* %188 = OpAccessChain %168 %33 
                                         f32 %189 = OpLoad %188 
                                         f32 %190 = OpExtInst %1 32 %189 
                                Private f32* %191 = OpAccessChain %168 %33 
                                                      OpStore %191 %190 
                                       f32_3 %192 = OpLoad %168 
                                       f32_3 %193 = OpVectorShuffle %192 %192 0 0 0 
                                       f32_3 %194 = OpLoad vs_TEXCOORD1 
                                       f32_3 %195 = OpFMul %193 %194 
                                                      OpStore %168 %195 
                                       f32_3 %196 = OpLoad %168 
                              Uniform f32_4* %197 = OpAccessChain %21 %55 
                                       f32_4 %198 = OpLoad %197 
                                       f32_3 %199 = OpVectorShuffle %198 %198 0 1 2 
                                         f32 %200 = OpDot %196 %199 
                                Private f32* %201 = OpAccessChain %168 %33 
                                                      OpStore %201 %200 
                                Private f32* %202 = OpAccessChain %168 %33 
                                         f32 %203 = OpLoad %202 
                                         f32 %204 = OpExtInst %1 40 %203 %97 
                                Private f32* %205 = OpAccessChain %168 %33 
                                                      OpStore %205 %204 
                                Uniform f32* %208 = OpAccessChain %21 %207 
                                         f32 %209 = OpLoad %208 
                                         f32 %210 = OpFNegate %209 
                                         f32 %212 = OpFMul %210 %211 
                                Uniform f32* %214 = OpAccessChain %21 %213 
                                         f32 %215 = OpLoad %214 
                                         f32 %216 = OpFAdd %212 %215 
                                                      OpStore %206 %216 
                                         f32 %217 = OpLoad %206 
                                         f32 %218 = OpFNegate %217 
                                Private f32* %219 = OpAccessChain %168 %33 
                                         f32 %220 = OpLoad %219 
                                         f32 %221 = OpFAdd %218 %220 
                                Private f32* %222 = OpAccessChain %168 %33 
                                                      OpStore %222 %221 
                                Uniform f32* %224 = OpAccessChain %21 %207 
                                         f32 %225 = OpLoad %224 
                                         f32 %226 = OpFMul %225 %211 
                                Uniform f32* %227 = OpAccessChain %21 %213 
                                         f32 %228 = OpLoad %227 
                                         f32 %229 = OpFAdd %226 %228 
                                                      OpStore %223 %229 
                                         f32 %230 = OpLoad %206 
                                         f32 %231 = OpFNegate %230 
                                         f32 %232 = OpLoad %223 
                                         f32 %233 = OpFAdd %231 %232 
                                                      OpStore %206 %233 
                                         f32 %234 = OpLoad %206 
                                         f32 %235 = OpFDiv %98 %234 
                                                      OpStore %206 %235 
                                         f32 %236 = OpLoad %206 
                                Private f32* %237 = OpAccessChain %168 %33 
                                         f32 %238 = OpLoad %237 
                                         f32 %239 = OpFMul %236 %238 
                                Private f32* %240 = OpAccessChain %168 %33 
                                                      OpStore %240 %239 
                                Private f32* %241 = OpAccessChain %168 %33 
                                         f32 %242 = OpLoad %241 
                                         f32 %243 = OpExtInst %1 43 %242 %97 %98 
                                Private f32* %244 = OpAccessChain %168 %33 
                                                      OpStore %244 %243 
                                Private f32* %245 = OpAccessChain %168 %33 
                                         f32 %246 = OpLoad %245 
                                         f32 %248 = OpFMul %246 %247 
                                         f32 %250 = OpFAdd %248 %249 
                                                      OpStore %206 %250 
                                Private f32* %251 = OpAccessChain %168 %33 
                                         f32 %252 = OpLoad %251 
                                Private f32* %253 = OpAccessChain %168 %33 
                                         f32 %254 = OpLoad %253 
                                         f32 %255 = OpFMul %252 %254 
                                Private f32* %256 = OpAccessChain %168 %33 
                                                      OpStore %256 %255 
                                Private f32* %257 = OpAccessChain %168 %33 
                                         f32 %258 = OpLoad %257 
                                         f32 %259 = OpLoad %206 
                                         f32 %260 = OpFMul %258 %259 
                                Private f32* %261 = OpAccessChain %168 %33 
                                                      OpStore %261 %260 
                                Private f32* %262 = OpAccessChain %153 %33 
                                         f32 %263 = OpLoad %262 
                                Private f32* %264 = OpAccessChain %168 %33 
                                         f32 %265 = OpLoad %264 
                                         f32 %266 = OpFMul %263 %265 
                                Private f32* %267 = OpAccessChain %153 %33 
                                                      OpStore %267 %266 
                              Uniform f32_4* %269 = OpAccessChain %21 %268 
                                       f32_4 %270 = OpLoad %269 
                                       f32_3 %271 = OpVectorShuffle %270 %270 0 1 2 
                                       f32_3 %272 = OpFNegate %271 
                              Uniform f32_4* %274 = OpAccessChain %21 %273 
                                       f32_4 %275 = OpLoad %274 
                                       f32_3 %276 = OpVectorShuffle %275 %275 0 1 2 
                                       f32_3 %277 = OpFAdd %272 %276 
                                                      OpStore %168 %277 
                              Uniform f32_4* %278 = OpAccessChain %21 %273 
                                       f32_4 %279 = OpLoad %278 
                                       f32_3 %280 = OpVectorShuffle %279 %279 3 3 3 
                                       f32_3 %281 = OpLoad %168 
                                       f32_3 %282 = OpFMul %280 %281 
                              Uniform f32_4* %283 = OpAccessChain %21 %268 
                                       f32_4 %284 = OpLoad %283 
                                       f32_3 %285 = OpVectorShuffle %284 %284 0 1 2 
                                       f32_3 %286 = OpFAdd %282 %285 
                                                      OpStore %168 %286 
                                       f32_3 %288 = OpLoad %168 
                                       f32_3 %289 = OpFNegate %288 
                              Uniform f32_4* %290 = OpAccessChain %21 %268 
                                       f32_4 %291 = OpLoad %290 
                                       f32_3 %292 = OpVectorShuffle %291 %291 0 1 2 
                                       f32_3 %293 = OpFAdd %289 %292 
                                                      OpStore %287 %293 
                                       f32_3 %294 = OpLoad %153 
                                       f32_3 %295 = OpVectorShuffle %294 %294 0 0 0 
                                       f32_3 %296 = OpLoad %287 
                                       f32_3 %297 = OpFMul %295 %296 
                                       f32_3 %298 = OpLoad %168 
                                       f32_3 %299 = OpFAdd %297 %298 
                                                      OpStore %153 %299 
                         read_only Texture2D %303 = OpLoad %302 
                                     sampler %305 = OpLoad %304 
                  read_only Texture2DSampled %307 = OpSampledImage %303 %305 
                                       f32_2 %310 = OpLoad vs_TEXCOORD0 
                                       f32_4 %311 = OpImageSampleImplicitLod %307 %310 
                                                      OpStore %301 %311 
                                       f32_4 %312 = OpLoad %301 
                                       f32_3 %313 = OpVectorShuffle %312 %312 0 1 2 
                              Uniform f32_4* %315 = OpAccessChain %21 %314 
                                       f32_4 %316 = OpLoad %315 
                                       f32_3 %317 = OpVectorShuffle %316 %316 0 1 2 
                                       f32_3 %318 = OpFMul %313 %317 
                                                      OpStore %287 %318 
                                Private f32* %321 = OpAccessChain %301 %75 
                                         f32 %322 = OpLoad %321 
                                Uniform f32* %323 = OpAccessChain %21 %314 %75 
                                         f32 %324 = OpLoad %323 
                                         f32 %325 = OpFMul %322 %324 
                                 Output f32* %327 = OpAccessChain %320 %75 
                                                      OpStore %327 %325 
                                       f32_3 %328 = OpLoad %287 
                              Uniform f32_4* %330 = OpAccessChain %21 %329 
                                       f32_4 %331 = OpLoad %330 
                                       f32_3 %332 = OpVectorShuffle %331 %331 0 1 2 
                                       f32_3 %333 = OpFMul %328 %332 
                                                      OpStore %287 %333 
                                       f32_3 %334 = OpLoad %153 
                                       f32_3 %335 = OpLoad %287 
                                       f32_3 %336 = OpFMul %334 %335 
                                       f32_4 %337 = OpLoad %320 
                                       f32_4 %338 = OpVectorShuffle %337 %336 4 5 6 3 
                                                      OpStore %320 %338 
                                                      OpReturn
                                                      OpFunctionEnd
"
}
SubProgram "vulkan hw_tier02 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" }
"; SPIR-V
; Version: 1.0
; Generator: Khronos Glslang Reference Front End; 6
; Bound: 160
; Schema: 0
                                                      OpCapability Shader 
                                               %1 = OpExtInstImport "GLSL.std.450" 
                                                      OpMemoryModel Logical GLSL450 
                                                      OpEntryPoint Vertex %4 "main" %11 %52 %85 %95 %110 %114 %144 %150 %153 
                                                      OpName vs_TEXCOORD2 "vs_TEXCOORD2" 
                                                      OpName vs_TEXCOORD0 "vs_TEXCOORD0" 
                                                      OpName vs_TEXCOORD1 "vs_TEXCOORD1" 
                                                      OpName vs_TEXCOORD5 "vs_TEXCOORD5" 
                                                      OpName vs_TEXCOORD6 "vs_TEXCOORD6" 
                                                      OpDecorate %11 Location 11 
                                                      OpDecorate %16 ArrayStride 16 
                                                      OpDecorate %17 ArrayStride 17 
                                                      OpDecorate %18 ArrayStride 18 
                                                      OpMemberDecorate %19 0 Offset 19 
                                                      OpMemberDecorate %19 1 Offset 19 
                                                      OpMemberDecorate %19 2 Offset 19 
                                                      OpMemberDecorate %19 3 Offset 19 
                                                      OpDecorate %19 Block 
                                                      OpDecorate %21 DescriptorSet 21 
                                                      OpDecorate %21 Binding 21 
                                                      OpDecorate vs_TEXCOORD2 Location 52 
                                                      OpMemberDecorate %83 0 BuiltIn 83 
                                                      OpMemberDecorate %83 1 BuiltIn 83 
                                                      OpMemberDecorate %83 2 BuiltIn 83 
                                                      OpDecorate %83 Block 
                                                      OpDecorate %95 Location 95 
                                                      OpDecorate vs_TEXCOORD0 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD0 Location 110 
                                                      OpDecorate %114 Location 114 
                                                      OpDecorate vs_TEXCOORD1 Location 144 
                                                      OpDecorate vs_TEXCOORD5 Location 150 
                                                      OpDecorate vs_TEXCOORD6 Location 153 
                                               %2 = OpTypeVoid 
                                               %3 = OpTypeFunction %2 
                                               %6 = OpTypeFloat 32 
                                               %7 = OpTypeVector %6 4 
                                               %8 = OpTypePointer Private %7 
                                Private f32_4* %9 = OpVariable Private 
                                              %10 = OpTypePointer Input %7 
                                 Input f32_4* %11 = OpVariable Input 
                                              %14 = OpTypeInt 32 0 
                                          u32 %15 = OpConstant 4 
                                              %16 = OpTypeArray %7 %15 
                                              %17 = OpTypeArray %7 %15 
                                              %18 = OpTypeArray %7 %15 
                                              %19 = OpTypeStruct %16 %17 %18 %7 
                                              %20 = OpTypePointer Uniform %19 
Uniform struct {f32_4[4]; f32_4[4]; f32_4[4]; f32_4;}* %21 = OpVariable Uniform 
                                              %22 = OpTypeInt 32 1 
                                          i32 %23 = OpConstant 0 
                                          i32 %24 = OpConstant 1 
                                              %25 = OpTypePointer Uniform %7 
                                          i32 %36 = OpConstant 2 
                               Private f32_4* %44 = OpVariable Private 
                                          i32 %46 = OpConstant 3 
                                              %50 = OpTypeVector %6 3 
                                              %51 = OpTypePointer Output %50 
                       Output f32_3* vs_TEXCOORD2 = OpVariable Output 
                                          u32 %81 = OpConstant 1 
                                              %82 = OpTypeArray %6 %81 
                                              %83 = OpTypeStruct %7 %6 %82 
                                              %84 = OpTypePointer Output %83 
         Output struct {f32_4; f32; f32[1];}* %85 = OpVariable Output 
                                              %93 = OpTypePointer Output %7 
                                 Input f32_4* %95 = OpVariable Input 
                                              %96 = OpTypeVector %6 2 
                                             %109 = OpTypePointer Output %96 
                       Output f32_2* vs_TEXCOORD0 = OpVariable Output 
                                             %113 = OpTypePointer Input %50 
                                Input f32_3* %114 = OpVariable Input 
                                         u32 %120 = OpConstant 0 
                                             %121 = OpTypePointer Private %6 
                                         u32 %134 = OpConstant 2 
                                Private f32* %136 = OpVariable Private 
                       Output f32_3* vs_TEXCOORD1 = OpVariable Output 
                       Output f32_4* vs_TEXCOORD5 = OpVariable Output 
                                         f32 %151 = OpConstant 3.674022E-40 
                                       f32_4 %152 = OpConstantComposite %151 %151 %151 %151 
                       Output f32_4* vs_TEXCOORD6 = OpVariable Output 
                                             %154 = OpTypePointer Output %6 
                                          void %4 = OpFunction None %3 
                                               %5 = OpLabel 
                                        f32_4 %12 = OpLoad %11 
                                        f32_4 %13 = OpVectorShuffle %12 %12 1 1 1 1 
                               Uniform f32_4* %26 = OpAccessChain %21 %23 %24 
                                        f32_4 %27 = OpLoad %26 
                                        f32_4 %28 = OpFMul %13 %27 
                                                      OpStore %9 %28 
                               Uniform f32_4* %29 = OpAccessChain %21 %23 %23 
                                        f32_4 %30 = OpLoad %29 
                                        f32_4 %31 = OpLoad %11 
                                        f32_4 %32 = OpVectorShuffle %31 %31 0 0 0 0 
                                        f32_4 %33 = OpFMul %30 %32 
                                        f32_4 %34 = OpLoad %9 
                                        f32_4 %35 = OpFAdd %33 %34 
                                                      OpStore %9 %35 
                               Uniform f32_4* %37 = OpAccessChain %21 %23 %36 
                                        f32_4 %38 = OpLoad %37 
                                        f32_4 %39 = OpLoad %11 
                                        f32_4 %40 = OpVectorShuffle %39 %39 2 2 2 2 
                                        f32_4 %41 = OpFMul %38 %40 
                                        f32_4 %42 = OpLoad %9 
                                        f32_4 %43 = OpFAdd %41 %42 
                                                      OpStore %9 %43 
                                        f32_4 %45 = OpLoad %9 
                               Uniform f32_4* %47 = OpAccessChain %21 %23 %46 
                                        f32_4 %48 = OpLoad %47 
                                        f32_4 %49 = OpFAdd %45 %48 
                                                      OpStore %44 %49 
                               Uniform f32_4* %53 = OpAccessChain %21 %23 %46 
                                        f32_4 %54 = OpLoad %53 
                                        f32_3 %55 = OpVectorShuffle %54 %54 0 1 2 
                                        f32_4 %56 = OpLoad %11 
                                        f32_3 %57 = OpVectorShuffle %56 %56 3 3 3 
                                        f32_3 %58 = OpFMul %55 %57 
                                        f32_4 %59 = OpLoad %9 
                                        f32_3 %60 = OpVectorShuffle %59 %59 0 1 2 
                                        f32_3 %61 = OpFAdd %58 %60 
                                                      OpStore vs_TEXCOORD2 %61 
                                        f32_4 %62 = OpLoad %44 
                                        f32_4 %63 = OpVectorShuffle %62 %62 1 1 1 1 
                               Uniform f32_4* %64 = OpAccessChain %21 %36 %24 
                                        f32_4 %65 = OpLoad %64 
                                        f32_4 %66 = OpFMul %63 %65 
                                                      OpStore %9 %66 
                               Uniform f32_4* %67 = OpAccessChain %21 %36 %23 
                                        f32_4 %68 = OpLoad %67 
                                        f32_4 %69 = OpLoad %44 
                                        f32_4 %70 = OpVectorShuffle %69 %69 0 0 0 0 
                                        f32_4 %71 = OpFMul %68 %70 
                                        f32_4 %72 = OpLoad %9 
                                        f32_4 %73 = OpFAdd %71 %72 
                                                      OpStore %9 %73 
                               Uniform f32_4* %74 = OpAccessChain %21 %36 %36 
                                        f32_4 %75 = OpLoad %74 
                                        f32_4 %76 = OpLoad %44 
                                        f32_4 %77 = OpVectorShuffle %76 %76 2 2 2 2 
                                        f32_4 %78 = OpFMul %75 %77 
                                        f32_4 %79 = OpLoad %9 
                                        f32_4 %80 = OpFAdd %78 %79 
                                                      OpStore %9 %80 
                               Uniform f32_4* %86 = OpAccessChain %21 %36 %46 
                                        f32_4 %87 = OpLoad %86 
                                        f32_4 %88 = OpLoad %44 
                                        f32_4 %89 = OpVectorShuffle %88 %88 3 3 3 3 
                                        f32_4 %90 = OpFMul %87 %89 
                                        f32_4 %91 = OpLoad %9 
                                        f32_4 %92 = OpFAdd %90 %91 
                                Output f32_4* %94 = OpAccessChain %85 %23 
                                                      OpStore %94 %92 
                                        f32_4 %97 = OpLoad %95 
                                        f32_2 %98 = OpVectorShuffle %97 %97 0 1 
                               Uniform f32_4* %99 = OpAccessChain %21 %46 
                                       f32_4 %100 = OpLoad %99 
                                       f32_2 %101 = OpVectorShuffle %100 %100 0 1 
                                       f32_2 %102 = OpFMul %98 %101 
                              Uniform f32_4* %103 = OpAccessChain %21 %46 
                                       f32_4 %104 = OpLoad %103 
                                       f32_2 %105 = OpVectorShuffle %104 %104 2 3 
                                       f32_2 %106 = OpFAdd %102 %105 
                                       f32_4 %107 = OpLoad %9 
                                       f32_4 %108 = OpVectorShuffle %107 %106 4 5 2 3 
                                                      OpStore %9 %108 
                                       f32_4 %111 = OpLoad %9 
                                       f32_2 %112 = OpVectorShuffle %111 %111 0 1 
                                                      OpStore vs_TEXCOORD0 %112 
                                       f32_3 %115 = OpLoad %114 
                              Uniform f32_4* %116 = OpAccessChain %21 %24 %23 
                                       f32_4 %117 = OpLoad %116 
                                       f32_3 %118 = OpVectorShuffle %117 %117 0 1 2 
                                         f32 %119 = OpDot %115 %118 
                                Private f32* %122 = OpAccessChain %9 %120 
                                                      OpStore %122 %119 
                                       f32_3 %123 = OpLoad %114 
                              Uniform f32_4* %124 = OpAccessChain %21 %24 %24 
                                       f32_4 %125 = OpLoad %124 
                                       f32_3 %126 = OpVectorShuffle %125 %125 0 1 2 
                                         f32 %127 = OpDot %123 %126 
                                Private f32* %128 = OpAccessChain %9 %81 
                                                      OpStore %128 %127 
                                       f32_3 %129 = OpLoad %114 
                              Uniform f32_4* %130 = OpAccessChain %21 %24 %36 
                                       f32_4 %131 = OpLoad %130 
                                       f32_3 %132 = OpVectorShuffle %131 %131 0 1 2 
                                         f32 %133 = OpDot %129 %132 
                                Private f32* %135 = OpAccessChain %9 %134 
                                                      OpStore %135 %133 
                                       f32_4 %137 = OpLoad %9 
                                       f32_3 %138 = OpVectorShuffle %137 %137 0 1 2 
                                       f32_4 %139 = OpLoad %9 
                                       f32_3 %140 = OpVectorShuffle %139 %139 0 1 2 
                                         f32 %141 = OpDot %138 %140 
                                                      OpStore %136 %141 
                                         f32 %142 = OpLoad %136 
                                         f32 %143 = OpExtInst %1 32 %142 
                                                      OpStore %136 %143 
                                         f32 %145 = OpLoad %136 
                                       f32_3 %146 = OpCompositeConstruct %145 %145 %145 
                                       f32_4 %147 = OpLoad %9 
                                       f32_3 %148 = OpVectorShuffle %147 %147 0 1 2 
                                       f32_3 %149 = OpFMul %146 %148 
                                                      OpStore vs_TEXCOORD1 %149 
                                                      OpStore vs_TEXCOORD5 %152 
                                                      OpStore vs_TEXCOORD6 %152 
                                 Output f32* %155 = OpAccessChain %85 %23 %81 
                                         f32 %156 = OpLoad %155 
                                         f32 %157 = OpFNegate %156 
                                 Output f32* %158 = OpAccessChain %85 %23 %81 
                                                      OpStore %158 %157 
                                                      OpReturn
                                                      OpFunctionEnd
; SPIR-V
; Version: 1.0
; Generator: Khronos Glslang Reference Front End; 6
; Bound: 340
; Schema: 0
                                                      OpCapability Shader 
                                               %1 = OpExtInstImport "GLSL.std.450" 
                                                      OpMemoryModel Logical GLSL450 
                                                      OpEntryPoint Fragment %4 "main" %11 %183 %309 %320 
                                                      OpExecutionMode %4 OriginUpperLeft 
                                                      OpName vs_TEXCOORD2 "vs_TEXCOORD2" 
                                                      OpName vs_TEXCOORD1 "vs_TEXCOORD1" 
                                                      OpName vs_TEXCOORD0 "vs_TEXCOORD0" 
                                                      OpDecorate vs_TEXCOORD2 Location 11 
                                                      OpDecorate %16 ArrayStride 16 
                                                      OpDecorate %18 ArrayStride 18 
                                                      OpMemberDecorate %19 0 Offset 19 
                                                      OpMemberDecorate %19 1 RelaxedPrecision 
                                                      OpMemberDecorate %19 1 Offset 19 
                                                      OpMemberDecorate %19 2 Offset 19 
                                                      OpMemberDecorate %19 3 RelaxedPrecision 
                                                      OpMemberDecorate %19 3 Offset 19 
                                                      OpMemberDecorate %19 4 Offset 19 
                                                      OpMemberDecorate %19 5 Offset 19 
                                                      OpMemberDecorate %19 6 RelaxedPrecision 
                                                      OpMemberDecorate %19 6 Offset 19 
                                                      OpMemberDecorate %19 7 RelaxedPrecision 
                                                      OpMemberDecorate %19 7 Offset 19 
                                                      OpMemberDecorate %19 8 RelaxedPrecision 
                                                      OpMemberDecorate %19 8 Offset 19 
                                                      OpMemberDecorate %19 9 RelaxedPrecision 
                                                      OpMemberDecorate %19 9 Offset 19 
                                                      OpMemberDecorate %19 10 RelaxedPrecision 
                                                      OpMemberDecorate %19 10 Offset 19 
                                                      OpMemberDecorate %19 11 RelaxedPrecision 
                                                      OpMemberDecorate %19 11 Offset 19 
                                                      OpDecorate %19 Block 
                                                      OpDecorate %21 DescriptorSet 21 
                                                      OpDecorate %21 Binding 21 
                                                      OpDecorate %89 RelaxedPrecision 
                                                      OpDecorate %92 RelaxedPrecision 
                                                      OpDecorate %140 DescriptorSet 140 
                                                      OpDecorate %140 Binding 140 
                                                      OpDecorate %144 DescriptorSet 144 
                                                      OpDecorate %144 Binding 144 
                                                      OpDecorate %153 RelaxedPrecision 
                                                      OpDecorate %155 RelaxedPrecision 
                                                      OpDecorate %156 RelaxedPrecision 
                                                      OpDecorate %157 RelaxedPrecision 
                                                      OpDecorate %162 RelaxedPrecision 
                                                      OpDecorate %165 RelaxedPrecision 
                                                      OpDecorate %168 RelaxedPrecision 
                                                      OpDecorate %170 RelaxedPrecision 
                                                      OpDecorate %171 RelaxedPrecision 
                                                      OpDecorate %172 RelaxedPrecision 
                                                      OpDecorate %177 RelaxedPrecision 
                                                      OpDecorate %180 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD1 Location 183 
                                                      OpDecorate %189 RelaxedPrecision 
                                                      OpDecorate %190 RelaxedPrecision 
                                                      OpDecorate %192 RelaxedPrecision 
                                                      OpDecorate %193 RelaxedPrecision 
                                                      OpDecorate %196 RelaxedPrecision 
                                                      OpDecorate %198 RelaxedPrecision 
                                                      OpDecorate %199 RelaxedPrecision 
                                                      OpDecorate %200 RelaxedPrecision 
                                                      OpDecorate %203 RelaxedPrecision 
                                                      OpDecorate %204 RelaxedPrecision 
                                                      OpDecorate %206 RelaxedPrecision 
                                                      OpDecorate %209 RelaxedPrecision 
                                                      OpDecorate %210 RelaxedPrecision 
                                                      OpDecorate %212 RelaxedPrecision 
                                                      OpDecorate %215 RelaxedPrecision 
                                                      OpDecorate %216 RelaxedPrecision 
                                                      OpDecorate %217 RelaxedPrecision 
                                                      OpDecorate %218 RelaxedPrecision 
                                                      OpDecorate %220 RelaxedPrecision 
                                                      OpDecorate %221 RelaxedPrecision 
                                                      OpDecorate %223 RelaxedPrecision 
                                                      OpDecorate %225 RelaxedPrecision 
                                                      OpDecorate %226 RelaxedPrecision 
                                                      OpDecorate %228 RelaxedPrecision 
                                                      OpDecorate %229 RelaxedPrecision 
                                                      OpDecorate %230 RelaxedPrecision 
                                                      OpDecorate %231 RelaxedPrecision 
                                                      OpDecorate %232 RelaxedPrecision 
                                                      OpDecorate %233 RelaxedPrecision 
                                                      OpDecorate %234 RelaxedPrecision 
                                                      OpDecorate %235 RelaxedPrecision 
                                                      OpDecorate %236 RelaxedPrecision 
                                                      OpDecorate %238 RelaxedPrecision 
                                                      OpDecorate %239 RelaxedPrecision 
                                                      OpDecorate %242 RelaxedPrecision 
                                                      OpDecorate %243 RelaxedPrecision 
                                                      OpDecorate %246 RelaxedPrecision 
                                                      OpDecorate %248 RelaxedPrecision 
                                                      OpDecorate %250 RelaxedPrecision 
                                                      OpDecorate %252 RelaxedPrecision 
                                                      OpDecorate %254 RelaxedPrecision 
                                                      OpDecorate %255 RelaxedPrecision 
                                                      OpDecorate %258 RelaxedPrecision 
                                                      OpDecorate %259 RelaxedPrecision 
                                                      OpDecorate %260 RelaxedPrecision 
                                                      OpDecorate %263 RelaxedPrecision 
                                                      OpDecorate %265 RelaxedPrecision 
                                                      OpDecorate %266 RelaxedPrecision 
                                                      OpDecorate %270 RelaxedPrecision 
                                                      OpDecorate %271 RelaxedPrecision 
                                                      OpDecorate %272 RelaxedPrecision 
                                                      OpDecorate %275 RelaxedPrecision 
                                                      OpDecorate %276 RelaxedPrecision 
                                                      OpDecorate %277 RelaxedPrecision 
                                                      OpDecorate %279 RelaxedPrecision 
                                                      OpDecorate %280 RelaxedPrecision 
                                                      OpDecorate %281 RelaxedPrecision 
                                                      OpDecorate %282 RelaxedPrecision 
                                                      OpDecorate %284 RelaxedPrecision 
                                                      OpDecorate %285 RelaxedPrecision 
                                                      OpDecorate %286 RelaxedPrecision 
                                                      OpDecorate %287 RelaxedPrecision 
                                                      OpDecorate %288 RelaxedPrecision 
                                                      OpDecorate %289 RelaxedPrecision 
                                                      OpDecorate %291 RelaxedPrecision 
                                                      OpDecorate %292 RelaxedPrecision 
                                                      OpDecorate %293 RelaxedPrecision 
                                                      OpDecorate %294 RelaxedPrecision 
                                                      OpDecorate %295 RelaxedPrecision 
                                                      OpDecorate %296 RelaxedPrecision 
                                                      OpDecorate %297 RelaxedPrecision 
                                                      OpDecorate %298 RelaxedPrecision 
                                                      OpDecorate %299 RelaxedPrecision 
                                                      OpDecorate %301 RelaxedPrecision 
                                                      OpDecorate %302 RelaxedPrecision 
                                                      OpDecorate %302 DescriptorSet 302 
                                                      OpDecorate %302 Binding 302 
                                                      OpDecorate %303 RelaxedPrecision 
                                                      OpDecorate %304 RelaxedPrecision 
                                                      OpDecorate %304 DescriptorSet 304 
                                                      OpDecorate %304 Binding 304 
                                                      OpDecorate %305 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD0 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD0 Location 309 
                                                      OpDecorate %310 RelaxedPrecision 
                                                      OpDecorate %311 RelaxedPrecision 
                                                      OpDecorate %312 RelaxedPrecision 
                                                      OpDecorate %313 RelaxedPrecision 
                                                      OpDecorate %316 RelaxedPrecision 
                                                      OpDecorate %317 RelaxedPrecision 
                                                      OpDecorate %318 RelaxedPrecision 
                                                      OpDecorate %320 RelaxedPrecision 
                                                      OpDecorate %320 Location 320 
                                                      OpDecorate %322 RelaxedPrecision 
                                                      OpDecorate %324 RelaxedPrecision 
                                                      OpDecorate %325 RelaxedPrecision 
                                                      OpDecorate %328 RelaxedPrecision 
                                                      OpDecorate %331 RelaxedPrecision 
                                                      OpDecorate %332 RelaxedPrecision 
                                                      OpDecorate %333 RelaxedPrecision 
                                                      OpDecorate %334 RelaxedPrecision 
                                                      OpDecorate %335 RelaxedPrecision 
                                                      OpDecorate %336 RelaxedPrecision 
                                               %2 = OpTypeVoid 
                                               %3 = OpTypeFunction %2 
                                               %6 = OpTypeFloat 32 
                                               %7 = OpTypeVector %6 3 
                                               %8 = OpTypePointer Private %7 
                                Private f32_3* %9 = OpVariable Private 
                                              %10 = OpTypePointer Input %7 
                        Input f32_3* vs_TEXCOORD2 = OpVariable Input 
                                              %13 = OpTypeVector %6 4 
                                              %14 = OpTypeInt 32 0 
                                          u32 %15 = OpConstant 16 
                                              %16 = OpTypeArray %13 %15 
                                          u32 %17 = OpConstant 4 
                                              %18 = OpTypeArray %13 %17 
                                              %19 = OpTypeStruct %7 %13 %16 %13 %13 %18 %13 %13 %13 %13 %6 %6 
                                              %20 = OpTypePointer Uniform %19 
Uniform struct {f32_3; f32_4; f32_4[16]; f32_4; f32_4; f32_4[4]; f32_4; f32_4; f32_4; f32_4; f32; f32;}* %21 = OpVariable Uniform 
                                              %22 = OpTypeInt 32 1 
                                          i32 %23 = OpConstant 4 
                                              %24 = OpTypePointer Uniform %13 
                                          u32 %33 = OpConstant 0 
                                              %34 = OpTypePointer Private %6 
                               Private f32_3* %40 = OpVariable Private 
                                          i32 %43 = OpConstant 0 
                                              %44 = OpTypePointer Uniform %7 
                               Private f32_3* %48 = OpVariable Private 
                                          i32 %49 = OpConstant 5 
                                          u32 %50 = OpConstant 2 
                                              %51 = OpTypePointer Uniform %6 
                                          i32 %55 = OpConstant 1 
                                          u32 %58 = OpConstant 1 
                                          i32 %60 = OpConstant 2 
                                          u32 %75 = OpConstant 3 
                                          i32 %87 = OpConstant 3 
                                          f32 %97 = OpConstant 3.674022E-40 
                                          f32 %98 = OpConstant 3.674022E-40 
                                             %128 = OpTypePointer Function %7 
                                             %130 = OpTypeVector %6 2 
                                             %138 = OpTypeImage %6 Dim2D 0 0 0 1 Unknown 
                                             %139 = OpTypePointer UniformConstant %138 
        UniformConstant read_only Texture2D* %140 = OpVariable UniformConstant 
                                             %142 = OpTypeSampler 
                                             %143 = OpTypePointer UniformConstant %142 
                    UniformConstant sampler* %144 = OpVariable UniformConstant 
                                             %146 = OpTypeImage %6 Dim2D 1 0 0 1 Unknown 
                                             %147 = OpTypeSampledImage %146 
                              Private f32_3* %153 = OpVariable Private 
                              Private f32_3* %168 = OpVariable Private 
                        Input f32_3* vs_TEXCOORD1 = OpVariable Input 
                                Private f32* %206 = OpVariable Private 
                                         i32 %207 = OpConstant 11 
                                         f32 %211 = OpConstant 3.674022E-40 
                                         i32 %213 = OpConstant 10 
                                Private f32* %223 = OpVariable Private 
                                         f32 %247 = OpConstant 3.674022E-40 
                                         f32 %249 = OpConstant 3.674022E-40 
                                         i32 %268 = OpConstant 8 
                                         i32 %273 = OpConstant 9 
                              Private f32_3* %287 = OpVariable Private 
                                             %300 = OpTypePointer Private %13 
                              Private f32_4* %301 = OpVariable Private 
        UniformConstant read_only Texture2D* %302 = OpVariable UniformConstant 
                    UniformConstant sampler* %304 = OpVariable UniformConstant 
                                             %306 = OpTypeSampledImage %138 
                                             %308 = OpTypePointer Input %130 
                        Input f32_2* vs_TEXCOORD0 = OpVariable Input 
                                         i32 %314 = OpConstant 7 
                                             %319 = OpTypePointer Output %13 
                               Output f32_4* %320 = OpVariable Output 
                                             %326 = OpTypePointer Output %6 
                                         i32 %329 = OpConstant 6 
                                          void %4 = OpFunction None %3 
                                               %5 = OpLabel 
                             Function f32_3* %129 = OpVariable Function 
                                        f32_3 %12 = OpLoad vs_TEXCOORD2 
                               Uniform f32_4* %25 = OpAccessChain %21 %23 
                                        f32_4 %26 = OpLoad %25 
                                        f32_3 %27 = OpVectorShuffle %26 %26 0 1 2 
                                        f32_3 %28 = OpFNegate %27 
                                        f32_3 %29 = OpFAdd %12 %28 
                                                      OpStore %9 %29 
                                        f32_3 %30 = OpLoad %9 
                                        f32_3 %31 = OpLoad %9 
                                          f32 %32 = OpDot %30 %31 
                                 Private f32* %35 = OpAccessChain %9 %33 
                                                      OpStore %35 %32 
                                 Private f32* %36 = OpAccessChain %9 %33 
                                          f32 %37 = OpLoad %36 
                                          f32 %38 = OpExtInst %1 31 %37 
                                 Private f32* %39 = OpAccessChain %9 %33 
                                                      OpStore %39 %38 
                                        f32_3 %41 = OpLoad vs_TEXCOORD2 
                                        f32_3 %42 = OpFNegate %41 
                               Uniform f32_3* %45 = OpAccessChain %21 %43 
                                        f32_3 %46 = OpLoad %45 
                                        f32_3 %47 = OpFAdd %42 %46 
                                                      OpStore %40 %47 
                                 Uniform f32* %52 = OpAccessChain %21 %49 %43 %50 
                                          f32 %53 = OpLoad %52 
                                 Private f32* %54 = OpAccessChain %48 %33 
                                                      OpStore %54 %53 
                                 Uniform f32* %56 = OpAccessChain %21 %49 %55 %50 
                                          f32 %57 = OpLoad %56 
                                 Private f32* %59 = OpAccessChain %48 %58 
                                                      OpStore %59 %57 
                                 Uniform f32* %61 = OpAccessChain %21 %49 %60 %50 
                                          f32 %62 = OpLoad %61 
                                 Private f32* %63 = OpAccessChain %48 %50 
                                                      OpStore %63 %62 
                                        f32_3 %64 = OpLoad %40 
                                        f32_3 %65 = OpLoad %48 
                                          f32 %66 = OpDot %64 %65 
                                 Private f32* %67 = OpAccessChain %40 %33 
                                                      OpStore %67 %66 
                                 Private f32* %68 = OpAccessChain %40 %33 
                                          f32 %69 = OpLoad %68 
                                          f32 %70 = OpFNegate %69 
                                 Private f32* %71 = OpAccessChain %9 %33 
                                          f32 %72 = OpLoad %71 
                                          f32 %73 = OpFAdd %70 %72 
                                 Private f32* %74 = OpAccessChain %9 %33 
                                                      OpStore %74 %73 
                                 Uniform f32* %76 = OpAccessChain %21 %23 %75 
                                          f32 %77 = OpLoad %76 
                                 Private f32* %78 = OpAccessChain %9 %33 
                                          f32 %79 = OpLoad %78 
                                          f32 %80 = OpFMul %77 %79 
                                 Private f32* %81 = OpAccessChain %40 %33 
                                          f32 %82 = OpLoad %81 
                                          f32 %83 = OpFAdd %80 %82 
                                 Private f32* %84 = OpAccessChain %9 %33 
                                                      OpStore %84 %83 
                                 Private f32* %85 = OpAccessChain %9 %33 
                                          f32 %86 = OpLoad %85 
                                 Uniform f32* %88 = OpAccessChain %21 %87 %50 
                                          f32 %89 = OpLoad %88 
                                          f32 %90 = OpFMul %86 %89 
                                 Uniform f32* %91 = OpAccessChain %21 %87 %75 
                                          f32 %92 = OpLoad %91 
                                          f32 %93 = OpFAdd %90 %92 
                                 Private f32* %94 = OpAccessChain %9 %33 
                                                      OpStore %94 %93 
                                 Private f32* %95 = OpAccessChain %9 %33 
                                          f32 %96 = OpLoad %95 
                                          f32 %99 = OpExtInst %1 43 %96 %97 %98 
                                Private f32* %100 = OpAccessChain %9 %33 
                                                      OpStore %100 %99 
                                       f32_3 %101 = OpLoad vs_TEXCOORD2 
                                       f32_3 %102 = OpVectorShuffle %101 %101 1 1 1 
                              Uniform f32_4* %103 = OpAccessChain %21 %60 %55 
                                       f32_4 %104 = OpLoad %103 
                                       f32_3 %105 = OpVectorShuffle %104 %104 0 1 2 
                                       f32_3 %106 = OpFMul %102 %105 
                                                      OpStore %40 %106 
                              Uniform f32_4* %107 = OpAccessChain %21 %60 %43 
                                       f32_4 %108 = OpLoad %107 
                                       f32_3 %109 = OpVectorShuffle %108 %108 0 1 2 
                                       f32_3 %110 = OpLoad vs_TEXCOORD2 
                                       f32_3 %111 = OpVectorShuffle %110 %110 0 0 0 
                                       f32_3 %112 = OpFMul %109 %111 
                                       f32_3 %113 = OpLoad %40 
                                       f32_3 %114 = OpFAdd %112 %113 
                                                      OpStore %40 %114 
                              Uniform f32_4* %115 = OpAccessChain %21 %60 %60 
                                       f32_4 %116 = OpLoad %115 
                                       f32_3 %117 = OpVectorShuffle %116 %116 0 1 2 
                                       f32_3 %118 = OpLoad vs_TEXCOORD2 
                                       f32_3 %119 = OpVectorShuffle %118 %118 2 2 2 
                                       f32_3 %120 = OpFMul %117 %119 
                                       f32_3 %121 = OpLoad %40 
                                       f32_3 %122 = OpFAdd %120 %121 
                                                      OpStore %40 %122 
                                       f32_3 %123 = OpLoad %40 
                              Uniform f32_4* %124 = OpAccessChain %21 %60 %87 
                                       f32_4 %125 = OpLoad %124 
                                       f32_3 %126 = OpVectorShuffle %125 %125 0 1 2 
                                       f32_3 %127 = OpFAdd %123 %126 
                                                      OpStore %40 %127 
                                       f32_3 %131 = OpLoad %40 
                                       f32_2 %132 = OpVectorShuffle %131 %131 0 1 
                                Private f32* %133 = OpAccessChain %40 %50 
                                         f32 %134 = OpLoad %133 
                                         f32 %135 = OpCompositeExtract %132 0 
                                         f32 %136 = OpCompositeExtract %132 1 
                                       f32_3 %137 = OpCompositeConstruct %135 %136 %134 
                                                      OpStore %129 %137 
                         read_only Texture2D %141 = OpLoad %140 
                                     sampler %145 = OpLoad %144 
                  read_only Texture2DSampled %148 = OpSampledImage %141 %145 
                                       f32_3 %149 = OpLoad %129 
                                         f32 %150 = OpCompositeExtract %149 2 
                                         f32 %151 = OpImageSampleDrefExplicitLod %148 %149 %150 Lod %6 
                                Private f32* %152 = OpAccessChain %40 %33 
                                                      OpStore %152 %151 
                                Uniform f32* %154 = OpAccessChain %21 %87 %33 
                                         f32 %155 = OpLoad %154 
                                         f32 %156 = OpFNegate %155 
                                         f32 %157 = OpFAdd %156 %98 
                                Private f32* %158 = OpAccessChain %153 %33 
                                                      OpStore %158 %157 
                                Private f32* %159 = OpAccessChain %40 %33 
                                         f32 %160 = OpLoad %159 
                                Private f32* %161 = OpAccessChain %153 %33 
                                         f32 %162 = OpLoad %161 
                                         f32 %163 = OpFMul %160 %162 
                                Uniform f32* %164 = OpAccessChain %21 %87 %33 
                                         f32 %165 = OpLoad %164 
                                         f32 %166 = OpFAdd %163 %165 
                                Private f32* %167 = OpAccessChain %153 %33 
                                                      OpStore %167 %166 
                                Private f32* %169 = OpAccessChain %153 %33 
                                         f32 %170 = OpLoad %169 
                                         f32 %171 = OpFNegate %170 
                                         f32 %172 = OpFAdd %171 %98 
                                Private f32* %173 = OpAccessChain %168 %33 
                                                      OpStore %173 %172 
                                Private f32* %174 = OpAccessChain %9 %33 
                                         f32 %175 = OpLoad %174 
                                Private f32* %176 = OpAccessChain %168 %33 
                                         f32 %177 = OpLoad %176 
                                         f32 %178 = OpFMul %175 %177 
                                Private f32* %179 = OpAccessChain %153 %33 
                                         f32 %180 = OpLoad %179 
                                         f32 %181 = OpFAdd %178 %180 
                                Private f32* %182 = OpAccessChain %153 %33 
                                                      OpStore %182 %181 
                                       f32_3 %184 = OpLoad vs_TEXCOORD1 
                                       f32_3 %185 = OpLoad vs_TEXCOORD1 
                                         f32 %186 = OpDot %184 %185 
                                Private f32* %187 = OpAccessChain %168 %33 
                                                      OpStore %187 %186 
                                Private f32* %188 = OpAccessChain %168 %33 
                                         f32 %189 = OpLoad %188 
                                         f32 %190 = OpExtInst %1 32 %189 
                                Private f32* %191 = OpAccessChain %168 %33 
                                                      OpStore %191 %190 
                                       f32_3 %192 = OpLoad %168 
                                       f32_3 %193 = OpVectorShuffle %192 %192 0 0 0 
                                       f32_3 %194 = OpLoad vs_TEXCOORD1 
                                       f32_3 %195 = OpFMul %193 %194 
                                                      OpStore %168 %195 
                                       f32_3 %196 = OpLoad %168 
                              Uniform f32_4* %197 = OpAccessChain %21 %55 
                                       f32_4 %198 = OpLoad %197 
                                       f32_3 %199 = OpVectorShuffle %198 %198 0 1 2 
                                         f32 %200 = OpDot %196 %199 
                                Private f32* %201 = OpAccessChain %168 %33 
                                                      OpStore %201 %200 
                                Private f32* %202 = OpAccessChain %168 %33 
                                         f32 %203 = OpLoad %202 
                                         f32 %204 = OpExtInst %1 40 %203 %97 
                                Private f32* %205 = OpAccessChain %168 %33 
                                                      OpStore %205 %204 
                                Uniform f32* %208 = OpAccessChain %21 %207 
                                         f32 %209 = OpLoad %208 
                                         f32 %210 = OpFNegate %209 
                                         f32 %212 = OpFMul %210 %211 
                                Uniform f32* %214 = OpAccessChain %21 %213 
                                         f32 %215 = OpLoad %214 
                                         f32 %216 = OpFAdd %212 %215 
                                                      OpStore %206 %216 
                                         f32 %217 = OpLoad %206 
                                         f32 %218 = OpFNegate %217 
                                Private f32* %219 = OpAccessChain %168 %33 
                                         f32 %220 = OpLoad %219 
                                         f32 %221 = OpFAdd %218 %220 
                                Private f32* %222 = OpAccessChain %168 %33 
                                                      OpStore %222 %221 
                                Uniform f32* %224 = OpAccessChain %21 %207 
                                         f32 %225 = OpLoad %224 
                                         f32 %226 = OpFMul %225 %211 
                                Uniform f32* %227 = OpAccessChain %21 %213 
                                         f32 %228 = OpLoad %227 
                                         f32 %229 = OpFAdd %226 %228 
                                                      OpStore %223 %229 
                                         f32 %230 = OpLoad %206 
                                         f32 %231 = OpFNegate %230 
                                         f32 %232 = OpLoad %223 
                                         f32 %233 = OpFAdd %231 %232 
                                                      OpStore %206 %233 
                                         f32 %234 = OpLoad %206 
                                         f32 %235 = OpFDiv %98 %234 
                                                      OpStore %206 %235 
                                         f32 %236 = OpLoad %206 
                                Private f32* %237 = OpAccessChain %168 %33 
                                         f32 %238 = OpLoad %237 
                                         f32 %239 = OpFMul %236 %238 
                                Private f32* %240 = OpAccessChain %168 %33 
                                                      OpStore %240 %239 
                                Private f32* %241 = OpAccessChain %168 %33 
                                         f32 %242 = OpLoad %241 
                                         f32 %243 = OpExtInst %1 43 %242 %97 %98 
                                Private f32* %244 = OpAccessChain %168 %33 
                                                      OpStore %244 %243 
                                Private f32* %245 = OpAccessChain %168 %33 
                                         f32 %246 = OpLoad %245 
                                         f32 %248 = OpFMul %246 %247 
                                         f32 %250 = OpFAdd %248 %249 
                                                      OpStore %206 %250 
                                Private f32* %251 = OpAccessChain %168 %33 
                                         f32 %252 = OpLoad %251 
                                Private f32* %253 = OpAccessChain %168 %33 
                                         f32 %254 = OpLoad %253 
                                         f32 %255 = OpFMul %252 %254 
                                Private f32* %256 = OpAccessChain %168 %33 
                                                      OpStore %256 %255 
                                Private f32* %257 = OpAccessChain %168 %33 
                                         f32 %258 = OpLoad %257 
                                         f32 %259 = OpLoad %206 
                                         f32 %260 = OpFMul %258 %259 
                                Private f32* %261 = OpAccessChain %168 %33 
                                                      OpStore %261 %260 
                                Private f32* %262 = OpAccessChain %153 %33 
                                         f32 %263 = OpLoad %262 
                                Private f32* %264 = OpAccessChain %168 %33 
                                         f32 %265 = OpLoad %264 
                                         f32 %266 = OpFMul %263 %265 
                                Private f32* %267 = OpAccessChain %153 %33 
                                                      OpStore %267 %266 
                              Uniform f32_4* %269 = OpAccessChain %21 %268 
                                       f32_4 %270 = OpLoad %269 
                                       f32_3 %271 = OpVectorShuffle %270 %270 0 1 2 
                                       f32_3 %272 = OpFNegate %271 
                              Uniform f32_4* %274 = OpAccessChain %21 %273 
                                       f32_4 %275 = OpLoad %274 
                                       f32_3 %276 = OpVectorShuffle %275 %275 0 1 2 
                                       f32_3 %277 = OpFAdd %272 %276 
                                                      OpStore %168 %277 
                              Uniform f32_4* %278 = OpAccessChain %21 %273 
                                       f32_4 %279 = OpLoad %278 
                                       f32_3 %280 = OpVectorShuffle %279 %279 3 3 3 
                                       f32_3 %281 = OpLoad %168 
                                       f32_3 %282 = OpFMul %280 %281 
                              Uniform f32_4* %283 = OpAccessChain %21 %268 
                                       f32_4 %284 = OpLoad %283 
                                       f32_3 %285 = OpVectorShuffle %284 %284 0 1 2 
                                       f32_3 %286 = OpFAdd %282 %285 
                                                      OpStore %168 %286 
                                       f32_3 %288 = OpLoad %168 
                                       f32_3 %289 = OpFNegate %288 
                              Uniform f32_4* %290 = OpAccessChain %21 %268 
                                       f32_4 %291 = OpLoad %290 
                                       f32_3 %292 = OpVectorShuffle %291 %291 0 1 2 
                                       f32_3 %293 = OpFAdd %289 %292 
                                                      OpStore %287 %293 
                                       f32_3 %294 = OpLoad %153 
                                       f32_3 %295 = OpVectorShuffle %294 %294 0 0 0 
                                       f32_3 %296 = OpLoad %287 
                                       f32_3 %297 = OpFMul %295 %296 
                                       f32_3 %298 = OpLoad %168 
                                       f32_3 %299 = OpFAdd %297 %298 
                                                      OpStore %153 %299 
                         read_only Texture2D %303 = OpLoad %302 
                                     sampler %305 = OpLoad %304 
                  read_only Texture2DSampled %307 = OpSampledImage %303 %305 
                                       f32_2 %310 = OpLoad vs_TEXCOORD0 
                                       f32_4 %311 = OpImageSampleImplicitLod %307 %310 
                                                      OpStore %301 %311 
                                       f32_4 %312 = OpLoad %301 
                                       f32_3 %313 = OpVectorShuffle %312 %312 0 1 2 
                              Uniform f32_4* %315 = OpAccessChain %21 %314 
                                       f32_4 %316 = OpLoad %315 
                                       f32_3 %317 = OpVectorShuffle %316 %316 0 1 2 
                                       f32_3 %318 = OpFMul %313 %317 
                                                      OpStore %287 %318 
                                Private f32* %321 = OpAccessChain %301 %75 
                                         f32 %322 = OpLoad %321 
                                Uniform f32* %323 = OpAccessChain %21 %314 %75 
                                         f32 %324 = OpLoad %323 
                                         f32 %325 = OpFMul %322 %324 
                                 Output f32* %327 = OpAccessChain %320 %75 
                                                      OpStore %327 %325 
                                       f32_3 %328 = OpLoad %287 
                              Uniform f32_4* %330 = OpAccessChain %21 %329 
                                       f32_4 %331 = OpLoad %330 
                                       f32_3 %332 = OpVectorShuffle %331 %331 0 1 2 
                                       f32_3 %333 = OpFMul %328 %332 
                                                      OpStore %287 %333 
                                       f32_3 %334 = OpLoad %153 
                                       f32_3 %335 = OpLoad %287 
                                       f32_3 %336 = OpFMul %334 %335 
                                       f32_4 %337 = OpLoad %320 
                                       f32_4 %338 = OpVectorShuffle %337 %336 4 5 6 3 
                                                      OpStore %320 %338 
                                                      OpReturn
                                                      OpFunctionEnd
"
}
SubProgram "gles3 hw_tier00 " {
Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "SHADOWS_SCREEN" }
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in highp vec3 in_NORMAL0;
in highp vec4 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out highp vec3 vs_TEXCOORD1;
out highp vec3 vs_TEXCOORD2;
out mediump vec3 vs_TEXCOORD3;
out highp vec4 vs_TEXCOORD5;
out highp vec4 vs_TEXCOORD6;
vec4 u_xlat0;
mediump vec4 u_xlat16_0;
vec4 u_xlat1;
mediump float u_xlat16_2;
mediump vec3 u_xlat16_3;
float u_xlat12;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    vs_TEXCOORD2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
    u_xlat0 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat0;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat0;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat0.xy;
    u_xlat0.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat12 = dot(u_xlat0.xyz, u_xlat0.xyz);
    u_xlat12 = inversesqrt(u_xlat12);
    u_xlat0.xyz = vec3(u_xlat12) * u_xlat0.xyz;
    vs_TEXCOORD1.xyz = u_xlat0.xyz;
    u_xlat16_2 = u_xlat0.y * u_xlat0.y;
    u_xlat16_2 = u_xlat0.x * u_xlat0.x + (-u_xlat16_2);
    u_xlat16_0 = u_xlat0.yzzx * u_xlat0.xyzz;
    u_xlat16_3.x = dot(unity_SHBr, u_xlat16_0);
    u_xlat16_3.y = dot(unity_SHBg, u_xlat16_0);
    u_xlat16_3.z = dot(unity_SHBb, u_xlat16_0);
    vs_TEXCOORD3.xyz = unity_SHC.xyz * vec3(u_xlat16_2) + u_xlat16_3.xyz;
    vs_TEXCOORD5 = vec4(0.0, 0.0, 0.0, 0.0);
    vs_TEXCOORD6 = vec4(0.0, 0.0, 0.0, 0.0);
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es
#ifdef GL_EXT_shader_texture_lod
#extension GL_EXT_shader_texture_lod : enable
#endif

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec3 _WorldSpaceCameraPos;
uniform 	mediump vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	vec4 hlslcc_mtx4x4unity_WorldToShadow[16];
uniform 	mediump vec4 _LightShadowData;
uniform 	vec4 unity_ShadowFadeCenterAndType;
uniform 	vec4 hlslcc_mtx4x4unity_MatrixV[4];
uniform 	mediump vec4 _LightColor0;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 _HColor;
uniform 	mediump vec4 _SColor;
uniform 	mediump float _RampThreshold;
uniform 	mediump float _RampSmooth;
UNITY_LOCATION(0) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(1) uniform highp sampler2D _ShadowMapTexture;
UNITY_LOCATION(2) uniform highp sampler2DShadow hlslcc_zcmp_ShadowMapTexture;
in mediump vec2 vs_TEXCOORD0;
in highp vec3 vs_TEXCOORD1;
in highp vec3 vs_TEXCOORD2;
in mediump vec3 vs_TEXCOORD3;
layout(location = 0) out mediump vec4 SV_Target0;
vec4 u_xlat0;
vec3 u_xlat1;
mediump vec4 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
mediump vec3 u_xlat16_4;
vec3 u_xlat5;
mediump vec3 u_xlat16_7;
mediump float u_xlat16_12;
mediump float u_xlat16_17;
void main()
{
    u_xlat0.xyz = vs_TEXCOORD2.xyz + (-unity_ShadowFadeCenterAndType.xyz);
    u_xlat0.x = dot(u_xlat0.xyz, u_xlat0.xyz);
    u_xlat0.x = sqrt(u_xlat0.x);
    u_xlat5.xyz = (-vs_TEXCOORD2.xyz) + _WorldSpaceCameraPos.xyz;
    u_xlat1.x = hlslcc_mtx4x4unity_MatrixV[0].z;
    u_xlat1.y = hlslcc_mtx4x4unity_MatrixV[1].z;
    u_xlat1.z = hlslcc_mtx4x4unity_MatrixV[2].z;
    u_xlat5.x = dot(u_xlat5.xyz, u_xlat1.xyz);
    u_xlat0.x = (-u_xlat5.x) + u_xlat0.x;
    u_xlat0.x = unity_ShadowFadeCenterAndType.w * u_xlat0.x + u_xlat5.x;
    u_xlat0.x = u_xlat0.x * _LightShadowData.z + _LightShadowData.w;
#ifdef UNITY_ADRENO_ES3
    u_xlat0.x = min(max(u_xlat0.x, 0.0), 1.0);
#else
    u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);
#endif
    u_xlat5.xyz = vs_TEXCOORD2.yyy * hlslcc_mtx4x4unity_WorldToShadow[1].xyz;
    u_xlat5.xyz = hlslcc_mtx4x4unity_WorldToShadow[0].xyz * vs_TEXCOORD2.xxx + u_xlat5.xyz;
    u_xlat5.xyz = hlslcc_mtx4x4unity_WorldToShadow[2].xyz * vs_TEXCOORD2.zzz + u_xlat5.xyz;
    u_xlat5.xyz = u_xlat5.xyz + hlslcc_mtx4x4unity_WorldToShadow[3].xyz;
    vec3 txVec0 = vec3(u_xlat5.xy,u_xlat5.z);
    u_xlat5.x = textureLod(hlslcc_zcmp_ShadowMapTexture, txVec0, 0.0);
    u_xlat16_2.x = (-_LightShadowData.x) + 1.0;
    u_xlat16_2.x = u_xlat5.x * u_xlat16_2.x + _LightShadowData.x;
    u_xlat16_7.x = (-u_xlat16_2.x) + 1.0;
    u_xlat16_2.x = u_xlat0.x * u_xlat16_7.x + u_xlat16_2.x;
    u_xlat16_7.x = dot(vs_TEXCOORD1.xyz, vs_TEXCOORD1.xyz);
    u_xlat16_7.x = inversesqrt(u_xlat16_7.x);
    u_xlat16_7.xyz = u_xlat16_7.xxx * vs_TEXCOORD1.xyz;
    u_xlat16_7.x = dot(u_xlat16_7.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat16_7.x = max(u_xlat16_7.x, 0.0);
    u_xlat16_12 = (-_RampSmooth) * 0.5 + _RampThreshold;
    u_xlat16_7.x = (-u_xlat16_12) + u_xlat16_7.x;
    u_xlat16_17 = _RampSmooth * 0.5 + _RampThreshold;
    u_xlat16_12 = (-u_xlat16_12) + u_xlat16_17;
    u_xlat16_12 = float(1.0) / u_xlat16_12;
    u_xlat16_7.x = u_xlat16_12 * u_xlat16_7.x;
#ifdef UNITY_ADRENO_ES3
    u_xlat16_7.x = min(max(u_xlat16_7.x, 0.0), 1.0);
#else
    u_xlat16_7.x = clamp(u_xlat16_7.x, 0.0, 1.0);
#endif
    u_xlat16_12 = u_xlat16_7.x * -2.0 + 3.0;
    u_xlat16_7.x = u_xlat16_7.x * u_xlat16_7.x;
    u_xlat16_7.x = u_xlat16_7.x * u_xlat16_12;
    u_xlat16_2.x = u_xlat16_2.x * u_xlat16_7.x;
    u_xlat16_7.xyz = (-_HColor.xyz) + _SColor.xyz;
    u_xlat16_7.xyz = _SColor.www * u_xlat16_7.xyz + _HColor.xyz;
    u_xlat16_3.xyz = (-u_xlat16_7.xyz) + _HColor.xyz;
    u_xlat16_2.xyz = u_xlat16_2.xxx * u_xlat16_3.xyz + u_xlat16_7.xyz;
    u_xlat0.xyz = vs_TEXCOORD1.xyz;
    u_xlat0.w = 1.0;
    u_xlat16_3.x = dot(unity_SHAr, u_xlat0);
    u_xlat16_3.y = dot(unity_SHAg, u_xlat0);
    u_xlat16_3.z = dot(unity_SHAb, u_xlat0);
    u_xlat16_3.xyz = u_xlat16_3.xyz + vs_TEXCOORD3.xyz;
    u_xlat16_3.xyz = max(u_xlat16_3.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat0.xyz = log2(u_xlat16_3.xyz);
    u_xlat0.xyz = u_xlat0.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
    u_xlat0.xyz = exp2(u_xlat0.xyz);
    u_xlat0.xyz = u_xlat0.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
    u_xlat0.xyz = max(u_xlat0.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat16_1 = texture(_MainTex, vs_TEXCOORD0.xy);
    u_xlat16_3.xyz = u_xlat16_1.xyz * _Color.xyz;
    SV_Target0.w = u_xlat16_1.w * _Color.w;
    u_xlat16_4.xyz = u_xlat0.xyz * u_xlat16_3.xyz;
    u_xlat16_3.xyz = u_xlat16_3.xyz * _LightColor0.xyz;
    SV_Target0.xyz = u_xlat16_3.xyz * u_xlat16_2.xyz + u_xlat16_4.xyz;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier01 " {
Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "SHADOWS_SCREEN" }
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in highp vec3 in_NORMAL0;
in highp vec4 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out highp vec3 vs_TEXCOORD1;
out highp vec3 vs_TEXCOORD2;
out mediump vec3 vs_TEXCOORD3;
out highp vec4 vs_TEXCOORD5;
out highp vec4 vs_TEXCOORD6;
vec4 u_xlat0;
mediump vec4 u_xlat16_0;
vec4 u_xlat1;
mediump float u_xlat16_2;
mediump vec3 u_xlat16_3;
float u_xlat12;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    vs_TEXCOORD2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
    u_xlat0 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat0;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat0;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat0.xy;
    u_xlat0.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat12 = dot(u_xlat0.xyz, u_xlat0.xyz);
    u_xlat12 = inversesqrt(u_xlat12);
    u_xlat0.xyz = vec3(u_xlat12) * u_xlat0.xyz;
    vs_TEXCOORD1.xyz = u_xlat0.xyz;
    u_xlat16_2 = u_xlat0.y * u_xlat0.y;
    u_xlat16_2 = u_xlat0.x * u_xlat0.x + (-u_xlat16_2);
    u_xlat16_0 = u_xlat0.yzzx * u_xlat0.xyzz;
    u_xlat16_3.x = dot(unity_SHBr, u_xlat16_0);
    u_xlat16_3.y = dot(unity_SHBg, u_xlat16_0);
    u_xlat16_3.z = dot(unity_SHBb, u_xlat16_0);
    vs_TEXCOORD3.xyz = unity_SHC.xyz * vec3(u_xlat16_2) + u_xlat16_3.xyz;
    vs_TEXCOORD5 = vec4(0.0, 0.0, 0.0, 0.0);
    vs_TEXCOORD6 = vec4(0.0, 0.0, 0.0, 0.0);
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es
#ifdef GL_EXT_shader_texture_lod
#extension GL_EXT_shader_texture_lod : enable
#endif

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec3 _WorldSpaceCameraPos;
uniform 	mediump vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	vec4 hlslcc_mtx4x4unity_WorldToShadow[16];
uniform 	mediump vec4 _LightShadowData;
uniform 	vec4 unity_ShadowFadeCenterAndType;
uniform 	vec4 hlslcc_mtx4x4unity_MatrixV[4];
uniform 	mediump vec4 _LightColor0;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 _HColor;
uniform 	mediump vec4 _SColor;
uniform 	mediump float _RampThreshold;
uniform 	mediump float _RampSmooth;
UNITY_LOCATION(0) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(1) uniform highp sampler2D _ShadowMapTexture;
UNITY_LOCATION(2) uniform highp sampler2DShadow hlslcc_zcmp_ShadowMapTexture;
in mediump vec2 vs_TEXCOORD0;
in highp vec3 vs_TEXCOORD1;
in highp vec3 vs_TEXCOORD2;
in mediump vec3 vs_TEXCOORD3;
layout(location = 0) out mediump vec4 SV_Target0;
vec4 u_xlat0;
vec3 u_xlat1;
mediump vec4 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
mediump vec3 u_xlat16_4;
vec3 u_xlat5;
mediump vec3 u_xlat16_7;
mediump float u_xlat16_12;
mediump float u_xlat16_17;
void main()
{
    u_xlat0.xyz = vs_TEXCOORD2.xyz + (-unity_ShadowFadeCenterAndType.xyz);
    u_xlat0.x = dot(u_xlat0.xyz, u_xlat0.xyz);
    u_xlat0.x = sqrt(u_xlat0.x);
    u_xlat5.xyz = (-vs_TEXCOORD2.xyz) + _WorldSpaceCameraPos.xyz;
    u_xlat1.x = hlslcc_mtx4x4unity_MatrixV[0].z;
    u_xlat1.y = hlslcc_mtx4x4unity_MatrixV[1].z;
    u_xlat1.z = hlslcc_mtx4x4unity_MatrixV[2].z;
    u_xlat5.x = dot(u_xlat5.xyz, u_xlat1.xyz);
    u_xlat0.x = (-u_xlat5.x) + u_xlat0.x;
    u_xlat0.x = unity_ShadowFadeCenterAndType.w * u_xlat0.x + u_xlat5.x;
    u_xlat0.x = u_xlat0.x * _LightShadowData.z + _LightShadowData.w;
#ifdef UNITY_ADRENO_ES3
    u_xlat0.x = min(max(u_xlat0.x, 0.0), 1.0);
#else
    u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);
#endif
    u_xlat5.xyz = vs_TEXCOORD2.yyy * hlslcc_mtx4x4unity_WorldToShadow[1].xyz;
    u_xlat5.xyz = hlslcc_mtx4x4unity_WorldToShadow[0].xyz * vs_TEXCOORD2.xxx + u_xlat5.xyz;
    u_xlat5.xyz = hlslcc_mtx4x4unity_WorldToShadow[2].xyz * vs_TEXCOORD2.zzz + u_xlat5.xyz;
    u_xlat5.xyz = u_xlat5.xyz + hlslcc_mtx4x4unity_WorldToShadow[3].xyz;
    vec3 txVec0 = vec3(u_xlat5.xy,u_xlat5.z);
    u_xlat5.x = textureLod(hlslcc_zcmp_ShadowMapTexture, txVec0, 0.0);
    u_xlat16_2.x = (-_LightShadowData.x) + 1.0;
    u_xlat16_2.x = u_xlat5.x * u_xlat16_2.x + _LightShadowData.x;
    u_xlat16_7.x = (-u_xlat16_2.x) + 1.0;
    u_xlat16_2.x = u_xlat0.x * u_xlat16_7.x + u_xlat16_2.x;
    u_xlat16_7.x = dot(vs_TEXCOORD1.xyz, vs_TEXCOORD1.xyz);
    u_xlat16_7.x = inversesqrt(u_xlat16_7.x);
    u_xlat16_7.xyz = u_xlat16_7.xxx * vs_TEXCOORD1.xyz;
    u_xlat16_7.x = dot(u_xlat16_7.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat16_7.x = max(u_xlat16_7.x, 0.0);
    u_xlat16_12 = (-_RampSmooth) * 0.5 + _RampThreshold;
    u_xlat16_7.x = (-u_xlat16_12) + u_xlat16_7.x;
    u_xlat16_17 = _RampSmooth * 0.5 + _RampThreshold;
    u_xlat16_12 = (-u_xlat16_12) + u_xlat16_17;
    u_xlat16_12 = float(1.0) / u_xlat16_12;
    u_xlat16_7.x = u_xlat16_12 * u_xlat16_7.x;
#ifdef UNITY_ADRENO_ES3
    u_xlat16_7.x = min(max(u_xlat16_7.x, 0.0), 1.0);
#else
    u_xlat16_7.x = clamp(u_xlat16_7.x, 0.0, 1.0);
#endif
    u_xlat16_12 = u_xlat16_7.x * -2.0 + 3.0;
    u_xlat16_7.x = u_xlat16_7.x * u_xlat16_7.x;
    u_xlat16_7.x = u_xlat16_7.x * u_xlat16_12;
    u_xlat16_2.x = u_xlat16_2.x * u_xlat16_7.x;
    u_xlat16_7.xyz = (-_HColor.xyz) + _SColor.xyz;
    u_xlat16_7.xyz = _SColor.www * u_xlat16_7.xyz + _HColor.xyz;
    u_xlat16_3.xyz = (-u_xlat16_7.xyz) + _HColor.xyz;
    u_xlat16_2.xyz = u_xlat16_2.xxx * u_xlat16_3.xyz + u_xlat16_7.xyz;
    u_xlat0.xyz = vs_TEXCOORD1.xyz;
    u_xlat0.w = 1.0;
    u_xlat16_3.x = dot(unity_SHAr, u_xlat0);
    u_xlat16_3.y = dot(unity_SHAg, u_xlat0);
    u_xlat16_3.z = dot(unity_SHAb, u_xlat0);
    u_xlat16_3.xyz = u_xlat16_3.xyz + vs_TEXCOORD3.xyz;
    u_xlat16_3.xyz = max(u_xlat16_3.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat0.xyz = log2(u_xlat16_3.xyz);
    u_xlat0.xyz = u_xlat0.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
    u_xlat0.xyz = exp2(u_xlat0.xyz);
    u_xlat0.xyz = u_xlat0.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
    u_xlat0.xyz = max(u_xlat0.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat16_1 = texture(_MainTex, vs_TEXCOORD0.xy);
    u_xlat16_3.xyz = u_xlat16_1.xyz * _Color.xyz;
    SV_Target0.w = u_xlat16_1.w * _Color.w;
    u_xlat16_4.xyz = u_xlat0.xyz * u_xlat16_3.xyz;
    u_xlat16_3.xyz = u_xlat16_3.xyz * _LightColor0.xyz;
    SV_Target0.xyz = u_xlat16_3.xyz * u_xlat16_2.xyz + u_xlat16_4.xyz;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier02 " {
Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "SHADOWS_SCREEN" }
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in highp vec3 in_NORMAL0;
in highp vec4 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out highp vec3 vs_TEXCOORD1;
out highp vec3 vs_TEXCOORD2;
out mediump vec3 vs_TEXCOORD3;
out highp vec4 vs_TEXCOORD5;
out highp vec4 vs_TEXCOORD6;
vec4 u_xlat0;
mediump vec4 u_xlat16_0;
vec4 u_xlat1;
mediump float u_xlat16_2;
mediump vec3 u_xlat16_3;
float u_xlat12;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    vs_TEXCOORD2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
    u_xlat0 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat0;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat0;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat0.xy;
    u_xlat0.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat12 = dot(u_xlat0.xyz, u_xlat0.xyz);
    u_xlat12 = inversesqrt(u_xlat12);
    u_xlat0.xyz = vec3(u_xlat12) * u_xlat0.xyz;
    vs_TEXCOORD1.xyz = u_xlat0.xyz;
    u_xlat16_2 = u_xlat0.y * u_xlat0.y;
    u_xlat16_2 = u_xlat0.x * u_xlat0.x + (-u_xlat16_2);
    u_xlat16_0 = u_xlat0.yzzx * u_xlat0.xyzz;
    u_xlat16_3.x = dot(unity_SHBr, u_xlat16_0);
    u_xlat16_3.y = dot(unity_SHBg, u_xlat16_0);
    u_xlat16_3.z = dot(unity_SHBb, u_xlat16_0);
    vs_TEXCOORD3.xyz = unity_SHC.xyz * vec3(u_xlat16_2) + u_xlat16_3.xyz;
    vs_TEXCOORD5 = vec4(0.0, 0.0, 0.0, 0.0);
    vs_TEXCOORD6 = vec4(0.0, 0.0, 0.0, 0.0);
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es
#ifdef GL_EXT_shader_texture_lod
#extension GL_EXT_shader_texture_lod : enable
#endif

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec3 _WorldSpaceCameraPos;
uniform 	mediump vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	vec4 hlslcc_mtx4x4unity_WorldToShadow[16];
uniform 	mediump vec4 _LightShadowData;
uniform 	vec4 unity_ShadowFadeCenterAndType;
uniform 	vec4 hlslcc_mtx4x4unity_MatrixV[4];
uniform 	mediump vec4 _LightColor0;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 _HColor;
uniform 	mediump vec4 _SColor;
uniform 	mediump float _RampThreshold;
uniform 	mediump float _RampSmooth;
UNITY_LOCATION(0) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(1) uniform highp sampler2D _ShadowMapTexture;
UNITY_LOCATION(2) uniform highp sampler2DShadow hlslcc_zcmp_ShadowMapTexture;
in mediump vec2 vs_TEXCOORD0;
in highp vec3 vs_TEXCOORD1;
in highp vec3 vs_TEXCOORD2;
in mediump vec3 vs_TEXCOORD3;
layout(location = 0) out mediump vec4 SV_Target0;
vec4 u_xlat0;
vec3 u_xlat1;
mediump vec4 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
mediump vec3 u_xlat16_4;
vec3 u_xlat5;
mediump vec3 u_xlat16_7;
mediump float u_xlat16_12;
mediump float u_xlat16_17;
void main()
{
    u_xlat0.xyz = vs_TEXCOORD2.xyz + (-unity_ShadowFadeCenterAndType.xyz);
    u_xlat0.x = dot(u_xlat0.xyz, u_xlat0.xyz);
    u_xlat0.x = sqrt(u_xlat0.x);
    u_xlat5.xyz = (-vs_TEXCOORD2.xyz) + _WorldSpaceCameraPos.xyz;
    u_xlat1.x = hlslcc_mtx4x4unity_MatrixV[0].z;
    u_xlat1.y = hlslcc_mtx4x4unity_MatrixV[1].z;
    u_xlat1.z = hlslcc_mtx4x4unity_MatrixV[2].z;
    u_xlat5.x = dot(u_xlat5.xyz, u_xlat1.xyz);
    u_xlat0.x = (-u_xlat5.x) + u_xlat0.x;
    u_xlat0.x = unity_ShadowFadeCenterAndType.w * u_xlat0.x + u_xlat5.x;
    u_xlat0.x = u_xlat0.x * _LightShadowData.z + _LightShadowData.w;
#ifdef UNITY_ADRENO_ES3
    u_xlat0.x = min(max(u_xlat0.x, 0.0), 1.0);
#else
    u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);
#endif
    u_xlat5.xyz = vs_TEXCOORD2.yyy * hlslcc_mtx4x4unity_WorldToShadow[1].xyz;
    u_xlat5.xyz = hlslcc_mtx4x4unity_WorldToShadow[0].xyz * vs_TEXCOORD2.xxx + u_xlat5.xyz;
    u_xlat5.xyz = hlslcc_mtx4x4unity_WorldToShadow[2].xyz * vs_TEXCOORD2.zzz + u_xlat5.xyz;
    u_xlat5.xyz = u_xlat5.xyz + hlslcc_mtx4x4unity_WorldToShadow[3].xyz;
    vec3 txVec0 = vec3(u_xlat5.xy,u_xlat5.z);
    u_xlat5.x = textureLod(hlslcc_zcmp_ShadowMapTexture, txVec0, 0.0);
    u_xlat16_2.x = (-_LightShadowData.x) + 1.0;
    u_xlat16_2.x = u_xlat5.x * u_xlat16_2.x + _LightShadowData.x;
    u_xlat16_7.x = (-u_xlat16_2.x) + 1.0;
    u_xlat16_2.x = u_xlat0.x * u_xlat16_7.x + u_xlat16_2.x;
    u_xlat16_7.x = dot(vs_TEXCOORD1.xyz, vs_TEXCOORD1.xyz);
    u_xlat16_7.x = inversesqrt(u_xlat16_7.x);
    u_xlat16_7.xyz = u_xlat16_7.xxx * vs_TEXCOORD1.xyz;
    u_xlat16_7.x = dot(u_xlat16_7.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat16_7.x = max(u_xlat16_7.x, 0.0);
    u_xlat16_12 = (-_RampSmooth) * 0.5 + _RampThreshold;
    u_xlat16_7.x = (-u_xlat16_12) + u_xlat16_7.x;
    u_xlat16_17 = _RampSmooth * 0.5 + _RampThreshold;
    u_xlat16_12 = (-u_xlat16_12) + u_xlat16_17;
    u_xlat16_12 = float(1.0) / u_xlat16_12;
    u_xlat16_7.x = u_xlat16_12 * u_xlat16_7.x;
#ifdef UNITY_ADRENO_ES3
    u_xlat16_7.x = min(max(u_xlat16_7.x, 0.0), 1.0);
#else
    u_xlat16_7.x = clamp(u_xlat16_7.x, 0.0, 1.0);
#endif
    u_xlat16_12 = u_xlat16_7.x * -2.0 + 3.0;
    u_xlat16_7.x = u_xlat16_7.x * u_xlat16_7.x;
    u_xlat16_7.x = u_xlat16_7.x * u_xlat16_12;
    u_xlat16_2.x = u_xlat16_2.x * u_xlat16_7.x;
    u_xlat16_7.xyz = (-_HColor.xyz) + _SColor.xyz;
    u_xlat16_7.xyz = _SColor.www * u_xlat16_7.xyz + _HColor.xyz;
    u_xlat16_3.xyz = (-u_xlat16_7.xyz) + _HColor.xyz;
    u_xlat16_2.xyz = u_xlat16_2.xxx * u_xlat16_3.xyz + u_xlat16_7.xyz;
    u_xlat0.xyz = vs_TEXCOORD1.xyz;
    u_xlat0.w = 1.0;
    u_xlat16_3.x = dot(unity_SHAr, u_xlat0);
    u_xlat16_3.y = dot(unity_SHAg, u_xlat0);
    u_xlat16_3.z = dot(unity_SHAb, u_xlat0);
    u_xlat16_3.xyz = u_xlat16_3.xyz + vs_TEXCOORD3.xyz;
    u_xlat16_3.xyz = max(u_xlat16_3.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat0.xyz = log2(u_xlat16_3.xyz);
    u_xlat0.xyz = u_xlat0.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
    u_xlat0.xyz = exp2(u_xlat0.xyz);
    u_xlat0.xyz = u_xlat0.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
    u_xlat0.xyz = max(u_xlat0.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat16_1 = texture(_MainTex, vs_TEXCOORD0.xy);
    u_xlat16_3.xyz = u_xlat16_1.xyz * _Color.xyz;
    SV_Target0.w = u_xlat16_1.w * _Color.w;
    u_xlat16_4.xyz = u_xlat0.xyz * u_xlat16_3.xyz;
    u_xlat16_3.xyz = u_xlat16_3.xyz * _LightColor0.xyz;
    SV_Target0.xyz = u_xlat16_3.xyz * u_xlat16_2.xyz + u_xlat16_4.xyz;
    return;
}

#endif
"
}
SubProgram "vulkan hw_tier00 " {
Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "SHADOWS_SCREEN" }
"; SPIR-V
; Version: 1.0
; Generator: Khronos Glslang Reference Front End; 6
; Bound: 214
; Schema: 0
                                                      OpCapability Shader 
                                               %1 = OpExtInstImport "GLSL.std.450" 
                                                      OpMemoryModel Logical GLSL450 
                                                      OpEntryPoint Vertex %4 "main" %11 %53 %87 %97 %113 %117 %155 %195 %204 %207 
                                                      OpName vs_TEXCOORD2 "vs_TEXCOORD2" 
                                                      OpName vs_TEXCOORD0 "vs_TEXCOORD0" 
                                                      OpName vs_TEXCOORD1 "vs_TEXCOORD1" 
                                                      OpName vs_TEXCOORD3 "vs_TEXCOORD3" 
                                                      OpName vs_TEXCOORD5 "vs_TEXCOORD5" 
                                                      OpName vs_TEXCOORD6 "vs_TEXCOORD6" 
                                                      OpDecorate %11 Location 11 
                                                      OpDecorate %16 ArrayStride 16 
                                                      OpDecorate %17 ArrayStride 17 
                                                      OpDecorate %18 ArrayStride 18 
                                                      OpMemberDecorate %19 0 RelaxedPrecision 
                                                      OpMemberDecorate %19 0 Offset 19 
                                                      OpMemberDecorate %19 1 RelaxedPrecision 
                                                      OpMemberDecorate %19 1 Offset 19 
                                                      OpMemberDecorate %19 2 RelaxedPrecision 
                                                      OpMemberDecorate %19 2 Offset 19 
                                                      OpMemberDecorate %19 3 RelaxedPrecision 
                                                      OpMemberDecorate %19 3 Offset 19 
                                                      OpMemberDecorate %19 4 Offset 19 
                                                      OpMemberDecorate %19 5 Offset 19 
                                                      OpMemberDecorate %19 6 Offset 19 
                                                      OpMemberDecorate %19 7 Offset 19 
                                                      OpDecorate %19 Block 
                                                      OpDecorate %21 DescriptorSet 21 
                                                      OpDecorate %21 Binding 21 
                                                      OpDecorate vs_TEXCOORD2 Location 53 
                                                      OpMemberDecorate %85 0 BuiltIn 85 
                                                      OpMemberDecorate %85 1 BuiltIn 85 
                                                      OpMemberDecorate %85 2 BuiltIn 85 
                                                      OpDecorate %85 Block 
                                                      OpDecorate %97 Location 97 
                                                      OpDecorate vs_TEXCOORD0 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD0 Location 113 
                                                      OpDecorate %117 Location 117 
                                                      OpDecorate vs_TEXCOORD1 Location 155 
                                                      OpDecorate %158 RelaxedPrecision 
                                                      OpDecorate %169 RelaxedPrecision 
                                                      OpDecorate %170 RelaxedPrecision 
                                                      OpDecorate %172 RelaxedPrecision 
                                                      OpDecorate %179 RelaxedPrecision 
                                                      OpDecorate %181 RelaxedPrecision 
                                                      OpDecorate %182 RelaxedPrecision 
                                                      OpDecorate %183 RelaxedPrecision 
                                                      OpDecorate %186 RelaxedPrecision 
                                                      OpDecorate %187 RelaxedPrecision 
                                                      OpDecorate %188 RelaxedPrecision 
                                                      OpDecorate %191 RelaxedPrecision 
                                                      OpDecorate %192 RelaxedPrecision 
                                                      OpDecorate %193 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD3 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD3 Location 195 
                                                      OpDecorate %197 RelaxedPrecision 
                                                      OpDecorate %198 RelaxedPrecision 
                                                      OpDecorate %199 RelaxedPrecision 
                                                      OpDecorate %200 RelaxedPrecision 
                                                      OpDecorate %201 RelaxedPrecision 
                                                      OpDecorate %202 RelaxedPrecision 
                                                      OpDecorate %203 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD5 Location 204 
                                                      OpDecorate vs_TEXCOORD6 Location 207 
                                               %2 = OpTypeVoid 
                                               %3 = OpTypeFunction %2 
                                               %6 = OpTypeFloat 32 
                                               %7 = OpTypeVector %6 4 
                                               %8 = OpTypePointer Private %7 
                                Private f32_4* %9 = OpVariable Private 
                                              %10 = OpTypePointer Input %7 
                                 Input f32_4* %11 = OpVariable Input 
                                              %14 = OpTypeInt 32 0 
                                          u32 %15 = OpConstant 4 
                                              %16 = OpTypeArray %7 %15 
                                              %17 = OpTypeArray %7 %15 
                                              %18 = OpTypeArray %7 %15 
                                              %19 = OpTypeStruct %7 %7 %7 %7 %16 %17 %18 %7 
                                              %20 = OpTypePointer Uniform %19 
Uniform struct {f32_4; f32_4; f32_4; f32_4; f32_4[4]; f32_4[4]; f32_4[4]; f32_4;}* %21 = OpVariable Uniform 
                                              %22 = OpTypeInt 32 1 
                                          i32 %23 = OpConstant 4 
                                          i32 %24 = OpConstant 1 
                                              %25 = OpTypePointer Uniform %7 
                                          i32 %29 = OpConstant 0 
                                          i32 %37 = OpConstant 2 
                               Private f32_4* %45 = OpVariable Private 
                                          i32 %47 = OpConstant 3 
                                              %51 = OpTypeVector %6 3 
                                              %52 = OpTypePointer Output %51 
                       Output f32_3* vs_TEXCOORD2 = OpVariable Output 
                                          i32 %65 = OpConstant 6 
                                          u32 %83 = OpConstant 1 
                                              %84 = OpTypeArray %6 %83 
                                              %85 = OpTypeStruct %7 %6 %84 
                                              %86 = OpTypePointer Output %85 
         Output struct {f32_4; f32; f32[1];}* %87 = OpVariable Output 
                                              %95 = OpTypePointer Output %7 
                                 Input f32_4* %97 = OpVariable Input 
                                              %98 = OpTypeVector %6 2 
                                         i32 %101 = OpConstant 7 
                                             %112 = OpTypePointer Output %98 
                       Output f32_2* vs_TEXCOORD0 = OpVariable Output 
                                             %116 = OpTypePointer Input %51 
                                Input f32_3* %117 = OpVariable Input 
                                         i32 %119 = OpConstant 5 
                                         u32 %124 = OpConstant 0 
                                             %125 = OpTypePointer Private %6 
                                         u32 %138 = OpConstant 2 
                                Private f32* %140 = OpVariable Private 
                       Output f32_3* vs_TEXCOORD1 = OpVariable Output 
                                Private f32* %158 = OpVariable Private 
                              Private f32_4* %172 = OpVariable Private 
                                             %178 = OpTypePointer Private %51 
                              Private f32_3* %179 = OpVariable Private 
                       Output f32_3* vs_TEXCOORD3 = OpVariable Output 
                       Output f32_4* vs_TEXCOORD5 = OpVariable Output 
                                         f32 %205 = OpConstant 3.674022E-40 
                                       f32_4 %206 = OpConstantComposite %205 %205 %205 %205 
                       Output f32_4* vs_TEXCOORD6 = OpVariable Output 
                                             %208 = OpTypePointer Output %6 
                                          void %4 = OpFunction None %3 
                                               %5 = OpLabel 
                                        f32_4 %12 = OpLoad %11 
                                        f32_4 %13 = OpVectorShuffle %12 %12 1 1 1 1 
                               Uniform f32_4* %26 = OpAccessChain %21 %23 %24 
                                        f32_4 %27 = OpLoad %26 
                                        f32_4 %28 = OpFMul %13 %27 
                                                      OpStore %9 %28 
                               Uniform f32_4* %30 = OpAccessChain %21 %23 %29 
                                        f32_4 %31 = OpLoad %30 
                                        f32_4 %32 = OpLoad %11 
                                        f32_4 %33 = OpVectorShuffle %32 %32 0 0 0 0 
                                        f32_4 %34 = OpFMul %31 %33 
                                        f32_4 %35 = OpLoad %9 
                                        f32_4 %36 = OpFAdd %34 %35 
                                                      OpStore %9 %36 
                               Uniform f32_4* %38 = OpAccessChain %21 %23 %37 
                                        f32_4 %39 = OpLoad %38 
                                        f32_4 %40 = OpLoad %11 
                                        f32_4 %41 = OpVectorShuffle %40 %40 2 2 2 2 
                                        f32_4 %42 = OpFMul %39 %41 
                                        f32_4 %43 = OpLoad %9 
                                        f32_4 %44 = OpFAdd %42 %43 
                                                      OpStore %9 %44 
                                        f32_4 %46 = OpLoad %9 
                               Uniform f32_4* %48 = OpAccessChain %21 %23 %47 
                                        f32_4 %49 = OpLoad %48 
                                        f32_4 %50 = OpFAdd %46 %49 
                                                      OpStore %45 %50 
                               Uniform f32_4* %54 = OpAccessChain %21 %23 %47 
                                        f32_4 %55 = OpLoad %54 
                                        f32_3 %56 = OpVectorShuffle %55 %55 0 1 2 
                                        f32_4 %57 = OpLoad %11 
                                        f32_3 %58 = OpVectorShuffle %57 %57 3 3 3 
                                        f32_3 %59 = OpFMul %56 %58 
                                        f32_4 %60 = OpLoad %9 
                                        f32_3 %61 = OpVectorShuffle %60 %60 0 1 2 
                                        f32_3 %62 = OpFAdd %59 %61 
                                                      OpStore vs_TEXCOORD2 %62 
                                        f32_4 %63 = OpLoad %45 
                                        f32_4 %64 = OpVectorShuffle %63 %63 1 1 1 1 
                               Uniform f32_4* %66 = OpAccessChain %21 %65 %24 
                                        f32_4 %67 = OpLoad %66 
                                        f32_4 %68 = OpFMul %64 %67 
                                                      OpStore %9 %68 
                               Uniform f32_4* %69 = OpAccessChain %21 %65 %29 
                                        f32_4 %70 = OpLoad %69 
                                        f32_4 %71 = OpLoad %45 
                                        f32_4 %72 = OpVectorShuffle %71 %71 0 0 0 0 
                                        f32_4 %73 = OpFMul %70 %72 
                                        f32_4 %74 = OpLoad %9 
                                        f32_4 %75 = OpFAdd %73 %74 
                                                      OpStore %9 %75 
                               Uniform f32_4* %76 = OpAccessChain %21 %65 %37 
                                        f32_4 %77 = OpLoad %76 
                                        f32_4 %78 = OpLoad %45 
                                        f32_4 %79 = OpVectorShuffle %78 %78 2 2 2 2 
                                        f32_4 %80 = OpFMul %77 %79 
                                        f32_4 %81 = OpLoad %9 
                                        f32_4 %82 = OpFAdd %80 %81 
                                                      OpStore %9 %82 
                               Uniform f32_4* %88 = OpAccessChain %21 %65 %47 
                                        f32_4 %89 = OpLoad %88 
                                        f32_4 %90 = OpLoad %45 
                                        f32_4 %91 = OpVectorShuffle %90 %90 3 3 3 3 
                                        f32_4 %92 = OpFMul %89 %91 
                                        f32_4 %93 = OpLoad %9 
                                        f32_4 %94 = OpFAdd %92 %93 
                                Output f32_4* %96 = OpAccessChain %87 %29 
                                                      OpStore %96 %94 
                                        f32_4 %99 = OpLoad %97 
                                       f32_2 %100 = OpVectorShuffle %99 %99 0 1 
                              Uniform f32_4* %102 = OpAccessChain %21 %101 
                                       f32_4 %103 = OpLoad %102 
                                       f32_2 %104 = OpVectorShuffle %103 %103 0 1 
                                       f32_2 %105 = OpFMul %100 %104 
                              Uniform f32_4* %106 = OpAccessChain %21 %101 
                                       f32_4 %107 = OpLoad %106 
                                       f32_2 %108 = OpVectorShuffle %107 %107 2 3 
                                       f32_2 %109 = OpFAdd %105 %108 
                                       f32_4 %110 = OpLoad %9 
                                       f32_4 %111 = OpVectorShuffle %110 %109 4 5 2 3 
                                                      OpStore %9 %111 
                                       f32_4 %114 = OpLoad %9 
                                       f32_2 %115 = OpVectorShuffle %114 %114 0 1 
                                                      OpStore vs_TEXCOORD0 %115 
                                       f32_3 %118 = OpLoad %117 
                              Uniform f32_4* %120 = OpAccessChain %21 %119 %29 
                                       f32_4 %121 = OpLoad %120 
                                       f32_3 %122 = OpVectorShuffle %121 %121 0 1 2 
                                         f32 %123 = OpDot %118 %122 
                                Private f32* %126 = OpAccessChain %9 %124 
                                                      OpStore %126 %123 
                                       f32_3 %127 = OpLoad %117 
                              Uniform f32_4* %128 = OpAccessChain %21 %119 %24 
                                       f32_4 %129 = OpLoad %128 
                                       f32_3 %130 = OpVectorShuffle %129 %129 0 1 2 
                                         f32 %131 = OpDot %127 %130 
                                Private f32* %132 = OpAccessChain %9 %83 
                                                      OpStore %132 %131 
                                       f32_3 %133 = OpLoad %117 
                              Uniform f32_4* %134 = OpAccessChain %21 %119 %37 
                                       f32_4 %135 = OpLoad %134 
                                       f32_3 %136 = OpVectorShuffle %135 %135 0 1 2 
                                         f32 %137 = OpDot %133 %136 
                                Private f32* %139 = OpAccessChain %9 %138 
                                                      OpStore %139 %137 
                                       f32_4 %141 = OpLoad %9 
                                       f32_3 %142 = OpVectorShuffle %141 %141 0 1 2 
                                       f32_4 %143 = OpLoad %9 
                                       f32_3 %144 = OpVectorShuffle %143 %143 0 1 2 
                                         f32 %145 = OpDot %142 %144 
                                                      OpStore %140 %145 
                                         f32 %146 = OpLoad %140 
                                         f32 %147 = OpExtInst %1 32 %146 
                                                      OpStore %140 %147 
                                         f32 %148 = OpLoad %140 
                                       f32_3 %149 = OpCompositeConstruct %148 %148 %148 
                                       f32_4 %150 = OpLoad %9 
                                       f32_3 %151 = OpVectorShuffle %150 %150 0 1 2 
                                       f32_3 %152 = OpFMul %149 %151 
                                       f32_4 %153 = OpLoad %9 
                                       f32_4 %154 = OpVectorShuffle %153 %152 4 5 6 3 
                                                      OpStore %9 %154 
                                       f32_4 %156 = OpLoad %9 
                                       f32_3 %157 = OpVectorShuffle %156 %156 0 1 2 
                                                      OpStore vs_TEXCOORD1 %157 
                                Private f32* %159 = OpAccessChain %9 %83 
                                         f32 %160 = OpLoad %159 
                                Private f32* %161 = OpAccessChain %9 %83 
                                         f32 %162 = OpLoad %161 
                                         f32 %163 = OpFMul %160 %162 
                                                      OpStore %158 %163 
                                Private f32* %164 = OpAccessChain %9 %124 
                                         f32 %165 = OpLoad %164 
                                Private f32* %166 = OpAccessChain %9 %124 
                                         f32 %167 = OpLoad %166 
                                         f32 %168 = OpFMul %165 %167 
                                         f32 %169 = OpLoad %158 
                                         f32 %170 = OpFNegate %169 
                                         f32 %171 = OpFAdd %168 %170 
                                                      OpStore %158 %171 
                                       f32_4 %173 = OpLoad %9 
                                       f32_4 %174 = OpVectorShuffle %173 %173 1 2 2 0 
                                       f32_4 %175 = OpLoad %9 
                                       f32_4 %176 = OpVectorShuffle %175 %175 0 1 2 2 
                                       f32_4 %177 = OpFMul %174 %176 
                                                      OpStore %172 %177 
                              Uniform f32_4* %180 = OpAccessChain %21 %29 
                                       f32_4 %181 = OpLoad %180 
                                       f32_4 %182 = OpLoad %172 
                                         f32 %183 = OpDot %181 %182 
                                Private f32* %184 = OpAccessChain %179 %124 
                                                      OpStore %184 %183 
                              Uniform f32_4* %185 = OpAccessChain %21 %24 
                                       f32_4 %186 = OpLoad %185 
                                       f32_4 %187 = OpLoad %172 
                                         f32 %188 = OpDot %186 %187 
                                Private f32* %189 = OpAccessChain %179 %83 
                                                      OpStore %189 %188 
                              Uniform f32_4* %190 = OpAccessChain %21 %37 
                                       f32_4 %191 = OpLoad %190 
                                       f32_4 %192 = OpLoad %172 
                                         f32 %193 = OpDot %191 %192 
                                Private f32* %194 = OpAccessChain %179 %138 
                                                      OpStore %194 %193 
                              Uniform f32_4* %196 = OpAccessChain %21 %47 
                                       f32_4 %197 = OpLoad %196 
                                       f32_3 %198 = OpVectorShuffle %197 %197 0 1 2 
                                         f32 %199 = OpLoad %158 
                                       f32_3 %200 = OpCompositeConstruct %199 %199 %199 
                                       f32_3 %201 = OpFMul %198 %200 
                                       f32_3 %202 = OpLoad %179 
                                       f32_3 %203 = OpFAdd %201 %202 
                                                      OpStore vs_TEXCOORD3 %203 
                                                      OpStore vs_TEXCOORD5 %206 
                                                      OpStore vs_TEXCOORD6 %206 
                                 Output f32* %209 = OpAccessChain %87 %29 %83 
                                         f32 %210 = OpLoad %209 
                                         f32 %211 = OpFNegate %210 
                                 Output f32* %212 = OpAccessChain %87 %29 %83 
                                                      OpStore %212 %211 
                                                      OpReturn
                                                      OpFunctionEnd
; SPIR-V
; Version: 1.0
; Generator: Khronos Glslang Reference Front End; 6
; Bound: 411
; Schema: 0
                                                      OpCapability Shader 
                                               %1 = OpExtInstImport "GLSL.std.450" 
                                                      OpMemoryModel Logical GLSL450 
                                                      OpEntryPoint Fragment %4 "main" %12 %190 %328 %373 %384 
                                                      OpExecutionMode %4 OriginUpperLeft 
                                                      OpName vs_TEXCOORD2 "vs_TEXCOORD2" 
                                                      OpName vs_TEXCOORD1 "vs_TEXCOORD1" 
                                                      OpName vs_TEXCOORD3 "vs_TEXCOORD3" 
                                                      OpName vs_TEXCOORD0 "vs_TEXCOORD0" 
                                                      OpDecorate vs_TEXCOORD2 Location 12 
                                                      OpDecorate %16 ArrayStride 16 
                                                      OpDecorate %18 ArrayStride 18 
                                                      OpMemberDecorate %19 0 Offset 19 
                                                      OpMemberDecorate %19 1 RelaxedPrecision 
                                                      OpMemberDecorate %19 1 Offset 19 
                                                      OpMemberDecorate %19 2 RelaxedPrecision 
                                                      OpMemberDecorate %19 2 Offset 19 
                                                      OpMemberDecorate %19 3 RelaxedPrecision 
                                                      OpMemberDecorate %19 3 Offset 19 
                                                      OpMemberDecorate %19 4 RelaxedPrecision 
                                                      OpMemberDecorate %19 4 Offset 19 
                                                      OpMemberDecorate %19 5 Offset 19 
                                                      OpMemberDecorate %19 6 RelaxedPrecision 
                                                      OpMemberDecorate %19 6 Offset 19 
                                                      OpMemberDecorate %19 7 Offset 19 
                                                      OpMemberDecorate %19 8 Offset 19 
                                                      OpMemberDecorate %19 9 RelaxedPrecision 
                                                      OpMemberDecorate %19 9 Offset 19 
                                                      OpMemberDecorate %19 10 RelaxedPrecision 
                                                      OpMemberDecorate %19 10 Offset 19 
                                                      OpMemberDecorate %19 11 RelaxedPrecision 
                                                      OpMemberDecorate %19 11 Offset 19 
                                                      OpMemberDecorate %19 12 RelaxedPrecision 
                                                      OpMemberDecorate %19 12 Offset 19 
                                                      OpMemberDecorate %19 13 RelaxedPrecision 
                                                      OpMemberDecorate %19 13 Offset 19 
                                                      OpMemberDecorate %19 14 RelaxedPrecision 
                                                      OpMemberDecorate %19 14 Offset 19 
                                                      OpDecorate %19 Block 
                                                      OpDecorate %21 DescriptorSet 21 
                                                      OpDecorate %21 Binding 21 
                                                      OpDecorate %94 RelaxedPrecision 
                                                      OpDecorate %97 RelaxedPrecision 
                                                      OpDecorate %147 DescriptorSet 147 
                                                      OpDecorate %147 Binding 147 
                                                      OpDecorate %151 DescriptorSet 151 
                                                      OpDecorate %151 Binding 151 
                                                      OpDecorate %160 RelaxedPrecision 
                                                      OpDecorate %162 RelaxedPrecision 
                                                      OpDecorate %163 RelaxedPrecision 
                                                      OpDecorate %164 RelaxedPrecision 
                                                      OpDecorate %169 RelaxedPrecision 
                                                      OpDecorate %172 RelaxedPrecision 
                                                      OpDecorate %175 RelaxedPrecision 
                                                      OpDecorate %177 RelaxedPrecision 
                                                      OpDecorate %178 RelaxedPrecision 
                                                      OpDecorate %179 RelaxedPrecision 
                                                      OpDecorate %184 RelaxedPrecision 
                                                      OpDecorate %187 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD1 Location 190 
                                                      OpDecorate %196 RelaxedPrecision 
                                                      OpDecorate %197 RelaxedPrecision 
                                                      OpDecorate %199 RelaxedPrecision 
                                                      OpDecorate %200 RelaxedPrecision 
                                                      OpDecorate %203 RelaxedPrecision 
                                                      OpDecorate %205 RelaxedPrecision 
                                                      OpDecorate %206 RelaxedPrecision 
                                                      OpDecorate %207 RelaxedPrecision 
                                                      OpDecorate %210 RelaxedPrecision 
                                                      OpDecorate %211 RelaxedPrecision 
                                                      OpDecorate %213 RelaxedPrecision 
                                                      OpDecorate %216 RelaxedPrecision 
                                                      OpDecorate %217 RelaxedPrecision 
                                                      OpDecorate %219 RelaxedPrecision 
                                                      OpDecorate %222 RelaxedPrecision 
                                                      OpDecorate %223 RelaxedPrecision 
                                                      OpDecorate %224 RelaxedPrecision 
                                                      OpDecorate %225 RelaxedPrecision 
                                                      OpDecorate %227 RelaxedPrecision 
                                                      OpDecorate %228 RelaxedPrecision 
                                                      OpDecorate %230 RelaxedPrecision 
                                                      OpDecorate %232 RelaxedPrecision 
                                                      OpDecorate %233 RelaxedPrecision 
                                                      OpDecorate %235 RelaxedPrecision 
                                                      OpDecorate %236 RelaxedPrecision 
                                                      OpDecorate %237 RelaxedPrecision 
                                                      OpDecorate %238 RelaxedPrecision 
                                                      OpDecorate %239 RelaxedPrecision 
                                                      OpDecorate %240 RelaxedPrecision 
                                                      OpDecorate %241 RelaxedPrecision 
                                                      OpDecorate %242 RelaxedPrecision 
                                                      OpDecorate %243 RelaxedPrecision 
                                                      OpDecorate %245 RelaxedPrecision 
                                                      OpDecorate %246 RelaxedPrecision 
                                                      OpDecorate %249 RelaxedPrecision 
                                                      OpDecorate %250 RelaxedPrecision 
                                                      OpDecorate %253 RelaxedPrecision 
                                                      OpDecorate %255 RelaxedPrecision 
                                                      OpDecorate %257 RelaxedPrecision 
                                                      OpDecorate %259 RelaxedPrecision 
                                                      OpDecorate %261 RelaxedPrecision 
                                                      OpDecorate %262 RelaxedPrecision 
                                                      OpDecorate %265 RelaxedPrecision 
                                                      OpDecorate %266 RelaxedPrecision 
                                                      OpDecorate %267 RelaxedPrecision 
                                                      OpDecorate %270 RelaxedPrecision 
                                                      OpDecorate %272 RelaxedPrecision 
                                                      OpDecorate %273 RelaxedPrecision 
                                                      OpDecorate %277 RelaxedPrecision 
                                                      OpDecorate %278 RelaxedPrecision 
                                                      OpDecorate %279 RelaxedPrecision 
                                                      OpDecorate %282 RelaxedPrecision 
                                                      OpDecorate %283 RelaxedPrecision 
                                                      OpDecorate %284 RelaxedPrecision 
                                                      OpDecorate %286 RelaxedPrecision 
                                                      OpDecorate %287 RelaxedPrecision 
                                                      OpDecorate %288 RelaxedPrecision 
                                                      OpDecorate %289 RelaxedPrecision 
                                                      OpDecorate %291 RelaxedPrecision 
                                                      OpDecorate %292 RelaxedPrecision 
                                                      OpDecorate %293 RelaxedPrecision 
                                                      OpDecorate %294 RelaxedPrecision 
                                                      OpDecorate %295 RelaxedPrecision 
                                                      OpDecorate %296 RelaxedPrecision 
                                                      OpDecorate %298 RelaxedPrecision 
                                                      OpDecorate %299 RelaxedPrecision 
                                                      OpDecorate %300 RelaxedPrecision 
                                                      OpDecorate %301 RelaxedPrecision 
                                                      OpDecorate %302 RelaxedPrecision 
                                                      OpDecorate %303 RelaxedPrecision 
                                                      OpDecorate %304 RelaxedPrecision 
                                                      OpDecorate %305 RelaxedPrecision 
                                                      OpDecorate %306 RelaxedPrecision 
                                                      OpDecorate %312 RelaxedPrecision 
                                                      OpDecorate %317 RelaxedPrecision 
                                                      OpDecorate %323 RelaxedPrecision 
                                                      OpDecorate %327 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD3 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD3 Location 328 
                                                      OpDecorate %329 RelaxedPrecision 
                                                      OpDecorate %330 RelaxedPrecision 
                                                      OpDecorate %331 RelaxedPrecision 
                                                      OpDecorate %333 RelaxedPrecision 
                                                      OpDecorate %334 RelaxedPrecision 
                                                      OpDecorate %335 RelaxedPrecision 
                                                      OpDecorate %365 RelaxedPrecision 
                                                      OpDecorate %366 RelaxedPrecision 
                                                      OpDecorate %366 DescriptorSet 366 
                                                      OpDecorate %366 Binding 366 
                                                      OpDecorate %367 RelaxedPrecision 
                                                      OpDecorate %368 RelaxedPrecision 
                                                      OpDecorate %368 DescriptorSet 368 
                                                      OpDecorate %368 Binding 368 
                                                      OpDecorate %369 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD0 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD0 Location 373 
                                                      OpDecorate %374 RelaxedPrecision 
                                                      OpDecorate %375 RelaxedPrecision 
                                                      OpDecorate %376 RelaxedPrecision 
                                                      OpDecorate %377 RelaxedPrecision 
                                                      OpDecorate %380 RelaxedPrecision 
                                                      OpDecorate %381 RelaxedPrecision 
                                                      OpDecorate %382 RelaxedPrecision 
                                                      OpDecorate %384 RelaxedPrecision 
                                                      OpDecorate %384 Location 384 
                                                      OpDecorate %386 RelaxedPrecision 
                                                      OpDecorate %388 RelaxedPrecision 
                                                      OpDecorate %389 RelaxedPrecision 
                                                      OpDecorate %392 RelaxedPrecision 
                                                      OpDecorate %395 RelaxedPrecision 
                                                      OpDecorate %397 RelaxedPrecision 
                                                      OpDecorate %400 RelaxedPrecision 
                                                      OpDecorate %401 RelaxedPrecision 
                                                      OpDecorate %402 RelaxedPrecision 
                                                      OpDecorate %403 RelaxedPrecision 
                                                      OpDecorate %404 RelaxedPrecision 
                                                      OpDecorate %405 RelaxedPrecision 
                                                      OpDecorate %406 RelaxedPrecision 
                                                      OpDecorate %407 RelaxedPrecision 
                                               %2 = OpTypeVoid 
                                               %3 = OpTypeFunction %2 
                                               %6 = OpTypeFloat 32 
                                               %7 = OpTypeVector %6 4 
                                               %8 = OpTypePointer Private %7 
                                Private f32_4* %9 = OpVariable Private 
                                              %10 = OpTypeVector %6 3 
                                              %11 = OpTypePointer Input %10 
                        Input f32_3* vs_TEXCOORD2 = OpVariable Input 
                                              %14 = OpTypeInt 32 0 
                                          u32 %15 = OpConstant 16 
                                              %16 = OpTypeArray %7 %15 
                                          u32 %17 = OpConstant 4 
                                              %18 = OpTypeArray %7 %17 
                                              %19 = OpTypeStruct %10 %7 %7 %7 %7 %16 %7 %7 %18 %7 %7 %7 %7 %6 %6 
                                              %20 = OpTypePointer Uniform %19 
Uniform struct {f32_3; f32_4; f32_4; f32_4; f32_4; f32_4[16]; f32_4; f32_4; f32_4[4]; f32_4; f32_4; f32_4; f32_4; f32; f32;}* %21 = OpVariable Uniform 
                                              %22 = OpTypeInt 32 1 
                                          i32 %23 = OpConstant 7 
                                              %24 = OpTypePointer Uniform %7 
                                          u32 %37 = OpConstant 0 
                                              %38 = OpTypePointer Private %6 
                                              %44 = OpTypePointer Private %10 
                               Private f32_3* %45 = OpVariable Private 
                                          i32 %48 = OpConstant 0 
                                              %49 = OpTypePointer Uniform %10 
                               Private f32_3* %53 = OpVariable Private 
                                          i32 %54 = OpConstant 8 
                                          u32 %55 = OpConstant 2 
                                              %56 = OpTypePointer Uniform %6 
                                          i32 %60 = OpConstant 1 
                                          u32 %63 = OpConstant 1 
                                          i32 %65 = OpConstant 2 
                                          u32 %80 = OpConstant 3 
                                          i32 %92 = OpConstant 6 
                                         f32 %102 = OpConstant 3.674022E-40 
                                         f32 %103 = OpConstant 3.674022E-40 
                                         i32 %108 = OpConstant 5 
                                         i32 %130 = OpConstant 3 
                                             %135 = OpTypePointer Function %10 
                                             %137 = OpTypeVector %6 2 
                                             %145 = OpTypeImage %6 Dim2D 0 0 0 1 Unknown 
                                             %146 = OpTypePointer UniformConstant %145 
        UniformConstant read_only Texture2D* %147 = OpVariable UniformConstant 
                                             %149 = OpTypeSampler 
                                             %150 = OpTypePointer UniformConstant %149 
                    UniformConstant sampler* %151 = OpVariable UniformConstant 
                                             %153 = OpTypeImage %6 Dim2D 1 0 0 1 Unknown 
                                             %154 = OpTypeSampledImage %153 
                              Private f32_3* %160 = OpVariable Private 
                              Private f32_3* %175 = OpVariable Private 
                        Input f32_3* vs_TEXCOORD1 = OpVariable Input 
                                Private f32* %213 = OpVariable Private 
                                         i32 %214 = OpConstant 14 
                                         f32 %218 = OpConstant 3.674022E-40 
                                         i32 %220 = OpConstant 13 
                                Private f32* %230 = OpVariable Private 
                                         f32 %254 = OpConstant 3.674022E-40 
                                         f32 %256 = OpConstant 3.674022E-40 
                                         i32 %275 = OpConstant 11 
                                         i32 %280 = OpConstant 12 
                              Private f32_3* %294 = OpVariable Private 
                                         i32 %321 = OpConstant 4 
                        Input f32_3* vs_TEXCOORD3 = OpVariable Input 
                                       f32_3 %332 = OpConstantComposite %102 %102 %102 
                                         f32 %340 = OpConstant 3.674022E-40 
                                       f32_3 %341 = OpConstantComposite %340 %340 %340 
                                         f32 %352 = OpConstant 3.674022E-40 
                                       f32_3 %353 = OpConstantComposite %352 %352 %352 
                                         f32 %355 = OpConstant 3.674022E-40 
                                       f32_3 %356 = OpConstantComposite %355 %355 %355 
                              Private f32_4* %365 = OpVariable Private 
        UniformConstant read_only Texture2D* %366 = OpVariable UniformConstant 
                    UniformConstant sampler* %368 = OpVariable UniformConstant 
                                             %370 = OpTypeSampledImage %145 
                                             %372 = OpTypePointer Input %137 
                        Input f32_2* vs_TEXCOORD0 = OpVariable Input 
                                         i32 %378 = OpConstant 10 
                                             %383 = OpTypePointer Output %7 
                               Output f32_4* %384 = OpVariable Output 
                                             %390 = OpTypePointer Output %6 
                              Private f32_3* %392 = OpVariable Private 
                                         i32 %398 = OpConstant 9 
                                          void %4 = OpFunction None %3 
                                               %5 = OpLabel 
                             Function f32_3* %136 = OpVariable Function 
                                        f32_3 %13 = OpLoad vs_TEXCOORD2 
                               Uniform f32_4* %25 = OpAccessChain %21 %23 
                                        f32_4 %26 = OpLoad %25 
                                        f32_3 %27 = OpVectorShuffle %26 %26 0 1 2 
                                        f32_3 %28 = OpFNegate %27 
                                        f32_3 %29 = OpFAdd %13 %28 
                                        f32_4 %30 = OpLoad %9 
                                        f32_4 %31 = OpVectorShuffle %30 %29 4 5 6 3 
                                                      OpStore %9 %31 
                                        f32_4 %32 = OpLoad %9 
                                        f32_3 %33 = OpVectorShuffle %32 %32 0 1 2 
                                        f32_4 %34 = OpLoad %9 
                                        f32_3 %35 = OpVectorShuffle %34 %34 0 1 2 
                                          f32 %36 = OpDot %33 %35 
                                 Private f32* %39 = OpAccessChain %9 %37 
                                                      OpStore %39 %36 
                                 Private f32* %40 = OpAccessChain %9 %37 
                                          f32 %41 = OpLoad %40 
                                          f32 %42 = OpExtInst %1 31 %41 
                                 Private f32* %43 = OpAccessChain %9 %37 
                                                      OpStore %43 %42 
                                        f32_3 %46 = OpLoad vs_TEXCOORD2 
                                        f32_3 %47 = OpFNegate %46 
                               Uniform f32_3* %50 = OpAccessChain %21 %48 
                                        f32_3 %51 = OpLoad %50 
                                        f32_3 %52 = OpFAdd %47 %51 
                                                      OpStore %45 %52 
                                 Uniform f32* %57 = OpAccessChain %21 %54 %48 %55 
                                          f32 %58 = OpLoad %57 
                                 Private f32* %59 = OpAccessChain %53 %37 
                                                      OpStore %59 %58 
                                 Uniform f32* %61 = OpAccessChain %21 %54 %60 %55 
                                          f32 %62 = OpLoad %61 
                                 Private f32* %64 = OpAccessChain %53 %63 
                                                      OpStore %64 %62 
                                 Uniform f32* %66 = OpAccessChain %21 %54 %65 %55 
                                          f32 %67 = OpLoad %66 
                                 Private f32* %68 = OpAccessChain %53 %55 
                                                      OpStore %68 %67 
                                        f32_3 %69 = OpLoad %45 
                                        f32_3 %70 = OpLoad %53 
                                          f32 %71 = OpDot %69 %70 
                                 Private f32* %72 = OpAccessChain %45 %37 
                                                      OpStore %72 %71 
                                 Private f32* %73 = OpAccessChain %45 %37 
                                          f32 %74 = OpLoad %73 
                                          f32 %75 = OpFNegate %74 
                                 Private f32* %76 = OpAccessChain %9 %37 
                                          f32 %77 = OpLoad %76 
                                          f32 %78 = OpFAdd %75 %77 
                                 Private f32* %79 = OpAccessChain %9 %37 
                                                      OpStore %79 %78 
                                 Uniform f32* %81 = OpAccessChain %21 %23 %80 
                                          f32 %82 = OpLoad %81 
                                 Private f32* %83 = OpAccessChain %9 %37 
                                          f32 %84 = OpLoad %83 
                                          f32 %85 = OpFMul %82 %84 
                                 Private f32* %86 = OpAccessChain %45 %37 
                                          f32 %87 = OpLoad %86 
                                          f32 %88 = OpFAdd %85 %87 
                                 Private f32* %89 = OpAccessChain %9 %37 
                                                      OpStore %89 %88 
                                 Private f32* %90 = OpAccessChain %9 %37 
                                          f32 %91 = OpLoad %90 
                                 Uniform f32* %93 = OpAccessChain %21 %92 %55 
                                          f32 %94 = OpLoad %93 
                                          f32 %95 = OpFMul %91 %94 
                                 Uniform f32* %96 = OpAccessChain %21 %92 %80 
                                          f32 %97 = OpLoad %96 
                                          f32 %98 = OpFAdd %95 %97 
                                 Private f32* %99 = OpAccessChain %9 %37 
                                                      OpStore %99 %98 
                                Private f32* %100 = OpAccessChain %9 %37 
                                         f32 %101 = OpLoad %100 
                                         f32 %104 = OpExtInst %1 43 %101 %102 %103 
                                Private f32* %105 = OpAccessChain %9 %37 
                                                      OpStore %105 %104 
                                       f32_3 %106 = OpLoad vs_TEXCOORD2 
                                       f32_3 %107 = OpVectorShuffle %106 %106 1 1 1 
                              Uniform f32_4* %109 = OpAccessChain %21 %108 %60 
                                       f32_4 %110 = OpLoad %109 
                                       f32_3 %111 = OpVectorShuffle %110 %110 0 1 2 
                                       f32_3 %112 = OpFMul %107 %111 
                                                      OpStore %45 %112 
                              Uniform f32_4* %113 = OpAccessChain %21 %108 %48 
                                       f32_4 %114 = OpLoad %113 
                                       f32_3 %115 = OpVectorShuffle %114 %114 0 1 2 
                                       f32_3 %116 = OpLoad vs_TEXCOORD2 
                                       f32_3 %117 = OpVectorShuffle %116 %116 0 0 0 
                                       f32_3 %118 = OpFMul %115 %117 
                                       f32_3 %119 = OpLoad %45 
                                       f32_3 %120 = OpFAdd %118 %119 
                                                      OpStore %45 %120 
                              Uniform f32_4* %121 = OpAccessChain %21 %108 %65 
                                       f32_4 %122 = OpLoad %121 
                                       f32_3 %123 = OpVectorShuffle %122 %122 0 1 2 
                                       f32_3 %124 = OpLoad vs_TEXCOORD2 
                                       f32_3 %125 = OpVectorShuffle %124 %124 2 2 2 
                                       f32_3 %126 = OpFMul %123 %125 
                                       f32_3 %127 = OpLoad %45 
                                       f32_3 %128 = OpFAdd %126 %127 
                                                      OpStore %45 %128 
                                       f32_3 %129 = OpLoad %45 
                              Uniform f32_4* %131 = OpAccessChain %21 %108 %130 
                                       f32_4 %132 = OpLoad %131 
                                       f32_3 %133 = OpVectorShuffle %132 %132 0 1 2 
                                       f32_3 %134 = OpFAdd %129 %133 
                                                      OpStore %45 %134 
                                       f32_3 %138 = OpLoad %45 
                                       f32_2 %139 = OpVectorShuffle %138 %138 0 1 
                                Private f32* %140 = OpAccessChain %45 %55 
                                         f32 %141 = OpLoad %140 
                                         f32 %142 = OpCompositeExtract %139 0 
                                         f32 %143 = OpCompositeExtract %139 1 
                                       f32_3 %144 = OpCompositeConstruct %142 %143 %141 
                                                      OpStore %136 %144 
                         read_only Texture2D %148 = OpLoad %147 
                                     sampler %152 = OpLoad %151 
                  read_only Texture2DSampled %155 = OpSampledImage %148 %152 
                                       f32_3 %156 = OpLoad %136 
                                         f32 %157 = OpCompositeExtract %156 2 
                                         f32 %158 = OpImageSampleDrefExplicitLod %155 %156 %157 Lod %6 
                                Private f32* %159 = OpAccessChain %45 %37 
                                                      OpStore %159 %158 
                                Uniform f32* %161 = OpAccessChain %21 %92 %37 
                                         f32 %162 = OpLoad %161 
                                         f32 %163 = OpFNegate %162 
                                         f32 %164 = OpFAdd %163 %103 
                                Private f32* %165 = OpAccessChain %160 %37 
                                                      OpStore %165 %164 
                                Private f32* %166 = OpAccessChain %45 %37 
                                         f32 %167 = OpLoad %166 
                                Private f32* %168 = OpAccessChain %160 %37 
                                         f32 %169 = OpLoad %168 
                                         f32 %170 = OpFMul %167 %169 
                                Uniform f32* %171 = OpAccessChain %21 %92 %37 
                                         f32 %172 = OpLoad %171 
                                         f32 %173 = OpFAdd %170 %172 
                                Private f32* %174 = OpAccessChain %160 %37 
                                                      OpStore %174 %173 
                                Private f32* %176 = OpAccessChain %160 %37 
                                         f32 %177 = OpLoad %176 
                                         f32 %178 = OpFNegate %177 
                                         f32 %179 = OpFAdd %178 %103 
                                Private f32* %180 = OpAccessChain %175 %37 
                                                      OpStore %180 %179 
                                Private f32* %181 = OpAccessChain %9 %37 
                                         f32 %182 = OpLoad %181 
                                Private f32* %183 = OpAccessChain %175 %37 
                                         f32 %184 = OpLoad %183 
                                         f32 %185 = OpFMul %182 %184 
                                Private f32* %186 = OpAccessChain %160 %37 
                                         f32 %187 = OpLoad %186 
                                         f32 %188 = OpFAdd %185 %187 
                                Private f32* %189 = OpAccessChain %160 %37 
                                                      OpStore %189 %188 
                                       f32_3 %191 = OpLoad vs_TEXCOORD1 
                                       f32_3 %192 = OpLoad vs_TEXCOORD1 
                                         f32 %193 = OpDot %191 %192 
                                Private f32* %194 = OpAccessChain %175 %37 
                                                      OpStore %194 %193 
                                Private f32* %195 = OpAccessChain %175 %37 
                                         f32 %196 = OpLoad %195 
                                         f32 %197 = OpExtInst %1 32 %196 
                                Private f32* %198 = OpAccessChain %175 %37 
                                                      OpStore %198 %197 
                                       f32_3 %199 = OpLoad %175 
                                       f32_3 %200 = OpVectorShuffle %199 %199 0 0 0 
                                       f32_3 %201 = OpLoad vs_TEXCOORD1 
                                       f32_3 %202 = OpFMul %200 %201 
                                                      OpStore %175 %202 
                                       f32_3 %203 = OpLoad %175 
                              Uniform f32_4* %204 = OpAccessChain %21 %60 
                                       f32_4 %205 = OpLoad %204 
                                       f32_3 %206 = OpVectorShuffle %205 %205 0 1 2 
                                         f32 %207 = OpDot %203 %206 
                                Private f32* %208 = OpAccessChain %175 %37 
                                                      OpStore %208 %207 
                                Private f32* %209 = OpAccessChain %175 %37 
                                         f32 %210 = OpLoad %209 
                                         f32 %211 = OpExtInst %1 40 %210 %102 
                                Private f32* %212 = OpAccessChain %175 %37 
                                                      OpStore %212 %211 
                                Uniform f32* %215 = OpAccessChain %21 %214 
                                         f32 %216 = OpLoad %215 
                                         f32 %217 = OpFNegate %216 
                                         f32 %219 = OpFMul %217 %218 
                                Uniform f32* %221 = OpAccessChain %21 %220 
                                         f32 %222 = OpLoad %221 
                                         f32 %223 = OpFAdd %219 %222 
                                                      OpStore %213 %223 
                                         f32 %224 = OpLoad %213 
                                         f32 %225 = OpFNegate %224 
                                Private f32* %226 = OpAccessChain %175 %37 
                                         f32 %227 = OpLoad %226 
                                         f32 %228 = OpFAdd %225 %227 
                                Private f32* %229 = OpAccessChain %175 %37 
                                                      OpStore %229 %228 
                                Uniform f32* %231 = OpAccessChain %21 %214 
                                         f32 %232 = OpLoad %231 
                                         f32 %233 = OpFMul %232 %218 
                                Uniform f32* %234 = OpAccessChain %21 %220 
                                         f32 %235 = OpLoad %234 
                                         f32 %236 = OpFAdd %233 %235 
                                                      OpStore %230 %236 
                                         f32 %237 = OpLoad %213 
                                         f32 %238 = OpFNegate %237 
                                         f32 %239 = OpLoad %230 
                                         f32 %240 = OpFAdd %238 %239 
                                                      OpStore %213 %240 
                                         f32 %241 = OpLoad %213 
                                         f32 %242 = OpFDiv %103 %241 
                                                      OpStore %213 %242 
                                         f32 %243 = OpLoad %213 
                                Private f32* %244 = OpAccessChain %175 %37 
                                         f32 %245 = OpLoad %244 
                                         f32 %246 = OpFMul %243 %245 
                                Private f32* %247 = OpAccessChain %175 %37 
                                                      OpStore %247 %246 
                                Private f32* %248 = OpAccessChain %175 %37 
                                         f32 %249 = OpLoad %248 
                                         f32 %250 = OpExtInst %1 43 %249 %102 %103 
                                Private f32* %251 = OpAccessChain %175 %37 
                                                      OpStore %251 %250 
                                Private f32* %252 = OpAccessChain %175 %37 
                                         f32 %253 = OpLoad %252 
                                         f32 %255 = OpFMul %253 %254 
                                         f32 %257 = OpFAdd %255 %256 
                                                      OpStore %213 %257 
                                Private f32* %258 = OpAccessChain %175 %37 
                                         f32 %259 = OpLoad %258 
                                Private f32* %260 = OpAccessChain %175 %37 
                                         f32 %261 = OpLoad %260 
                                         f32 %262 = OpFMul %259 %261 
                                Private f32* %263 = OpAccessChain %175 %37 
                                                      OpStore %263 %262 
                                Private f32* %264 = OpAccessChain %175 %37 
                                         f32 %265 = OpLoad %264 
                                         f32 %266 = OpLoad %213 
                                         f32 %267 = OpFMul %265 %266 
                                Private f32* %268 = OpAccessChain %175 %37 
                                                      OpStore %268 %267 
                                Private f32* %269 = OpAccessChain %160 %37 
                                         f32 %270 = OpLoad %269 
                                Private f32* %271 = OpAccessChain %175 %37 
                                         f32 %272 = OpLoad %271 
                                         f32 %273 = OpFMul %270 %272 
                                Private f32* %274 = OpAccessChain %160 %37 
                                                      OpStore %274 %273 
                              Uniform f32_4* %276 = OpAccessChain %21 %275 
                                       f32_4 %277 = OpLoad %276 
                                       f32_3 %278 = OpVectorShuffle %277 %277 0 1 2 
                                       f32_3 %279 = OpFNegate %278 
                              Uniform f32_4* %281 = OpAccessChain %21 %280 
                                       f32_4 %282 = OpLoad %281 
                                       f32_3 %283 = OpVectorShuffle %282 %282 0 1 2 
                                       f32_3 %284 = OpFAdd %279 %283 
                                                      OpStore %175 %284 
                              Uniform f32_4* %285 = OpAccessChain %21 %280 
                                       f32_4 %286 = OpLoad %285 
                                       f32_3 %287 = OpVectorShuffle %286 %286 3 3 3 
                                       f32_3 %288 = OpLoad %175 
                                       f32_3 %289 = OpFMul %287 %288 
                              Uniform f32_4* %290 = OpAccessChain %21 %275 
                                       f32_4 %291 = OpLoad %290 
                                       f32_3 %292 = OpVectorShuffle %291 %291 0 1 2 
                                       f32_3 %293 = OpFAdd %289 %292 
                                                      OpStore %175 %293 
                                       f32_3 %295 = OpLoad %175 
                                       f32_3 %296 = OpFNegate %295 
                              Uniform f32_4* %297 = OpAccessChain %21 %275 
                                       f32_4 %298 = OpLoad %297 
                                       f32_3 %299 = OpVectorShuffle %298 %298 0 1 2 
                                       f32_3 %300 = OpFAdd %296 %299 
                                                      OpStore %294 %300 
                                       f32_3 %301 = OpLoad %160 
                                       f32_3 %302 = OpVectorShuffle %301 %301 0 0 0 
                                       f32_3 %303 = OpLoad %294 
                                       f32_3 %304 = OpFMul %302 %303 
                                       f32_3 %305 = OpLoad %175 
                                       f32_3 %306 = OpFAdd %304 %305 
                                                      OpStore %160 %306 
                                       f32_3 %307 = OpLoad vs_TEXCOORD1 
                                       f32_4 %308 = OpLoad %9 
                                       f32_4 %309 = OpVectorShuffle %308 %307 4 5 6 3 
                                                      OpStore %9 %309 
                                Private f32* %310 = OpAccessChain %9 %80 
                                                      OpStore %310 %103 
                              Uniform f32_4* %311 = OpAccessChain %21 %65 
                                       f32_4 %312 = OpLoad %311 
                                       f32_4 %313 = OpLoad %9 
                                         f32 %314 = OpDot %312 %313 
                                Private f32* %315 = OpAccessChain %294 %37 
                                                      OpStore %315 %314 
                              Uniform f32_4* %316 = OpAccessChain %21 %130 
                                       f32_4 %317 = OpLoad %316 
                                       f32_4 %318 = OpLoad %9 
                                         f32 %319 = OpDot %317 %318 
                                Private f32* %320 = OpAccessChain %294 %63 
                                                      OpStore %320 %319 
                              Uniform f32_4* %322 = OpAccessChain %21 %321 
                                       f32_4 %323 = OpLoad %322 
                                       f32_4 %324 = OpLoad %9 
                                         f32 %325 = OpDot %323 %324 
                                Private f32* %326 = OpAccessChain %294 %55 
                                                      OpStore %326 %325 
                                       f32_3 %327 = OpLoad %294 
                                       f32_3 %329 = OpLoad vs_TEXCOORD3 
                                       f32_3 %330 = OpFAdd %327 %329 
                                                      OpStore %294 %330 
                                       f32_3 %331 = OpLoad %294 
                                       f32_3 %333 = OpExtInst %1 40 %331 %332 
                                                      OpStore %294 %333 
                                       f32_3 %334 = OpLoad %294 
                                       f32_3 %335 = OpExtInst %1 30 %334 
                                       f32_4 %336 = OpLoad %9 
                                       f32_4 %337 = OpVectorShuffle %336 %335 4 5 6 3 
                                                      OpStore %9 %337 
                                       f32_4 %338 = OpLoad %9 
                                       f32_3 %339 = OpVectorShuffle %338 %338 0 1 2 
                                       f32_3 %342 = OpFMul %339 %341 
                                       f32_4 %343 = OpLoad %9 
                                       f32_4 %344 = OpVectorShuffle %343 %342 4 5 6 3 
                                                      OpStore %9 %344 
                                       f32_4 %345 = OpLoad %9 
                                       f32_3 %346 = OpVectorShuffle %345 %345 0 1 2 
                                       f32_3 %347 = OpExtInst %1 29 %346 
                                       f32_4 %348 = OpLoad %9 
                                       f32_4 %349 = OpVectorShuffle %348 %347 4 5 6 3 
                                                      OpStore %9 %349 
                                       f32_4 %350 = OpLoad %9 
                                       f32_3 %351 = OpVectorShuffle %350 %350 0 1 2 
                                       f32_3 %354 = OpFMul %351 %353 
                                       f32_3 %357 = OpFAdd %354 %356 
                                       f32_4 %358 = OpLoad %9 
                                       f32_4 %359 = OpVectorShuffle %358 %357 4 5 6 3 
                                                      OpStore %9 %359 
                                       f32_4 %360 = OpLoad %9 
                                       f32_3 %361 = OpVectorShuffle %360 %360 0 1 2 
                                       f32_3 %362 = OpExtInst %1 40 %361 %332 
                                       f32_4 %363 = OpLoad %9 
                                       f32_4 %364 = OpVectorShuffle %363 %362 4 5 6 3 
                                                      OpStore %9 %364 
                         read_only Texture2D %367 = OpLoad %366 
                                     sampler %369 = OpLoad %368 
                  read_only Texture2DSampled %371 = OpSampledImage %367 %369 
                                       f32_2 %374 = OpLoad vs_TEXCOORD0 
                                       f32_4 %375 = OpImageSampleImplicitLod %371 %374 
                                                      OpStore %365 %375 
                                       f32_4 %376 = OpLoad %365 
                                       f32_3 %377 = OpVectorShuffle %376 %376 0 1 2 
                              Uniform f32_4* %379 = OpAccessChain %21 %378 
                                       f32_4 %380 = OpLoad %379 
                                       f32_3 %381 = OpVectorShuffle %380 %380 0 1 2 
                                       f32_3 %382 = OpFMul %377 %381 
                                                      OpStore %294 %382 
                                Private f32* %385 = OpAccessChain %365 %80 
                                         f32 %386 = OpLoad %385 
                                Uniform f32* %387 = OpAccessChain %21 %378 %80 
                                         f32 %388 = OpLoad %387 
                                         f32 %389 = OpFMul %386 %388 
                                 Output f32* %391 = OpAccessChain %384 %80 
                                                      OpStore %391 %389 
                                       f32_4 %393 = OpLoad %9 
                                       f32_3 %394 = OpVectorShuffle %393 %393 0 1 2 
                                       f32_3 %395 = OpLoad %294 
                                       f32_3 %396 = OpFMul %394 %395 
                                                      OpStore %392 %396 
                                       f32_3 %397 = OpLoad %294 
                              Uniform f32_4* %399 = OpAccessChain %21 %398 
                                       f32_4 %400 = OpLoad %399 
                                       f32_3 %401 = OpVectorShuffle %400 %400 0 1 2 
                                       f32_3 %402 = OpFMul %397 %401 
                                                      OpStore %294 %402 
                                       f32_3 %403 = OpLoad %294 
                                       f32_3 %404 = OpLoad %160 
                                       f32_3 %405 = OpFMul %403 %404 
                                       f32_3 %406 = OpLoad %392 
                                       f32_3 %407 = OpFAdd %405 %406 
                                       f32_4 %408 = OpLoad %384 
                                       f32_4 %409 = OpVectorShuffle %408 %407 4 5 6 3 
                                                      OpStore %384 %409 
                                                      OpReturn
                                                      OpFunctionEnd
"
}
SubProgram "vulkan hw_tier01 " {
Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "SHADOWS_SCREEN" }
"; SPIR-V
; Version: 1.0
; Generator: Khronos Glslang Reference Front End; 6
; Bound: 214
; Schema: 0
                                                      OpCapability Shader 
                                               %1 = OpExtInstImport "GLSL.std.450" 
                                                      OpMemoryModel Logical GLSL450 
                                                      OpEntryPoint Vertex %4 "main" %11 %53 %87 %97 %113 %117 %155 %195 %204 %207 
                                                      OpName vs_TEXCOORD2 "vs_TEXCOORD2" 
                                                      OpName vs_TEXCOORD0 "vs_TEXCOORD0" 
                                                      OpName vs_TEXCOORD1 "vs_TEXCOORD1" 
                                                      OpName vs_TEXCOORD3 "vs_TEXCOORD3" 
                                                      OpName vs_TEXCOORD5 "vs_TEXCOORD5" 
                                                      OpName vs_TEXCOORD6 "vs_TEXCOORD6" 
                                                      OpDecorate %11 Location 11 
                                                      OpDecorate %16 ArrayStride 16 
                                                      OpDecorate %17 ArrayStride 17 
                                                      OpDecorate %18 ArrayStride 18 
                                                      OpMemberDecorate %19 0 RelaxedPrecision 
                                                      OpMemberDecorate %19 0 Offset 19 
                                                      OpMemberDecorate %19 1 RelaxedPrecision 
                                                      OpMemberDecorate %19 1 Offset 19 
                                                      OpMemberDecorate %19 2 RelaxedPrecision 
                                                      OpMemberDecorate %19 2 Offset 19 
                                                      OpMemberDecorate %19 3 RelaxedPrecision 
                                                      OpMemberDecorate %19 3 Offset 19 
                                                      OpMemberDecorate %19 4 Offset 19 
                                                      OpMemberDecorate %19 5 Offset 19 
                                                      OpMemberDecorate %19 6 Offset 19 
                                                      OpMemberDecorate %19 7 Offset 19 
                                                      OpDecorate %19 Block 
                                                      OpDecorate %21 DescriptorSet 21 
                                                      OpDecorate %21 Binding 21 
                                                      OpDecorate vs_TEXCOORD2 Location 53 
                                                      OpMemberDecorate %85 0 BuiltIn 85 
                                                      OpMemberDecorate %85 1 BuiltIn 85 
                                                      OpMemberDecorate %85 2 BuiltIn 85 
                                                      OpDecorate %85 Block 
                                                      OpDecorate %97 Location 97 
                                                      OpDecorate vs_TEXCOORD0 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD0 Location 113 
                                                      OpDecorate %117 Location 117 
                                                      OpDecorate vs_TEXCOORD1 Location 155 
                                                      OpDecorate %158 RelaxedPrecision 
                                                      OpDecorate %169 RelaxedPrecision 
                                                      OpDecorate %170 RelaxedPrecision 
                                                      OpDecorate %172 RelaxedPrecision 
                                                      OpDecorate %179 RelaxedPrecision 
                                                      OpDecorate %181 RelaxedPrecision 
                                                      OpDecorate %182 RelaxedPrecision 
                                                      OpDecorate %183 RelaxedPrecision 
                                                      OpDecorate %186 RelaxedPrecision 
                                                      OpDecorate %187 RelaxedPrecision 
                                                      OpDecorate %188 RelaxedPrecision 
                                                      OpDecorate %191 RelaxedPrecision 
                                                      OpDecorate %192 RelaxedPrecision 
                                                      OpDecorate %193 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD3 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD3 Location 195 
                                                      OpDecorate %197 RelaxedPrecision 
                                                      OpDecorate %198 RelaxedPrecision 
                                                      OpDecorate %199 RelaxedPrecision 
                                                      OpDecorate %200 RelaxedPrecision 
                                                      OpDecorate %201 RelaxedPrecision 
                                                      OpDecorate %202 RelaxedPrecision 
                                                      OpDecorate %203 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD5 Location 204 
                                                      OpDecorate vs_TEXCOORD6 Location 207 
                                               %2 = OpTypeVoid 
                                               %3 = OpTypeFunction %2 
                                               %6 = OpTypeFloat 32 
                                               %7 = OpTypeVector %6 4 
                                               %8 = OpTypePointer Private %7 
                                Private f32_4* %9 = OpVariable Private 
                                              %10 = OpTypePointer Input %7 
                                 Input f32_4* %11 = OpVariable Input 
                                              %14 = OpTypeInt 32 0 
                                          u32 %15 = OpConstant 4 
                                              %16 = OpTypeArray %7 %15 
                                              %17 = OpTypeArray %7 %15 
                                              %18 = OpTypeArray %7 %15 
                                              %19 = OpTypeStruct %7 %7 %7 %7 %16 %17 %18 %7 
                                              %20 = OpTypePointer Uniform %19 
Uniform struct {f32_4; f32_4; f32_4; f32_4; f32_4[4]; f32_4[4]; f32_4[4]; f32_4;}* %21 = OpVariable Uniform 
                                              %22 = OpTypeInt 32 1 
                                          i32 %23 = OpConstant 4 
                                          i32 %24 = OpConstant 1 
                                              %25 = OpTypePointer Uniform %7 
                                          i32 %29 = OpConstant 0 
                                          i32 %37 = OpConstant 2 
                               Private f32_4* %45 = OpVariable Private 
                                          i32 %47 = OpConstant 3 
                                              %51 = OpTypeVector %6 3 
                                              %52 = OpTypePointer Output %51 
                       Output f32_3* vs_TEXCOORD2 = OpVariable Output 
                                          i32 %65 = OpConstant 6 
                                          u32 %83 = OpConstant 1 
                                              %84 = OpTypeArray %6 %83 
                                              %85 = OpTypeStruct %7 %6 %84 
                                              %86 = OpTypePointer Output %85 
         Output struct {f32_4; f32; f32[1];}* %87 = OpVariable Output 
                                              %95 = OpTypePointer Output %7 
                                 Input f32_4* %97 = OpVariable Input 
                                              %98 = OpTypeVector %6 2 
                                         i32 %101 = OpConstant 7 
                                             %112 = OpTypePointer Output %98 
                       Output f32_2* vs_TEXCOORD0 = OpVariable Output 
                                             %116 = OpTypePointer Input %51 
                                Input f32_3* %117 = OpVariable Input 
                                         i32 %119 = OpConstant 5 
                                         u32 %124 = OpConstant 0 
                                             %125 = OpTypePointer Private %6 
                                         u32 %138 = OpConstant 2 
                                Private f32* %140 = OpVariable Private 
                       Output f32_3* vs_TEXCOORD1 = OpVariable Output 
                                Private f32* %158 = OpVariable Private 
                              Private f32_4* %172 = OpVariable Private 
                                             %178 = OpTypePointer Private %51 
                              Private f32_3* %179 = OpVariable Private 
                       Output f32_3* vs_TEXCOORD3 = OpVariable Output 
                       Output f32_4* vs_TEXCOORD5 = OpVariable Output 
                                         f32 %205 = OpConstant 3.674022E-40 
                                       f32_4 %206 = OpConstantComposite %205 %205 %205 %205 
                       Output f32_4* vs_TEXCOORD6 = OpVariable Output 
                                             %208 = OpTypePointer Output %6 
                                          void %4 = OpFunction None %3 
                                               %5 = OpLabel 
                                        f32_4 %12 = OpLoad %11 
                                        f32_4 %13 = OpVectorShuffle %12 %12 1 1 1 1 
                               Uniform f32_4* %26 = OpAccessChain %21 %23 %24 
                                        f32_4 %27 = OpLoad %26 
                                        f32_4 %28 = OpFMul %13 %27 
                                                      OpStore %9 %28 
                               Uniform f32_4* %30 = OpAccessChain %21 %23 %29 
                                        f32_4 %31 = OpLoad %30 
                                        f32_4 %32 = OpLoad %11 
                                        f32_4 %33 = OpVectorShuffle %32 %32 0 0 0 0 
                                        f32_4 %34 = OpFMul %31 %33 
                                        f32_4 %35 = OpLoad %9 
                                        f32_4 %36 = OpFAdd %34 %35 
                                                      OpStore %9 %36 
                               Uniform f32_4* %38 = OpAccessChain %21 %23 %37 
                                        f32_4 %39 = OpLoad %38 
                                        f32_4 %40 = OpLoad %11 
                                        f32_4 %41 = OpVectorShuffle %40 %40 2 2 2 2 
                                        f32_4 %42 = OpFMul %39 %41 
                                        f32_4 %43 = OpLoad %9 
                                        f32_4 %44 = OpFAdd %42 %43 
                                                      OpStore %9 %44 
                                        f32_4 %46 = OpLoad %9 
                               Uniform f32_4* %48 = OpAccessChain %21 %23 %47 
                                        f32_4 %49 = OpLoad %48 
                                        f32_4 %50 = OpFAdd %46 %49 
                                                      OpStore %45 %50 
                               Uniform f32_4* %54 = OpAccessChain %21 %23 %47 
                                        f32_4 %55 = OpLoad %54 
                                        f32_3 %56 = OpVectorShuffle %55 %55 0 1 2 
                                        f32_4 %57 = OpLoad %11 
                                        f32_3 %58 = OpVectorShuffle %57 %57 3 3 3 
                                        f32_3 %59 = OpFMul %56 %58 
                                        f32_4 %60 = OpLoad %9 
                                        f32_3 %61 = OpVectorShuffle %60 %60 0 1 2 
                                        f32_3 %62 = OpFAdd %59 %61 
                                                      OpStore vs_TEXCOORD2 %62 
                                        f32_4 %63 = OpLoad %45 
                                        f32_4 %64 = OpVectorShuffle %63 %63 1 1 1 1 
                               Uniform f32_4* %66 = OpAccessChain %21 %65 %24 
                                        f32_4 %67 = OpLoad %66 
                                        f32_4 %68 = OpFMul %64 %67 
                                                      OpStore %9 %68 
                               Uniform f32_4* %69 = OpAccessChain %21 %65 %29 
                                        f32_4 %70 = OpLoad %69 
                                        f32_4 %71 = OpLoad %45 
                                        f32_4 %72 = OpVectorShuffle %71 %71 0 0 0 0 
                                        f32_4 %73 = OpFMul %70 %72 
                                        f32_4 %74 = OpLoad %9 
                                        f32_4 %75 = OpFAdd %73 %74 
                                                      OpStore %9 %75 
                               Uniform f32_4* %76 = OpAccessChain %21 %65 %37 
                                        f32_4 %77 = OpLoad %76 
                                        f32_4 %78 = OpLoad %45 
                                        f32_4 %79 = OpVectorShuffle %78 %78 2 2 2 2 
                                        f32_4 %80 = OpFMul %77 %79 
                                        f32_4 %81 = OpLoad %9 
                                        f32_4 %82 = OpFAdd %80 %81 
                                                      OpStore %9 %82 
                               Uniform f32_4* %88 = OpAccessChain %21 %65 %47 
                                        f32_4 %89 = OpLoad %88 
                                        f32_4 %90 = OpLoad %45 
                                        f32_4 %91 = OpVectorShuffle %90 %90 3 3 3 3 
                                        f32_4 %92 = OpFMul %89 %91 
                                        f32_4 %93 = OpLoad %9 
                                        f32_4 %94 = OpFAdd %92 %93 
                                Output f32_4* %96 = OpAccessChain %87 %29 
                                                      OpStore %96 %94 
                                        f32_4 %99 = OpLoad %97 
                                       f32_2 %100 = OpVectorShuffle %99 %99 0 1 
                              Uniform f32_4* %102 = OpAccessChain %21 %101 
                                       f32_4 %103 = OpLoad %102 
                                       f32_2 %104 = OpVectorShuffle %103 %103 0 1 
                                       f32_2 %105 = OpFMul %100 %104 
                              Uniform f32_4* %106 = OpAccessChain %21 %101 
                                       f32_4 %107 = OpLoad %106 
                                       f32_2 %108 = OpVectorShuffle %107 %107 2 3 
                                       f32_2 %109 = OpFAdd %105 %108 
                                       f32_4 %110 = OpLoad %9 
                                       f32_4 %111 = OpVectorShuffle %110 %109 4 5 2 3 
                                                      OpStore %9 %111 
                                       f32_4 %114 = OpLoad %9 
                                       f32_2 %115 = OpVectorShuffle %114 %114 0 1 
                                                      OpStore vs_TEXCOORD0 %115 
                                       f32_3 %118 = OpLoad %117 
                              Uniform f32_4* %120 = OpAccessChain %21 %119 %29 
                                       f32_4 %121 = OpLoad %120 
                                       f32_3 %122 = OpVectorShuffle %121 %121 0 1 2 
                                         f32 %123 = OpDot %118 %122 
                                Private f32* %126 = OpAccessChain %9 %124 
                                                      OpStore %126 %123 
                                       f32_3 %127 = OpLoad %117 
                              Uniform f32_4* %128 = OpAccessChain %21 %119 %24 
                                       f32_4 %129 = OpLoad %128 
                                       f32_3 %130 = OpVectorShuffle %129 %129 0 1 2 
                                         f32 %131 = OpDot %127 %130 
                                Private f32* %132 = OpAccessChain %9 %83 
                                                      OpStore %132 %131 
                                       f32_3 %133 = OpLoad %117 
                              Uniform f32_4* %134 = OpAccessChain %21 %119 %37 
                                       f32_4 %135 = OpLoad %134 
                                       f32_3 %136 = OpVectorShuffle %135 %135 0 1 2 
                                         f32 %137 = OpDot %133 %136 
                                Private f32* %139 = OpAccessChain %9 %138 
                                                      OpStore %139 %137 
                                       f32_4 %141 = OpLoad %9 
                                       f32_3 %142 = OpVectorShuffle %141 %141 0 1 2 
                                       f32_4 %143 = OpLoad %9 
                                       f32_3 %144 = OpVectorShuffle %143 %143 0 1 2 
                                         f32 %145 = OpDot %142 %144 
                                                      OpStore %140 %145 
                                         f32 %146 = OpLoad %140 
                                         f32 %147 = OpExtInst %1 32 %146 
                                                      OpStore %140 %147 
                                         f32 %148 = OpLoad %140 
                                       f32_3 %149 = OpCompositeConstruct %148 %148 %148 
                                       f32_4 %150 = OpLoad %9 
                                       f32_3 %151 = OpVectorShuffle %150 %150 0 1 2 
                                       f32_3 %152 = OpFMul %149 %151 
                                       f32_4 %153 = OpLoad %9 
                                       f32_4 %154 = OpVectorShuffle %153 %152 4 5 6 3 
                                                      OpStore %9 %154 
                                       f32_4 %156 = OpLoad %9 
                                       f32_3 %157 = OpVectorShuffle %156 %156 0 1 2 
                                                      OpStore vs_TEXCOORD1 %157 
                                Private f32* %159 = OpAccessChain %9 %83 
                                         f32 %160 = OpLoad %159 
                                Private f32* %161 = OpAccessChain %9 %83 
                                         f32 %162 = OpLoad %161 
                                         f32 %163 = OpFMul %160 %162 
                                                      OpStore %158 %163 
                                Private f32* %164 = OpAccessChain %9 %124 
                                         f32 %165 = OpLoad %164 
                                Private f32* %166 = OpAccessChain %9 %124 
                                         f32 %167 = OpLoad %166 
                                         f32 %168 = OpFMul %165 %167 
                                         f32 %169 = OpLoad %158 
                                         f32 %170 = OpFNegate %169 
                                         f32 %171 = OpFAdd %168 %170 
                                                      OpStore %158 %171 
                                       f32_4 %173 = OpLoad %9 
                                       f32_4 %174 = OpVectorShuffle %173 %173 1 2 2 0 
                                       f32_4 %175 = OpLoad %9 
                                       f32_4 %176 = OpVectorShuffle %175 %175 0 1 2 2 
                                       f32_4 %177 = OpFMul %174 %176 
                                                      OpStore %172 %177 
                              Uniform f32_4* %180 = OpAccessChain %21 %29 
                                       f32_4 %181 = OpLoad %180 
                                       f32_4 %182 = OpLoad %172 
                                         f32 %183 = OpDot %181 %182 
                                Private f32* %184 = OpAccessChain %179 %124 
                                                      OpStore %184 %183 
                              Uniform f32_4* %185 = OpAccessChain %21 %24 
                                       f32_4 %186 = OpLoad %185 
                                       f32_4 %187 = OpLoad %172 
                                         f32 %188 = OpDot %186 %187 
                                Private f32* %189 = OpAccessChain %179 %83 
                                                      OpStore %189 %188 
                              Uniform f32_4* %190 = OpAccessChain %21 %37 
                                       f32_4 %191 = OpLoad %190 
                                       f32_4 %192 = OpLoad %172 
                                         f32 %193 = OpDot %191 %192 
                                Private f32* %194 = OpAccessChain %179 %138 
                                                      OpStore %194 %193 
                              Uniform f32_4* %196 = OpAccessChain %21 %47 
                                       f32_4 %197 = OpLoad %196 
                                       f32_3 %198 = OpVectorShuffle %197 %197 0 1 2 
                                         f32 %199 = OpLoad %158 
                                       f32_3 %200 = OpCompositeConstruct %199 %199 %199 
                                       f32_3 %201 = OpFMul %198 %200 
                                       f32_3 %202 = OpLoad %179 
                                       f32_3 %203 = OpFAdd %201 %202 
                                                      OpStore vs_TEXCOORD3 %203 
                                                      OpStore vs_TEXCOORD5 %206 
                                                      OpStore vs_TEXCOORD6 %206 
                                 Output f32* %209 = OpAccessChain %87 %29 %83 
                                         f32 %210 = OpLoad %209 
                                         f32 %211 = OpFNegate %210 
                                 Output f32* %212 = OpAccessChain %87 %29 %83 
                                                      OpStore %212 %211 
                                                      OpReturn
                                                      OpFunctionEnd
; SPIR-V
; Version: 1.0
; Generator: Khronos Glslang Reference Front End; 6
; Bound: 411
; Schema: 0
                                                      OpCapability Shader 
                                               %1 = OpExtInstImport "GLSL.std.450" 
                                                      OpMemoryModel Logical GLSL450 
                                                      OpEntryPoint Fragment %4 "main" %12 %190 %328 %373 %384 
                                                      OpExecutionMode %4 OriginUpperLeft 
                                                      OpName vs_TEXCOORD2 "vs_TEXCOORD2" 
                                                      OpName vs_TEXCOORD1 "vs_TEXCOORD1" 
                                                      OpName vs_TEXCOORD3 "vs_TEXCOORD3" 
                                                      OpName vs_TEXCOORD0 "vs_TEXCOORD0" 
                                                      OpDecorate vs_TEXCOORD2 Location 12 
                                                      OpDecorate %16 ArrayStride 16 
                                                      OpDecorate %18 ArrayStride 18 
                                                      OpMemberDecorate %19 0 Offset 19 
                                                      OpMemberDecorate %19 1 RelaxedPrecision 
                                                      OpMemberDecorate %19 1 Offset 19 
                                                      OpMemberDecorate %19 2 RelaxedPrecision 
                                                      OpMemberDecorate %19 2 Offset 19 
                                                      OpMemberDecorate %19 3 RelaxedPrecision 
                                                      OpMemberDecorate %19 3 Offset 19 
                                                      OpMemberDecorate %19 4 RelaxedPrecision 
                                                      OpMemberDecorate %19 4 Offset 19 
                                                      OpMemberDecorate %19 5 Offset 19 
                                                      OpMemberDecorate %19 6 RelaxedPrecision 
                                                      OpMemberDecorate %19 6 Offset 19 
                                                      OpMemberDecorate %19 7 Offset 19 
                                                      OpMemberDecorate %19 8 Offset 19 
                                                      OpMemberDecorate %19 9 RelaxedPrecision 
                                                      OpMemberDecorate %19 9 Offset 19 
                                                      OpMemberDecorate %19 10 RelaxedPrecision 
                                                      OpMemberDecorate %19 10 Offset 19 
                                                      OpMemberDecorate %19 11 RelaxedPrecision 
                                                      OpMemberDecorate %19 11 Offset 19 
                                                      OpMemberDecorate %19 12 RelaxedPrecision 
                                                      OpMemberDecorate %19 12 Offset 19 
                                                      OpMemberDecorate %19 13 RelaxedPrecision 
                                                      OpMemberDecorate %19 13 Offset 19 
                                                      OpMemberDecorate %19 14 RelaxedPrecision 
                                                      OpMemberDecorate %19 14 Offset 19 
                                                      OpDecorate %19 Block 
                                                      OpDecorate %21 DescriptorSet 21 
                                                      OpDecorate %21 Binding 21 
                                                      OpDecorate %94 RelaxedPrecision 
                                                      OpDecorate %97 RelaxedPrecision 
                                                      OpDecorate %147 DescriptorSet 147 
                                                      OpDecorate %147 Binding 147 
                                                      OpDecorate %151 DescriptorSet 151 
                                                      OpDecorate %151 Binding 151 
                                                      OpDecorate %160 RelaxedPrecision 
                                                      OpDecorate %162 RelaxedPrecision 
                                                      OpDecorate %163 RelaxedPrecision 
                                                      OpDecorate %164 RelaxedPrecision 
                                                      OpDecorate %169 RelaxedPrecision 
                                                      OpDecorate %172 RelaxedPrecision 
                                                      OpDecorate %175 RelaxedPrecision 
                                                      OpDecorate %177 RelaxedPrecision 
                                                      OpDecorate %178 RelaxedPrecision 
                                                      OpDecorate %179 RelaxedPrecision 
                                                      OpDecorate %184 RelaxedPrecision 
                                                      OpDecorate %187 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD1 Location 190 
                                                      OpDecorate %196 RelaxedPrecision 
                                                      OpDecorate %197 RelaxedPrecision 
                                                      OpDecorate %199 RelaxedPrecision 
                                                      OpDecorate %200 RelaxedPrecision 
                                                      OpDecorate %203 RelaxedPrecision 
                                                      OpDecorate %205 RelaxedPrecision 
                                                      OpDecorate %206 RelaxedPrecision 
                                                      OpDecorate %207 RelaxedPrecision 
                                                      OpDecorate %210 RelaxedPrecision 
                                                      OpDecorate %211 RelaxedPrecision 
                                                      OpDecorate %213 RelaxedPrecision 
                                                      OpDecorate %216 RelaxedPrecision 
                                                      OpDecorate %217 RelaxedPrecision 
                                                      OpDecorate %219 RelaxedPrecision 
                                                      OpDecorate %222 RelaxedPrecision 
                                                      OpDecorate %223 RelaxedPrecision 
                                                      OpDecorate %224 RelaxedPrecision 
                                                      OpDecorate %225 RelaxedPrecision 
                                                      OpDecorate %227 RelaxedPrecision 
                                                      OpDecorate %228 RelaxedPrecision 
                                                      OpDecorate %230 RelaxedPrecision 
                                                      OpDecorate %232 RelaxedPrecision 
                                                      OpDecorate %233 RelaxedPrecision 
                                                      OpDecorate %235 RelaxedPrecision 
                                                      OpDecorate %236 RelaxedPrecision 
                                                      OpDecorate %237 RelaxedPrecision 
                                                      OpDecorate %238 RelaxedPrecision 
                                                      OpDecorate %239 RelaxedPrecision 
                                                      OpDecorate %240 RelaxedPrecision 
                                                      OpDecorate %241 RelaxedPrecision 
                                                      OpDecorate %242 RelaxedPrecision 
                                                      OpDecorate %243 RelaxedPrecision 
                                                      OpDecorate %245 RelaxedPrecision 
                                                      OpDecorate %246 RelaxedPrecision 
                                                      OpDecorate %249 RelaxedPrecision 
                                                      OpDecorate %250 RelaxedPrecision 
                                                      OpDecorate %253 RelaxedPrecision 
                                                      OpDecorate %255 RelaxedPrecision 
                                                      OpDecorate %257 RelaxedPrecision 
                                                      OpDecorate %259 RelaxedPrecision 
                                                      OpDecorate %261 RelaxedPrecision 
                                                      OpDecorate %262 RelaxedPrecision 
                                                      OpDecorate %265 RelaxedPrecision 
                                                      OpDecorate %266 RelaxedPrecision 
                                                      OpDecorate %267 RelaxedPrecision 
                                                      OpDecorate %270 RelaxedPrecision 
                                                      OpDecorate %272 RelaxedPrecision 
                                                      OpDecorate %273 RelaxedPrecision 
                                                      OpDecorate %277 RelaxedPrecision 
                                                      OpDecorate %278 RelaxedPrecision 
                                                      OpDecorate %279 RelaxedPrecision 
                                                      OpDecorate %282 RelaxedPrecision 
                                                      OpDecorate %283 RelaxedPrecision 
                                                      OpDecorate %284 RelaxedPrecision 
                                                      OpDecorate %286 RelaxedPrecision 
                                                      OpDecorate %287 RelaxedPrecision 
                                                      OpDecorate %288 RelaxedPrecision 
                                                      OpDecorate %289 RelaxedPrecision 
                                                      OpDecorate %291 RelaxedPrecision 
                                                      OpDecorate %292 RelaxedPrecision 
                                                      OpDecorate %293 RelaxedPrecision 
                                                      OpDecorate %294 RelaxedPrecision 
                                                      OpDecorate %295 RelaxedPrecision 
                                                      OpDecorate %296 RelaxedPrecision 
                                                      OpDecorate %298 RelaxedPrecision 
                                                      OpDecorate %299 RelaxedPrecision 
                                                      OpDecorate %300 RelaxedPrecision 
                                                      OpDecorate %301 RelaxedPrecision 
                                                      OpDecorate %302 RelaxedPrecision 
                                                      OpDecorate %303 RelaxedPrecision 
                                                      OpDecorate %304 RelaxedPrecision 
                                                      OpDecorate %305 RelaxedPrecision 
                                                      OpDecorate %306 RelaxedPrecision 
                                                      OpDecorate %312 RelaxedPrecision 
                                                      OpDecorate %317 RelaxedPrecision 
                                                      OpDecorate %323 RelaxedPrecision 
                                                      OpDecorate %327 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD3 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD3 Location 328 
                                                      OpDecorate %329 RelaxedPrecision 
                                                      OpDecorate %330 RelaxedPrecision 
                                                      OpDecorate %331 RelaxedPrecision 
                                                      OpDecorate %333 RelaxedPrecision 
                                                      OpDecorate %334 RelaxedPrecision 
                                                      OpDecorate %335 RelaxedPrecision 
                                                      OpDecorate %365 RelaxedPrecision 
                                                      OpDecorate %366 RelaxedPrecision 
                                                      OpDecorate %366 DescriptorSet 366 
                                                      OpDecorate %366 Binding 366 
                                                      OpDecorate %367 RelaxedPrecision 
                                                      OpDecorate %368 RelaxedPrecision 
                                                      OpDecorate %368 DescriptorSet 368 
                                                      OpDecorate %368 Binding 368 
                                                      OpDecorate %369 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD0 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD0 Location 373 
                                                      OpDecorate %374 RelaxedPrecision 
                                                      OpDecorate %375 RelaxedPrecision 
                                                      OpDecorate %376 RelaxedPrecision 
                                                      OpDecorate %377 RelaxedPrecision 
                                                      OpDecorate %380 RelaxedPrecision 
                                                      OpDecorate %381 RelaxedPrecision 
                                                      OpDecorate %382 RelaxedPrecision 
                                                      OpDecorate %384 RelaxedPrecision 
                                                      OpDecorate %384 Location 384 
                                                      OpDecorate %386 RelaxedPrecision 
                                                      OpDecorate %388 RelaxedPrecision 
                                                      OpDecorate %389 RelaxedPrecision 
                                                      OpDecorate %392 RelaxedPrecision 
                                                      OpDecorate %395 RelaxedPrecision 
                                                      OpDecorate %397 RelaxedPrecision 
                                                      OpDecorate %400 RelaxedPrecision 
                                                      OpDecorate %401 RelaxedPrecision 
                                                      OpDecorate %402 RelaxedPrecision 
                                                      OpDecorate %403 RelaxedPrecision 
                                                      OpDecorate %404 RelaxedPrecision 
                                                      OpDecorate %405 RelaxedPrecision 
                                                      OpDecorate %406 RelaxedPrecision 
                                                      OpDecorate %407 RelaxedPrecision 
                                               %2 = OpTypeVoid 
                                               %3 = OpTypeFunction %2 
                                               %6 = OpTypeFloat 32 
                                               %7 = OpTypeVector %6 4 
                                               %8 = OpTypePointer Private %7 
                                Private f32_4* %9 = OpVariable Private 
                                              %10 = OpTypeVector %6 3 
                                              %11 = OpTypePointer Input %10 
                        Input f32_3* vs_TEXCOORD2 = OpVariable Input 
                                              %14 = OpTypeInt 32 0 
                                          u32 %15 = OpConstant 16 
                                              %16 = OpTypeArray %7 %15 
                                          u32 %17 = OpConstant 4 
                                              %18 = OpTypeArray %7 %17 
                                              %19 = OpTypeStruct %10 %7 %7 %7 %7 %16 %7 %7 %18 %7 %7 %7 %7 %6 %6 
                                              %20 = OpTypePointer Uniform %19 
Uniform struct {f32_3; f32_4; f32_4; f32_4; f32_4; f32_4[16]; f32_4; f32_4; f32_4[4]; f32_4; f32_4; f32_4; f32_4; f32; f32;}* %21 = OpVariable Uniform 
                                              %22 = OpTypeInt 32 1 
                                          i32 %23 = OpConstant 7 
                                              %24 = OpTypePointer Uniform %7 
                                          u32 %37 = OpConstant 0 
                                              %38 = OpTypePointer Private %6 
                                              %44 = OpTypePointer Private %10 
                               Private f32_3* %45 = OpVariable Private 
                                          i32 %48 = OpConstant 0 
                                              %49 = OpTypePointer Uniform %10 
                               Private f32_3* %53 = OpVariable Private 
                                          i32 %54 = OpConstant 8 
                                          u32 %55 = OpConstant 2 
                                              %56 = OpTypePointer Uniform %6 
                                          i32 %60 = OpConstant 1 
                                          u32 %63 = OpConstant 1 
                                          i32 %65 = OpConstant 2 
                                          u32 %80 = OpConstant 3 
                                          i32 %92 = OpConstant 6 
                                         f32 %102 = OpConstant 3.674022E-40 
                                         f32 %103 = OpConstant 3.674022E-40 
                                         i32 %108 = OpConstant 5 
                                         i32 %130 = OpConstant 3 
                                             %135 = OpTypePointer Function %10 
                                             %137 = OpTypeVector %6 2 
                                             %145 = OpTypeImage %6 Dim2D 0 0 0 1 Unknown 
                                             %146 = OpTypePointer UniformConstant %145 
        UniformConstant read_only Texture2D* %147 = OpVariable UniformConstant 
                                             %149 = OpTypeSampler 
                                             %150 = OpTypePointer UniformConstant %149 
                    UniformConstant sampler* %151 = OpVariable UniformConstant 
                                             %153 = OpTypeImage %6 Dim2D 1 0 0 1 Unknown 
                                             %154 = OpTypeSampledImage %153 
                              Private f32_3* %160 = OpVariable Private 
                              Private f32_3* %175 = OpVariable Private 
                        Input f32_3* vs_TEXCOORD1 = OpVariable Input 
                                Private f32* %213 = OpVariable Private 
                                         i32 %214 = OpConstant 14 
                                         f32 %218 = OpConstant 3.674022E-40 
                                         i32 %220 = OpConstant 13 
                                Private f32* %230 = OpVariable Private 
                                         f32 %254 = OpConstant 3.674022E-40 
                                         f32 %256 = OpConstant 3.674022E-40 
                                         i32 %275 = OpConstant 11 
                                         i32 %280 = OpConstant 12 
                              Private f32_3* %294 = OpVariable Private 
                                         i32 %321 = OpConstant 4 
                        Input f32_3* vs_TEXCOORD3 = OpVariable Input 
                                       f32_3 %332 = OpConstantComposite %102 %102 %102 
                                         f32 %340 = OpConstant 3.674022E-40 
                                       f32_3 %341 = OpConstantComposite %340 %340 %340 
                                         f32 %352 = OpConstant 3.674022E-40 
                                       f32_3 %353 = OpConstantComposite %352 %352 %352 
                                         f32 %355 = OpConstant 3.674022E-40 
                                       f32_3 %356 = OpConstantComposite %355 %355 %355 
                              Private f32_4* %365 = OpVariable Private 
        UniformConstant read_only Texture2D* %366 = OpVariable UniformConstant 
                    UniformConstant sampler* %368 = OpVariable UniformConstant 
                                             %370 = OpTypeSampledImage %145 
                                             %372 = OpTypePointer Input %137 
                        Input f32_2* vs_TEXCOORD0 = OpVariable Input 
                                         i32 %378 = OpConstant 10 
                                             %383 = OpTypePointer Output %7 
                               Output f32_4* %384 = OpVariable Output 
                                             %390 = OpTypePointer Output %6 
                              Private f32_3* %392 = OpVariable Private 
                                         i32 %398 = OpConstant 9 
                                          void %4 = OpFunction None %3 
                                               %5 = OpLabel 
                             Function f32_3* %136 = OpVariable Function 
                                        f32_3 %13 = OpLoad vs_TEXCOORD2 
                               Uniform f32_4* %25 = OpAccessChain %21 %23 
                                        f32_4 %26 = OpLoad %25 
                                        f32_3 %27 = OpVectorShuffle %26 %26 0 1 2 
                                        f32_3 %28 = OpFNegate %27 
                                        f32_3 %29 = OpFAdd %13 %28 
                                        f32_4 %30 = OpLoad %9 
                                        f32_4 %31 = OpVectorShuffle %30 %29 4 5 6 3 
                                                      OpStore %9 %31 
                                        f32_4 %32 = OpLoad %9 
                                        f32_3 %33 = OpVectorShuffle %32 %32 0 1 2 
                                        f32_4 %34 = OpLoad %9 
                                        f32_3 %35 = OpVectorShuffle %34 %34 0 1 2 
                                          f32 %36 = OpDot %33 %35 
                                 Private f32* %39 = OpAccessChain %9 %37 
                                                      OpStore %39 %36 
                                 Private f32* %40 = OpAccessChain %9 %37 
                                          f32 %41 = OpLoad %40 
                                          f32 %42 = OpExtInst %1 31 %41 
                                 Private f32* %43 = OpAccessChain %9 %37 
                                                      OpStore %43 %42 
                                        f32_3 %46 = OpLoad vs_TEXCOORD2 
                                        f32_3 %47 = OpFNegate %46 
                               Uniform f32_3* %50 = OpAccessChain %21 %48 
                                        f32_3 %51 = OpLoad %50 
                                        f32_3 %52 = OpFAdd %47 %51 
                                                      OpStore %45 %52 
                                 Uniform f32* %57 = OpAccessChain %21 %54 %48 %55 
                                          f32 %58 = OpLoad %57 
                                 Private f32* %59 = OpAccessChain %53 %37 
                                                      OpStore %59 %58 
                                 Uniform f32* %61 = OpAccessChain %21 %54 %60 %55 
                                          f32 %62 = OpLoad %61 
                                 Private f32* %64 = OpAccessChain %53 %63 
                                                      OpStore %64 %62 
                                 Uniform f32* %66 = OpAccessChain %21 %54 %65 %55 
                                          f32 %67 = OpLoad %66 
                                 Private f32* %68 = OpAccessChain %53 %55 
                                                      OpStore %68 %67 
                                        f32_3 %69 = OpLoad %45 
                                        f32_3 %70 = OpLoad %53 
                                          f32 %71 = OpDot %69 %70 
                                 Private f32* %72 = OpAccessChain %45 %37 
                                                      OpStore %72 %71 
                                 Private f32* %73 = OpAccessChain %45 %37 
                                          f32 %74 = OpLoad %73 
                                          f32 %75 = OpFNegate %74 
                                 Private f32* %76 = OpAccessChain %9 %37 
                                          f32 %77 = OpLoad %76 
                                          f32 %78 = OpFAdd %75 %77 
                                 Private f32* %79 = OpAccessChain %9 %37 
                                                      OpStore %79 %78 
                                 Uniform f32* %81 = OpAccessChain %21 %23 %80 
                                          f32 %82 = OpLoad %81 
                                 Private f32* %83 = OpAccessChain %9 %37 
                                          f32 %84 = OpLoad %83 
                                          f32 %85 = OpFMul %82 %84 
                                 Private f32* %86 = OpAccessChain %45 %37 
                                          f32 %87 = OpLoad %86 
                                          f32 %88 = OpFAdd %85 %87 
                                 Private f32* %89 = OpAccessChain %9 %37 
                                                      OpStore %89 %88 
                                 Private f32* %90 = OpAccessChain %9 %37 
                                          f32 %91 = OpLoad %90 
                                 Uniform f32* %93 = OpAccessChain %21 %92 %55 
                                          f32 %94 = OpLoad %93 
                                          f32 %95 = OpFMul %91 %94 
                                 Uniform f32* %96 = OpAccessChain %21 %92 %80 
                                          f32 %97 = OpLoad %96 
                                          f32 %98 = OpFAdd %95 %97 
                                 Private f32* %99 = OpAccessChain %9 %37 
                                                      OpStore %99 %98 
                                Private f32* %100 = OpAccessChain %9 %37 
                                         f32 %101 = OpLoad %100 
                                         f32 %104 = OpExtInst %1 43 %101 %102 %103 
                                Private f32* %105 = OpAccessChain %9 %37 
                                                      OpStore %105 %104 
                                       f32_3 %106 = OpLoad vs_TEXCOORD2 
                                       f32_3 %107 = OpVectorShuffle %106 %106 1 1 1 
                              Uniform f32_4* %109 = OpAccessChain %21 %108 %60 
                                       f32_4 %110 = OpLoad %109 
                                       f32_3 %111 = OpVectorShuffle %110 %110 0 1 2 
                                       f32_3 %112 = OpFMul %107 %111 
                                                      OpStore %45 %112 
                              Uniform f32_4* %113 = OpAccessChain %21 %108 %48 
                                       f32_4 %114 = OpLoad %113 
                                       f32_3 %115 = OpVectorShuffle %114 %114 0 1 2 
                                       f32_3 %116 = OpLoad vs_TEXCOORD2 
                                       f32_3 %117 = OpVectorShuffle %116 %116 0 0 0 
                                       f32_3 %118 = OpFMul %115 %117 
                                       f32_3 %119 = OpLoad %45 
                                       f32_3 %120 = OpFAdd %118 %119 
                                                      OpStore %45 %120 
                              Uniform f32_4* %121 = OpAccessChain %21 %108 %65 
                                       f32_4 %122 = OpLoad %121 
                                       f32_3 %123 = OpVectorShuffle %122 %122 0 1 2 
                                       f32_3 %124 = OpLoad vs_TEXCOORD2 
                                       f32_3 %125 = OpVectorShuffle %124 %124 2 2 2 
                                       f32_3 %126 = OpFMul %123 %125 
                                       f32_3 %127 = OpLoad %45 
                                       f32_3 %128 = OpFAdd %126 %127 
                                                      OpStore %45 %128 
                                       f32_3 %129 = OpLoad %45 
                              Uniform f32_4* %131 = OpAccessChain %21 %108 %130 
                                       f32_4 %132 = OpLoad %131 
                                       f32_3 %133 = OpVectorShuffle %132 %132 0 1 2 
                                       f32_3 %134 = OpFAdd %129 %133 
                                                      OpStore %45 %134 
                                       f32_3 %138 = OpLoad %45 
                                       f32_2 %139 = OpVectorShuffle %138 %138 0 1 
                                Private f32* %140 = OpAccessChain %45 %55 
                                         f32 %141 = OpLoad %140 
                                         f32 %142 = OpCompositeExtract %139 0 
                                         f32 %143 = OpCompositeExtract %139 1 
                                       f32_3 %144 = OpCompositeConstruct %142 %143 %141 
                                                      OpStore %136 %144 
                         read_only Texture2D %148 = OpLoad %147 
                                     sampler %152 = OpLoad %151 
                  read_only Texture2DSampled %155 = OpSampledImage %148 %152 
                                       f32_3 %156 = OpLoad %136 
                                         f32 %157 = OpCompositeExtract %156 2 
                                         f32 %158 = OpImageSampleDrefExplicitLod %155 %156 %157 Lod %6 
                                Private f32* %159 = OpAccessChain %45 %37 
                                                      OpStore %159 %158 
                                Uniform f32* %161 = OpAccessChain %21 %92 %37 
                                         f32 %162 = OpLoad %161 
                                         f32 %163 = OpFNegate %162 
                                         f32 %164 = OpFAdd %163 %103 
                                Private f32* %165 = OpAccessChain %160 %37 
                                                      OpStore %165 %164 
                                Private f32* %166 = OpAccessChain %45 %37 
                                         f32 %167 = OpLoad %166 
                                Private f32* %168 = OpAccessChain %160 %37 
                                         f32 %169 = OpLoad %168 
                                         f32 %170 = OpFMul %167 %169 
                                Uniform f32* %171 = OpAccessChain %21 %92 %37 
                                         f32 %172 = OpLoad %171 
                                         f32 %173 = OpFAdd %170 %172 
                                Private f32* %174 = OpAccessChain %160 %37 
                                                      OpStore %174 %173 
                                Private f32* %176 = OpAccessChain %160 %37 
                                         f32 %177 = OpLoad %176 
                                         f32 %178 = OpFNegate %177 
                                         f32 %179 = OpFAdd %178 %103 
                                Private f32* %180 = OpAccessChain %175 %37 
                                                      OpStore %180 %179 
                                Private f32* %181 = OpAccessChain %9 %37 
                                         f32 %182 = OpLoad %181 
                                Private f32* %183 = OpAccessChain %175 %37 
                                         f32 %184 = OpLoad %183 
                                         f32 %185 = OpFMul %182 %184 
                                Private f32* %186 = OpAccessChain %160 %37 
                                         f32 %187 = OpLoad %186 
                                         f32 %188 = OpFAdd %185 %187 
                                Private f32* %189 = OpAccessChain %160 %37 
                                                      OpStore %189 %188 
                                       f32_3 %191 = OpLoad vs_TEXCOORD1 
                                       f32_3 %192 = OpLoad vs_TEXCOORD1 
                                         f32 %193 = OpDot %191 %192 
                                Private f32* %194 = OpAccessChain %175 %37 
                                                      OpStore %194 %193 
                                Private f32* %195 = OpAccessChain %175 %37 
                                         f32 %196 = OpLoad %195 
                                         f32 %197 = OpExtInst %1 32 %196 
                                Private f32* %198 = OpAccessChain %175 %37 
                                                      OpStore %198 %197 
                                       f32_3 %199 = OpLoad %175 
                                       f32_3 %200 = OpVectorShuffle %199 %199 0 0 0 
                                       f32_3 %201 = OpLoad vs_TEXCOORD1 
                                       f32_3 %202 = OpFMul %200 %201 
                                                      OpStore %175 %202 
                                       f32_3 %203 = OpLoad %175 
                              Uniform f32_4* %204 = OpAccessChain %21 %60 
                                       f32_4 %205 = OpLoad %204 
                                       f32_3 %206 = OpVectorShuffle %205 %205 0 1 2 
                                         f32 %207 = OpDot %203 %206 
                                Private f32* %208 = OpAccessChain %175 %37 
                                                      OpStore %208 %207 
                                Private f32* %209 = OpAccessChain %175 %37 
                                         f32 %210 = OpLoad %209 
                                         f32 %211 = OpExtInst %1 40 %210 %102 
                                Private f32* %212 = OpAccessChain %175 %37 
                                                      OpStore %212 %211 
                                Uniform f32* %215 = OpAccessChain %21 %214 
                                         f32 %216 = OpLoad %215 
                                         f32 %217 = OpFNegate %216 
                                         f32 %219 = OpFMul %217 %218 
                                Uniform f32* %221 = OpAccessChain %21 %220 
                                         f32 %222 = OpLoad %221 
                                         f32 %223 = OpFAdd %219 %222 
                                                      OpStore %213 %223 
                                         f32 %224 = OpLoad %213 
                                         f32 %225 = OpFNegate %224 
                                Private f32* %226 = OpAccessChain %175 %37 
                                         f32 %227 = OpLoad %226 
                                         f32 %228 = OpFAdd %225 %227 
                                Private f32* %229 = OpAccessChain %175 %37 
                                                      OpStore %229 %228 
                                Uniform f32* %231 = OpAccessChain %21 %214 
                                         f32 %232 = OpLoad %231 
                                         f32 %233 = OpFMul %232 %218 
                                Uniform f32* %234 = OpAccessChain %21 %220 
                                         f32 %235 = OpLoad %234 
                                         f32 %236 = OpFAdd %233 %235 
                                                      OpStore %230 %236 
                                         f32 %237 = OpLoad %213 
                                         f32 %238 = OpFNegate %237 
                                         f32 %239 = OpLoad %230 
                                         f32 %240 = OpFAdd %238 %239 
                                                      OpStore %213 %240 
                                         f32 %241 = OpLoad %213 
                                         f32 %242 = OpFDiv %103 %241 
                                                      OpStore %213 %242 
                                         f32 %243 = OpLoad %213 
                                Private f32* %244 = OpAccessChain %175 %37 
                                         f32 %245 = OpLoad %244 
                                         f32 %246 = OpFMul %243 %245 
                                Private f32* %247 = OpAccessChain %175 %37 
                                                      OpStore %247 %246 
                                Private f32* %248 = OpAccessChain %175 %37 
                                         f32 %249 = OpLoad %248 
                                         f32 %250 = OpExtInst %1 43 %249 %102 %103 
                                Private f32* %251 = OpAccessChain %175 %37 
                                                      OpStore %251 %250 
                                Private f32* %252 = OpAccessChain %175 %37 
                                         f32 %253 = OpLoad %252 
                                         f32 %255 = OpFMul %253 %254 
                                         f32 %257 = OpFAdd %255 %256 
                                                      OpStore %213 %257 
                                Private f32* %258 = OpAccessChain %175 %37 
                                         f32 %259 = OpLoad %258 
                                Private f32* %260 = OpAccessChain %175 %37 
                                         f32 %261 = OpLoad %260 
                                         f32 %262 = OpFMul %259 %261 
                                Private f32* %263 = OpAccessChain %175 %37 
                                                      OpStore %263 %262 
                                Private f32* %264 = OpAccessChain %175 %37 
                                         f32 %265 = OpLoad %264 
                                         f32 %266 = OpLoad %213 
                                         f32 %267 = OpFMul %265 %266 
                                Private f32* %268 = OpAccessChain %175 %37 
                                                      OpStore %268 %267 
                                Private f32* %269 = OpAccessChain %160 %37 
                                         f32 %270 = OpLoad %269 
                                Private f32* %271 = OpAccessChain %175 %37 
                                         f32 %272 = OpLoad %271 
                                         f32 %273 = OpFMul %270 %272 
                                Private f32* %274 = OpAccessChain %160 %37 
                                                      OpStore %274 %273 
                              Uniform f32_4* %276 = OpAccessChain %21 %275 
                                       f32_4 %277 = OpLoad %276 
                                       f32_3 %278 = OpVectorShuffle %277 %277 0 1 2 
                                       f32_3 %279 = OpFNegate %278 
                              Uniform f32_4* %281 = OpAccessChain %21 %280 
                                       f32_4 %282 = OpLoad %281 
                                       f32_3 %283 = OpVectorShuffle %282 %282 0 1 2 
                                       f32_3 %284 = OpFAdd %279 %283 
                                                      OpStore %175 %284 
                              Uniform f32_4* %285 = OpAccessChain %21 %280 
                                       f32_4 %286 = OpLoad %285 
                                       f32_3 %287 = OpVectorShuffle %286 %286 3 3 3 
                                       f32_3 %288 = OpLoad %175 
                                       f32_3 %289 = OpFMul %287 %288 
                              Uniform f32_4* %290 = OpAccessChain %21 %275 
                                       f32_4 %291 = OpLoad %290 
                                       f32_3 %292 = OpVectorShuffle %291 %291 0 1 2 
                                       f32_3 %293 = OpFAdd %289 %292 
                                                      OpStore %175 %293 
                                       f32_3 %295 = OpLoad %175 
                                       f32_3 %296 = OpFNegate %295 
                              Uniform f32_4* %297 = OpAccessChain %21 %275 
                                       f32_4 %298 = OpLoad %297 
                                       f32_3 %299 = OpVectorShuffle %298 %298 0 1 2 
                                       f32_3 %300 = OpFAdd %296 %299 
                                                      OpStore %294 %300 
                                       f32_3 %301 = OpLoad %160 
                                       f32_3 %302 = OpVectorShuffle %301 %301 0 0 0 
                                       f32_3 %303 = OpLoad %294 
                                       f32_3 %304 = OpFMul %302 %303 
                                       f32_3 %305 = OpLoad %175 
                                       f32_3 %306 = OpFAdd %304 %305 
                                                      OpStore %160 %306 
                                       f32_3 %307 = OpLoad vs_TEXCOORD1 
                                       f32_4 %308 = OpLoad %9 
                                       f32_4 %309 = OpVectorShuffle %308 %307 4 5 6 3 
                                                      OpStore %9 %309 
                                Private f32* %310 = OpAccessChain %9 %80 
                                                      OpStore %310 %103 
                              Uniform f32_4* %311 = OpAccessChain %21 %65 
                                       f32_4 %312 = OpLoad %311 
                                       f32_4 %313 = OpLoad %9 
                                         f32 %314 = OpDot %312 %313 
                                Private f32* %315 = OpAccessChain %294 %37 
                                                      OpStore %315 %314 
                              Uniform f32_4* %316 = OpAccessChain %21 %130 
                                       f32_4 %317 = OpLoad %316 
                                       f32_4 %318 = OpLoad %9 
                                         f32 %319 = OpDot %317 %318 
                                Private f32* %320 = OpAccessChain %294 %63 
                                                      OpStore %320 %319 
                              Uniform f32_4* %322 = OpAccessChain %21 %321 
                                       f32_4 %323 = OpLoad %322 
                                       f32_4 %324 = OpLoad %9 
                                         f32 %325 = OpDot %323 %324 
                                Private f32* %326 = OpAccessChain %294 %55 
                                                      OpStore %326 %325 
                                       f32_3 %327 = OpLoad %294 
                                       f32_3 %329 = OpLoad vs_TEXCOORD3 
                                       f32_3 %330 = OpFAdd %327 %329 
                                                      OpStore %294 %330 
                                       f32_3 %331 = OpLoad %294 
                                       f32_3 %333 = OpExtInst %1 40 %331 %332 
                                                      OpStore %294 %333 
                                       f32_3 %334 = OpLoad %294 
                                       f32_3 %335 = OpExtInst %1 30 %334 
                                       f32_4 %336 = OpLoad %9 
                                       f32_4 %337 = OpVectorShuffle %336 %335 4 5 6 3 
                                                      OpStore %9 %337 
                                       f32_4 %338 = OpLoad %9 
                                       f32_3 %339 = OpVectorShuffle %338 %338 0 1 2 
                                       f32_3 %342 = OpFMul %339 %341 
                                       f32_4 %343 = OpLoad %9 
                                       f32_4 %344 = OpVectorShuffle %343 %342 4 5 6 3 
                                                      OpStore %9 %344 
                                       f32_4 %345 = OpLoad %9 
                                       f32_3 %346 = OpVectorShuffle %345 %345 0 1 2 
                                       f32_3 %347 = OpExtInst %1 29 %346 
                                       f32_4 %348 = OpLoad %9 
                                       f32_4 %349 = OpVectorShuffle %348 %347 4 5 6 3 
                                                      OpStore %9 %349 
                                       f32_4 %350 = OpLoad %9 
                                       f32_3 %351 = OpVectorShuffle %350 %350 0 1 2 
                                       f32_3 %354 = OpFMul %351 %353 
                                       f32_3 %357 = OpFAdd %354 %356 
                                       f32_4 %358 = OpLoad %9 
                                       f32_4 %359 = OpVectorShuffle %358 %357 4 5 6 3 
                                                      OpStore %9 %359 
                                       f32_4 %360 = OpLoad %9 
                                       f32_3 %361 = OpVectorShuffle %360 %360 0 1 2 
                                       f32_3 %362 = OpExtInst %1 40 %361 %332 
                                       f32_4 %363 = OpLoad %9 
                                       f32_4 %364 = OpVectorShuffle %363 %362 4 5 6 3 
                                                      OpStore %9 %364 
                         read_only Texture2D %367 = OpLoad %366 
                                     sampler %369 = OpLoad %368 
                  read_only Texture2DSampled %371 = OpSampledImage %367 %369 
                                       f32_2 %374 = OpLoad vs_TEXCOORD0 
                                       f32_4 %375 = OpImageSampleImplicitLod %371 %374 
                                                      OpStore %365 %375 
                                       f32_4 %376 = OpLoad %365 
                                       f32_3 %377 = OpVectorShuffle %376 %376 0 1 2 
                              Uniform f32_4* %379 = OpAccessChain %21 %378 
                                       f32_4 %380 = OpLoad %379 
                                       f32_3 %381 = OpVectorShuffle %380 %380 0 1 2 
                                       f32_3 %382 = OpFMul %377 %381 
                                                      OpStore %294 %382 
                                Private f32* %385 = OpAccessChain %365 %80 
                                         f32 %386 = OpLoad %385 
                                Uniform f32* %387 = OpAccessChain %21 %378 %80 
                                         f32 %388 = OpLoad %387 
                                         f32 %389 = OpFMul %386 %388 
                                 Output f32* %391 = OpAccessChain %384 %80 
                                                      OpStore %391 %389 
                                       f32_4 %393 = OpLoad %9 
                                       f32_3 %394 = OpVectorShuffle %393 %393 0 1 2 
                                       f32_3 %395 = OpLoad %294 
                                       f32_3 %396 = OpFMul %394 %395 
                                                      OpStore %392 %396 
                                       f32_3 %397 = OpLoad %294 
                              Uniform f32_4* %399 = OpAccessChain %21 %398 
                                       f32_4 %400 = OpLoad %399 
                                       f32_3 %401 = OpVectorShuffle %400 %400 0 1 2 
                                       f32_3 %402 = OpFMul %397 %401 
                                                      OpStore %294 %402 
                                       f32_3 %403 = OpLoad %294 
                                       f32_3 %404 = OpLoad %160 
                                       f32_3 %405 = OpFMul %403 %404 
                                       f32_3 %406 = OpLoad %392 
                                       f32_3 %407 = OpFAdd %405 %406 
                                       f32_4 %408 = OpLoad %384 
                                       f32_4 %409 = OpVectorShuffle %408 %407 4 5 6 3 
                                                      OpStore %384 %409 
                                                      OpReturn
                                                      OpFunctionEnd
"
}
SubProgram "vulkan hw_tier02 " {
Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "SHADOWS_SCREEN" }
"; SPIR-V
; Version: 1.0
; Generator: Khronos Glslang Reference Front End; 6
; Bound: 214
; Schema: 0
                                                      OpCapability Shader 
                                               %1 = OpExtInstImport "GLSL.std.450" 
                                                      OpMemoryModel Logical GLSL450 
                                                      OpEntryPoint Vertex %4 "main" %11 %53 %87 %97 %113 %117 %155 %195 %204 %207 
                                                      OpName vs_TEXCOORD2 "vs_TEXCOORD2" 
                                                      OpName vs_TEXCOORD0 "vs_TEXCOORD0" 
                                                      OpName vs_TEXCOORD1 "vs_TEXCOORD1" 
                                                      OpName vs_TEXCOORD3 "vs_TEXCOORD3" 
                                                      OpName vs_TEXCOORD5 "vs_TEXCOORD5" 
                                                      OpName vs_TEXCOORD6 "vs_TEXCOORD6" 
                                                      OpDecorate %11 Location 11 
                                                      OpDecorate %16 ArrayStride 16 
                                                      OpDecorate %17 ArrayStride 17 
                                                      OpDecorate %18 ArrayStride 18 
                                                      OpMemberDecorate %19 0 RelaxedPrecision 
                                                      OpMemberDecorate %19 0 Offset 19 
                                                      OpMemberDecorate %19 1 RelaxedPrecision 
                                                      OpMemberDecorate %19 1 Offset 19 
                                                      OpMemberDecorate %19 2 RelaxedPrecision 
                                                      OpMemberDecorate %19 2 Offset 19 
                                                      OpMemberDecorate %19 3 RelaxedPrecision 
                                                      OpMemberDecorate %19 3 Offset 19 
                                                      OpMemberDecorate %19 4 Offset 19 
                                                      OpMemberDecorate %19 5 Offset 19 
                                                      OpMemberDecorate %19 6 Offset 19 
                                                      OpMemberDecorate %19 7 Offset 19 
                                                      OpDecorate %19 Block 
                                                      OpDecorate %21 DescriptorSet 21 
                                                      OpDecorate %21 Binding 21 
                                                      OpDecorate vs_TEXCOORD2 Location 53 
                                                      OpMemberDecorate %85 0 BuiltIn 85 
                                                      OpMemberDecorate %85 1 BuiltIn 85 
                                                      OpMemberDecorate %85 2 BuiltIn 85 
                                                      OpDecorate %85 Block 
                                                      OpDecorate %97 Location 97 
                                                      OpDecorate vs_TEXCOORD0 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD0 Location 113 
                                                      OpDecorate %117 Location 117 
                                                      OpDecorate vs_TEXCOORD1 Location 155 
                                                      OpDecorate %158 RelaxedPrecision 
                                                      OpDecorate %169 RelaxedPrecision 
                                                      OpDecorate %170 RelaxedPrecision 
                                                      OpDecorate %172 RelaxedPrecision 
                                                      OpDecorate %179 RelaxedPrecision 
                                                      OpDecorate %181 RelaxedPrecision 
                                                      OpDecorate %182 RelaxedPrecision 
                                                      OpDecorate %183 RelaxedPrecision 
                                                      OpDecorate %186 RelaxedPrecision 
                                                      OpDecorate %187 RelaxedPrecision 
                                                      OpDecorate %188 RelaxedPrecision 
                                                      OpDecorate %191 RelaxedPrecision 
                                                      OpDecorate %192 RelaxedPrecision 
                                                      OpDecorate %193 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD3 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD3 Location 195 
                                                      OpDecorate %197 RelaxedPrecision 
                                                      OpDecorate %198 RelaxedPrecision 
                                                      OpDecorate %199 RelaxedPrecision 
                                                      OpDecorate %200 RelaxedPrecision 
                                                      OpDecorate %201 RelaxedPrecision 
                                                      OpDecorate %202 RelaxedPrecision 
                                                      OpDecorate %203 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD5 Location 204 
                                                      OpDecorate vs_TEXCOORD6 Location 207 
                                               %2 = OpTypeVoid 
                                               %3 = OpTypeFunction %2 
                                               %6 = OpTypeFloat 32 
                                               %7 = OpTypeVector %6 4 
                                               %8 = OpTypePointer Private %7 
                                Private f32_4* %9 = OpVariable Private 
                                              %10 = OpTypePointer Input %7 
                                 Input f32_4* %11 = OpVariable Input 
                                              %14 = OpTypeInt 32 0 
                                          u32 %15 = OpConstant 4 
                                              %16 = OpTypeArray %7 %15 
                                              %17 = OpTypeArray %7 %15 
                                              %18 = OpTypeArray %7 %15 
                                              %19 = OpTypeStruct %7 %7 %7 %7 %16 %17 %18 %7 
                                              %20 = OpTypePointer Uniform %19 
Uniform struct {f32_4; f32_4; f32_4; f32_4; f32_4[4]; f32_4[4]; f32_4[4]; f32_4;}* %21 = OpVariable Uniform 
                                              %22 = OpTypeInt 32 1 
                                          i32 %23 = OpConstant 4 
                                          i32 %24 = OpConstant 1 
                                              %25 = OpTypePointer Uniform %7 
                                          i32 %29 = OpConstant 0 
                                          i32 %37 = OpConstant 2 
                               Private f32_4* %45 = OpVariable Private 
                                          i32 %47 = OpConstant 3 
                                              %51 = OpTypeVector %6 3 
                                              %52 = OpTypePointer Output %51 
                       Output f32_3* vs_TEXCOORD2 = OpVariable Output 
                                          i32 %65 = OpConstant 6 
                                          u32 %83 = OpConstant 1 
                                              %84 = OpTypeArray %6 %83 
                                              %85 = OpTypeStruct %7 %6 %84 
                                              %86 = OpTypePointer Output %85 
         Output struct {f32_4; f32; f32[1];}* %87 = OpVariable Output 
                                              %95 = OpTypePointer Output %7 
                                 Input f32_4* %97 = OpVariable Input 
                                              %98 = OpTypeVector %6 2 
                                         i32 %101 = OpConstant 7 
                                             %112 = OpTypePointer Output %98 
                       Output f32_2* vs_TEXCOORD0 = OpVariable Output 
                                             %116 = OpTypePointer Input %51 
                                Input f32_3* %117 = OpVariable Input 
                                         i32 %119 = OpConstant 5 
                                         u32 %124 = OpConstant 0 
                                             %125 = OpTypePointer Private %6 
                                         u32 %138 = OpConstant 2 
                                Private f32* %140 = OpVariable Private 
                       Output f32_3* vs_TEXCOORD1 = OpVariable Output 
                                Private f32* %158 = OpVariable Private 
                              Private f32_4* %172 = OpVariable Private 
                                             %178 = OpTypePointer Private %51 
                              Private f32_3* %179 = OpVariable Private 
                       Output f32_3* vs_TEXCOORD3 = OpVariable Output 
                       Output f32_4* vs_TEXCOORD5 = OpVariable Output 
                                         f32 %205 = OpConstant 3.674022E-40 
                                       f32_4 %206 = OpConstantComposite %205 %205 %205 %205 
                       Output f32_4* vs_TEXCOORD6 = OpVariable Output 
                                             %208 = OpTypePointer Output %6 
                                          void %4 = OpFunction None %3 
                                               %5 = OpLabel 
                                        f32_4 %12 = OpLoad %11 
                                        f32_4 %13 = OpVectorShuffle %12 %12 1 1 1 1 
                               Uniform f32_4* %26 = OpAccessChain %21 %23 %24 
                                        f32_4 %27 = OpLoad %26 
                                        f32_4 %28 = OpFMul %13 %27 
                                                      OpStore %9 %28 
                               Uniform f32_4* %30 = OpAccessChain %21 %23 %29 
                                        f32_4 %31 = OpLoad %30 
                                        f32_4 %32 = OpLoad %11 
                                        f32_4 %33 = OpVectorShuffle %32 %32 0 0 0 0 
                                        f32_4 %34 = OpFMul %31 %33 
                                        f32_4 %35 = OpLoad %9 
                                        f32_4 %36 = OpFAdd %34 %35 
                                                      OpStore %9 %36 
                               Uniform f32_4* %38 = OpAccessChain %21 %23 %37 
                                        f32_4 %39 = OpLoad %38 
                                        f32_4 %40 = OpLoad %11 
                                        f32_4 %41 = OpVectorShuffle %40 %40 2 2 2 2 
                                        f32_4 %42 = OpFMul %39 %41 
                                        f32_4 %43 = OpLoad %9 
                                        f32_4 %44 = OpFAdd %42 %43 
                                                      OpStore %9 %44 
                                        f32_4 %46 = OpLoad %9 
                               Uniform f32_4* %48 = OpAccessChain %21 %23 %47 
                                        f32_4 %49 = OpLoad %48 
                                        f32_4 %50 = OpFAdd %46 %49 
                                                      OpStore %45 %50 
                               Uniform f32_4* %54 = OpAccessChain %21 %23 %47 
                                        f32_4 %55 = OpLoad %54 
                                        f32_3 %56 = OpVectorShuffle %55 %55 0 1 2 
                                        f32_4 %57 = OpLoad %11 
                                        f32_3 %58 = OpVectorShuffle %57 %57 3 3 3 
                                        f32_3 %59 = OpFMul %56 %58 
                                        f32_4 %60 = OpLoad %9 
                                        f32_3 %61 = OpVectorShuffle %60 %60 0 1 2 
                                        f32_3 %62 = OpFAdd %59 %61 
                                                      OpStore vs_TEXCOORD2 %62 
                                        f32_4 %63 = OpLoad %45 
                                        f32_4 %64 = OpVectorShuffle %63 %63 1 1 1 1 
                               Uniform f32_4* %66 = OpAccessChain %21 %65 %24 
                                        f32_4 %67 = OpLoad %66 
                                        f32_4 %68 = OpFMul %64 %67 
                                                      OpStore %9 %68 
                               Uniform f32_4* %69 = OpAccessChain %21 %65 %29 
                                        f32_4 %70 = OpLoad %69 
                                        f32_4 %71 = OpLoad %45 
                                        f32_4 %72 = OpVectorShuffle %71 %71 0 0 0 0 
                                        f32_4 %73 = OpFMul %70 %72 
                                        f32_4 %74 = OpLoad %9 
                                        f32_4 %75 = OpFAdd %73 %74 
                                                      OpStore %9 %75 
                               Uniform f32_4* %76 = OpAccessChain %21 %65 %37 
                                        f32_4 %77 = OpLoad %76 
                                        f32_4 %78 = OpLoad %45 
                                        f32_4 %79 = OpVectorShuffle %78 %78 2 2 2 2 
                                        f32_4 %80 = OpFMul %77 %79 
                                        f32_4 %81 = OpLoad %9 
                                        f32_4 %82 = OpFAdd %80 %81 
                                                      OpStore %9 %82 
                               Uniform f32_4* %88 = OpAccessChain %21 %65 %47 
                                        f32_4 %89 = OpLoad %88 
                                        f32_4 %90 = OpLoad %45 
                                        f32_4 %91 = OpVectorShuffle %90 %90 3 3 3 3 
                                        f32_4 %92 = OpFMul %89 %91 
                                        f32_4 %93 = OpLoad %9 
                                        f32_4 %94 = OpFAdd %92 %93 
                                Output f32_4* %96 = OpAccessChain %87 %29 
                                                      OpStore %96 %94 
                                        f32_4 %99 = OpLoad %97 
                                       f32_2 %100 = OpVectorShuffle %99 %99 0 1 
                              Uniform f32_4* %102 = OpAccessChain %21 %101 
                                       f32_4 %103 = OpLoad %102 
                                       f32_2 %104 = OpVectorShuffle %103 %103 0 1 
                                       f32_2 %105 = OpFMul %100 %104 
                              Uniform f32_4* %106 = OpAccessChain %21 %101 
                                       f32_4 %107 = OpLoad %106 
                                       f32_2 %108 = OpVectorShuffle %107 %107 2 3 
                                       f32_2 %109 = OpFAdd %105 %108 
                                       f32_4 %110 = OpLoad %9 
                                       f32_4 %111 = OpVectorShuffle %110 %109 4 5 2 3 
                                                      OpStore %9 %111 
                                       f32_4 %114 = OpLoad %9 
                                       f32_2 %115 = OpVectorShuffle %114 %114 0 1 
                                                      OpStore vs_TEXCOORD0 %115 
                                       f32_3 %118 = OpLoad %117 
                              Uniform f32_4* %120 = OpAccessChain %21 %119 %29 
                                       f32_4 %121 = OpLoad %120 
                                       f32_3 %122 = OpVectorShuffle %121 %121 0 1 2 
                                         f32 %123 = OpDot %118 %122 
                                Private f32* %126 = OpAccessChain %9 %124 
                                                      OpStore %126 %123 
                                       f32_3 %127 = OpLoad %117 
                              Uniform f32_4* %128 = OpAccessChain %21 %119 %24 
                                       f32_4 %129 = OpLoad %128 
                                       f32_3 %130 = OpVectorShuffle %129 %129 0 1 2 
                                         f32 %131 = OpDot %127 %130 
                                Private f32* %132 = OpAccessChain %9 %83 
                                                      OpStore %132 %131 
                                       f32_3 %133 = OpLoad %117 
                              Uniform f32_4* %134 = OpAccessChain %21 %119 %37 
                                       f32_4 %135 = OpLoad %134 
                                       f32_3 %136 = OpVectorShuffle %135 %135 0 1 2 
                                         f32 %137 = OpDot %133 %136 
                                Private f32* %139 = OpAccessChain %9 %138 
                                                      OpStore %139 %137 
                                       f32_4 %141 = OpLoad %9 
                                       f32_3 %142 = OpVectorShuffle %141 %141 0 1 2 
                                       f32_4 %143 = OpLoad %9 
                                       f32_3 %144 = OpVectorShuffle %143 %143 0 1 2 
                                         f32 %145 = OpDot %142 %144 
                                                      OpStore %140 %145 
                                         f32 %146 = OpLoad %140 
                                         f32 %147 = OpExtInst %1 32 %146 
                                                      OpStore %140 %147 
                                         f32 %148 = OpLoad %140 
                                       f32_3 %149 = OpCompositeConstruct %148 %148 %148 
                                       f32_4 %150 = OpLoad %9 
                                       f32_3 %151 = OpVectorShuffle %150 %150 0 1 2 
                                       f32_3 %152 = OpFMul %149 %151 
                                       f32_4 %153 = OpLoad %9 
                                       f32_4 %154 = OpVectorShuffle %153 %152 4 5 6 3 
                                                      OpStore %9 %154 
                                       f32_4 %156 = OpLoad %9 
                                       f32_3 %157 = OpVectorShuffle %156 %156 0 1 2 
                                                      OpStore vs_TEXCOORD1 %157 
                                Private f32* %159 = OpAccessChain %9 %83 
                                         f32 %160 = OpLoad %159 
                                Private f32* %161 = OpAccessChain %9 %83 
                                         f32 %162 = OpLoad %161 
                                         f32 %163 = OpFMul %160 %162 
                                                      OpStore %158 %163 
                                Private f32* %164 = OpAccessChain %9 %124 
                                         f32 %165 = OpLoad %164 
                                Private f32* %166 = OpAccessChain %9 %124 
                                         f32 %167 = OpLoad %166 
                                         f32 %168 = OpFMul %165 %167 
                                         f32 %169 = OpLoad %158 
                                         f32 %170 = OpFNegate %169 
                                         f32 %171 = OpFAdd %168 %170 
                                                      OpStore %158 %171 
                                       f32_4 %173 = OpLoad %9 
                                       f32_4 %174 = OpVectorShuffle %173 %173 1 2 2 0 
                                       f32_4 %175 = OpLoad %9 
                                       f32_4 %176 = OpVectorShuffle %175 %175 0 1 2 2 
                                       f32_4 %177 = OpFMul %174 %176 
                                                      OpStore %172 %177 
                              Uniform f32_4* %180 = OpAccessChain %21 %29 
                                       f32_4 %181 = OpLoad %180 
                                       f32_4 %182 = OpLoad %172 
                                         f32 %183 = OpDot %181 %182 
                                Private f32* %184 = OpAccessChain %179 %124 
                                                      OpStore %184 %183 
                              Uniform f32_4* %185 = OpAccessChain %21 %24 
                                       f32_4 %186 = OpLoad %185 
                                       f32_4 %187 = OpLoad %172 
                                         f32 %188 = OpDot %186 %187 
                                Private f32* %189 = OpAccessChain %179 %83 
                                                      OpStore %189 %188 
                              Uniform f32_4* %190 = OpAccessChain %21 %37 
                                       f32_4 %191 = OpLoad %190 
                                       f32_4 %192 = OpLoad %172 
                                         f32 %193 = OpDot %191 %192 
                                Private f32* %194 = OpAccessChain %179 %138 
                                                      OpStore %194 %193 
                              Uniform f32_4* %196 = OpAccessChain %21 %47 
                                       f32_4 %197 = OpLoad %196 
                                       f32_3 %198 = OpVectorShuffle %197 %197 0 1 2 
                                         f32 %199 = OpLoad %158 
                                       f32_3 %200 = OpCompositeConstruct %199 %199 %199 
                                       f32_3 %201 = OpFMul %198 %200 
                                       f32_3 %202 = OpLoad %179 
                                       f32_3 %203 = OpFAdd %201 %202 
                                                      OpStore vs_TEXCOORD3 %203 
                                                      OpStore vs_TEXCOORD5 %206 
                                                      OpStore vs_TEXCOORD6 %206 
                                 Output f32* %209 = OpAccessChain %87 %29 %83 
                                         f32 %210 = OpLoad %209 
                                         f32 %211 = OpFNegate %210 
                                 Output f32* %212 = OpAccessChain %87 %29 %83 
                                                      OpStore %212 %211 
                                                      OpReturn
                                                      OpFunctionEnd
; SPIR-V
; Version: 1.0
; Generator: Khronos Glslang Reference Front End; 6
; Bound: 411
; Schema: 0
                                                      OpCapability Shader 
                                               %1 = OpExtInstImport "GLSL.std.450" 
                                                      OpMemoryModel Logical GLSL450 
                                                      OpEntryPoint Fragment %4 "main" %12 %190 %328 %373 %384 
                                                      OpExecutionMode %4 OriginUpperLeft 
                                                      OpName vs_TEXCOORD2 "vs_TEXCOORD2" 
                                                      OpName vs_TEXCOORD1 "vs_TEXCOORD1" 
                                                      OpName vs_TEXCOORD3 "vs_TEXCOORD3" 
                                                      OpName vs_TEXCOORD0 "vs_TEXCOORD0" 
                                                      OpDecorate vs_TEXCOORD2 Location 12 
                                                      OpDecorate %16 ArrayStride 16 
                                                      OpDecorate %18 ArrayStride 18 
                                                      OpMemberDecorate %19 0 Offset 19 
                                                      OpMemberDecorate %19 1 RelaxedPrecision 
                                                      OpMemberDecorate %19 1 Offset 19 
                                                      OpMemberDecorate %19 2 RelaxedPrecision 
                                                      OpMemberDecorate %19 2 Offset 19 
                                                      OpMemberDecorate %19 3 RelaxedPrecision 
                                                      OpMemberDecorate %19 3 Offset 19 
                                                      OpMemberDecorate %19 4 RelaxedPrecision 
                                                      OpMemberDecorate %19 4 Offset 19 
                                                      OpMemberDecorate %19 5 Offset 19 
                                                      OpMemberDecorate %19 6 RelaxedPrecision 
                                                      OpMemberDecorate %19 6 Offset 19 
                                                      OpMemberDecorate %19 7 Offset 19 
                                                      OpMemberDecorate %19 8 Offset 19 
                                                      OpMemberDecorate %19 9 RelaxedPrecision 
                                                      OpMemberDecorate %19 9 Offset 19 
                                                      OpMemberDecorate %19 10 RelaxedPrecision 
                                                      OpMemberDecorate %19 10 Offset 19 
                                                      OpMemberDecorate %19 11 RelaxedPrecision 
                                                      OpMemberDecorate %19 11 Offset 19 
                                                      OpMemberDecorate %19 12 RelaxedPrecision 
                                                      OpMemberDecorate %19 12 Offset 19 
                                                      OpMemberDecorate %19 13 RelaxedPrecision 
                                                      OpMemberDecorate %19 13 Offset 19 
                                                      OpMemberDecorate %19 14 RelaxedPrecision 
                                                      OpMemberDecorate %19 14 Offset 19 
                                                      OpDecorate %19 Block 
                                                      OpDecorate %21 DescriptorSet 21 
                                                      OpDecorate %21 Binding 21 
                                                      OpDecorate %94 RelaxedPrecision 
                                                      OpDecorate %97 RelaxedPrecision 
                                                      OpDecorate %147 DescriptorSet 147 
                                                      OpDecorate %147 Binding 147 
                                                      OpDecorate %151 DescriptorSet 151 
                                                      OpDecorate %151 Binding 151 
                                                      OpDecorate %160 RelaxedPrecision 
                                                      OpDecorate %162 RelaxedPrecision 
                                                      OpDecorate %163 RelaxedPrecision 
                                                      OpDecorate %164 RelaxedPrecision 
                                                      OpDecorate %169 RelaxedPrecision 
                                                      OpDecorate %172 RelaxedPrecision 
                                                      OpDecorate %175 RelaxedPrecision 
                                                      OpDecorate %177 RelaxedPrecision 
                                                      OpDecorate %178 RelaxedPrecision 
                                                      OpDecorate %179 RelaxedPrecision 
                                                      OpDecorate %184 RelaxedPrecision 
                                                      OpDecorate %187 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD1 Location 190 
                                                      OpDecorate %196 RelaxedPrecision 
                                                      OpDecorate %197 RelaxedPrecision 
                                                      OpDecorate %199 RelaxedPrecision 
                                                      OpDecorate %200 RelaxedPrecision 
                                                      OpDecorate %203 RelaxedPrecision 
                                                      OpDecorate %205 RelaxedPrecision 
                                                      OpDecorate %206 RelaxedPrecision 
                                                      OpDecorate %207 RelaxedPrecision 
                                                      OpDecorate %210 RelaxedPrecision 
                                                      OpDecorate %211 RelaxedPrecision 
                                                      OpDecorate %213 RelaxedPrecision 
                                                      OpDecorate %216 RelaxedPrecision 
                                                      OpDecorate %217 RelaxedPrecision 
                                                      OpDecorate %219 RelaxedPrecision 
                                                      OpDecorate %222 RelaxedPrecision 
                                                      OpDecorate %223 RelaxedPrecision 
                                                      OpDecorate %224 RelaxedPrecision 
                                                      OpDecorate %225 RelaxedPrecision 
                                                      OpDecorate %227 RelaxedPrecision 
                                                      OpDecorate %228 RelaxedPrecision 
                                                      OpDecorate %230 RelaxedPrecision 
                                                      OpDecorate %232 RelaxedPrecision 
                                                      OpDecorate %233 RelaxedPrecision 
                                                      OpDecorate %235 RelaxedPrecision 
                                                      OpDecorate %236 RelaxedPrecision 
                                                      OpDecorate %237 RelaxedPrecision 
                                                      OpDecorate %238 RelaxedPrecision 
                                                      OpDecorate %239 RelaxedPrecision 
                                                      OpDecorate %240 RelaxedPrecision 
                                                      OpDecorate %241 RelaxedPrecision 
                                                      OpDecorate %242 RelaxedPrecision 
                                                      OpDecorate %243 RelaxedPrecision 
                                                      OpDecorate %245 RelaxedPrecision 
                                                      OpDecorate %246 RelaxedPrecision 
                                                      OpDecorate %249 RelaxedPrecision 
                                                      OpDecorate %250 RelaxedPrecision 
                                                      OpDecorate %253 RelaxedPrecision 
                                                      OpDecorate %255 RelaxedPrecision 
                                                      OpDecorate %257 RelaxedPrecision 
                                                      OpDecorate %259 RelaxedPrecision 
                                                      OpDecorate %261 RelaxedPrecision 
                                                      OpDecorate %262 RelaxedPrecision 
                                                      OpDecorate %265 RelaxedPrecision 
                                                      OpDecorate %266 RelaxedPrecision 
                                                      OpDecorate %267 RelaxedPrecision 
                                                      OpDecorate %270 RelaxedPrecision 
                                                      OpDecorate %272 RelaxedPrecision 
                                                      OpDecorate %273 RelaxedPrecision 
                                                      OpDecorate %277 RelaxedPrecision 
                                                      OpDecorate %278 RelaxedPrecision 
                                                      OpDecorate %279 RelaxedPrecision 
                                                      OpDecorate %282 RelaxedPrecision 
                                                      OpDecorate %283 RelaxedPrecision 
                                                      OpDecorate %284 RelaxedPrecision 
                                                      OpDecorate %286 RelaxedPrecision 
                                                      OpDecorate %287 RelaxedPrecision 
                                                      OpDecorate %288 RelaxedPrecision 
                                                      OpDecorate %289 RelaxedPrecision 
                                                      OpDecorate %291 RelaxedPrecision 
                                                      OpDecorate %292 RelaxedPrecision 
                                                      OpDecorate %293 RelaxedPrecision 
                                                      OpDecorate %294 RelaxedPrecision 
                                                      OpDecorate %295 RelaxedPrecision 
                                                      OpDecorate %296 RelaxedPrecision 
                                                      OpDecorate %298 RelaxedPrecision 
                                                      OpDecorate %299 RelaxedPrecision 
                                                      OpDecorate %300 RelaxedPrecision 
                                                      OpDecorate %301 RelaxedPrecision 
                                                      OpDecorate %302 RelaxedPrecision 
                                                      OpDecorate %303 RelaxedPrecision 
                                                      OpDecorate %304 RelaxedPrecision 
                                                      OpDecorate %305 RelaxedPrecision 
                                                      OpDecorate %306 RelaxedPrecision 
                                                      OpDecorate %312 RelaxedPrecision 
                                                      OpDecorate %317 RelaxedPrecision 
                                                      OpDecorate %323 RelaxedPrecision 
                                                      OpDecorate %327 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD3 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD3 Location 328 
                                                      OpDecorate %329 RelaxedPrecision 
                                                      OpDecorate %330 RelaxedPrecision 
                                                      OpDecorate %331 RelaxedPrecision 
                                                      OpDecorate %333 RelaxedPrecision 
                                                      OpDecorate %334 RelaxedPrecision 
                                                      OpDecorate %335 RelaxedPrecision 
                                                      OpDecorate %365 RelaxedPrecision 
                                                      OpDecorate %366 RelaxedPrecision 
                                                      OpDecorate %366 DescriptorSet 366 
                                                      OpDecorate %366 Binding 366 
                                                      OpDecorate %367 RelaxedPrecision 
                                                      OpDecorate %368 RelaxedPrecision 
                                                      OpDecorate %368 DescriptorSet 368 
                                                      OpDecorate %368 Binding 368 
                                                      OpDecorate %369 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD0 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD0 Location 373 
                                                      OpDecorate %374 RelaxedPrecision 
                                                      OpDecorate %375 RelaxedPrecision 
                                                      OpDecorate %376 RelaxedPrecision 
                                                      OpDecorate %377 RelaxedPrecision 
                                                      OpDecorate %380 RelaxedPrecision 
                                                      OpDecorate %381 RelaxedPrecision 
                                                      OpDecorate %382 RelaxedPrecision 
                                                      OpDecorate %384 RelaxedPrecision 
                                                      OpDecorate %384 Location 384 
                                                      OpDecorate %386 RelaxedPrecision 
                                                      OpDecorate %388 RelaxedPrecision 
                                                      OpDecorate %389 RelaxedPrecision 
                                                      OpDecorate %392 RelaxedPrecision 
                                                      OpDecorate %395 RelaxedPrecision 
                                                      OpDecorate %397 RelaxedPrecision 
                                                      OpDecorate %400 RelaxedPrecision 
                                                      OpDecorate %401 RelaxedPrecision 
                                                      OpDecorate %402 RelaxedPrecision 
                                                      OpDecorate %403 RelaxedPrecision 
                                                      OpDecorate %404 RelaxedPrecision 
                                                      OpDecorate %405 RelaxedPrecision 
                                                      OpDecorate %406 RelaxedPrecision 
                                                      OpDecorate %407 RelaxedPrecision 
                                               %2 = OpTypeVoid 
                                               %3 = OpTypeFunction %2 
                                               %6 = OpTypeFloat 32 
                                               %7 = OpTypeVector %6 4 
                                               %8 = OpTypePointer Private %7 
                                Private f32_4* %9 = OpVariable Private 
                                              %10 = OpTypeVector %6 3 
                                              %11 = OpTypePointer Input %10 
                        Input f32_3* vs_TEXCOORD2 = OpVariable Input 
                                              %14 = OpTypeInt 32 0 
                                          u32 %15 = OpConstant 16 
                                              %16 = OpTypeArray %7 %15 
                                          u32 %17 = OpConstant 4 
                                              %18 = OpTypeArray %7 %17 
                                              %19 = OpTypeStruct %10 %7 %7 %7 %7 %16 %7 %7 %18 %7 %7 %7 %7 %6 %6 
                                              %20 = OpTypePointer Uniform %19 
Uniform struct {f32_3; f32_4; f32_4; f32_4; f32_4; f32_4[16]; f32_4; f32_4; f32_4[4]; f32_4; f32_4; f32_4; f32_4; f32; f32;}* %21 = OpVariable Uniform 
                                              %22 = OpTypeInt 32 1 
                                          i32 %23 = OpConstant 7 
                                              %24 = OpTypePointer Uniform %7 
                                          u32 %37 = OpConstant 0 
                                              %38 = OpTypePointer Private %6 
                                              %44 = OpTypePointer Private %10 
                               Private f32_3* %45 = OpVariable Private 
                                          i32 %48 = OpConstant 0 
                                              %49 = OpTypePointer Uniform %10 
                               Private f32_3* %53 = OpVariable Private 
                                          i32 %54 = OpConstant 8 
                                          u32 %55 = OpConstant 2 
                                              %56 = OpTypePointer Uniform %6 
                                          i32 %60 = OpConstant 1 
                                          u32 %63 = OpConstant 1 
                                          i32 %65 = OpConstant 2 
                                          u32 %80 = OpConstant 3 
                                          i32 %92 = OpConstant 6 
                                         f32 %102 = OpConstant 3.674022E-40 
                                         f32 %103 = OpConstant 3.674022E-40 
                                         i32 %108 = OpConstant 5 
                                         i32 %130 = OpConstant 3 
                                             %135 = OpTypePointer Function %10 
                                             %137 = OpTypeVector %6 2 
                                             %145 = OpTypeImage %6 Dim2D 0 0 0 1 Unknown 
                                             %146 = OpTypePointer UniformConstant %145 
        UniformConstant read_only Texture2D* %147 = OpVariable UniformConstant 
                                             %149 = OpTypeSampler 
                                             %150 = OpTypePointer UniformConstant %149 
                    UniformConstant sampler* %151 = OpVariable UniformConstant 
                                             %153 = OpTypeImage %6 Dim2D 1 0 0 1 Unknown 
                                             %154 = OpTypeSampledImage %153 
                              Private f32_3* %160 = OpVariable Private 
                              Private f32_3* %175 = OpVariable Private 
                        Input f32_3* vs_TEXCOORD1 = OpVariable Input 
                                Private f32* %213 = OpVariable Private 
                                         i32 %214 = OpConstant 14 
                                         f32 %218 = OpConstant 3.674022E-40 
                                         i32 %220 = OpConstant 13 
                                Private f32* %230 = OpVariable Private 
                                         f32 %254 = OpConstant 3.674022E-40 
                                         f32 %256 = OpConstant 3.674022E-40 
                                         i32 %275 = OpConstant 11 
                                         i32 %280 = OpConstant 12 
                              Private f32_3* %294 = OpVariable Private 
                                         i32 %321 = OpConstant 4 
                        Input f32_3* vs_TEXCOORD3 = OpVariable Input 
                                       f32_3 %332 = OpConstantComposite %102 %102 %102 
                                         f32 %340 = OpConstant 3.674022E-40 
                                       f32_3 %341 = OpConstantComposite %340 %340 %340 
                                         f32 %352 = OpConstant 3.674022E-40 
                                       f32_3 %353 = OpConstantComposite %352 %352 %352 
                                         f32 %355 = OpConstant 3.674022E-40 
                                       f32_3 %356 = OpConstantComposite %355 %355 %355 
                              Private f32_4* %365 = OpVariable Private 
        UniformConstant read_only Texture2D* %366 = OpVariable UniformConstant 
                    UniformConstant sampler* %368 = OpVariable UniformConstant 
                                             %370 = OpTypeSampledImage %145 
                                             %372 = OpTypePointer Input %137 
                        Input f32_2* vs_TEXCOORD0 = OpVariable Input 
                                         i32 %378 = OpConstant 10 
                                             %383 = OpTypePointer Output %7 
                               Output f32_4* %384 = OpVariable Output 
                                             %390 = OpTypePointer Output %6 
                              Private f32_3* %392 = OpVariable Private 
                                         i32 %398 = OpConstant 9 
                                          void %4 = OpFunction None %3 
                                               %5 = OpLabel 
                             Function f32_3* %136 = OpVariable Function 
                                        f32_3 %13 = OpLoad vs_TEXCOORD2 
                               Uniform f32_4* %25 = OpAccessChain %21 %23 
                                        f32_4 %26 = OpLoad %25 
                                        f32_3 %27 = OpVectorShuffle %26 %26 0 1 2 
                                        f32_3 %28 = OpFNegate %27 
                                        f32_3 %29 = OpFAdd %13 %28 
                                        f32_4 %30 = OpLoad %9 
                                        f32_4 %31 = OpVectorShuffle %30 %29 4 5 6 3 
                                                      OpStore %9 %31 
                                        f32_4 %32 = OpLoad %9 
                                        f32_3 %33 = OpVectorShuffle %32 %32 0 1 2 
                                        f32_4 %34 = OpLoad %9 
                                        f32_3 %35 = OpVectorShuffle %34 %34 0 1 2 
                                          f32 %36 = OpDot %33 %35 
                                 Private f32* %39 = OpAccessChain %9 %37 
                                                      OpStore %39 %36 
                                 Private f32* %40 = OpAccessChain %9 %37 
                                          f32 %41 = OpLoad %40 
                                          f32 %42 = OpExtInst %1 31 %41 
                                 Private f32* %43 = OpAccessChain %9 %37 
                                                      OpStore %43 %42 
                                        f32_3 %46 = OpLoad vs_TEXCOORD2 
                                        f32_3 %47 = OpFNegate %46 
                               Uniform f32_3* %50 = OpAccessChain %21 %48 
                                        f32_3 %51 = OpLoad %50 
                                        f32_3 %52 = OpFAdd %47 %51 
                                                      OpStore %45 %52 
                                 Uniform f32* %57 = OpAccessChain %21 %54 %48 %55 
                                          f32 %58 = OpLoad %57 
                                 Private f32* %59 = OpAccessChain %53 %37 
                                                      OpStore %59 %58 
                                 Uniform f32* %61 = OpAccessChain %21 %54 %60 %55 
                                          f32 %62 = OpLoad %61 
                                 Private f32* %64 = OpAccessChain %53 %63 
                                                      OpStore %64 %62 
                                 Uniform f32* %66 = OpAccessChain %21 %54 %65 %55 
                                          f32 %67 = OpLoad %66 
                                 Private f32* %68 = OpAccessChain %53 %55 
                                                      OpStore %68 %67 
                                        f32_3 %69 = OpLoad %45 
                                        f32_3 %70 = OpLoad %53 
                                          f32 %71 = OpDot %69 %70 
                                 Private f32* %72 = OpAccessChain %45 %37 
                                                      OpStore %72 %71 
                                 Private f32* %73 = OpAccessChain %45 %37 
                                          f32 %74 = OpLoad %73 
                                          f32 %75 = OpFNegate %74 
                                 Private f32* %76 = OpAccessChain %9 %37 
                                          f32 %77 = OpLoad %76 
                                          f32 %78 = OpFAdd %75 %77 
                                 Private f32* %79 = OpAccessChain %9 %37 
                                                      OpStore %79 %78 
                                 Uniform f32* %81 = OpAccessChain %21 %23 %80 
                                          f32 %82 = OpLoad %81 
                                 Private f32* %83 = OpAccessChain %9 %37 
                                          f32 %84 = OpLoad %83 
                                          f32 %85 = OpFMul %82 %84 
                                 Private f32* %86 = OpAccessChain %45 %37 
                                          f32 %87 = OpLoad %86 
                                          f32 %88 = OpFAdd %85 %87 
                                 Private f32* %89 = OpAccessChain %9 %37 
                                                      OpStore %89 %88 
                                 Private f32* %90 = OpAccessChain %9 %37 
                                          f32 %91 = OpLoad %90 
                                 Uniform f32* %93 = OpAccessChain %21 %92 %55 
                                          f32 %94 = OpLoad %93 
                                          f32 %95 = OpFMul %91 %94 
                                 Uniform f32* %96 = OpAccessChain %21 %92 %80 
                                          f32 %97 = OpLoad %96 
                                          f32 %98 = OpFAdd %95 %97 
                                 Private f32* %99 = OpAccessChain %9 %37 
                                                      OpStore %99 %98 
                                Private f32* %100 = OpAccessChain %9 %37 
                                         f32 %101 = OpLoad %100 
                                         f32 %104 = OpExtInst %1 43 %101 %102 %103 
                                Private f32* %105 = OpAccessChain %9 %37 
                                                      OpStore %105 %104 
                                       f32_3 %106 = OpLoad vs_TEXCOORD2 
                                       f32_3 %107 = OpVectorShuffle %106 %106 1 1 1 
                              Uniform f32_4* %109 = OpAccessChain %21 %108 %60 
                                       f32_4 %110 = OpLoad %109 
                                       f32_3 %111 = OpVectorShuffle %110 %110 0 1 2 
                                       f32_3 %112 = OpFMul %107 %111 
                                                      OpStore %45 %112 
                              Uniform f32_4* %113 = OpAccessChain %21 %108 %48 
                                       f32_4 %114 = OpLoad %113 
                                       f32_3 %115 = OpVectorShuffle %114 %114 0 1 2 
                                       f32_3 %116 = OpLoad vs_TEXCOORD2 
                                       f32_3 %117 = OpVectorShuffle %116 %116 0 0 0 
                                       f32_3 %118 = OpFMul %115 %117 
                                       f32_3 %119 = OpLoad %45 
                                       f32_3 %120 = OpFAdd %118 %119 
                                                      OpStore %45 %120 
                              Uniform f32_4* %121 = OpAccessChain %21 %108 %65 
                                       f32_4 %122 = OpLoad %121 
                                       f32_3 %123 = OpVectorShuffle %122 %122 0 1 2 
                                       f32_3 %124 = OpLoad vs_TEXCOORD2 
                                       f32_3 %125 = OpVectorShuffle %124 %124 2 2 2 
                                       f32_3 %126 = OpFMul %123 %125 
                                       f32_3 %127 = OpLoad %45 
                                       f32_3 %128 = OpFAdd %126 %127 
                                                      OpStore %45 %128 
                                       f32_3 %129 = OpLoad %45 
                              Uniform f32_4* %131 = OpAccessChain %21 %108 %130 
                                       f32_4 %132 = OpLoad %131 
                                       f32_3 %133 = OpVectorShuffle %132 %132 0 1 2 
                                       f32_3 %134 = OpFAdd %129 %133 
                                                      OpStore %45 %134 
                                       f32_3 %138 = OpLoad %45 
                                       f32_2 %139 = OpVectorShuffle %138 %138 0 1 
                                Private f32* %140 = OpAccessChain %45 %55 
                                         f32 %141 = OpLoad %140 
                                         f32 %142 = OpCompositeExtract %139 0 
                                         f32 %143 = OpCompositeExtract %139 1 
                                       f32_3 %144 = OpCompositeConstruct %142 %143 %141 
                                                      OpStore %136 %144 
                         read_only Texture2D %148 = OpLoad %147 
                                     sampler %152 = OpLoad %151 
                  read_only Texture2DSampled %155 = OpSampledImage %148 %152 
                                       f32_3 %156 = OpLoad %136 
                                         f32 %157 = OpCompositeExtract %156 2 
                                         f32 %158 = OpImageSampleDrefExplicitLod %155 %156 %157 Lod %6 
                                Private f32* %159 = OpAccessChain %45 %37 
                                                      OpStore %159 %158 
                                Uniform f32* %161 = OpAccessChain %21 %92 %37 
                                         f32 %162 = OpLoad %161 
                                         f32 %163 = OpFNegate %162 
                                         f32 %164 = OpFAdd %163 %103 
                                Private f32* %165 = OpAccessChain %160 %37 
                                                      OpStore %165 %164 
                                Private f32* %166 = OpAccessChain %45 %37 
                                         f32 %167 = OpLoad %166 
                                Private f32* %168 = OpAccessChain %160 %37 
                                         f32 %169 = OpLoad %168 
                                         f32 %170 = OpFMul %167 %169 
                                Uniform f32* %171 = OpAccessChain %21 %92 %37 
                                         f32 %172 = OpLoad %171 
                                         f32 %173 = OpFAdd %170 %172 
                                Private f32* %174 = OpAccessChain %160 %37 
                                                      OpStore %174 %173 
                                Private f32* %176 = OpAccessChain %160 %37 
                                         f32 %177 = OpLoad %176 
                                         f32 %178 = OpFNegate %177 
                                         f32 %179 = OpFAdd %178 %103 
                                Private f32* %180 = OpAccessChain %175 %37 
                                                      OpStore %180 %179 
                                Private f32* %181 = OpAccessChain %9 %37 
                                         f32 %182 = OpLoad %181 
                                Private f32* %183 = OpAccessChain %175 %37 
                                         f32 %184 = OpLoad %183 
                                         f32 %185 = OpFMul %182 %184 
                                Private f32* %186 = OpAccessChain %160 %37 
                                         f32 %187 = OpLoad %186 
                                         f32 %188 = OpFAdd %185 %187 
                                Private f32* %189 = OpAccessChain %160 %37 
                                                      OpStore %189 %188 
                                       f32_3 %191 = OpLoad vs_TEXCOORD1 
                                       f32_3 %192 = OpLoad vs_TEXCOORD1 
                                         f32 %193 = OpDot %191 %192 
                                Private f32* %194 = OpAccessChain %175 %37 
                                                      OpStore %194 %193 
                                Private f32* %195 = OpAccessChain %175 %37 
                                         f32 %196 = OpLoad %195 
                                         f32 %197 = OpExtInst %1 32 %196 
                                Private f32* %198 = OpAccessChain %175 %37 
                                                      OpStore %198 %197 
                                       f32_3 %199 = OpLoad %175 
                                       f32_3 %200 = OpVectorShuffle %199 %199 0 0 0 
                                       f32_3 %201 = OpLoad vs_TEXCOORD1 
                                       f32_3 %202 = OpFMul %200 %201 
                                                      OpStore %175 %202 
                                       f32_3 %203 = OpLoad %175 
                              Uniform f32_4* %204 = OpAccessChain %21 %60 
                                       f32_4 %205 = OpLoad %204 
                                       f32_3 %206 = OpVectorShuffle %205 %205 0 1 2 
                                         f32 %207 = OpDot %203 %206 
                                Private f32* %208 = OpAccessChain %175 %37 
                                                      OpStore %208 %207 
                                Private f32* %209 = OpAccessChain %175 %37 
                                         f32 %210 = OpLoad %209 
                                         f32 %211 = OpExtInst %1 40 %210 %102 
                                Private f32* %212 = OpAccessChain %175 %37 
                                                      OpStore %212 %211 
                                Uniform f32* %215 = OpAccessChain %21 %214 
                                         f32 %216 = OpLoad %215 
                                         f32 %217 = OpFNegate %216 
                                         f32 %219 = OpFMul %217 %218 
                                Uniform f32* %221 = OpAccessChain %21 %220 
                                         f32 %222 = OpLoad %221 
                                         f32 %223 = OpFAdd %219 %222 
                                                      OpStore %213 %223 
                                         f32 %224 = OpLoad %213 
                                         f32 %225 = OpFNegate %224 
                                Private f32* %226 = OpAccessChain %175 %37 
                                         f32 %227 = OpLoad %226 
                                         f32 %228 = OpFAdd %225 %227 
                                Private f32* %229 = OpAccessChain %175 %37 
                                                      OpStore %229 %228 
                                Uniform f32* %231 = OpAccessChain %21 %214 
                                         f32 %232 = OpLoad %231 
                                         f32 %233 = OpFMul %232 %218 
                                Uniform f32* %234 = OpAccessChain %21 %220 
                                         f32 %235 = OpLoad %234 
                                         f32 %236 = OpFAdd %233 %235 
                                                      OpStore %230 %236 
                                         f32 %237 = OpLoad %213 
                                         f32 %238 = OpFNegate %237 
                                         f32 %239 = OpLoad %230 
                                         f32 %240 = OpFAdd %238 %239 
                                                      OpStore %213 %240 
                                         f32 %241 = OpLoad %213 
                                         f32 %242 = OpFDiv %103 %241 
                                                      OpStore %213 %242 
                                         f32 %243 = OpLoad %213 
                                Private f32* %244 = OpAccessChain %175 %37 
                                         f32 %245 = OpLoad %244 
                                         f32 %246 = OpFMul %243 %245 
                                Private f32* %247 = OpAccessChain %175 %37 
                                                      OpStore %247 %246 
                                Private f32* %248 = OpAccessChain %175 %37 
                                         f32 %249 = OpLoad %248 
                                         f32 %250 = OpExtInst %1 43 %249 %102 %103 
                                Private f32* %251 = OpAccessChain %175 %37 
                                                      OpStore %251 %250 
                                Private f32* %252 = OpAccessChain %175 %37 
                                         f32 %253 = OpLoad %252 
                                         f32 %255 = OpFMul %253 %254 
                                         f32 %257 = OpFAdd %255 %256 
                                                      OpStore %213 %257 
                                Private f32* %258 = OpAccessChain %175 %37 
                                         f32 %259 = OpLoad %258 
                                Private f32* %260 = OpAccessChain %175 %37 
                                         f32 %261 = OpLoad %260 
                                         f32 %262 = OpFMul %259 %261 
                                Private f32* %263 = OpAccessChain %175 %37 
                                                      OpStore %263 %262 
                                Private f32* %264 = OpAccessChain %175 %37 
                                         f32 %265 = OpLoad %264 
                                         f32 %266 = OpLoad %213 
                                         f32 %267 = OpFMul %265 %266 
                                Private f32* %268 = OpAccessChain %175 %37 
                                                      OpStore %268 %267 
                                Private f32* %269 = OpAccessChain %160 %37 
                                         f32 %270 = OpLoad %269 
                                Private f32* %271 = OpAccessChain %175 %37 
                                         f32 %272 = OpLoad %271 
                                         f32 %273 = OpFMul %270 %272 
                                Private f32* %274 = OpAccessChain %160 %37 
                                                      OpStore %274 %273 
                              Uniform f32_4* %276 = OpAccessChain %21 %275 
                                       f32_4 %277 = OpLoad %276 
                                       f32_3 %278 = OpVectorShuffle %277 %277 0 1 2 
                                       f32_3 %279 = OpFNegate %278 
                              Uniform f32_4* %281 = OpAccessChain %21 %280 
                                       f32_4 %282 = OpLoad %281 
                                       f32_3 %283 = OpVectorShuffle %282 %282 0 1 2 
                                       f32_3 %284 = OpFAdd %279 %283 
                                                      OpStore %175 %284 
                              Uniform f32_4* %285 = OpAccessChain %21 %280 
                                       f32_4 %286 = OpLoad %285 
                                       f32_3 %287 = OpVectorShuffle %286 %286 3 3 3 
                                       f32_3 %288 = OpLoad %175 
                                       f32_3 %289 = OpFMul %287 %288 
                              Uniform f32_4* %290 = OpAccessChain %21 %275 
                                       f32_4 %291 = OpLoad %290 
                                       f32_3 %292 = OpVectorShuffle %291 %291 0 1 2 
                                       f32_3 %293 = OpFAdd %289 %292 
                                                      OpStore %175 %293 
                                       f32_3 %295 = OpLoad %175 
                                       f32_3 %296 = OpFNegate %295 
                              Uniform f32_4* %297 = OpAccessChain %21 %275 
                                       f32_4 %298 = OpLoad %297 
                                       f32_3 %299 = OpVectorShuffle %298 %298 0 1 2 
                                       f32_3 %300 = OpFAdd %296 %299 
                                                      OpStore %294 %300 
                                       f32_3 %301 = OpLoad %160 
                                       f32_3 %302 = OpVectorShuffle %301 %301 0 0 0 
                                       f32_3 %303 = OpLoad %294 
                                       f32_3 %304 = OpFMul %302 %303 
                                       f32_3 %305 = OpLoad %175 
                                       f32_3 %306 = OpFAdd %304 %305 
                                                      OpStore %160 %306 
                                       f32_3 %307 = OpLoad vs_TEXCOORD1 
                                       f32_4 %308 = OpLoad %9 
                                       f32_4 %309 = OpVectorShuffle %308 %307 4 5 6 3 
                                                      OpStore %9 %309 
                                Private f32* %310 = OpAccessChain %9 %80 
                                                      OpStore %310 %103 
                              Uniform f32_4* %311 = OpAccessChain %21 %65 
                                       f32_4 %312 = OpLoad %311 
                                       f32_4 %313 = OpLoad %9 
                                         f32 %314 = OpDot %312 %313 
                                Private f32* %315 = OpAccessChain %294 %37 
                                                      OpStore %315 %314 
                              Uniform f32_4* %316 = OpAccessChain %21 %130 
                                       f32_4 %317 = OpLoad %316 
                                       f32_4 %318 = OpLoad %9 
                                         f32 %319 = OpDot %317 %318 
                                Private f32* %320 = OpAccessChain %294 %63 
                                                      OpStore %320 %319 
                              Uniform f32_4* %322 = OpAccessChain %21 %321 
                                       f32_4 %323 = OpLoad %322 
                                       f32_4 %324 = OpLoad %9 
                                         f32 %325 = OpDot %323 %324 
                                Private f32* %326 = OpAccessChain %294 %55 
                                                      OpStore %326 %325 
                                       f32_3 %327 = OpLoad %294 
                                       f32_3 %329 = OpLoad vs_TEXCOORD3 
                                       f32_3 %330 = OpFAdd %327 %329 
                                                      OpStore %294 %330 
                                       f32_3 %331 = OpLoad %294 
                                       f32_3 %333 = OpExtInst %1 40 %331 %332 
                                                      OpStore %294 %333 
                                       f32_3 %334 = OpLoad %294 
                                       f32_3 %335 = OpExtInst %1 30 %334 
                                       f32_4 %336 = OpLoad %9 
                                       f32_4 %337 = OpVectorShuffle %336 %335 4 5 6 3 
                                                      OpStore %9 %337 
                                       f32_4 %338 = OpLoad %9 
                                       f32_3 %339 = OpVectorShuffle %338 %338 0 1 2 
                                       f32_3 %342 = OpFMul %339 %341 
                                       f32_4 %343 = OpLoad %9 
                                       f32_4 %344 = OpVectorShuffle %343 %342 4 5 6 3 
                                                      OpStore %9 %344 
                                       f32_4 %345 = OpLoad %9 
                                       f32_3 %346 = OpVectorShuffle %345 %345 0 1 2 
                                       f32_3 %347 = OpExtInst %1 29 %346 
                                       f32_4 %348 = OpLoad %9 
                                       f32_4 %349 = OpVectorShuffle %348 %347 4 5 6 3 
                                                      OpStore %9 %349 
                                       f32_4 %350 = OpLoad %9 
                                       f32_3 %351 = OpVectorShuffle %350 %350 0 1 2 
                                       f32_3 %354 = OpFMul %351 %353 
                                       f32_3 %357 = OpFAdd %354 %356 
                                       f32_4 %358 = OpLoad %9 
                                       f32_4 %359 = OpVectorShuffle %358 %357 4 5 6 3 
                                                      OpStore %9 %359 
                                       f32_4 %360 = OpLoad %9 
                                       f32_3 %361 = OpVectorShuffle %360 %360 0 1 2 
                                       f32_3 %362 = OpExtInst %1 40 %361 %332 
                                       f32_4 %363 = OpLoad %9 
                                       f32_4 %364 = OpVectorShuffle %363 %362 4 5 6 3 
                                                      OpStore %9 %364 
                         read_only Texture2D %367 = OpLoad %366 
                                     sampler %369 = OpLoad %368 
                  read_only Texture2DSampled %371 = OpSampledImage %367 %369 
                                       f32_2 %374 = OpLoad vs_TEXCOORD0 
                                       f32_4 %375 = OpImageSampleImplicitLod %371 %374 
                                                      OpStore %365 %375 
                                       f32_4 %376 = OpLoad %365 
                                       f32_3 %377 = OpVectorShuffle %376 %376 0 1 2 
                              Uniform f32_4* %379 = OpAccessChain %21 %378 
                                       f32_4 %380 = OpLoad %379 
                                       f32_3 %381 = OpVectorShuffle %380 %380 0 1 2 
                                       f32_3 %382 = OpFMul %377 %381 
                                                      OpStore %294 %382 
                                Private f32* %385 = OpAccessChain %365 %80 
                                         f32 %386 = OpLoad %385 
                                Uniform f32* %387 = OpAccessChain %21 %378 %80 
                                         f32 %388 = OpLoad %387 
                                         f32 %389 = OpFMul %386 %388 
                                 Output f32* %391 = OpAccessChain %384 %80 
                                                      OpStore %391 %389 
                                       f32_4 %393 = OpLoad %9 
                                       f32_3 %394 = OpVectorShuffle %393 %393 0 1 2 
                                       f32_3 %395 = OpLoad %294 
                                       f32_3 %396 = OpFMul %394 %395 
                                                      OpStore %392 %396 
                                       f32_3 %397 = OpLoad %294 
                              Uniform f32_4* %399 = OpAccessChain %21 %398 
                                       f32_4 %400 = OpLoad %399 
                                       f32_3 %401 = OpVectorShuffle %400 %400 0 1 2 
                                       f32_3 %402 = OpFMul %397 %401 
                                                      OpStore %294 %402 
                                       f32_3 %403 = OpLoad %294 
                                       f32_3 %404 = OpLoad %160 
                                       f32_3 %405 = OpFMul %403 %404 
                                       f32_3 %406 = OpLoad %392 
                                       f32_3 %407 = OpFAdd %405 %406 
                                       f32_4 %408 = OpLoad %384 
                                       f32_4 %409 = OpVectorShuffle %408 %407 4 5 6 3 
                                                      OpStore %384 %409 
                                                      OpReturn
                                                      OpFunctionEnd
"
}
SubProgram "gles3 hw_tier00 " {
Keywords { "DIRECTIONAL" "VERTEXLIGHT_ON" }
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in highp vec3 in_NORMAL0;
in highp vec4 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out highp vec3 vs_TEXCOORD1;
out highp vec3 vs_TEXCOORD2;
out highp vec4 vs_TEXCOORD5;
out highp vec4 vs_TEXCOORD6;
vec4 u_xlat0;
vec4 u_xlat1;
float u_xlat6;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    vs_TEXCOORD2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
    u_xlat0 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat0;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat0;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat0.xy;
    u_xlat0.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat6 = dot(u_xlat0.xyz, u_xlat0.xyz);
    u_xlat6 = inversesqrt(u_xlat6);
    vs_TEXCOORD1.xyz = vec3(u_xlat6) * u_xlat0.xyz;
    vs_TEXCOORD5 = vec4(0.0, 0.0, 0.0, 0.0);
    vs_TEXCOORD6 = vec4(0.0, 0.0, 0.0, 0.0);
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 _LightColor0;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 _HColor;
uniform 	mediump vec4 _SColor;
uniform 	mediump float _RampThreshold;
uniform 	mediump float _RampSmooth;
UNITY_LOCATION(0) uniform mediump sampler2D _MainTex;
in mediump vec2 vs_TEXCOORD0;
in highp vec3 vs_TEXCOORD1;
layout(location = 0) out mediump vec4 SV_Target0;
mediump vec3 u_xlat16_0;
mediump vec4 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
mediump float u_xlat16_6;
void main()
{
    u_xlat16_0.x = dot(vs_TEXCOORD1.xyz, vs_TEXCOORD1.xyz);
    u_xlat16_0.x = inversesqrt(u_xlat16_0.x);
    u_xlat16_0.xyz = u_xlat16_0.xxx * vs_TEXCOORD1.xyz;
    u_xlat16_0.x = dot(u_xlat16_0.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat16_0.x = max(u_xlat16_0.x, 0.0);
    u_xlat16_3.x = (-_RampSmooth) * 0.5 + _RampThreshold;
    u_xlat16_0.x = (-u_xlat16_3.x) + u_xlat16_0.x;
    u_xlat16_6 = _RampSmooth * 0.5 + _RampThreshold;
    u_xlat16_3.x = (-u_xlat16_3.x) + u_xlat16_6;
    u_xlat16_3.x = float(1.0) / u_xlat16_3.x;
    u_xlat16_0.x = u_xlat16_3.x * u_xlat16_0.x;
#ifdef UNITY_ADRENO_ES3
    u_xlat16_0.x = min(max(u_xlat16_0.x, 0.0), 1.0);
#else
    u_xlat16_0.x = clamp(u_xlat16_0.x, 0.0, 1.0);
#endif
    u_xlat16_3.x = u_xlat16_0.x * -2.0 + 3.0;
    u_xlat16_0.x = u_xlat16_0.x * u_xlat16_0.x;
    u_xlat16_0.x = u_xlat16_0.x * u_xlat16_3.x;
    u_xlat16_3.xyz = (-_HColor.xyz) + _SColor.xyz;
    u_xlat16_3.xyz = _SColor.www * u_xlat16_3.xyz + _HColor.xyz;
    u_xlat16_1.xyz = (-u_xlat16_3.xyz) + _HColor.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xxx * u_xlat16_1.xyz + u_xlat16_3.xyz;
    u_xlat16_1 = texture(_MainTex, vs_TEXCOORD0.xy);
    u_xlat16_2.xyz = u_xlat16_1.xyz * _Color.xyz;
    SV_Target0.w = u_xlat16_1.w * _Color.w;
    u_xlat16_2.xyz = u_xlat16_2.xyz * _LightColor0.xyz;
    SV_Target0.xyz = u_xlat16_0.xyz * u_xlat16_2.xyz;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier01 " {
Keywords { "DIRECTIONAL" "VERTEXLIGHT_ON" }
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in highp vec3 in_NORMAL0;
in highp vec4 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out highp vec3 vs_TEXCOORD1;
out highp vec3 vs_TEXCOORD2;
out highp vec4 vs_TEXCOORD5;
out highp vec4 vs_TEXCOORD6;
vec4 u_xlat0;
vec4 u_xlat1;
float u_xlat6;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    vs_TEXCOORD2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
    u_xlat0 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat0;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat0;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat0.xy;
    u_xlat0.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat6 = dot(u_xlat0.xyz, u_xlat0.xyz);
    u_xlat6 = inversesqrt(u_xlat6);
    vs_TEXCOORD1.xyz = vec3(u_xlat6) * u_xlat0.xyz;
    vs_TEXCOORD5 = vec4(0.0, 0.0, 0.0, 0.0);
    vs_TEXCOORD6 = vec4(0.0, 0.0, 0.0, 0.0);
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 _LightColor0;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 _HColor;
uniform 	mediump vec4 _SColor;
uniform 	mediump float _RampThreshold;
uniform 	mediump float _RampSmooth;
UNITY_LOCATION(0) uniform mediump sampler2D _MainTex;
in mediump vec2 vs_TEXCOORD0;
in highp vec3 vs_TEXCOORD1;
layout(location = 0) out mediump vec4 SV_Target0;
mediump vec3 u_xlat16_0;
mediump vec4 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
mediump float u_xlat16_6;
void main()
{
    u_xlat16_0.x = dot(vs_TEXCOORD1.xyz, vs_TEXCOORD1.xyz);
    u_xlat16_0.x = inversesqrt(u_xlat16_0.x);
    u_xlat16_0.xyz = u_xlat16_0.xxx * vs_TEXCOORD1.xyz;
    u_xlat16_0.x = dot(u_xlat16_0.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat16_0.x = max(u_xlat16_0.x, 0.0);
    u_xlat16_3.x = (-_RampSmooth) * 0.5 + _RampThreshold;
    u_xlat16_0.x = (-u_xlat16_3.x) + u_xlat16_0.x;
    u_xlat16_6 = _RampSmooth * 0.5 + _RampThreshold;
    u_xlat16_3.x = (-u_xlat16_3.x) + u_xlat16_6;
    u_xlat16_3.x = float(1.0) / u_xlat16_3.x;
    u_xlat16_0.x = u_xlat16_3.x * u_xlat16_0.x;
#ifdef UNITY_ADRENO_ES3
    u_xlat16_0.x = min(max(u_xlat16_0.x, 0.0), 1.0);
#else
    u_xlat16_0.x = clamp(u_xlat16_0.x, 0.0, 1.0);
#endif
    u_xlat16_3.x = u_xlat16_0.x * -2.0 + 3.0;
    u_xlat16_0.x = u_xlat16_0.x * u_xlat16_0.x;
    u_xlat16_0.x = u_xlat16_0.x * u_xlat16_3.x;
    u_xlat16_3.xyz = (-_HColor.xyz) + _SColor.xyz;
    u_xlat16_3.xyz = _SColor.www * u_xlat16_3.xyz + _HColor.xyz;
    u_xlat16_1.xyz = (-u_xlat16_3.xyz) + _HColor.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xxx * u_xlat16_1.xyz + u_xlat16_3.xyz;
    u_xlat16_1 = texture(_MainTex, vs_TEXCOORD0.xy);
    u_xlat16_2.xyz = u_xlat16_1.xyz * _Color.xyz;
    SV_Target0.w = u_xlat16_1.w * _Color.w;
    u_xlat16_2.xyz = u_xlat16_2.xyz * _LightColor0.xyz;
    SV_Target0.xyz = u_xlat16_0.xyz * u_xlat16_2.xyz;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier02 " {
Keywords { "DIRECTIONAL" "VERTEXLIGHT_ON" }
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in highp vec3 in_NORMAL0;
in highp vec4 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out highp vec3 vs_TEXCOORD1;
out highp vec3 vs_TEXCOORD2;
out highp vec4 vs_TEXCOORD5;
out highp vec4 vs_TEXCOORD6;
vec4 u_xlat0;
vec4 u_xlat1;
float u_xlat6;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    vs_TEXCOORD2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
    u_xlat0 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat0;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat0;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat0.xy;
    u_xlat0.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat6 = dot(u_xlat0.xyz, u_xlat0.xyz);
    u_xlat6 = inversesqrt(u_xlat6);
    vs_TEXCOORD1.xyz = vec3(u_xlat6) * u_xlat0.xyz;
    vs_TEXCOORD5 = vec4(0.0, 0.0, 0.0, 0.0);
    vs_TEXCOORD6 = vec4(0.0, 0.0, 0.0, 0.0);
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 _LightColor0;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 _HColor;
uniform 	mediump vec4 _SColor;
uniform 	mediump float _RampThreshold;
uniform 	mediump float _RampSmooth;
UNITY_LOCATION(0) uniform mediump sampler2D _MainTex;
in mediump vec2 vs_TEXCOORD0;
in highp vec3 vs_TEXCOORD1;
layout(location = 0) out mediump vec4 SV_Target0;
mediump vec3 u_xlat16_0;
mediump vec4 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
mediump float u_xlat16_6;
void main()
{
    u_xlat16_0.x = dot(vs_TEXCOORD1.xyz, vs_TEXCOORD1.xyz);
    u_xlat16_0.x = inversesqrt(u_xlat16_0.x);
    u_xlat16_0.xyz = u_xlat16_0.xxx * vs_TEXCOORD1.xyz;
    u_xlat16_0.x = dot(u_xlat16_0.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat16_0.x = max(u_xlat16_0.x, 0.0);
    u_xlat16_3.x = (-_RampSmooth) * 0.5 + _RampThreshold;
    u_xlat16_0.x = (-u_xlat16_3.x) + u_xlat16_0.x;
    u_xlat16_6 = _RampSmooth * 0.5 + _RampThreshold;
    u_xlat16_3.x = (-u_xlat16_3.x) + u_xlat16_6;
    u_xlat16_3.x = float(1.0) / u_xlat16_3.x;
    u_xlat16_0.x = u_xlat16_3.x * u_xlat16_0.x;
#ifdef UNITY_ADRENO_ES3
    u_xlat16_0.x = min(max(u_xlat16_0.x, 0.0), 1.0);
#else
    u_xlat16_0.x = clamp(u_xlat16_0.x, 0.0, 1.0);
#endif
    u_xlat16_3.x = u_xlat16_0.x * -2.0 + 3.0;
    u_xlat16_0.x = u_xlat16_0.x * u_xlat16_0.x;
    u_xlat16_0.x = u_xlat16_0.x * u_xlat16_3.x;
    u_xlat16_3.xyz = (-_HColor.xyz) + _SColor.xyz;
    u_xlat16_3.xyz = _SColor.www * u_xlat16_3.xyz + _HColor.xyz;
    u_xlat16_1.xyz = (-u_xlat16_3.xyz) + _HColor.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xxx * u_xlat16_1.xyz + u_xlat16_3.xyz;
    u_xlat16_1 = texture(_MainTex, vs_TEXCOORD0.xy);
    u_xlat16_2.xyz = u_xlat16_1.xyz * _Color.xyz;
    SV_Target0.w = u_xlat16_1.w * _Color.w;
    u_xlat16_2.xyz = u_xlat16_2.xyz * _LightColor0.xyz;
    SV_Target0.xyz = u_xlat16_0.xyz * u_xlat16_2.xyz;
    return;
}

#endif
"
}
SubProgram "vulkan hw_tier00 " {
Keywords { "DIRECTIONAL" "VERTEXLIGHT_ON" }
"; SPIR-V
; Version: 1.0
; Generator: Khronos Glslang Reference Front End; 6
; Bound: 160
; Schema: 0
                                                      OpCapability Shader 
                                               %1 = OpExtInstImport "GLSL.std.450" 
                                                      OpMemoryModel Logical GLSL450 
                                                      OpEntryPoint Vertex %4 "main" %11 %52 %85 %95 %110 %114 %144 %150 %153 
                                                      OpName vs_TEXCOORD2 "vs_TEXCOORD2" 
                                                      OpName vs_TEXCOORD0 "vs_TEXCOORD0" 
                                                      OpName vs_TEXCOORD1 "vs_TEXCOORD1" 
                                                      OpName vs_TEXCOORD5 "vs_TEXCOORD5" 
                                                      OpName vs_TEXCOORD6 "vs_TEXCOORD6" 
                                                      OpDecorate %11 Location 11 
                                                      OpDecorate %16 ArrayStride 16 
                                                      OpDecorate %17 ArrayStride 17 
                                                      OpDecorate %18 ArrayStride 18 
                                                      OpMemberDecorate %19 0 Offset 19 
                                                      OpMemberDecorate %19 1 Offset 19 
                                                      OpMemberDecorate %19 2 Offset 19 
                                                      OpMemberDecorate %19 3 Offset 19 
                                                      OpDecorate %19 Block 
                                                      OpDecorate %21 DescriptorSet 21 
                                                      OpDecorate %21 Binding 21 
                                                      OpDecorate vs_TEXCOORD2 Location 52 
                                                      OpMemberDecorate %83 0 BuiltIn 83 
                                                      OpMemberDecorate %83 1 BuiltIn 83 
                                                      OpMemberDecorate %83 2 BuiltIn 83 
                                                      OpDecorate %83 Block 
                                                      OpDecorate %95 Location 95 
                                                      OpDecorate vs_TEXCOORD0 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD0 Location 110 
                                                      OpDecorate %114 Location 114 
                                                      OpDecorate vs_TEXCOORD1 Location 144 
                                                      OpDecorate vs_TEXCOORD5 Location 150 
                                                      OpDecorate vs_TEXCOORD6 Location 153 
                                               %2 = OpTypeVoid 
                                               %3 = OpTypeFunction %2 
                                               %6 = OpTypeFloat 32 
                                               %7 = OpTypeVector %6 4 
                                               %8 = OpTypePointer Private %7 
                                Private f32_4* %9 = OpVariable Private 
                                              %10 = OpTypePointer Input %7 
                                 Input f32_4* %11 = OpVariable Input 
                                              %14 = OpTypeInt 32 0 
                                          u32 %15 = OpConstant 4 
                                              %16 = OpTypeArray %7 %15 
                                              %17 = OpTypeArray %7 %15 
                                              %18 = OpTypeArray %7 %15 
                                              %19 = OpTypeStruct %16 %17 %18 %7 
                                              %20 = OpTypePointer Uniform %19 
Uniform struct {f32_4[4]; f32_4[4]; f32_4[4]; f32_4;}* %21 = OpVariable Uniform 
                                              %22 = OpTypeInt 32 1 
                                          i32 %23 = OpConstant 0 
                                          i32 %24 = OpConstant 1 
                                              %25 = OpTypePointer Uniform %7 
                                          i32 %36 = OpConstant 2 
                               Private f32_4* %44 = OpVariable Private 
                                          i32 %46 = OpConstant 3 
                                              %50 = OpTypeVector %6 3 
                                              %51 = OpTypePointer Output %50 
                       Output f32_3* vs_TEXCOORD2 = OpVariable Output 
                                          u32 %81 = OpConstant 1 
                                              %82 = OpTypeArray %6 %81 
                                              %83 = OpTypeStruct %7 %6 %82 
                                              %84 = OpTypePointer Output %83 
         Output struct {f32_4; f32; f32[1];}* %85 = OpVariable Output 
                                              %93 = OpTypePointer Output %7 
                                 Input f32_4* %95 = OpVariable Input 
                                              %96 = OpTypeVector %6 2 
                                             %109 = OpTypePointer Output %96 
                       Output f32_2* vs_TEXCOORD0 = OpVariable Output 
                                             %113 = OpTypePointer Input %50 
                                Input f32_3* %114 = OpVariable Input 
                                         u32 %120 = OpConstant 0 
                                             %121 = OpTypePointer Private %6 
                                         u32 %134 = OpConstant 2 
                                Private f32* %136 = OpVariable Private 
                       Output f32_3* vs_TEXCOORD1 = OpVariable Output 
                       Output f32_4* vs_TEXCOORD5 = OpVariable Output 
                                         f32 %151 = OpConstant 3.674022E-40 
                                       f32_4 %152 = OpConstantComposite %151 %151 %151 %151 
                       Output f32_4* vs_TEXCOORD6 = OpVariable Output 
                                             %154 = OpTypePointer Output %6 
                                          void %4 = OpFunction None %3 
                                               %5 = OpLabel 
                                        f32_4 %12 = OpLoad %11 
                                        f32_4 %13 = OpVectorShuffle %12 %12 1 1 1 1 
                               Uniform f32_4* %26 = OpAccessChain %21 %23 %24 
                                        f32_4 %27 = OpLoad %26 
                                        f32_4 %28 = OpFMul %13 %27 
                                                      OpStore %9 %28 
                               Uniform f32_4* %29 = OpAccessChain %21 %23 %23 
                                        f32_4 %30 = OpLoad %29 
                                        f32_4 %31 = OpLoad %11 
                                        f32_4 %32 = OpVectorShuffle %31 %31 0 0 0 0 
                                        f32_4 %33 = OpFMul %30 %32 
                                        f32_4 %34 = OpLoad %9 
                                        f32_4 %35 = OpFAdd %33 %34 
                                                      OpStore %9 %35 
                               Uniform f32_4* %37 = OpAccessChain %21 %23 %36 
                                        f32_4 %38 = OpLoad %37 
                                        f32_4 %39 = OpLoad %11 
                                        f32_4 %40 = OpVectorShuffle %39 %39 2 2 2 2 
                                        f32_4 %41 = OpFMul %38 %40 
                                        f32_4 %42 = OpLoad %9 
                                        f32_4 %43 = OpFAdd %41 %42 
                                                      OpStore %9 %43 
                                        f32_4 %45 = OpLoad %9 
                               Uniform f32_4* %47 = OpAccessChain %21 %23 %46 
                                        f32_4 %48 = OpLoad %47 
                                        f32_4 %49 = OpFAdd %45 %48 
                                                      OpStore %44 %49 
                               Uniform f32_4* %53 = OpAccessChain %21 %23 %46 
                                        f32_4 %54 = OpLoad %53 
                                        f32_3 %55 = OpVectorShuffle %54 %54 0 1 2 
                                        f32_4 %56 = OpLoad %11 
                                        f32_3 %57 = OpVectorShuffle %56 %56 3 3 3 
                                        f32_3 %58 = OpFMul %55 %57 
                                        f32_4 %59 = OpLoad %9 
                                        f32_3 %60 = OpVectorShuffle %59 %59 0 1 2 
                                        f32_3 %61 = OpFAdd %58 %60 
                                                      OpStore vs_TEXCOORD2 %61 
                                        f32_4 %62 = OpLoad %44 
                                        f32_4 %63 = OpVectorShuffle %62 %62 1 1 1 1 
                               Uniform f32_4* %64 = OpAccessChain %21 %36 %24 
                                        f32_4 %65 = OpLoad %64 
                                        f32_4 %66 = OpFMul %63 %65 
                                                      OpStore %9 %66 
                               Uniform f32_4* %67 = OpAccessChain %21 %36 %23 
                                        f32_4 %68 = OpLoad %67 
                                        f32_4 %69 = OpLoad %44 
                                        f32_4 %70 = OpVectorShuffle %69 %69 0 0 0 0 
                                        f32_4 %71 = OpFMul %68 %70 
                                        f32_4 %72 = OpLoad %9 
                                        f32_4 %73 = OpFAdd %71 %72 
                                                      OpStore %9 %73 
                               Uniform f32_4* %74 = OpAccessChain %21 %36 %36 
                                        f32_4 %75 = OpLoad %74 
                                        f32_4 %76 = OpLoad %44 
                                        f32_4 %77 = OpVectorShuffle %76 %76 2 2 2 2 
                                        f32_4 %78 = OpFMul %75 %77 
                                        f32_4 %79 = OpLoad %9 
                                        f32_4 %80 = OpFAdd %78 %79 
                                                      OpStore %9 %80 
                               Uniform f32_4* %86 = OpAccessChain %21 %36 %46 
                                        f32_4 %87 = OpLoad %86 
                                        f32_4 %88 = OpLoad %44 
                                        f32_4 %89 = OpVectorShuffle %88 %88 3 3 3 3 
                                        f32_4 %90 = OpFMul %87 %89 
                                        f32_4 %91 = OpLoad %9 
                                        f32_4 %92 = OpFAdd %90 %91 
                                Output f32_4* %94 = OpAccessChain %85 %23 
                                                      OpStore %94 %92 
                                        f32_4 %97 = OpLoad %95 
                                        f32_2 %98 = OpVectorShuffle %97 %97 0 1 
                               Uniform f32_4* %99 = OpAccessChain %21 %46 
                                       f32_4 %100 = OpLoad %99 
                                       f32_2 %101 = OpVectorShuffle %100 %100 0 1 
                                       f32_2 %102 = OpFMul %98 %101 
                              Uniform f32_4* %103 = OpAccessChain %21 %46 
                                       f32_4 %104 = OpLoad %103 
                                       f32_2 %105 = OpVectorShuffle %104 %104 2 3 
                                       f32_2 %106 = OpFAdd %102 %105 
                                       f32_4 %107 = OpLoad %9 
                                       f32_4 %108 = OpVectorShuffle %107 %106 4 5 2 3 
                                                      OpStore %9 %108 
                                       f32_4 %111 = OpLoad %9 
                                       f32_2 %112 = OpVectorShuffle %111 %111 0 1 
                                                      OpStore vs_TEXCOORD0 %112 
                                       f32_3 %115 = OpLoad %114 
                              Uniform f32_4* %116 = OpAccessChain %21 %24 %23 
                                       f32_4 %117 = OpLoad %116 
                                       f32_3 %118 = OpVectorShuffle %117 %117 0 1 2 
                                         f32 %119 = OpDot %115 %118 
                                Private f32* %122 = OpAccessChain %9 %120 
                                                      OpStore %122 %119 
                                       f32_3 %123 = OpLoad %114 
                              Uniform f32_4* %124 = OpAccessChain %21 %24 %24 
                                       f32_4 %125 = OpLoad %124 
                                       f32_3 %126 = OpVectorShuffle %125 %125 0 1 2 
                                         f32 %127 = OpDot %123 %126 
                                Private f32* %128 = OpAccessChain %9 %81 
                                                      OpStore %128 %127 
                                       f32_3 %129 = OpLoad %114 
                              Uniform f32_4* %130 = OpAccessChain %21 %24 %36 
                                       f32_4 %131 = OpLoad %130 
                                       f32_3 %132 = OpVectorShuffle %131 %131 0 1 2 
                                         f32 %133 = OpDot %129 %132 
                                Private f32* %135 = OpAccessChain %9 %134 
                                                      OpStore %135 %133 
                                       f32_4 %137 = OpLoad %9 
                                       f32_3 %138 = OpVectorShuffle %137 %137 0 1 2 
                                       f32_4 %139 = OpLoad %9 
                                       f32_3 %140 = OpVectorShuffle %139 %139 0 1 2 
                                         f32 %141 = OpDot %138 %140 
                                                      OpStore %136 %141 
                                         f32 %142 = OpLoad %136 
                                         f32 %143 = OpExtInst %1 32 %142 
                                                      OpStore %136 %143 
                                         f32 %145 = OpLoad %136 
                                       f32_3 %146 = OpCompositeConstruct %145 %145 %145 
                                       f32_4 %147 = OpLoad %9 
                                       f32_3 %148 = OpVectorShuffle %147 %147 0 1 2 
                                       f32_3 %149 = OpFMul %146 %148 
                                                      OpStore vs_TEXCOORD1 %149 
                                                      OpStore vs_TEXCOORD5 %152 
                                                      OpStore vs_TEXCOORD6 %152 
                                 Output f32* %155 = OpAccessChain %85 %23 %81 
                                         f32 %156 = OpLoad %155 
                                         f32 %157 = OpFNegate %156 
                                 Output f32* %158 = OpAccessChain %85 %23 %81 
                                                      OpStore %158 %157 
                                                      OpReturn
                                                      OpFunctionEnd
; SPIR-V
; Version: 1.0
; Generator: Khronos Glslang Reference Front End; 6
; Bound: 191
; Schema: 0
                                                      OpCapability Shader 
                                               %1 = OpExtInstImport "GLSL.std.450" 
                                                      OpMemoryModel Logical GLSL450 
                                                      OpEntryPoint Fragment %4 "main" %11 %158 %170 
                                                      OpExecutionMode %4 OriginUpperLeft 
                                                      OpName vs_TEXCOORD1 "vs_TEXCOORD1" 
                                                      OpName vs_TEXCOORD0 "vs_TEXCOORD0" 
                                                      OpDecorate %9 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD1 Location 11 
                                                      OpDecorate %20 RelaxedPrecision 
                                                      OpDecorate %21 RelaxedPrecision 
                                                      OpDecorate %23 RelaxedPrecision 
                                                      OpDecorate %24 RelaxedPrecision 
                                                      OpDecorate %27 RelaxedPrecision 
                                                      OpMemberDecorate %29 0 RelaxedPrecision 
                                                      OpMemberDecorate %29 0 Offset 29 
                                                      OpMemberDecorate %29 1 RelaxedPrecision 
                                                      OpMemberDecorate %29 1 Offset 29 
                                                      OpMemberDecorate %29 2 RelaxedPrecision 
                                                      OpMemberDecorate %29 2 Offset 29 
                                                      OpMemberDecorate %29 3 RelaxedPrecision 
                                                      OpMemberDecorate %29 3 Offset 29 
                                                      OpMemberDecorate %29 4 RelaxedPrecision 
                                                      OpMemberDecorate %29 4 Offset 29 
                                                      OpMemberDecorate %29 5 RelaxedPrecision 
                                                      OpMemberDecorate %29 5 Offset 29 
                                                      OpMemberDecorate %29 6 RelaxedPrecision 
                                                      OpMemberDecorate %29 6 Offset 29 
                                                      OpDecorate %29 Block 
                                                      OpDecorate %31 DescriptorSet 31 
                                                      OpDecorate %31 Binding 31 
                                                      OpDecorate %36 RelaxedPrecision 
                                                      OpDecorate %37 RelaxedPrecision 
                                                      OpDecorate %38 RelaxedPrecision 
                                                      OpDecorate %41 RelaxedPrecision 
                                                      OpDecorate %43 RelaxedPrecision 
                                                      OpDecorate %45 RelaxedPrecision 
                                                      OpDecorate %49 RelaxedPrecision 
                                                      OpDecorate %50 RelaxedPrecision 
                                                      OpDecorate %52 RelaxedPrecision 
                                                      OpDecorate %55 RelaxedPrecision 
                                                      OpDecorate %56 RelaxedPrecision 
                                                      OpDecorate %59 RelaxedPrecision 
                                                      OpDecorate %60 RelaxedPrecision 
                                                      OpDecorate %62 RelaxedPrecision 
                                                      OpDecorate %63 RelaxedPrecision 
                                                      OpDecorate %65 RelaxedPrecision 
                                                      OpDecorate %67 RelaxedPrecision 
                                                      OpDecorate %68 RelaxedPrecision 
                                                      OpDecorate %70 RelaxedPrecision 
                                                      OpDecorate %71 RelaxedPrecision 
                                                      OpDecorate %73 RelaxedPrecision 
                                                      OpDecorate %74 RelaxedPrecision 
                                                      OpDecorate %75 RelaxedPrecision 
                                                      OpDecorate %76 RelaxedPrecision 
                                                      OpDecorate %80 RelaxedPrecision 
                                                      OpDecorate %81 RelaxedPrecision 
                                                      OpDecorate %84 RelaxedPrecision 
                                                      OpDecorate %86 RelaxedPrecision 
                                                      OpDecorate %87 RelaxedPrecision 
                                                      OpDecorate %90 RelaxedPrecision 
                                                      OpDecorate %91 RelaxedPrecision 
                                                      OpDecorate %94 RelaxedPrecision 
                                                      OpDecorate %96 RelaxedPrecision 
                                                      OpDecorate %98 RelaxedPrecision 
                                                      OpDecorate %101 RelaxedPrecision 
                                                      OpDecorate %103 RelaxedPrecision 
                                                      OpDecorate %104 RelaxedPrecision 
                                                      OpDecorate %107 RelaxedPrecision 
                                                      OpDecorate %109 RelaxedPrecision 
                                                      OpDecorate %110 RelaxedPrecision 
                                                      OpDecorate %114 RelaxedPrecision 
                                                      OpDecorate %115 RelaxedPrecision 
                                                      OpDecorate %116 RelaxedPrecision 
                                                      OpDecorate %119 RelaxedPrecision 
                                                      OpDecorate %120 RelaxedPrecision 
                                                      OpDecorate %121 RelaxedPrecision 
                                                      OpDecorate %123 RelaxedPrecision 
                                                      OpDecorate %124 RelaxedPrecision 
                                                      OpDecorate %125 RelaxedPrecision 
                                                      OpDecorate %126 RelaxedPrecision 
                                                      OpDecorate %128 RelaxedPrecision 
                                                      OpDecorate %129 RelaxedPrecision 
                                                      OpDecorate %130 RelaxedPrecision 
                                                      OpDecorate %131 RelaxedPrecision 
                                                      OpDecorate %132 RelaxedPrecision 
                                                      OpDecorate %133 RelaxedPrecision 
                                                      OpDecorate %135 RelaxedPrecision 
                                                      OpDecorate %136 RelaxedPrecision 
                                                      OpDecorate %137 RelaxedPrecision 
                                                      OpDecorate %138 RelaxedPrecision 
                                                      OpDecorate %139 RelaxedPrecision 
                                                      OpDecorate %140 RelaxedPrecision 
                                                      OpDecorate %141 RelaxedPrecision 
                                                      OpDecorate %142 RelaxedPrecision 
                                                      OpDecorate %143 RelaxedPrecision 
                                                      OpDecorate %145 RelaxedPrecision 
                                                      OpDecorate %148 RelaxedPrecision 
                                                      OpDecorate %148 DescriptorSet 148 
                                                      OpDecorate %148 Binding 148 
                                                      OpDecorate %149 RelaxedPrecision 
                                                      OpDecorate %152 RelaxedPrecision 
                                                      OpDecorate %152 DescriptorSet 152 
                                                      OpDecorate %152 Binding 152 
                                                      OpDecorate %153 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD0 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD0 Location 158 
                                                      OpDecorate %159 RelaxedPrecision 
                                                      OpDecorate %160 RelaxedPrecision 
                                                      OpDecorate %161 RelaxedPrecision 
                                                      OpDecorate %162 RelaxedPrecision 
                                                      OpDecorate %163 RelaxedPrecision 
                                                      OpDecorate %166 RelaxedPrecision 
                                                      OpDecorate %167 RelaxedPrecision 
                                                      OpDecorate %168 RelaxedPrecision 
                                                      OpDecorate %170 RelaxedPrecision 
                                                      OpDecorate %170 Location 170 
                                                      OpDecorate %173 RelaxedPrecision 
                                                      OpDecorate %175 RelaxedPrecision 
                                                      OpDecorate %176 RelaxedPrecision 
                                                      OpDecorate %179 RelaxedPrecision 
                                                      OpDecorate %182 RelaxedPrecision 
                                                      OpDecorate %183 RelaxedPrecision 
                                                      OpDecorate %184 RelaxedPrecision 
                                                      OpDecorate %185 RelaxedPrecision 
                                                      OpDecorate %186 RelaxedPrecision 
                                                      OpDecorate %187 RelaxedPrecision 
                                               %2 = OpTypeVoid 
                                               %3 = OpTypeFunction %2 
                                               %6 = OpTypeFloat 32 
                                               %7 = OpTypeVector %6 3 
                                               %8 = OpTypePointer Private %7 
                                Private f32_3* %9 = OpVariable Private 
                                              %10 = OpTypePointer Input %7 
                        Input f32_3* vs_TEXCOORD1 = OpVariable Input 
                                              %15 = OpTypeInt 32 0 
                                          u32 %16 = OpConstant 0 
                                              %17 = OpTypePointer Private %6 
                                              %28 = OpTypeVector %6 4 
                                              %29 = OpTypeStruct %28 %28 %28 %28 %28 %6 %6 
                                              %30 = OpTypePointer Uniform %29 
Uniform struct {f32_4; f32_4; f32_4; f32_4; f32_4; f32; f32;}* %31 = OpVariable Uniform 
                                              %32 = OpTypeInt 32 1 
                                          i32 %33 = OpConstant 0 
                                              %34 = OpTypePointer Uniform %28 
                                          f32 %42 = OpConstant 3.674022E-40 
                               Private f32_3* %45 = OpVariable Private 
                                          i32 %46 = OpConstant 6 
                                              %47 = OpTypePointer Uniform %6 
                                          f32 %51 = OpConstant 3.674022E-40 
                                          i32 %53 = OpConstant 5 
                                 Private f32* %65 = OpVariable Private 
                                          f32 %78 = OpConstant 3.674022E-40 
                                          f32 %95 = OpConstant 3.674022E-40 
                                          f32 %97 = OpConstant 3.674022E-40 
                                         i32 %112 = OpConstant 3 
                                         i32 %117 = OpConstant 4 
                              Private f32_3* %131 = OpVariable Private 
                                             %144 = OpTypePointer Private %28 
                              Private f32_4* %145 = OpVariable Private 
                                             %146 = OpTypeImage %6 Dim2D 0 0 0 1 Unknown 
                                             %147 = OpTypePointer UniformConstant %146 
        UniformConstant read_only Texture2D* %148 = OpVariable UniformConstant 
                                             %150 = OpTypeSampler 
                                             %151 = OpTypePointer UniformConstant %150 
                    UniformConstant sampler* %152 = OpVariable UniformConstant 
                                             %154 = OpTypeSampledImage %146 
                                             %156 = OpTypeVector %6 2 
                                             %157 = OpTypePointer Input %156 
                        Input f32_2* vs_TEXCOORD0 = OpVariable Input 
                              Private f32_3* %161 = OpVariable Private 
                                         i32 %164 = OpConstant 2 
                                             %169 = OpTypePointer Output %28 
                               Output f32_4* %170 = OpVariable Output 
                                         u32 %171 = OpConstant 3 
                                             %177 = OpTypePointer Output %6 
                                         i32 %180 = OpConstant 1 
                                          void %4 = OpFunction None %3 
                                               %5 = OpLabel 
                                        f32_3 %12 = OpLoad vs_TEXCOORD1 
                                        f32_3 %13 = OpLoad vs_TEXCOORD1 
                                          f32 %14 = OpDot %12 %13 
                                 Private f32* %18 = OpAccessChain %9 %16 
                                                      OpStore %18 %14 
                                 Private f32* %19 = OpAccessChain %9 %16 
                                          f32 %20 = OpLoad %19 
                                          f32 %21 = OpExtInst %1 32 %20 
                                 Private f32* %22 = OpAccessChain %9 %16 
                                                      OpStore %22 %21 
                                        f32_3 %23 = OpLoad %9 
                                        f32_3 %24 = OpVectorShuffle %23 %23 0 0 0 
                                        f32_3 %25 = OpLoad vs_TEXCOORD1 
                                        f32_3 %26 = OpFMul %24 %25 
                                                      OpStore %9 %26 
                                        f32_3 %27 = OpLoad %9 
                               Uniform f32_4* %35 = OpAccessChain %31 %33 
                                        f32_4 %36 = OpLoad %35 
                                        f32_3 %37 = OpVectorShuffle %36 %36 0 1 2 
                                          f32 %38 = OpDot %27 %37 
                                 Private f32* %39 = OpAccessChain %9 %16 
                                                      OpStore %39 %38 
                                 Private f32* %40 = OpAccessChain %9 %16 
                                          f32 %41 = OpLoad %40 
                                          f32 %43 = OpExtInst %1 40 %41 %42 
                                 Private f32* %44 = OpAccessChain %9 %16 
                                                      OpStore %44 %43 
                                 Uniform f32* %48 = OpAccessChain %31 %46 
                                          f32 %49 = OpLoad %48 
                                          f32 %50 = OpFNegate %49 
                                          f32 %52 = OpFMul %50 %51 
                                 Uniform f32* %54 = OpAccessChain %31 %53 
                                          f32 %55 = OpLoad %54 
                                          f32 %56 = OpFAdd %52 %55 
                                 Private f32* %57 = OpAccessChain %45 %16 
                                                      OpStore %57 %56 
                                 Private f32* %58 = OpAccessChain %45 %16 
                                          f32 %59 = OpLoad %58 
                                          f32 %60 = OpFNegate %59 
                                 Private f32* %61 = OpAccessChain %9 %16 
                                          f32 %62 = OpLoad %61 
                                          f32 %63 = OpFAdd %60 %62 
                                 Private f32* %64 = OpAccessChain %9 %16 
                                                      OpStore %64 %63 
                                 Uniform f32* %66 = OpAccessChain %31 %46 
                                          f32 %67 = OpLoad %66 
                                          f32 %68 = OpFMul %67 %51 
                                 Uniform f32* %69 = OpAccessChain %31 %53 
                                          f32 %70 = OpLoad %69 
                                          f32 %71 = OpFAdd %68 %70 
                                                      OpStore %65 %71 
                                 Private f32* %72 = OpAccessChain %45 %16 
                                          f32 %73 = OpLoad %72 
                                          f32 %74 = OpFNegate %73 
                                          f32 %75 = OpLoad %65 
                                          f32 %76 = OpFAdd %74 %75 
                                 Private f32* %77 = OpAccessChain %45 %16 
                                                      OpStore %77 %76 
                                 Private f32* %79 = OpAccessChain %45 %16 
                                          f32 %80 = OpLoad %79 
                                          f32 %81 = OpFDiv %78 %80 
                                 Private f32* %82 = OpAccessChain %45 %16 
                                                      OpStore %82 %81 
                                 Private f32* %83 = OpAccessChain %45 %16 
                                          f32 %84 = OpLoad %83 
                                 Private f32* %85 = OpAccessChain %9 %16 
                                          f32 %86 = OpLoad %85 
                                          f32 %87 = OpFMul %84 %86 
                                 Private f32* %88 = OpAccessChain %9 %16 
                                                      OpStore %88 %87 
                                 Private f32* %89 = OpAccessChain %9 %16 
                                          f32 %90 = OpLoad %89 
                                          f32 %91 = OpExtInst %1 43 %90 %42 %78 
                                 Private f32* %92 = OpAccessChain %9 %16 
                                                      OpStore %92 %91 
                                 Private f32* %93 = OpAccessChain %9 %16 
                                          f32 %94 = OpLoad %93 
                                          f32 %96 = OpFMul %94 %95 
                                          f32 %98 = OpFAdd %96 %97 
                                 Private f32* %99 = OpAccessChain %45 %16 
                                                      OpStore %99 %98 
                                Private f32* %100 = OpAccessChain %9 %16 
                                         f32 %101 = OpLoad %100 
                                Private f32* %102 = OpAccessChain %9 %16 
                                         f32 %103 = OpLoad %102 
                                         f32 %104 = OpFMul %101 %103 
                                Private f32* %105 = OpAccessChain %9 %16 
                                                      OpStore %105 %104 
                                Private f32* %106 = OpAccessChain %9 %16 
                                         f32 %107 = OpLoad %106 
                                Private f32* %108 = OpAccessChain %45 %16 
                                         f32 %109 = OpLoad %108 
                                         f32 %110 = OpFMul %107 %109 
                                Private f32* %111 = OpAccessChain %9 %16 
                                                      OpStore %111 %110 
                              Uniform f32_4* %113 = OpAccessChain %31 %112 
                                       f32_4 %114 = OpLoad %113 
                                       f32_3 %115 = OpVectorShuffle %114 %114 0 1 2 
                                       f32_3 %116 = OpFNegate %115 
                              Uniform f32_4* %118 = OpAccessChain %31 %117 
                                       f32_4 %119 = OpLoad %118 
                                       f32_3 %120 = OpVectorShuffle %119 %119 0 1 2 
                                       f32_3 %121 = OpFAdd %116 %120 
                                                      OpStore %45 %121 
                              Uniform f32_4* %122 = OpAccessChain %31 %117 
                                       f32_4 %123 = OpLoad %122 
                                       f32_3 %124 = OpVectorShuffle %123 %123 3 3 3 
                                       f32_3 %125 = OpLoad %45 
                                       f32_3 %126 = OpFMul %124 %125 
                              Uniform f32_4* %127 = OpAccessChain %31 %112 
                                       f32_4 %128 = OpLoad %127 
                                       f32_3 %129 = OpVectorShuffle %128 %128 0 1 2 
                                       f32_3 %130 = OpFAdd %126 %129 
                                                      OpStore %45 %130 
                                       f32_3 %132 = OpLoad %45 
                                       f32_3 %133 = OpFNegate %132 
                              Uniform f32_4* %134 = OpAccessChain %31 %112 
                                       f32_4 %135 = OpLoad %134 
                                       f32_3 %136 = OpVectorShuffle %135 %135 0 1 2 
                                       f32_3 %137 = OpFAdd %133 %136 
                                                      OpStore %131 %137 
                                       f32_3 %138 = OpLoad %9 
                                       f32_3 %139 = OpVectorShuffle %138 %138 0 0 0 
                                       f32_3 %140 = OpLoad %131 
                                       f32_3 %141 = OpFMul %139 %140 
                                       f32_3 %142 = OpLoad %45 
                                       f32_3 %143 = OpFAdd %141 %142 
                                                      OpStore %9 %143 
                         read_only Texture2D %149 = OpLoad %148 
                                     sampler %153 = OpLoad %152 
                  read_only Texture2DSampled %155 = OpSampledImage %149 %153 
                                       f32_2 %159 = OpLoad vs_TEXCOORD0 
                                       f32_4 %160 = OpImageSampleImplicitLod %155 %159 
                                                      OpStore %145 %160 
                                       f32_4 %162 = OpLoad %145 
                                       f32_3 %163 = OpVectorShuffle %162 %162 0 1 2 
                              Uniform f32_4* %165 = OpAccessChain %31 %164 
                                       f32_4 %166 = OpLoad %165 
                                       f32_3 %167 = OpVectorShuffle %166 %166 0 1 2 
                                       f32_3 %168 = OpFMul %163 %167 
                                                      OpStore %161 %168 
                                Private f32* %172 = OpAccessChain %145 %171 
                                         f32 %173 = OpLoad %172 
                                Uniform f32* %174 = OpAccessChain %31 %164 %171 
                                         f32 %175 = OpLoad %174 
                                         f32 %176 = OpFMul %173 %175 
                                 Output f32* %178 = OpAccessChain %170 %171 
                                                      OpStore %178 %176 
                                       f32_3 %179 = OpLoad %161 
                              Uniform f32_4* %181 = OpAccessChain %31 %180 
                                       f32_4 %182 = OpLoad %181 
                                       f32_3 %183 = OpVectorShuffle %182 %182 0 1 2 
                                       f32_3 %184 = OpFMul %179 %183 
                                                      OpStore %161 %184 
                                       f32_3 %185 = OpLoad %9 
                                       f32_3 %186 = OpLoad %161 
                                       f32_3 %187 = OpFMul %185 %186 
                                       f32_4 %188 = OpLoad %170 
                                       f32_4 %189 = OpVectorShuffle %188 %187 4 5 6 3 
                                                      OpStore %170 %189 
                                                      OpReturn
                                                      OpFunctionEnd
"
}
SubProgram "vulkan hw_tier01 " {
Keywords { "DIRECTIONAL" "VERTEXLIGHT_ON" }
"; SPIR-V
; Version: 1.0
; Generator: Khronos Glslang Reference Front End; 6
; Bound: 160
; Schema: 0
                                                      OpCapability Shader 
                                               %1 = OpExtInstImport "GLSL.std.450" 
                                                      OpMemoryModel Logical GLSL450 
                                                      OpEntryPoint Vertex %4 "main" %11 %52 %85 %95 %110 %114 %144 %150 %153 
                                                      OpName vs_TEXCOORD2 "vs_TEXCOORD2" 
                                                      OpName vs_TEXCOORD0 "vs_TEXCOORD0" 
                                                      OpName vs_TEXCOORD1 "vs_TEXCOORD1" 
                                                      OpName vs_TEXCOORD5 "vs_TEXCOORD5" 
                                                      OpName vs_TEXCOORD6 "vs_TEXCOORD6" 
                                                      OpDecorate %11 Location 11 
                                                      OpDecorate %16 ArrayStride 16 
                                                      OpDecorate %17 ArrayStride 17 
                                                      OpDecorate %18 ArrayStride 18 
                                                      OpMemberDecorate %19 0 Offset 19 
                                                      OpMemberDecorate %19 1 Offset 19 
                                                      OpMemberDecorate %19 2 Offset 19 
                                                      OpMemberDecorate %19 3 Offset 19 
                                                      OpDecorate %19 Block 
                                                      OpDecorate %21 DescriptorSet 21 
                                                      OpDecorate %21 Binding 21 
                                                      OpDecorate vs_TEXCOORD2 Location 52 
                                                      OpMemberDecorate %83 0 BuiltIn 83 
                                                      OpMemberDecorate %83 1 BuiltIn 83 
                                                      OpMemberDecorate %83 2 BuiltIn 83 
                                                      OpDecorate %83 Block 
                                                      OpDecorate %95 Location 95 
                                                      OpDecorate vs_TEXCOORD0 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD0 Location 110 
                                                      OpDecorate %114 Location 114 
                                                      OpDecorate vs_TEXCOORD1 Location 144 
                                                      OpDecorate vs_TEXCOORD5 Location 150 
                                                      OpDecorate vs_TEXCOORD6 Location 153 
                                               %2 = OpTypeVoid 
                                               %3 = OpTypeFunction %2 
                                               %6 = OpTypeFloat 32 
                                               %7 = OpTypeVector %6 4 
                                               %8 = OpTypePointer Private %7 
                                Private f32_4* %9 = OpVariable Private 
                                              %10 = OpTypePointer Input %7 
                                 Input f32_4* %11 = OpVariable Input 
                                              %14 = OpTypeInt 32 0 
                                          u32 %15 = OpConstant 4 
                                              %16 = OpTypeArray %7 %15 
                                              %17 = OpTypeArray %7 %15 
                                              %18 = OpTypeArray %7 %15 
                                              %19 = OpTypeStruct %16 %17 %18 %7 
                                              %20 = OpTypePointer Uniform %19 
Uniform struct {f32_4[4]; f32_4[4]; f32_4[4]; f32_4;}* %21 = OpVariable Uniform 
                                              %22 = OpTypeInt 32 1 
                                          i32 %23 = OpConstant 0 
                                          i32 %24 = OpConstant 1 
                                              %25 = OpTypePointer Uniform %7 
                                          i32 %36 = OpConstant 2 
                               Private f32_4* %44 = OpVariable Private 
                                          i32 %46 = OpConstant 3 
                                              %50 = OpTypeVector %6 3 
                                              %51 = OpTypePointer Output %50 
                       Output f32_3* vs_TEXCOORD2 = OpVariable Output 
                                          u32 %81 = OpConstant 1 
                                              %82 = OpTypeArray %6 %81 
                                              %83 = OpTypeStruct %7 %6 %82 
                                              %84 = OpTypePointer Output %83 
         Output struct {f32_4; f32; f32[1];}* %85 = OpVariable Output 
                                              %93 = OpTypePointer Output %7 
                                 Input f32_4* %95 = OpVariable Input 
                                              %96 = OpTypeVector %6 2 
                                             %109 = OpTypePointer Output %96 
                       Output f32_2* vs_TEXCOORD0 = OpVariable Output 
                                             %113 = OpTypePointer Input %50 
                                Input f32_3* %114 = OpVariable Input 
                                         u32 %120 = OpConstant 0 
                                             %121 = OpTypePointer Private %6 
                                         u32 %134 = OpConstant 2 
                                Private f32* %136 = OpVariable Private 
                       Output f32_3* vs_TEXCOORD1 = OpVariable Output 
                       Output f32_4* vs_TEXCOORD5 = OpVariable Output 
                                         f32 %151 = OpConstant 3.674022E-40 
                                       f32_4 %152 = OpConstantComposite %151 %151 %151 %151 
                       Output f32_4* vs_TEXCOORD6 = OpVariable Output 
                                             %154 = OpTypePointer Output %6 
                                          void %4 = OpFunction None %3 
                                               %5 = OpLabel 
                                        f32_4 %12 = OpLoad %11 
                                        f32_4 %13 = OpVectorShuffle %12 %12 1 1 1 1 
                               Uniform f32_4* %26 = OpAccessChain %21 %23 %24 
                                        f32_4 %27 = OpLoad %26 
                                        f32_4 %28 = OpFMul %13 %27 
                                                      OpStore %9 %28 
                               Uniform f32_4* %29 = OpAccessChain %21 %23 %23 
                                        f32_4 %30 = OpLoad %29 
                                        f32_4 %31 = OpLoad %11 
                                        f32_4 %32 = OpVectorShuffle %31 %31 0 0 0 0 
                                        f32_4 %33 = OpFMul %30 %32 
                                        f32_4 %34 = OpLoad %9 
                                        f32_4 %35 = OpFAdd %33 %34 
                                                      OpStore %9 %35 
                               Uniform f32_4* %37 = OpAccessChain %21 %23 %36 
                                        f32_4 %38 = OpLoad %37 
                                        f32_4 %39 = OpLoad %11 
                                        f32_4 %40 = OpVectorShuffle %39 %39 2 2 2 2 
                                        f32_4 %41 = OpFMul %38 %40 
                                        f32_4 %42 = OpLoad %9 
                                        f32_4 %43 = OpFAdd %41 %42 
                                                      OpStore %9 %43 
                                        f32_4 %45 = OpLoad %9 
                               Uniform f32_4* %47 = OpAccessChain %21 %23 %46 
                                        f32_4 %48 = OpLoad %47 
                                        f32_4 %49 = OpFAdd %45 %48 
                                                      OpStore %44 %49 
                               Uniform f32_4* %53 = OpAccessChain %21 %23 %46 
                                        f32_4 %54 = OpLoad %53 
                                        f32_3 %55 = OpVectorShuffle %54 %54 0 1 2 
                                        f32_4 %56 = OpLoad %11 
                                        f32_3 %57 = OpVectorShuffle %56 %56 3 3 3 
                                        f32_3 %58 = OpFMul %55 %57 
                                        f32_4 %59 = OpLoad %9 
                                        f32_3 %60 = OpVectorShuffle %59 %59 0 1 2 
                                        f32_3 %61 = OpFAdd %58 %60 
                                                      OpStore vs_TEXCOORD2 %61 
                                        f32_4 %62 = OpLoad %44 
                                        f32_4 %63 = OpVectorShuffle %62 %62 1 1 1 1 
                               Uniform f32_4* %64 = OpAccessChain %21 %36 %24 
                                        f32_4 %65 = OpLoad %64 
                                        f32_4 %66 = OpFMul %63 %65 
                                                      OpStore %9 %66 
                               Uniform f32_4* %67 = OpAccessChain %21 %36 %23 
                                        f32_4 %68 = OpLoad %67 
                                        f32_4 %69 = OpLoad %44 
                                        f32_4 %70 = OpVectorShuffle %69 %69 0 0 0 0 
                                        f32_4 %71 = OpFMul %68 %70 
                                        f32_4 %72 = OpLoad %9 
                                        f32_4 %73 = OpFAdd %71 %72 
                                                      OpStore %9 %73 
                               Uniform f32_4* %74 = OpAccessChain %21 %36 %36 
                                        f32_4 %75 = OpLoad %74 
                                        f32_4 %76 = OpLoad %44 
                                        f32_4 %77 = OpVectorShuffle %76 %76 2 2 2 2 
                                        f32_4 %78 = OpFMul %75 %77 
                                        f32_4 %79 = OpLoad %9 
                                        f32_4 %80 = OpFAdd %78 %79 
                                                      OpStore %9 %80 
                               Uniform f32_4* %86 = OpAccessChain %21 %36 %46 
                                        f32_4 %87 = OpLoad %86 
                                        f32_4 %88 = OpLoad %44 
                                        f32_4 %89 = OpVectorShuffle %88 %88 3 3 3 3 
                                        f32_4 %90 = OpFMul %87 %89 
                                        f32_4 %91 = OpLoad %9 
                                        f32_4 %92 = OpFAdd %90 %91 
                                Output f32_4* %94 = OpAccessChain %85 %23 
                                                      OpStore %94 %92 
                                        f32_4 %97 = OpLoad %95 
                                        f32_2 %98 = OpVectorShuffle %97 %97 0 1 
                               Uniform f32_4* %99 = OpAccessChain %21 %46 
                                       f32_4 %100 = OpLoad %99 
                                       f32_2 %101 = OpVectorShuffle %100 %100 0 1 
                                       f32_2 %102 = OpFMul %98 %101 
                              Uniform f32_4* %103 = OpAccessChain %21 %46 
                                       f32_4 %104 = OpLoad %103 
                                       f32_2 %105 = OpVectorShuffle %104 %104 2 3 
                                       f32_2 %106 = OpFAdd %102 %105 
                                       f32_4 %107 = OpLoad %9 
                                       f32_4 %108 = OpVectorShuffle %107 %106 4 5 2 3 
                                                      OpStore %9 %108 
                                       f32_4 %111 = OpLoad %9 
                                       f32_2 %112 = OpVectorShuffle %111 %111 0 1 
                                                      OpStore vs_TEXCOORD0 %112 
                                       f32_3 %115 = OpLoad %114 
                              Uniform f32_4* %116 = OpAccessChain %21 %24 %23 
                                       f32_4 %117 = OpLoad %116 
                                       f32_3 %118 = OpVectorShuffle %117 %117 0 1 2 
                                         f32 %119 = OpDot %115 %118 
                                Private f32* %122 = OpAccessChain %9 %120 
                                                      OpStore %122 %119 
                                       f32_3 %123 = OpLoad %114 
                              Uniform f32_4* %124 = OpAccessChain %21 %24 %24 
                                       f32_4 %125 = OpLoad %124 
                                       f32_3 %126 = OpVectorShuffle %125 %125 0 1 2 
                                         f32 %127 = OpDot %123 %126 
                                Private f32* %128 = OpAccessChain %9 %81 
                                                      OpStore %128 %127 
                                       f32_3 %129 = OpLoad %114 
                              Uniform f32_4* %130 = OpAccessChain %21 %24 %36 
                                       f32_4 %131 = OpLoad %130 
                                       f32_3 %132 = OpVectorShuffle %131 %131 0 1 2 
                                         f32 %133 = OpDot %129 %132 
                                Private f32* %135 = OpAccessChain %9 %134 
                                                      OpStore %135 %133 
                                       f32_4 %137 = OpLoad %9 
                                       f32_3 %138 = OpVectorShuffle %137 %137 0 1 2 
                                       f32_4 %139 = OpLoad %9 
                                       f32_3 %140 = OpVectorShuffle %139 %139 0 1 2 
                                         f32 %141 = OpDot %138 %140 
                                                      OpStore %136 %141 
                                         f32 %142 = OpLoad %136 
                                         f32 %143 = OpExtInst %1 32 %142 
                                                      OpStore %136 %143 
                                         f32 %145 = OpLoad %136 
                                       f32_3 %146 = OpCompositeConstruct %145 %145 %145 
                                       f32_4 %147 = OpLoad %9 
                                       f32_3 %148 = OpVectorShuffle %147 %147 0 1 2 
                                       f32_3 %149 = OpFMul %146 %148 
                                                      OpStore vs_TEXCOORD1 %149 
                                                      OpStore vs_TEXCOORD5 %152 
                                                      OpStore vs_TEXCOORD6 %152 
                                 Output f32* %155 = OpAccessChain %85 %23 %81 
                                         f32 %156 = OpLoad %155 
                                         f32 %157 = OpFNegate %156 
                                 Output f32* %158 = OpAccessChain %85 %23 %81 
                                                      OpStore %158 %157 
                                                      OpReturn
                                                      OpFunctionEnd
; SPIR-V
; Version: 1.0
; Generator: Khronos Glslang Reference Front End; 6
; Bound: 191
; Schema: 0
                                                      OpCapability Shader 
                                               %1 = OpExtInstImport "GLSL.std.450" 
                                                      OpMemoryModel Logical GLSL450 
                                                      OpEntryPoint Fragment %4 "main" %11 %158 %170 
                                                      OpExecutionMode %4 OriginUpperLeft 
                                                      OpName vs_TEXCOORD1 "vs_TEXCOORD1" 
                                                      OpName vs_TEXCOORD0 "vs_TEXCOORD0" 
                                                      OpDecorate %9 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD1 Location 11 
                                                      OpDecorate %20 RelaxedPrecision 
                                                      OpDecorate %21 RelaxedPrecision 
                                                      OpDecorate %23 RelaxedPrecision 
                                                      OpDecorate %24 RelaxedPrecision 
                                                      OpDecorate %27 RelaxedPrecision 
                                                      OpMemberDecorate %29 0 RelaxedPrecision 
                                                      OpMemberDecorate %29 0 Offset 29 
                                                      OpMemberDecorate %29 1 RelaxedPrecision 
                                                      OpMemberDecorate %29 1 Offset 29 
                                                      OpMemberDecorate %29 2 RelaxedPrecision 
                                                      OpMemberDecorate %29 2 Offset 29 
                                                      OpMemberDecorate %29 3 RelaxedPrecision 
                                                      OpMemberDecorate %29 3 Offset 29 
                                                      OpMemberDecorate %29 4 RelaxedPrecision 
                                                      OpMemberDecorate %29 4 Offset 29 
                                                      OpMemberDecorate %29 5 RelaxedPrecision 
                                                      OpMemberDecorate %29 5 Offset 29 
                                                      OpMemberDecorate %29 6 RelaxedPrecision 
                                                      OpMemberDecorate %29 6 Offset 29 
                                                      OpDecorate %29 Block 
                                                      OpDecorate %31 DescriptorSet 31 
                                                      OpDecorate %31 Binding 31 
                                                      OpDecorate %36 RelaxedPrecision 
                                                      OpDecorate %37 RelaxedPrecision 
                                                      OpDecorate %38 RelaxedPrecision 
                                                      OpDecorate %41 RelaxedPrecision 
                                                      OpDecorate %43 RelaxedPrecision 
                                                      OpDecorate %45 RelaxedPrecision 
                                                      OpDecorate %49 RelaxedPrecision 
                                                      OpDecorate %50 RelaxedPrecision 
                                                      OpDecorate %52 RelaxedPrecision 
                                                      OpDecorate %55 RelaxedPrecision 
                                                      OpDecorate %56 RelaxedPrecision 
                                                      OpDecorate %59 RelaxedPrecision 
                                                      OpDecorate %60 RelaxedPrecision 
                                                      OpDecorate %62 RelaxedPrecision 
                                                      OpDecorate %63 RelaxedPrecision 
                                                      OpDecorate %65 RelaxedPrecision 
                                                      OpDecorate %67 RelaxedPrecision 
                                                      OpDecorate %68 RelaxedPrecision 
                                                      OpDecorate %70 RelaxedPrecision 
                                                      OpDecorate %71 RelaxedPrecision 
                                                      OpDecorate %73 RelaxedPrecision 
                                                      OpDecorate %74 RelaxedPrecision 
                                                      OpDecorate %75 RelaxedPrecision 
                                                      OpDecorate %76 RelaxedPrecision 
                                                      OpDecorate %80 RelaxedPrecision 
                                                      OpDecorate %81 RelaxedPrecision 
                                                      OpDecorate %84 RelaxedPrecision 
                                                      OpDecorate %86 RelaxedPrecision 
                                                      OpDecorate %87 RelaxedPrecision 
                                                      OpDecorate %90 RelaxedPrecision 
                                                      OpDecorate %91 RelaxedPrecision 
                                                      OpDecorate %94 RelaxedPrecision 
                                                      OpDecorate %96 RelaxedPrecision 
                                                      OpDecorate %98 RelaxedPrecision 
                                                      OpDecorate %101 RelaxedPrecision 
                                                      OpDecorate %103 RelaxedPrecision 
                                                      OpDecorate %104 RelaxedPrecision 
                                                      OpDecorate %107 RelaxedPrecision 
                                                      OpDecorate %109 RelaxedPrecision 
                                                      OpDecorate %110 RelaxedPrecision 
                                                      OpDecorate %114 RelaxedPrecision 
                                                      OpDecorate %115 RelaxedPrecision 
                                                      OpDecorate %116 RelaxedPrecision 
                                                      OpDecorate %119 RelaxedPrecision 
                                                      OpDecorate %120 RelaxedPrecision 
                                                      OpDecorate %121 RelaxedPrecision 
                                                      OpDecorate %123 RelaxedPrecision 
                                                      OpDecorate %124 RelaxedPrecision 
                                                      OpDecorate %125 RelaxedPrecision 
                                                      OpDecorate %126 RelaxedPrecision 
                                                      OpDecorate %128 RelaxedPrecision 
                                                      OpDecorate %129 RelaxedPrecision 
                                                      OpDecorate %130 RelaxedPrecision 
                                                      OpDecorate %131 RelaxedPrecision 
                                                      OpDecorate %132 RelaxedPrecision 
                                                      OpDecorate %133 RelaxedPrecision 
                                                      OpDecorate %135 RelaxedPrecision 
                                                      OpDecorate %136 RelaxedPrecision 
                                                      OpDecorate %137 RelaxedPrecision 
                                                      OpDecorate %138 RelaxedPrecision 
                                                      OpDecorate %139 RelaxedPrecision 
                                                      OpDecorate %140 RelaxedPrecision 
                                                      OpDecorate %141 RelaxedPrecision 
                                                      OpDecorate %142 RelaxedPrecision 
                                                      OpDecorate %143 RelaxedPrecision 
                                                      OpDecorate %145 RelaxedPrecision 
                                                      OpDecorate %148 RelaxedPrecision 
                                                      OpDecorate %148 DescriptorSet 148 
                                                      OpDecorate %148 Binding 148 
                                                      OpDecorate %149 RelaxedPrecision 
                                                      OpDecorate %152 RelaxedPrecision 
                                                      OpDecorate %152 DescriptorSet 152 
                                                      OpDecorate %152 Binding 152 
                                                      OpDecorate %153 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD0 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD0 Location 158 
                                                      OpDecorate %159 RelaxedPrecision 
                                                      OpDecorate %160 RelaxedPrecision 
                                                      OpDecorate %161 RelaxedPrecision 
                                                      OpDecorate %162 RelaxedPrecision 
                                                      OpDecorate %163 RelaxedPrecision 
                                                      OpDecorate %166 RelaxedPrecision 
                                                      OpDecorate %167 RelaxedPrecision 
                                                      OpDecorate %168 RelaxedPrecision 
                                                      OpDecorate %170 RelaxedPrecision 
                                                      OpDecorate %170 Location 170 
                                                      OpDecorate %173 RelaxedPrecision 
                                                      OpDecorate %175 RelaxedPrecision 
                                                      OpDecorate %176 RelaxedPrecision 
                                                      OpDecorate %179 RelaxedPrecision 
                                                      OpDecorate %182 RelaxedPrecision 
                                                      OpDecorate %183 RelaxedPrecision 
                                                      OpDecorate %184 RelaxedPrecision 
                                                      OpDecorate %185 RelaxedPrecision 
                                                      OpDecorate %186 RelaxedPrecision 
                                                      OpDecorate %187 RelaxedPrecision 
                                               %2 = OpTypeVoid 
                                               %3 = OpTypeFunction %2 
                                               %6 = OpTypeFloat 32 
                                               %7 = OpTypeVector %6 3 
                                               %8 = OpTypePointer Private %7 
                                Private f32_3* %9 = OpVariable Private 
                                              %10 = OpTypePointer Input %7 
                        Input f32_3* vs_TEXCOORD1 = OpVariable Input 
                                              %15 = OpTypeInt 32 0 
                                          u32 %16 = OpConstant 0 
                                              %17 = OpTypePointer Private %6 
                                              %28 = OpTypeVector %6 4 
                                              %29 = OpTypeStruct %28 %28 %28 %28 %28 %6 %6 
                                              %30 = OpTypePointer Uniform %29 
Uniform struct {f32_4; f32_4; f32_4; f32_4; f32_4; f32; f32;}* %31 = OpVariable Uniform 
                                              %32 = OpTypeInt 32 1 
                                          i32 %33 = OpConstant 0 
                                              %34 = OpTypePointer Uniform %28 
                                          f32 %42 = OpConstant 3.674022E-40 
                               Private f32_3* %45 = OpVariable Private 
                                          i32 %46 = OpConstant 6 
                                              %47 = OpTypePointer Uniform %6 
                                          f32 %51 = OpConstant 3.674022E-40 
                                          i32 %53 = OpConstant 5 
                                 Private f32* %65 = OpVariable Private 
                                          f32 %78 = OpConstant 3.674022E-40 
                                          f32 %95 = OpConstant 3.674022E-40 
                                          f32 %97 = OpConstant 3.674022E-40 
                                         i32 %112 = OpConstant 3 
                                         i32 %117 = OpConstant 4 
                              Private f32_3* %131 = OpVariable Private 
                                             %144 = OpTypePointer Private %28 
                              Private f32_4* %145 = OpVariable Private 
                                             %146 = OpTypeImage %6 Dim2D 0 0 0 1 Unknown 
                                             %147 = OpTypePointer UniformConstant %146 
        UniformConstant read_only Texture2D* %148 = OpVariable UniformConstant 
                                             %150 = OpTypeSampler 
                                             %151 = OpTypePointer UniformConstant %150 
                    UniformConstant sampler* %152 = OpVariable UniformConstant 
                                             %154 = OpTypeSampledImage %146 
                                             %156 = OpTypeVector %6 2 
                                             %157 = OpTypePointer Input %156 
                        Input f32_2* vs_TEXCOORD0 = OpVariable Input 
                              Private f32_3* %161 = OpVariable Private 
                                         i32 %164 = OpConstant 2 
                                             %169 = OpTypePointer Output %28 
                               Output f32_4* %170 = OpVariable Output 
                                         u32 %171 = OpConstant 3 
                                             %177 = OpTypePointer Output %6 
                                         i32 %180 = OpConstant 1 
                                          void %4 = OpFunction None %3 
                                               %5 = OpLabel 
                                        f32_3 %12 = OpLoad vs_TEXCOORD1 
                                        f32_3 %13 = OpLoad vs_TEXCOORD1 
                                          f32 %14 = OpDot %12 %13 
                                 Private f32* %18 = OpAccessChain %9 %16 
                                                      OpStore %18 %14 
                                 Private f32* %19 = OpAccessChain %9 %16 
                                          f32 %20 = OpLoad %19 
                                          f32 %21 = OpExtInst %1 32 %20 
                                 Private f32* %22 = OpAccessChain %9 %16 
                                                      OpStore %22 %21 
                                        f32_3 %23 = OpLoad %9 
                                        f32_3 %24 = OpVectorShuffle %23 %23 0 0 0 
                                        f32_3 %25 = OpLoad vs_TEXCOORD1 
                                        f32_3 %26 = OpFMul %24 %25 
                                                      OpStore %9 %26 
                                        f32_3 %27 = OpLoad %9 
                               Uniform f32_4* %35 = OpAccessChain %31 %33 
                                        f32_4 %36 = OpLoad %35 
                                        f32_3 %37 = OpVectorShuffle %36 %36 0 1 2 
                                          f32 %38 = OpDot %27 %37 
                                 Private f32* %39 = OpAccessChain %9 %16 
                                                      OpStore %39 %38 
                                 Private f32* %40 = OpAccessChain %9 %16 
                                          f32 %41 = OpLoad %40 
                                          f32 %43 = OpExtInst %1 40 %41 %42 
                                 Private f32* %44 = OpAccessChain %9 %16 
                                                      OpStore %44 %43 
                                 Uniform f32* %48 = OpAccessChain %31 %46 
                                          f32 %49 = OpLoad %48 
                                          f32 %50 = OpFNegate %49 
                                          f32 %52 = OpFMul %50 %51 
                                 Uniform f32* %54 = OpAccessChain %31 %53 
                                          f32 %55 = OpLoad %54 
                                          f32 %56 = OpFAdd %52 %55 
                                 Private f32* %57 = OpAccessChain %45 %16 
                                                      OpStore %57 %56 
                                 Private f32* %58 = OpAccessChain %45 %16 
                                          f32 %59 = OpLoad %58 
                                          f32 %60 = OpFNegate %59 
                                 Private f32* %61 = OpAccessChain %9 %16 
                                          f32 %62 = OpLoad %61 
                                          f32 %63 = OpFAdd %60 %62 
                                 Private f32* %64 = OpAccessChain %9 %16 
                                                      OpStore %64 %63 
                                 Uniform f32* %66 = OpAccessChain %31 %46 
                                          f32 %67 = OpLoad %66 
                                          f32 %68 = OpFMul %67 %51 
                                 Uniform f32* %69 = OpAccessChain %31 %53 
                                          f32 %70 = OpLoad %69 
                                          f32 %71 = OpFAdd %68 %70 
                                                      OpStore %65 %71 
                                 Private f32* %72 = OpAccessChain %45 %16 
                                          f32 %73 = OpLoad %72 
                                          f32 %74 = OpFNegate %73 
                                          f32 %75 = OpLoad %65 
                                          f32 %76 = OpFAdd %74 %75 
                                 Private f32* %77 = OpAccessChain %45 %16 
                                                      OpStore %77 %76 
                                 Private f32* %79 = OpAccessChain %45 %16 
                                          f32 %80 = OpLoad %79 
                                          f32 %81 = OpFDiv %78 %80 
                                 Private f32* %82 = OpAccessChain %45 %16 
                                                      OpStore %82 %81 
                                 Private f32* %83 = OpAccessChain %45 %16 
                                          f32 %84 = OpLoad %83 
                                 Private f32* %85 = OpAccessChain %9 %16 
                                          f32 %86 = OpLoad %85 
                                          f32 %87 = OpFMul %84 %86 
                                 Private f32* %88 = OpAccessChain %9 %16 
                                                      OpStore %88 %87 
                                 Private f32* %89 = OpAccessChain %9 %16 
                                          f32 %90 = OpLoad %89 
                                          f32 %91 = OpExtInst %1 43 %90 %42 %78 
                                 Private f32* %92 = OpAccessChain %9 %16 
                                                      OpStore %92 %91 
                                 Private f32* %93 = OpAccessChain %9 %16 
                                          f32 %94 = OpLoad %93 
                                          f32 %96 = OpFMul %94 %95 
                                          f32 %98 = OpFAdd %96 %97 
                                 Private f32* %99 = OpAccessChain %45 %16 
                                                      OpStore %99 %98 
                                Private f32* %100 = OpAccessChain %9 %16 
                                         f32 %101 = OpLoad %100 
                                Private f32* %102 = OpAccessChain %9 %16 
                                         f32 %103 = OpLoad %102 
                                         f32 %104 = OpFMul %101 %103 
                                Private f32* %105 = OpAccessChain %9 %16 
                                                      OpStore %105 %104 
                                Private f32* %106 = OpAccessChain %9 %16 
                                         f32 %107 = OpLoad %106 
                                Private f32* %108 = OpAccessChain %45 %16 
                                         f32 %109 = OpLoad %108 
                                         f32 %110 = OpFMul %107 %109 
                                Private f32* %111 = OpAccessChain %9 %16 
                                                      OpStore %111 %110 
                              Uniform f32_4* %113 = OpAccessChain %31 %112 
                                       f32_4 %114 = OpLoad %113 
                                       f32_3 %115 = OpVectorShuffle %114 %114 0 1 2 
                                       f32_3 %116 = OpFNegate %115 
                              Uniform f32_4* %118 = OpAccessChain %31 %117 
                                       f32_4 %119 = OpLoad %118 
                                       f32_3 %120 = OpVectorShuffle %119 %119 0 1 2 
                                       f32_3 %121 = OpFAdd %116 %120 
                                                      OpStore %45 %121 
                              Uniform f32_4* %122 = OpAccessChain %31 %117 
                                       f32_4 %123 = OpLoad %122 
                                       f32_3 %124 = OpVectorShuffle %123 %123 3 3 3 
                                       f32_3 %125 = OpLoad %45 
                                       f32_3 %126 = OpFMul %124 %125 
                              Uniform f32_4* %127 = OpAccessChain %31 %112 
                                       f32_4 %128 = OpLoad %127 
                                       f32_3 %129 = OpVectorShuffle %128 %128 0 1 2 
                                       f32_3 %130 = OpFAdd %126 %129 
                                                      OpStore %45 %130 
                                       f32_3 %132 = OpLoad %45 
                                       f32_3 %133 = OpFNegate %132 
                              Uniform f32_4* %134 = OpAccessChain %31 %112 
                                       f32_4 %135 = OpLoad %134 
                                       f32_3 %136 = OpVectorShuffle %135 %135 0 1 2 
                                       f32_3 %137 = OpFAdd %133 %136 
                                                      OpStore %131 %137 
                                       f32_3 %138 = OpLoad %9 
                                       f32_3 %139 = OpVectorShuffle %138 %138 0 0 0 
                                       f32_3 %140 = OpLoad %131 
                                       f32_3 %141 = OpFMul %139 %140 
                                       f32_3 %142 = OpLoad %45 
                                       f32_3 %143 = OpFAdd %141 %142 
                                                      OpStore %9 %143 
                         read_only Texture2D %149 = OpLoad %148 
                                     sampler %153 = OpLoad %152 
                  read_only Texture2DSampled %155 = OpSampledImage %149 %153 
                                       f32_2 %159 = OpLoad vs_TEXCOORD0 
                                       f32_4 %160 = OpImageSampleImplicitLod %155 %159 
                                                      OpStore %145 %160 
                                       f32_4 %162 = OpLoad %145 
                                       f32_3 %163 = OpVectorShuffle %162 %162 0 1 2 
                              Uniform f32_4* %165 = OpAccessChain %31 %164 
                                       f32_4 %166 = OpLoad %165 
                                       f32_3 %167 = OpVectorShuffle %166 %166 0 1 2 
                                       f32_3 %168 = OpFMul %163 %167 
                                                      OpStore %161 %168 
                                Private f32* %172 = OpAccessChain %145 %171 
                                         f32 %173 = OpLoad %172 
                                Uniform f32* %174 = OpAccessChain %31 %164 %171 
                                         f32 %175 = OpLoad %174 
                                         f32 %176 = OpFMul %173 %175 
                                 Output f32* %178 = OpAccessChain %170 %171 
                                                      OpStore %178 %176 
                                       f32_3 %179 = OpLoad %161 
                              Uniform f32_4* %181 = OpAccessChain %31 %180 
                                       f32_4 %182 = OpLoad %181 
                                       f32_3 %183 = OpVectorShuffle %182 %182 0 1 2 
                                       f32_3 %184 = OpFMul %179 %183 
                                                      OpStore %161 %184 
                                       f32_3 %185 = OpLoad %9 
                                       f32_3 %186 = OpLoad %161 
                                       f32_3 %187 = OpFMul %185 %186 
                                       f32_4 %188 = OpLoad %170 
                                       f32_4 %189 = OpVectorShuffle %188 %187 4 5 6 3 
                                                      OpStore %170 %189 
                                                      OpReturn
                                                      OpFunctionEnd
"
}
SubProgram "vulkan hw_tier02 " {
Keywords { "DIRECTIONAL" "VERTEXLIGHT_ON" }
"; SPIR-V
; Version: 1.0
; Generator: Khronos Glslang Reference Front End; 6
; Bound: 160
; Schema: 0
                                                      OpCapability Shader 
                                               %1 = OpExtInstImport "GLSL.std.450" 
                                                      OpMemoryModel Logical GLSL450 
                                                      OpEntryPoint Vertex %4 "main" %11 %52 %85 %95 %110 %114 %144 %150 %153 
                                                      OpName vs_TEXCOORD2 "vs_TEXCOORD2" 
                                                      OpName vs_TEXCOORD0 "vs_TEXCOORD0" 
                                                      OpName vs_TEXCOORD1 "vs_TEXCOORD1" 
                                                      OpName vs_TEXCOORD5 "vs_TEXCOORD5" 
                                                      OpName vs_TEXCOORD6 "vs_TEXCOORD6" 
                                                      OpDecorate %11 Location 11 
                                                      OpDecorate %16 ArrayStride 16 
                                                      OpDecorate %17 ArrayStride 17 
                                                      OpDecorate %18 ArrayStride 18 
                                                      OpMemberDecorate %19 0 Offset 19 
                                                      OpMemberDecorate %19 1 Offset 19 
                                                      OpMemberDecorate %19 2 Offset 19 
                                                      OpMemberDecorate %19 3 Offset 19 
                                                      OpDecorate %19 Block 
                                                      OpDecorate %21 DescriptorSet 21 
                                                      OpDecorate %21 Binding 21 
                                                      OpDecorate vs_TEXCOORD2 Location 52 
                                                      OpMemberDecorate %83 0 BuiltIn 83 
                                                      OpMemberDecorate %83 1 BuiltIn 83 
                                                      OpMemberDecorate %83 2 BuiltIn 83 
                                                      OpDecorate %83 Block 
                                                      OpDecorate %95 Location 95 
                                                      OpDecorate vs_TEXCOORD0 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD0 Location 110 
                                                      OpDecorate %114 Location 114 
                                                      OpDecorate vs_TEXCOORD1 Location 144 
                                                      OpDecorate vs_TEXCOORD5 Location 150 
                                                      OpDecorate vs_TEXCOORD6 Location 153 
                                               %2 = OpTypeVoid 
                                               %3 = OpTypeFunction %2 
                                               %6 = OpTypeFloat 32 
                                               %7 = OpTypeVector %6 4 
                                               %8 = OpTypePointer Private %7 
                                Private f32_4* %9 = OpVariable Private 
                                              %10 = OpTypePointer Input %7 
                                 Input f32_4* %11 = OpVariable Input 
                                              %14 = OpTypeInt 32 0 
                                          u32 %15 = OpConstant 4 
                                              %16 = OpTypeArray %7 %15 
                                              %17 = OpTypeArray %7 %15 
                                              %18 = OpTypeArray %7 %15 
                                              %19 = OpTypeStruct %16 %17 %18 %7 
                                              %20 = OpTypePointer Uniform %19 
Uniform struct {f32_4[4]; f32_4[4]; f32_4[4]; f32_4;}* %21 = OpVariable Uniform 
                                              %22 = OpTypeInt 32 1 
                                          i32 %23 = OpConstant 0 
                                          i32 %24 = OpConstant 1 
                                              %25 = OpTypePointer Uniform %7 
                                          i32 %36 = OpConstant 2 
                               Private f32_4* %44 = OpVariable Private 
                                          i32 %46 = OpConstant 3 
                                              %50 = OpTypeVector %6 3 
                                              %51 = OpTypePointer Output %50 
                       Output f32_3* vs_TEXCOORD2 = OpVariable Output 
                                          u32 %81 = OpConstant 1 
                                              %82 = OpTypeArray %6 %81 
                                              %83 = OpTypeStruct %7 %6 %82 
                                              %84 = OpTypePointer Output %83 
         Output struct {f32_4; f32; f32[1];}* %85 = OpVariable Output 
                                              %93 = OpTypePointer Output %7 
                                 Input f32_4* %95 = OpVariable Input 
                                              %96 = OpTypeVector %6 2 
                                             %109 = OpTypePointer Output %96 
                       Output f32_2* vs_TEXCOORD0 = OpVariable Output 
                                             %113 = OpTypePointer Input %50 
                                Input f32_3* %114 = OpVariable Input 
                                         u32 %120 = OpConstant 0 
                                             %121 = OpTypePointer Private %6 
                                         u32 %134 = OpConstant 2 
                                Private f32* %136 = OpVariable Private 
                       Output f32_3* vs_TEXCOORD1 = OpVariable Output 
                       Output f32_4* vs_TEXCOORD5 = OpVariable Output 
                                         f32 %151 = OpConstant 3.674022E-40 
                                       f32_4 %152 = OpConstantComposite %151 %151 %151 %151 
                       Output f32_4* vs_TEXCOORD6 = OpVariable Output 
                                             %154 = OpTypePointer Output %6 
                                          void %4 = OpFunction None %3 
                                               %5 = OpLabel 
                                        f32_4 %12 = OpLoad %11 
                                        f32_4 %13 = OpVectorShuffle %12 %12 1 1 1 1 
                               Uniform f32_4* %26 = OpAccessChain %21 %23 %24 
                                        f32_4 %27 = OpLoad %26 
                                        f32_4 %28 = OpFMul %13 %27 
                                                      OpStore %9 %28 
                               Uniform f32_4* %29 = OpAccessChain %21 %23 %23 
                                        f32_4 %30 = OpLoad %29 
                                        f32_4 %31 = OpLoad %11 
                                        f32_4 %32 = OpVectorShuffle %31 %31 0 0 0 0 
                                        f32_4 %33 = OpFMul %30 %32 
                                        f32_4 %34 = OpLoad %9 
                                        f32_4 %35 = OpFAdd %33 %34 
                                                      OpStore %9 %35 
                               Uniform f32_4* %37 = OpAccessChain %21 %23 %36 
                                        f32_4 %38 = OpLoad %37 
                                        f32_4 %39 = OpLoad %11 
                                        f32_4 %40 = OpVectorShuffle %39 %39 2 2 2 2 
                                        f32_4 %41 = OpFMul %38 %40 
                                        f32_4 %42 = OpLoad %9 
                                        f32_4 %43 = OpFAdd %41 %42 
                                                      OpStore %9 %43 
                                        f32_4 %45 = OpLoad %9 
                               Uniform f32_4* %47 = OpAccessChain %21 %23 %46 
                                        f32_4 %48 = OpLoad %47 
                                        f32_4 %49 = OpFAdd %45 %48 
                                                      OpStore %44 %49 
                               Uniform f32_4* %53 = OpAccessChain %21 %23 %46 
                                        f32_4 %54 = OpLoad %53 
                                        f32_3 %55 = OpVectorShuffle %54 %54 0 1 2 
                                        f32_4 %56 = OpLoad %11 
                                        f32_3 %57 = OpVectorShuffle %56 %56 3 3 3 
                                        f32_3 %58 = OpFMul %55 %57 
                                        f32_4 %59 = OpLoad %9 
                                        f32_3 %60 = OpVectorShuffle %59 %59 0 1 2 
                                        f32_3 %61 = OpFAdd %58 %60 
                                                      OpStore vs_TEXCOORD2 %61 
                                        f32_4 %62 = OpLoad %44 
                                        f32_4 %63 = OpVectorShuffle %62 %62 1 1 1 1 
                               Uniform f32_4* %64 = OpAccessChain %21 %36 %24 
                                        f32_4 %65 = OpLoad %64 
                                        f32_4 %66 = OpFMul %63 %65 
                                                      OpStore %9 %66 
                               Uniform f32_4* %67 = OpAccessChain %21 %36 %23 
                                        f32_4 %68 = OpLoad %67 
                                        f32_4 %69 = OpLoad %44 
                                        f32_4 %70 = OpVectorShuffle %69 %69 0 0 0 0 
                                        f32_4 %71 = OpFMul %68 %70 
                                        f32_4 %72 = OpLoad %9 
                                        f32_4 %73 = OpFAdd %71 %72 
                                                      OpStore %9 %73 
                               Uniform f32_4* %74 = OpAccessChain %21 %36 %36 
                                        f32_4 %75 = OpLoad %74 
                                        f32_4 %76 = OpLoad %44 
                                        f32_4 %77 = OpVectorShuffle %76 %76 2 2 2 2 
                                        f32_4 %78 = OpFMul %75 %77 
                                        f32_4 %79 = OpLoad %9 
                                        f32_4 %80 = OpFAdd %78 %79 
                                                      OpStore %9 %80 
                               Uniform f32_4* %86 = OpAccessChain %21 %36 %46 
                                        f32_4 %87 = OpLoad %86 
                                        f32_4 %88 = OpLoad %44 
                                        f32_4 %89 = OpVectorShuffle %88 %88 3 3 3 3 
                                        f32_4 %90 = OpFMul %87 %89 
                                        f32_4 %91 = OpLoad %9 
                                        f32_4 %92 = OpFAdd %90 %91 
                                Output f32_4* %94 = OpAccessChain %85 %23 
                                                      OpStore %94 %92 
                                        f32_4 %97 = OpLoad %95 
                                        f32_2 %98 = OpVectorShuffle %97 %97 0 1 
                               Uniform f32_4* %99 = OpAccessChain %21 %46 
                                       f32_4 %100 = OpLoad %99 
                                       f32_2 %101 = OpVectorShuffle %100 %100 0 1 
                                       f32_2 %102 = OpFMul %98 %101 
                              Uniform f32_4* %103 = OpAccessChain %21 %46 
                                       f32_4 %104 = OpLoad %103 
                                       f32_2 %105 = OpVectorShuffle %104 %104 2 3 
                                       f32_2 %106 = OpFAdd %102 %105 
                                       f32_4 %107 = OpLoad %9 
                                       f32_4 %108 = OpVectorShuffle %107 %106 4 5 2 3 
                                                      OpStore %9 %108 
                                       f32_4 %111 = OpLoad %9 
                                       f32_2 %112 = OpVectorShuffle %111 %111 0 1 
                                                      OpStore vs_TEXCOORD0 %112 
                                       f32_3 %115 = OpLoad %114 
                              Uniform f32_4* %116 = OpAccessChain %21 %24 %23 
                                       f32_4 %117 = OpLoad %116 
                                       f32_3 %118 = OpVectorShuffle %117 %117 0 1 2 
                                         f32 %119 = OpDot %115 %118 
                                Private f32* %122 = OpAccessChain %9 %120 
                                                      OpStore %122 %119 
                                       f32_3 %123 = OpLoad %114 
                              Uniform f32_4* %124 = OpAccessChain %21 %24 %24 
                                       f32_4 %125 = OpLoad %124 
                                       f32_3 %126 = OpVectorShuffle %125 %125 0 1 2 
                                         f32 %127 = OpDot %123 %126 
                                Private f32* %128 = OpAccessChain %9 %81 
                                                      OpStore %128 %127 
                                       f32_3 %129 = OpLoad %114 
                              Uniform f32_4* %130 = OpAccessChain %21 %24 %36 
                                       f32_4 %131 = OpLoad %130 
                                       f32_3 %132 = OpVectorShuffle %131 %131 0 1 2 
                                         f32 %133 = OpDot %129 %132 
                                Private f32* %135 = OpAccessChain %9 %134 
                                                      OpStore %135 %133 
                                       f32_4 %137 = OpLoad %9 
                                       f32_3 %138 = OpVectorShuffle %137 %137 0 1 2 
                                       f32_4 %139 = OpLoad %9 
                                       f32_3 %140 = OpVectorShuffle %139 %139 0 1 2 
                                         f32 %141 = OpDot %138 %140 
                                                      OpStore %136 %141 
                                         f32 %142 = OpLoad %136 
                                         f32 %143 = OpExtInst %1 32 %142 
                                                      OpStore %136 %143 
                                         f32 %145 = OpLoad %136 
                                       f32_3 %146 = OpCompositeConstruct %145 %145 %145 
                                       f32_4 %147 = OpLoad %9 
                                       f32_3 %148 = OpVectorShuffle %147 %147 0 1 2 
                                       f32_3 %149 = OpFMul %146 %148 
                                                      OpStore vs_TEXCOORD1 %149 
                                                      OpStore vs_TEXCOORD5 %152 
                                                      OpStore vs_TEXCOORD6 %152 
                                 Output f32* %155 = OpAccessChain %85 %23 %81 
                                         f32 %156 = OpLoad %155 
                                         f32 %157 = OpFNegate %156 
                                 Output f32* %158 = OpAccessChain %85 %23 %81 
                                                      OpStore %158 %157 
                                                      OpReturn
                                                      OpFunctionEnd
; SPIR-V
; Version: 1.0
; Generator: Khronos Glslang Reference Front End; 6
; Bound: 191
; Schema: 0
                                                      OpCapability Shader 
                                               %1 = OpExtInstImport "GLSL.std.450" 
                                                      OpMemoryModel Logical GLSL450 
                                                      OpEntryPoint Fragment %4 "main" %11 %158 %170 
                                                      OpExecutionMode %4 OriginUpperLeft 
                                                      OpName vs_TEXCOORD1 "vs_TEXCOORD1" 
                                                      OpName vs_TEXCOORD0 "vs_TEXCOORD0" 
                                                      OpDecorate %9 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD1 Location 11 
                                                      OpDecorate %20 RelaxedPrecision 
                                                      OpDecorate %21 RelaxedPrecision 
                                                      OpDecorate %23 RelaxedPrecision 
                                                      OpDecorate %24 RelaxedPrecision 
                                                      OpDecorate %27 RelaxedPrecision 
                                                      OpMemberDecorate %29 0 RelaxedPrecision 
                                                      OpMemberDecorate %29 0 Offset 29 
                                                      OpMemberDecorate %29 1 RelaxedPrecision 
                                                      OpMemberDecorate %29 1 Offset 29 
                                                      OpMemberDecorate %29 2 RelaxedPrecision 
                                                      OpMemberDecorate %29 2 Offset 29 
                                                      OpMemberDecorate %29 3 RelaxedPrecision 
                                                      OpMemberDecorate %29 3 Offset 29 
                                                      OpMemberDecorate %29 4 RelaxedPrecision 
                                                      OpMemberDecorate %29 4 Offset 29 
                                                      OpMemberDecorate %29 5 RelaxedPrecision 
                                                      OpMemberDecorate %29 5 Offset 29 
                                                      OpMemberDecorate %29 6 RelaxedPrecision 
                                                      OpMemberDecorate %29 6 Offset 29 
                                                      OpDecorate %29 Block 
                                                      OpDecorate %31 DescriptorSet 31 
                                                      OpDecorate %31 Binding 31 
                                                      OpDecorate %36 RelaxedPrecision 
                                                      OpDecorate %37 RelaxedPrecision 
                                                      OpDecorate %38 RelaxedPrecision 
                                                      OpDecorate %41 RelaxedPrecision 
                                                      OpDecorate %43 RelaxedPrecision 
                                                      OpDecorate %45 RelaxedPrecision 
                                                      OpDecorate %49 RelaxedPrecision 
                                                      OpDecorate %50 RelaxedPrecision 
                                                      OpDecorate %52 RelaxedPrecision 
                                                      OpDecorate %55 RelaxedPrecision 
                                                      OpDecorate %56 RelaxedPrecision 
                                                      OpDecorate %59 RelaxedPrecision 
                                                      OpDecorate %60 RelaxedPrecision 
                                                      OpDecorate %62 RelaxedPrecision 
                                                      OpDecorate %63 RelaxedPrecision 
                                                      OpDecorate %65 RelaxedPrecision 
                                                      OpDecorate %67 RelaxedPrecision 
                                                      OpDecorate %68 RelaxedPrecision 
                                                      OpDecorate %70 RelaxedPrecision 
                                                      OpDecorate %71 RelaxedPrecision 
                                                      OpDecorate %73 RelaxedPrecision 
                                                      OpDecorate %74 RelaxedPrecision 
                                                      OpDecorate %75 RelaxedPrecision 
                                                      OpDecorate %76 RelaxedPrecision 
                                                      OpDecorate %80 RelaxedPrecision 
                                                      OpDecorate %81 RelaxedPrecision 
                                                      OpDecorate %84 RelaxedPrecision 
                                                      OpDecorate %86 RelaxedPrecision 
                                                      OpDecorate %87 RelaxedPrecision 
                                                      OpDecorate %90 RelaxedPrecision 
                                                      OpDecorate %91 RelaxedPrecision 
                                                      OpDecorate %94 RelaxedPrecision 
                                                      OpDecorate %96 RelaxedPrecision 
                                                      OpDecorate %98 RelaxedPrecision 
                                                      OpDecorate %101 RelaxedPrecision 
                                                      OpDecorate %103 RelaxedPrecision 
                                                      OpDecorate %104 RelaxedPrecision 
                                                      OpDecorate %107 RelaxedPrecision 
                                                      OpDecorate %109 RelaxedPrecision 
                                                      OpDecorate %110 RelaxedPrecision 
                                                      OpDecorate %114 RelaxedPrecision 
                                                      OpDecorate %115 RelaxedPrecision 
                                                      OpDecorate %116 RelaxedPrecision 
                                                      OpDecorate %119 RelaxedPrecision 
                                                      OpDecorate %120 RelaxedPrecision 
                                                      OpDecorate %121 RelaxedPrecision 
                                                      OpDecorate %123 RelaxedPrecision 
                                                      OpDecorate %124 RelaxedPrecision 
                                                      OpDecorate %125 RelaxedPrecision 
                                                      OpDecorate %126 RelaxedPrecision 
                                                      OpDecorate %128 RelaxedPrecision 
                                                      OpDecorate %129 RelaxedPrecision 
                                                      OpDecorate %130 RelaxedPrecision 
                                                      OpDecorate %131 RelaxedPrecision 
                                                      OpDecorate %132 RelaxedPrecision 
                                                      OpDecorate %133 RelaxedPrecision 
                                                      OpDecorate %135 RelaxedPrecision 
                                                      OpDecorate %136 RelaxedPrecision 
                                                      OpDecorate %137 RelaxedPrecision 
                                                      OpDecorate %138 RelaxedPrecision 
                                                      OpDecorate %139 RelaxedPrecision 
                                                      OpDecorate %140 RelaxedPrecision 
                                                      OpDecorate %141 RelaxedPrecision 
                                                      OpDecorate %142 RelaxedPrecision 
                                                      OpDecorate %143 RelaxedPrecision 
                                                      OpDecorate %145 RelaxedPrecision 
                                                      OpDecorate %148 RelaxedPrecision 
                                                      OpDecorate %148 DescriptorSet 148 
                                                      OpDecorate %148 Binding 148 
                                                      OpDecorate %149 RelaxedPrecision 
                                                      OpDecorate %152 RelaxedPrecision 
                                                      OpDecorate %152 DescriptorSet 152 
                                                      OpDecorate %152 Binding 152 
                                                      OpDecorate %153 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD0 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD0 Location 158 
                                                      OpDecorate %159 RelaxedPrecision 
                                                      OpDecorate %160 RelaxedPrecision 
                                                      OpDecorate %161 RelaxedPrecision 
                                                      OpDecorate %162 RelaxedPrecision 
                                                      OpDecorate %163 RelaxedPrecision 
                                                      OpDecorate %166 RelaxedPrecision 
                                                      OpDecorate %167 RelaxedPrecision 
                                                      OpDecorate %168 RelaxedPrecision 
                                                      OpDecorate %170 RelaxedPrecision 
                                                      OpDecorate %170 Location 170 
                                                      OpDecorate %173 RelaxedPrecision 
                                                      OpDecorate %175 RelaxedPrecision 
                                                      OpDecorate %176 RelaxedPrecision 
                                                      OpDecorate %179 RelaxedPrecision 
                                                      OpDecorate %182 RelaxedPrecision 
                                                      OpDecorate %183 RelaxedPrecision 
                                                      OpDecorate %184 RelaxedPrecision 
                                                      OpDecorate %185 RelaxedPrecision 
                                                      OpDecorate %186 RelaxedPrecision 
                                                      OpDecorate %187 RelaxedPrecision 
                                               %2 = OpTypeVoid 
                                               %3 = OpTypeFunction %2 
                                               %6 = OpTypeFloat 32 
                                               %7 = OpTypeVector %6 3 
                                               %8 = OpTypePointer Private %7 
                                Private f32_3* %9 = OpVariable Private 
                                              %10 = OpTypePointer Input %7 
                        Input f32_3* vs_TEXCOORD1 = OpVariable Input 
                                              %15 = OpTypeInt 32 0 
                                          u32 %16 = OpConstant 0 
                                              %17 = OpTypePointer Private %6 
                                              %28 = OpTypeVector %6 4 
                                              %29 = OpTypeStruct %28 %28 %28 %28 %28 %6 %6 
                                              %30 = OpTypePointer Uniform %29 
Uniform struct {f32_4; f32_4; f32_4; f32_4; f32_4; f32; f32;}* %31 = OpVariable Uniform 
                                              %32 = OpTypeInt 32 1 
                                          i32 %33 = OpConstant 0 
                                              %34 = OpTypePointer Uniform %28 
                                          f32 %42 = OpConstant 3.674022E-40 
                               Private f32_3* %45 = OpVariable Private 
                                          i32 %46 = OpConstant 6 
                                              %47 = OpTypePointer Uniform %6 
                                          f32 %51 = OpConstant 3.674022E-40 
                                          i32 %53 = OpConstant 5 
                                 Private f32* %65 = OpVariable Private 
                                          f32 %78 = OpConstant 3.674022E-40 
                                          f32 %95 = OpConstant 3.674022E-40 
                                          f32 %97 = OpConstant 3.674022E-40 
                                         i32 %112 = OpConstant 3 
                                         i32 %117 = OpConstant 4 
                              Private f32_3* %131 = OpVariable Private 
                                             %144 = OpTypePointer Private %28 
                              Private f32_4* %145 = OpVariable Private 
                                             %146 = OpTypeImage %6 Dim2D 0 0 0 1 Unknown 
                                             %147 = OpTypePointer UniformConstant %146 
        UniformConstant read_only Texture2D* %148 = OpVariable UniformConstant 
                                             %150 = OpTypeSampler 
                                             %151 = OpTypePointer UniformConstant %150 
                    UniformConstant sampler* %152 = OpVariable UniformConstant 
                                             %154 = OpTypeSampledImage %146 
                                             %156 = OpTypeVector %6 2 
                                             %157 = OpTypePointer Input %156 
                        Input f32_2* vs_TEXCOORD0 = OpVariable Input 
                              Private f32_3* %161 = OpVariable Private 
                                         i32 %164 = OpConstant 2 
                                             %169 = OpTypePointer Output %28 
                               Output f32_4* %170 = OpVariable Output 
                                         u32 %171 = OpConstant 3 
                                             %177 = OpTypePointer Output %6 
                                         i32 %180 = OpConstant 1 
                                          void %4 = OpFunction None %3 
                                               %5 = OpLabel 
                                        f32_3 %12 = OpLoad vs_TEXCOORD1 
                                        f32_3 %13 = OpLoad vs_TEXCOORD1 
                                          f32 %14 = OpDot %12 %13 
                                 Private f32* %18 = OpAccessChain %9 %16 
                                                      OpStore %18 %14 
                                 Private f32* %19 = OpAccessChain %9 %16 
                                          f32 %20 = OpLoad %19 
                                          f32 %21 = OpExtInst %1 32 %20 
                                 Private f32* %22 = OpAccessChain %9 %16 
                                                      OpStore %22 %21 
                                        f32_3 %23 = OpLoad %9 
                                        f32_3 %24 = OpVectorShuffle %23 %23 0 0 0 
                                        f32_3 %25 = OpLoad vs_TEXCOORD1 
                                        f32_3 %26 = OpFMul %24 %25 
                                                      OpStore %9 %26 
                                        f32_3 %27 = OpLoad %9 
                               Uniform f32_4* %35 = OpAccessChain %31 %33 
                                        f32_4 %36 = OpLoad %35 
                                        f32_3 %37 = OpVectorShuffle %36 %36 0 1 2 
                                          f32 %38 = OpDot %27 %37 
                                 Private f32* %39 = OpAccessChain %9 %16 
                                                      OpStore %39 %38 
                                 Private f32* %40 = OpAccessChain %9 %16 
                                          f32 %41 = OpLoad %40 
                                          f32 %43 = OpExtInst %1 40 %41 %42 
                                 Private f32* %44 = OpAccessChain %9 %16 
                                                      OpStore %44 %43 
                                 Uniform f32* %48 = OpAccessChain %31 %46 
                                          f32 %49 = OpLoad %48 
                                          f32 %50 = OpFNegate %49 
                                          f32 %52 = OpFMul %50 %51 
                                 Uniform f32* %54 = OpAccessChain %31 %53 
                                          f32 %55 = OpLoad %54 
                                          f32 %56 = OpFAdd %52 %55 
                                 Private f32* %57 = OpAccessChain %45 %16 
                                                      OpStore %57 %56 
                                 Private f32* %58 = OpAccessChain %45 %16 
                                          f32 %59 = OpLoad %58 
                                          f32 %60 = OpFNegate %59 
                                 Private f32* %61 = OpAccessChain %9 %16 
                                          f32 %62 = OpLoad %61 
                                          f32 %63 = OpFAdd %60 %62 
                                 Private f32* %64 = OpAccessChain %9 %16 
                                                      OpStore %64 %63 
                                 Uniform f32* %66 = OpAccessChain %31 %46 
                                          f32 %67 = OpLoad %66 
                                          f32 %68 = OpFMul %67 %51 
                                 Uniform f32* %69 = OpAccessChain %31 %53 
                                          f32 %70 = OpLoad %69 
                                          f32 %71 = OpFAdd %68 %70 
                                                      OpStore %65 %71 
                                 Private f32* %72 = OpAccessChain %45 %16 
                                          f32 %73 = OpLoad %72 
                                          f32 %74 = OpFNegate %73 
                                          f32 %75 = OpLoad %65 
                                          f32 %76 = OpFAdd %74 %75 
                                 Private f32* %77 = OpAccessChain %45 %16 
                                                      OpStore %77 %76 
                                 Private f32* %79 = OpAccessChain %45 %16 
                                          f32 %80 = OpLoad %79 
                                          f32 %81 = OpFDiv %78 %80 
                                 Private f32* %82 = OpAccessChain %45 %16 
                                                      OpStore %82 %81 
                                 Private f32* %83 = OpAccessChain %45 %16 
                                          f32 %84 = OpLoad %83 
                                 Private f32* %85 = OpAccessChain %9 %16 
                                          f32 %86 = OpLoad %85 
                                          f32 %87 = OpFMul %84 %86 
                                 Private f32* %88 = OpAccessChain %9 %16 
                                                      OpStore %88 %87 
                                 Private f32* %89 = OpAccessChain %9 %16 
                                          f32 %90 = OpLoad %89 
                                          f32 %91 = OpExtInst %1 43 %90 %42 %78 
                                 Private f32* %92 = OpAccessChain %9 %16 
                                                      OpStore %92 %91 
                                 Private f32* %93 = OpAccessChain %9 %16 
                                          f32 %94 = OpLoad %93 
                                          f32 %96 = OpFMul %94 %95 
                                          f32 %98 = OpFAdd %96 %97 
                                 Private f32* %99 = OpAccessChain %45 %16 
                                                      OpStore %99 %98 
                                Private f32* %100 = OpAccessChain %9 %16 
                                         f32 %101 = OpLoad %100 
                                Private f32* %102 = OpAccessChain %9 %16 
                                         f32 %103 = OpLoad %102 
                                         f32 %104 = OpFMul %101 %103 
                                Private f32* %105 = OpAccessChain %9 %16 
                                                      OpStore %105 %104 
                                Private f32* %106 = OpAccessChain %9 %16 
                                         f32 %107 = OpLoad %106 
                                Private f32* %108 = OpAccessChain %45 %16 
                                         f32 %109 = OpLoad %108 
                                         f32 %110 = OpFMul %107 %109 
                                Private f32* %111 = OpAccessChain %9 %16 
                                                      OpStore %111 %110 
                              Uniform f32_4* %113 = OpAccessChain %31 %112 
                                       f32_4 %114 = OpLoad %113 
                                       f32_3 %115 = OpVectorShuffle %114 %114 0 1 2 
                                       f32_3 %116 = OpFNegate %115 
                              Uniform f32_4* %118 = OpAccessChain %31 %117 
                                       f32_4 %119 = OpLoad %118 
                                       f32_3 %120 = OpVectorShuffle %119 %119 0 1 2 
                                       f32_3 %121 = OpFAdd %116 %120 
                                                      OpStore %45 %121 
                              Uniform f32_4* %122 = OpAccessChain %31 %117 
                                       f32_4 %123 = OpLoad %122 
                                       f32_3 %124 = OpVectorShuffle %123 %123 3 3 3 
                                       f32_3 %125 = OpLoad %45 
                                       f32_3 %126 = OpFMul %124 %125 
                              Uniform f32_4* %127 = OpAccessChain %31 %112 
                                       f32_4 %128 = OpLoad %127 
                                       f32_3 %129 = OpVectorShuffle %128 %128 0 1 2 
                                       f32_3 %130 = OpFAdd %126 %129 
                                                      OpStore %45 %130 
                                       f32_3 %132 = OpLoad %45 
                                       f32_3 %133 = OpFNegate %132 
                              Uniform f32_4* %134 = OpAccessChain %31 %112 
                                       f32_4 %135 = OpLoad %134 
                                       f32_3 %136 = OpVectorShuffle %135 %135 0 1 2 
                                       f32_3 %137 = OpFAdd %133 %136 
                                                      OpStore %131 %137 
                                       f32_3 %138 = OpLoad %9 
                                       f32_3 %139 = OpVectorShuffle %138 %138 0 0 0 
                                       f32_3 %140 = OpLoad %131 
                                       f32_3 %141 = OpFMul %139 %140 
                                       f32_3 %142 = OpLoad %45 
                                       f32_3 %143 = OpFAdd %141 %142 
                                                      OpStore %9 %143 
                         read_only Texture2D %149 = OpLoad %148 
                                     sampler %153 = OpLoad %152 
                  read_only Texture2DSampled %155 = OpSampledImage %149 %153 
                                       f32_2 %159 = OpLoad vs_TEXCOORD0 
                                       f32_4 %160 = OpImageSampleImplicitLod %155 %159 
                                                      OpStore %145 %160 
                                       f32_4 %162 = OpLoad %145 
                                       f32_3 %163 = OpVectorShuffle %162 %162 0 1 2 
                              Uniform f32_4* %165 = OpAccessChain %31 %164 
                                       f32_4 %166 = OpLoad %165 
                                       f32_3 %167 = OpVectorShuffle %166 %166 0 1 2 
                                       f32_3 %168 = OpFMul %163 %167 
                                                      OpStore %161 %168 
                                Private f32* %172 = OpAccessChain %145 %171 
                                         f32 %173 = OpLoad %172 
                                Uniform f32* %174 = OpAccessChain %31 %164 %171 
                                         f32 %175 = OpLoad %174 
                                         f32 %176 = OpFMul %173 %175 
                                 Output f32* %178 = OpAccessChain %170 %171 
                                                      OpStore %178 %176 
                                       f32_3 %179 = OpLoad %161 
                              Uniform f32_4* %181 = OpAccessChain %31 %180 
                                       f32_4 %182 = OpLoad %181 
                                       f32_3 %183 = OpVectorShuffle %182 %182 0 1 2 
                                       f32_3 %184 = OpFMul %179 %183 
                                                      OpStore %161 %184 
                                       f32_3 %185 = OpLoad %9 
                                       f32_3 %186 = OpLoad %161 
                                       f32_3 %187 = OpFMul %185 %186 
                                       f32_4 %188 = OpLoad %170 
                                       f32_4 %189 = OpVectorShuffle %188 %187 4 5 6 3 
                                                      OpStore %170 %189 
                                                      OpReturn
                                                      OpFunctionEnd
"
}
SubProgram "gles3 hw_tier00 " {
Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "VERTEXLIGHT_ON" }
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 unity_4LightPosX0;
uniform 	vec4 unity_4LightPosY0;
uniform 	vec4 unity_4LightPosZ0;
uniform 	mediump vec4 unity_4LightAtten0;
uniform 	mediump vec4 unity_LightColor[8];
uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in highp vec3 in_NORMAL0;
in highp vec4 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out highp vec3 vs_TEXCOORD1;
out highp vec3 vs_TEXCOORD2;
out mediump vec3 vs_TEXCOORD3;
out highp vec4 vs_TEXCOORD5;
out highp vec4 vs_TEXCOORD6;
vec4 u_xlat0;
vec4 u_xlat1;
mediump vec4 u_xlat16_1;
vec4 u_xlat2;
vec4 u_xlat3;
vec4 u_xlat4;
mediump vec3 u_xlat16_5;
mediump vec3 u_xlat16_6;
float u_xlat21;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
    u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy;
    u_xlat1.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat1.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat1.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat21 = dot(u_xlat1.xyz, u_xlat1.xyz);
    u_xlat21 = inversesqrt(u_xlat21);
    u_xlat1.xyz = vec3(u_xlat21) * u_xlat1.xyz;
    vs_TEXCOORD1.xyz = u_xlat1.xyz;
    vs_TEXCOORD2.xyz = u_xlat0.xyz;
    u_xlat2 = (-u_xlat0.xxxx) + unity_4LightPosX0;
    u_xlat3 = (-u_xlat0.yyyy) + unity_4LightPosY0;
    u_xlat0 = (-u_xlat0.zzzz) + unity_4LightPosZ0;
    u_xlat4 = u_xlat1.yyyy * u_xlat3;
    u_xlat3 = u_xlat3 * u_xlat3;
    u_xlat3 = u_xlat2 * u_xlat2 + u_xlat3;
    u_xlat2 = u_xlat2 * u_xlat1.xxxx + u_xlat4;
    u_xlat2 = u_xlat0 * u_xlat1.zzzz + u_xlat2;
    u_xlat0 = u_xlat0 * u_xlat0 + u_xlat3;
    u_xlat0 = max(u_xlat0, vec4(9.99999997e-07, 9.99999997e-07, 9.99999997e-07, 9.99999997e-07));
    u_xlat3 = inversesqrt(u_xlat0);
    u_xlat0 = u_xlat0 * unity_4LightAtten0 + vec4(1.0, 1.0, 1.0, 1.0);
    u_xlat0 = vec4(1.0, 1.0, 1.0, 1.0) / u_xlat0;
    u_xlat2 = u_xlat2 * u_xlat3;
    u_xlat2 = max(u_xlat2, vec4(0.0, 0.0, 0.0, 0.0));
    u_xlat0 = u_xlat0 * u_xlat2;
    u_xlat2.xyz = u_xlat0.yyy * unity_LightColor[1].xyz;
    u_xlat2.xyz = unity_LightColor[0].xyz * u_xlat0.xxx + u_xlat2.xyz;
    u_xlat0.xyz = unity_LightColor[2].xyz * u_xlat0.zzz + u_xlat2.xyz;
    u_xlat0.xyz = unity_LightColor[3].xyz * u_xlat0.www + u_xlat0.xyz;
    u_xlat2.xyz = u_xlat0.xyz * vec3(0.305306017, 0.305306017, 0.305306017) + vec3(0.682171106, 0.682171106, 0.682171106);
    u_xlat2.xyz = u_xlat0.xyz * u_xlat2.xyz + vec3(0.0125228781, 0.0125228781, 0.0125228781);
    u_xlat16_5.x = u_xlat1.y * u_xlat1.y;
    u_xlat16_5.x = u_xlat1.x * u_xlat1.x + (-u_xlat16_5.x);
    u_xlat16_1 = u_xlat1.yzzx * u_xlat1.xyzz;
    u_xlat16_6.x = dot(unity_SHBr, u_xlat16_1);
    u_xlat16_6.y = dot(unity_SHBg, u_xlat16_1);
    u_xlat16_6.z = dot(unity_SHBb, u_xlat16_1);
    u_xlat16_5.xyz = unity_SHC.xyz * u_xlat16_5.xxx + u_xlat16_6.xyz;
    vs_TEXCOORD3.xyz = u_xlat0.xyz * u_xlat2.xyz + u_xlat16_5.xyz;
    vs_TEXCOORD5 = vec4(0.0, 0.0, 0.0, 0.0);
    vs_TEXCOORD6 = vec4(0.0, 0.0, 0.0, 0.0);
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 _LightColor0;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 _HColor;
uniform 	mediump vec4 _SColor;
uniform 	mediump float _RampThreshold;
uniform 	mediump float _RampSmooth;
UNITY_LOCATION(0) uniform mediump sampler2D _MainTex;
in mediump vec2 vs_TEXCOORD0;
in highp vec3 vs_TEXCOORD1;
in mediump vec3 vs_TEXCOORD3;
layout(location = 0) out mediump vec4 SV_Target0;
mediump vec3 u_xlat16_0;
vec4 u_xlat1;
mediump vec4 u_xlat16_1;
mediump vec3 u_xlat16_2;
vec3 u_xlat3;
mediump vec3 u_xlat16_4;
mediump vec3 u_xlat16_5;
mediump float u_xlat16_10;
void main()
{
    u_xlat16_0.x = dot(vs_TEXCOORD1.xyz, vs_TEXCOORD1.xyz);
    u_xlat16_0.x = inversesqrt(u_xlat16_0.x);
    u_xlat16_0.xyz = u_xlat16_0.xxx * vs_TEXCOORD1.xyz;
    u_xlat16_0.x = dot(u_xlat16_0.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat16_0.x = max(u_xlat16_0.x, 0.0);
    u_xlat16_5.x = (-_RampSmooth) * 0.5 + _RampThreshold;
    u_xlat16_0.x = (-u_xlat16_5.x) + u_xlat16_0.x;
    u_xlat16_10 = _RampSmooth * 0.5 + _RampThreshold;
    u_xlat16_5.x = (-u_xlat16_5.x) + u_xlat16_10;
    u_xlat16_5.x = float(1.0) / u_xlat16_5.x;
    u_xlat16_0.x = u_xlat16_5.x * u_xlat16_0.x;
#ifdef UNITY_ADRENO_ES3
    u_xlat16_0.x = min(max(u_xlat16_0.x, 0.0), 1.0);
#else
    u_xlat16_0.x = clamp(u_xlat16_0.x, 0.0, 1.0);
#endif
    u_xlat16_5.x = u_xlat16_0.x * -2.0 + 3.0;
    u_xlat16_0.x = u_xlat16_0.x * u_xlat16_0.x;
    u_xlat16_0.x = u_xlat16_0.x * u_xlat16_5.x;
    u_xlat16_5.xyz = (-_HColor.xyz) + _SColor.xyz;
    u_xlat16_5.xyz = _SColor.www * u_xlat16_5.xyz + _HColor.xyz;
    u_xlat16_1.xyz = (-u_xlat16_5.xyz) + _HColor.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xxx * u_xlat16_1.xyz + u_xlat16_5.xyz;
    u_xlat1.xyz = vs_TEXCOORD1.xyz;
    u_xlat1.w = 1.0;
    u_xlat16_2.x = dot(unity_SHAr, u_xlat1);
    u_xlat16_2.y = dot(unity_SHAg, u_xlat1);
    u_xlat16_2.z = dot(unity_SHAb, u_xlat1);
    u_xlat16_2.xyz = u_xlat16_2.xyz + vs_TEXCOORD3.xyz;
    u_xlat16_2.xyz = max(u_xlat16_2.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat3.xyz = log2(u_xlat16_2.xyz);
    u_xlat3.xyz = u_xlat3.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
    u_xlat3.xyz = exp2(u_xlat3.xyz);
    u_xlat3.xyz = u_xlat3.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
    u_xlat3.xyz = max(u_xlat3.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat16_1 = texture(_MainTex, vs_TEXCOORD0.xy);
    u_xlat16_2.xyz = u_xlat16_1.xyz * _Color.xyz;
    SV_Target0.w = u_xlat16_1.w * _Color.w;
    u_xlat16_4.xyz = u_xlat3.xyz * u_xlat16_2.xyz;
    u_xlat16_2.xyz = u_xlat16_2.xyz * _LightColor0.xyz;
    SV_Target0.xyz = u_xlat16_2.xyz * u_xlat16_0.xyz + u_xlat16_4.xyz;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier01 " {
Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "VERTEXLIGHT_ON" }
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 unity_4LightPosX0;
uniform 	vec4 unity_4LightPosY0;
uniform 	vec4 unity_4LightPosZ0;
uniform 	mediump vec4 unity_4LightAtten0;
uniform 	mediump vec4 unity_LightColor[8];
uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in highp vec3 in_NORMAL0;
in highp vec4 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out highp vec3 vs_TEXCOORD1;
out highp vec3 vs_TEXCOORD2;
out mediump vec3 vs_TEXCOORD3;
out highp vec4 vs_TEXCOORD5;
out highp vec4 vs_TEXCOORD6;
vec4 u_xlat0;
vec4 u_xlat1;
mediump vec4 u_xlat16_1;
vec4 u_xlat2;
vec4 u_xlat3;
vec4 u_xlat4;
mediump vec3 u_xlat16_5;
mediump vec3 u_xlat16_6;
float u_xlat21;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
    u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy;
    u_xlat1.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat1.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat1.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat21 = dot(u_xlat1.xyz, u_xlat1.xyz);
    u_xlat21 = inversesqrt(u_xlat21);
    u_xlat1.xyz = vec3(u_xlat21) * u_xlat1.xyz;
    vs_TEXCOORD1.xyz = u_xlat1.xyz;
    vs_TEXCOORD2.xyz = u_xlat0.xyz;
    u_xlat2 = (-u_xlat0.xxxx) + unity_4LightPosX0;
    u_xlat3 = (-u_xlat0.yyyy) + unity_4LightPosY0;
    u_xlat0 = (-u_xlat0.zzzz) + unity_4LightPosZ0;
    u_xlat4 = u_xlat1.yyyy * u_xlat3;
    u_xlat3 = u_xlat3 * u_xlat3;
    u_xlat3 = u_xlat2 * u_xlat2 + u_xlat3;
    u_xlat2 = u_xlat2 * u_xlat1.xxxx + u_xlat4;
    u_xlat2 = u_xlat0 * u_xlat1.zzzz + u_xlat2;
    u_xlat0 = u_xlat0 * u_xlat0 + u_xlat3;
    u_xlat0 = max(u_xlat0, vec4(9.99999997e-07, 9.99999997e-07, 9.99999997e-07, 9.99999997e-07));
    u_xlat3 = inversesqrt(u_xlat0);
    u_xlat0 = u_xlat0 * unity_4LightAtten0 + vec4(1.0, 1.0, 1.0, 1.0);
    u_xlat0 = vec4(1.0, 1.0, 1.0, 1.0) / u_xlat0;
    u_xlat2 = u_xlat2 * u_xlat3;
    u_xlat2 = max(u_xlat2, vec4(0.0, 0.0, 0.0, 0.0));
    u_xlat0 = u_xlat0 * u_xlat2;
    u_xlat2.xyz = u_xlat0.yyy * unity_LightColor[1].xyz;
    u_xlat2.xyz = unity_LightColor[0].xyz * u_xlat0.xxx + u_xlat2.xyz;
    u_xlat0.xyz = unity_LightColor[2].xyz * u_xlat0.zzz + u_xlat2.xyz;
    u_xlat0.xyz = unity_LightColor[3].xyz * u_xlat0.www + u_xlat0.xyz;
    u_xlat2.xyz = u_xlat0.xyz * vec3(0.305306017, 0.305306017, 0.305306017) + vec3(0.682171106, 0.682171106, 0.682171106);
    u_xlat2.xyz = u_xlat0.xyz * u_xlat2.xyz + vec3(0.0125228781, 0.0125228781, 0.0125228781);
    u_xlat16_5.x = u_xlat1.y * u_xlat1.y;
    u_xlat16_5.x = u_xlat1.x * u_xlat1.x + (-u_xlat16_5.x);
    u_xlat16_1 = u_xlat1.yzzx * u_xlat1.xyzz;
    u_xlat16_6.x = dot(unity_SHBr, u_xlat16_1);
    u_xlat16_6.y = dot(unity_SHBg, u_xlat16_1);
    u_xlat16_6.z = dot(unity_SHBb, u_xlat16_1);
    u_xlat16_5.xyz = unity_SHC.xyz * u_xlat16_5.xxx + u_xlat16_6.xyz;
    vs_TEXCOORD3.xyz = u_xlat0.xyz * u_xlat2.xyz + u_xlat16_5.xyz;
    vs_TEXCOORD5 = vec4(0.0, 0.0, 0.0, 0.0);
    vs_TEXCOORD6 = vec4(0.0, 0.0, 0.0, 0.0);
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 _LightColor0;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 _HColor;
uniform 	mediump vec4 _SColor;
uniform 	mediump float _RampThreshold;
uniform 	mediump float _RampSmooth;
UNITY_LOCATION(0) uniform mediump sampler2D _MainTex;
in mediump vec2 vs_TEXCOORD0;
in highp vec3 vs_TEXCOORD1;
in mediump vec3 vs_TEXCOORD3;
layout(location = 0) out mediump vec4 SV_Target0;
mediump vec3 u_xlat16_0;
vec4 u_xlat1;
mediump vec4 u_xlat16_1;
mediump vec3 u_xlat16_2;
vec3 u_xlat3;
mediump vec3 u_xlat16_4;
mediump vec3 u_xlat16_5;
mediump float u_xlat16_10;
void main()
{
    u_xlat16_0.x = dot(vs_TEXCOORD1.xyz, vs_TEXCOORD1.xyz);
    u_xlat16_0.x = inversesqrt(u_xlat16_0.x);
    u_xlat16_0.xyz = u_xlat16_0.xxx * vs_TEXCOORD1.xyz;
    u_xlat16_0.x = dot(u_xlat16_0.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat16_0.x = max(u_xlat16_0.x, 0.0);
    u_xlat16_5.x = (-_RampSmooth) * 0.5 + _RampThreshold;
    u_xlat16_0.x = (-u_xlat16_5.x) + u_xlat16_0.x;
    u_xlat16_10 = _RampSmooth * 0.5 + _RampThreshold;
    u_xlat16_5.x = (-u_xlat16_5.x) + u_xlat16_10;
    u_xlat16_5.x = float(1.0) / u_xlat16_5.x;
    u_xlat16_0.x = u_xlat16_5.x * u_xlat16_0.x;
#ifdef UNITY_ADRENO_ES3
    u_xlat16_0.x = min(max(u_xlat16_0.x, 0.0), 1.0);
#else
    u_xlat16_0.x = clamp(u_xlat16_0.x, 0.0, 1.0);
#endif
    u_xlat16_5.x = u_xlat16_0.x * -2.0 + 3.0;
    u_xlat16_0.x = u_xlat16_0.x * u_xlat16_0.x;
    u_xlat16_0.x = u_xlat16_0.x * u_xlat16_5.x;
    u_xlat16_5.xyz = (-_HColor.xyz) + _SColor.xyz;
    u_xlat16_5.xyz = _SColor.www * u_xlat16_5.xyz + _HColor.xyz;
    u_xlat16_1.xyz = (-u_xlat16_5.xyz) + _HColor.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xxx * u_xlat16_1.xyz + u_xlat16_5.xyz;
    u_xlat1.xyz = vs_TEXCOORD1.xyz;
    u_xlat1.w = 1.0;
    u_xlat16_2.x = dot(unity_SHAr, u_xlat1);
    u_xlat16_2.y = dot(unity_SHAg, u_xlat1);
    u_xlat16_2.z = dot(unity_SHAb, u_xlat1);
    u_xlat16_2.xyz = u_xlat16_2.xyz + vs_TEXCOORD3.xyz;
    u_xlat16_2.xyz = max(u_xlat16_2.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat3.xyz = log2(u_xlat16_2.xyz);
    u_xlat3.xyz = u_xlat3.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
    u_xlat3.xyz = exp2(u_xlat3.xyz);
    u_xlat3.xyz = u_xlat3.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
    u_xlat3.xyz = max(u_xlat3.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat16_1 = texture(_MainTex, vs_TEXCOORD0.xy);
    u_xlat16_2.xyz = u_xlat16_1.xyz * _Color.xyz;
    SV_Target0.w = u_xlat16_1.w * _Color.w;
    u_xlat16_4.xyz = u_xlat3.xyz * u_xlat16_2.xyz;
    u_xlat16_2.xyz = u_xlat16_2.xyz * _LightColor0.xyz;
    SV_Target0.xyz = u_xlat16_2.xyz * u_xlat16_0.xyz + u_xlat16_4.xyz;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier02 " {
Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "VERTEXLIGHT_ON" }
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 unity_4LightPosX0;
uniform 	vec4 unity_4LightPosY0;
uniform 	vec4 unity_4LightPosZ0;
uniform 	mediump vec4 unity_4LightAtten0;
uniform 	mediump vec4 unity_LightColor[8];
uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in highp vec3 in_NORMAL0;
in highp vec4 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out highp vec3 vs_TEXCOORD1;
out highp vec3 vs_TEXCOORD2;
out mediump vec3 vs_TEXCOORD3;
out highp vec4 vs_TEXCOORD5;
out highp vec4 vs_TEXCOORD6;
vec4 u_xlat0;
vec4 u_xlat1;
mediump vec4 u_xlat16_1;
vec4 u_xlat2;
vec4 u_xlat3;
vec4 u_xlat4;
mediump vec3 u_xlat16_5;
mediump vec3 u_xlat16_6;
float u_xlat21;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
    u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy;
    u_xlat1.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat1.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat1.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat21 = dot(u_xlat1.xyz, u_xlat1.xyz);
    u_xlat21 = inversesqrt(u_xlat21);
    u_xlat1.xyz = vec3(u_xlat21) * u_xlat1.xyz;
    vs_TEXCOORD1.xyz = u_xlat1.xyz;
    vs_TEXCOORD2.xyz = u_xlat0.xyz;
    u_xlat2 = (-u_xlat0.xxxx) + unity_4LightPosX0;
    u_xlat3 = (-u_xlat0.yyyy) + unity_4LightPosY0;
    u_xlat0 = (-u_xlat0.zzzz) + unity_4LightPosZ0;
    u_xlat4 = u_xlat1.yyyy * u_xlat3;
    u_xlat3 = u_xlat3 * u_xlat3;
    u_xlat3 = u_xlat2 * u_xlat2 + u_xlat3;
    u_xlat2 = u_xlat2 * u_xlat1.xxxx + u_xlat4;
    u_xlat2 = u_xlat0 * u_xlat1.zzzz + u_xlat2;
    u_xlat0 = u_xlat0 * u_xlat0 + u_xlat3;
    u_xlat0 = max(u_xlat0, vec4(9.99999997e-07, 9.99999997e-07, 9.99999997e-07, 9.99999997e-07));
    u_xlat3 = inversesqrt(u_xlat0);
    u_xlat0 = u_xlat0 * unity_4LightAtten0 + vec4(1.0, 1.0, 1.0, 1.0);
    u_xlat0 = vec4(1.0, 1.0, 1.0, 1.0) / u_xlat0;
    u_xlat2 = u_xlat2 * u_xlat3;
    u_xlat2 = max(u_xlat2, vec4(0.0, 0.0, 0.0, 0.0));
    u_xlat0 = u_xlat0 * u_xlat2;
    u_xlat2.xyz = u_xlat0.yyy * unity_LightColor[1].xyz;
    u_xlat2.xyz = unity_LightColor[0].xyz * u_xlat0.xxx + u_xlat2.xyz;
    u_xlat0.xyz = unity_LightColor[2].xyz * u_xlat0.zzz + u_xlat2.xyz;
    u_xlat0.xyz = unity_LightColor[3].xyz * u_xlat0.www + u_xlat0.xyz;
    u_xlat2.xyz = u_xlat0.xyz * vec3(0.305306017, 0.305306017, 0.305306017) + vec3(0.682171106, 0.682171106, 0.682171106);
    u_xlat2.xyz = u_xlat0.xyz * u_xlat2.xyz + vec3(0.0125228781, 0.0125228781, 0.0125228781);
    u_xlat16_5.x = u_xlat1.y * u_xlat1.y;
    u_xlat16_5.x = u_xlat1.x * u_xlat1.x + (-u_xlat16_5.x);
    u_xlat16_1 = u_xlat1.yzzx * u_xlat1.xyzz;
    u_xlat16_6.x = dot(unity_SHBr, u_xlat16_1);
    u_xlat16_6.y = dot(unity_SHBg, u_xlat16_1);
    u_xlat16_6.z = dot(unity_SHBb, u_xlat16_1);
    u_xlat16_5.xyz = unity_SHC.xyz * u_xlat16_5.xxx + u_xlat16_6.xyz;
    vs_TEXCOORD3.xyz = u_xlat0.xyz * u_xlat2.xyz + u_xlat16_5.xyz;
    vs_TEXCOORD5 = vec4(0.0, 0.0, 0.0, 0.0);
    vs_TEXCOORD6 = vec4(0.0, 0.0, 0.0, 0.0);
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 _LightColor0;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 _HColor;
uniform 	mediump vec4 _SColor;
uniform 	mediump float _RampThreshold;
uniform 	mediump float _RampSmooth;
UNITY_LOCATION(0) uniform mediump sampler2D _MainTex;
in mediump vec2 vs_TEXCOORD0;
in highp vec3 vs_TEXCOORD1;
in mediump vec3 vs_TEXCOORD3;
layout(location = 0) out mediump vec4 SV_Target0;
mediump vec3 u_xlat16_0;
vec4 u_xlat1;
mediump vec4 u_xlat16_1;
mediump vec3 u_xlat16_2;
vec3 u_xlat3;
mediump vec3 u_xlat16_4;
mediump vec3 u_xlat16_5;
mediump float u_xlat16_10;
void main()
{
    u_xlat16_0.x = dot(vs_TEXCOORD1.xyz, vs_TEXCOORD1.xyz);
    u_xlat16_0.x = inversesqrt(u_xlat16_0.x);
    u_xlat16_0.xyz = u_xlat16_0.xxx * vs_TEXCOORD1.xyz;
    u_xlat16_0.x = dot(u_xlat16_0.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat16_0.x = max(u_xlat16_0.x, 0.0);
    u_xlat16_5.x = (-_RampSmooth) * 0.5 + _RampThreshold;
    u_xlat16_0.x = (-u_xlat16_5.x) + u_xlat16_0.x;
    u_xlat16_10 = _RampSmooth * 0.5 + _RampThreshold;
    u_xlat16_5.x = (-u_xlat16_5.x) + u_xlat16_10;
    u_xlat16_5.x = float(1.0) / u_xlat16_5.x;
    u_xlat16_0.x = u_xlat16_5.x * u_xlat16_0.x;
#ifdef UNITY_ADRENO_ES3
    u_xlat16_0.x = min(max(u_xlat16_0.x, 0.0), 1.0);
#else
    u_xlat16_0.x = clamp(u_xlat16_0.x, 0.0, 1.0);
#endif
    u_xlat16_5.x = u_xlat16_0.x * -2.0 + 3.0;
    u_xlat16_0.x = u_xlat16_0.x * u_xlat16_0.x;
    u_xlat16_0.x = u_xlat16_0.x * u_xlat16_5.x;
    u_xlat16_5.xyz = (-_HColor.xyz) + _SColor.xyz;
    u_xlat16_5.xyz = _SColor.www * u_xlat16_5.xyz + _HColor.xyz;
    u_xlat16_1.xyz = (-u_xlat16_5.xyz) + _HColor.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xxx * u_xlat16_1.xyz + u_xlat16_5.xyz;
    u_xlat1.xyz = vs_TEXCOORD1.xyz;
    u_xlat1.w = 1.0;
    u_xlat16_2.x = dot(unity_SHAr, u_xlat1);
    u_xlat16_2.y = dot(unity_SHAg, u_xlat1);
    u_xlat16_2.z = dot(unity_SHAb, u_xlat1);
    u_xlat16_2.xyz = u_xlat16_2.xyz + vs_TEXCOORD3.xyz;
    u_xlat16_2.xyz = max(u_xlat16_2.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat3.xyz = log2(u_xlat16_2.xyz);
    u_xlat3.xyz = u_xlat3.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
    u_xlat3.xyz = exp2(u_xlat3.xyz);
    u_xlat3.xyz = u_xlat3.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
    u_xlat3.xyz = max(u_xlat3.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat16_1 = texture(_MainTex, vs_TEXCOORD0.xy);
    u_xlat16_2.xyz = u_xlat16_1.xyz * _Color.xyz;
    SV_Target0.w = u_xlat16_1.w * _Color.w;
    u_xlat16_4.xyz = u_xlat3.xyz * u_xlat16_2.xyz;
    u_xlat16_2.xyz = u_xlat16_2.xyz * _LightColor0.xyz;
    SV_Target0.xyz = u_xlat16_2.xyz * u_xlat16_0.xyz + u_xlat16_4.xyz;
    return;
}

#endif
"
}
SubProgram "vulkan hw_tier00 " {
Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "VERTEXLIGHT_ON" }
"; SPIR-V
; Version: 1.0
; Generator: Khronos Glslang Reference Front End; 6
; Bound: 369
; Schema: 0
                                                      OpCapability Shader 
                                               %1 = OpExtInstImport "GLSL.std.450" 
                                                      OpMemoryModel Logical GLSL450 
                                                      OpEntryPoint Vertex %4 "main" %11 %90 %100 %116 %120 %159 %162 %353 %361 %362 
                                                      OpName vs_TEXCOORD0 "vs_TEXCOORD0" 
                                                      OpName vs_TEXCOORD1 "vs_TEXCOORD1" 
                                                      OpName vs_TEXCOORD2 "vs_TEXCOORD2" 
                                                      OpName vs_TEXCOORD3 "vs_TEXCOORD3" 
                                                      OpName vs_TEXCOORD5 "vs_TEXCOORD5" 
                                                      OpName vs_TEXCOORD6 "vs_TEXCOORD6" 
                                                      OpDecorate %11 Location 11 
                                                      OpDecorate %16 ArrayStride 16 
                                                      OpDecorate %18 ArrayStride 18 
                                                      OpDecorate %19 ArrayStride 19 
                                                      OpDecorate %20 ArrayStride 20 
                                                      OpMemberDecorate %21 0 Offset 21 
                                                      OpMemberDecorate %21 1 Offset 21 
                                                      OpMemberDecorate %21 2 Offset 21 
                                                      OpMemberDecorate %21 3 RelaxedPrecision 
                                                      OpMemberDecorate %21 3 Offset 21 
                                                      OpMemberDecorate %21 4 RelaxedPrecision 
                                                      OpMemberDecorate %21 4 Offset 21 
                                                      OpMemberDecorate %21 5 RelaxedPrecision 
                                                      OpMemberDecorate %21 5 Offset 21 
                                                      OpMemberDecorate %21 6 RelaxedPrecision 
                                                      OpMemberDecorate %21 6 Offset 21 
                                                      OpMemberDecorate %21 7 RelaxedPrecision 
                                                      OpMemberDecorate %21 7 Offset 21 
                                                      OpMemberDecorate %21 8 RelaxedPrecision 
                                                      OpMemberDecorate %21 8 Offset 21 
                                                      OpMemberDecorate %21 9 Offset 21 
                                                      OpMemberDecorate %21 10 Offset 21 
                                                      OpMemberDecorate %21 11 Offset 21 
                                                      OpMemberDecorate %21 12 Offset 21 
                                                      OpDecorate %21 Block 
                                                      OpDecorate %23 DescriptorSet 23 
                                                      OpDecorate %23 Binding 23 
                                                      OpMemberDecorate %88 0 BuiltIn 88 
                                                      OpMemberDecorate %88 1 BuiltIn 88 
                                                      OpMemberDecorate %88 2 BuiltIn 88 
                                                      OpDecorate %88 Block 
                                                      OpDecorate %100 Location 100 
                                                      OpDecorate vs_TEXCOORD0 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD0 Location 116 
                                                      OpDecorate %120 Location 120 
                                                      OpDecorate vs_TEXCOORD1 Location 159 
                                                      OpDecorate vs_TEXCOORD2 Location 162 
                                                      OpDecorate %222 RelaxedPrecision 
                                                      OpDecorate %243 RelaxedPrecision 
                                                      OpDecorate %244 RelaxedPrecision 
                                                      OpDecorate %249 RelaxedPrecision 
                                                      OpDecorate %250 RelaxedPrecision 
                                                      OpDecorate %260 RelaxedPrecision 
                                                      OpDecorate %261 RelaxedPrecision 
                                                      OpDecorate %271 RelaxedPrecision 
                                                      OpDecorate %272 RelaxedPrecision 
                                                      OpDecorate %302 RelaxedPrecision 
                                                      OpDecorate %315 RelaxedPrecision 
                                                      OpDecorate %316 RelaxedPrecision 
                                                      OpDecorate %319 RelaxedPrecision 
                                                      OpDecorate %325 RelaxedPrecision 
                                                      OpDecorate %328 RelaxedPrecision 
                                                      OpDecorate %329 RelaxedPrecision 
                                                      OpDecorate %330 RelaxedPrecision 
                                                      OpDecorate %334 RelaxedPrecision 
                                                      OpDecorate %335 RelaxedPrecision 
                                                      OpDecorate %336 RelaxedPrecision 
                                                      OpDecorate %340 RelaxedPrecision 
                                                      OpDecorate %341 RelaxedPrecision 
                                                      OpDecorate %342 RelaxedPrecision 
                                                      OpDecorate %346 RelaxedPrecision 
                                                      OpDecorate %347 RelaxedPrecision 
                                                      OpDecorate %348 RelaxedPrecision 
                                                      OpDecorate %349 RelaxedPrecision 
                                                      OpDecorate %350 RelaxedPrecision 
                                                      OpDecorate %351 RelaxedPrecision 
                                                      OpDecorate %352 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD3 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD3 Location 353 
                                                      OpDecorate %359 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD5 Location 361 
                                                      OpDecorate vs_TEXCOORD6 Location 362 
                                               %2 = OpTypeVoid 
                                               %3 = OpTypeFunction %2 
                                               %6 = OpTypeFloat 32 
                                               %7 = OpTypeVector %6 4 
                                               %8 = OpTypePointer Private %7 
                                Private f32_4* %9 = OpVariable Private 
                                              %10 = OpTypePointer Input %7 
                                 Input f32_4* %11 = OpVariable Input 
                                              %14 = OpTypeInt 32 0 
                                          u32 %15 = OpConstant 8 
                                              %16 = OpTypeArray %7 %15 
                                          u32 %17 = OpConstant 4 
                                              %18 = OpTypeArray %7 %17 
                                              %19 = OpTypeArray %7 %17 
                                              %20 = OpTypeArray %7 %17 
                                              %21 = OpTypeStruct %7 %7 %7 %7 %16 %7 %7 %7 %7 %18 %19 %20 %7 
                                              %22 = OpTypePointer Uniform %21 
Uniform struct {f32_4; f32_4; f32_4; f32_4; f32_4[8]; f32_4; f32_4; f32_4; f32_4; f32_4[4]; f32_4[4]; f32_4[4]; f32_4;}* %23 = OpVariable Uniform 
                                              %24 = OpTypeInt 32 1 
                                          i32 %25 = OpConstant 9 
                                          i32 %26 = OpConstant 1 
                                              %27 = OpTypePointer Uniform %7 
                                          i32 %31 = OpConstant 0 
                                          i32 %39 = OpConstant 2 
                               Private f32_4* %47 = OpVariable Private 
                                          i32 %49 = OpConstant 3 
                                              %53 = OpTypeVector %6 3 
                               Private f32_4* %65 = OpVariable Private 
                                          i32 %68 = OpConstant 11 
                                          u32 %86 = OpConstant 1 
                                              %87 = OpTypeArray %6 %86 
                                              %88 = OpTypeStruct %7 %6 %87 
                                              %89 = OpTypePointer Output %88 
         Output struct {f32_4; f32; f32[1];}* %90 = OpVariable Output 
                                              %98 = OpTypePointer Output %7 
                                Input f32_4* %100 = OpVariable Input 
                                             %101 = OpTypeVector %6 2 
                                         i32 %104 = OpConstant 12 
                                             %115 = OpTypePointer Output %101 
                       Output f32_2* vs_TEXCOORD0 = OpVariable Output 
                                             %119 = OpTypePointer Input %53 
                                Input f32_3* %120 = OpVariable Input 
                                         i32 %122 = OpConstant 10 
                                         u32 %127 = OpConstant 0 
                                             %128 = OpTypePointer Private %6 
                                         u32 %141 = OpConstant 2 
                                Private f32* %143 = OpVariable Private 
                                             %158 = OpTypePointer Output %53 
                       Output f32_3* vs_TEXCOORD1 = OpVariable Output 
                       Output f32_3* vs_TEXCOORD2 = OpVariable Output 
                              Private f32_4* %171 = OpVariable Private 
                              Private f32_4* %184 = OpVariable Private 
                                         f32 %215 = OpConstant 3.674022E-40 
                                       f32_4 %216 = OpConstantComposite %215 %215 %215 %215 
                                         f32 %224 = OpConstant 3.674022E-40 
                                       f32_4 %225 = OpConstantComposite %224 %224 %224 %224 
                                         f32 %233 = OpConstant 3.674022E-40 
                                       f32_4 %234 = OpConstantComposite %233 %233 %233 %233 
                                         i32 %241 = OpConstant 4 
                                         f32 %283 = OpConstant 3.674022E-40 
                                       f32_3 %284 = OpConstantComposite %283 %283 %283 
                                         f32 %286 = OpConstant 3.674022E-40 
                                       f32_3 %287 = OpConstantComposite %286 %286 %286 
                                         f32 %296 = OpConstant 3.674022E-40 
                                       f32_3 %297 = OpConstantComposite %296 %296 %296 
                                             %301 = OpTypePointer Private %53 
                              Private f32_3* %302 = OpVariable Private 
                              Private f32_4* %319 = OpVariable Private 
                              Private f32_3* %325 = OpVariable Private 
                                         i32 %326 = OpConstant 5 
                                         i32 %332 = OpConstant 6 
                                         i32 %338 = OpConstant 7 
                                         i32 %344 = OpConstant 8 
                       Output f32_3* vs_TEXCOORD3 = OpVariable Output 
                       Output f32_4* vs_TEXCOORD5 = OpVariable Output 
                       Output f32_4* vs_TEXCOORD6 = OpVariable Output 
                                             %363 = OpTypePointer Output %6 
                                          void %4 = OpFunction None %3 
                                               %5 = OpLabel 
                                        f32_4 %12 = OpLoad %11 
                                        f32_4 %13 = OpVectorShuffle %12 %12 1 1 1 1 
                               Uniform f32_4* %28 = OpAccessChain %23 %25 %26 
                                        f32_4 %29 = OpLoad %28 
                                        f32_4 %30 = OpFMul %13 %29 
                                                      OpStore %9 %30 
                               Uniform f32_4* %32 = OpAccessChain %23 %25 %31 
                                        f32_4 %33 = OpLoad %32 
                                        f32_4 %34 = OpLoad %11 
                                        f32_4 %35 = OpVectorShuffle %34 %34 0 0 0 0 
                                        f32_4 %36 = OpFMul %33 %35 
                                        f32_4 %37 = OpLoad %9 
                                        f32_4 %38 = OpFAdd %36 %37 
                                                      OpStore %9 %38 
                               Uniform f32_4* %40 = OpAccessChain %23 %25 %39 
                                        f32_4 %41 = OpLoad %40 
                                        f32_4 %42 = OpLoad %11 
                                        f32_4 %43 = OpVectorShuffle %42 %42 2 2 2 2 
                                        f32_4 %44 = OpFMul %41 %43 
                                        f32_4 %45 = OpLoad %9 
                                        f32_4 %46 = OpFAdd %44 %45 
                                                      OpStore %9 %46 
                                        f32_4 %48 = OpLoad %9 
                               Uniform f32_4* %50 = OpAccessChain %23 %25 %49 
                                        f32_4 %51 = OpLoad %50 
                                        f32_4 %52 = OpFAdd %48 %51 
                                                      OpStore %47 %52 
                               Uniform f32_4* %54 = OpAccessChain %23 %25 %49 
                                        f32_4 %55 = OpLoad %54 
                                        f32_3 %56 = OpVectorShuffle %55 %55 0 1 2 
                                        f32_4 %57 = OpLoad %11 
                                        f32_3 %58 = OpVectorShuffle %57 %57 3 3 3 
                                        f32_3 %59 = OpFMul %56 %58 
                                        f32_4 %60 = OpLoad %9 
                                        f32_3 %61 = OpVectorShuffle %60 %60 0 1 2 
                                        f32_3 %62 = OpFAdd %59 %61 
                                        f32_4 %63 = OpLoad %9 
                                        f32_4 %64 = OpVectorShuffle %63 %62 4 5 6 3 
                                                      OpStore %9 %64 
                                        f32_4 %66 = OpLoad %47 
                                        f32_4 %67 = OpVectorShuffle %66 %66 1 1 1 1 
                               Uniform f32_4* %69 = OpAccessChain %23 %68 %26 
                                        f32_4 %70 = OpLoad %69 
                                        f32_4 %71 = OpFMul %67 %70 
                                                      OpStore %65 %71 
                               Uniform f32_4* %72 = OpAccessChain %23 %68 %31 
                                        f32_4 %73 = OpLoad %72 
                                        f32_4 %74 = OpLoad %47 
                                        f32_4 %75 = OpVectorShuffle %74 %74 0 0 0 0 
                                        f32_4 %76 = OpFMul %73 %75 
                                        f32_4 %77 = OpLoad %65 
                                        f32_4 %78 = OpFAdd %76 %77 
                                                      OpStore %65 %78 
                               Uniform f32_4* %79 = OpAccessChain %23 %68 %39 
                                        f32_4 %80 = OpLoad %79 
                                        f32_4 %81 = OpLoad %47 
                                        f32_4 %82 = OpVectorShuffle %81 %81 2 2 2 2 
                                        f32_4 %83 = OpFMul %80 %82 
                                        f32_4 %84 = OpLoad %65 
                                        f32_4 %85 = OpFAdd %83 %84 
                                                      OpStore %65 %85 
                               Uniform f32_4* %91 = OpAccessChain %23 %68 %49 
                                        f32_4 %92 = OpLoad %91 
                                        f32_4 %93 = OpLoad %47 
                                        f32_4 %94 = OpVectorShuffle %93 %93 3 3 3 3 
                                        f32_4 %95 = OpFMul %92 %94 
                                        f32_4 %96 = OpLoad %65 
                                        f32_4 %97 = OpFAdd %95 %96 
                                Output f32_4* %99 = OpAccessChain %90 %31 
                                                      OpStore %99 %97 
                                       f32_4 %102 = OpLoad %100 
                                       f32_2 %103 = OpVectorShuffle %102 %102 0 1 
                              Uniform f32_4* %105 = OpAccessChain %23 %104 
                                       f32_4 %106 = OpLoad %105 
                                       f32_2 %107 = OpVectorShuffle %106 %106 0 1 
                                       f32_2 %108 = OpFMul %103 %107 
                              Uniform f32_4* %109 = OpAccessChain %23 %104 
                                       f32_4 %110 = OpLoad %109 
                                       f32_2 %111 = OpVectorShuffle %110 %110 2 3 
                                       f32_2 %112 = OpFAdd %108 %111 
                                       f32_4 %113 = OpLoad %47 
                                       f32_4 %114 = OpVectorShuffle %113 %112 4 5 2 3 
                                                      OpStore %47 %114 
                                       f32_4 %117 = OpLoad %47 
                                       f32_2 %118 = OpVectorShuffle %117 %117 0 1 
                                                      OpStore vs_TEXCOORD0 %118 
                                       f32_3 %121 = OpLoad %120 
                              Uniform f32_4* %123 = OpAccessChain %23 %122 %31 
                                       f32_4 %124 = OpLoad %123 
                                       f32_3 %125 = OpVectorShuffle %124 %124 0 1 2 
                                         f32 %126 = OpDot %121 %125 
                                Private f32* %129 = OpAccessChain %47 %127 
                                                      OpStore %129 %126 
                                       f32_3 %130 = OpLoad %120 
                              Uniform f32_4* %131 = OpAccessChain %23 %122 %26 
                                       f32_4 %132 = OpLoad %131 
                                       f32_3 %133 = OpVectorShuffle %132 %132 0 1 2 
                                         f32 %134 = OpDot %130 %133 
                                Private f32* %135 = OpAccessChain %47 %86 
                                                      OpStore %135 %134 
                                       f32_3 %136 = OpLoad %120 
                              Uniform f32_4* %137 = OpAccessChain %23 %122 %39 
                                       f32_4 %138 = OpLoad %137 
                                       f32_3 %139 = OpVectorShuffle %138 %138 0 1 2 
                                         f32 %140 = OpDot %136 %139 
                                Private f32* %142 = OpAccessChain %47 %141 
                                                      OpStore %142 %140 
                                       f32_4 %144 = OpLoad %47 
                                       f32_3 %145 = OpVectorShuffle %144 %144 0 1 2 
                                       f32_4 %146 = OpLoad %47 
                                       f32_3 %147 = OpVectorShuffle %146 %146 0 1 2 
                                         f32 %148 = OpDot %145 %147 
                                                      OpStore %143 %148 
                                         f32 %149 = OpLoad %143 
                                         f32 %150 = OpExtInst %1 32 %149 
                                                      OpStore %143 %150 
                                         f32 %151 = OpLoad %143 
                                       f32_3 %152 = OpCompositeConstruct %151 %151 %151 
                                       f32_4 %153 = OpLoad %47 
                                       f32_3 %154 = OpVectorShuffle %153 %153 0 1 2 
                                       f32_3 %155 = OpFMul %152 %154 
                                       f32_4 %156 = OpLoad %47 
                                       f32_4 %157 = OpVectorShuffle %156 %155 4 5 6 3 
                                                      OpStore %47 %157 
                                       f32_4 %160 = OpLoad %47 
                                       f32_3 %161 = OpVectorShuffle %160 %160 0 1 2 
                                                      OpStore vs_TEXCOORD1 %161 
                                       f32_4 %163 = OpLoad %9 
                                       f32_3 %164 = OpVectorShuffle %163 %163 0 1 2 
                                                      OpStore vs_TEXCOORD2 %164 
                                       f32_4 %165 = OpLoad %9 
                                       f32_4 %166 = OpVectorShuffle %165 %165 0 0 0 0 
                                       f32_4 %167 = OpFNegate %166 
                              Uniform f32_4* %168 = OpAccessChain %23 %31 
                                       f32_4 %169 = OpLoad %168 
                                       f32_4 %170 = OpFAdd %167 %169 
                                                      OpStore %65 %170 
                                       f32_4 %172 = OpLoad %9 
                                       f32_4 %173 = OpVectorShuffle %172 %172 1 1 1 1 
                                       f32_4 %174 = OpFNegate %173 
                              Uniform f32_4* %175 = OpAccessChain %23 %26 
                                       f32_4 %176 = OpLoad %175 
                                       f32_4 %177 = OpFAdd %174 %176 
                                                      OpStore %171 %177 
                                       f32_4 %178 = OpLoad %9 
                                       f32_4 %179 = OpVectorShuffle %178 %178 2 2 2 2 
                                       f32_4 %180 = OpFNegate %179 
                              Uniform f32_4* %181 = OpAccessChain %23 %39 
                                       f32_4 %182 = OpLoad %181 
                                       f32_4 %183 = OpFAdd %180 %182 
                                                      OpStore %9 %183 
                                       f32_4 %185 = OpLoad %47 
                                       f32_4 %186 = OpVectorShuffle %185 %185 1 1 1 1 
                                       f32_4 %187 = OpLoad %171 
                                       f32_4 %188 = OpFMul %186 %187 
                                                      OpStore %184 %188 
                                       f32_4 %189 = OpLoad %171 
                                       f32_4 %190 = OpLoad %171 
                                       f32_4 %191 = OpFMul %189 %190 
                                                      OpStore %171 %191 
                                       f32_4 %192 = OpLoad %65 
                                       f32_4 %193 = OpLoad %65 
                                       f32_4 %194 = OpFMul %192 %193 
                                       f32_4 %195 = OpLoad %171 
                                       f32_4 %196 = OpFAdd %194 %195 
                                                      OpStore %171 %196 
                                       f32_4 %197 = OpLoad %65 
                                       f32_4 %198 = OpLoad %47 
                                       f32_4 %199 = OpVectorShuffle %198 %198 0 0 0 0 
                                       f32_4 %200 = OpFMul %197 %199 
                                       f32_4 %201 = OpLoad %184 
                                       f32_4 %202 = OpFAdd %200 %201 
                                                      OpStore %65 %202 
                                       f32_4 %203 = OpLoad %9 
                                       f32_4 %204 = OpLoad %47 
                                       f32_4 %205 = OpVectorShuffle %204 %204 2 2 2 2 
                                       f32_4 %206 = OpFMul %203 %205 
                                       f32_4 %207 = OpLoad %65 
                                       f32_4 %208 = OpFAdd %206 %207 
                                                      OpStore %65 %208 
                                       f32_4 %209 = OpLoad %9 
                                       f32_4 %210 = OpLoad %9 
                                       f32_4 %211 = OpFMul %209 %210 
                                       f32_4 %212 = OpLoad %171 
                                       f32_4 %213 = OpFAdd %211 %212 
                                                      OpStore %9 %213 
                                       f32_4 %214 = OpLoad %9 
                                       f32_4 %217 = OpExtInst %1 40 %214 %216 
                                                      OpStore %9 %217 
                                       f32_4 %218 = OpLoad %9 
                                       f32_4 %219 = OpExtInst %1 32 %218 
                                                      OpStore %171 %219 
                                       f32_4 %220 = OpLoad %9 
                              Uniform f32_4* %221 = OpAccessChain %23 %49 
                                       f32_4 %222 = OpLoad %221 
                                       f32_4 %223 = OpFMul %220 %222 
                                       f32_4 %226 = OpFAdd %223 %225 
                                                      OpStore %9 %226 
                                       f32_4 %227 = OpLoad %9 
                                       f32_4 %228 = OpFDiv %225 %227 
                                                      OpStore %9 %228 
                                       f32_4 %229 = OpLoad %65 
                                       f32_4 %230 = OpLoad %171 
                                       f32_4 %231 = OpFMul %229 %230 
                                                      OpStore %65 %231 
                                       f32_4 %232 = OpLoad %65 
                                       f32_4 %235 = OpExtInst %1 40 %232 %234 
                                                      OpStore %65 %235 
                                       f32_4 %236 = OpLoad %9 
                                       f32_4 %237 = OpLoad %65 
                                       f32_4 %238 = OpFMul %236 %237 
                                                      OpStore %9 %238 
                                       f32_4 %239 = OpLoad %9 
                                       f32_3 %240 = OpVectorShuffle %239 %239 1 1 1 
                              Uniform f32_4* %242 = OpAccessChain %23 %241 %26 
                                       f32_4 %243 = OpLoad %242 
                                       f32_3 %244 = OpVectorShuffle %243 %243 0 1 2 
                                       f32_3 %245 = OpFMul %240 %244 
                                       f32_4 %246 = OpLoad %65 
                                       f32_4 %247 = OpVectorShuffle %246 %245 4 5 6 3 
                                                      OpStore %65 %247 
                              Uniform f32_4* %248 = OpAccessChain %23 %241 %31 
                                       f32_4 %249 = OpLoad %248 
                                       f32_3 %250 = OpVectorShuffle %249 %249 0 1 2 
                                       f32_4 %251 = OpLoad %9 
                                       f32_3 %252 = OpVectorShuffle %251 %251 0 0 0 
                                       f32_3 %253 = OpFMul %250 %252 
                                       f32_4 %254 = OpLoad %65 
                                       f32_3 %255 = OpVectorShuffle %254 %254 0 1 2 
                                       f32_3 %256 = OpFAdd %253 %255 
                                       f32_4 %257 = OpLoad %65 
                                       f32_4 %258 = OpVectorShuffle %257 %256 4 5 6 3 
                                                      OpStore %65 %258 
                              Uniform f32_4* %259 = OpAccessChain %23 %241 %39 
                                       f32_4 %260 = OpLoad %259 
                                       f32_3 %261 = OpVectorShuffle %260 %260 0 1 2 
                                       f32_4 %262 = OpLoad %9 
                                       f32_3 %263 = OpVectorShuffle %262 %262 2 2 2 
                                       f32_3 %264 = OpFMul %261 %263 
                                       f32_4 %265 = OpLoad %65 
                                       f32_3 %266 = OpVectorShuffle %265 %265 0 1 2 
                                       f32_3 %267 = OpFAdd %264 %266 
                                       f32_4 %268 = OpLoad %9 
                                       f32_4 %269 = OpVectorShuffle %268 %267 4 5 6 3 
                                                      OpStore %9 %269 
                              Uniform f32_4* %270 = OpAccessChain %23 %241 %49 
                                       f32_4 %271 = OpLoad %270 
                                       f32_3 %272 = OpVectorShuffle %271 %271 0 1 2 
                                       f32_4 %273 = OpLoad %9 
                                       f32_3 %274 = OpVectorShuffle %273 %273 3 3 3 
                                       f32_3 %275 = OpFMul %272 %274 
                                       f32_4 %276 = OpLoad %9 
                                       f32_3 %277 = OpVectorShuffle %276 %276 0 1 2 
                                       f32_3 %278 = OpFAdd %275 %277 
                                       f32_4 %279 = OpLoad %9 
                                       f32_4 %280 = OpVectorShuffle %279 %278 4 5 6 3 
                                                      OpStore %9 %280 
                                       f32_4 %281 = OpLoad %9 
                                       f32_3 %282 = OpVectorShuffle %281 %281 0 1 2 
                                       f32_3 %285 = OpFMul %282 %284 
                                       f32_3 %288 = OpFAdd %285 %287 
                                       f32_4 %289 = OpLoad %65 
                                       f32_4 %290 = OpVectorShuffle %289 %288 4 5 6 3 
                                                      OpStore %65 %290 
                                       f32_4 %291 = OpLoad %9 
                                       f32_3 %292 = OpVectorShuffle %291 %291 0 1 2 
                                       f32_4 %293 = OpLoad %65 
                                       f32_3 %294 = OpVectorShuffle %293 %293 0 1 2 
                                       f32_3 %295 = OpFMul %292 %294 
                                       f32_3 %298 = OpFAdd %295 %297 
                                       f32_4 %299 = OpLoad %65 
                                       f32_4 %300 = OpVectorShuffle %299 %298 4 5 6 3 
                                                      OpStore %65 %300 
                                Private f32* %303 = OpAccessChain %47 %86 
                                         f32 %304 = OpLoad %303 
                                Private f32* %305 = OpAccessChain %47 %86 
                                         f32 %306 = OpLoad %305 
                                         f32 %307 = OpFMul %304 %306 
                                Private f32* %308 = OpAccessChain %302 %127 
                                                      OpStore %308 %307 
                                Private f32* %309 = OpAccessChain %47 %127 
                                         f32 %310 = OpLoad %309 
                                Private f32* %311 = OpAccessChain %47 %127 
                                         f32 %312 = OpLoad %311 
                                         f32 %313 = OpFMul %310 %312 
                                Private f32* %314 = OpAccessChain %302 %127 
                                         f32 %315 = OpLoad %314 
                                         f32 %316 = OpFNegate %315 
                                         f32 %317 = OpFAdd %313 %316 
                                Private f32* %318 = OpAccessChain %302 %127 
                                                      OpStore %318 %317 
                                       f32_4 %320 = OpLoad %47 
                                       f32_4 %321 = OpVectorShuffle %320 %320 1 2 2 0 
                                       f32_4 %322 = OpLoad %47 
                                       f32_4 %323 = OpVectorShuffle %322 %322 0 1 2 2 
                                       f32_4 %324 = OpFMul %321 %323 
                                                      OpStore %319 %324 
                              Uniform f32_4* %327 = OpAccessChain %23 %326 
                                       f32_4 %328 = OpLoad %327 
                                       f32_4 %329 = OpLoad %319 
                                         f32 %330 = OpDot %328 %329 
                                Private f32* %331 = OpAccessChain %325 %127 
                                                      OpStore %331 %330 
                              Uniform f32_4* %333 = OpAccessChain %23 %332 
                                       f32_4 %334 = OpLoad %333 
                                       f32_4 %335 = OpLoad %319 
                                         f32 %336 = OpDot %334 %335 
                                Private f32* %337 = OpAccessChain %325 %86 
                                                      OpStore %337 %336 
                              Uniform f32_4* %339 = OpAccessChain %23 %338 
                                       f32_4 %340 = OpLoad %339 
                                       f32_4 %341 = OpLoad %319 
                                         f32 %342 = OpDot %340 %341 
                                Private f32* %343 = OpAccessChain %325 %141 
                                                      OpStore %343 %342 
                              Uniform f32_4* %345 = OpAccessChain %23 %344 
                                       f32_4 %346 = OpLoad %345 
                                       f32_3 %347 = OpVectorShuffle %346 %346 0 1 2 
                                       f32_3 %348 = OpLoad %302 
                                       f32_3 %349 = OpVectorShuffle %348 %348 0 0 0 
                                       f32_3 %350 = OpFMul %347 %349 
                                       f32_3 %351 = OpLoad %325 
                                       f32_3 %352 = OpFAdd %350 %351 
                                                      OpStore %302 %352 
                                       f32_4 %354 = OpLoad %9 
                                       f32_3 %355 = OpVectorShuffle %354 %354 0 1 2 
                                       f32_4 %356 = OpLoad %65 
                                       f32_3 %357 = OpVectorShuffle %356 %356 0 1 2 
                                       f32_3 %358 = OpFMul %355 %357 
                                       f32_3 %359 = OpLoad %302 
                                       f32_3 %360 = OpFAdd %358 %359 
                                                      OpStore vs_TEXCOORD3 %360 
                                                      OpStore vs_TEXCOORD5 %234 
                                                      OpStore vs_TEXCOORD6 %234 
                                 Output f32* %364 = OpAccessChain %90 %31 %86 
                                         f32 %365 = OpLoad %364 
                                         f32 %366 = OpFNegate %365 
                                 Output f32* %367 = OpAccessChain %90 %31 %86 
                                                      OpStore %367 %366 
                                                      OpReturn
                                                      OpFunctionEnd
; SPIR-V
; Version: 1.0
; Generator: Khronos Glslang Reference Front End; 6
; Bound: 247
; Schema: 0
                                                      OpCapability Shader 
                                               %1 = OpExtInstImport "GLSL.std.450" 
                                                      OpMemoryModel Logical GLSL450 
                                                      OpEntryPoint Fragment %4 "main" %11 %173 %210 %221 
                                                      OpExecutionMode %4 OriginUpperLeft 
                                                      OpName vs_TEXCOORD1 "vs_TEXCOORD1" 
                                                      OpName vs_TEXCOORD3 "vs_TEXCOORD3" 
                                                      OpName vs_TEXCOORD0 "vs_TEXCOORD0" 
                                                      OpDecorate %9 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD1 Location 11 
                                                      OpDecorate %20 RelaxedPrecision 
                                                      OpDecorate %21 RelaxedPrecision 
                                                      OpDecorate %23 RelaxedPrecision 
                                                      OpDecorate %24 RelaxedPrecision 
                                                      OpDecorate %27 RelaxedPrecision 
                                                      OpMemberDecorate %29 0 RelaxedPrecision 
                                                      OpMemberDecorate %29 0 Offset 29 
                                                      OpMemberDecorate %29 1 RelaxedPrecision 
                                                      OpMemberDecorate %29 1 Offset 29 
                                                      OpMemberDecorate %29 2 RelaxedPrecision 
                                                      OpMemberDecorate %29 2 Offset 29 
                                                      OpMemberDecorate %29 3 RelaxedPrecision 
                                                      OpMemberDecorate %29 3 Offset 29 
                                                      OpMemberDecorate %29 4 RelaxedPrecision 
                                                      OpMemberDecorate %29 4 Offset 29 
                                                      OpMemberDecorate %29 5 RelaxedPrecision 
                                                      OpMemberDecorate %29 5 Offset 29 
                                                      OpMemberDecorate %29 6 RelaxedPrecision 
                                                      OpMemberDecorate %29 6 Offset 29 
                                                      OpMemberDecorate %29 7 RelaxedPrecision 
                                                      OpMemberDecorate %29 7 Offset 29 
                                                      OpMemberDecorate %29 8 RelaxedPrecision 
                                                      OpMemberDecorate %29 8 Offset 29 
                                                      OpMemberDecorate %29 9 RelaxedPrecision 
                                                      OpMemberDecorate %29 9 Offset 29 
                                                      OpDecorate %29 Block 
                                                      OpDecorate %31 DescriptorSet 31 
                                                      OpDecorate %31 Binding 31 
                                                      OpDecorate %36 RelaxedPrecision 
                                                      OpDecorate %37 RelaxedPrecision 
                                                      OpDecorate %38 RelaxedPrecision 
                                                      OpDecorate %41 RelaxedPrecision 
                                                      OpDecorate %43 RelaxedPrecision 
                                                      OpDecorate %45 RelaxedPrecision 
                                                      OpDecorate %49 RelaxedPrecision 
                                                      OpDecorate %50 RelaxedPrecision 
                                                      OpDecorate %52 RelaxedPrecision 
                                                      OpDecorate %55 RelaxedPrecision 
                                                      OpDecorate %56 RelaxedPrecision 
                                                      OpDecorate %59 RelaxedPrecision 
                                                      OpDecorate %60 RelaxedPrecision 
                                                      OpDecorate %62 RelaxedPrecision 
                                                      OpDecorate %63 RelaxedPrecision 
                                                      OpDecorate %65 RelaxedPrecision 
                                                      OpDecorate %67 RelaxedPrecision 
                                                      OpDecorate %68 RelaxedPrecision 
                                                      OpDecorate %70 RelaxedPrecision 
                                                      OpDecorate %71 RelaxedPrecision 
                                                      OpDecorate %73 RelaxedPrecision 
                                                      OpDecorate %74 RelaxedPrecision 
                                                      OpDecorate %75 RelaxedPrecision 
                                                      OpDecorate %76 RelaxedPrecision 
                                                      OpDecorate %80 RelaxedPrecision 
                                                      OpDecorate %81 RelaxedPrecision 
                                                      OpDecorate %84 RelaxedPrecision 
                                                      OpDecorate %86 RelaxedPrecision 
                                                      OpDecorate %87 RelaxedPrecision 
                                                      OpDecorate %90 RelaxedPrecision 
                                                      OpDecorate %91 RelaxedPrecision 
                                                      OpDecorate %94 RelaxedPrecision 
                                                      OpDecorate %96 RelaxedPrecision 
                                                      OpDecorate %98 RelaxedPrecision 
                                                      OpDecorate %101 RelaxedPrecision 
                                                      OpDecorate %103 RelaxedPrecision 
                                                      OpDecorate %104 RelaxedPrecision 
                                                      OpDecorate %107 RelaxedPrecision 
                                                      OpDecorate %109 RelaxedPrecision 
                                                      OpDecorate %110 RelaxedPrecision 
                                                      OpDecorate %114 RelaxedPrecision 
                                                      OpDecorate %115 RelaxedPrecision 
                                                      OpDecorate %116 RelaxedPrecision 
                                                      OpDecorate %119 RelaxedPrecision 
                                                      OpDecorate %120 RelaxedPrecision 
                                                      OpDecorate %121 RelaxedPrecision 
                                                      OpDecorate %123 RelaxedPrecision 
                                                      OpDecorate %124 RelaxedPrecision 
                                                      OpDecorate %125 RelaxedPrecision 
                                                      OpDecorate %126 RelaxedPrecision 
                                                      OpDecorate %128 RelaxedPrecision 
                                                      OpDecorate %129 RelaxedPrecision 
                                                      OpDecorate %130 RelaxedPrecision 
                                                      OpDecorate %131 RelaxedPrecision 
                                                      OpDecorate %132 RelaxedPrecision 
                                                      OpDecorate %133 RelaxedPrecision 
                                                      OpDecorate %135 RelaxedPrecision 
                                                      OpDecorate %136 RelaxedPrecision 
                                                      OpDecorate %137 RelaxedPrecision 
                                                      OpDecorate %138 RelaxedPrecision 
                                                      OpDecorate %139 RelaxedPrecision 
                                                      OpDecorate %140 RelaxedPrecision 
                                                      OpDecorate %141 RelaxedPrecision 
                                                      OpDecorate %142 RelaxedPrecision 
                                                      OpDecorate %143 RelaxedPrecision 
                                                      OpDecorate %151 RelaxedPrecision 
                                                      OpDecorate %154 RelaxedPrecision 
                                                      OpDecorate %160 RelaxedPrecision 
                                                      OpDecorate %167 RelaxedPrecision 
                                                      OpDecorate %172 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD3 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD3 Location 173 
                                                      OpDecorate %174 RelaxedPrecision 
                                                      OpDecorate %175 RelaxedPrecision 
                                                      OpDecorate %176 RelaxedPrecision 
                                                      OpDecorate %178 RelaxedPrecision 
                                                      OpDecorate %180 RelaxedPrecision 
                                                      OpDecorate %181 RelaxedPrecision 
                                                      OpDecorate %197 RelaxedPrecision 
                                                      OpDecorate %200 RelaxedPrecision 
                                                      OpDecorate %200 DescriptorSet 200 
                                                      OpDecorate %200 Binding 200 
                                                      OpDecorate %201 RelaxedPrecision 
                                                      OpDecorate %204 RelaxedPrecision 
                                                      OpDecorate %204 DescriptorSet 204 
                                                      OpDecorate %204 Binding 204 
                                                      OpDecorate %205 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD0 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD0 Location 210 
                                                      OpDecorate %211 RelaxedPrecision 
                                                      OpDecorate %212 RelaxedPrecision 
                                                      OpDecorate %213 RelaxedPrecision 
                                                      OpDecorate %214 RelaxedPrecision 
                                                      OpDecorate %217 RelaxedPrecision 
                                                      OpDecorate %218 RelaxedPrecision 
                                                      OpDecorate %219 RelaxedPrecision 
                                                      OpDecorate %221 RelaxedPrecision 
                                                      OpDecorate %221 Location 221 
                                                      OpDecorate %223 RelaxedPrecision 
                                                      OpDecorate %225 RelaxedPrecision 
                                                      OpDecorate %226 RelaxedPrecision 
                                                      OpDecorate %229 RelaxedPrecision 
                                                      OpDecorate %231 RelaxedPrecision 
                                                      OpDecorate %233 RelaxedPrecision 
                                                      OpDecorate %236 RelaxedPrecision 
                                                      OpDecorate %237 RelaxedPrecision 
                                                      OpDecorate %238 RelaxedPrecision 
                                                      OpDecorate %239 RelaxedPrecision 
                                                      OpDecorate %240 RelaxedPrecision 
                                                      OpDecorate %241 RelaxedPrecision 
                                                      OpDecorate %242 RelaxedPrecision 
                                                      OpDecorate %243 RelaxedPrecision 
                                               %2 = OpTypeVoid 
                                               %3 = OpTypeFunction %2 
                                               %6 = OpTypeFloat 32 
                                               %7 = OpTypeVector %6 3 
                                               %8 = OpTypePointer Private %7 
                                Private f32_3* %9 = OpVariable Private 
                                              %10 = OpTypePointer Input %7 
                        Input f32_3* vs_TEXCOORD1 = OpVariable Input 
                                              %15 = OpTypeInt 32 0 
                                          u32 %16 = OpConstant 0 
                                              %17 = OpTypePointer Private %6 
                                              %28 = OpTypeVector %6 4 
                                              %29 = OpTypeStruct %28 %28 %28 %28 %28 %28 %28 %28 %6 %6 
                                              %30 = OpTypePointer Uniform %29 
Uniform struct {f32_4; f32_4; f32_4; f32_4; f32_4; f32_4; f32_4; f32_4; f32; f32;}* %31 = OpVariable Uniform 
                                              %32 = OpTypeInt 32 1 
                                          i32 %33 = OpConstant 0 
                                              %34 = OpTypePointer Uniform %28 
                                          f32 %42 = OpConstant 3.674022E-40 
                               Private f32_3* %45 = OpVariable Private 
                                          i32 %46 = OpConstant 9 
                                              %47 = OpTypePointer Uniform %6 
                                          f32 %51 = OpConstant 3.674022E-40 
                                          i32 %53 = OpConstant 8 
                                 Private f32* %65 = OpVariable Private 
                                          f32 %78 = OpConstant 3.674022E-40 
                                          f32 %95 = OpConstant 3.674022E-40 
                                          f32 %97 = OpConstant 3.674022E-40 
                                         i32 %112 = OpConstant 6 
                                         i32 %117 = OpConstant 7 
                              Private f32_3* %131 = OpVariable Private 
                                             %144 = OpTypePointer Private %28 
                              Private f32_4* %145 = OpVariable Private 
                                         u32 %149 = OpConstant 3 
                              Private f32_3* %151 = OpVariable Private 
                                         i32 %152 = OpConstant 1 
                                         i32 %158 = OpConstant 2 
                                         u32 %163 = OpConstant 1 
                                         i32 %165 = OpConstant 3 
                                         u32 %170 = OpConstant 2 
                        Input f32_3* vs_TEXCOORD3 = OpVariable Input 
                                       f32_3 %177 = OpConstantComposite %42 %42 %42 
                              Private f32_3* %179 = OpVariable Private 
                                         f32 %183 = OpConstant 3.674022E-40 
                                       f32_3 %184 = OpConstantComposite %183 %183 %183 
                                         f32 %189 = OpConstant 3.674022E-40 
                                       f32_3 %190 = OpConstantComposite %189 %189 %189 
                                         f32 %192 = OpConstant 3.674022E-40 
                                       f32_3 %193 = OpConstantComposite %192 %192 %192 
                              Private f32_4* %197 = OpVariable Private 
                                             %198 = OpTypeImage %6 Dim2D 0 0 0 1 Unknown 
                                             %199 = OpTypePointer UniformConstant %198 
        UniformConstant read_only Texture2D* %200 = OpVariable UniformConstant 
                                             %202 = OpTypeSampler 
                                             %203 = OpTypePointer UniformConstant %202 
                    UniformConstant sampler* %204 = OpVariable UniformConstant 
                                             %206 = OpTypeSampledImage %198 
                                             %208 = OpTypeVector %6 2 
                                             %209 = OpTypePointer Input %208 
                        Input f32_2* vs_TEXCOORD0 = OpVariable Input 
                                         i32 %215 = OpConstant 5 
                                             %220 = OpTypePointer Output %28 
                               Output f32_4* %221 = OpVariable Output 
                                             %227 = OpTypePointer Output %6 
                              Private f32_3* %229 = OpVariable Private 
                                         i32 %234 = OpConstant 4 
                                          void %4 = OpFunction None %3 
                                               %5 = OpLabel 
                                        f32_3 %12 = OpLoad vs_TEXCOORD1 
                                        f32_3 %13 = OpLoad vs_TEXCOORD1 
                                          f32 %14 = OpDot %12 %13 
                                 Private f32* %18 = OpAccessChain %9 %16 
                                                      OpStore %18 %14 
                                 Private f32* %19 = OpAccessChain %9 %16 
                                          f32 %20 = OpLoad %19 
                                          f32 %21 = OpExtInst %1 32 %20 
                                 Private f32* %22 = OpAccessChain %9 %16 
                                                      OpStore %22 %21 
                                        f32_3 %23 = OpLoad %9 
                                        f32_3 %24 = OpVectorShuffle %23 %23 0 0 0 
                                        f32_3 %25 = OpLoad vs_TEXCOORD1 
                                        f32_3 %26 = OpFMul %24 %25 
                                                      OpStore %9 %26 
                                        f32_3 %27 = OpLoad %9 
                               Uniform f32_4* %35 = OpAccessChain %31 %33 
                                        f32_4 %36 = OpLoad %35 
                                        f32_3 %37 = OpVectorShuffle %36 %36 0 1 2 
                                          f32 %38 = OpDot %27 %37 
                                 Private f32* %39 = OpAccessChain %9 %16 
                                                      OpStore %39 %38 
                                 Private f32* %40 = OpAccessChain %9 %16 
                                          f32 %41 = OpLoad %40 
                                          f32 %43 = OpExtInst %1 40 %41 %42 
                                 Private f32* %44 = OpAccessChain %9 %16 
                                                      OpStore %44 %43 
                                 Uniform f32* %48 = OpAccessChain %31 %46 
                                          f32 %49 = OpLoad %48 
                                          f32 %50 = OpFNegate %49 
                                          f32 %52 = OpFMul %50 %51 
                                 Uniform f32* %54 = OpAccessChain %31 %53 
                                          f32 %55 = OpLoad %54 
                                          f32 %56 = OpFAdd %52 %55 
                                 Private f32* %57 = OpAccessChain %45 %16 
                                                      OpStore %57 %56 
                                 Private f32* %58 = OpAccessChain %45 %16 
                                          f32 %59 = OpLoad %58 
                                          f32 %60 = OpFNegate %59 
                                 Private f32* %61 = OpAccessChain %9 %16 
                                          f32 %62 = OpLoad %61 
                                          f32 %63 = OpFAdd %60 %62 
                                 Private f32* %64 = OpAccessChain %9 %16 
                                                      OpStore %64 %63 
                                 Uniform f32* %66 = OpAccessChain %31 %46 
                                          f32 %67 = OpLoad %66 
                                          f32 %68 = OpFMul %67 %51 
                                 Uniform f32* %69 = OpAccessChain %31 %53 
                                          f32 %70 = OpLoad %69 
                                          f32 %71 = OpFAdd %68 %70 
                                                      OpStore %65 %71 
                                 Private f32* %72 = OpAccessChain %45 %16 
                                          f32 %73 = OpLoad %72 
                                          f32 %74 = OpFNegate %73 
                                          f32 %75 = OpLoad %65 
                                          f32 %76 = OpFAdd %74 %75 
                                 Private f32* %77 = OpAccessChain %45 %16 
                                                      OpStore %77 %76 
                                 Private f32* %79 = OpAccessChain %45 %16 
                                          f32 %80 = OpLoad %79 
                                          f32 %81 = OpFDiv %78 %80 
                                 Private f32* %82 = OpAccessChain %45 %16 
                                                      OpStore %82 %81 
                                 Private f32* %83 = OpAccessChain %45 %16 
                                          f32 %84 = OpLoad %83 
                                 Private f32* %85 = OpAccessChain %9 %16 
                                          f32 %86 = OpLoad %85 
                                          f32 %87 = OpFMul %84 %86 
                                 Private f32* %88 = OpAccessChain %9 %16 
                                                      OpStore %88 %87 
                                 Private f32* %89 = OpAccessChain %9 %16 
                                          f32 %90 = OpLoad %89 
                                          f32 %91 = OpExtInst %1 43 %90 %42 %78 
                                 Private f32* %92 = OpAccessChain %9 %16 
                                                      OpStore %92 %91 
                                 Private f32* %93 = OpAccessChain %9 %16 
                                          f32 %94 = OpLoad %93 
                                          f32 %96 = OpFMul %94 %95 
                                          f32 %98 = OpFAdd %96 %97 
                                 Private f32* %99 = OpAccessChain %45 %16 
                                                      OpStore %99 %98 
                                Private f32* %100 = OpAccessChain %9 %16 
                                         f32 %101 = OpLoad %100 
                                Private f32* %102 = OpAccessChain %9 %16 
                                         f32 %103 = OpLoad %102 
                                         f32 %104 = OpFMul %101 %103 
                                Private f32* %105 = OpAccessChain %9 %16 
                                                      OpStore %105 %104 
                                Private f32* %106 = OpAccessChain %9 %16 
                                         f32 %107 = OpLoad %106 
                                Private f32* %108 = OpAccessChain %45 %16 
                                         f32 %109 = OpLoad %108 
                                         f32 %110 = OpFMul %107 %109 
                                Private f32* %111 = OpAccessChain %9 %16 
                                                      OpStore %111 %110 
                              Uniform f32_4* %113 = OpAccessChain %31 %112 
                                       f32_4 %114 = OpLoad %113 
                                       f32_3 %115 = OpVectorShuffle %114 %114 0 1 2 
                                       f32_3 %116 = OpFNegate %115 
                              Uniform f32_4* %118 = OpAccessChain %31 %117 
                                       f32_4 %119 = OpLoad %118 
                                       f32_3 %120 = OpVectorShuffle %119 %119 0 1 2 
                                       f32_3 %121 = OpFAdd %116 %120 
                                                      OpStore %45 %121 
                              Uniform f32_4* %122 = OpAccessChain %31 %117 
                                       f32_4 %123 = OpLoad %122 
                                       f32_3 %124 = OpVectorShuffle %123 %123 3 3 3 
                                       f32_3 %125 = OpLoad %45 
                                       f32_3 %126 = OpFMul %124 %125 
                              Uniform f32_4* %127 = OpAccessChain %31 %112 
                                       f32_4 %128 = OpLoad %127 
                                       f32_3 %129 = OpVectorShuffle %128 %128 0 1 2 
                                       f32_3 %130 = OpFAdd %126 %129 
                                                      OpStore %45 %130 
                                       f32_3 %132 = OpLoad %45 
                                       f32_3 %133 = OpFNegate %132 
                              Uniform f32_4* %134 = OpAccessChain %31 %112 
                                       f32_4 %135 = OpLoad %134 
                                       f32_3 %136 = OpVectorShuffle %135 %135 0 1 2 
                                       f32_3 %137 = OpFAdd %133 %136 
                                                      OpStore %131 %137 
                                       f32_3 %138 = OpLoad %9 
                                       f32_3 %139 = OpVectorShuffle %138 %138 0 0 0 
                                       f32_3 %140 = OpLoad %131 
                                       f32_3 %141 = OpFMul %139 %140 
                                       f32_3 %142 = OpLoad %45 
                                       f32_3 %143 = OpFAdd %141 %142 
                                                      OpStore %9 %143 
                                       f32_3 %146 = OpLoad vs_TEXCOORD1 
                                       f32_4 %147 = OpLoad %145 
                                       f32_4 %148 = OpVectorShuffle %147 %146 4 5 6 3 
                                                      OpStore %145 %148 
                                Private f32* %150 = OpAccessChain %145 %149 
                                                      OpStore %150 %78 
                              Uniform f32_4* %153 = OpAccessChain %31 %152 
                                       f32_4 %154 = OpLoad %153 
                                       f32_4 %155 = OpLoad %145 
                                         f32 %156 = OpDot %154 %155 
                                Private f32* %157 = OpAccessChain %151 %16 
                                                      OpStore %157 %156 
                              Uniform f32_4* %159 = OpAccessChain %31 %158 
                                       f32_4 %160 = OpLoad %159 
                                       f32_4 %161 = OpLoad %145 
                                         f32 %162 = OpDot %160 %161 
                                Private f32* %164 = OpAccessChain %151 %163 
                                                      OpStore %164 %162 
                              Uniform f32_4* %166 = OpAccessChain %31 %165 
                                       f32_4 %167 = OpLoad %166 
                                       f32_4 %168 = OpLoad %145 
                                         f32 %169 = OpDot %167 %168 
                                Private f32* %171 = OpAccessChain %151 %170 
                                                      OpStore %171 %169 
                                       f32_3 %172 = OpLoad %151 
                                       f32_3 %174 = OpLoad vs_TEXCOORD3 
                                       f32_3 %175 = OpFAdd %172 %174 
                                                      OpStore %151 %175 
                                       f32_3 %176 = OpLoad %151 
                                       f32_3 %178 = OpExtInst %1 40 %176 %177 
                                                      OpStore %151 %178 
                                       f32_3 %180 = OpLoad %151 
                                       f32_3 %181 = OpExtInst %1 30 %180 
                                                      OpStore %179 %181 
                                       f32_3 %182 = OpLoad %179 
                                       f32_3 %185 = OpFMul %182 %184 
                                                      OpStore %179 %185 
                                       f32_3 %186 = OpLoad %179 
                                       f32_3 %187 = OpExtInst %1 29 %186 
                                                      OpStore %179 %187 
                                       f32_3 %188 = OpLoad %179 
                                       f32_3 %191 = OpFMul %188 %190 
                                       f32_3 %194 = OpFAdd %191 %193 
                                                      OpStore %179 %194 
                                       f32_3 %195 = OpLoad %179 
                                       f32_3 %196 = OpExtInst %1 40 %195 %177 
                                                      OpStore %179 %196 
                         read_only Texture2D %201 = OpLoad %200 
                                     sampler %205 = OpLoad %204 
                  read_only Texture2DSampled %207 = OpSampledImage %201 %205 
                                       f32_2 %211 = OpLoad vs_TEXCOORD0 
                                       f32_4 %212 = OpImageSampleImplicitLod %207 %211 
                                                      OpStore %197 %212 
                                       f32_4 %213 = OpLoad %197 
                                       f32_3 %214 = OpVectorShuffle %213 %213 0 1 2 
                              Uniform f32_4* %216 = OpAccessChain %31 %215 
                                       f32_4 %217 = OpLoad %216 
                                       f32_3 %218 = OpVectorShuffle %217 %217 0 1 2 
                                       f32_3 %219 = OpFMul %214 %218 
                                                      OpStore %151 %219 
                                Private f32* %222 = OpAccessChain %197 %149 
                                         f32 %223 = OpLoad %222 
                                Uniform f32* %224 = OpAccessChain %31 %215 %149 
                                         f32 %225 = OpLoad %224 
                                         f32 %226 = OpFMul %223 %225 
                                 Output f32* %228 = OpAccessChain %221 %149 
                                                      OpStore %228 %226 
                                       f32_3 %230 = OpLoad %179 
                                       f32_3 %231 = OpLoad %151 
                                       f32_3 %232 = OpFMul %230 %231 
                                                      OpStore %229 %232 
                                       f32_3 %233 = OpLoad %151 
                              Uniform f32_4* %235 = OpAccessChain %31 %234 
                                       f32_4 %236 = OpLoad %235 
                                       f32_3 %237 = OpVectorShuffle %236 %236 0 1 2 
                                       f32_3 %238 = OpFMul %233 %237 
                                                      OpStore %151 %238 
                                       f32_3 %239 = OpLoad %151 
                                       f32_3 %240 = OpLoad %9 
                                       f32_3 %241 = OpFMul %239 %240 
                                       f32_3 %242 = OpLoad %229 
                                       f32_3 %243 = OpFAdd %241 %242 
                                       f32_4 %244 = OpLoad %221 
                                       f32_4 %245 = OpVectorShuffle %244 %243 4 5 6 3 
                                                      OpStore %221 %245 
                                                      OpReturn
                                                      OpFunctionEnd
"
}
SubProgram "vulkan hw_tier01 " {
Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "VERTEXLIGHT_ON" }
"; SPIR-V
; Version: 1.0
; Generator: Khronos Glslang Reference Front End; 6
; Bound: 369
; Schema: 0
                                                      OpCapability Shader 
                                               %1 = OpExtInstImport "GLSL.std.450" 
                                                      OpMemoryModel Logical GLSL450 
                                                      OpEntryPoint Vertex %4 "main" %11 %90 %100 %116 %120 %159 %162 %353 %361 %362 
                                                      OpName vs_TEXCOORD0 "vs_TEXCOORD0" 
                                                      OpName vs_TEXCOORD1 "vs_TEXCOORD1" 
                                                      OpName vs_TEXCOORD2 "vs_TEXCOORD2" 
                                                      OpName vs_TEXCOORD3 "vs_TEXCOORD3" 
                                                      OpName vs_TEXCOORD5 "vs_TEXCOORD5" 
                                                      OpName vs_TEXCOORD6 "vs_TEXCOORD6" 
                                                      OpDecorate %11 Location 11 
                                                      OpDecorate %16 ArrayStride 16 
                                                      OpDecorate %18 ArrayStride 18 
                                                      OpDecorate %19 ArrayStride 19 
                                                      OpDecorate %20 ArrayStride 20 
                                                      OpMemberDecorate %21 0 Offset 21 
                                                      OpMemberDecorate %21 1 Offset 21 
                                                      OpMemberDecorate %21 2 Offset 21 
                                                      OpMemberDecorate %21 3 RelaxedPrecision 
                                                      OpMemberDecorate %21 3 Offset 21 
                                                      OpMemberDecorate %21 4 RelaxedPrecision 
                                                      OpMemberDecorate %21 4 Offset 21 
                                                      OpMemberDecorate %21 5 RelaxedPrecision 
                                                      OpMemberDecorate %21 5 Offset 21 
                                                      OpMemberDecorate %21 6 RelaxedPrecision 
                                                      OpMemberDecorate %21 6 Offset 21 
                                                      OpMemberDecorate %21 7 RelaxedPrecision 
                                                      OpMemberDecorate %21 7 Offset 21 
                                                      OpMemberDecorate %21 8 RelaxedPrecision 
                                                      OpMemberDecorate %21 8 Offset 21 
                                                      OpMemberDecorate %21 9 Offset 21 
                                                      OpMemberDecorate %21 10 Offset 21 
                                                      OpMemberDecorate %21 11 Offset 21 
                                                      OpMemberDecorate %21 12 Offset 21 
                                                      OpDecorate %21 Block 
                                                      OpDecorate %23 DescriptorSet 23 
                                                      OpDecorate %23 Binding 23 
                                                      OpMemberDecorate %88 0 BuiltIn 88 
                                                      OpMemberDecorate %88 1 BuiltIn 88 
                                                      OpMemberDecorate %88 2 BuiltIn 88 
                                                      OpDecorate %88 Block 
                                                      OpDecorate %100 Location 100 
                                                      OpDecorate vs_TEXCOORD0 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD0 Location 116 
                                                      OpDecorate %120 Location 120 
                                                      OpDecorate vs_TEXCOORD1 Location 159 
                                                      OpDecorate vs_TEXCOORD2 Location 162 
                                                      OpDecorate %222 RelaxedPrecision 
                                                      OpDecorate %243 RelaxedPrecision 
                                                      OpDecorate %244 RelaxedPrecision 
                                                      OpDecorate %249 RelaxedPrecision 
                                                      OpDecorate %250 RelaxedPrecision 
                                                      OpDecorate %260 RelaxedPrecision 
                                                      OpDecorate %261 RelaxedPrecision 
                                                      OpDecorate %271 RelaxedPrecision 
                                                      OpDecorate %272 RelaxedPrecision 
                                                      OpDecorate %302 RelaxedPrecision 
                                                      OpDecorate %315 RelaxedPrecision 
                                                      OpDecorate %316 RelaxedPrecision 
                                                      OpDecorate %319 RelaxedPrecision 
                                                      OpDecorate %325 RelaxedPrecision 
                                                      OpDecorate %328 RelaxedPrecision 
                                                      OpDecorate %329 RelaxedPrecision 
                                                      OpDecorate %330 RelaxedPrecision 
                                                      OpDecorate %334 RelaxedPrecision 
                                                      OpDecorate %335 RelaxedPrecision 
                                                      OpDecorate %336 RelaxedPrecision 
                                                      OpDecorate %340 RelaxedPrecision 
                                                      OpDecorate %341 RelaxedPrecision 
                                                      OpDecorate %342 RelaxedPrecision 
                                                      OpDecorate %346 RelaxedPrecision 
                                                      OpDecorate %347 RelaxedPrecision 
                                                      OpDecorate %348 RelaxedPrecision 
                                                      OpDecorate %349 RelaxedPrecision 
                                                      OpDecorate %350 RelaxedPrecision 
                                                      OpDecorate %351 RelaxedPrecision 
                                                      OpDecorate %352 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD3 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD3 Location 353 
                                                      OpDecorate %359 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD5 Location 361 
                                                      OpDecorate vs_TEXCOORD6 Location 362 
                                               %2 = OpTypeVoid 
                                               %3 = OpTypeFunction %2 
                                               %6 = OpTypeFloat 32 
                                               %7 = OpTypeVector %6 4 
                                               %8 = OpTypePointer Private %7 
                                Private f32_4* %9 = OpVariable Private 
                                              %10 = OpTypePointer Input %7 
                                 Input f32_4* %11 = OpVariable Input 
                                              %14 = OpTypeInt 32 0 
                                          u32 %15 = OpConstant 8 
                                              %16 = OpTypeArray %7 %15 
                                          u32 %17 = OpConstant 4 
                                              %18 = OpTypeArray %7 %17 
                                              %19 = OpTypeArray %7 %17 
                                              %20 = OpTypeArray %7 %17 
                                              %21 = OpTypeStruct %7 %7 %7 %7 %16 %7 %7 %7 %7 %18 %19 %20 %7 
                                              %22 = OpTypePointer Uniform %21 
Uniform struct {f32_4; f32_4; f32_4; f32_4; f32_4[8]; f32_4; f32_4; f32_4; f32_4; f32_4[4]; f32_4[4]; f32_4[4]; f32_4;}* %23 = OpVariable Uniform 
                                              %24 = OpTypeInt 32 1 
                                          i32 %25 = OpConstant 9 
                                          i32 %26 = OpConstant 1 
                                              %27 = OpTypePointer Uniform %7 
                                          i32 %31 = OpConstant 0 
                                          i32 %39 = OpConstant 2 
                               Private f32_4* %47 = OpVariable Private 
                                          i32 %49 = OpConstant 3 
                                              %53 = OpTypeVector %6 3 
                               Private f32_4* %65 = OpVariable Private 
                                          i32 %68 = OpConstant 11 
                                          u32 %86 = OpConstant 1 
                                              %87 = OpTypeArray %6 %86 
                                              %88 = OpTypeStruct %7 %6 %87 
                                              %89 = OpTypePointer Output %88 
         Output struct {f32_4; f32; f32[1];}* %90 = OpVariable Output 
                                              %98 = OpTypePointer Output %7 
                                Input f32_4* %100 = OpVariable Input 
                                             %101 = OpTypeVector %6 2 
                                         i32 %104 = OpConstant 12 
                                             %115 = OpTypePointer Output %101 
                       Output f32_2* vs_TEXCOORD0 = OpVariable Output 
                                             %119 = OpTypePointer Input %53 
                                Input f32_3* %120 = OpVariable Input 
                                         i32 %122 = OpConstant 10 
                                         u32 %127 = OpConstant 0 
                                             %128 = OpTypePointer Private %6 
                                         u32 %141 = OpConstant 2 
                                Private f32* %143 = OpVariable Private 
                                             %158 = OpTypePointer Output %53 
                       Output f32_3* vs_TEXCOORD1 = OpVariable Output 
                       Output f32_3* vs_TEXCOORD2 = OpVariable Output 
                              Private f32_4* %171 = OpVariable Private 
                              Private f32_4* %184 = OpVariable Private 
                                         f32 %215 = OpConstant 3.674022E-40 
                                       f32_4 %216 = OpConstantComposite %215 %215 %215 %215 
                                         f32 %224 = OpConstant 3.674022E-40 
                                       f32_4 %225 = OpConstantComposite %224 %224 %224 %224 
                                         f32 %233 = OpConstant 3.674022E-40 
                                       f32_4 %234 = OpConstantComposite %233 %233 %233 %233 
                                         i32 %241 = OpConstant 4 
                                         f32 %283 = OpConstant 3.674022E-40 
                                       f32_3 %284 = OpConstantComposite %283 %283 %283 
                                         f32 %286 = OpConstant 3.674022E-40 
                                       f32_3 %287 = OpConstantComposite %286 %286 %286 
                                         f32 %296 = OpConstant 3.674022E-40 
                                       f32_3 %297 = OpConstantComposite %296 %296 %296 
                                             %301 = OpTypePointer Private %53 
                              Private f32_3* %302 = OpVariable Private 
                              Private f32_4* %319 = OpVariable Private 
                              Private f32_3* %325 = OpVariable Private 
                                         i32 %326 = OpConstant 5 
                                         i32 %332 = OpConstant 6 
                                         i32 %338 = OpConstant 7 
                                         i32 %344 = OpConstant 8 
                       Output f32_3* vs_TEXCOORD3 = OpVariable Output 
                       Output f32_4* vs_TEXCOORD5 = OpVariable Output 
                       Output f32_4* vs_TEXCOORD6 = OpVariable Output 
                                             %363 = OpTypePointer Output %6 
                                          void %4 = OpFunction None %3 
                                               %5 = OpLabel 
                                        f32_4 %12 = OpLoad %11 
                                        f32_4 %13 = OpVectorShuffle %12 %12 1 1 1 1 
                               Uniform f32_4* %28 = OpAccessChain %23 %25 %26 
                                        f32_4 %29 = OpLoad %28 
                                        f32_4 %30 = OpFMul %13 %29 
                                                      OpStore %9 %30 
                               Uniform f32_4* %32 = OpAccessChain %23 %25 %31 
                                        f32_4 %33 = OpLoad %32 
                                        f32_4 %34 = OpLoad %11 
                                        f32_4 %35 = OpVectorShuffle %34 %34 0 0 0 0 
                                        f32_4 %36 = OpFMul %33 %35 
                                        f32_4 %37 = OpLoad %9 
                                        f32_4 %38 = OpFAdd %36 %37 
                                                      OpStore %9 %38 
                               Uniform f32_4* %40 = OpAccessChain %23 %25 %39 
                                        f32_4 %41 = OpLoad %40 
                                        f32_4 %42 = OpLoad %11 
                                        f32_4 %43 = OpVectorShuffle %42 %42 2 2 2 2 
                                        f32_4 %44 = OpFMul %41 %43 
                                        f32_4 %45 = OpLoad %9 
                                        f32_4 %46 = OpFAdd %44 %45 
                                                      OpStore %9 %46 
                                        f32_4 %48 = OpLoad %9 
                               Uniform f32_4* %50 = OpAccessChain %23 %25 %49 
                                        f32_4 %51 = OpLoad %50 
                                        f32_4 %52 = OpFAdd %48 %51 
                                                      OpStore %47 %52 
                               Uniform f32_4* %54 = OpAccessChain %23 %25 %49 
                                        f32_4 %55 = OpLoad %54 
                                        f32_3 %56 = OpVectorShuffle %55 %55 0 1 2 
                                        f32_4 %57 = OpLoad %11 
                                        f32_3 %58 = OpVectorShuffle %57 %57 3 3 3 
                                        f32_3 %59 = OpFMul %56 %58 
                                        f32_4 %60 = OpLoad %9 
                                        f32_3 %61 = OpVectorShuffle %60 %60 0 1 2 
                                        f32_3 %62 = OpFAdd %59 %61 
                                        f32_4 %63 = OpLoad %9 
                                        f32_4 %64 = OpVectorShuffle %63 %62 4 5 6 3 
                                                      OpStore %9 %64 
                                        f32_4 %66 = OpLoad %47 
                                        f32_4 %67 = OpVectorShuffle %66 %66 1 1 1 1 
                               Uniform f32_4* %69 = OpAccessChain %23 %68 %26 
                                        f32_4 %70 = OpLoad %69 
                                        f32_4 %71 = OpFMul %67 %70 
                                                      OpStore %65 %71 
                               Uniform f32_4* %72 = OpAccessChain %23 %68 %31 
                                        f32_4 %73 = OpLoad %72 
                                        f32_4 %74 = OpLoad %47 
                                        f32_4 %75 = OpVectorShuffle %74 %74 0 0 0 0 
                                        f32_4 %76 = OpFMul %73 %75 
                                        f32_4 %77 = OpLoad %65 
                                        f32_4 %78 = OpFAdd %76 %77 
                                                      OpStore %65 %78 
                               Uniform f32_4* %79 = OpAccessChain %23 %68 %39 
                                        f32_4 %80 = OpLoad %79 
                                        f32_4 %81 = OpLoad %47 
                                        f32_4 %82 = OpVectorShuffle %81 %81 2 2 2 2 
                                        f32_4 %83 = OpFMul %80 %82 
                                        f32_4 %84 = OpLoad %65 
                                        f32_4 %85 = OpFAdd %83 %84 
                                                      OpStore %65 %85 
                               Uniform f32_4* %91 = OpAccessChain %23 %68 %49 
                                        f32_4 %92 = OpLoad %91 
                                        f32_4 %93 = OpLoad %47 
                                        f32_4 %94 = OpVectorShuffle %93 %93 3 3 3 3 
                                        f32_4 %95 = OpFMul %92 %94 
                                        f32_4 %96 = OpLoad %65 
                                        f32_4 %97 = OpFAdd %95 %96 
                                Output f32_4* %99 = OpAccessChain %90 %31 
                                                      OpStore %99 %97 
                                       f32_4 %102 = OpLoad %100 
                                       f32_2 %103 = OpVectorShuffle %102 %102 0 1 
                              Uniform f32_4* %105 = OpAccessChain %23 %104 
                                       f32_4 %106 = OpLoad %105 
                                       f32_2 %107 = OpVectorShuffle %106 %106 0 1 
                                       f32_2 %108 = OpFMul %103 %107 
                              Uniform f32_4* %109 = OpAccessChain %23 %104 
                                       f32_4 %110 = OpLoad %109 
                                       f32_2 %111 = OpVectorShuffle %110 %110 2 3 
                                       f32_2 %112 = OpFAdd %108 %111 
                                       f32_4 %113 = OpLoad %47 
                                       f32_4 %114 = OpVectorShuffle %113 %112 4 5 2 3 
                                                      OpStore %47 %114 
                                       f32_4 %117 = OpLoad %47 
                                       f32_2 %118 = OpVectorShuffle %117 %117 0 1 
                                                      OpStore vs_TEXCOORD0 %118 
                                       f32_3 %121 = OpLoad %120 
                              Uniform f32_4* %123 = OpAccessChain %23 %122 %31 
                                       f32_4 %124 = OpLoad %123 
                                       f32_3 %125 = OpVectorShuffle %124 %124 0 1 2 
                                         f32 %126 = OpDot %121 %125 
                                Private f32* %129 = OpAccessChain %47 %127 
                                                      OpStore %129 %126 
                                       f32_3 %130 = OpLoad %120 
                              Uniform f32_4* %131 = OpAccessChain %23 %122 %26 
                                       f32_4 %132 = OpLoad %131 
                                       f32_3 %133 = OpVectorShuffle %132 %132 0 1 2 
                                         f32 %134 = OpDot %130 %133 
                                Private f32* %135 = OpAccessChain %47 %86 
                                                      OpStore %135 %134 
                                       f32_3 %136 = OpLoad %120 
                              Uniform f32_4* %137 = OpAccessChain %23 %122 %39 
                                       f32_4 %138 = OpLoad %137 
                                       f32_3 %139 = OpVectorShuffle %138 %138 0 1 2 
                                         f32 %140 = OpDot %136 %139 
                                Private f32* %142 = OpAccessChain %47 %141 
                                                      OpStore %142 %140 
                                       f32_4 %144 = OpLoad %47 
                                       f32_3 %145 = OpVectorShuffle %144 %144 0 1 2 
                                       f32_4 %146 = OpLoad %47 
                                       f32_3 %147 = OpVectorShuffle %146 %146 0 1 2 
                                         f32 %148 = OpDot %145 %147 
                                                      OpStore %143 %148 
                                         f32 %149 = OpLoad %143 
                                         f32 %150 = OpExtInst %1 32 %149 
                                                      OpStore %143 %150 
                                         f32 %151 = OpLoad %143 
                                       f32_3 %152 = OpCompositeConstruct %151 %151 %151 
                                       f32_4 %153 = OpLoad %47 
                                       f32_3 %154 = OpVectorShuffle %153 %153 0 1 2 
                                       f32_3 %155 = OpFMul %152 %154 
                                       f32_4 %156 = OpLoad %47 
                                       f32_4 %157 = OpVectorShuffle %156 %155 4 5 6 3 
                                                      OpStore %47 %157 
                                       f32_4 %160 = OpLoad %47 
                                       f32_3 %161 = OpVectorShuffle %160 %160 0 1 2 
                                                      OpStore vs_TEXCOORD1 %161 
                                       f32_4 %163 = OpLoad %9 
                                       f32_3 %164 = OpVectorShuffle %163 %163 0 1 2 
                                                      OpStore vs_TEXCOORD2 %164 
                                       f32_4 %165 = OpLoad %9 
                                       f32_4 %166 = OpVectorShuffle %165 %165 0 0 0 0 
                                       f32_4 %167 = OpFNegate %166 
                              Uniform f32_4* %168 = OpAccessChain %23 %31 
                                       f32_4 %169 = OpLoad %168 
                                       f32_4 %170 = OpFAdd %167 %169 
                                                      OpStore %65 %170 
                                       f32_4 %172 = OpLoad %9 
                                       f32_4 %173 = OpVectorShuffle %172 %172 1 1 1 1 
                                       f32_4 %174 = OpFNegate %173 
                              Uniform f32_4* %175 = OpAccessChain %23 %26 
                                       f32_4 %176 = OpLoad %175 
                                       f32_4 %177 = OpFAdd %174 %176 
                                                      OpStore %171 %177 
                                       f32_4 %178 = OpLoad %9 
                                       f32_4 %179 = OpVectorShuffle %178 %178 2 2 2 2 
                                       f32_4 %180 = OpFNegate %179 
                              Uniform f32_4* %181 = OpAccessChain %23 %39 
                                       f32_4 %182 = OpLoad %181 
                                       f32_4 %183 = OpFAdd %180 %182 
                                                      OpStore %9 %183 
                                       f32_4 %185 = OpLoad %47 
                                       f32_4 %186 = OpVectorShuffle %185 %185 1 1 1 1 
                                       f32_4 %187 = OpLoad %171 
                                       f32_4 %188 = OpFMul %186 %187 
                                                      OpStore %184 %188 
                                       f32_4 %189 = OpLoad %171 
                                       f32_4 %190 = OpLoad %171 
                                       f32_4 %191 = OpFMul %189 %190 
                                                      OpStore %171 %191 
                                       f32_4 %192 = OpLoad %65 
                                       f32_4 %193 = OpLoad %65 
                                       f32_4 %194 = OpFMul %192 %193 
                                       f32_4 %195 = OpLoad %171 
                                       f32_4 %196 = OpFAdd %194 %195 
                                                      OpStore %171 %196 
                                       f32_4 %197 = OpLoad %65 
                                       f32_4 %198 = OpLoad %47 
                                       f32_4 %199 = OpVectorShuffle %198 %198 0 0 0 0 
                                       f32_4 %200 = OpFMul %197 %199 
                                       f32_4 %201 = OpLoad %184 
                                       f32_4 %202 = OpFAdd %200 %201 
                                                      OpStore %65 %202 
                                       f32_4 %203 = OpLoad %9 
                                       f32_4 %204 = OpLoad %47 
                                       f32_4 %205 = OpVectorShuffle %204 %204 2 2 2 2 
                                       f32_4 %206 = OpFMul %203 %205 
                                       f32_4 %207 = OpLoad %65 
                                       f32_4 %208 = OpFAdd %206 %207 
                                                      OpStore %65 %208 
                                       f32_4 %209 = OpLoad %9 
                                       f32_4 %210 = OpLoad %9 
                                       f32_4 %211 = OpFMul %209 %210 
                                       f32_4 %212 = OpLoad %171 
                                       f32_4 %213 = OpFAdd %211 %212 
                                                      OpStore %9 %213 
                                       f32_4 %214 = OpLoad %9 
                                       f32_4 %217 = OpExtInst %1 40 %214 %216 
                                                      OpStore %9 %217 
                                       f32_4 %218 = OpLoad %9 
                                       f32_4 %219 = OpExtInst %1 32 %218 
                                                      OpStore %171 %219 
                                       f32_4 %220 = OpLoad %9 
                              Uniform f32_4* %221 = OpAccessChain %23 %49 
                                       f32_4 %222 = OpLoad %221 
                                       f32_4 %223 = OpFMul %220 %222 
                                       f32_4 %226 = OpFAdd %223 %225 
                                                      OpStore %9 %226 
                                       f32_4 %227 = OpLoad %9 
                                       f32_4 %228 = OpFDiv %225 %227 
                                                      OpStore %9 %228 
                                       f32_4 %229 = OpLoad %65 
                                       f32_4 %230 = OpLoad %171 
                                       f32_4 %231 = OpFMul %229 %230 
                                                      OpStore %65 %231 
                                       f32_4 %232 = OpLoad %65 
                                       f32_4 %235 = OpExtInst %1 40 %232 %234 
                                                      OpStore %65 %235 
                                       f32_4 %236 = OpLoad %9 
                                       f32_4 %237 = OpLoad %65 
                                       f32_4 %238 = OpFMul %236 %237 
                                                      OpStore %9 %238 
                                       f32_4 %239 = OpLoad %9 
                                       f32_3 %240 = OpVectorShuffle %239 %239 1 1 1 
                              Uniform f32_4* %242 = OpAccessChain %23 %241 %26 
                                       f32_4 %243 = OpLoad %242 
                                       f32_3 %244 = OpVectorShuffle %243 %243 0 1 2 
                                       f32_3 %245 = OpFMul %240 %244 
                                       f32_4 %246 = OpLoad %65 
                                       f32_4 %247 = OpVectorShuffle %246 %245 4 5 6 3 
                                                      OpStore %65 %247 
                              Uniform f32_4* %248 = OpAccessChain %23 %241 %31 
                                       f32_4 %249 = OpLoad %248 
                                       f32_3 %250 = OpVectorShuffle %249 %249 0 1 2 
                                       f32_4 %251 = OpLoad %9 
                                       f32_3 %252 = OpVectorShuffle %251 %251 0 0 0 
                                       f32_3 %253 = OpFMul %250 %252 
                                       f32_4 %254 = OpLoad %65 
                                       f32_3 %255 = OpVectorShuffle %254 %254 0 1 2 
                                       f32_3 %256 = OpFAdd %253 %255 
                                       f32_4 %257 = OpLoad %65 
                                       f32_4 %258 = OpVectorShuffle %257 %256 4 5 6 3 
                                                      OpStore %65 %258 
                              Uniform f32_4* %259 = OpAccessChain %23 %241 %39 
                                       f32_4 %260 = OpLoad %259 
                                       f32_3 %261 = OpVectorShuffle %260 %260 0 1 2 
                                       f32_4 %262 = OpLoad %9 
                                       f32_3 %263 = OpVectorShuffle %262 %262 2 2 2 
                                       f32_3 %264 = OpFMul %261 %263 
                                       f32_4 %265 = OpLoad %65 
                                       f32_3 %266 = OpVectorShuffle %265 %265 0 1 2 
                                       f32_3 %267 = OpFAdd %264 %266 
                                       f32_4 %268 = OpLoad %9 
                                       f32_4 %269 = OpVectorShuffle %268 %267 4 5 6 3 
                                                      OpStore %9 %269 
                              Uniform f32_4* %270 = OpAccessChain %23 %241 %49 
                                       f32_4 %271 = OpLoad %270 
                                       f32_3 %272 = OpVectorShuffle %271 %271 0 1 2 
                                       f32_4 %273 = OpLoad %9 
                                       f32_3 %274 = OpVectorShuffle %273 %273 3 3 3 
                                       f32_3 %275 = OpFMul %272 %274 
                                       f32_4 %276 = OpLoad %9 
                                       f32_3 %277 = OpVectorShuffle %276 %276 0 1 2 
                                       f32_3 %278 = OpFAdd %275 %277 
                                       f32_4 %279 = OpLoad %9 
                                       f32_4 %280 = OpVectorShuffle %279 %278 4 5 6 3 
                                                      OpStore %9 %280 
                                       f32_4 %281 = OpLoad %9 
                                       f32_3 %282 = OpVectorShuffle %281 %281 0 1 2 
                                       f32_3 %285 = OpFMul %282 %284 
                                       f32_3 %288 = OpFAdd %285 %287 
                                       f32_4 %289 = OpLoad %65 
                                       f32_4 %290 = OpVectorShuffle %289 %288 4 5 6 3 
                                                      OpStore %65 %290 
                                       f32_4 %291 = OpLoad %9 
                                       f32_3 %292 = OpVectorShuffle %291 %291 0 1 2 
                                       f32_4 %293 = OpLoad %65 
                                       f32_3 %294 = OpVectorShuffle %293 %293 0 1 2 
                                       f32_3 %295 = OpFMul %292 %294 
                                       f32_3 %298 = OpFAdd %295 %297 
                                       f32_4 %299 = OpLoad %65 
                                       f32_4 %300 = OpVectorShuffle %299 %298 4 5 6 3 
                                                      OpStore %65 %300 
                                Private f32* %303 = OpAccessChain %47 %86 
                                         f32 %304 = OpLoad %303 
                                Private f32* %305 = OpAccessChain %47 %86 
                                         f32 %306 = OpLoad %305 
                                         f32 %307 = OpFMul %304 %306 
                                Private f32* %308 = OpAccessChain %302 %127 
                                                      OpStore %308 %307 
                                Private f32* %309 = OpAccessChain %47 %127 
                                         f32 %310 = OpLoad %309 
                                Private f32* %311 = OpAccessChain %47 %127 
                                         f32 %312 = OpLoad %311 
                                         f32 %313 = OpFMul %310 %312 
                                Private f32* %314 = OpAccessChain %302 %127 
                                         f32 %315 = OpLoad %314 
                                         f32 %316 = OpFNegate %315 
                                         f32 %317 = OpFAdd %313 %316 
                                Private f32* %318 = OpAccessChain %302 %127 
                                                      OpStore %318 %317 
                                       f32_4 %320 = OpLoad %47 
                                       f32_4 %321 = OpVectorShuffle %320 %320 1 2 2 0 
                                       f32_4 %322 = OpLoad %47 
                                       f32_4 %323 = OpVectorShuffle %322 %322 0 1 2 2 
                                       f32_4 %324 = OpFMul %321 %323 
                                                      OpStore %319 %324 
                              Uniform f32_4* %327 = OpAccessChain %23 %326 
                                       f32_4 %328 = OpLoad %327 
                                       f32_4 %329 = OpLoad %319 
                                         f32 %330 = OpDot %328 %329 
                                Private f32* %331 = OpAccessChain %325 %127 
                                                      OpStore %331 %330 
                              Uniform f32_4* %333 = OpAccessChain %23 %332 
                                       f32_4 %334 = OpLoad %333 
                                       f32_4 %335 = OpLoad %319 
                                         f32 %336 = OpDot %334 %335 
                                Private f32* %337 = OpAccessChain %325 %86 
                                                      OpStore %337 %336 
                              Uniform f32_4* %339 = OpAccessChain %23 %338 
                                       f32_4 %340 = OpLoad %339 
                                       f32_4 %341 = OpLoad %319 
                                         f32 %342 = OpDot %340 %341 
                                Private f32* %343 = OpAccessChain %325 %141 
                                                      OpStore %343 %342 
                              Uniform f32_4* %345 = OpAccessChain %23 %344 
                                       f32_4 %346 = OpLoad %345 
                                       f32_3 %347 = OpVectorShuffle %346 %346 0 1 2 
                                       f32_3 %348 = OpLoad %302 
                                       f32_3 %349 = OpVectorShuffle %348 %348 0 0 0 
                                       f32_3 %350 = OpFMul %347 %349 
                                       f32_3 %351 = OpLoad %325 
                                       f32_3 %352 = OpFAdd %350 %351 
                                                      OpStore %302 %352 
                                       f32_4 %354 = OpLoad %9 
                                       f32_3 %355 = OpVectorShuffle %354 %354 0 1 2 
                                       f32_4 %356 = OpLoad %65 
                                       f32_3 %357 = OpVectorShuffle %356 %356 0 1 2 
                                       f32_3 %358 = OpFMul %355 %357 
                                       f32_3 %359 = OpLoad %302 
                                       f32_3 %360 = OpFAdd %358 %359 
                                                      OpStore vs_TEXCOORD3 %360 
                                                      OpStore vs_TEXCOORD5 %234 
                                                      OpStore vs_TEXCOORD6 %234 
                                 Output f32* %364 = OpAccessChain %90 %31 %86 
                                         f32 %365 = OpLoad %364 
                                         f32 %366 = OpFNegate %365 
                                 Output f32* %367 = OpAccessChain %90 %31 %86 
                                                      OpStore %367 %366 
                                                      OpReturn
                                                      OpFunctionEnd
; SPIR-V
; Version: 1.0
; Generator: Khronos Glslang Reference Front End; 6
; Bound: 247
; Schema: 0
                                                      OpCapability Shader 
                                               %1 = OpExtInstImport "GLSL.std.450" 
                                                      OpMemoryModel Logical GLSL450 
                                                      OpEntryPoint Fragment %4 "main" %11 %173 %210 %221 
                                                      OpExecutionMode %4 OriginUpperLeft 
                                                      OpName vs_TEXCOORD1 "vs_TEXCOORD1" 
                                                      OpName vs_TEXCOORD3 "vs_TEXCOORD3" 
                                                      OpName vs_TEXCOORD0 "vs_TEXCOORD0" 
                                                      OpDecorate %9 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD1 Location 11 
                                                      OpDecorate %20 RelaxedPrecision 
                                                      OpDecorate %21 RelaxedPrecision 
                                                      OpDecorate %23 RelaxedPrecision 
                                                      OpDecorate %24 RelaxedPrecision 
                                                      OpDecorate %27 RelaxedPrecision 
                                                      OpMemberDecorate %29 0 RelaxedPrecision 
                                                      OpMemberDecorate %29 0 Offset 29 
                                                      OpMemberDecorate %29 1 RelaxedPrecision 
                                                      OpMemberDecorate %29 1 Offset 29 
                                                      OpMemberDecorate %29 2 RelaxedPrecision 
                                                      OpMemberDecorate %29 2 Offset 29 
                                                      OpMemberDecorate %29 3 RelaxedPrecision 
                                                      OpMemberDecorate %29 3 Offset 29 
                                                      OpMemberDecorate %29 4 RelaxedPrecision 
                                                      OpMemberDecorate %29 4 Offset 29 
                                                      OpMemberDecorate %29 5 RelaxedPrecision 
                                                      OpMemberDecorate %29 5 Offset 29 
                                                      OpMemberDecorate %29 6 RelaxedPrecision 
                                                      OpMemberDecorate %29 6 Offset 29 
                                                      OpMemberDecorate %29 7 RelaxedPrecision 
                                                      OpMemberDecorate %29 7 Offset 29 
                                                      OpMemberDecorate %29 8 RelaxedPrecision 
                                                      OpMemberDecorate %29 8 Offset 29 
                                                      OpMemberDecorate %29 9 RelaxedPrecision 
                                                      OpMemberDecorate %29 9 Offset 29 
                                                      OpDecorate %29 Block 
                                                      OpDecorate %31 DescriptorSet 31 
                                                      OpDecorate %31 Binding 31 
                                                      OpDecorate %36 RelaxedPrecision 
                                                      OpDecorate %37 RelaxedPrecision 
                                                      OpDecorate %38 RelaxedPrecision 
                                                      OpDecorate %41 RelaxedPrecision 
                                                      OpDecorate %43 RelaxedPrecision 
                                                      OpDecorate %45 RelaxedPrecision 
                                                      OpDecorate %49 RelaxedPrecision 
                                                      OpDecorate %50 RelaxedPrecision 
                                                      OpDecorate %52 RelaxedPrecision 
                                                      OpDecorate %55 RelaxedPrecision 
                                                      OpDecorate %56 RelaxedPrecision 
                                                      OpDecorate %59 RelaxedPrecision 
                                                      OpDecorate %60 RelaxedPrecision 
                                                      OpDecorate %62 RelaxedPrecision 
                                                      OpDecorate %63 RelaxedPrecision 
                                                      OpDecorate %65 RelaxedPrecision 
                                                      OpDecorate %67 RelaxedPrecision 
                                                      OpDecorate %68 RelaxedPrecision 
                                                      OpDecorate %70 RelaxedPrecision 
                                                      OpDecorate %71 RelaxedPrecision 
                                                      OpDecorate %73 RelaxedPrecision 
                                                      OpDecorate %74 RelaxedPrecision 
                                                      OpDecorate %75 RelaxedPrecision 
                                                      OpDecorate %76 RelaxedPrecision 
                                                      OpDecorate %80 RelaxedPrecision 
                                                      OpDecorate %81 RelaxedPrecision 
                                                      OpDecorate %84 RelaxedPrecision 
                                                      OpDecorate %86 RelaxedPrecision 
                                                      OpDecorate %87 RelaxedPrecision 
                                                      OpDecorate %90 RelaxedPrecision 
                                                      OpDecorate %91 RelaxedPrecision 
                                                      OpDecorate %94 RelaxedPrecision 
                                                      OpDecorate %96 RelaxedPrecision 
                                                      OpDecorate %98 RelaxedPrecision 
                                                      OpDecorate %101 RelaxedPrecision 
                                                      OpDecorate %103 RelaxedPrecision 
                                                      OpDecorate %104 RelaxedPrecision 
                                                      OpDecorate %107 RelaxedPrecision 
                                                      OpDecorate %109 RelaxedPrecision 
                                                      OpDecorate %110 RelaxedPrecision 
                                                      OpDecorate %114 RelaxedPrecision 
                                                      OpDecorate %115 RelaxedPrecision 
                                                      OpDecorate %116 RelaxedPrecision 
                                                      OpDecorate %119 RelaxedPrecision 
                                                      OpDecorate %120 RelaxedPrecision 
                                                      OpDecorate %121 RelaxedPrecision 
                                                      OpDecorate %123 RelaxedPrecision 
                                                      OpDecorate %124 RelaxedPrecision 
                                                      OpDecorate %125 RelaxedPrecision 
                                                      OpDecorate %126 RelaxedPrecision 
                                                      OpDecorate %128 RelaxedPrecision 
                                                      OpDecorate %129 RelaxedPrecision 
                                                      OpDecorate %130 RelaxedPrecision 
                                                      OpDecorate %131 RelaxedPrecision 
                                                      OpDecorate %132 RelaxedPrecision 
                                                      OpDecorate %133 RelaxedPrecision 
                                                      OpDecorate %135 RelaxedPrecision 
                                                      OpDecorate %136 RelaxedPrecision 
                                                      OpDecorate %137 RelaxedPrecision 
                                                      OpDecorate %138 RelaxedPrecision 
                                                      OpDecorate %139 RelaxedPrecision 
                                                      OpDecorate %140 RelaxedPrecision 
                                                      OpDecorate %141 RelaxedPrecision 
                                                      OpDecorate %142 RelaxedPrecision 
                                                      OpDecorate %143 RelaxedPrecision 
                                                      OpDecorate %151 RelaxedPrecision 
                                                      OpDecorate %154 RelaxedPrecision 
                                                      OpDecorate %160 RelaxedPrecision 
                                                      OpDecorate %167 RelaxedPrecision 
                                                      OpDecorate %172 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD3 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD3 Location 173 
                                                      OpDecorate %174 RelaxedPrecision 
                                                      OpDecorate %175 RelaxedPrecision 
                                                      OpDecorate %176 RelaxedPrecision 
                                                      OpDecorate %178 RelaxedPrecision 
                                                      OpDecorate %180 RelaxedPrecision 
                                                      OpDecorate %181 RelaxedPrecision 
                                                      OpDecorate %197 RelaxedPrecision 
                                                      OpDecorate %200 RelaxedPrecision 
                                                      OpDecorate %200 DescriptorSet 200 
                                                      OpDecorate %200 Binding 200 
                                                      OpDecorate %201 RelaxedPrecision 
                                                      OpDecorate %204 RelaxedPrecision 
                                                      OpDecorate %204 DescriptorSet 204 
                                                      OpDecorate %204 Binding 204 
                                                      OpDecorate %205 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD0 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD0 Location 210 
                                                      OpDecorate %211 RelaxedPrecision 
                                                      OpDecorate %212 RelaxedPrecision 
                                                      OpDecorate %213 RelaxedPrecision 
                                                      OpDecorate %214 RelaxedPrecision 
                                                      OpDecorate %217 RelaxedPrecision 
                                                      OpDecorate %218 RelaxedPrecision 
                                                      OpDecorate %219 RelaxedPrecision 
                                                      OpDecorate %221 RelaxedPrecision 
                                                      OpDecorate %221 Location 221 
                                                      OpDecorate %223 RelaxedPrecision 
                                                      OpDecorate %225 RelaxedPrecision 
                                                      OpDecorate %226 RelaxedPrecision 
                                                      OpDecorate %229 RelaxedPrecision 
                                                      OpDecorate %231 RelaxedPrecision 
                                                      OpDecorate %233 RelaxedPrecision 
                                                      OpDecorate %236 RelaxedPrecision 
                                                      OpDecorate %237 RelaxedPrecision 
                                                      OpDecorate %238 RelaxedPrecision 
                                                      OpDecorate %239 RelaxedPrecision 
                                                      OpDecorate %240 RelaxedPrecision 
                                                      OpDecorate %241 RelaxedPrecision 
                                                      OpDecorate %242 RelaxedPrecision 
                                                      OpDecorate %243 RelaxedPrecision 
                                               %2 = OpTypeVoid 
                                               %3 = OpTypeFunction %2 
                                               %6 = OpTypeFloat 32 
                                               %7 = OpTypeVector %6 3 
                                               %8 = OpTypePointer Private %7 
                                Private f32_3* %9 = OpVariable Private 
                                              %10 = OpTypePointer Input %7 
                        Input f32_3* vs_TEXCOORD1 = OpVariable Input 
                                              %15 = OpTypeInt 32 0 
                                          u32 %16 = OpConstant 0 
                                              %17 = OpTypePointer Private %6 
                                              %28 = OpTypeVector %6 4 
                                              %29 = OpTypeStruct %28 %28 %28 %28 %28 %28 %28 %28 %6 %6 
                                              %30 = OpTypePointer Uniform %29 
Uniform struct {f32_4; f32_4; f32_4; f32_4; f32_4; f32_4; f32_4; f32_4; f32; f32;}* %31 = OpVariable Uniform 
                                              %32 = OpTypeInt 32 1 
                                          i32 %33 = OpConstant 0 
                                              %34 = OpTypePointer Uniform %28 
                                          f32 %42 = OpConstant 3.674022E-40 
                               Private f32_3* %45 = OpVariable Private 
                                          i32 %46 = OpConstant 9 
                                              %47 = OpTypePointer Uniform %6 
                                          f32 %51 = OpConstant 3.674022E-40 
                                          i32 %53 = OpConstant 8 
                                 Private f32* %65 = OpVariable Private 
                                          f32 %78 = OpConstant 3.674022E-40 
                                          f32 %95 = OpConstant 3.674022E-40 
                                          f32 %97 = OpConstant 3.674022E-40 
                                         i32 %112 = OpConstant 6 
                                         i32 %117 = OpConstant 7 
                              Private f32_3* %131 = OpVariable Private 
                                             %144 = OpTypePointer Private %28 
                              Private f32_4* %145 = OpVariable Private 
                                         u32 %149 = OpConstant 3 
                              Private f32_3* %151 = OpVariable Private 
                                         i32 %152 = OpConstant 1 
                                         i32 %158 = OpConstant 2 
                                         u32 %163 = OpConstant 1 
                                         i32 %165 = OpConstant 3 
                                         u32 %170 = OpConstant 2 
                        Input f32_3* vs_TEXCOORD3 = OpVariable Input 
                                       f32_3 %177 = OpConstantComposite %42 %42 %42 
                              Private f32_3* %179 = OpVariable Private 
                                         f32 %183 = OpConstant 3.674022E-40 
                                       f32_3 %184 = OpConstantComposite %183 %183 %183 
                                         f32 %189 = OpConstant 3.674022E-40 
                                       f32_3 %190 = OpConstantComposite %189 %189 %189 
                                         f32 %192 = OpConstant 3.674022E-40 
                                       f32_3 %193 = OpConstantComposite %192 %192 %192 
                              Private f32_4* %197 = OpVariable Private 
                                             %198 = OpTypeImage %6 Dim2D 0 0 0 1 Unknown 
                                             %199 = OpTypePointer UniformConstant %198 
        UniformConstant read_only Texture2D* %200 = OpVariable UniformConstant 
                                             %202 = OpTypeSampler 
                                             %203 = OpTypePointer UniformConstant %202 
                    UniformConstant sampler* %204 = OpVariable UniformConstant 
                                             %206 = OpTypeSampledImage %198 
                                             %208 = OpTypeVector %6 2 
                                             %209 = OpTypePointer Input %208 
                        Input f32_2* vs_TEXCOORD0 = OpVariable Input 
                                         i32 %215 = OpConstant 5 
                                             %220 = OpTypePointer Output %28 
                               Output f32_4* %221 = OpVariable Output 
                                             %227 = OpTypePointer Output %6 
                              Private f32_3* %229 = OpVariable Private 
                                         i32 %234 = OpConstant 4 
                                          void %4 = OpFunction None %3 
                                               %5 = OpLabel 
                                        f32_3 %12 = OpLoad vs_TEXCOORD1 
                                        f32_3 %13 = OpLoad vs_TEXCOORD1 
                                          f32 %14 = OpDot %12 %13 
                                 Private f32* %18 = OpAccessChain %9 %16 
                                                      OpStore %18 %14 
                                 Private f32* %19 = OpAccessChain %9 %16 
                                          f32 %20 = OpLoad %19 
                                          f32 %21 = OpExtInst %1 32 %20 
                                 Private f32* %22 = OpAccessChain %9 %16 
                                                      OpStore %22 %21 
                                        f32_3 %23 = OpLoad %9 
                                        f32_3 %24 = OpVectorShuffle %23 %23 0 0 0 
                                        f32_3 %25 = OpLoad vs_TEXCOORD1 
                                        f32_3 %26 = OpFMul %24 %25 
                                                      OpStore %9 %26 
                                        f32_3 %27 = OpLoad %9 
                               Uniform f32_4* %35 = OpAccessChain %31 %33 
                                        f32_4 %36 = OpLoad %35 
                                        f32_3 %37 = OpVectorShuffle %36 %36 0 1 2 
                                          f32 %38 = OpDot %27 %37 
                                 Private f32* %39 = OpAccessChain %9 %16 
                                                      OpStore %39 %38 
                                 Private f32* %40 = OpAccessChain %9 %16 
                                          f32 %41 = OpLoad %40 
                                          f32 %43 = OpExtInst %1 40 %41 %42 
                                 Private f32* %44 = OpAccessChain %9 %16 
                                                      OpStore %44 %43 
                                 Uniform f32* %48 = OpAccessChain %31 %46 
                                          f32 %49 = OpLoad %48 
                                          f32 %50 = OpFNegate %49 
                                          f32 %52 = OpFMul %50 %51 
                                 Uniform f32* %54 = OpAccessChain %31 %53 
                                          f32 %55 = OpLoad %54 
                                          f32 %56 = OpFAdd %52 %55 
                                 Private f32* %57 = OpAccessChain %45 %16 
                                                      OpStore %57 %56 
                                 Private f32* %58 = OpAccessChain %45 %16 
                                          f32 %59 = OpLoad %58 
                                          f32 %60 = OpFNegate %59 
                                 Private f32* %61 = OpAccessChain %9 %16 
                                          f32 %62 = OpLoad %61 
                                          f32 %63 = OpFAdd %60 %62 
                                 Private f32* %64 = OpAccessChain %9 %16 
                                                      OpStore %64 %63 
                                 Uniform f32* %66 = OpAccessChain %31 %46 
                                          f32 %67 = OpLoad %66 
                                          f32 %68 = OpFMul %67 %51 
                                 Uniform f32* %69 = OpAccessChain %31 %53 
                                          f32 %70 = OpLoad %69 
                                          f32 %71 = OpFAdd %68 %70 
                                                      OpStore %65 %71 
                                 Private f32* %72 = OpAccessChain %45 %16 
                                          f32 %73 = OpLoad %72 
                                          f32 %74 = OpFNegate %73 
                                          f32 %75 = OpLoad %65 
                                          f32 %76 = OpFAdd %74 %75 
                                 Private f32* %77 = OpAccessChain %45 %16 
                                                      OpStore %77 %76 
                                 Private f32* %79 = OpAccessChain %45 %16 
                                          f32 %80 = OpLoad %79 
                                          f32 %81 = OpFDiv %78 %80 
                                 Private f32* %82 = OpAccessChain %45 %16 
                                                      OpStore %82 %81 
                                 Private f32* %83 = OpAccessChain %45 %16 
                                          f32 %84 = OpLoad %83 
                                 Private f32* %85 = OpAccessChain %9 %16 
                                          f32 %86 = OpLoad %85 
                                          f32 %87 = OpFMul %84 %86 
                                 Private f32* %88 = OpAccessChain %9 %16 
                                                      OpStore %88 %87 
                                 Private f32* %89 = OpAccessChain %9 %16 
                                          f32 %90 = OpLoad %89 
                                          f32 %91 = OpExtInst %1 43 %90 %42 %78 
                                 Private f32* %92 = OpAccessChain %9 %16 
                                                      OpStore %92 %91 
                                 Private f32* %93 = OpAccessChain %9 %16 
                                          f32 %94 = OpLoad %93 
                                          f32 %96 = OpFMul %94 %95 
                                          f32 %98 = OpFAdd %96 %97 
                                 Private f32* %99 = OpAccessChain %45 %16 
                                                      OpStore %99 %98 
                                Private f32* %100 = OpAccessChain %9 %16 
                                         f32 %101 = OpLoad %100 
                                Private f32* %102 = OpAccessChain %9 %16 
                                         f32 %103 = OpLoad %102 
                                         f32 %104 = OpFMul %101 %103 
                                Private f32* %105 = OpAccessChain %9 %16 
                                                      OpStore %105 %104 
                                Private f32* %106 = OpAccessChain %9 %16 
                                         f32 %107 = OpLoad %106 
                                Private f32* %108 = OpAccessChain %45 %16 
                                         f32 %109 = OpLoad %108 
                                         f32 %110 = OpFMul %107 %109 
                                Private f32* %111 = OpAccessChain %9 %16 
                                                      OpStore %111 %110 
                              Uniform f32_4* %113 = OpAccessChain %31 %112 
                                       f32_4 %114 = OpLoad %113 
                                       f32_3 %115 = OpVectorShuffle %114 %114 0 1 2 
                                       f32_3 %116 = OpFNegate %115 
                              Uniform f32_4* %118 = OpAccessChain %31 %117 
                                       f32_4 %119 = OpLoad %118 
                                       f32_3 %120 = OpVectorShuffle %119 %119 0 1 2 
                                       f32_3 %121 = OpFAdd %116 %120 
                                                      OpStore %45 %121 
                              Uniform f32_4* %122 = OpAccessChain %31 %117 
                                       f32_4 %123 = OpLoad %122 
                                       f32_3 %124 = OpVectorShuffle %123 %123 3 3 3 
                                       f32_3 %125 = OpLoad %45 
                                       f32_3 %126 = OpFMul %124 %125 
                              Uniform f32_4* %127 = OpAccessChain %31 %112 
                                       f32_4 %128 = OpLoad %127 
                                       f32_3 %129 = OpVectorShuffle %128 %128 0 1 2 
                                       f32_3 %130 = OpFAdd %126 %129 
                                                      OpStore %45 %130 
                                       f32_3 %132 = OpLoad %45 
                                       f32_3 %133 = OpFNegate %132 
                              Uniform f32_4* %134 = OpAccessChain %31 %112 
                                       f32_4 %135 = OpLoad %134 
                                       f32_3 %136 = OpVectorShuffle %135 %135 0 1 2 
                                       f32_3 %137 = OpFAdd %133 %136 
                                                      OpStore %131 %137 
                                       f32_3 %138 = OpLoad %9 
                                       f32_3 %139 = OpVectorShuffle %138 %138 0 0 0 
                                       f32_3 %140 = OpLoad %131 
                                       f32_3 %141 = OpFMul %139 %140 
                                       f32_3 %142 = OpLoad %45 
                                       f32_3 %143 = OpFAdd %141 %142 
                                                      OpStore %9 %143 
                                       f32_3 %146 = OpLoad vs_TEXCOORD1 
                                       f32_4 %147 = OpLoad %145 
                                       f32_4 %148 = OpVectorShuffle %147 %146 4 5 6 3 
                                                      OpStore %145 %148 
                                Private f32* %150 = OpAccessChain %145 %149 
                                                      OpStore %150 %78 
                              Uniform f32_4* %153 = OpAccessChain %31 %152 
                                       f32_4 %154 = OpLoad %153 
                                       f32_4 %155 = OpLoad %145 
                                         f32 %156 = OpDot %154 %155 
                                Private f32* %157 = OpAccessChain %151 %16 
                                                      OpStore %157 %156 
                              Uniform f32_4* %159 = OpAccessChain %31 %158 
                                       f32_4 %160 = OpLoad %159 
                                       f32_4 %161 = OpLoad %145 
                                         f32 %162 = OpDot %160 %161 
                                Private f32* %164 = OpAccessChain %151 %163 
                                                      OpStore %164 %162 
                              Uniform f32_4* %166 = OpAccessChain %31 %165 
                                       f32_4 %167 = OpLoad %166 
                                       f32_4 %168 = OpLoad %145 
                                         f32 %169 = OpDot %167 %168 
                                Private f32* %171 = OpAccessChain %151 %170 
                                                      OpStore %171 %169 
                                       f32_3 %172 = OpLoad %151 
                                       f32_3 %174 = OpLoad vs_TEXCOORD3 
                                       f32_3 %175 = OpFAdd %172 %174 
                                                      OpStore %151 %175 
                                       f32_3 %176 = OpLoad %151 
                                       f32_3 %178 = OpExtInst %1 40 %176 %177 
                                                      OpStore %151 %178 
                                       f32_3 %180 = OpLoad %151 
                                       f32_3 %181 = OpExtInst %1 30 %180 
                                                      OpStore %179 %181 
                                       f32_3 %182 = OpLoad %179 
                                       f32_3 %185 = OpFMul %182 %184 
                                                      OpStore %179 %185 
                                       f32_3 %186 = OpLoad %179 
                                       f32_3 %187 = OpExtInst %1 29 %186 
                                                      OpStore %179 %187 
                                       f32_3 %188 = OpLoad %179 
                                       f32_3 %191 = OpFMul %188 %190 
                                       f32_3 %194 = OpFAdd %191 %193 
                                                      OpStore %179 %194 
                                       f32_3 %195 = OpLoad %179 
                                       f32_3 %196 = OpExtInst %1 40 %195 %177 
                                                      OpStore %179 %196 
                         read_only Texture2D %201 = OpLoad %200 
                                     sampler %205 = OpLoad %204 
                  read_only Texture2DSampled %207 = OpSampledImage %201 %205 
                                       f32_2 %211 = OpLoad vs_TEXCOORD0 
                                       f32_4 %212 = OpImageSampleImplicitLod %207 %211 
                                                      OpStore %197 %212 
                                       f32_4 %213 = OpLoad %197 
                                       f32_3 %214 = OpVectorShuffle %213 %213 0 1 2 
                              Uniform f32_4* %216 = OpAccessChain %31 %215 
                                       f32_4 %217 = OpLoad %216 
                                       f32_3 %218 = OpVectorShuffle %217 %217 0 1 2 
                                       f32_3 %219 = OpFMul %214 %218 
                                                      OpStore %151 %219 
                                Private f32* %222 = OpAccessChain %197 %149 
                                         f32 %223 = OpLoad %222 
                                Uniform f32* %224 = OpAccessChain %31 %215 %149 
                                         f32 %225 = OpLoad %224 
                                         f32 %226 = OpFMul %223 %225 
                                 Output f32* %228 = OpAccessChain %221 %149 
                                                      OpStore %228 %226 
                                       f32_3 %230 = OpLoad %179 
                                       f32_3 %231 = OpLoad %151 
                                       f32_3 %232 = OpFMul %230 %231 
                                                      OpStore %229 %232 
                                       f32_3 %233 = OpLoad %151 
                              Uniform f32_4* %235 = OpAccessChain %31 %234 
                                       f32_4 %236 = OpLoad %235 
                                       f32_3 %237 = OpVectorShuffle %236 %236 0 1 2 
                                       f32_3 %238 = OpFMul %233 %237 
                                                      OpStore %151 %238 
                                       f32_3 %239 = OpLoad %151 
                                       f32_3 %240 = OpLoad %9 
                                       f32_3 %241 = OpFMul %239 %240 
                                       f32_3 %242 = OpLoad %229 
                                       f32_3 %243 = OpFAdd %241 %242 
                                       f32_4 %244 = OpLoad %221 
                                       f32_4 %245 = OpVectorShuffle %244 %243 4 5 6 3 
                                                      OpStore %221 %245 
                                                      OpReturn
                                                      OpFunctionEnd
"
}
SubProgram "vulkan hw_tier02 " {
Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "VERTEXLIGHT_ON" }
"; SPIR-V
; Version: 1.0
; Generator: Khronos Glslang Reference Front End; 6
; Bound: 369
; Schema: 0
                                                      OpCapability Shader 
                                               %1 = OpExtInstImport "GLSL.std.450" 
                                                      OpMemoryModel Logical GLSL450 
                                                      OpEntryPoint Vertex %4 "main" %11 %90 %100 %116 %120 %159 %162 %353 %361 %362 
                                                      OpName vs_TEXCOORD0 "vs_TEXCOORD0" 
                                                      OpName vs_TEXCOORD1 "vs_TEXCOORD1" 
                                                      OpName vs_TEXCOORD2 "vs_TEXCOORD2" 
                                                      OpName vs_TEXCOORD3 "vs_TEXCOORD3" 
                                                      OpName vs_TEXCOORD5 "vs_TEXCOORD5" 
                                                      OpName vs_TEXCOORD6 "vs_TEXCOORD6" 
                                                      OpDecorate %11 Location 11 
                                                      OpDecorate %16 ArrayStride 16 
                                                      OpDecorate %18 ArrayStride 18 
                                                      OpDecorate %19 ArrayStride 19 
                                                      OpDecorate %20 ArrayStride 20 
                                                      OpMemberDecorate %21 0 Offset 21 
                                                      OpMemberDecorate %21 1 Offset 21 
                                                      OpMemberDecorate %21 2 Offset 21 
                                                      OpMemberDecorate %21 3 RelaxedPrecision 
                                                      OpMemberDecorate %21 3 Offset 21 
                                                      OpMemberDecorate %21 4 RelaxedPrecision 
                                                      OpMemberDecorate %21 4 Offset 21 
                                                      OpMemberDecorate %21 5 RelaxedPrecision 
                                                      OpMemberDecorate %21 5 Offset 21 
                                                      OpMemberDecorate %21 6 RelaxedPrecision 
                                                      OpMemberDecorate %21 6 Offset 21 
                                                      OpMemberDecorate %21 7 RelaxedPrecision 
                                                      OpMemberDecorate %21 7 Offset 21 
                                                      OpMemberDecorate %21 8 RelaxedPrecision 
                                                      OpMemberDecorate %21 8 Offset 21 
                                                      OpMemberDecorate %21 9 Offset 21 
                                                      OpMemberDecorate %21 10 Offset 21 
                                                      OpMemberDecorate %21 11 Offset 21 
                                                      OpMemberDecorate %21 12 Offset 21 
                                                      OpDecorate %21 Block 
                                                      OpDecorate %23 DescriptorSet 23 
                                                      OpDecorate %23 Binding 23 
                                                      OpMemberDecorate %88 0 BuiltIn 88 
                                                      OpMemberDecorate %88 1 BuiltIn 88 
                                                      OpMemberDecorate %88 2 BuiltIn 88 
                                                      OpDecorate %88 Block 
                                                      OpDecorate %100 Location 100 
                                                      OpDecorate vs_TEXCOORD0 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD0 Location 116 
                                                      OpDecorate %120 Location 120 
                                                      OpDecorate vs_TEXCOORD1 Location 159 
                                                      OpDecorate vs_TEXCOORD2 Location 162 
                                                      OpDecorate %222 RelaxedPrecision 
                                                      OpDecorate %243 RelaxedPrecision 
                                                      OpDecorate %244 RelaxedPrecision 
                                                      OpDecorate %249 RelaxedPrecision 
                                                      OpDecorate %250 RelaxedPrecision 
                                                      OpDecorate %260 RelaxedPrecision 
                                                      OpDecorate %261 RelaxedPrecision 
                                                      OpDecorate %271 RelaxedPrecision 
                                                      OpDecorate %272 RelaxedPrecision 
                                                      OpDecorate %302 RelaxedPrecision 
                                                      OpDecorate %315 RelaxedPrecision 
                                                      OpDecorate %316 RelaxedPrecision 
                                                      OpDecorate %319 RelaxedPrecision 
                                                      OpDecorate %325 RelaxedPrecision 
                                                      OpDecorate %328 RelaxedPrecision 
                                                      OpDecorate %329 RelaxedPrecision 
                                                      OpDecorate %330 RelaxedPrecision 
                                                      OpDecorate %334 RelaxedPrecision 
                                                      OpDecorate %335 RelaxedPrecision 
                                                      OpDecorate %336 RelaxedPrecision 
                                                      OpDecorate %340 RelaxedPrecision 
                                                      OpDecorate %341 RelaxedPrecision 
                                                      OpDecorate %342 RelaxedPrecision 
                                                      OpDecorate %346 RelaxedPrecision 
                                                      OpDecorate %347 RelaxedPrecision 
                                                      OpDecorate %348 RelaxedPrecision 
                                                      OpDecorate %349 RelaxedPrecision 
                                                      OpDecorate %350 RelaxedPrecision 
                                                      OpDecorate %351 RelaxedPrecision 
                                                      OpDecorate %352 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD3 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD3 Location 353 
                                                      OpDecorate %359 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD5 Location 361 
                                                      OpDecorate vs_TEXCOORD6 Location 362 
                                               %2 = OpTypeVoid 
                                               %3 = OpTypeFunction %2 
                                               %6 = OpTypeFloat 32 
                                               %7 = OpTypeVector %6 4 
                                               %8 = OpTypePointer Private %7 
                                Private f32_4* %9 = OpVariable Private 
                                              %10 = OpTypePointer Input %7 
                                 Input f32_4* %11 = OpVariable Input 
                                              %14 = OpTypeInt 32 0 
                                          u32 %15 = OpConstant 8 
                                              %16 = OpTypeArray %7 %15 
                                          u32 %17 = OpConstant 4 
                                              %18 = OpTypeArray %7 %17 
                                              %19 = OpTypeArray %7 %17 
                                              %20 = OpTypeArray %7 %17 
                                              %21 = OpTypeStruct %7 %7 %7 %7 %16 %7 %7 %7 %7 %18 %19 %20 %7 
                                              %22 = OpTypePointer Uniform %21 
Uniform struct {f32_4; f32_4; f32_4; f32_4; f32_4[8]; f32_4; f32_4; f32_4; f32_4; f32_4[4]; f32_4[4]; f32_4[4]; f32_4;}* %23 = OpVariable Uniform 
                                              %24 = OpTypeInt 32 1 
                                          i32 %25 = OpConstant 9 
                                          i32 %26 = OpConstant 1 
                                              %27 = OpTypePointer Uniform %7 
                                          i32 %31 = OpConstant 0 
                                          i32 %39 = OpConstant 2 
                               Private f32_4* %47 = OpVariable Private 
                                          i32 %49 = OpConstant 3 
                                              %53 = OpTypeVector %6 3 
                               Private f32_4* %65 = OpVariable Private 
                                          i32 %68 = OpConstant 11 
                                          u32 %86 = OpConstant 1 
                                              %87 = OpTypeArray %6 %86 
                                              %88 = OpTypeStruct %7 %6 %87 
                                              %89 = OpTypePointer Output %88 
         Output struct {f32_4; f32; f32[1];}* %90 = OpVariable Output 
                                              %98 = OpTypePointer Output %7 
                                Input f32_4* %100 = OpVariable Input 
                                             %101 = OpTypeVector %6 2 
                                         i32 %104 = OpConstant 12 
                                             %115 = OpTypePointer Output %101 
                       Output f32_2* vs_TEXCOORD0 = OpVariable Output 
                                             %119 = OpTypePointer Input %53 
                                Input f32_3* %120 = OpVariable Input 
                                         i32 %122 = OpConstant 10 
                                         u32 %127 = OpConstant 0 
                                             %128 = OpTypePointer Private %6 
                                         u32 %141 = OpConstant 2 
                                Private f32* %143 = OpVariable Private 
                                             %158 = OpTypePointer Output %53 
                       Output f32_3* vs_TEXCOORD1 = OpVariable Output 
                       Output f32_3* vs_TEXCOORD2 = OpVariable Output 
                              Private f32_4* %171 = OpVariable Private 
                              Private f32_4* %184 = OpVariable Private 
                                         f32 %215 = OpConstant 3.674022E-40 
                                       f32_4 %216 = OpConstantComposite %215 %215 %215 %215 
                                         f32 %224 = OpConstant 3.674022E-40 
                                       f32_4 %225 = OpConstantComposite %224 %224 %224 %224 
                                         f32 %233 = OpConstant 3.674022E-40 
                                       f32_4 %234 = OpConstantComposite %233 %233 %233 %233 
                                         i32 %241 = OpConstant 4 
                                         f32 %283 = OpConstant 3.674022E-40 
                                       f32_3 %284 = OpConstantComposite %283 %283 %283 
                                         f32 %286 = OpConstant 3.674022E-40 
                                       f32_3 %287 = OpConstantComposite %286 %286 %286 
                                         f32 %296 = OpConstant 3.674022E-40 
                                       f32_3 %297 = OpConstantComposite %296 %296 %296 
                                             %301 = OpTypePointer Private %53 
                              Private f32_3* %302 = OpVariable Private 
                              Private f32_4* %319 = OpVariable Private 
                              Private f32_3* %325 = OpVariable Private 
                                         i32 %326 = OpConstant 5 
                                         i32 %332 = OpConstant 6 
                                         i32 %338 = OpConstant 7 
                                         i32 %344 = OpConstant 8 
                       Output f32_3* vs_TEXCOORD3 = OpVariable Output 
                       Output f32_4* vs_TEXCOORD5 = OpVariable Output 
                       Output f32_4* vs_TEXCOORD6 = OpVariable Output 
                                             %363 = OpTypePointer Output %6 
                                          void %4 = OpFunction None %3 
                                               %5 = OpLabel 
                                        f32_4 %12 = OpLoad %11 
                                        f32_4 %13 = OpVectorShuffle %12 %12 1 1 1 1 
                               Uniform f32_4* %28 = OpAccessChain %23 %25 %26 
                                        f32_4 %29 = OpLoad %28 
                                        f32_4 %30 = OpFMul %13 %29 
                                                      OpStore %9 %30 
                               Uniform f32_4* %32 = OpAccessChain %23 %25 %31 
                                        f32_4 %33 = OpLoad %32 
                                        f32_4 %34 = OpLoad %11 
                                        f32_4 %35 = OpVectorShuffle %34 %34 0 0 0 0 
                                        f32_4 %36 = OpFMul %33 %35 
                                        f32_4 %37 = OpLoad %9 
                                        f32_4 %38 = OpFAdd %36 %37 
                                                      OpStore %9 %38 
                               Uniform f32_4* %40 = OpAccessChain %23 %25 %39 
                                        f32_4 %41 = OpLoad %40 
                                        f32_4 %42 = OpLoad %11 
                                        f32_4 %43 = OpVectorShuffle %42 %42 2 2 2 2 
                                        f32_4 %44 = OpFMul %41 %43 
                                        f32_4 %45 = OpLoad %9 
                                        f32_4 %46 = OpFAdd %44 %45 
                                                      OpStore %9 %46 
                                        f32_4 %48 = OpLoad %9 
                               Uniform f32_4* %50 = OpAccessChain %23 %25 %49 
                                        f32_4 %51 = OpLoad %50 
                                        f32_4 %52 = OpFAdd %48 %51 
                                                      OpStore %47 %52 
                               Uniform f32_4* %54 = OpAccessChain %23 %25 %49 
                                        f32_4 %55 = OpLoad %54 
                                        f32_3 %56 = OpVectorShuffle %55 %55 0 1 2 
                                        f32_4 %57 = OpLoad %11 
                                        f32_3 %58 = OpVectorShuffle %57 %57 3 3 3 
                                        f32_3 %59 = OpFMul %56 %58 
                                        f32_4 %60 = OpLoad %9 
                                        f32_3 %61 = OpVectorShuffle %60 %60 0 1 2 
                                        f32_3 %62 = OpFAdd %59 %61 
                                        f32_4 %63 = OpLoad %9 
                                        f32_4 %64 = OpVectorShuffle %63 %62 4 5 6 3 
                                                      OpStore %9 %64 
                                        f32_4 %66 = OpLoad %47 
                                        f32_4 %67 = OpVectorShuffle %66 %66 1 1 1 1 
                               Uniform f32_4* %69 = OpAccessChain %23 %68 %26 
                                        f32_4 %70 = OpLoad %69 
                                        f32_4 %71 = OpFMul %67 %70 
                                                      OpStore %65 %71 
                               Uniform f32_4* %72 = OpAccessChain %23 %68 %31 
                                        f32_4 %73 = OpLoad %72 
                                        f32_4 %74 = OpLoad %47 
                                        f32_4 %75 = OpVectorShuffle %74 %74 0 0 0 0 
                                        f32_4 %76 = OpFMul %73 %75 
                                        f32_4 %77 = OpLoad %65 
                                        f32_4 %78 = OpFAdd %76 %77 
                                                      OpStore %65 %78 
                               Uniform f32_4* %79 = OpAccessChain %23 %68 %39 
                                        f32_4 %80 = OpLoad %79 
                                        f32_4 %81 = OpLoad %47 
                                        f32_4 %82 = OpVectorShuffle %81 %81 2 2 2 2 
                                        f32_4 %83 = OpFMul %80 %82 
                                        f32_4 %84 = OpLoad %65 
                                        f32_4 %85 = OpFAdd %83 %84 
                                                      OpStore %65 %85 
                               Uniform f32_4* %91 = OpAccessChain %23 %68 %49 
                                        f32_4 %92 = OpLoad %91 
                                        f32_4 %93 = OpLoad %47 
                                        f32_4 %94 = OpVectorShuffle %93 %93 3 3 3 3 
                                        f32_4 %95 = OpFMul %92 %94 
                                        f32_4 %96 = OpLoad %65 
                                        f32_4 %97 = OpFAdd %95 %96 
                                Output f32_4* %99 = OpAccessChain %90 %31 
                                                      OpStore %99 %97 
                                       f32_4 %102 = OpLoad %100 
                                       f32_2 %103 = OpVectorShuffle %102 %102 0 1 
                              Uniform f32_4* %105 = OpAccessChain %23 %104 
                                       f32_4 %106 = OpLoad %105 
                                       f32_2 %107 = OpVectorShuffle %106 %106 0 1 
                                       f32_2 %108 = OpFMul %103 %107 
                              Uniform f32_4* %109 = OpAccessChain %23 %104 
                                       f32_4 %110 = OpLoad %109 
                                       f32_2 %111 = OpVectorShuffle %110 %110 2 3 
                                       f32_2 %112 = OpFAdd %108 %111 
                                       f32_4 %113 = OpLoad %47 
                                       f32_4 %114 = OpVectorShuffle %113 %112 4 5 2 3 
                                                      OpStore %47 %114 
                                       f32_4 %117 = OpLoad %47 
                                       f32_2 %118 = OpVectorShuffle %117 %117 0 1 
                                                      OpStore vs_TEXCOORD0 %118 
                                       f32_3 %121 = OpLoad %120 
                              Uniform f32_4* %123 = OpAccessChain %23 %122 %31 
                                       f32_4 %124 = OpLoad %123 
                                       f32_3 %125 = OpVectorShuffle %124 %124 0 1 2 
                                         f32 %126 = OpDot %121 %125 
                                Private f32* %129 = OpAccessChain %47 %127 
                                                      OpStore %129 %126 
                                       f32_3 %130 = OpLoad %120 
                              Uniform f32_4* %131 = OpAccessChain %23 %122 %26 
                                       f32_4 %132 = OpLoad %131 
                                       f32_3 %133 = OpVectorShuffle %132 %132 0 1 2 
                                         f32 %134 = OpDot %130 %133 
                                Private f32* %135 = OpAccessChain %47 %86 
                                                      OpStore %135 %134 
                                       f32_3 %136 = OpLoad %120 
                              Uniform f32_4* %137 = OpAccessChain %23 %122 %39 
                                       f32_4 %138 = OpLoad %137 
                                       f32_3 %139 = OpVectorShuffle %138 %138 0 1 2 
                                         f32 %140 = OpDot %136 %139 
                                Private f32* %142 = OpAccessChain %47 %141 
                                                      OpStore %142 %140 
                                       f32_4 %144 = OpLoad %47 
                                       f32_3 %145 = OpVectorShuffle %144 %144 0 1 2 
                                       f32_4 %146 = OpLoad %47 
                                       f32_3 %147 = OpVectorShuffle %146 %146 0 1 2 
                                         f32 %148 = OpDot %145 %147 
                                                      OpStore %143 %148 
                                         f32 %149 = OpLoad %143 
                                         f32 %150 = OpExtInst %1 32 %149 
                                                      OpStore %143 %150 
                                         f32 %151 = OpLoad %143 
                                       f32_3 %152 = OpCompositeConstruct %151 %151 %151 
                                       f32_4 %153 = OpLoad %47 
                                       f32_3 %154 = OpVectorShuffle %153 %153 0 1 2 
                                       f32_3 %155 = OpFMul %152 %154 
                                       f32_4 %156 = OpLoad %47 
                                       f32_4 %157 = OpVectorShuffle %156 %155 4 5 6 3 
                                                      OpStore %47 %157 
                                       f32_4 %160 = OpLoad %47 
                                       f32_3 %161 = OpVectorShuffle %160 %160 0 1 2 
                                                      OpStore vs_TEXCOORD1 %161 
                                       f32_4 %163 = OpLoad %9 
                                       f32_3 %164 = OpVectorShuffle %163 %163 0 1 2 
                                                      OpStore vs_TEXCOORD2 %164 
                                       f32_4 %165 = OpLoad %9 
                                       f32_4 %166 = OpVectorShuffle %165 %165 0 0 0 0 
                                       f32_4 %167 = OpFNegate %166 
                              Uniform f32_4* %168 = OpAccessChain %23 %31 
                                       f32_4 %169 = OpLoad %168 
                                       f32_4 %170 = OpFAdd %167 %169 
                                                      OpStore %65 %170 
                                       f32_4 %172 = OpLoad %9 
                                       f32_4 %173 = OpVectorShuffle %172 %172 1 1 1 1 
                                       f32_4 %174 = OpFNegate %173 
                              Uniform f32_4* %175 = OpAccessChain %23 %26 
                                       f32_4 %176 = OpLoad %175 
                                       f32_4 %177 = OpFAdd %174 %176 
                                                      OpStore %171 %177 
                                       f32_4 %178 = OpLoad %9 
                                       f32_4 %179 = OpVectorShuffle %178 %178 2 2 2 2 
                                       f32_4 %180 = OpFNegate %179 
                              Uniform f32_4* %181 = OpAccessChain %23 %39 
                                       f32_4 %182 = OpLoad %181 
                                       f32_4 %183 = OpFAdd %180 %182 
                                                      OpStore %9 %183 
                                       f32_4 %185 = OpLoad %47 
                                       f32_4 %186 = OpVectorShuffle %185 %185 1 1 1 1 
                                       f32_4 %187 = OpLoad %171 
                                       f32_4 %188 = OpFMul %186 %187 
                                                      OpStore %184 %188 
                                       f32_4 %189 = OpLoad %171 
                                       f32_4 %190 = OpLoad %171 
                                       f32_4 %191 = OpFMul %189 %190 
                                                      OpStore %171 %191 
                                       f32_4 %192 = OpLoad %65 
                                       f32_4 %193 = OpLoad %65 
                                       f32_4 %194 = OpFMul %192 %193 
                                       f32_4 %195 = OpLoad %171 
                                       f32_4 %196 = OpFAdd %194 %195 
                                                      OpStore %171 %196 
                                       f32_4 %197 = OpLoad %65 
                                       f32_4 %198 = OpLoad %47 
                                       f32_4 %199 = OpVectorShuffle %198 %198 0 0 0 0 
                                       f32_4 %200 = OpFMul %197 %199 
                                       f32_4 %201 = OpLoad %184 
                                       f32_4 %202 = OpFAdd %200 %201 
                                                      OpStore %65 %202 
                                       f32_4 %203 = OpLoad %9 
                                       f32_4 %204 = OpLoad %47 
                                       f32_4 %205 = OpVectorShuffle %204 %204 2 2 2 2 
                                       f32_4 %206 = OpFMul %203 %205 
                                       f32_4 %207 = OpLoad %65 
                                       f32_4 %208 = OpFAdd %206 %207 
                                                      OpStore %65 %208 
                                       f32_4 %209 = OpLoad %9 
                                       f32_4 %210 = OpLoad %9 
                                       f32_4 %211 = OpFMul %209 %210 
                                       f32_4 %212 = OpLoad %171 
                                       f32_4 %213 = OpFAdd %211 %212 
                                                      OpStore %9 %213 
                                       f32_4 %214 = OpLoad %9 
                                       f32_4 %217 = OpExtInst %1 40 %214 %216 
                                                      OpStore %9 %217 
                                       f32_4 %218 = OpLoad %9 
                                       f32_4 %219 = OpExtInst %1 32 %218 
                                                      OpStore %171 %219 
                                       f32_4 %220 = OpLoad %9 
                              Uniform f32_4* %221 = OpAccessChain %23 %49 
                                       f32_4 %222 = OpLoad %221 
                                       f32_4 %223 = OpFMul %220 %222 
                                       f32_4 %226 = OpFAdd %223 %225 
                                                      OpStore %9 %226 
                                       f32_4 %227 = OpLoad %9 
                                       f32_4 %228 = OpFDiv %225 %227 
                                                      OpStore %9 %228 
                                       f32_4 %229 = OpLoad %65 
                                       f32_4 %230 = OpLoad %171 
                                       f32_4 %231 = OpFMul %229 %230 
                                                      OpStore %65 %231 
                                       f32_4 %232 = OpLoad %65 
                                       f32_4 %235 = OpExtInst %1 40 %232 %234 
                                                      OpStore %65 %235 
                                       f32_4 %236 = OpLoad %9 
                                       f32_4 %237 = OpLoad %65 
                                       f32_4 %238 = OpFMul %236 %237 
                                                      OpStore %9 %238 
                                       f32_4 %239 = OpLoad %9 
                                       f32_3 %240 = OpVectorShuffle %239 %239 1 1 1 
                              Uniform f32_4* %242 = OpAccessChain %23 %241 %26 
                                       f32_4 %243 = OpLoad %242 
                                       f32_3 %244 = OpVectorShuffle %243 %243 0 1 2 
                                       f32_3 %245 = OpFMul %240 %244 
                                       f32_4 %246 = OpLoad %65 
                                       f32_4 %247 = OpVectorShuffle %246 %245 4 5 6 3 
                                                      OpStore %65 %247 
                              Uniform f32_4* %248 = OpAccessChain %23 %241 %31 
                                       f32_4 %249 = OpLoad %248 
                                       f32_3 %250 = OpVectorShuffle %249 %249 0 1 2 
                                       f32_4 %251 = OpLoad %9 
                                       f32_3 %252 = OpVectorShuffle %251 %251 0 0 0 
                                       f32_3 %253 = OpFMul %250 %252 
                                       f32_4 %254 = OpLoad %65 
                                       f32_3 %255 = OpVectorShuffle %254 %254 0 1 2 
                                       f32_3 %256 = OpFAdd %253 %255 
                                       f32_4 %257 = OpLoad %65 
                                       f32_4 %258 = OpVectorShuffle %257 %256 4 5 6 3 
                                                      OpStore %65 %258 
                              Uniform f32_4* %259 = OpAccessChain %23 %241 %39 
                                       f32_4 %260 = OpLoad %259 
                                       f32_3 %261 = OpVectorShuffle %260 %260 0 1 2 
                                       f32_4 %262 = OpLoad %9 
                                       f32_3 %263 = OpVectorShuffle %262 %262 2 2 2 
                                       f32_3 %264 = OpFMul %261 %263 
                                       f32_4 %265 = OpLoad %65 
                                       f32_3 %266 = OpVectorShuffle %265 %265 0 1 2 
                                       f32_3 %267 = OpFAdd %264 %266 
                                       f32_4 %268 = OpLoad %9 
                                       f32_4 %269 = OpVectorShuffle %268 %267 4 5 6 3 
                                                      OpStore %9 %269 
                              Uniform f32_4* %270 = OpAccessChain %23 %241 %49 
                                       f32_4 %271 = OpLoad %270 
                                       f32_3 %272 = OpVectorShuffle %271 %271 0 1 2 
                                       f32_4 %273 = OpLoad %9 
                                       f32_3 %274 = OpVectorShuffle %273 %273 3 3 3 
                                       f32_3 %275 = OpFMul %272 %274 
                                       f32_4 %276 = OpLoad %9 
                                       f32_3 %277 = OpVectorShuffle %276 %276 0 1 2 
                                       f32_3 %278 = OpFAdd %275 %277 
                                       f32_4 %279 = OpLoad %9 
                                       f32_4 %280 = OpVectorShuffle %279 %278 4 5 6 3 
                                                      OpStore %9 %280 
                                       f32_4 %281 = OpLoad %9 
                                       f32_3 %282 = OpVectorShuffle %281 %281 0 1 2 
                                       f32_3 %285 = OpFMul %282 %284 
                                       f32_3 %288 = OpFAdd %285 %287 
                                       f32_4 %289 = OpLoad %65 
                                       f32_4 %290 = OpVectorShuffle %289 %288 4 5 6 3 
                                                      OpStore %65 %290 
                                       f32_4 %291 = OpLoad %9 
                                       f32_3 %292 = OpVectorShuffle %291 %291 0 1 2 
                                       f32_4 %293 = OpLoad %65 
                                       f32_3 %294 = OpVectorShuffle %293 %293 0 1 2 
                                       f32_3 %295 = OpFMul %292 %294 
                                       f32_3 %298 = OpFAdd %295 %297 
                                       f32_4 %299 = OpLoad %65 
                                       f32_4 %300 = OpVectorShuffle %299 %298 4 5 6 3 
                                                      OpStore %65 %300 
                                Private f32* %303 = OpAccessChain %47 %86 
                                         f32 %304 = OpLoad %303 
                                Private f32* %305 = OpAccessChain %47 %86 
                                         f32 %306 = OpLoad %305 
                                         f32 %307 = OpFMul %304 %306 
                                Private f32* %308 = OpAccessChain %302 %127 
                                                      OpStore %308 %307 
                                Private f32* %309 = OpAccessChain %47 %127 
                                         f32 %310 = OpLoad %309 
                                Private f32* %311 = OpAccessChain %47 %127 
                                         f32 %312 = OpLoad %311 
                                         f32 %313 = OpFMul %310 %312 
                                Private f32* %314 = OpAccessChain %302 %127 
                                         f32 %315 = OpLoad %314 
                                         f32 %316 = OpFNegate %315 
                                         f32 %317 = OpFAdd %313 %316 
                                Private f32* %318 = OpAccessChain %302 %127 
                                                      OpStore %318 %317 
                                       f32_4 %320 = OpLoad %47 
                                       f32_4 %321 = OpVectorShuffle %320 %320 1 2 2 0 
                                       f32_4 %322 = OpLoad %47 
                                       f32_4 %323 = OpVectorShuffle %322 %322 0 1 2 2 
                                       f32_4 %324 = OpFMul %321 %323 
                                                      OpStore %319 %324 
                              Uniform f32_4* %327 = OpAccessChain %23 %326 
                                       f32_4 %328 = OpLoad %327 
                                       f32_4 %329 = OpLoad %319 
                                         f32 %330 = OpDot %328 %329 
                                Private f32* %331 = OpAccessChain %325 %127 
                                                      OpStore %331 %330 
                              Uniform f32_4* %333 = OpAccessChain %23 %332 
                                       f32_4 %334 = OpLoad %333 
                                       f32_4 %335 = OpLoad %319 
                                         f32 %336 = OpDot %334 %335 
                                Private f32* %337 = OpAccessChain %325 %86 
                                                      OpStore %337 %336 
                              Uniform f32_4* %339 = OpAccessChain %23 %338 
                                       f32_4 %340 = OpLoad %339 
                                       f32_4 %341 = OpLoad %319 
                                         f32 %342 = OpDot %340 %341 
                                Private f32* %343 = OpAccessChain %325 %141 
                                                      OpStore %343 %342 
                              Uniform f32_4* %345 = OpAccessChain %23 %344 
                                       f32_4 %346 = OpLoad %345 
                                       f32_3 %347 = OpVectorShuffle %346 %346 0 1 2 
                                       f32_3 %348 = OpLoad %302 
                                       f32_3 %349 = OpVectorShuffle %348 %348 0 0 0 
                                       f32_3 %350 = OpFMul %347 %349 
                                       f32_3 %351 = OpLoad %325 
                                       f32_3 %352 = OpFAdd %350 %351 
                                                      OpStore %302 %352 
                                       f32_4 %354 = OpLoad %9 
                                       f32_3 %355 = OpVectorShuffle %354 %354 0 1 2 
                                       f32_4 %356 = OpLoad %65 
                                       f32_3 %357 = OpVectorShuffle %356 %356 0 1 2 
                                       f32_3 %358 = OpFMul %355 %357 
                                       f32_3 %359 = OpLoad %302 
                                       f32_3 %360 = OpFAdd %358 %359 
                                                      OpStore vs_TEXCOORD3 %360 
                                                      OpStore vs_TEXCOORD5 %234 
                                                      OpStore vs_TEXCOORD6 %234 
                                 Output f32* %364 = OpAccessChain %90 %31 %86 
                                         f32 %365 = OpLoad %364 
                                         f32 %366 = OpFNegate %365 
                                 Output f32* %367 = OpAccessChain %90 %31 %86 
                                                      OpStore %367 %366 
                                                      OpReturn
                                                      OpFunctionEnd
; SPIR-V
; Version: 1.0
; Generator: Khronos Glslang Reference Front End; 6
; Bound: 247
; Schema: 0
                                                      OpCapability Shader 
                                               %1 = OpExtInstImport "GLSL.std.450" 
                                                      OpMemoryModel Logical GLSL450 
                                                      OpEntryPoint Fragment %4 "main" %11 %173 %210 %221 
                                                      OpExecutionMode %4 OriginUpperLeft 
                                                      OpName vs_TEXCOORD1 "vs_TEXCOORD1" 
                                                      OpName vs_TEXCOORD3 "vs_TEXCOORD3" 
                                                      OpName vs_TEXCOORD0 "vs_TEXCOORD0" 
                                                      OpDecorate %9 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD1 Location 11 
                                                      OpDecorate %20 RelaxedPrecision 
                                                      OpDecorate %21 RelaxedPrecision 
                                                      OpDecorate %23 RelaxedPrecision 
                                                      OpDecorate %24 RelaxedPrecision 
                                                      OpDecorate %27 RelaxedPrecision 
                                                      OpMemberDecorate %29 0 RelaxedPrecision 
                                                      OpMemberDecorate %29 0 Offset 29 
                                                      OpMemberDecorate %29 1 RelaxedPrecision 
                                                      OpMemberDecorate %29 1 Offset 29 
                                                      OpMemberDecorate %29 2 RelaxedPrecision 
                                                      OpMemberDecorate %29 2 Offset 29 
                                                      OpMemberDecorate %29 3 RelaxedPrecision 
                                                      OpMemberDecorate %29 3 Offset 29 
                                                      OpMemberDecorate %29 4 RelaxedPrecision 
                                                      OpMemberDecorate %29 4 Offset 29 
                                                      OpMemberDecorate %29 5 RelaxedPrecision 
                                                      OpMemberDecorate %29 5 Offset 29 
                                                      OpMemberDecorate %29 6 RelaxedPrecision 
                                                      OpMemberDecorate %29 6 Offset 29 
                                                      OpMemberDecorate %29 7 RelaxedPrecision 
                                                      OpMemberDecorate %29 7 Offset 29 
                                                      OpMemberDecorate %29 8 RelaxedPrecision 
                                                      OpMemberDecorate %29 8 Offset 29 
                                                      OpMemberDecorate %29 9 RelaxedPrecision 
                                                      OpMemberDecorate %29 9 Offset 29 
                                                      OpDecorate %29 Block 
                                                      OpDecorate %31 DescriptorSet 31 
                                                      OpDecorate %31 Binding 31 
                                                      OpDecorate %36 RelaxedPrecision 
                                                      OpDecorate %37 RelaxedPrecision 
                                                      OpDecorate %38 RelaxedPrecision 
                                                      OpDecorate %41 RelaxedPrecision 
                                                      OpDecorate %43 RelaxedPrecision 
                                                      OpDecorate %45 RelaxedPrecision 
                                                      OpDecorate %49 RelaxedPrecision 
                                                      OpDecorate %50 RelaxedPrecision 
                                                      OpDecorate %52 RelaxedPrecision 
                                                      OpDecorate %55 RelaxedPrecision 
                                                      OpDecorate %56 RelaxedPrecision 
                                                      OpDecorate %59 RelaxedPrecision 
                                                      OpDecorate %60 RelaxedPrecision 
                                                      OpDecorate %62 RelaxedPrecision 
                                                      OpDecorate %63 RelaxedPrecision 
                                                      OpDecorate %65 RelaxedPrecision 
                                                      OpDecorate %67 RelaxedPrecision 
                                                      OpDecorate %68 RelaxedPrecision 
                                                      OpDecorate %70 RelaxedPrecision 
                                                      OpDecorate %71 RelaxedPrecision 
                                                      OpDecorate %73 RelaxedPrecision 
                                                      OpDecorate %74 RelaxedPrecision 
                                                      OpDecorate %75 RelaxedPrecision 
                                                      OpDecorate %76 RelaxedPrecision 
                                                      OpDecorate %80 RelaxedPrecision 
                                                      OpDecorate %81 RelaxedPrecision 
                                                      OpDecorate %84 RelaxedPrecision 
                                                      OpDecorate %86 RelaxedPrecision 
                                                      OpDecorate %87 RelaxedPrecision 
                                                      OpDecorate %90 RelaxedPrecision 
                                                      OpDecorate %91 RelaxedPrecision 
                                                      OpDecorate %94 RelaxedPrecision 
                                                      OpDecorate %96 RelaxedPrecision 
                                                      OpDecorate %98 RelaxedPrecision 
                                                      OpDecorate %101 RelaxedPrecision 
                                                      OpDecorate %103 RelaxedPrecision 
                                                      OpDecorate %104 RelaxedPrecision 
                                                      OpDecorate %107 RelaxedPrecision 
                                                      OpDecorate %109 RelaxedPrecision 
                                                      OpDecorate %110 RelaxedPrecision 
                                                      OpDecorate %114 RelaxedPrecision 
                                                      OpDecorate %115 RelaxedPrecision 
                                                      OpDecorate %116 RelaxedPrecision 
                                                      OpDecorate %119 RelaxedPrecision 
                                                      OpDecorate %120 RelaxedPrecision 
                                                      OpDecorate %121 RelaxedPrecision 
                                                      OpDecorate %123 RelaxedPrecision 
                                                      OpDecorate %124 RelaxedPrecision 
                                                      OpDecorate %125 RelaxedPrecision 
                                                      OpDecorate %126 RelaxedPrecision 
                                                      OpDecorate %128 RelaxedPrecision 
                                                      OpDecorate %129 RelaxedPrecision 
                                                      OpDecorate %130 RelaxedPrecision 
                                                      OpDecorate %131 RelaxedPrecision 
                                                      OpDecorate %132 RelaxedPrecision 
                                                      OpDecorate %133 RelaxedPrecision 
                                                      OpDecorate %135 RelaxedPrecision 
                                                      OpDecorate %136 RelaxedPrecision 
                                                      OpDecorate %137 RelaxedPrecision 
                                                      OpDecorate %138 RelaxedPrecision 
                                                      OpDecorate %139 RelaxedPrecision 
                                                      OpDecorate %140 RelaxedPrecision 
                                                      OpDecorate %141 RelaxedPrecision 
                                                      OpDecorate %142 RelaxedPrecision 
                                                      OpDecorate %143 RelaxedPrecision 
                                                      OpDecorate %151 RelaxedPrecision 
                                                      OpDecorate %154 RelaxedPrecision 
                                                      OpDecorate %160 RelaxedPrecision 
                                                      OpDecorate %167 RelaxedPrecision 
                                                      OpDecorate %172 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD3 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD3 Location 173 
                                                      OpDecorate %174 RelaxedPrecision 
                                                      OpDecorate %175 RelaxedPrecision 
                                                      OpDecorate %176 RelaxedPrecision 
                                                      OpDecorate %178 RelaxedPrecision 
                                                      OpDecorate %180 RelaxedPrecision 
                                                      OpDecorate %181 RelaxedPrecision 
                                                      OpDecorate %197 RelaxedPrecision 
                                                      OpDecorate %200 RelaxedPrecision 
                                                      OpDecorate %200 DescriptorSet 200 
                                                      OpDecorate %200 Binding 200 
                                                      OpDecorate %201 RelaxedPrecision 
                                                      OpDecorate %204 RelaxedPrecision 
                                                      OpDecorate %204 DescriptorSet 204 
                                                      OpDecorate %204 Binding 204 
                                                      OpDecorate %205 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD0 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD0 Location 210 
                                                      OpDecorate %211 RelaxedPrecision 
                                                      OpDecorate %212 RelaxedPrecision 
                                                      OpDecorate %213 RelaxedPrecision 
                                                      OpDecorate %214 RelaxedPrecision 
                                                      OpDecorate %217 RelaxedPrecision 
                                                      OpDecorate %218 RelaxedPrecision 
                                                      OpDecorate %219 RelaxedPrecision 
                                                      OpDecorate %221 RelaxedPrecision 
                                                      OpDecorate %221 Location 221 
                                                      OpDecorate %223 RelaxedPrecision 
                                                      OpDecorate %225 RelaxedPrecision 
                                                      OpDecorate %226 RelaxedPrecision 
                                                      OpDecorate %229 RelaxedPrecision 
                                                      OpDecorate %231 RelaxedPrecision 
                                                      OpDecorate %233 RelaxedPrecision 
                                                      OpDecorate %236 RelaxedPrecision 
                                                      OpDecorate %237 RelaxedPrecision 
                                                      OpDecorate %238 RelaxedPrecision 
                                                      OpDecorate %239 RelaxedPrecision 
                                                      OpDecorate %240 RelaxedPrecision 
                                                      OpDecorate %241 RelaxedPrecision 
                                                      OpDecorate %242 RelaxedPrecision 
                                                      OpDecorate %243 RelaxedPrecision 
                                               %2 = OpTypeVoid 
                                               %3 = OpTypeFunction %2 
                                               %6 = OpTypeFloat 32 
                                               %7 = OpTypeVector %6 3 
                                               %8 = OpTypePointer Private %7 
                                Private f32_3* %9 = OpVariable Private 
                                              %10 = OpTypePointer Input %7 
                        Input f32_3* vs_TEXCOORD1 = OpVariable Input 
                                              %15 = OpTypeInt 32 0 
                                          u32 %16 = OpConstant 0 
                                              %17 = OpTypePointer Private %6 
                                              %28 = OpTypeVector %6 4 
                                              %29 = OpTypeStruct %28 %28 %28 %28 %28 %28 %28 %28 %6 %6 
                                              %30 = OpTypePointer Uniform %29 
Uniform struct {f32_4; f32_4; f32_4; f32_4; f32_4; f32_4; f32_4; f32_4; f32; f32;}* %31 = OpVariable Uniform 
                                              %32 = OpTypeInt 32 1 
                                          i32 %33 = OpConstant 0 
                                              %34 = OpTypePointer Uniform %28 
                                          f32 %42 = OpConstant 3.674022E-40 
                               Private f32_3* %45 = OpVariable Private 
                                          i32 %46 = OpConstant 9 
                                              %47 = OpTypePointer Uniform %6 
                                          f32 %51 = OpConstant 3.674022E-40 
                                          i32 %53 = OpConstant 8 
                                 Private f32* %65 = OpVariable Private 
                                          f32 %78 = OpConstant 3.674022E-40 
                                          f32 %95 = OpConstant 3.674022E-40 
                                          f32 %97 = OpConstant 3.674022E-40 
                                         i32 %112 = OpConstant 6 
                                         i32 %117 = OpConstant 7 
                              Private f32_3* %131 = OpVariable Private 
                                             %144 = OpTypePointer Private %28 
                              Private f32_4* %145 = OpVariable Private 
                                         u32 %149 = OpConstant 3 
                              Private f32_3* %151 = OpVariable Private 
                                         i32 %152 = OpConstant 1 
                                         i32 %158 = OpConstant 2 
                                         u32 %163 = OpConstant 1 
                                         i32 %165 = OpConstant 3 
                                         u32 %170 = OpConstant 2 
                        Input f32_3* vs_TEXCOORD3 = OpVariable Input 
                                       f32_3 %177 = OpConstantComposite %42 %42 %42 
                              Private f32_3* %179 = OpVariable Private 
                                         f32 %183 = OpConstant 3.674022E-40 
                                       f32_3 %184 = OpConstantComposite %183 %183 %183 
                                         f32 %189 = OpConstant 3.674022E-40 
                                       f32_3 %190 = OpConstantComposite %189 %189 %189 
                                         f32 %192 = OpConstant 3.674022E-40 
                                       f32_3 %193 = OpConstantComposite %192 %192 %192 
                              Private f32_4* %197 = OpVariable Private 
                                             %198 = OpTypeImage %6 Dim2D 0 0 0 1 Unknown 
                                             %199 = OpTypePointer UniformConstant %198 
        UniformConstant read_only Texture2D* %200 = OpVariable UniformConstant 
                                             %202 = OpTypeSampler 
                                             %203 = OpTypePointer UniformConstant %202 
                    UniformConstant sampler* %204 = OpVariable UniformConstant 
                                             %206 = OpTypeSampledImage %198 
                                             %208 = OpTypeVector %6 2 
                                             %209 = OpTypePointer Input %208 
                        Input f32_2* vs_TEXCOORD0 = OpVariable Input 
                                         i32 %215 = OpConstant 5 
                                             %220 = OpTypePointer Output %28 
                               Output f32_4* %221 = OpVariable Output 
                                             %227 = OpTypePointer Output %6 
                              Private f32_3* %229 = OpVariable Private 
                                         i32 %234 = OpConstant 4 
                                          void %4 = OpFunction None %3 
                                               %5 = OpLabel 
                                        f32_3 %12 = OpLoad vs_TEXCOORD1 
                                        f32_3 %13 = OpLoad vs_TEXCOORD1 
                                          f32 %14 = OpDot %12 %13 
                                 Private f32* %18 = OpAccessChain %9 %16 
                                                      OpStore %18 %14 
                                 Private f32* %19 = OpAccessChain %9 %16 
                                          f32 %20 = OpLoad %19 
                                          f32 %21 = OpExtInst %1 32 %20 
                                 Private f32* %22 = OpAccessChain %9 %16 
                                                      OpStore %22 %21 
                                        f32_3 %23 = OpLoad %9 
                                        f32_3 %24 = OpVectorShuffle %23 %23 0 0 0 
                                        f32_3 %25 = OpLoad vs_TEXCOORD1 
                                        f32_3 %26 = OpFMul %24 %25 
                                                      OpStore %9 %26 
                                        f32_3 %27 = OpLoad %9 
                               Uniform f32_4* %35 = OpAccessChain %31 %33 
                                        f32_4 %36 = OpLoad %35 
                                        f32_3 %37 = OpVectorShuffle %36 %36 0 1 2 
                                          f32 %38 = OpDot %27 %37 
                                 Private f32* %39 = OpAccessChain %9 %16 
                                                      OpStore %39 %38 
                                 Private f32* %40 = OpAccessChain %9 %16 
                                          f32 %41 = OpLoad %40 
                                          f32 %43 = OpExtInst %1 40 %41 %42 
                                 Private f32* %44 = OpAccessChain %9 %16 
                                                      OpStore %44 %43 
                                 Uniform f32* %48 = OpAccessChain %31 %46 
                                          f32 %49 = OpLoad %48 
                                          f32 %50 = OpFNegate %49 
                                          f32 %52 = OpFMul %50 %51 
                                 Uniform f32* %54 = OpAccessChain %31 %53 
                                          f32 %55 = OpLoad %54 
                                          f32 %56 = OpFAdd %52 %55 
                                 Private f32* %57 = OpAccessChain %45 %16 
                                                      OpStore %57 %56 
                                 Private f32* %58 = OpAccessChain %45 %16 
                                          f32 %59 = OpLoad %58 
                                          f32 %60 = OpFNegate %59 
                                 Private f32* %61 = OpAccessChain %9 %16 
                                          f32 %62 = OpLoad %61 
                                          f32 %63 = OpFAdd %60 %62 
                                 Private f32* %64 = OpAccessChain %9 %16 
                                                      OpStore %64 %63 
                                 Uniform f32* %66 = OpAccessChain %31 %46 
                                          f32 %67 = OpLoad %66 
                                          f32 %68 = OpFMul %67 %51 
                                 Uniform f32* %69 = OpAccessChain %31 %53 
                                          f32 %70 = OpLoad %69 
                                          f32 %71 = OpFAdd %68 %70 
                                                      OpStore %65 %71 
                                 Private f32* %72 = OpAccessChain %45 %16 
                                          f32 %73 = OpLoad %72 
                                          f32 %74 = OpFNegate %73 
                                          f32 %75 = OpLoad %65 
                                          f32 %76 = OpFAdd %74 %75 
                                 Private f32* %77 = OpAccessChain %45 %16 
                                                      OpStore %77 %76 
                                 Private f32* %79 = OpAccessChain %45 %16 
                                          f32 %80 = OpLoad %79 
                                          f32 %81 = OpFDiv %78 %80 
                                 Private f32* %82 = OpAccessChain %45 %16 
                                                      OpStore %82 %81 
                                 Private f32* %83 = OpAccessChain %45 %16 
                                          f32 %84 = OpLoad %83 
                                 Private f32* %85 = OpAccessChain %9 %16 
                                          f32 %86 = OpLoad %85 
                                          f32 %87 = OpFMul %84 %86 
                                 Private f32* %88 = OpAccessChain %9 %16 
                                                      OpStore %88 %87 
                                 Private f32* %89 = OpAccessChain %9 %16 
                                          f32 %90 = OpLoad %89 
                                          f32 %91 = OpExtInst %1 43 %90 %42 %78 
                                 Private f32* %92 = OpAccessChain %9 %16 
                                                      OpStore %92 %91 
                                 Private f32* %93 = OpAccessChain %9 %16 
                                          f32 %94 = OpLoad %93 
                                          f32 %96 = OpFMul %94 %95 
                                          f32 %98 = OpFAdd %96 %97 
                                 Private f32* %99 = OpAccessChain %45 %16 
                                                      OpStore %99 %98 
                                Private f32* %100 = OpAccessChain %9 %16 
                                         f32 %101 = OpLoad %100 
                                Private f32* %102 = OpAccessChain %9 %16 
                                         f32 %103 = OpLoad %102 
                                         f32 %104 = OpFMul %101 %103 
                                Private f32* %105 = OpAccessChain %9 %16 
                                                      OpStore %105 %104 
                                Private f32* %106 = OpAccessChain %9 %16 
                                         f32 %107 = OpLoad %106 
                                Private f32* %108 = OpAccessChain %45 %16 
                                         f32 %109 = OpLoad %108 
                                         f32 %110 = OpFMul %107 %109 
                                Private f32* %111 = OpAccessChain %9 %16 
                                                      OpStore %111 %110 
                              Uniform f32_4* %113 = OpAccessChain %31 %112 
                                       f32_4 %114 = OpLoad %113 
                                       f32_3 %115 = OpVectorShuffle %114 %114 0 1 2 
                                       f32_3 %116 = OpFNegate %115 
                              Uniform f32_4* %118 = OpAccessChain %31 %117 
                                       f32_4 %119 = OpLoad %118 
                                       f32_3 %120 = OpVectorShuffle %119 %119 0 1 2 
                                       f32_3 %121 = OpFAdd %116 %120 
                                                      OpStore %45 %121 
                              Uniform f32_4* %122 = OpAccessChain %31 %117 
                                       f32_4 %123 = OpLoad %122 
                                       f32_3 %124 = OpVectorShuffle %123 %123 3 3 3 
                                       f32_3 %125 = OpLoad %45 
                                       f32_3 %126 = OpFMul %124 %125 
                              Uniform f32_4* %127 = OpAccessChain %31 %112 
                                       f32_4 %128 = OpLoad %127 
                                       f32_3 %129 = OpVectorShuffle %128 %128 0 1 2 
                                       f32_3 %130 = OpFAdd %126 %129 
                                                      OpStore %45 %130 
                                       f32_3 %132 = OpLoad %45 
                                       f32_3 %133 = OpFNegate %132 
                              Uniform f32_4* %134 = OpAccessChain %31 %112 
                                       f32_4 %135 = OpLoad %134 
                                       f32_3 %136 = OpVectorShuffle %135 %135 0 1 2 
                                       f32_3 %137 = OpFAdd %133 %136 
                                                      OpStore %131 %137 
                                       f32_3 %138 = OpLoad %9 
                                       f32_3 %139 = OpVectorShuffle %138 %138 0 0 0 
                                       f32_3 %140 = OpLoad %131 
                                       f32_3 %141 = OpFMul %139 %140 
                                       f32_3 %142 = OpLoad %45 
                                       f32_3 %143 = OpFAdd %141 %142 
                                                      OpStore %9 %143 
                                       f32_3 %146 = OpLoad vs_TEXCOORD1 
                                       f32_4 %147 = OpLoad %145 
                                       f32_4 %148 = OpVectorShuffle %147 %146 4 5 6 3 
                                                      OpStore %145 %148 
                                Private f32* %150 = OpAccessChain %145 %149 
                                                      OpStore %150 %78 
                              Uniform f32_4* %153 = OpAccessChain %31 %152 
                                       f32_4 %154 = OpLoad %153 
                                       f32_4 %155 = OpLoad %145 
                                         f32 %156 = OpDot %154 %155 
                                Private f32* %157 = OpAccessChain %151 %16 
                                                      OpStore %157 %156 
                              Uniform f32_4* %159 = OpAccessChain %31 %158 
                                       f32_4 %160 = OpLoad %159 
                                       f32_4 %161 = OpLoad %145 
                                         f32 %162 = OpDot %160 %161 
                                Private f32* %164 = OpAccessChain %151 %163 
                                                      OpStore %164 %162 
                              Uniform f32_4* %166 = OpAccessChain %31 %165 
                                       f32_4 %167 = OpLoad %166 
                                       f32_4 %168 = OpLoad %145 
                                         f32 %169 = OpDot %167 %168 
                                Private f32* %171 = OpAccessChain %151 %170 
                                                      OpStore %171 %169 
                                       f32_3 %172 = OpLoad %151 
                                       f32_3 %174 = OpLoad vs_TEXCOORD3 
                                       f32_3 %175 = OpFAdd %172 %174 
                                                      OpStore %151 %175 
                                       f32_3 %176 = OpLoad %151 
                                       f32_3 %178 = OpExtInst %1 40 %176 %177 
                                                      OpStore %151 %178 
                                       f32_3 %180 = OpLoad %151 
                                       f32_3 %181 = OpExtInst %1 30 %180 
                                                      OpStore %179 %181 
                                       f32_3 %182 = OpLoad %179 
                                       f32_3 %185 = OpFMul %182 %184 
                                                      OpStore %179 %185 
                                       f32_3 %186 = OpLoad %179 
                                       f32_3 %187 = OpExtInst %1 29 %186 
                                                      OpStore %179 %187 
                                       f32_3 %188 = OpLoad %179 
                                       f32_3 %191 = OpFMul %188 %190 
                                       f32_3 %194 = OpFAdd %191 %193 
                                                      OpStore %179 %194 
                                       f32_3 %195 = OpLoad %179 
                                       f32_3 %196 = OpExtInst %1 40 %195 %177 
                                                      OpStore %179 %196 
                         read_only Texture2D %201 = OpLoad %200 
                                     sampler %205 = OpLoad %204 
                  read_only Texture2DSampled %207 = OpSampledImage %201 %205 
                                       f32_2 %211 = OpLoad vs_TEXCOORD0 
                                       f32_4 %212 = OpImageSampleImplicitLod %207 %211 
                                                      OpStore %197 %212 
                                       f32_4 %213 = OpLoad %197 
                                       f32_3 %214 = OpVectorShuffle %213 %213 0 1 2 
                              Uniform f32_4* %216 = OpAccessChain %31 %215 
                                       f32_4 %217 = OpLoad %216 
                                       f32_3 %218 = OpVectorShuffle %217 %217 0 1 2 
                                       f32_3 %219 = OpFMul %214 %218 
                                                      OpStore %151 %219 
                                Private f32* %222 = OpAccessChain %197 %149 
                                         f32 %223 = OpLoad %222 
                                Uniform f32* %224 = OpAccessChain %31 %215 %149 
                                         f32 %225 = OpLoad %224 
                                         f32 %226 = OpFMul %223 %225 
                                 Output f32* %228 = OpAccessChain %221 %149 
                                                      OpStore %228 %226 
                                       f32_3 %230 = OpLoad %179 
                                       f32_3 %231 = OpLoad %151 
                                       f32_3 %232 = OpFMul %230 %231 
                                                      OpStore %229 %232 
                                       f32_3 %233 = OpLoad %151 
                              Uniform f32_4* %235 = OpAccessChain %31 %234 
                                       f32_4 %236 = OpLoad %235 
                                       f32_3 %237 = OpVectorShuffle %236 %236 0 1 2 
                                       f32_3 %238 = OpFMul %233 %237 
                                                      OpStore %151 %238 
                                       f32_3 %239 = OpLoad %151 
                                       f32_3 %240 = OpLoad %9 
                                       f32_3 %241 = OpFMul %239 %240 
                                       f32_3 %242 = OpLoad %229 
                                       f32_3 %243 = OpFAdd %241 %242 
                                       f32_4 %244 = OpLoad %221 
                                       f32_4 %245 = OpVectorShuffle %244 %243 4 5 6 3 
                                                      OpStore %221 %245 
                                                      OpReturn
                                                      OpFunctionEnd
"
}
SubProgram "gles3 hw_tier00 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "VERTEXLIGHT_ON" }
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in highp vec3 in_NORMAL0;
in highp vec4 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out highp vec3 vs_TEXCOORD1;
out highp vec3 vs_TEXCOORD2;
out highp vec4 vs_TEXCOORD5;
out highp vec4 vs_TEXCOORD6;
vec4 u_xlat0;
vec4 u_xlat1;
float u_xlat6;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    vs_TEXCOORD2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
    u_xlat0 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat0;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat0;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat0.xy;
    u_xlat0.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat6 = dot(u_xlat0.xyz, u_xlat0.xyz);
    u_xlat6 = inversesqrt(u_xlat6);
    vs_TEXCOORD1.xyz = vec3(u_xlat6) * u_xlat0.xyz;
    vs_TEXCOORD5 = vec4(0.0, 0.0, 0.0, 0.0);
    vs_TEXCOORD6 = vec4(0.0, 0.0, 0.0, 0.0);
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es
#ifdef GL_EXT_shader_texture_lod
#extension GL_EXT_shader_texture_lod : enable
#endif

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec3 _WorldSpaceCameraPos;
uniform 	mediump vec4 _WorldSpaceLightPos0;
uniform 	vec4 hlslcc_mtx4x4unity_WorldToShadow[16];
uniform 	mediump vec4 _LightShadowData;
uniform 	vec4 unity_ShadowFadeCenterAndType;
uniform 	vec4 hlslcc_mtx4x4unity_MatrixV[4];
uniform 	mediump vec4 _LightColor0;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 _HColor;
uniform 	mediump vec4 _SColor;
uniform 	mediump float _RampThreshold;
uniform 	mediump float _RampSmooth;
UNITY_LOCATION(0) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(1) uniform highp sampler2D _ShadowMapTexture;
UNITY_LOCATION(2) uniform highp sampler2DShadow hlslcc_zcmp_ShadowMapTexture;
in mediump vec2 vs_TEXCOORD0;
in highp vec3 vs_TEXCOORD1;
in highp vec3 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec4 u_xlat16_0;
vec3 u_xlat1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
vec3 u_xlat4;
mediump vec3 u_xlat16_6;
mediump float u_xlat16_10;
mediump float u_xlat16_14;
void main()
{
    u_xlat0.xyz = vs_TEXCOORD2.xyz + (-unity_ShadowFadeCenterAndType.xyz);
    u_xlat0.x = dot(u_xlat0.xyz, u_xlat0.xyz);
    u_xlat0.x = sqrt(u_xlat0.x);
    u_xlat4.xyz = (-vs_TEXCOORD2.xyz) + _WorldSpaceCameraPos.xyz;
    u_xlat1.x = hlslcc_mtx4x4unity_MatrixV[0].z;
    u_xlat1.y = hlslcc_mtx4x4unity_MatrixV[1].z;
    u_xlat1.z = hlslcc_mtx4x4unity_MatrixV[2].z;
    u_xlat4.x = dot(u_xlat4.xyz, u_xlat1.xyz);
    u_xlat0.x = (-u_xlat4.x) + u_xlat0.x;
    u_xlat0.x = unity_ShadowFadeCenterAndType.w * u_xlat0.x + u_xlat4.x;
    u_xlat0.x = u_xlat0.x * _LightShadowData.z + _LightShadowData.w;
#ifdef UNITY_ADRENO_ES3
    u_xlat0.x = min(max(u_xlat0.x, 0.0), 1.0);
#else
    u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);
#endif
    u_xlat4.xyz = vs_TEXCOORD2.yyy * hlslcc_mtx4x4unity_WorldToShadow[1].xyz;
    u_xlat4.xyz = hlslcc_mtx4x4unity_WorldToShadow[0].xyz * vs_TEXCOORD2.xxx + u_xlat4.xyz;
    u_xlat4.xyz = hlslcc_mtx4x4unity_WorldToShadow[2].xyz * vs_TEXCOORD2.zzz + u_xlat4.xyz;
    u_xlat4.xyz = u_xlat4.xyz + hlslcc_mtx4x4unity_WorldToShadow[3].xyz;
    vec3 txVec0 = vec3(u_xlat4.xy,u_xlat4.z);
    u_xlat4.x = textureLod(hlslcc_zcmp_ShadowMapTexture, txVec0, 0.0);
    u_xlat16_2.x = (-_LightShadowData.x) + 1.0;
    u_xlat16_2.x = u_xlat4.x * u_xlat16_2.x + _LightShadowData.x;
    u_xlat16_6.x = (-u_xlat16_2.x) + 1.0;
    u_xlat16_2.x = u_xlat0.x * u_xlat16_6.x + u_xlat16_2.x;
    u_xlat16_6.x = dot(vs_TEXCOORD1.xyz, vs_TEXCOORD1.xyz);
    u_xlat16_6.x = inversesqrt(u_xlat16_6.x);
    u_xlat16_6.xyz = u_xlat16_6.xxx * vs_TEXCOORD1.xyz;
    u_xlat16_6.x = dot(u_xlat16_6.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat16_6.x = max(u_xlat16_6.x, 0.0);
    u_xlat16_10 = (-_RampSmooth) * 0.5 + _RampThreshold;
    u_xlat16_6.x = (-u_xlat16_10) + u_xlat16_6.x;
    u_xlat16_14 = _RampSmooth * 0.5 + _RampThreshold;
    u_xlat16_10 = (-u_xlat16_10) + u_xlat16_14;
    u_xlat16_10 = float(1.0) / u_xlat16_10;
    u_xlat16_6.x = u_xlat16_10 * u_xlat16_6.x;
#ifdef UNITY_ADRENO_ES3
    u_xlat16_6.x = min(max(u_xlat16_6.x, 0.0), 1.0);
#else
    u_xlat16_6.x = clamp(u_xlat16_6.x, 0.0, 1.0);
#endif
    u_xlat16_10 = u_xlat16_6.x * -2.0 + 3.0;
    u_xlat16_6.x = u_xlat16_6.x * u_xlat16_6.x;
    u_xlat16_6.x = u_xlat16_6.x * u_xlat16_10;
    u_xlat16_2.x = u_xlat16_2.x * u_xlat16_6.x;
    u_xlat16_6.xyz = (-_HColor.xyz) + _SColor.xyz;
    u_xlat16_6.xyz = _SColor.www * u_xlat16_6.xyz + _HColor.xyz;
    u_xlat16_3.xyz = (-u_xlat16_6.xyz) + _HColor.xyz;
    u_xlat16_2.xyz = u_xlat16_2.xxx * u_xlat16_3.xyz + u_xlat16_6.xyz;
    u_xlat16_0 = texture(_MainTex, vs_TEXCOORD0.xy);
    u_xlat16_3.xyz = u_xlat16_0.xyz * _Color.xyz;
    SV_Target0.w = u_xlat16_0.w * _Color.w;
    u_xlat16_3.xyz = u_xlat16_3.xyz * _LightColor0.xyz;
    SV_Target0.xyz = u_xlat16_2.xyz * u_xlat16_3.xyz;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier01 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "VERTEXLIGHT_ON" }
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in highp vec3 in_NORMAL0;
in highp vec4 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out highp vec3 vs_TEXCOORD1;
out highp vec3 vs_TEXCOORD2;
out highp vec4 vs_TEXCOORD5;
out highp vec4 vs_TEXCOORD6;
vec4 u_xlat0;
vec4 u_xlat1;
float u_xlat6;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    vs_TEXCOORD2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
    u_xlat0 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat0;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat0;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat0.xy;
    u_xlat0.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat6 = dot(u_xlat0.xyz, u_xlat0.xyz);
    u_xlat6 = inversesqrt(u_xlat6);
    vs_TEXCOORD1.xyz = vec3(u_xlat6) * u_xlat0.xyz;
    vs_TEXCOORD5 = vec4(0.0, 0.0, 0.0, 0.0);
    vs_TEXCOORD6 = vec4(0.0, 0.0, 0.0, 0.0);
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es
#ifdef GL_EXT_shader_texture_lod
#extension GL_EXT_shader_texture_lod : enable
#endif

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec3 _WorldSpaceCameraPos;
uniform 	mediump vec4 _WorldSpaceLightPos0;
uniform 	vec4 hlslcc_mtx4x4unity_WorldToShadow[16];
uniform 	mediump vec4 _LightShadowData;
uniform 	vec4 unity_ShadowFadeCenterAndType;
uniform 	vec4 hlslcc_mtx4x4unity_MatrixV[4];
uniform 	mediump vec4 _LightColor0;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 _HColor;
uniform 	mediump vec4 _SColor;
uniform 	mediump float _RampThreshold;
uniform 	mediump float _RampSmooth;
UNITY_LOCATION(0) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(1) uniform highp sampler2D _ShadowMapTexture;
UNITY_LOCATION(2) uniform highp sampler2DShadow hlslcc_zcmp_ShadowMapTexture;
in mediump vec2 vs_TEXCOORD0;
in highp vec3 vs_TEXCOORD1;
in highp vec3 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec4 u_xlat16_0;
vec3 u_xlat1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
vec3 u_xlat4;
mediump vec3 u_xlat16_6;
mediump float u_xlat16_10;
mediump float u_xlat16_14;
void main()
{
    u_xlat0.xyz = vs_TEXCOORD2.xyz + (-unity_ShadowFadeCenterAndType.xyz);
    u_xlat0.x = dot(u_xlat0.xyz, u_xlat0.xyz);
    u_xlat0.x = sqrt(u_xlat0.x);
    u_xlat4.xyz = (-vs_TEXCOORD2.xyz) + _WorldSpaceCameraPos.xyz;
    u_xlat1.x = hlslcc_mtx4x4unity_MatrixV[0].z;
    u_xlat1.y = hlslcc_mtx4x4unity_MatrixV[1].z;
    u_xlat1.z = hlslcc_mtx4x4unity_MatrixV[2].z;
    u_xlat4.x = dot(u_xlat4.xyz, u_xlat1.xyz);
    u_xlat0.x = (-u_xlat4.x) + u_xlat0.x;
    u_xlat0.x = unity_ShadowFadeCenterAndType.w * u_xlat0.x + u_xlat4.x;
    u_xlat0.x = u_xlat0.x * _LightShadowData.z + _LightShadowData.w;
#ifdef UNITY_ADRENO_ES3
    u_xlat0.x = min(max(u_xlat0.x, 0.0), 1.0);
#else
    u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);
#endif
    u_xlat4.xyz = vs_TEXCOORD2.yyy * hlslcc_mtx4x4unity_WorldToShadow[1].xyz;
    u_xlat4.xyz = hlslcc_mtx4x4unity_WorldToShadow[0].xyz * vs_TEXCOORD2.xxx + u_xlat4.xyz;
    u_xlat4.xyz = hlslcc_mtx4x4unity_WorldToShadow[2].xyz * vs_TEXCOORD2.zzz + u_xlat4.xyz;
    u_xlat4.xyz = u_xlat4.xyz + hlslcc_mtx4x4unity_WorldToShadow[3].xyz;
    vec3 txVec0 = vec3(u_xlat4.xy,u_xlat4.z);
    u_xlat4.x = textureLod(hlslcc_zcmp_ShadowMapTexture, txVec0, 0.0);
    u_xlat16_2.x = (-_LightShadowData.x) + 1.0;
    u_xlat16_2.x = u_xlat4.x * u_xlat16_2.x + _LightShadowData.x;
    u_xlat16_6.x = (-u_xlat16_2.x) + 1.0;
    u_xlat16_2.x = u_xlat0.x * u_xlat16_6.x + u_xlat16_2.x;
    u_xlat16_6.x = dot(vs_TEXCOORD1.xyz, vs_TEXCOORD1.xyz);
    u_xlat16_6.x = inversesqrt(u_xlat16_6.x);
    u_xlat16_6.xyz = u_xlat16_6.xxx * vs_TEXCOORD1.xyz;
    u_xlat16_6.x = dot(u_xlat16_6.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat16_6.x = max(u_xlat16_6.x, 0.0);
    u_xlat16_10 = (-_RampSmooth) * 0.5 + _RampThreshold;
    u_xlat16_6.x = (-u_xlat16_10) + u_xlat16_6.x;
    u_xlat16_14 = _RampSmooth * 0.5 + _RampThreshold;
    u_xlat16_10 = (-u_xlat16_10) + u_xlat16_14;
    u_xlat16_10 = float(1.0) / u_xlat16_10;
    u_xlat16_6.x = u_xlat16_10 * u_xlat16_6.x;
#ifdef UNITY_ADRENO_ES3
    u_xlat16_6.x = min(max(u_xlat16_6.x, 0.0), 1.0);
#else
    u_xlat16_6.x = clamp(u_xlat16_6.x, 0.0, 1.0);
#endif
    u_xlat16_10 = u_xlat16_6.x * -2.0 + 3.0;
    u_xlat16_6.x = u_xlat16_6.x * u_xlat16_6.x;
    u_xlat16_6.x = u_xlat16_6.x * u_xlat16_10;
    u_xlat16_2.x = u_xlat16_2.x * u_xlat16_6.x;
    u_xlat16_6.xyz = (-_HColor.xyz) + _SColor.xyz;
    u_xlat16_6.xyz = _SColor.www * u_xlat16_6.xyz + _HColor.xyz;
    u_xlat16_3.xyz = (-u_xlat16_6.xyz) + _HColor.xyz;
    u_xlat16_2.xyz = u_xlat16_2.xxx * u_xlat16_3.xyz + u_xlat16_6.xyz;
    u_xlat16_0 = texture(_MainTex, vs_TEXCOORD0.xy);
    u_xlat16_3.xyz = u_xlat16_0.xyz * _Color.xyz;
    SV_Target0.w = u_xlat16_0.w * _Color.w;
    u_xlat16_3.xyz = u_xlat16_3.xyz * _LightColor0.xyz;
    SV_Target0.xyz = u_xlat16_2.xyz * u_xlat16_3.xyz;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier02 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "VERTEXLIGHT_ON" }
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in highp vec3 in_NORMAL0;
in highp vec4 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out highp vec3 vs_TEXCOORD1;
out highp vec3 vs_TEXCOORD2;
out highp vec4 vs_TEXCOORD5;
out highp vec4 vs_TEXCOORD6;
vec4 u_xlat0;
vec4 u_xlat1;
float u_xlat6;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    vs_TEXCOORD2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
    u_xlat0 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat0;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat0;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat0.xy;
    u_xlat0.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat6 = dot(u_xlat0.xyz, u_xlat0.xyz);
    u_xlat6 = inversesqrt(u_xlat6);
    vs_TEXCOORD1.xyz = vec3(u_xlat6) * u_xlat0.xyz;
    vs_TEXCOORD5 = vec4(0.0, 0.0, 0.0, 0.0);
    vs_TEXCOORD6 = vec4(0.0, 0.0, 0.0, 0.0);
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es
#ifdef GL_EXT_shader_texture_lod
#extension GL_EXT_shader_texture_lod : enable
#endif

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec3 _WorldSpaceCameraPos;
uniform 	mediump vec4 _WorldSpaceLightPos0;
uniform 	vec4 hlslcc_mtx4x4unity_WorldToShadow[16];
uniform 	mediump vec4 _LightShadowData;
uniform 	vec4 unity_ShadowFadeCenterAndType;
uniform 	vec4 hlslcc_mtx4x4unity_MatrixV[4];
uniform 	mediump vec4 _LightColor0;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 _HColor;
uniform 	mediump vec4 _SColor;
uniform 	mediump float _RampThreshold;
uniform 	mediump float _RampSmooth;
UNITY_LOCATION(0) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(1) uniform highp sampler2D _ShadowMapTexture;
UNITY_LOCATION(2) uniform highp sampler2DShadow hlslcc_zcmp_ShadowMapTexture;
in mediump vec2 vs_TEXCOORD0;
in highp vec3 vs_TEXCOORD1;
in highp vec3 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec4 u_xlat16_0;
vec3 u_xlat1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
vec3 u_xlat4;
mediump vec3 u_xlat16_6;
mediump float u_xlat16_10;
mediump float u_xlat16_14;
void main()
{
    u_xlat0.xyz = vs_TEXCOORD2.xyz + (-unity_ShadowFadeCenterAndType.xyz);
    u_xlat0.x = dot(u_xlat0.xyz, u_xlat0.xyz);
    u_xlat0.x = sqrt(u_xlat0.x);
    u_xlat4.xyz = (-vs_TEXCOORD2.xyz) + _WorldSpaceCameraPos.xyz;
    u_xlat1.x = hlslcc_mtx4x4unity_MatrixV[0].z;
    u_xlat1.y = hlslcc_mtx4x4unity_MatrixV[1].z;
    u_xlat1.z = hlslcc_mtx4x4unity_MatrixV[2].z;
    u_xlat4.x = dot(u_xlat4.xyz, u_xlat1.xyz);
    u_xlat0.x = (-u_xlat4.x) + u_xlat0.x;
    u_xlat0.x = unity_ShadowFadeCenterAndType.w * u_xlat0.x + u_xlat4.x;
    u_xlat0.x = u_xlat0.x * _LightShadowData.z + _LightShadowData.w;
#ifdef UNITY_ADRENO_ES3
    u_xlat0.x = min(max(u_xlat0.x, 0.0), 1.0);
#else
    u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);
#endif
    u_xlat4.xyz = vs_TEXCOORD2.yyy * hlslcc_mtx4x4unity_WorldToShadow[1].xyz;
    u_xlat4.xyz = hlslcc_mtx4x4unity_WorldToShadow[0].xyz * vs_TEXCOORD2.xxx + u_xlat4.xyz;
    u_xlat4.xyz = hlslcc_mtx4x4unity_WorldToShadow[2].xyz * vs_TEXCOORD2.zzz + u_xlat4.xyz;
    u_xlat4.xyz = u_xlat4.xyz + hlslcc_mtx4x4unity_WorldToShadow[3].xyz;
    vec3 txVec0 = vec3(u_xlat4.xy,u_xlat4.z);
    u_xlat4.x = textureLod(hlslcc_zcmp_ShadowMapTexture, txVec0, 0.0);
    u_xlat16_2.x = (-_LightShadowData.x) + 1.0;
    u_xlat16_2.x = u_xlat4.x * u_xlat16_2.x + _LightShadowData.x;
    u_xlat16_6.x = (-u_xlat16_2.x) + 1.0;
    u_xlat16_2.x = u_xlat0.x * u_xlat16_6.x + u_xlat16_2.x;
    u_xlat16_6.x = dot(vs_TEXCOORD1.xyz, vs_TEXCOORD1.xyz);
    u_xlat16_6.x = inversesqrt(u_xlat16_6.x);
    u_xlat16_6.xyz = u_xlat16_6.xxx * vs_TEXCOORD1.xyz;
    u_xlat16_6.x = dot(u_xlat16_6.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat16_6.x = max(u_xlat16_6.x, 0.0);
    u_xlat16_10 = (-_RampSmooth) * 0.5 + _RampThreshold;
    u_xlat16_6.x = (-u_xlat16_10) + u_xlat16_6.x;
    u_xlat16_14 = _RampSmooth * 0.5 + _RampThreshold;
    u_xlat16_10 = (-u_xlat16_10) + u_xlat16_14;
    u_xlat16_10 = float(1.0) / u_xlat16_10;
    u_xlat16_6.x = u_xlat16_10 * u_xlat16_6.x;
#ifdef UNITY_ADRENO_ES3
    u_xlat16_6.x = min(max(u_xlat16_6.x, 0.0), 1.0);
#else
    u_xlat16_6.x = clamp(u_xlat16_6.x, 0.0, 1.0);
#endif
    u_xlat16_10 = u_xlat16_6.x * -2.0 + 3.0;
    u_xlat16_6.x = u_xlat16_6.x * u_xlat16_6.x;
    u_xlat16_6.x = u_xlat16_6.x * u_xlat16_10;
    u_xlat16_2.x = u_xlat16_2.x * u_xlat16_6.x;
    u_xlat16_6.xyz = (-_HColor.xyz) + _SColor.xyz;
    u_xlat16_6.xyz = _SColor.www * u_xlat16_6.xyz + _HColor.xyz;
    u_xlat16_3.xyz = (-u_xlat16_6.xyz) + _HColor.xyz;
    u_xlat16_2.xyz = u_xlat16_2.xxx * u_xlat16_3.xyz + u_xlat16_6.xyz;
    u_xlat16_0 = texture(_MainTex, vs_TEXCOORD0.xy);
    u_xlat16_3.xyz = u_xlat16_0.xyz * _Color.xyz;
    SV_Target0.w = u_xlat16_0.w * _Color.w;
    u_xlat16_3.xyz = u_xlat16_3.xyz * _LightColor0.xyz;
    SV_Target0.xyz = u_xlat16_2.xyz * u_xlat16_3.xyz;
    return;
}

#endif
"
}
SubProgram "vulkan hw_tier00 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "VERTEXLIGHT_ON" }
"; SPIR-V
; Version: 1.0
; Generator: Khronos Glslang Reference Front End; 6
; Bound: 160
; Schema: 0
                                                      OpCapability Shader 
                                               %1 = OpExtInstImport "GLSL.std.450" 
                                                      OpMemoryModel Logical GLSL450 
                                                      OpEntryPoint Vertex %4 "main" %11 %52 %85 %95 %110 %114 %144 %150 %153 
                                                      OpName vs_TEXCOORD2 "vs_TEXCOORD2" 
                                                      OpName vs_TEXCOORD0 "vs_TEXCOORD0" 
                                                      OpName vs_TEXCOORD1 "vs_TEXCOORD1" 
                                                      OpName vs_TEXCOORD5 "vs_TEXCOORD5" 
                                                      OpName vs_TEXCOORD6 "vs_TEXCOORD6" 
                                                      OpDecorate %11 Location 11 
                                                      OpDecorate %16 ArrayStride 16 
                                                      OpDecorate %17 ArrayStride 17 
                                                      OpDecorate %18 ArrayStride 18 
                                                      OpMemberDecorate %19 0 Offset 19 
                                                      OpMemberDecorate %19 1 Offset 19 
                                                      OpMemberDecorate %19 2 Offset 19 
                                                      OpMemberDecorate %19 3 Offset 19 
                                                      OpDecorate %19 Block 
                                                      OpDecorate %21 DescriptorSet 21 
                                                      OpDecorate %21 Binding 21 
                                                      OpDecorate vs_TEXCOORD2 Location 52 
                                                      OpMemberDecorate %83 0 BuiltIn 83 
                                                      OpMemberDecorate %83 1 BuiltIn 83 
                                                      OpMemberDecorate %83 2 BuiltIn 83 
                                                      OpDecorate %83 Block 
                                                      OpDecorate %95 Location 95 
                                                      OpDecorate vs_TEXCOORD0 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD0 Location 110 
                                                      OpDecorate %114 Location 114 
                                                      OpDecorate vs_TEXCOORD1 Location 144 
                                                      OpDecorate vs_TEXCOORD5 Location 150 
                                                      OpDecorate vs_TEXCOORD6 Location 153 
                                               %2 = OpTypeVoid 
                                               %3 = OpTypeFunction %2 
                                               %6 = OpTypeFloat 32 
                                               %7 = OpTypeVector %6 4 
                                               %8 = OpTypePointer Private %7 
                                Private f32_4* %9 = OpVariable Private 
                                              %10 = OpTypePointer Input %7 
                                 Input f32_4* %11 = OpVariable Input 
                                              %14 = OpTypeInt 32 0 
                                          u32 %15 = OpConstant 4 
                                              %16 = OpTypeArray %7 %15 
                                              %17 = OpTypeArray %7 %15 
                                              %18 = OpTypeArray %7 %15 
                                              %19 = OpTypeStruct %16 %17 %18 %7 
                                              %20 = OpTypePointer Uniform %19 
Uniform struct {f32_4[4]; f32_4[4]; f32_4[4]; f32_4;}* %21 = OpVariable Uniform 
                                              %22 = OpTypeInt 32 1 
                                          i32 %23 = OpConstant 0 
                                          i32 %24 = OpConstant 1 
                                              %25 = OpTypePointer Uniform %7 
                                          i32 %36 = OpConstant 2 
                               Private f32_4* %44 = OpVariable Private 
                                          i32 %46 = OpConstant 3 
                                              %50 = OpTypeVector %6 3 
                                              %51 = OpTypePointer Output %50 
                       Output f32_3* vs_TEXCOORD2 = OpVariable Output 
                                          u32 %81 = OpConstant 1 
                                              %82 = OpTypeArray %6 %81 
                                              %83 = OpTypeStruct %7 %6 %82 
                                              %84 = OpTypePointer Output %83 
         Output struct {f32_4; f32; f32[1];}* %85 = OpVariable Output 
                                              %93 = OpTypePointer Output %7 
                                 Input f32_4* %95 = OpVariable Input 
                                              %96 = OpTypeVector %6 2 
                                             %109 = OpTypePointer Output %96 
                       Output f32_2* vs_TEXCOORD0 = OpVariable Output 
                                             %113 = OpTypePointer Input %50 
                                Input f32_3* %114 = OpVariable Input 
                                         u32 %120 = OpConstant 0 
                                             %121 = OpTypePointer Private %6 
                                         u32 %134 = OpConstant 2 
                                Private f32* %136 = OpVariable Private 
                       Output f32_3* vs_TEXCOORD1 = OpVariable Output 
                       Output f32_4* vs_TEXCOORD5 = OpVariable Output 
                                         f32 %151 = OpConstant 3.674022E-40 
                                       f32_4 %152 = OpConstantComposite %151 %151 %151 %151 
                       Output f32_4* vs_TEXCOORD6 = OpVariable Output 
                                             %154 = OpTypePointer Output %6 
                                          void %4 = OpFunction None %3 
                                               %5 = OpLabel 
                                        f32_4 %12 = OpLoad %11 
                                        f32_4 %13 = OpVectorShuffle %12 %12 1 1 1 1 
                               Uniform f32_4* %26 = OpAccessChain %21 %23 %24 
                                        f32_4 %27 = OpLoad %26 
                                        f32_4 %28 = OpFMul %13 %27 
                                                      OpStore %9 %28 
                               Uniform f32_4* %29 = OpAccessChain %21 %23 %23 
                                        f32_4 %30 = OpLoad %29 
                                        f32_4 %31 = OpLoad %11 
                                        f32_4 %32 = OpVectorShuffle %31 %31 0 0 0 0 
                                        f32_4 %33 = OpFMul %30 %32 
                                        f32_4 %34 = OpLoad %9 
                                        f32_4 %35 = OpFAdd %33 %34 
                                                      OpStore %9 %35 
                               Uniform f32_4* %37 = OpAccessChain %21 %23 %36 
                                        f32_4 %38 = OpLoad %37 
                                        f32_4 %39 = OpLoad %11 
                                        f32_4 %40 = OpVectorShuffle %39 %39 2 2 2 2 
                                        f32_4 %41 = OpFMul %38 %40 
                                        f32_4 %42 = OpLoad %9 
                                        f32_4 %43 = OpFAdd %41 %42 
                                                      OpStore %9 %43 
                                        f32_4 %45 = OpLoad %9 
                               Uniform f32_4* %47 = OpAccessChain %21 %23 %46 
                                        f32_4 %48 = OpLoad %47 
                                        f32_4 %49 = OpFAdd %45 %48 
                                                      OpStore %44 %49 
                               Uniform f32_4* %53 = OpAccessChain %21 %23 %46 
                                        f32_4 %54 = OpLoad %53 
                                        f32_3 %55 = OpVectorShuffle %54 %54 0 1 2 
                                        f32_4 %56 = OpLoad %11 
                                        f32_3 %57 = OpVectorShuffle %56 %56 3 3 3 
                                        f32_3 %58 = OpFMul %55 %57 
                                        f32_4 %59 = OpLoad %9 
                                        f32_3 %60 = OpVectorShuffle %59 %59 0 1 2 
                                        f32_3 %61 = OpFAdd %58 %60 
                                                      OpStore vs_TEXCOORD2 %61 
                                        f32_4 %62 = OpLoad %44 
                                        f32_4 %63 = OpVectorShuffle %62 %62 1 1 1 1 
                               Uniform f32_4* %64 = OpAccessChain %21 %36 %24 
                                        f32_4 %65 = OpLoad %64 
                                        f32_4 %66 = OpFMul %63 %65 
                                                      OpStore %9 %66 
                               Uniform f32_4* %67 = OpAccessChain %21 %36 %23 
                                        f32_4 %68 = OpLoad %67 
                                        f32_4 %69 = OpLoad %44 
                                        f32_4 %70 = OpVectorShuffle %69 %69 0 0 0 0 
                                        f32_4 %71 = OpFMul %68 %70 
                                        f32_4 %72 = OpLoad %9 
                                        f32_4 %73 = OpFAdd %71 %72 
                                                      OpStore %9 %73 
                               Uniform f32_4* %74 = OpAccessChain %21 %36 %36 
                                        f32_4 %75 = OpLoad %74 
                                        f32_4 %76 = OpLoad %44 
                                        f32_4 %77 = OpVectorShuffle %76 %76 2 2 2 2 
                                        f32_4 %78 = OpFMul %75 %77 
                                        f32_4 %79 = OpLoad %9 
                                        f32_4 %80 = OpFAdd %78 %79 
                                                      OpStore %9 %80 
                               Uniform f32_4* %86 = OpAccessChain %21 %36 %46 
                                        f32_4 %87 = OpLoad %86 
                                        f32_4 %88 = OpLoad %44 
                                        f32_4 %89 = OpVectorShuffle %88 %88 3 3 3 3 
                                        f32_4 %90 = OpFMul %87 %89 
                                        f32_4 %91 = OpLoad %9 
                                        f32_4 %92 = OpFAdd %90 %91 
                                Output f32_4* %94 = OpAccessChain %85 %23 
                                                      OpStore %94 %92 
                                        f32_4 %97 = OpLoad %95 
                                        f32_2 %98 = OpVectorShuffle %97 %97 0 1 
                               Uniform f32_4* %99 = OpAccessChain %21 %46 
                                       f32_4 %100 = OpLoad %99 
                                       f32_2 %101 = OpVectorShuffle %100 %100 0 1 
                                       f32_2 %102 = OpFMul %98 %101 
                              Uniform f32_4* %103 = OpAccessChain %21 %46 
                                       f32_4 %104 = OpLoad %103 
                                       f32_2 %105 = OpVectorShuffle %104 %104 2 3 
                                       f32_2 %106 = OpFAdd %102 %105 
                                       f32_4 %107 = OpLoad %9 
                                       f32_4 %108 = OpVectorShuffle %107 %106 4 5 2 3 
                                                      OpStore %9 %108 
                                       f32_4 %111 = OpLoad %9 
                                       f32_2 %112 = OpVectorShuffle %111 %111 0 1 
                                                      OpStore vs_TEXCOORD0 %112 
                                       f32_3 %115 = OpLoad %114 
                              Uniform f32_4* %116 = OpAccessChain %21 %24 %23 
                                       f32_4 %117 = OpLoad %116 
                                       f32_3 %118 = OpVectorShuffle %117 %117 0 1 2 
                                         f32 %119 = OpDot %115 %118 
                                Private f32* %122 = OpAccessChain %9 %120 
                                                      OpStore %122 %119 
                                       f32_3 %123 = OpLoad %114 
                              Uniform f32_4* %124 = OpAccessChain %21 %24 %24 
                                       f32_4 %125 = OpLoad %124 
                                       f32_3 %126 = OpVectorShuffle %125 %125 0 1 2 
                                         f32 %127 = OpDot %123 %126 
                                Private f32* %128 = OpAccessChain %9 %81 
                                                      OpStore %128 %127 
                                       f32_3 %129 = OpLoad %114 
                              Uniform f32_4* %130 = OpAccessChain %21 %24 %36 
                                       f32_4 %131 = OpLoad %130 
                                       f32_3 %132 = OpVectorShuffle %131 %131 0 1 2 
                                         f32 %133 = OpDot %129 %132 
                                Private f32* %135 = OpAccessChain %9 %134 
                                                      OpStore %135 %133 
                                       f32_4 %137 = OpLoad %9 
                                       f32_3 %138 = OpVectorShuffle %137 %137 0 1 2 
                                       f32_4 %139 = OpLoad %9 
                                       f32_3 %140 = OpVectorShuffle %139 %139 0 1 2 
                                         f32 %141 = OpDot %138 %140 
                                                      OpStore %136 %141 
                                         f32 %142 = OpLoad %136 
                                         f32 %143 = OpExtInst %1 32 %142 
                                                      OpStore %136 %143 
                                         f32 %145 = OpLoad %136 
                                       f32_3 %146 = OpCompositeConstruct %145 %145 %145 
                                       f32_4 %147 = OpLoad %9 
                                       f32_3 %148 = OpVectorShuffle %147 %147 0 1 2 
                                       f32_3 %149 = OpFMul %146 %148 
                                                      OpStore vs_TEXCOORD1 %149 
                                                      OpStore vs_TEXCOORD5 %152 
                                                      OpStore vs_TEXCOORD6 %152 
                                 Output f32* %155 = OpAccessChain %85 %23 %81 
                                         f32 %156 = OpLoad %155 
                                         f32 %157 = OpFNegate %156 
                                 Output f32* %158 = OpAccessChain %85 %23 %81 
                                                      OpStore %158 %157 
                                                      OpReturn
                                                      OpFunctionEnd
; SPIR-V
; Version: 1.0
; Generator: Khronos Glslang Reference Front End; 6
; Bound: 340
; Schema: 0
                                                      OpCapability Shader 
                                               %1 = OpExtInstImport "GLSL.std.450" 
                                                      OpMemoryModel Logical GLSL450 
                                                      OpEntryPoint Fragment %4 "main" %11 %183 %309 %320 
                                                      OpExecutionMode %4 OriginUpperLeft 
                                                      OpName vs_TEXCOORD2 "vs_TEXCOORD2" 
                                                      OpName vs_TEXCOORD1 "vs_TEXCOORD1" 
                                                      OpName vs_TEXCOORD0 "vs_TEXCOORD0" 
                                                      OpDecorate vs_TEXCOORD2 Location 11 
                                                      OpDecorate %16 ArrayStride 16 
                                                      OpDecorate %18 ArrayStride 18 
                                                      OpMemberDecorate %19 0 Offset 19 
                                                      OpMemberDecorate %19 1 RelaxedPrecision 
                                                      OpMemberDecorate %19 1 Offset 19 
                                                      OpMemberDecorate %19 2 Offset 19 
                                                      OpMemberDecorate %19 3 RelaxedPrecision 
                                                      OpMemberDecorate %19 3 Offset 19 
                                                      OpMemberDecorate %19 4 Offset 19 
                                                      OpMemberDecorate %19 5 Offset 19 
                                                      OpMemberDecorate %19 6 RelaxedPrecision 
                                                      OpMemberDecorate %19 6 Offset 19 
                                                      OpMemberDecorate %19 7 RelaxedPrecision 
                                                      OpMemberDecorate %19 7 Offset 19 
                                                      OpMemberDecorate %19 8 RelaxedPrecision 
                                                      OpMemberDecorate %19 8 Offset 19 
                                                      OpMemberDecorate %19 9 RelaxedPrecision 
                                                      OpMemberDecorate %19 9 Offset 19 
                                                      OpMemberDecorate %19 10 RelaxedPrecision 
                                                      OpMemberDecorate %19 10 Offset 19 
                                                      OpMemberDecorate %19 11 RelaxedPrecision 
                                                      OpMemberDecorate %19 11 Offset 19 
                                                      OpDecorate %19 Block 
                                                      OpDecorate %21 DescriptorSet 21 
                                                      OpDecorate %21 Binding 21 
                                                      OpDecorate %89 RelaxedPrecision 
                                                      OpDecorate %92 RelaxedPrecision 
                                                      OpDecorate %140 DescriptorSet 140 
                                                      OpDecorate %140 Binding 140 
                                                      OpDecorate %144 DescriptorSet 144 
                                                      OpDecorate %144 Binding 144 
                                                      OpDecorate %153 RelaxedPrecision 
                                                      OpDecorate %155 RelaxedPrecision 
                                                      OpDecorate %156 RelaxedPrecision 
                                                      OpDecorate %157 RelaxedPrecision 
                                                      OpDecorate %162 RelaxedPrecision 
                                                      OpDecorate %165 RelaxedPrecision 
                                                      OpDecorate %168 RelaxedPrecision 
                                                      OpDecorate %170 RelaxedPrecision 
                                                      OpDecorate %171 RelaxedPrecision 
                                                      OpDecorate %172 RelaxedPrecision 
                                                      OpDecorate %177 RelaxedPrecision 
                                                      OpDecorate %180 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD1 Location 183 
                                                      OpDecorate %189 RelaxedPrecision 
                                                      OpDecorate %190 RelaxedPrecision 
                                                      OpDecorate %192 RelaxedPrecision 
                                                      OpDecorate %193 RelaxedPrecision 
                                                      OpDecorate %196 RelaxedPrecision 
                                                      OpDecorate %198 RelaxedPrecision 
                                                      OpDecorate %199 RelaxedPrecision 
                                                      OpDecorate %200 RelaxedPrecision 
                                                      OpDecorate %203 RelaxedPrecision 
                                                      OpDecorate %204 RelaxedPrecision 
                                                      OpDecorate %206 RelaxedPrecision 
                                                      OpDecorate %209 RelaxedPrecision 
                                                      OpDecorate %210 RelaxedPrecision 
                                                      OpDecorate %212 RelaxedPrecision 
                                                      OpDecorate %215 RelaxedPrecision 
                                                      OpDecorate %216 RelaxedPrecision 
                                                      OpDecorate %217 RelaxedPrecision 
                                                      OpDecorate %218 RelaxedPrecision 
                                                      OpDecorate %220 RelaxedPrecision 
                                                      OpDecorate %221 RelaxedPrecision 
                                                      OpDecorate %223 RelaxedPrecision 
                                                      OpDecorate %225 RelaxedPrecision 
                                                      OpDecorate %226 RelaxedPrecision 
                                                      OpDecorate %228 RelaxedPrecision 
                                                      OpDecorate %229 RelaxedPrecision 
                                                      OpDecorate %230 RelaxedPrecision 
                                                      OpDecorate %231 RelaxedPrecision 
                                                      OpDecorate %232 RelaxedPrecision 
                                                      OpDecorate %233 RelaxedPrecision 
                                                      OpDecorate %234 RelaxedPrecision 
                                                      OpDecorate %235 RelaxedPrecision 
                                                      OpDecorate %236 RelaxedPrecision 
                                                      OpDecorate %238 RelaxedPrecision 
                                                      OpDecorate %239 RelaxedPrecision 
                                                      OpDecorate %242 RelaxedPrecision 
                                                      OpDecorate %243 RelaxedPrecision 
                                                      OpDecorate %246 RelaxedPrecision 
                                                      OpDecorate %248 RelaxedPrecision 
                                                      OpDecorate %250 RelaxedPrecision 
                                                      OpDecorate %252 RelaxedPrecision 
                                                      OpDecorate %254 RelaxedPrecision 
                                                      OpDecorate %255 RelaxedPrecision 
                                                      OpDecorate %258 RelaxedPrecision 
                                                      OpDecorate %259 RelaxedPrecision 
                                                      OpDecorate %260 RelaxedPrecision 
                                                      OpDecorate %263 RelaxedPrecision 
                                                      OpDecorate %265 RelaxedPrecision 
                                                      OpDecorate %266 RelaxedPrecision 
                                                      OpDecorate %270 RelaxedPrecision 
                                                      OpDecorate %271 RelaxedPrecision 
                                                      OpDecorate %272 RelaxedPrecision 
                                                      OpDecorate %275 RelaxedPrecision 
                                                      OpDecorate %276 RelaxedPrecision 
                                                      OpDecorate %277 RelaxedPrecision 
                                                      OpDecorate %279 RelaxedPrecision 
                                                      OpDecorate %280 RelaxedPrecision 
                                                      OpDecorate %281 RelaxedPrecision 
                                                      OpDecorate %282 RelaxedPrecision 
                                                      OpDecorate %284 RelaxedPrecision 
                                                      OpDecorate %285 RelaxedPrecision 
                                                      OpDecorate %286 RelaxedPrecision 
                                                      OpDecorate %287 RelaxedPrecision 
                                                      OpDecorate %288 RelaxedPrecision 
                                                      OpDecorate %289 RelaxedPrecision 
                                                      OpDecorate %291 RelaxedPrecision 
                                                      OpDecorate %292 RelaxedPrecision 
                                                      OpDecorate %293 RelaxedPrecision 
                                                      OpDecorate %294 RelaxedPrecision 
                                                      OpDecorate %295 RelaxedPrecision 
                                                      OpDecorate %296 RelaxedPrecision 
                                                      OpDecorate %297 RelaxedPrecision 
                                                      OpDecorate %298 RelaxedPrecision 
                                                      OpDecorate %299 RelaxedPrecision 
                                                      OpDecorate %301 RelaxedPrecision 
                                                      OpDecorate %302 RelaxedPrecision 
                                                      OpDecorate %302 DescriptorSet 302 
                                                      OpDecorate %302 Binding 302 
                                                      OpDecorate %303 RelaxedPrecision 
                                                      OpDecorate %304 RelaxedPrecision 
                                                      OpDecorate %304 DescriptorSet 304 
                                                      OpDecorate %304 Binding 304 
                                                      OpDecorate %305 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD0 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD0 Location 309 
                                                      OpDecorate %310 RelaxedPrecision 
                                                      OpDecorate %311 RelaxedPrecision 
                                                      OpDecorate %312 RelaxedPrecision 
                                                      OpDecorate %313 RelaxedPrecision 
                                                      OpDecorate %316 RelaxedPrecision 
                                                      OpDecorate %317 RelaxedPrecision 
                                                      OpDecorate %318 RelaxedPrecision 
                                                      OpDecorate %320 RelaxedPrecision 
                                                      OpDecorate %320 Location 320 
                                                      OpDecorate %322 RelaxedPrecision 
                                                      OpDecorate %324 RelaxedPrecision 
                                                      OpDecorate %325 RelaxedPrecision 
                                                      OpDecorate %328 RelaxedPrecision 
                                                      OpDecorate %331 RelaxedPrecision 
                                                      OpDecorate %332 RelaxedPrecision 
                                                      OpDecorate %333 RelaxedPrecision 
                                                      OpDecorate %334 RelaxedPrecision 
                                                      OpDecorate %335 RelaxedPrecision 
                                                      OpDecorate %336 RelaxedPrecision 
                                               %2 = OpTypeVoid 
                                               %3 = OpTypeFunction %2 
                                               %6 = OpTypeFloat 32 
                                               %7 = OpTypeVector %6 3 
                                               %8 = OpTypePointer Private %7 
                                Private f32_3* %9 = OpVariable Private 
                                              %10 = OpTypePointer Input %7 
                        Input f32_3* vs_TEXCOORD2 = OpVariable Input 
                                              %13 = OpTypeVector %6 4 
                                              %14 = OpTypeInt 32 0 
                                          u32 %15 = OpConstant 16 
                                              %16 = OpTypeArray %13 %15 
                                          u32 %17 = OpConstant 4 
                                              %18 = OpTypeArray %13 %17 
                                              %19 = OpTypeStruct %7 %13 %16 %13 %13 %18 %13 %13 %13 %13 %6 %6 
                                              %20 = OpTypePointer Uniform %19 
Uniform struct {f32_3; f32_4; f32_4[16]; f32_4; f32_4; f32_4[4]; f32_4; f32_4; f32_4; f32_4; f32; f32;}* %21 = OpVariable Uniform 
                                              %22 = OpTypeInt 32 1 
                                          i32 %23 = OpConstant 4 
                                              %24 = OpTypePointer Uniform %13 
                                          u32 %33 = OpConstant 0 
                                              %34 = OpTypePointer Private %6 
                               Private f32_3* %40 = OpVariable Private 
                                          i32 %43 = OpConstant 0 
                                              %44 = OpTypePointer Uniform %7 
                               Private f32_3* %48 = OpVariable Private 
                                          i32 %49 = OpConstant 5 
                                          u32 %50 = OpConstant 2 
                                              %51 = OpTypePointer Uniform %6 
                                          i32 %55 = OpConstant 1 
                                          u32 %58 = OpConstant 1 
                                          i32 %60 = OpConstant 2 
                                          u32 %75 = OpConstant 3 
                                          i32 %87 = OpConstant 3 
                                          f32 %97 = OpConstant 3.674022E-40 
                                          f32 %98 = OpConstant 3.674022E-40 
                                             %128 = OpTypePointer Function %7 
                                             %130 = OpTypeVector %6 2 
                                             %138 = OpTypeImage %6 Dim2D 0 0 0 1 Unknown 
                                             %139 = OpTypePointer UniformConstant %138 
        UniformConstant read_only Texture2D* %140 = OpVariable UniformConstant 
                                             %142 = OpTypeSampler 
                                             %143 = OpTypePointer UniformConstant %142 
                    UniformConstant sampler* %144 = OpVariable UniformConstant 
                                             %146 = OpTypeImage %6 Dim2D 1 0 0 1 Unknown 
                                             %147 = OpTypeSampledImage %146 
                              Private f32_3* %153 = OpVariable Private 
                              Private f32_3* %168 = OpVariable Private 
                        Input f32_3* vs_TEXCOORD1 = OpVariable Input 
                                Private f32* %206 = OpVariable Private 
                                         i32 %207 = OpConstant 11 
                                         f32 %211 = OpConstant 3.674022E-40 
                                         i32 %213 = OpConstant 10 
                                Private f32* %223 = OpVariable Private 
                                         f32 %247 = OpConstant 3.674022E-40 
                                         f32 %249 = OpConstant 3.674022E-40 
                                         i32 %268 = OpConstant 8 
                                         i32 %273 = OpConstant 9 
                              Private f32_3* %287 = OpVariable Private 
                                             %300 = OpTypePointer Private %13 
                              Private f32_4* %301 = OpVariable Private 
        UniformConstant read_only Texture2D* %302 = OpVariable UniformConstant 
                    UniformConstant sampler* %304 = OpVariable UniformConstant 
                                             %306 = OpTypeSampledImage %138 
                                             %308 = OpTypePointer Input %130 
                        Input f32_2* vs_TEXCOORD0 = OpVariable Input 
                                         i32 %314 = OpConstant 7 
                                             %319 = OpTypePointer Output %13 
                               Output f32_4* %320 = OpVariable Output 
                                             %326 = OpTypePointer Output %6 
                                         i32 %329 = OpConstant 6 
                                          void %4 = OpFunction None %3 
                                               %5 = OpLabel 
                             Function f32_3* %129 = OpVariable Function 
                                        f32_3 %12 = OpLoad vs_TEXCOORD2 
                               Uniform f32_4* %25 = OpAccessChain %21 %23 
                                        f32_4 %26 = OpLoad %25 
                                        f32_3 %27 = OpVectorShuffle %26 %26 0 1 2 
                                        f32_3 %28 = OpFNegate %27 
                                        f32_3 %29 = OpFAdd %12 %28 
                                                      OpStore %9 %29 
                                        f32_3 %30 = OpLoad %9 
                                        f32_3 %31 = OpLoad %9 
                                          f32 %32 = OpDot %30 %31 
                                 Private f32* %35 = OpAccessChain %9 %33 
                                                      OpStore %35 %32 
                                 Private f32* %36 = OpAccessChain %9 %33 
                                          f32 %37 = OpLoad %36 
                                          f32 %38 = OpExtInst %1 31 %37 
                                 Private f32* %39 = OpAccessChain %9 %33 
                                                      OpStore %39 %38 
                                        f32_3 %41 = OpLoad vs_TEXCOORD2 
                                        f32_3 %42 = OpFNegate %41 
                               Uniform f32_3* %45 = OpAccessChain %21 %43 
                                        f32_3 %46 = OpLoad %45 
                                        f32_3 %47 = OpFAdd %42 %46 
                                                      OpStore %40 %47 
                                 Uniform f32* %52 = OpAccessChain %21 %49 %43 %50 
                                          f32 %53 = OpLoad %52 
                                 Private f32* %54 = OpAccessChain %48 %33 
                                                      OpStore %54 %53 
                                 Uniform f32* %56 = OpAccessChain %21 %49 %55 %50 
                                          f32 %57 = OpLoad %56 
                                 Private f32* %59 = OpAccessChain %48 %58 
                                                      OpStore %59 %57 
                                 Uniform f32* %61 = OpAccessChain %21 %49 %60 %50 
                                          f32 %62 = OpLoad %61 
                                 Private f32* %63 = OpAccessChain %48 %50 
                                                      OpStore %63 %62 
                                        f32_3 %64 = OpLoad %40 
                                        f32_3 %65 = OpLoad %48 
                                          f32 %66 = OpDot %64 %65 
                                 Private f32* %67 = OpAccessChain %40 %33 
                                                      OpStore %67 %66 
                                 Private f32* %68 = OpAccessChain %40 %33 
                                          f32 %69 = OpLoad %68 
                                          f32 %70 = OpFNegate %69 
                                 Private f32* %71 = OpAccessChain %9 %33 
                                          f32 %72 = OpLoad %71 
                                          f32 %73 = OpFAdd %70 %72 
                                 Private f32* %74 = OpAccessChain %9 %33 
                                                      OpStore %74 %73 
                                 Uniform f32* %76 = OpAccessChain %21 %23 %75 
                                          f32 %77 = OpLoad %76 
                                 Private f32* %78 = OpAccessChain %9 %33 
                                          f32 %79 = OpLoad %78 
                                          f32 %80 = OpFMul %77 %79 
                                 Private f32* %81 = OpAccessChain %40 %33 
                                          f32 %82 = OpLoad %81 
                                          f32 %83 = OpFAdd %80 %82 
                                 Private f32* %84 = OpAccessChain %9 %33 
                                                      OpStore %84 %83 
                                 Private f32* %85 = OpAccessChain %9 %33 
                                          f32 %86 = OpLoad %85 
                                 Uniform f32* %88 = OpAccessChain %21 %87 %50 
                                          f32 %89 = OpLoad %88 
                                          f32 %90 = OpFMul %86 %89 
                                 Uniform f32* %91 = OpAccessChain %21 %87 %75 
                                          f32 %92 = OpLoad %91 
                                          f32 %93 = OpFAdd %90 %92 
                                 Private f32* %94 = OpAccessChain %9 %33 
                                                      OpStore %94 %93 
                                 Private f32* %95 = OpAccessChain %9 %33 
                                          f32 %96 = OpLoad %95 
                                          f32 %99 = OpExtInst %1 43 %96 %97 %98 
                                Private f32* %100 = OpAccessChain %9 %33 
                                                      OpStore %100 %99 
                                       f32_3 %101 = OpLoad vs_TEXCOORD2 
                                       f32_3 %102 = OpVectorShuffle %101 %101 1 1 1 
                              Uniform f32_4* %103 = OpAccessChain %21 %60 %55 
                                       f32_4 %104 = OpLoad %103 
                                       f32_3 %105 = OpVectorShuffle %104 %104 0 1 2 
                                       f32_3 %106 = OpFMul %102 %105 
                                                      OpStore %40 %106 
                              Uniform f32_4* %107 = OpAccessChain %21 %60 %43 
                                       f32_4 %108 = OpLoad %107 
                                       f32_3 %109 = OpVectorShuffle %108 %108 0 1 2 
                                       f32_3 %110 = OpLoad vs_TEXCOORD2 
                                       f32_3 %111 = OpVectorShuffle %110 %110 0 0 0 
                                       f32_3 %112 = OpFMul %109 %111 
                                       f32_3 %113 = OpLoad %40 
                                       f32_3 %114 = OpFAdd %112 %113 
                                                      OpStore %40 %114 
                              Uniform f32_4* %115 = OpAccessChain %21 %60 %60 
                                       f32_4 %116 = OpLoad %115 
                                       f32_3 %117 = OpVectorShuffle %116 %116 0 1 2 
                                       f32_3 %118 = OpLoad vs_TEXCOORD2 
                                       f32_3 %119 = OpVectorShuffle %118 %118 2 2 2 
                                       f32_3 %120 = OpFMul %117 %119 
                                       f32_3 %121 = OpLoad %40 
                                       f32_3 %122 = OpFAdd %120 %121 
                                                      OpStore %40 %122 
                                       f32_3 %123 = OpLoad %40 
                              Uniform f32_4* %124 = OpAccessChain %21 %60 %87 
                                       f32_4 %125 = OpLoad %124 
                                       f32_3 %126 = OpVectorShuffle %125 %125 0 1 2 
                                       f32_3 %127 = OpFAdd %123 %126 
                                                      OpStore %40 %127 
                                       f32_3 %131 = OpLoad %40 
                                       f32_2 %132 = OpVectorShuffle %131 %131 0 1 
                                Private f32* %133 = OpAccessChain %40 %50 
                                         f32 %134 = OpLoad %133 
                                         f32 %135 = OpCompositeExtract %132 0 
                                         f32 %136 = OpCompositeExtract %132 1 
                                       f32_3 %137 = OpCompositeConstruct %135 %136 %134 
                                                      OpStore %129 %137 
                         read_only Texture2D %141 = OpLoad %140 
                                     sampler %145 = OpLoad %144 
                  read_only Texture2DSampled %148 = OpSampledImage %141 %145 
                                       f32_3 %149 = OpLoad %129 
                                         f32 %150 = OpCompositeExtract %149 2 
                                         f32 %151 = OpImageSampleDrefExplicitLod %148 %149 %150 Lod %6 
                                Private f32* %152 = OpAccessChain %40 %33 
                                                      OpStore %152 %151 
                                Uniform f32* %154 = OpAccessChain %21 %87 %33 
                                         f32 %155 = OpLoad %154 
                                         f32 %156 = OpFNegate %155 
                                         f32 %157 = OpFAdd %156 %98 
                                Private f32* %158 = OpAccessChain %153 %33 
                                                      OpStore %158 %157 
                                Private f32* %159 = OpAccessChain %40 %33 
                                         f32 %160 = OpLoad %159 
                                Private f32* %161 = OpAccessChain %153 %33 
                                         f32 %162 = OpLoad %161 
                                         f32 %163 = OpFMul %160 %162 
                                Uniform f32* %164 = OpAccessChain %21 %87 %33 
                                         f32 %165 = OpLoad %164 
                                         f32 %166 = OpFAdd %163 %165 
                                Private f32* %167 = OpAccessChain %153 %33 
                                                      OpStore %167 %166 
                                Private f32* %169 = OpAccessChain %153 %33 
                                         f32 %170 = OpLoad %169 
                                         f32 %171 = OpFNegate %170 
                                         f32 %172 = OpFAdd %171 %98 
                                Private f32* %173 = OpAccessChain %168 %33 
                                                      OpStore %173 %172 
                                Private f32* %174 = OpAccessChain %9 %33 
                                         f32 %175 = OpLoad %174 
                                Private f32* %176 = OpAccessChain %168 %33 
                                         f32 %177 = OpLoad %176 
                                         f32 %178 = OpFMul %175 %177 
                                Private f32* %179 = OpAccessChain %153 %33 
                                         f32 %180 = OpLoad %179 
                                         f32 %181 = OpFAdd %178 %180 
                                Private f32* %182 = OpAccessChain %153 %33 
                                                      OpStore %182 %181 
                                       f32_3 %184 = OpLoad vs_TEXCOORD1 
                                       f32_3 %185 = OpLoad vs_TEXCOORD1 
                                         f32 %186 = OpDot %184 %185 
                                Private f32* %187 = OpAccessChain %168 %33 
                                                      OpStore %187 %186 
                                Private f32* %188 = OpAccessChain %168 %33 
                                         f32 %189 = OpLoad %188 
                                         f32 %190 = OpExtInst %1 32 %189 
                                Private f32* %191 = OpAccessChain %168 %33 
                                                      OpStore %191 %190 
                                       f32_3 %192 = OpLoad %168 
                                       f32_3 %193 = OpVectorShuffle %192 %192 0 0 0 
                                       f32_3 %194 = OpLoad vs_TEXCOORD1 
                                       f32_3 %195 = OpFMul %193 %194 
                                                      OpStore %168 %195 
                                       f32_3 %196 = OpLoad %168 
                              Uniform f32_4* %197 = OpAccessChain %21 %55 
                                       f32_4 %198 = OpLoad %197 
                                       f32_3 %199 = OpVectorShuffle %198 %198 0 1 2 
                                         f32 %200 = OpDot %196 %199 
                                Private f32* %201 = OpAccessChain %168 %33 
                                                      OpStore %201 %200 
                                Private f32* %202 = OpAccessChain %168 %33 
                                         f32 %203 = OpLoad %202 
                                         f32 %204 = OpExtInst %1 40 %203 %97 
                                Private f32* %205 = OpAccessChain %168 %33 
                                                      OpStore %205 %204 
                                Uniform f32* %208 = OpAccessChain %21 %207 
                                         f32 %209 = OpLoad %208 
                                         f32 %210 = OpFNegate %209 
                                         f32 %212 = OpFMul %210 %211 
                                Uniform f32* %214 = OpAccessChain %21 %213 
                                         f32 %215 = OpLoad %214 
                                         f32 %216 = OpFAdd %212 %215 
                                                      OpStore %206 %216 
                                         f32 %217 = OpLoad %206 
                                         f32 %218 = OpFNegate %217 
                                Private f32* %219 = OpAccessChain %168 %33 
                                         f32 %220 = OpLoad %219 
                                         f32 %221 = OpFAdd %218 %220 
                                Private f32* %222 = OpAccessChain %168 %33 
                                                      OpStore %222 %221 
                                Uniform f32* %224 = OpAccessChain %21 %207 
                                         f32 %225 = OpLoad %224 
                                         f32 %226 = OpFMul %225 %211 
                                Uniform f32* %227 = OpAccessChain %21 %213 
                                         f32 %228 = OpLoad %227 
                                         f32 %229 = OpFAdd %226 %228 
                                                      OpStore %223 %229 
                                         f32 %230 = OpLoad %206 
                                         f32 %231 = OpFNegate %230 
                                         f32 %232 = OpLoad %223 
                                         f32 %233 = OpFAdd %231 %232 
                                                      OpStore %206 %233 
                                         f32 %234 = OpLoad %206 
                                         f32 %235 = OpFDiv %98 %234 
                                                      OpStore %206 %235 
                                         f32 %236 = OpLoad %206 
                                Private f32* %237 = OpAccessChain %168 %33 
                                         f32 %238 = OpLoad %237 
                                         f32 %239 = OpFMul %236 %238 
                                Private f32* %240 = OpAccessChain %168 %33 
                                                      OpStore %240 %239 
                                Private f32* %241 = OpAccessChain %168 %33 
                                         f32 %242 = OpLoad %241 
                                         f32 %243 = OpExtInst %1 43 %242 %97 %98 
                                Private f32* %244 = OpAccessChain %168 %33 
                                                      OpStore %244 %243 
                                Private f32* %245 = OpAccessChain %168 %33 
                                         f32 %246 = OpLoad %245 
                                         f32 %248 = OpFMul %246 %247 
                                         f32 %250 = OpFAdd %248 %249 
                                                      OpStore %206 %250 
                                Private f32* %251 = OpAccessChain %168 %33 
                                         f32 %252 = OpLoad %251 
                                Private f32* %253 = OpAccessChain %168 %33 
                                         f32 %254 = OpLoad %253 
                                         f32 %255 = OpFMul %252 %254 
                                Private f32* %256 = OpAccessChain %168 %33 
                                                      OpStore %256 %255 
                                Private f32* %257 = OpAccessChain %168 %33 
                                         f32 %258 = OpLoad %257 
                                         f32 %259 = OpLoad %206 
                                         f32 %260 = OpFMul %258 %259 
                                Private f32* %261 = OpAccessChain %168 %33 
                                                      OpStore %261 %260 
                                Private f32* %262 = OpAccessChain %153 %33 
                                         f32 %263 = OpLoad %262 
                                Private f32* %264 = OpAccessChain %168 %33 
                                         f32 %265 = OpLoad %264 
                                         f32 %266 = OpFMul %263 %265 
                                Private f32* %267 = OpAccessChain %153 %33 
                                                      OpStore %267 %266 
                              Uniform f32_4* %269 = OpAccessChain %21 %268 
                                       f32_4 %270 = OpLoad %269 
                                       f32_3 %271 = OpVectorShuffle %270 %270 0 1 2 
                                       f32_3 %272 = OpFNegate %271 
                              Uniform f32_4* %274 = OpAccessChain %21 %273 
                                       f32_4 %275 = OpLoad %274 
                                       f32_3 %276 = OpVectorShuffle %275 %275 0 1 2 
                                       f32_3 %277 = OpFAdd %272 %276 
                                                      OpStore %168 %277 
                              Uniform f32_4* %278 = OpAccessChain %21 %273 
                                       f32_4 %279 = OpLoad %278 
                                       f32_3 %280 = OpVectorShuffle %279 %279 3 3 3 
                                       f32_3 %281 = OpLoad %168 
                                       f32_3 %282 = OpFMul %280 %281 
                              Uniform f32_4* %283 = OpAccessChain %21 %268 
                                       f32_4 %284 = OpLoad %283 
                                       f32_3 %285 = OpVectorShuffle %284 %284 0 1 2 
                                       f32_3 %286 = OpFAdd %282 %285 
                                                      OpStore %168 %286 
                                       f32_3 %288 = OpLoad %168 
                                       f32_3 %289 = OpFNegate %288 
                              Uniform f32_4* %290 = OpAccessChain %21 %268 
                                       f32_4 %291 = OpLoad %290 
                                       f32_3 %292 = OpVectorShuffle %291 %291 0 1 2 
                                       f32_3 %293 = OpFAdd %289 %292 
                                                      OpStore %287 %293 
                                       f32_3 %294 = OpLoad %153 
                                       f32_3 %295 = OpVectorShuffle %294 %294 0 0 0 
                                       f32_3 %296 = OpLoad %287 
                                       f32_3 %297 = OpFMul %295 %296 
                                       f32_3 %298 = OpLoad %168 
                                       f32_3 %299 = OpFAdd %297 %298 
                                                      OpStore %153 %299 
                         read_only Texture2D %303 = OpLoad %302 
                                     sampler %305 = OpLoad %304 
                  read_only Texture2DSampled %307 = OpSampledImage %303 %305 
                                       f32_2 %310 = OpLoad vs_TEXCOORD0 
                                       f32_4 %311 = OpImageSampleImplicitLod %307 %310 
                                                      OpStore %301 %311 
                                       f32_4 %312 = OpLoad %301 
                                       f32_3 %313 = OpVectorShuffle %312 %312 0 1 2 
                              Uniform f32_4* %315 = OpAccessChain %21 %314 
                                       f32_4 %316 = OpLoad %315 
                                       f32_3 %317 = OpVectorShuffle %316 %316 0 1 2 
                                       f32_3 %318 = OpFMul %313 %317 
                                                      OpStore %287 %318 
                                Private f32* %321 = OpAccessChain %301 %75 
                                         f32 %322 = OpLoad %321 
                                Uniform f32* %323 = OpAccessChain %21 %314 %75 
                                         f32 %324 = OpLoad %323 
                                         f32 %325 = OpFMul %322 %324 
                                 Output f32* %327 = OpAccessChain %320 %75 
                                                      OpStore %327 %325 
                                       f32_3 %328 = OpLoad %287 
                              Uniform f32_4* %330 = OpAccessChain %21 %329 
                                       f32_4 %331 = OpLoad %330 
                                       f32_3 %332 = OpVectorShuffle %331 %331 0 1 2 
                                       f32_3 %333 = OpFMul %328 %332 
                                                      OpStore %287 %333 
                                       f32_3 %334 = OpLoad %153 
                                       f32_3 %335 = OpLoad %287 
                                       f32_3 %336 = OpFMul %334 %335 
                                       f32_4 %337 = OpLoad %320 
                                       f32_4 %338 = OpVectorShuffle %337 %336 4 5 6 3 
                                                      OpStore %320 %338 
                                                      OpReturn
                                                      OpFunctionEnd
"
}
SubProgram "vulkan hw_tier01 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "VERTEXLIGHT_ON" }
"; SPIR-V
; Version: 1.0
; Generator: Khronos Glslang Reference Front End; 6
; Bound: 160
; Schema: 0
                                                      OpCapability Shader 
                                               %1 = OpExtInstImport "GLSL.std.450" 
                                                      OpMemoryModel Logical GLSL450 
                                                      OpEntryPoint Vertex %4 "main" %11 %52 %85 %95 %110 %114 %144 %150 %153 
                                                      OpName vs_TEXCOORD2 "vs_TEXCOORD2" 
                                                      OpName vs_TEXCOORD0 "vs_TEXCOORD0" 
                                                      OpName vs_TEXCOORD1 "vs_TEXCOORD1" 
                                                      OpName vs_TEXCOORD5 "vs_TEXCOORD5" 
                                                      OpName vs_TEXCOORD6 "vs_TEXCOORD6" 
                                                      OpDecorate %11 Location 11 
                                                      OpDecorate %16 ArrayStride 16 
                                                      OpDecorate %17 ArrayStride 17 
                                                      OpDecorate %18 ArrayStride 18 
                                                      OpMemberDecorate %19 0 Offset 19 
                                                      OpMemberDecorate %19 1 Offset 19 
                                                      OpMemberDecorate %19 2 Offset 19 
                                                      OpMemberDecorate %19 3 Offset 19 
                                                      OpDecorate %19 Block 
                                                      OpDecorate %21 DescriptorSet 21 
                                                      OpDecorate %21 Binding 21 
                                                      OpDecorate vs_TEXCOORD2 Location 52 
                                                      OpMemberDecorate %83 0 BuiltIn 83 
                                                      OpMemberDecorate %83 1 BuiltIn 83 
                                                      OpMemberDecorate %83 2 BuiltIn 83 
                                                      OpDecorate %83 Block 
                                                      OpDecorate %95 Location 95 
                                                      OpDecorate vs_TEXCOORD0 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD0 Location 110 
                                                      OpDecorate %114 Location 114 
                                                      OpDecorate vs_TEXCOORD1 Location 144 
                                                      OpDecorate vs_TEXCOORD5 Location 150 
                                                      OpDecorate vs_TEXCOORD6 Location 153 
                                               %2 = OpTypeVoid 
                                               %3 = OpTypeFunction %2 
                                               %6 = OpTypeFloat 32 
                                               %7 = OpTypeVector %6 4 
                                               %8 = OpTypePointer Private %7 
                                Private f32_4* %9 = OpVariable Private 
                                              %10 = OpTypePointer Input %7 
                                 Input f32_4* %11 = OpVariable Input 
                                              %14 = OpTypeInt 32 0 
                                          u32 %15 = OpConstant 4 
                                              %16 = OpTypeArray %7 %15 
                                              %17 = OpTypeArray %7 %15 
                                              %18 = OpTypeArray %7 %15 
                                              %19 = OpTypeStruct %16 %17 %18 %7 
                                              %20 = OpTypePointer Uniform %19 
Uniform struct {f32_4[4]; f32_4[4]; f32_4[4]; f32_4;}* %21 = OpVariable Uniform 
                                              %22 = OpTypeInt 32 1 
                                          i32 %23 = OpConstant 0 
                                          i32 %24 = OpConstant 1 
                                              %25 = OpTypePointer Uniform %7 
                                          i32 %36 = OpConstant 2 
                               Private f32_4* %44 = OpVariable Private 
                                          i32 %46 = OpConstant 3 
                                              %50 = OpTypeVector %6 3 
                                              %51 = OpTypePointer Output %50 
                       Output f32_3* vs_TEXCOORD2 = OpVariable Output 
                                          u32 %81 = OpConstant 1 
                                              %82 = OpTypeArray %6 %81 
                                              %83 = OpTypeStruct %7 %6 %82 
                                              %84 = OpTypePointer Output %83 
         Output struct {f32_4; f32; f32[1];}* %85 = OpVariable Output 
                                              %93 = OpTypePointer Output %7 
                                 Input f32_4* %95 = OpVariable Input 
                                              %96 = OpTypeVector %6 2 
                                             %109 = OpTypePointer Output %96 
                       Output f32_2* vs_TEXCOORD0 = OpVariable Output 
                                             %113 = OpTypePointer Input %50 
                                Input f32_3* %114 = OpVariable Input 
                                         u32 %120 = OpConstant 0 
                                             %121 = OpTypePointer Private %6 
                                         u32 %134 = OpConstant 2 
                                Private f32* %136 = OpVariable Private 
                       Output f32_3* vs_TEXCOORD1 = OpVariable Output 
                       Output f32_4* vs_TEXCOORD5 = OpVariable Output 
                                         f32 %151 = OpConstant 3.674022E-40 
                                       f32_4 %152 = OpConstantComposite %151 %151 %151 %151 
                       Output f32_4* vs_TEXCOORD6 = OpVariable Output 
                                             %154 = OpTypePointer Output %6 
                                          void %4 = OpFunction None %3 
                                               %5 = OpLabel 
                                        f32_4 %12 = OpLoad %11 
                                        f32_4 %13 = OpVectorShuffle %12 %12 1 1 1 1 
                               Uniform f32_4* %26 = OpAccessChain %21 %23 %24 
                                        f32_4 %27 = OpLoad %26 
                                        f32_4 %28 = OpFMul %13 %27 
                                                      OpStore %9 %28 
                               Uniform f32_4* %29 = OpAccessChain %21 %23 %23 
                                        f32_4 %30 = OpLoad %29 
                                        f32_4 %31 = OpLoad %11 
                                        f32_4 %32 = OpVectorShuffle %31 %31 0 0 0 0 
                                        f32_4 %33 = OpFMul %30 %32 
                                        f32_4 %34 = OpLoad %9 
                                        f32_4 %35 = OpFAdd %33 %34 
                                                      OpStore %9 %35 
                               Uniform f32_4* %37 = OpAccessChain %21 %23 %36 
                                        f32_4 %38 = OpLoad %37 
                                        f32_4 %39 = OpLoad %11 
                                        f32_4 %40 = OpVectorShuffle %39 %39 2 2 2 2 
                                        f32_4 %41 = OpFMul %38 %40 
                                        f32_4 %42 = OpLoad %9 
                                        f32_4 %43 = OpFAdd %41 %42 
                                                      OpStore %9 %43 
                                        f32_4 %45 = OpLoad %9 
                               Uniform f32_4* %47 = OpAccessChain %21 %23 %46 
                                        f32_4 %48 = OpLoad %47 
                                        f32_4 %49 = OpFAdd %45 %48 
                                                      OpStore %44 %49 
                               Uniform f32_4* %53 = OpAccessChain %21 %23 %46 
                                        f32_4 %54 = OpLoad %53 
                                        f32_3 %55 = OpVectorShuffle %54 %54 0 1 2 
                                        f32_4 %56 = OpLoad %11 
                                        f32_3 %57 = OpVectorShuffle %56 %56 3 3 3 
                                        f32_3 %58 = OpFMul %55 %57 
                                        f32_4 %59 = OpLoad %9 
                                        f32_3 %60 = OpVectorShuffle %59 %59 0 1 2 
                                        f32_3 %61 = OpFAdd %58 %60 
                                                      OpStore vs_TEXCOORD2 %61 
                                        f32_4 %62 = OpLoad %44 
                                        f32_4 %63 = OpVectorShuffle %62 %62 1 1 1 1 
                               Uniform f32_4* %64 = OpAccessChain %21 %36 %24 
                                        f32_4 %65 = OpLoad %64 
                                        f32_4 %66 = OpFMul %63 %65 
                                                      OpStore %9 %66 
                               Uniform f32_4* %67 = OpAccessChain %21 %36 %23 
                                        f32_4 %68 = OpLoad %67 
                                        f32_4 %69 = OpLoad %44 
                                        f32_4 %70 = OpVectorShuffle %69 %69 0 0 0 0 
                                        f32_4 %71 = OpFMul %68 %70 
                                        f32_4 %72 = OpLoad %9 
                                        f32_4 %73 = OpFAdd %71 %72 
                                                      OpStore %9 %73 
                               Uniform f32_4* %74 = OpAccessChain %21 %36 %36 
                                        f32_4 %75 = OpLoad %74 
                                        f32_4 %76 = OpLoad %44 
                                        f32_4 %77 = OpVectorShuffle %76 %76 2 2 2 2 
                                        f32_4 %78 = OpFMul %75 %77 
                                        f32_4 %79 = OpLoad %9 
                                        f32_4 %80 = OpFAdd %78 %79 
                                                      OpStore %9 %80 
                               Uniform f32_4* %86 = OpAccessChain %21 %36 %46 
                                        f32_4 %87 = OpLoad %86 
                                        f32_4 %88 = OpLoad %44 
                                        f32_4 %89 = OpVectorShuffle %88 %88 3 3 3 3 
                                        f32_4 %90 = OpFMul %87 %89 
                                        f32_4 %91 = OpLoad %9 
                                        f32_4 %92 = OpFAdd %90 %91 
                                Output f32_4* %94 = OpAccessChain %85 %23 
                                                      OpStore %94 %92 
                                        f32_4 %97 = OpLoad %95 
                                        f32_2 %98 = OpVectorShuffle %97 %97 0 1 
                               Uniform f32_4* %99 = OpAccessChain %21 %46 
                                       f32_4 %100 = OpLoad %99 
                                       f32_2 %101 = OpVectorShuffle %100 %100 0 1 
                                       f32_2 %102 = OpFMul %98 %101 
                              Uniform f32_4* %103 = OpAccessChain %21 %46 
                                       f32_4 %104 = OpLoad %103 
                                       f32_2 %105 = OpVectorShuffle %104 %104 2 3 
                                       f32_2 %106 = OpFAdd %102 %105 
                                       f32_4 %107 = OpLoad %9 
                                       f32_4 %108 = OpVectorShuffle %107 %106 4 5 2 3 
                                                      OpStore %9 %108 
                                       f32_4 %111 = OpLoad %9 
                                       f32_2 %112 = OpVectorShuffle %111 %111 0 1 
                                                      OpStore vs_TEXCOORD0 %112 
                                       f32_3 %115 = OpLoad %114 
                              Uniform f32_4* %116 = OpAccessChain %21 %24 %23 
                                       f32_4 %117 = OpLoad %116 
                                       f32_3 %118 = OpVectorShuffle %117 %117 0 1 2 
                                         f32 %119 = OpDot %115 %118 
                                Private f32* %122 = OpAccessChain %9 %120 
                                                      OpStore %122 %119 
                                       f32_3 %123 = OpLoad %114 
                              Uniform f32_4* %124 = OpAccessChain %21 %24 %24 
                                       f32_4 %125 = OpLoad %124 
                                       f32_3 %126 = OpVectorShuffle %125 %125 0 1 2 
                                         f32 %127 = OpDot %123 %126 
                                Private f32* %128 = OpAccessChain %9 %81 
                                                      OpStore %128 %127 
                                       f32_3 %129 = OpLoad %114 
                              Uniform f32_4* %130 = OpAccessChain %21 %24 %36 
                                       f32_4 %131 = OpLoad %130 
                                       f32_3 %132 = OpVectorShuffle %131 %131 0 1 2 
                                         f32 %133 = OpDot %129 %132 
                                Private f32* %135 = OpAccessChain %9 %134 
                                                      OpStore %135 %133 
                                       f32_4 %137 = OpLoad %9 
                                       f32_3 %138 = OpVectorShuffle %137 %137 0 1 2 
                                       f32_4 %139 = OpLoad %9 
                                       f32_3 %140 = OpVectorShuffle %139 %139 0 1 2 
                                         f32 %141 = OpDot %138 %140 
                                                      OpStore %136 %141 
                                         f32 %142 = OpLoad %136 
                                         f32 %143 = OpExtInst %1 32 %142 
                                                      OpStore %136 %143 
                                         f32 %145 = OpLoad %136 
                                       f32_3 %146 = OpCompositeConstruct %145 %145 %145 
                                       f32_4 %147 = OpLoad %9 
                                       f32_3 %148 = OpVectorShuffle %147 %147 0 1 2 
                                       f32_3 %149 = OpFMul %146 %148 
                                                      OpStore vs_TEXCOORD1 %149 
                                                      OpStore vs_TEXCOORD5 %152 
                                                      OpStore vs_TEXCOORD6 %152 
                                 Output f32* %155 = OpAccessChain %85 %23 %81 
                                         f32 %156 = OpLoad %155 
                                         f32 %157 = OpFNegate %156 
                                 Output f32* %158 = OpAccessChain %85 %23 %81 
                                                      OpStore %158 %157 
                                                      OpReturn
                                                      OpFunctionEnd
; SPIR-V
; Version: 1.0
; Generator: Khronos Glslang Reference Front End; 6
; Bound: 340
; Schema: 0
                                                      OpCapability Shader 
                                               %1 = OpExtInstImport "GLSL.std.450" 
                                                      OpMemoryModel Logical GLSL450 
                                                      OpEntryPoint Fragment %4 "main" %11 %183 %309 %320 
                                                      OpExecutionMode %4 OriginUpperLeft 
                                                      OpName vs_TEXCOORD2 "vs_TEXCOORD2" 
                                                      OpName vs_TEXCOORD1 "vs_TEXCOORD1" 
                                                      OpName vs_TEXCOORD0 "vs_TEXCOORD0" 
                                                      OpDecorate vs_TEXCOORD2 Location 11 
                                                      OpDecorate %16 ArrayStride 16 
                                                      OpDecorate %18 ArrayStride 18 
                                                      OpMemberDecorate %19 0 Offset 19 
                                                      OpMemberDecorate %19 1 RelaxedPrecision 
                                                      OpMemberDecorate %19 1 Offset 19 
                                                      OpMemberDecorate %19 2 Offset 19 
                                                      OpMemberDecorate %19 3 RelaxedPrecision 
                                                      OpMemberDecorate %19 3 Offset 19 
                                                      OpMemberDecorate %19 4 Offset 19 
                                                      OpMemberDecorate %19 5 Offset 19 
                                                      OpMemberDecorate %19 6 RelaxedPrecision 
                                                      OpMemberDecorate %19 6 Offset 19 
                                                      OpMemberDecorate %19 7 RelaxedPrecision 
                                                      OpMemberDecorate %19 7 Offset 19 
                                                      OpMemberDecorate %19 8 RelaxedPrecision 
                                                      OpMemberDecorate %19 8 Offset 19 
                                                      OpMemberDecorate %19 9 RelaxedPrecision 
                                                      OpMemberDecorate %19 9 Offset 19 
                                                      OpMemberDecorate %19 10 RelaxedPrecision 
                                                      OpMemberDecorate %19 10 Offset 19 
                                                      OpMemberDecorate %19 11 RelaxedPrecision 
                                                      OpMemberDecorate %19 11 Offset 19 
                                                      OpDecorate %19 Block 
                                                      OpDecorate %21 DescriptorSet 21 
                                                      OpDecorate %21 Binding 21 
                                                      OpDecorate %89 RelaxedPrecision 
                                                      OpDecorate %92 RelaxedPrecision 
                                                      OpDecorate %140 DescriptorSet 140 
                                                      OpDecorate %140 Binding 140 
                                                      OpDecorate %144 DescriptorSet 144 
                                                      OpDecorate %144 Binding 144 
                                                      OpDecorate %153 RelaxedPrecision 
                                                      OpDecorate %155 RelaxedPrecision 
                                                      OpDecorate %156 RelaxedPrecision 
                                                      OpDecorate %157 RelaxedPrecision 
                                                      OpDecorate %162 RelaxedPrecision 
                                                      OpDecorate %165 RelaxedPrecision 
                                                      OpDecorate %168 RelaxedPrecision 
                                                      OpDecorate %170 RelaxedPrecision 
                                                      OpDecorate %171 RelaxedPrecision 
                                                      OpDecorate %172 RelaxedPrecision 
                                                      OpDecorate %177 RelaxedPrecision 
                                                      OpDecorate %180 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD1 Location 183 
                                                      OpDecorate %189 RelaxedPrecision 
                                                      OpDecorate %190 RelaxedPrecision 
                                                      OpDecorate %192 RelaxedPrecision 
                                                      OpDecorate %193 RelaxedPrecision 
                                                      OpDecorate %196 RelaxedPrecision 
                                                      OpDecorate %198 RelaxedPrecision 
                                                      OpDecorate %199 RelaxedPrecision 
                                                      OpDecorate %200 RelaxedPrecision 
                                                      OpDecorate %203 RelaxedPrecision 
                                                      OpDecorate %204 RelaxedPrecision 
                                                      OpDecorate %206 RelaxedPrecision 
                                                      OpDecorate %209 RelaxedPrecision 
                                                      OpDecorate %210 RelaxedPrecision 
                                                      OpDecorate %212 RelaxedPrecision 
                                                      OpDecorate %215 RelaxedPrecision 
                                                      OpDecorate %216 RelaxedPrecision 
                                                      OpDecorate %217 RelaxedPrecision 
                                                      OpDecorate %218 RelaxedPrecision 
                                                      OpDecorate %220 RelaxedPrecision 
                                                      OpDecorate %221 RelaxedPrecision 
                                                      OpDecorate %223 RelaxedPrecision 
                                                      OpDecorate %225 RelaxedPrecision 
                                                      OpDecorate %226 RelaxedPrecision 
                                                      OpDecorate %228 RelaxedPrecision 
                                                      OpDecorate %229 RelaxedPrecision 
                                                      OpDecorate %230 RelaxedPrecision 
                                                      OpDecorate %231 RelaxedPrecision 
                                                      OpDecorate %232 RelaxedPrecision 
                                                      OpDecorate %233 RelaxedPrecision 
                                                      OpDecorate %234 RelaxedPrecision 
                                                      OpDecorate %235 RelaxedPrecision 
                                                      OpDecorate %236 RelaxedPrecision 
                                                      OpDecorate %238 RelaxedPrecision 
                                                      OpDecorate %239 RelaxedPrecision 
                                                      OpDecorate %242 RelaxedPrecision 
                                                      OpDecorate %243 RelaxedPrecision 
                                                      OpDecorate %246 RelaxedPrecision 
                                                      OpDecorate %248 RelaxedPrecision 
                                                      OpDecorate %250 RelaxedPrecision 
                                                      OpDecorate %252 RelaxedPrecision 
                                                      OpDecorate %254 RelaxedPrecision 
                                                      OpDecorate %255 RelaxedPrecision 
                                                      OpDecorate %258 RelaxedPrecision 
                                                      OpDecorate %259 RelaxedPrecision 
                                                      OpDecorate %260 RelaxedPrecision 
                                                      OpDecorate %263 RelaxedPrecision 
                                                      OpDecorate %265 RelaxedPrecision 
                                                      OpDecorate %266 RelaxedPrecision 
                                                      OpDecorate %270 RelaxedPrecision 
                                                      OpDecorate %271 RelaxedPrecision 
                                                      OpDecorate %272 RelaxedPrecision 
                                                      OpDecorate %275 RelaxedPrecision 
                                                      OpDecorate %276 RelaxedPrecision 
                                                      OpDecorate %277 RelaxedPrecision 
                                                      OpDecorate %279 RelaxedPrecision 
                                                      OpDecorate %280 RelaxedPrecision 
                                                      OpDecorate %281 RelaxedPrecision 
                                                      OpDecorate %282 RelaxedPrecision 
                                                      OpDecorate %284 RelaxedPrecision 
                                                      OpDecorate %285 RelaxedPrecision 
                                                      OpDecorate %286 RelaxedPrecision 
                                                      OpDecorate %287 RelaxedPrecision 
                                                      OpDecorate %288 RelaxedPrecision 
                                                      OpDecorate %289 RelaxedPrecision 
                                                      OpDecorate %291 RelaxedPrecision 
                                                      OpDecorate %292 RelaxedPrecision 
                                                      OpDecorate %293 RelaxedPrecision 
                                                      OpDecorate %294 RelaxedPrecision 
                                                      OpDecorate %295 RelaxedPrecision 
                                                      OpDecorate %296 RelaxedPrecision 
                                                      OpDecorate %297 RelaxedPrecision 
                                                      OpDecorate %298 RelaxedPrecision 
                                                      OpDecorate %299 RelaxedPrecision 
                                                      OpDecorate %301 RelaxedPrecision 
                                                      OpDecorate %302 RelaxedPrecision 
                                                      OpDecorate %302 DescriptorSet 302 
                                                      OpDecorate %302 Binding 302 
                                                      OpDecorate %303 RelaxedPrecision 
                                                      OpDecorate %304 RelaxedPrecision 
                                                      OpDecorate %304 DescriptorSet 304 
                                                      OpDecorate %304 Binding 304 
                                                      OpDecorate %305 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD0 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD0 Location 309 
                                                      OpDecorate %310 RelaxedPrecision 
                                                      OpDecorate %311 RelaxedPrecision 
                                                      OpDecorate %312 RelaxedPrecision 
                                                      OpDecorate %313 RelaxedPrecision 
                                                      OpDecorate %316 RelaxedPrecision 
                                                      OpDecorate %317 RelaxedPrecision 
                                                      OpDecorate %318 RelaxedPrecision 
                                                      OpDecorate %320 RelaxedPrecision 
                                                      OpDecorate %320 Location 320 
                                                      OpDecorate %322 RelaxedPrecision 
                                                      OpDecorate %324 RelaxedPrecision 
                                                      OpDecorate %325 RelaxedPrecision 
                                                      OpDecorate %328 RelaxedPrecision 
                                                      OpDecorate %331 RelaxedPrecision 
                                                      OpDecorate %332 RelaxedPrecision 
                                                      OpDecorate %333 RelaxedPrecision 
                                                      OpDecorate %334 RelaxedPrecision 
                                                      OpDecorate %335 RelaxedPrecision 
                                                      OpDecorate %336 RelaxedPrecision 
                                               %2 = OpTypeVoid 
                                               %3 = OpTypeFunction %2 
                                               %6 = OpTypeFloat 32 
                                               %7 = OpTypeVector %6 3 
                                               %8 = OpTypePointer Private %7 
                                Private f32_3* %9 = OpVariable Private 
                                              %10 = OpTypePointer Input %7 
                        Input f32_3* vs_TEXCOORD2 = OpVariable Input 
                                              %13 = OpTypeVector %6 4 
                                              %14 = OpTypeInt 32 0 
                                          u32 %15 = OpConstant 16 
                                              %16 = OpTypeArray %13 %15 
                                          u32 %17 = OpConstant 4 
                                              %18 = OpTypeArray %13 %17 
                                              %19 = OpTypeStruct %7 %13 %16 %13 %13 %18 %13 %13 %13 %13 %6 %6 
                                              %20 = OpTypePointer Uniform %19 
Uniform struct {f32_3; f32_4; f32_4[16]; f32_4; f32_4; f32_4[4]; f32_4; f32_4; f32_4; f32_4; f32; f32;}* %21 = OpVariable Uniform 
                                              %22 = OpTypeInt 32 1 
                                          i32 %23 = OpConstant 4 
                                              %24 = OpTypePointer Uniform %13 
                                          u32 %33 = OpConstant 0 
                                              %34 = OpTypePointer Private %6 
                               Private f32_3* %40 = OpVariable Private 
                                          i32 %43 = OpConstant 0 
                                              %44 = OpTypePointer Uniform %7 
                               Private f32_3* %48 = OpVariable Private 
                                          i32 %49 = OpConstant 5 
                                          u32 %50 = OpConstant 2 
                                              %51 = OpTypePointer Uniform %6 
                                          i32 %55 = OpConstant 1 
                                          u32 %58 = OpConstant 1 
                                          i32 %60 = OpConstant 2 
                                          u32 %75 = OpConstant 3 
                                          i32 %87 = OpConstant 3 
                                          f32 %97 = OpConstant 3.674022E-40 
                                          f32 %98 = OpConstant 3.674022E-40 
                                             %128 = OpTypePointer Function %7 
                                             %130 = OpTypeVector %6 2 
                                             %138 = OpTypeImage %6 Dim2D 0 0 0 1 Unknown 
                                             %139 = OpTypePointer UniformConstant %138 
        UniformConstant read_only Texture2D* %140 = OpVariable UniformConstant 
                                             %142 = OpTypeSampler 
                                             %143 = OpTypePointer UniformConstant %142 
                    UniformConstant sampler* %144 = OpVariable UniformConstant 
                                             %146 = OpTypeImage %6 Dim2D 1 0 0 1 Unknown 
                                             %147 = OpTypeSampledImage %146 
                              Private f32_3* %153 = OpVariable Private 
                              Private f32_3* %168 = OpVariable Private 
                        Input f32_3* vs_TEXCOORD1 = OpVariable Input 
                                Private f32* %206 = OpVariable Private 
                                         i32 %207 = OpConstant 11 
                                         f32 %211 = OpConstant 3.674022E-40 
                                         i32 %213 = OpConstant 10 
                                Private f32* %223 = OpVariable Private 
                                         f32 %247 = OpConstant 3.674022E-40 
                                         f32 %249 = OpConstant 3.674022E-40 
                                         i32 %268 = OpConstant 8 
                                         i32 %273 = OpConstant 9 
                              Private f32_3* %287 = OpVariable Private 
                                             %300 = OpTypePointer Private %13 
                              Private f32_4* %301 = OpVariable Private 
        UniformConstant read_only Texture2D* %302 = OpVariable UniformConstant 
                    UniformConstant sampler* %304 = OpVariable UniformConstant 
                                             %306 = OpTypeSampledImage %138 
                                             %308 = OpTypePointer Input %130 
                        Input f32_2* vs_TEXCOORD0 = OpVariable Input 
                                         i32 %314 = OpConstant 7 
                                             %319 = OpTypePointer Output %13 
                               Output f32_4* %320 = OpVariable Output 
                                             %326 = OpTypePointer Output %6 
                                         i32 %329 = OpConstant 6 
                                          void %4 = OpFunction None %3 
                                               %5 = OpLabel 
                             Function f32_3* %129 = OpVariable Function 
                                        f32_3 %12 = OpLoad vs_TEXCOORD2 
                               Uniform f32_4* %25 = OpAccessChain %21 %23 
                                        f32_4 %26 = OpLoad %25 
                                        f32_3 %27 = OpVectorShuffle %26 %26 0 1 2 
                                        f32_3 %28 = OpFNegate %27 
                                        f32_3 %29 = OpFAdd %12 %28 
                                                      OpStore %9 %29 
                                        f32_3 %30 = OpLoad %9 
                                        f32_3 %31 = OpLoad %9 
                                          f32 %32 = OpDot %30 %31 
                                 Private f32* %35 = OpAccessChain %9 %33 
                                                      OpStore %35 %32 
                                 Private f32* %36 = OpAccessChain %9 %33 
                                          f32 %37 = OpLoad %36 
                                          f32 %38 = OpExtInst %1 31 %37 
                                 Private f32* %39 = OpAccessChain %9 %33 
                                                      OpStore %39 %38 
                                        f32_3 %41 = OpLoad vs_TEXCOORD2 
                                        f32_3 %42 = OpFNegate %41 
                               Uniform f32_3* %45 = OpAccessChain %21 %43 
                                        f32_3 %46 = OpLoad %45 
                                        f32_3 %47 = OpFAdd %42 %46 
                                                      OpStore %40 %47 
                                 Uniform f32* %52 = OpAccessChain %21 %49 %43 %50 
                                          f32 %53 = OpLoad %52 
                                 Private f32* %54 = OpAccessChain %48 %33 
                                                      OpStore %54 %53 
                                 Uniform f32* %56 = OpAccessChain %21 %49 %55 %50 
                                          f32 %57 = OpLoad %56 
                                 Private f32* %59 = OpAccessChain %48 %58 
                                                      OpStore %59 %57 
                                 Uniform f32* %61 = OpAccessChain %21 %49 %60 %50 
                                          f32 %62 = OpLoad %61 
                                 Private f32* %63 = OpAccessChain %48 %50 
                                                      OpStore %63 %62 
                                        f32_3 %64 = OpLoad %40 
                                        f32_3 %65 = OpLoad %48 
                                          f32 %66 = OpDot %64 %65 
                                 Private f32* %67 = OpAccessChain %40 %33 
                                                      OpStore %67 %66 
                                 Private f32* %68 = OpAccessChain %40 %33 
                                          f32 %69 = OpLoad %68 
                                          f32 %70 = OpFNegate %69 
                                 Private f32* %71 = OpAccessChain %9 %33 
                                          f32 %72 = OpLoad %71 
                                          f32 %73 = OpFAdd %70 %72 
                                 Private f32* %74 = OpAccessChain %9 %33 
                                                      OpStore %74 %73 
                                 Uniform f32* %76 = OpAccessChain %21 %23 %75 
                                          f32 %77 = OpLoad %76 
                                 Private f32* %78 = OpAccessChain %9 %33 
                                          f32 %79 = OpLoad %78 
                                          f32 %80 = OpFMul %77 %79 
                                 Private f32* %81 = OpAccessChain %40 %33 
                                          f32 %82 = OpLoad %81 
                                          f32 %83 = OpFAdd %80 %82 
                                 Private f32* %84 = OpAccessChain %9 %33 
                                                      OpStore %84 %83 
                                 Private f32* %85 = OpAccessChain %9 %33 
                                          f32 %86 = OpLoad %85 
                                 Uniform f32* %88 = OpAccessChain %21 %87 %50 
                                          f32 %89 = OpLoad %88 
                                          f32 %90 = OpFMul %86 %89 
                                 Uniform f32* %91 = OpAccessChain %21 %87 %75 
                                          f32 %92 = OpLoad %91 
                                          f32 %93 = OpFAdd %90 %92 
                                 Private f32* %94 = OpAccessChain %9 %33 
                                                      OpStore %94 %93 
                                 Private f32* %95 = OpAccessChain %9 %33 
                                          f32 %96 = OpLoad %95 
                                          f32 %99 = OpExtInst %1 43 %96 %97 %98 
                                Private f32* %100 = OpAccessChain %9 %33 
                                                      OpStore %100 %99 
                                       f32_3 %101 = OpLoad vs_TEXCOORD2 
                                       f32_3 %102 = OpVectorShuffle %101 %101 1 1 1 
                              Uniform f32_4* %103 = OpAccessChain %21 %60 %55 
                                       f32_4 %104 = OpLoad %103 
                                       f32_3 %105 = OpVectorShuffle %104 %104 0 1 2 
                                       f32_3 %106 = OpFMul %102 %105 
                                                      OpStore %40 %106 
                              Uniform f32_4* %107 = OpAccessChain %21 %60 %43 
                                       f32_4 %108 = OpLoad %107 
                                       f32_3 %109 = OpVectorShuffle %108 %108 0 1 2 
                                       f32_3 %110 = OpLoad vs_TEXCOORD2 
                                       f32_3 %111 = OpVectorShuffle %110 %110 0 0 0 
                                       f32_3 %112 = OpFMul %109 %111 
                                       f32_3 %113 = OpLoad %40 
                                       f32_3 %114 = OpFAdd %112 %113 
                                                      OpStore %40 %114 
                              Uniform f32_4* %115 = OpAccessChain %21 %60 %60 
                                       f32_4 %116 = OpLoad %115 
                                       f32_3 %117 = OpVectorShuffle %116 %116 0 1 2 
                                       f32_3 %118 = OpLoad vs_TEXCOORD2 
                                       f32_3 %119 = OpVectorShuffle %118 %118 2 2 2 
                                       f32_3 %120 = OpFMul %117 %119 
                                       f32_3 %121 = OpLoad %40 
                                       f32_3 %122 = OpFAdd %120 %121 
                                                      OpStore %40 %122 
                                       f32_3 %123 = OpLoad %40 
                              Uniform f32_4* %124 = OpAccessChain %21 %60 %87 
                                       f32_4 %125 = OpLoad %124 
                                       f32_3 %126 = OpVectorShuffle %125 %125 0 1 2 
                                       f32_3 %127 = OpFAdd %123 %126 
                                                      OpStore %40 %127 
                                       f32_3 %131 = OpLoad %40 
                                       f32_2 %132 = OpVectorShuffle %131 %131 0 1 
                                Private f32* %133 = OpAccessChain %40 %50 
                                         f32 %134 = OpLoad %133 
                                         f32 %135 = OpCompositeExtract %132 0 
                                         f32 %136 = OpCompositeExtract %132 1 
                                       f32_3 %137 = OpCompositeConstruct %135 %136 %134 
                                                      OpStore %129 %137 
                         read_only Texture2D %141 = OpLoad %140 
                                     sampler %145 = OpLoad %144 
                  read_only Texture2DSampled %148 = OpSampledImage %141 %145 
                                       f32_3 %149 = OpLoad %129 
                                         f32 %150 = OpCompositeExtract %149 2 
                                         f32 %151 = OpImageSampleDrefExplicitLod %148 %149 %150 Lod %6 
                                Private f32* %152 = OpAccessChain %40 %33 
                                                      OpStore %152 %151 
                                Uniform f32* %154 = OpAccessChain %21 %87 %33 
                                         f32 %155 = OpLoad %154 
                                         f32 %156 = OpFNegate %155 
                                         f32 %157 = OpFAdd %156 %98 
                                Private f32* %158 = OpAccessChain %153 %33 
                                                      OpStore %158 %157 
                                Private f32* %159 = OpAccessChain %40 %33 
                                         f32 %160 = OpLoad %159 
                                Private f32* %161 = OpAccessChain %153 %33 
                                         f32 %162 = OpLoad %161 
                                         f32 %163 = OpFMul %160 %162 
                                Uniform f32* %164 = OpAccessChain %21 %87 %33 
                                         f32 %165 = OpLoad %164 
                                         f32 %166 = OpFAdd %163 %165 
                                Private f32* %167 = OpAccessChain %153 %33 
                                                      OpStore %167 %166 
                                Private f32* %169 = OpAccessChain %153 %33 
                                         f32 %170 = OpLoad %169 
                                         f32 %171 = OpFNegate %170 
                                         f32 %172 = OpFAdd %171 %98 
                                Private f32* %173 = OpAccessChain %168 %33 
                                                      OpStore %173 %172 
                                Private f32* %174 = OpAccessChain %9 %33 
                                         f32 %175 = OpLoad %174 
                                Private f32* %176 = OpAccessChain %168 %33 
                                         f32 %177 = OpLoad %176 
                                         f32 %178 = OpFMul %175 %177 
                                Private f32* %179 = OpAccessChain %153 %33 
                                         f32 %180 = OpLoad %179 
                                         f32 %181 = OpFAdd %178 %180 
                                Private f32* %182 = OpAccessChain %153 %33 
                                                      OpStore %182 %181 
                                       f32_3 %184 = OpLoad vs_TEXCOORD1 
                                       f32_3 %185 = OpLoad vs_TEXCOORD1 
                                         f32 %186 = OpDot %184 %185 
                                Private f32* %187 = OpAccessChain %168 %33 
                                                      OpStore %187 %186 
                                Private f32* %188 = OpAccessChain %168 %33 
                                         f32 %189 = OpLoad %188 
                                         f32 %190 = OpExtInst %1 32 %189 
                                Private f32* %191 = OpAccessChain %168 %33 
                                                      OpStore %191 %190 
                                       f32_3 %192 = OpLoad %168 
                                       f32_3 %193 = OpVectorShuffle %192 %192 0 0 0 
                                       f32_3 %194 = OpLoad vs_TEXCOORD1 
                                       f32_3 %195 = OpFMul %193 %194 
                                                      OpStore %168 %195 
                                       f32_3 %196 = OpLoad %168 
                              Uniform f32_4* %197 = OpAccessChain %21 %55 
                                       f32_4 %198 = OpLoad %197 
                                       f32_3 %199 = OpVectorShuffle %198 %198 0 1 2 
                                         f32 %200 = OpDot %196 %199 
                                Private f32* %201 = OpAccessChain %168 %33 
                                                      OpStore %201 %200 
                                Private f32* %202 = OpAccessChain %168 %33 
                                         f32 %203 = OpLoad %202 
                                         f32 %204 = OpExtInst %1 40 %203 %97 
                                Private f32* %205 = OpAccessChain %168 %33 
                                                      OpStore %205 %204 
                                Uniform f32* %208 = OpAccessChain %21 %207 
                                         f32 %209 = OpLoad %208 
                                         f32 %210 = OpFNegate %209 
                                         f32 %212 = OpFMul %210 %211 
                                Uniform f32* %214 = OpAccessChain %21 %213 
                                         f32 %215 = OpLoad %214 
                                         f32 %216 = OpFAdd %212 %215 
                                                      OpStore %206 %216 
                                         f32 %217 = OpLoad %206 
                                         f32 %218 = OpFNegate %217 
                                Private f32* %219 = OpAccessChain %168 %33 
                                         f32 %220 = OpLoad %219 
                                         f32 %221 = OpFAdd %218 %220 
                                Private f32* %222 = OpAccessChain %168 %33 
                                                      OpStore %222 %221 
                                Uniform f32* %224 = OpAccessChain %21 %207 
                                         f32 %225 = OpLoad %224 
                                         f32 %226 = OpFMul %225 %211 
                                Uniform f32* %227 = OpAccessChain %21 %213 
                                         f32 %228 = OpLoad %227 
                                         f32 %229 = OpFAdd %226 %228 
                                                      OpStore %223 %229 
                                         f32 %230 = OpLoad %206 
                                         f32 %231 = OpFNegate %230 
                                         f32 %232 = OpLoad %223 
                                         f32 %233 = OpFAdd %231 %232 
                                                      OpStore %206 %233 
                                         f32 %234 = OpLoad %206 
                                         f32 %235 = OpFDiv %98 %234 
                                                      OpStore %206 %235 
                                         f32 %236 = OpLoad %206 
                                Private f32* %237 = OpAccessChain %168 %33 
                                         f32 %238 = OpLoad %237 
                                         f32 %239 = OpFMul %236 %238 
                                Private f32* %240 = OpAccessChain %168 %33 
                                                      OpStore %240 %239 
                                Private f32* %241 = OpAccessChain %168 %33 
                                         f32 %242 = OpLoad %241 
                                         f32 %243 = OpExtInst %1 43 %242 %97 %98 
                                Private f32* %244 = OpAccessChain %168 %33 
                                                      OpStore %244 %243 
                                Private f32* %245 = OpAccessChain %168 %33 
                                         f32 %246 = OpLoad %245 
                                         f32 %248 = OpFMul %246 %247 
                                         f32 %250 = OpFAdd %248 %249 
                                                      OpStore %206 %250 
                                Private f32* %251 = OpAccessChain %168 %33 
                                         f32 %252 = OpLoad %251 
                                Private f32* %253 = OpAccessChain %168 %33 
                                         f32 %254 = OpLoad %253 
                                         f32 %255 = OpFMul %252 %254 
                                Private f32* %256 = OpAccessChain %168 %33 
                                                      OpStore %256 %255 
                                Private f32* %257 = OpAccessChain %168 %33 
                                         f32 %258 = OpLoad %257 
                                         f32 %259 = OpLoad %206 
                                         f32 %260 = OpFMul %258 %259 
                                Private f32* %261 = OpAccessChain %168 %33 
                                                      OpStore %261 %260 
                                Private f32* %262 = OpAccessChain %153 %33 
                                         f32 %263 = OpLoad %262 
                                Private f32* %264 = OpAccessChain %168 %33 
                                         f32 %265 = OpLoad %264 
                                         f32 %266 = OpFMul %263 %265 
                                Private f32* %267 = OpAccessChain %153 %33 
                                                      OpStore %267 %266 
                              Uniform f32_4* %269 = OpAccessChain %21 %268 
                                       f32_4 %270 = OpLoad %269 
                                       f32_3 %271 = OpVectorShuffle %270 %270 0 1 2 
                                       f32_3 %272 = OpFNegate %271 
                              Uniform f32_4* %274 = OpAccessChain %21 %273 
                                       f32_4 %275 = OpLoad %274 
                                       f32_3 %276 = OpVectorShuffle %275 %275 0 1 2 
                                       f32_3 %277 = OpFAdd %272 %276 
                                                      OpStore %168 %277 
                              Uniform f32_4* %278 = OpAccessChain %21 %273 
                                       f32_4 %279 = OpLoad %278 
                                       f32_3 %280 = OpVectorShuffle %279 %279 3 3 3 
                                       f32_3 %281 = OpLoad %168 
                                       f32_3 %282 = OpFMul %280 %281 
                              Uniform f32_4* %283 = OpAccessChain %21 %268 
                                       f32_4 %284 = OpLoad %283 
                                       f32_3 %285 = OpVectorShuffle %284 %284 0 1 2 
                                       f32_3 %286 = OpFAdd %282 %285 
                                                      OpStore %168 %286 
                                       f32_3 %288 = OpLoad %168 
                                       f32_3 %289 = OpFNegate %288 
                              Uniform f32_4* %290 = OpAccessChain %21 %268 
                                       f32_4 %291 = OpLoad %290 
                                       f32_3 %292 = OpVectorShuffle %291 %291 0 1 2 
                                       f32_3 %293 = OpFAdd %289 %292 
                                                      OpStore %287 %293 
                                       f32_3 %294 = OpLoad %153 
                                       f32_3 %295 = OpVectorShuffle %294 %294 0 0 0 
                                       f32_3 %296 = OpLoad %287 
                                       f32_3 %297 = OpFMul %295 %296 
                                       f32_3 %298 = OpLoad %168 
                                       f32_3 %299 = OpFAdd %297 %298 
                                                      OpStore %153 %299 
                         read_only Texture2D %303 = OpLoad %302 
                                     sampler %305 = OpLoad %304 
                  read_only Texture2DSampled %307 = OpSampledImage %303 %305 
                                       f32_2 %310 = OpLoad vs_TEXCOORD0 
                                       f32_4 %311 = OpImageSampleImplicitLod %307 %310 
                                                      OpStore %301 %311 
                                       f32_4 %312 = OpLoad %301 
                                       f32_3 %313 = OpVectorShuffle %312 %312 0 1 2 
                              Uniform f32_4* %315 = OpAccessChain %21 %314 
                                       f32_4 %316 = OpLoad %315 
                                       f32_3 %317 = OpVectorShuffle %316 %316 0 1 2 
                                       f32_3 %318 = OpFMul %313 %317 
                                                      OpStore %287 %318 
                                Private f32* %321 = OpAccessChain %301 %75 
                                         f32 %322 = OpLoad %321 
                                Uniform f32* %323 = OpAccessChain %21 %314 %75 
                                         f32 %324 = OpLoad %323 
                                         f32 %325 = OpFMul %322 %324 
                                 Output f32* %327 = OpAccessChain %320 %75 
                                                      OpStore %327 %325 
                                       f32_3 %328 = OpLoad %287 
                              Uniform f32_4* %330 = OpAccessChain %21 %329 
                                       f32_4 %331 = OpLoad %330 
                                       f32_3 %332 = OpVectorShuffle %331 %331 0 1 2 
                                       f32_3 %333 = OpFMul %328 %332 
                                                      OpStore %287 %333 
                                       f32_3 %334 = OpLoad %153 
                                       f32_3 %335 = OpLoad %287 
                                       f32_3 %336 = OpFMul %334 %335 
                                       f32_4 %337 = OpLoad %320 
                                       f32_4 %338 = OpVectorShuffle %337 %336 4 5 6 3 
                                                      OpStore %320 %338 
                                                      OpReturn
                                                      OpFunctionEnd
"
}
SubProgram "vulkan hw_tier02 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "VERTEXLIGHT_ON" }
"; SPIR-V
; Version: 1.0
; Generator: Khronos Glslang Reference Front End; 6
; Bound: 160
; Schema: 0
                                                      OpCapability Shader 
                                               %1 = OpExtInstImport "GLSL.std.450" 
                                                      OpMemoryModel Logical GLSL450 
                                                      OpEntryPoint Vertex %4 "main" %11 %52 %85 %95 %110 %114 %144 %150 %153 
                                                      OpName vs_TEXCOORD2 "vs_TEXCOORD2" 
                                                      OpName vs_TEXCOORD0 "vs_TEXCOORD0" 
                                                      OpName vs_TEXCOORD1 "vs_TEXCOORD1" 
                                                      OpName vs_TEXCOORD5 "vs_TEXCOORD5" 
                                                      OpName vs_TEXCOORD6 "vs_TEXCOORD6" 
                                                      OpDecorate %11 Location 11 
                                                      OpDecorate %16 ArrayStride 16 
                                                      OpDecorate %17 ArrayStride 17 
                                                      OpDecorate %18 ArrayStride 18 
                                                      OpMemberDecorate %19 0 Offset 19 
                                                      OpMemberDecorate %19 1 Offset 19 
                                                      OpMemberDecorate %19 2 Offset 19 
                                                      OpMemberDecorate %19 3 Offset 19 
                                                      OpDecorate %19 Block 
                                                      OpDecorate %21 DescriptorSet 21 
                                                      OpDecorate %21 Binding 21 
                                                      OpDecorate vs_TEXCOORD2 Location 52 
                                                      OpMemberDecorate %83 0 BuiltIn 83 
                                                      OpMemberDecorate %83 1 BuiltIn 83 
                                                      OpMemberDecorate %83 2 BuiltIn 83 
                                                      OpDecorate %83 Block 
                                                      OpDecorate %95 Location 95 
                                                      OpDecorate vs_TEXCOORD0 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD0 Location 110 
                                                      OpDecorate %114 Location 114 
                                                      OpDecorate vs_TEXCOORD1 Location 144 
                                                      OpDecorate vs_TEXCOORD5 Location 150 
                                                      OpDecorate vs_TEXCOORD6 Location 153 
                                               %2 = OpTypeVoid 
                                               %3 = OpTypeFunction %2 
                                               %6 = OpTypeFloat 32 
                                               %7 = OpTypeVector %6 4 
                                               %8 = OpTypePointer Private %7 
                                Private f32_4* %9 = OpVariable Private 
                                              %10 = OpTypePointer Input %7 
                                 Input f32_4* %11 = OpVariable Input 
                                              %14 = OpTypeInt 32 0 
                                          u32 %15 = OpConstant 4 
                                              %16 = OpTypeArray %7 %15 
                                              %17 = OpTypeArray %7 %15 
                                              %18 = OpTypeArray %7 %15 
                                              %19 = OpTypeStruct %16 %17 %18 %7 
                                              %20 = OpTypePointer Uniform %19 
Uniform struct {f32_4[4]; f32_4[4]; f32_4[4]; f32_4;}* %21 = OpVariable Uniform 
                                              %22 = OpTypeInt 32 1 
                                          i32 %23 = OpConstant 0 
                                          i32 %24 = OpConstant 1 
                                              %25 = OpTypePointer Uniform %7 
                                          i32 %36 = OpConstant 2 
                               Private f32_4* %44 = OpVariable Private 
                                          i32 %46 = OpConstant 3 
                                              %50 = OpTypeVector %6 3 
                                              %51 = OpTypePointer Output %50 
                       Output f32_3* vs_TEXCOORD2 = OpVariable Output 
                                          u32 %81 = OpConstant 1 
                                              %82 = OpTypeArray %6 %81 
                                              %83 = OpTypeStruct %7 %6 %82 
                                              %84 = OpTypePointer Output %83 
         Output struct {f32_4; f32; f32[1];}* %85 = OpVariable Output 
                                              %93 = OpTypePointer Output %7 
                                 Input f32_4* %95 = OpVariable Input 
                                              %96 = OpTypeVector %6 2 
                                             %109 = OpTypePointer Output %96 
                       Output f32_2* vs_TEXCOORD0 = OpVariable Output 
                                             %113 = OpTypePointer Input %50 
                                Input f32_3* %114 = OpVariable Input 
                                         u32 %120 = OpConstant 0 
                                             %121 = OpTypePointer Private %6 
                                         u32 %134 = OpConstant 2 
                                Private f32* %136 = OpVariable Private 
                       Output f32_3* vs_TEXCOORD1 = OpVariable Output 
                       Output f32_4* vs_TEXCOORD5 = OpVariable Output 
                                         f32 %151 = OpConstant 3.674022E-40 
                                       f32_4 %152 = OpConstantComposite %151 %151 %151 %151 
                       Output f32_4* vs_TEXCOORD6 = OpVariable Output 
                                             %154 = OpTypePointer Output %6 
                                          void %4 = OpFunction None %3 
                                               %5 = OpLabel 
                                        f32_4 %12 = OpLoad %11 
                                        f32_4 %13 = OpVectorShuffle %12 %12 1 1 1 1 
                               Uniform f32_4* %26 = OpAccessChain %21 %23 %24 
                                        f32_4 %27 = OpLoad %26 
                                        f32_4 %28 = OpFMul %13 %27 
                                                      OpStore %9 %28 
                               Uniform f32_4* %29 = OpAccessChain %21 %23 %23 
                                        f32_4 %30 = OpLoad %29 
                                        f32_4 %31 = OpLoad %11 
                                        f32_4 %32 = OpVectorShuffle %31 %31 0 0 0 0 
                                        f32_4 %33 = OpFMul %30 %32 
                                        f32_4 %34 = OpLoad %9 
                                        f32_4 %35 = OpFAdd %33 %34 
                                                      OpStore %9 %35 
                               Uniform f32_4* %37 = OpAccessChain %21 %23 %36 
                                        f32_4 %38 = OpLoad %37 
                                        f32_4 %39 = OpLoad %11 
                                        f32_4 %40 = OpVectorShuffle %39 %39 2 2 2 2 
                                        f32_4 %41 = OpFMul %38 %40 
                                        f32_4 %42 = OpLoad %9 
                                        f32_4 %43 = OpFAdd %41 %42 
                                                      OpStore %9 %43 
                                        f32_4 %45 = OpLoad %9 
                               Uniform f32_4* %47 = OpAccessChain %21 %23 %46 
                                        f32_4 %48 = OpLoad %47 
                                        f32_4 %49 = OpFAdd %45 %48 
                                                      OpStore %44 %49 
                               Uniform f32_4* %53 = OpAccessChain %21 %23 %46 
                                        f32_4 %54 = OpLoad %53 
                                        f32_3 %55 = OpVectorShuffle %54 %54 0 1 2 
                                        f32_4 %56 = OpLoad %11 
                                        f32_3 %57 = OpVectorShuffle %56 %56 3 3 3 
                                        f32_3 %58 = OpFMul %55 %57 
                                        f32_4 %59 = OpLoad %9 
                                        f32_3 %60 = OpVectorShuffle %59 %59 0 1 2 
                                        f32_3 %61 = OpFAdd %58 %60 
                                                      OpStore vs_TEXCOORD2 %61 
                                        f32_4 %62 = OpLoad %44 
                                        f32_4 %63 = OpVectorShuffle %62 %62 1 1 1 1 
                               Uniform f32_4* %64 = OpAccessChain %21 %36 %24 
                                        f32_4 %65 = OpLoad %64 
                                        f32_4 %66 = OpFMul %63 %65 
                                                      OpStore %9 %66 
                               Uniform f32_4* %67 = OpAccessChain %21 %36 %23 
                                        f32_4 %68 = OpLoad %67 
                                        f32_4 %69 = OpLoad %44 
                                        f32_4 %70 = OpVectorShuffle %69 %69 0 0 0 0 
                                        f32_4 %71 = OpFMul %68 %70 
                                        f32_4 %72 = OpLoad %9 
                                        f32_4 %73 = OpFAdd %71 %72 
                                                      OpStore %9 %73 
                               Uniform f32_4* %74 = OpAccessChain %21 %36 %36 
                                        f32_4 %75 = OpLoad %74 
                                        f32_4 %76 = OpLoad %44 
                                        f32_4 %77 = OpVectorShuffle %76 %76 2 2 2 2 
                                        f32_4 %78 = OpFMul %75 %77 
                                        f32_4 %79 = OpLoad %9 
                                        f32_4 %80 = OpFAdd %78 %79 
                                                      OpStore %9 %80 
                               Uniform f32_4* %86 = OpAccessChain %21 %36 %46 
                                        f32_4 %87 = OpLoad %86 
                                        f32_4 %88 = OpLoad %44 
                                        f32_4 %89 = OpVectorShuffle %88 %88 3 3 3 3 
                                        f32_4 %90 = OpFMul %87 %89 
                                        f32_4 %91 = OpLoad %9 
                                        f32_4 %92 = OpFAdd %90 %91 
                                Output f32_4* %94 = OpAccessChain %85 %23 
                                                      OpStore %94 %92 
                                        f32_4 %97 = OpLoad %95 
                                        f32_2 %98 = OpVectorShuffle %97 %97 0 1 
                               Uniform f32_4* %99 = OpAccessChain %21 %46 
                                       f32_4 %100 = OpLoad %99 
                                       f32_2 %101 = OpVectorShuffle %100 %100 0 1 
                                       f32_2 %102 = OpFMul %98 %101 
                              Uniform f32_4* %103 = OpAccessChain %21 %46 
                                       f32_4 %104 = OpLoad %103 
                                       f32_2 %105 = OpVectorShuffle %104 %104 2 3 
                                       f32_2 %106 = OpFAdd %102 %105 
                                       f32_4 %107 = OpLoad %9 
                                       f32_4 %108 = OpVectorShuffle %107 %106 4 5 2 3 
                                                      OpStore %9 %108 
                                       f32_4 %111 = OpLoad %9 
                                       f32_2 %112 = OpVectorShuffle %111 %111 0 1 
                                                      OpStore vs_TEXCOORD0 %112 
                                       f32_3 %115 = OpLoad %114 
                              Uniform f32_4* %116 = OpAccessChain %21 %24 %23 
                                       f32_4 %117 = OpLoad %116 
                                       f32_3 %118 = OpVectorShuffle %117 %117 0 1 2 
                                         f32 %119 = OpDot %115 %118 
                                Private f32* %122 = OpAccessChain %9 %120 
                                                      OpStore %122 %119 
                                       f32_3 %123 = OpLoad %114 
                              Uniform f32_4* %124 = OpAccessChain %21 %24 %24 
                                       f32_4 %125 = OpLoad %124 
                                       f32_3 %126 = OpVectorShuffle %125 %125 0 1 2 
                                         f32 %127 = OpDot %123 %126 
                                Private f32* %128 = OpAccessChain %9 %81 
                                                      OpStore %128 %127 
                                       f32_3 %129 = OpLoad %114 
                              Uniform f32_4* %130 = OpAccessChain %21 %24 %36 
                                       f32_4 %131 = OpLoad %130 
                                       f32_3 %132 = OpVectorShuffle %131 %131 0 1 2 
                                         f32 %133 = OpDot %129 %132 
                                Private f32* %135 = OpAccessChain %9 %134 
                                                      OpStore %135 %133 
                                       f32_4 %137 = OpLoad %9 
                                       f32_3 %138 = OpVectorShuffle %137 %137 0 1 2 
                                       f32_4 %139 = OpLoad %9 
                                       f32_3 %140 = OpVectorShuffle %139 %139 0 1 2 
                                         f32 %141 = OpDot %138 %140 
                                                      OpStore %136 %141 
                                         f32 %142 = OpLoad %136 
                                         f32 %143 = OpExtInst %1 32 %142 
                                                      OpStore %136 %143 
                                         f32 %145 = OpLoad %136 
                                       f32_3 %146 = OpCompositeConstruct %145 %145 %145 
                                       f32_4 %147 = OpLoad %9 
                                       f32_3 %148 = OpVectorShuffle %147 %147 0 1 2 
                                       f32_3 %149 = OpFMul %146 %148 
                                                      OpStore vs_TEXCOORD1 %149 
                                                      OpStore vs_TEXCOORD5 %152 
                                                      OpStore vs_TEXCOORD6 %152 
                                 Output f32* %155 = OpAccessChain %85 %23 %81 
                                         f32 %156 = OpLoad %155 
                                         f32 %157 = OpFNegate %156 
                                 Output f32* %158 = OpAccessChain %85 %23 %81 
                                                      OpStore %158 %157 
                                                      OpReturn
                                                      OpFunctionEnd
; SPIR-V
; Version: 1.0
; Generator: Khronos Glslang Reference Front End; 6
; Bound: 340
; Schema: 0
                                                      OpCapability Shader 
                                               %1 = OpExtInstImport "GLSL.std.450" 
                                                      OpMemoryModel Logical GLSL450 
                                                      OpEntryPoint Fragment %4 "main" %11 %183 %309 %320 
                                                      OpExecutionMode %4 OriginUpperLeft 
                                                      OpName vs_TEXCOORD2 "vs_TEXCOORD2" 
                                                      OpName vs_TEXCOORD1 "vs_TEXCOORD1" 
                                                      OpName vs_TEXCOORD0 "vs_TEXCOORD0" 
                                                      OpDecorate vs_TEXCOORD2 Location 11 
                                                      OpDecorate %16 ArrayStride 16 
                                                      OpDecorate %18 ArrayStride 18 
                                                      OpMemberDecorate %19 0 Offset 19 
                                                      OpMemberDecorate %19 1 RelaxedPrecision 
                                                      OpMemberDecorate %19 1 Offset 19 
                                                      OpMemberDecorate %19 2 Offset 19 
                                                      OpMemberDecorate %19 3 RelaxedPrecision 
                                                      OpMemberDecorate %19 3 Offset 19 
                                                      OpMemberDecorate %19 4 Offset 19 
                                                      OpMemberDecorate %19 5 Offset 19 
                                                      OpMemberDecorate %19 6 RelaxedPrecision 
                                                      OpMemberDecorate %19 6 Offset 19 
                                                      OpMemberDecorate %19 7 RelaxedPrecision 
                                                      OpMemberDecorate %19 7 Offset 19 
                                                      OpMemberDecorate %19 8 RelaxedPrecision 
                                                      OpMemberDecorate %19 8 Offset 19 
                                                      OpMemberDecorate %19 9 RelaxedPrecision 
                                                      OpMemberDecorate %19 9 Offset 19 
                                                      OpMemberDecorate %19 10 RelaxedPrecision 
                                                      OpMemberDecorate %19 10 Offset 19 
                                                      OpMemberDecorate %19 11 RelaxedPrecision 
                                                      OpMemberDecorate %19 11 Offset 19 
                                                      OpDecorate %19 Block 
                                                      OpDecorate %21 DescriptorSet 21 
                                                      OpDecorate %21 Binding 21 
                                                      OpDecorate %89 RelaxedPrecision 
                                                      OpDecorate %92 RelaxedPrecision 
                                                      OpDecorate %140 DescriptorSet 140 
                                                      OpDecorate %140 Binding 140 
                                                      OpDecorate %144 DescriptorSet 144 
                                                      OpDecorate %144 Binding 144 
                                                      OpDecorate %153 RelaxedPrecision 
                                                      OpDecorate %155 RelaxedPrecision 
                                                      OpDecorate %156 RelaxedPrecision 
                                                      OpDecorate %157 RelaxedPrecision 
                                                      OpDecorate %162 RelaxedPrecision 
                                                      OpDecorate %165 RelaxedPrecision 
                                                      OpDecorate %168 RelaxedPrecision 
                                                      OpDecorate %170 RelaxedPrecision 
                                                      OpDecorate %171 RelaxedPrecision 
                                                      OpDecorate %172 RelaxedPrecision 
                                                      OpDecorate %177 RelaxedPrecision 
                                                      OpDecorate %180 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD1 Location 183 
                                                      OpDecorate %189 RelaxedPrecision 
                                                      OpDecorate %190 RelaxedPrecision 
                                                      OpDecorate %192 RelaxedPrecision 
                                                      OpDecorate %193 RelaxedPrecision 
                                                      OpDecorate %196 RelaxedPrecision 
                                                      OpDecorate %198 RelaxedPrecision 
                                                      OpDecorate %199 RelaxedPrecision 
                                                      OpDecorate %200 RelaxedPrecision 
                                                      OpDecorate %203 RelaxedPrecision 
                                                      OpDecorate %204 RelaxedPrecision 
                                                      OpDecorate %206 RelaxedPrecision 
                                                      OpDecorate %209 RelaxedPrecision 
                                                      OpDecorate %210 RelaxedPrecision 
                                                      OpDecorate %212 RelaxedPrecision 
                                                      OpDecorate %215 RelaxedPrecision 
                                                      OpDecorate %216 RelaxedPrecision 
                                                      OpDecorate %217 RelaxedPrecision 
                                                      OpDecorate %218 RelaxedPrecision 
                                                      OpDecorate %220 RelaxedPrecision 
                                                      OpDecorate %221 RelaxedPrecision 
                                                      OpDecorate %223 RelaxedPrecision 
                                                      OpDecorate %225 RelaxedPrecision 
                                                      OpDecorate %226 RelaxedPrecision 
                                                      OpDecorate %228 RelaxedPrecision 
                                                      OpDecorate %229 RelaxedPrecision 
                                                      OpDecorate %230 RelaxedPrecision 
                                                      OpDecorate %231 RelaxedPrecision 
                                                      OpDecorate %232 RelaxedPrecision 
                                                      OpDecorate %233 RelaxedPrecision 
                                                      OpDecorate %234 RelaxedPrecision 
                                                      OpDecorate %235 RelaxedPrecision 
                                                      OpDecorate %236 RelaxedPrecision 
                                                      OpDecorate %238 RelaxedPrecision 
                                                      OpDecorate %239 RelaxedPrecision 
                                                      OpDecorate %242 RelaxedPrecision 
                                                      OpDecorate %243 RelaxedPrecision 
                                                      OpDecorate %246 RelaxedPrecision 
                                                      OpDecorate %248 RelaxedPrecision 
                                                      OpDecorate %250 RelaxedPrecision 
                                                      OpDecorate %252 RelaxedPrecision 
                                                      OpDecorate %254 RelaxedPrecision 
                                                      OpDecorate %255 RelaxedPrecision 
                                                      OpDecorate %258 RelaxedPrecision 
                                                      OpDecorate %259 RelaxedPrecision 
                                                      OpDecorate %260 RelaxedPrecision 
                                                      OpDecorate %263 RelaxedPrecision 
                                                      OpDecorate %265 RelaxedPrecision 
                                                      OpDecorate %266 RelaxedPrecision 
                                                      OpDecorate %270 RelaxedPrecision 
                                                      OpDecorate %271 RelaxedPrecision 
                                                      OpDecorate %272 RelaxedPrecision 
                                                      OpDecorate %275 RelaxedPrecision 
                                                      OpDecorate %276 RelaxedPrecision 
                                                      OpDecorate %277 RelaxedPrecision 
                                                      OpDecorate %279 RelaxedPrecision 
                                                      OpDecorate %280 RelaxedPrecision 
                                                      OpDecorate %281 RelaxedPrecision 
                                                      OpDecorate %282 RelaxedPrecision 
                                                      OpDecorate %284 RelaxedPrecision 
                                                      OpDecorate %285 RelaxedPrecision 
                                                      OpDecorate %286 RelaxedPrecision 
                                                      OpDecorate %287 RelaxedPrecision 
                                                      OpDecorate %288 RelaxedPrecision 
                                                      OpDecorate %289 RelaxedPrecision 
                                                      OpDecorate %291 RelaxedPrecision 
                                                      OpDecorate %292 RelaxedPrecision 
                                                      OpDecorate %293 RelaxedPrecision 
                                                      OpDecorate %294 RelaxedPrecision 
                                                      OpDecorate %295 RelaxedPrecision 
                                                      OpDecorate %296 RelaxedPrecision 
                                                      OpDecorate %297 RelaxedPrecision 
                                                      OpDecorate %298 RelaxedPrecision 
                                                      OpDecorate %299 RelaxedPrecision 
                                                      OpDecorate %301 RelaxedPrecision 
                                                      OpDecorate %302 RelaxedPrecision 
                                                      OpDecorate %302 DescriptorSet 302 
                                                      OpDecorate %302 Binding 302 
                                                      OpDecorate %303 RelaxedPrecision 
                                                      OpDecorate %304 RelaxedPrecision 
                                                      OpDecorate %304 DescriptorSet 304 
                                                      OpDecorate %304 Binding 304 
                                                      OpDecorate %305 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD0 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD0 Location 309 
                                                      OpDecorate %310 RelaxedPrecision 
                                                      OpDecorate %311 RelaxedPrecision 
                                                      OpDecorate %312 RelaxedPrecision 
                                                      OpDecorate %313 RelaxedPrecision 
                                                      OpDecorate %316 RelaxedPrecision 
                                                      OpDecorate %317 RelaxedPrecision 
                                                      OpDecorate %318 RelaxedPrecision 
                                                      OpDecorate %320 RelaxedPrecision 
                                                      OpDecorate %320 Location 320 
                                                      OpDecorate %322 RelaxedPrecision 
                                                      OpDecorate %324 RelaxedPrecision 
                                                      OpDecorate %325 RelaxedPrecision 
                                                      OpDecorate %328 RelaxedPrecision 
                                                      OpDecorate %331 RelaxedPrecision 
                                                      OpDecorate %332 RelaxedPrecision 
                                                      OpDecorate %333 RelaxedPrecision 
                                                      OpDecorate %334 RelaxedPrecision 
                                                      OpDecorate %335 RelaxedPrecision 
                                                      OpDecorate %336 RelaxedPrecision 
                                               %2 = OpTypeVoid 
                                               %3 = OpTypeFunction %2 
                                               %6 = OpTypeFloat 32 
                                               %7 = OpTypeVector %6 3 
                                               %8 = OpTypePointer Private %7 
                                Private f32_3* %9 = OpVariable Private 
                                              %10 = OpTypePointer Input %7 
                        Input f32_3* vs_TEXCOORD2 = OpVariable Input 
                                              %13 = OpTypeVector %6 4 
                                              %14 = OpTypeInt 32 0 
                                          u32 %15 = OpConstant 16 
                                              %16 = OpTypeArray %13 %15 
                                          u32 %17 = OpConstant 4 
                                              %18 = OpTypeArray %13 %17 
                                              %19 = OpTypeStruct %7 %13 %16 %13 %13 %18 %13 %13 %13 %13 %6 %6 
                                              %20 = OpTypePointer Uniform %19 
Uniform struct {f32_3; f32_4; f32_4[16]; f32_4; f32_4; f32_4[4]; f32_4; f32_4; f32_4; f32_4; f32; f32;}* %21 = OpVariable Uniform 
                                              %22 = OpTypeInt 32 1 
                                          i32 %23 = OpConstant 4 
                                              %24 = OpTypePointer Uniform %13 
                                          u32 %33 = OpConstant 0 
                                              %34 = OpTypePointer Private %6 
                               Private f32_3* %40 = OpVariable Private 
                                          i32 %43 = OpConstant 0 
                                              %44 = OpTypePointer Uniform %7 
                               Private f32_3* %48 = OpVariable Private 
                                          i32 %49 = OpConstant 5 
                                          u32 %50 = OpConstant 2 
                                              %51 = OpTypePointer Uniform %6 
                                          i32 %55 = OpConstant 1 
                                          u32 %58 = OpConstant 1 
                                          i32 %60 = OpConstant 2 
                                          u32 %75 = OpConstant 3 
                                          i32 %87 = OpConstant 3 
                                          f32 %97 = OpConstant 3.674022E-40 
                                          f32 %98 = OpConstant 3.674022E-40 
                                             %128 = OpTypePointer Function %7 
                                             %130 = OpTypeVector %6 2 
                                             %138 = OpTypeImage %6 Dim2D 0 0 0 1 Unknown 
                                             %139 = OpTypePointer UniformConstant %138 
        UniformConstant read_only Texture2D* %140 = OpVariable UniformConstant 
                                             %142 = OpTypeSampler 
                                             %143 = OpTypePointer UniformConstant %142 
                    UniformConstant sampler* %144 = OpVariable UniformConstant 
                                             %146 = OpTypeImage %6 Dim2D 1 0 0 1 Unknown 
                                             %147 = OpTypeSampledImage %146 
                              Private f32_3* %153 = OpVariable Private 
                              Private f32_3* %168 = OpVariable Private 
                        Input f32_3* vs_TEXCOORD1 = OpVariable Input 
                                Private f32* %206 = OpVariable Private 
                                         i32 %207 = OpConstant 11 
                                         f32 %211 = OpConstant 3.674022E-40 
                                         i32 %213 = OpConstant 10 
                                Private f32* %223 = OpVariable Private 
                                         f32 %247 = OpConstant 3.674022E-40 
                                         f32 %249 = OpConstant 3.674022E-40 
                                         i32 %268 = OpConstant 8 
                                         i32 %273 = OpConstant 9 
                              Private f32_3* %287 = OpVariable Private 
                                             %300 = OpTypePointer Private %13 
                              Private f32_4* %301 = OpVariable Private 
        UniformConstant read_only Texture2D* %302 = OpVariable UniformConstant 
                    UniformConstant sampler* %304 = OpVariable UniformConstant 
                                             %306 = OpTypeSampledImage %138 
                                             %308 = OpTypePointer Input %130 
                        Input f32_2* vs_TEXCOORD0 = OpVariable Input 
                                         i32 %314 = OpConstant 7 
                                             %319 = OpTypePointer Output %13 
                               Output f32_4* %320 = OpVariable Output 
                                             %326 = OpTypePointer Output %6 
                                         i32 %329 = OpConstant 6 
                                          void %4 = OpFunction None %3 
                                               %5 = OpLabel 
                             Function f32_3* %129 = OpVariable Function 
                                        f32_3 %12 = OpLoad vs_TEXCOORD2 
                               Uniform f32_4* %25 = OpAccessChain %21 %23 
                                        f32_4 %26 = OpLoad %25 
                                        f32_3 %27 = OpVectorShuffle %26 %26 0 1 2 
                                        f32_3 %28 = OpFNegate %27 
                                        f32_3 %29 = OpFAdd %12 %28 
                                                      OpStore %9 %29 
                                        f32_3 %30 = OpLoad %9 
                                        f32_3 %31 = OpLoad %9 
                                          f32 %32 = OpDot %30 %31 
                                 Private f32* %35 = OpAccessChain %9 %33 
                                                      OpStore %35 %32 
                                 Private f32* %36 = OpAccessChain %9 %33 
                                          f32 %37 = OpLoad %36 
                                          f32 %38 = OpExtInst %1 31 %37 
                                 Private f32* %39 = OpAccessChain %9 %33 
                                                      OpStore %39 %38 
                                        f32_3 %41 = OpLoad vs_TEXCOORD2 
                                        f32_3 %42 = OpFNegate %41 
                               Uniform f32_3* %45 = OpAccessChain %21 %43 
                                        f32_3 %46 = OpLoad %45 
                                        f32_3 %47 = OpFAdd %42 %46 
                                                      OpStore %40 %47 
                                 Uniform f32* %52 = OpAccessChain %21 %49 %43 %50 
                                          f32 %53 = OpLoad %52 
                                 Private f32* %54 = OpAccessChain %48 %33 
                                                      OpStore %54 %53 
                                 Uniform f32* %56 = OpAccessChain %21 %49 %55 %50 
                                          f32 %57 = OpLoad %56 
                                 Private f32* %59 = OpAccessChain %48 %58 
                                                      OpStore %59 %57 
                                 Uniform f32* %61 = OpAccessChain %21 %49 %60 %50 
                                          f32 %62 = OpLoad %61 
                                 Private f32* %63 = OpAccessChain %48 %50 
                                                      OpStore %63 %62 
                                        f32_3 %64 = OpLoad %40 
                                        f32_3 %65 = OpLoad %48 
                                          f32 %66 = OpDot %64 %65 
                                 Private f32* %67 = OpAccessChain %40 %33 
                                                      OpStore %67 %66 
                                 Private f32* %68 = OpAccessChain %40 %33 
                                          f32 %69 = OpLoad %68 
                                          f32 %70 = OpFNegate %69 
                                 Private f32* %71 = OpAccessChain %9 %33 
                                          f32 %72 = OpLoad %71 
                                          f32 %73 = OpFAdd %70 %72 
                                 Private f32* %74 = OpAccessChain %9 %33 
                                                      OpStore %74 %73 
                                 Uniform f32* %76 = OpAccessChain %21 %23 %75 
                                          f32 %77 = OpLoad %76 
                                 Private f32* %78 = OpAccessChain %9 %33 
                                          f32 %79 = OpLoad %78 
                                          f32 %80 = OpFMul %77 %79 
                                 Private f32* %81 = OpAccessChain %40 %33 
                                          f32 %82 = OpLoad %81 
                                          f32 %83 = OpFAdd %80 %82 
                                 Private f32* %84 = OpAccessChain %9 %33 
                                                      OpStore %84 %83 
                                 Private f32* %85 = OpAccessChain %9 %33 
                                          f32 %86 = OpLoad %85 
                                 Uniform f32* %88 = OpAccessChain %21 %87 %50 
                                          f32 %89 = OpLoad %88 
                                          f32 %90 = OpFMul %86 %89 
                                 Uniform f32* %91 = OpAccessChain %21 %87 %75 
                                          f32 %92 = OpLoad %91 
                                          f32 %93 = OpFAdd %90 %92 
                                 Private f32* %94 = OpAccessChain %9 %33 
                                                      OpStore %94 %93 
                                 Private f32* %95 = OpAccessChain %9 %33 
                                          f32 %96 = OpLoad %95 
                                          f32 %99 = OpExtInst %1 43 %96 %97 %98 
                                Private f32* %100 = OpAccessChain %9 %33 
                                                      OpStore %100 %99 
                                       f32_3 %101 = OpLoad vs_TEXCOORD2 
                                       f32_3 %102 = OpVectorShuffle %101 %101 1 1 1 
                              Uniform f32_4* %103 = OpAccessChain %21 %60 %55 
                                       f32_4 %104 = OpLoad %103 
                                       f32_3 %105 = OpVectorShuffle %104 %104 0 1 2 
                                       f32_3 %106 = OpFMul %102 %105 
                                                      OpStore %40 %106 
                              Uniform f32_4* %107 = OpAccessChain %21 %60 %43 
                                       f32_4 %108 = OpLoad %107 
                                       f32_3 %109 = OpVectorShuffle %108 %108 0 1 2 
                                       f32_3 %110 = OpLoad vs_TEXCOORD2 
                                       f32_3 %111 = OpVectorShuffle %110 %110 0 0 0 
                                       f32_3 %112 = OpFMul %109 %111 
                                       f32_3 %113 = OpLoad %40 
                                       f32_3 %114 = OpFAdd %112 %113 
                                                      OpStore %40 %114 
                              Uniform f32_4* %115 = OpAccessChain %21 %60 %60 
                                       f32_4 %116 = OpLoad %115 
                                       f32_3 %117 = OpVectorShuffle %116 %116 0 1 2 
                                       f32_3 %118 = OpLoad vs_TEXCOORD2 
                                       f32_3 %119 = OpVectorShuffle %118 %118 2 2 2 
                                       f32_3 %120 = OpFMul %117 %119 
                                       f32_3 %121 = OpLoad %40 
                                       f32_3 %122 = OpFAdd %120 %121 
                                                      OpStore %40 %122 
                                       f32_3 %123 = OpLoad %40 
                              Uniform f32_4* %124 = OpAccessChain %21 %60 %87 
                                       f32_4 %125 = OpLoad %124 
                                       f32_3 %126 = OpVectorShuffle %125 %125 0 1 2 
                                       f32_3 %127 = OpFAdd %123 %126 
                                                      OpStore %40 %127 
                                       f32_3 %131 = OpLoad %40 
                                       f32_2 %132 = OpVectorShuffle %131 %131 0 1 
                                Private f32* %133 = OpAccessChain %40 %50 
                                         f32 %134 = OpLoad %133 
                                         f32 %135 = OpCompositeExtract %132 0 
                                         f32 %136 = OpCompositeExtract %132 1 
                                       f32_3 %137 = OpCompositeConstruct %135 %136 %134 
                                                      OpStore %129 %137 
                         read_only Texture2D %141 = OpLoad %140 
                                     sampler %145 = OpLoad %144 
                  read_only Texture2DSampled %148 = OpSampledImage %141 %145 
                                       f32_3 %149 = OpLoad %129 
                                         f32 %150 = OpCompositeExtract %149 2 
                                         f32 %151 = OpImageSampleDrefExplicitLod %148 %149 %150 Lod %6 
                                Private f32* %152 = OpAccessChain %40 %33 
                                                      OpStore %152 %151 
                                Uniform f32* %154 = OpAccessChain %21 %87 %33 
                                         f32 %155 = OpLoad %154 
                                         f32 %156 = OpFNegate %155 
                                         f32 %157 = OpFAdd %156 %98 
                                Private f32* %158 = OpAccessChain %153 %33 
                                                      OpStore %158 %157 
                                Private f32* %159 = OpAccessChain %40 %33 
                                         f32 %160 = OpLoad %159 
                                Private f32* %161 = OpAccessChain %153 %33 
                                         f32 %162 = OpLoad %161 
                                         f32 %163 = OpFMul %160 %162 
                                Uniform f32* %164 = OpAccessChain %21 %87 %33 
                                         f32 %165 = OpLoad %164 
                                         f32 %166 = OpFAdd %163 %165 
                                Private f32* %167 = OpAccessChain %153 %33 
                                                      OpStore %167 %166 
                                Private f32* %169 = OpAccessChain %153 %33 
                                         f32 %170 = OpLoad %169 
                                         f32 %171 = OpFNegate %170 
                                         f32 %172 = OpFAdd %171 %98 
                                Private f32* %173 = OpAccessChain %168 %33 
                                                      OpStore %173 %172 
                                Private f32* %174 = OpAccessChain %9 %33 
                                         f32 %175 = OpLoad %174 
                                Private f32* %176 = OpAccessChain %168 %33 
                                         f32 %177 = OpLoad %176 
                                         f32 %178 = OpFMul %175 %177 
                                Private f32* %179 = OpAccessChain %153 %33 
                                         f32 %180 = OpLoad %179 
                                         f32 %181 = OpFAdd %178 %180 
                                Private f32* %182 = OpAccessChain %153 %33 
                                                      OpStore %182 %181 
                                       f32_3 %184 = OpLoad vs_TEXCOORD1 
                                       f32_3 %185 = OpLoad vs_TEXCOORD1 
                                         f32 %186 = OpDot %184 %185 
                                Private f32* %187 = OpAccessChain %168 %33 
                                                      OpStore %187 %186 
                                Private f32* %188 = OpAccessChain %168 %33 
                                         f32 %189 = OpLoad %188 
                                         f32 %190 = OpExtInst %1 32 %189 
                                Private f32* %191 = OpAccessChain %168 %33 
                                                      OpStore %191 %190 
                                       f32_3 %192 = OpLoad %168 
                                       f32_3 %193 = OpVectorShuffle %192 %192 0 0 0 
                                       f32_3 %194 = OpLoad vs_TEXCOORD1 
                                       f32_3 %195 = OpFMul %193 %194 
                                                      OpStore %168 %195 
                                       f32_3 %196 = OpLoad %168 
                              Uniform f32_4* %197 = OpAccessChain %21 %55 
                                       f32_4 %198 = OpLoad %197 
                                       f32_3 %199 = OpVectorShuffle %198 %198 0 1 2 
                                         f32 %200 = OpDot %196 %199 
                                Private f32* %201 = OpAccessChain %168 %33 
                                                      OpStore %201 %200 
                                Private f32* %202 = OpAccessChain %168 %33 
                                         f32 %203 = OpLoad %202 
                                         f32 %204 = OpExtInst %1 40 %203 %97 
                                Private f32* %205 = OpAccessChain %168 %33 
                                                      OpStore %205 %204 
                                Uniform f32* %208 = OpAccessChain %21 %207 
                                         f32 %209 = OpLoad %208 
                                         f32 %210 = OpFNegate %209 
                                         f32 %212 = OpFMul %210 %211 
                                Uniform f32* %214 = OpAccessChain %21 %213 
                                         f32 %215 = OpLoad %214 
                                         f32 %216 = OpFAdd %212 %215 
                                                      OpStore %206 %216 
                                         f32 %217 = OpLoad %206 
                                         f32 %218 = OpFNegate %217 
                                Private f32* %219 = OpAccessChain %168 %33 
                                         f32 %220 = OpLoad %219 
                                         f32 %221 = OpFAdd %218 %220 
                                Private f32* %222 = OpAccessChain %168 %33 
                                                      OpStore %222 %221 
                                Uniform f32* %224 = OpAccessChain %21 %207 
                                         f32 %225 = OpLoad %224 
                                         f32 %226 = OpFMul %225 %211 
                                Uniform f32* %227 = OpAccessChain %21 %213 
                                         f32 %228 = OpLoad %227 
                                         f32 %229 = OpFAdd %226 %228 
                                                      OpStore %223 %229 
                                         f32 %230 = OpLoad %206 
                                         f32 %231 = OpFNegate %230 
                                         f32 %232 = OpLoad %223 
                                         f32 %233 = OpFAdd %231 %232 
                                                      OpStore %206 %233 
                                         f32 %234 = OpLoad %206 
                                         f32 %235 = OpFDiv %98 %234 
                                                      OpStore %206 %235 
                                         f32 %236 = OpLoad %206 
                                Private f32* %237 = OpAccessChain %168 %33 
                                         f32 %238 = OpLoad %237 
                                         f32 %239 = OpFMul %236 %238 
                                Private f32* %240 = OpAccessChain %168 %33 
                                                      OpStore %240 %239 
                                Private f32* %241 = OpAccessChain %168 %33 
                                         f32 %242 = OpLoad %241 
                                         f32 %243 = OpExtInst %1 43 %242 %97 %98 
                                Private f32* %244 = OpAccessChain %168 %33 
                                                      OpStore %244 %243 
                                Private f32* %245 = OpAccessChain %168 %33 
                                         f32 %246 = OpLoad %245 
                                         f32 %248 = OpFMul %246 %247 
                                         f32 %250 = OpFAdd %248 %249 
                                                      OpStore %206 %250 
                                Private f32* %251 = OpAccessChain %168 %33 
                                         f32 %252 = OpLoad %251 
                                Private f32* %253 = OpAccessChain %168 %33 
                                         f32 %254 = OpLoad %253 
                                         f32 %255 = OpFMul %252 %254 
                                Private f32* %256 = OpAccessChain %168 %33 
                                                      OpStore %256 %255 
                                Private f32* %257 = OpAccessChain %168 %33 
                                         f32 %258 = OpLoad %257 
                                         f32 %259 = OpLoad %206 
                                         f32 %260 = OpFMul %258 %259 
                                Private f32* %261 = OpAccessChain %168 %33 
                                                      OpStore %261 %260 
                                Private f32* %262 = OpAccessChain %153 %33 
                                         f32 %263 = OpLoad %262 
                                Private f32* %264 = OpAccessChain %168 %33 
                                         f32 %265 = OpLoad %264 
                                         f32 %266 = OpFMul %263 %265 
                                Private f32* %267 = OpAccessChain %153 %33 
                                                      OpStore %267 %266 
                              Uniform f32_4* %269 = OpAccessChain %21 %268 
                                       f32_4 %270 = OpLoad %269 
                                       f32_3 %271 = OpVectorShuffle %270 %270 0 1 2 
                                       f32_3 %272 = OpFNegate %271 
                              Uniform f32_4* %274 = OpAccessChain %21 %273 
                                       f32_4 %275 = OpLoad %274 
                                       f32_3 %276 = OpVectorShuffle %275 %275 0 1 2 
                                       f32_3 %277 = OpFAdd %272 %276 
                                                      OpStore %168 %277 
                              Uniform f32_4* %278 = OpAccessChain %21 %273 
                                       f32_4 %279 = OpLoad %278 
                                       f32_3 %280 = OpVectorShuffle %279 %279 3 3 3 
                                       f32_3 %281 = OpLoad %168 
                                       f32_3 %282 = OpFMul %280 %281 
                              Uniform f32_4* %283 = OpAccessChain %21 %268 
                                       f32_4 %284 = OpLoad %283 
                                       f32_3 %285 = OpVectorShuffle %284 %284 0 1 2 
                                       f32_3 %286 = OpFAdd %282 %285 
                                                      OpStore %168 %286 
                                       f32_3 %288 = OpLoad %168 
                                       f32_3 %289 = OpFNegate %288 
                              Uniform f32_4* %290 = OpAccessChain %21 %268 
                                       f32_4 %291 = OpLoad %290 
                                       f32_3 %292 = OpVectorShuffle %291 %291 0 1 2 
                                       f32_3 %293 = OpFAdd %289 %292 
                                                      OpStore %287 %293 
                                       f32_3 %294 = OpLoad %153 
                                       f32_3 %295 = OpVectorShuffle %294 %294 0 0 0 
                                       f32_3 %296 = OpLoad %287 
                                       f32_3 %297 = OpFMul %295 %296 
                                       f32_3 %298 = OpLoad %168 
                                       f32_3 %299 = OpFAdd %297 %298 
                                                      OpStore %153 %299 
                         read_only Texture2D %303 = OpLoad %302 
                                     sampler %305 = OpLoad %304 
                  read_only Texture2DSampled %307 = OpSampledImage %303 %305 
                                       f32_2 %310 = OpLoad vs_TEXCOORD0 
                                       f32_4 %311 = OpImageSampleImplicitLod %307 %310 
                                                      OpStore %301 %311 
                                       f32_4 %312 = OpLoad %301 
                                       f32_3 %313 = OpVectorShuffle %312 %312 0 1 2 
                              Uniform f32_4* %315 = OpAccessChain %21 %314 
                                       f32_4 %316 = OpLoad %315 
                                       f32_3 %317 = OpVectorShuffle %316 %316 0 1 2 
                                       f32_3 %318 = OpFMul %313 %317 
                                                      OpStore %287 %318 
                                Private f32* %321 = OpAccessChain %301 %75 
                                         f32 %322 = OpLoad %321 
                                Uniform f32* %323 = OpAccessChain %21 %314 %75 
                                         f32 %324 = OpLoad %323 
                                         f32 %325 = OpFMul %322 %324 
                                 Output f32* %327 = OpAccessChain %320 %75 
                                                      OpStore %327 %325 
                                       f32_3 %328 = OpLoad %287 
                              Uniform f32_4* %330 = OpAccessChain %21 %329 
                                       f32_4 %331 = OpLoad %330 
                                       f32_3 %332 = OpVectorShuffle %331 %331 0 1 2 
                                       f32_3 %333 = OpFMul %328 %332 
                                                      OpStore %287 %333 
                                       f32_3 %334 = OpLoad %153 
                                       f32_3 %335 = OpLoad %287 
                                       f32_3 %336 = OpFMul %334 %335 
                                       f32_4 %337 = OpLoad %320 
                                       f32_4 %338 = OpVectorShuffle %337 %336 4 5 6 3 
                                                      OpStore %320 %338 
                                                      OpReturn
                                                      OpFunctionEnd
"
}
SubProgram "gles3 hw_tier00 " {
Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "SHADOWS_SCREEN" "VERTEXLIGHT_ON" }
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 unity_4LightPosX0;
uniform 	vec4 unity_4LightPosY0;
uniform 	vec4 unity_4LightPosZ0;
uniform 	mediump vec4 unity_4LightAtten0;
uniform 	mediump vec4 unity_LightColor[8];
uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in highp vec3 in_NORMAL0;
in highp vec4 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out highp vec3 vs_TEXCOORD1;
out highp vec3 vs_TEXCOORD2;
out mediump vec3 vs_TEXCOORD3;
out highp vec4 vs_TEXCOORD5;
out highp vec4 vs_TEXCOORD6;
vec4 u_xlat0;
vec4 u_xlat1;
mediump vec4 u_xlat16_1;
vec4 u_xlat2;
vec4 u_xlat3;
vec4 u_xlat4;
mediump vec3 u_xlat16_5;
mediump vec3 u_xlat16_6;
float u_xlat21;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
    u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy;
    u_xlat1.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat1.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat1.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat21 = dot(u_xlat1.xyz, u_xlat1.xyz);
    u_xlat21 = inversesqrt(u_xlat21);
    u_xlat1.xyz = vec3(u_xlat21) * u_xlat1.xyz;
    vs_TEXCOORD1.xyz = u_xlat1.xyz;
    vs_TEXCOORD2.xyz = u_xlat0.xyz;
    u_xlat2 = (-u_xlat0.xxxx) + unity_4LightPosX0;
    u_xlat3 = (-u_xlat0.yyyy) + unity_4LightPosY0;
    u_xlat0 = (-u_xlat0.zzzz) + unity_4LightPosZ0;
    u_xlat4 = u_xlat1.yyyy * u_xlat3;
    u_xlat3 = u_xlat3 * u_xlat3;
    u_xlat3 = u_xlat2 * u_xlat2 + u_xlat3;
    u_xlat2 = u_xlat2 * u_xlat1.xxxx + u_xlat4;
    u_xlat2 = u_xlat0 * u_xlat1.zzzz + u_xlat2;
    u_xlat0 = u_xlat0 * u_xlat0 + u_xlat3;
    u_xlat0 = max(u_xlat0, vec4(9.99999997e-07, 9.99999997e-07, 9.99999997e-07, 9.99999997e-07));
    u_xlat3 = inversesqrt(u_xlat0);
    u_xlat0 = u_xlat0 * unity_4LightAtten0 + vec4(1.0, 1.0, 1.0, 1.0);
    u_xlat0 = vec4(1.0, 1.0, 1.0, 1.0) / u_xlat0;
    u_xlat2 = u_xlat2 * u_xlat3;
    u_xlat2 = max(u_xlat2, vec4(0.0, 0.0, 0.0, 0.0));
    u_xlat0 = u_xlat0 * u_xlat2;
    u_xlat2.xyz = u_xlat0.yyy * unity_LightColor[1].xyz;
    u_xlat2.xyz = unity_LightColor[0].xyz * u_xlat0.xxx + u_xlat2.xyz;
    u_xlat0.xyz = unity_LightColor[2].xyz * u_xlat0.zzz + u_xlat2.xyz;
    u_xlat0.xyz = unity_LightColor[3].xyz * u_xlat0.www + u_xlat0.xyz;
    u_xlat2.xyz = u_xlat0.xyz * vec3(0.305306017, 0.305306017, 0.305306017) + vec3(0.682171106, 0.682171106, 0.682171106);
    u_xlat2.xyz = u_xlat0.xyz * u_xlat2.xyz + vec3(0.0125228781, 0.0125228781, 0.0125228781);
    u_xlat16_5.x = u_xlat1.y * u_xlat1.y;
    u_xlat16_5.x = u_xlat1.x * u_xlat1.x + (-u_xlat16_5.x);
    u_xlat16_1 = u_xlat1.yzzx * u_xlat1.xyzz;
    u_xlat16_6.x = dot(unity_SHBr, u_xlat16_1);
    u_xlat16_6.y = dot(unity_SHBg, u_xlat16_1);
    u_xlat16_6.z = dot(unity_SHBb, u_xlat16_1);
    u_xlat16_5.xyz = unity_SHC.xyz * u_xlat16_5.xxx + u_xlat16_6.xyz;
    vs_TEXCOORD3.xyz = u_xlat0.xyz * u_xlat2.xyz + u_xlat16_5.xyz;
    vs_TEXCOORD5 = vec4(0.0, 0.0, 0.0, 0.0);
    vs_TEXCOORD6 = vec4(0.0, 0.0, 0.0, 0.0);
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es
#ifdef GL_EXT_shader_texture_lod
#extension GL_EXT_shader_texture_lod : enable
#endif

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec3 _WorldSpaceCameraPos;
uniform 	mediump vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	vec4 hlslcc_mtx4x4unity_WorldToShadow[16];
uniform 	mediump vec4 _LightShadowData;
uniform 	vec4 unity_ShadowFadeCenterAndType;
uniform 	vec4 hlslcc_mtx4x4unity_MatrixV[4];
uniform 	mediump vec4 _LightColor0;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 _HColor;
uniform 	mediump vec4 _SColor;
uniform 	mediump float _RampThreshold;
uniform 	mediump float _RampSmooth;
UNITY_LOCATION(0) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(1) uniform highp sampler2D _ShadowMapTexture;
UNITY_LOCATION(2) uniform highp sampler2DShadow hlslcc_zcmp_ShadowMapTexture;
in mediump vec2 vs_TEXCOORD0;
in highp vec3 vs_TEXCOORD1;
in highp vec3 vs_TEXCOORD2;
in mediump vec3 vs_TEXCOORD3;
layout(location = 0) out mediump vec4 SV_Target0;
vec4 u_xlat0;
vec3 u_xlat1;
mediump vec4 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
mediump vec3 u_xlat16_4;
vec3 u_xlat5;
mediump vec3 u_xlat16_7;
mediump float u_xlat16_12;
mediump float u_xlat16_17;
void main()
{
    u_xlat0.xyz = vs_TEXCOORD2.xyz + (-unity_ShadowFadeCenterAndType.xyz);
    u_xlat0.x = dot(u_xlat0.xyz, u_xlat0.xyz);
    u_xlat0.x = sqrt(u_xlat0.x);
    u_xlat5.xyz = (-vs_TEXCOORD2.xyz) + _WorldSpaceCameraPos.xyz;
    u_xlat1.x = hlslcc_mtx4x4unity_MatrixV[0].z;
    u_xlat1.y = hlslcc_mtx4x4unity_MatrixV[1].z;
    u_xlat1.z = hlslcc_mtx4x4unity_MatrixV[2].z;
    u_xlat5.x = dot(u_xlat5.xyz, u_xlat1.xyz);
    u_xlat0.x = (-u_xlat5.x) + u_xlat0.x;
    u_xlat0.x = unity_ShadowFadeCenterAndType.w * u_xlat0.x + u_xlat5.x;
    u_xlat0.x = u_xlat0.x * _LightShadowData.z + _LightShadowData.w;
#ifdef UNITY_ADRENO_ES3
    u_xlat0.x = min(max(u_xlat0.x, 0.0), 1.0);
#else
    u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);
#endif
    u_xlat5.xyz = vs_TEXCOORD2.yyy * hlslcc_mtx4x4unity_WorldToShadow[1].xyz;
    u_xlat5.xyz = hlslcc_mtx4x4unity_WorldToShadow[0].xyz * vs_TEXCOORD2.xxx + u_xlat5.xyz;
    u_xlat5.xyz = hlslcc_mtx4x4unity_WorldToShadow[2].xyz * vs_TEXCOORD2.zzz + u_xlat5.xyz;
    u_xlat5.xyz = u_xlat5.xyz + hlslcc_mtx4x4unity_WorldToShadow[3].xyz;
    vec3 txVec0 = vec3(u_xlat5.xy,u_xlat5.z);
    u_xlat5.x = textureLod(hlslcc_zcmp_ShadowMapTexture, txVec0, 0.0);
    u_xlat16_2.x = (-_LightShadowData.x) + 1.0;
    u_xlat16_2.x = u_xlat5.x * u_xlat16_2.x + _LightShadowData.x;
    u_xlat16_7.x = (-u_xlat16_2.x) + 1.0;
    u_xlat16_2.x = u_xlat0.x * u_xlat16_7.x + u_xlat16_2.x;
    u_xlat16_7.x = dot(vs_TEXCOORD1.xyz, vs_TEXCOORD1.xyz);
    u_xlat16_7.x = inversesqrt(u_xlat16_7.x);
    u_xlat16_7.xyz = u_xlat16_7.xxx * vs_TEXCOORD1.xyz;
    u_xlat16_7.x = dot(u_xlat16_7.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat16_7.x = max(u_xlat16_7.x, 0.0);
    u_xlat16_12 = (-_RampSmooth) * 0.5 + _RampThreshold;
    u_xlat16_7.x = (-u_xlat16_12) + u_xlat16_7.x;
    u_xlat16_17 = _RampSmooth * 0.5 + _RampThreshold;
    u_xlat16_12 = (-u_xlat16_12) + u_xlat16_17;
    u_xlat16_12 = float(1.0) / u_xlat16_12;
    u_xlat16_7.x = u_xlat16_12 * u_xlat16_7.x;
#ifdef UNITY_ADRENO_ES3
    u_xlat16_7.x = min(max(u_xlat16_7.x, 0.0), 1.0);
#else
    u_xlat16_7.x = clamp(u_xlat16_7.x, 0.0, 1.0);
#endif
    u_xlat16_12 = u_xlat16_7.x * -2.0 + 3.0;
    u_xlat16_7.x = u_xlat16_7.x * u_xlat16_7.x;
    u_xlat16_7.x = u_xlat16_7.x * u_xlat16_12;
    u_xlat16_2.x = u_xlat16_2.x * u_xlat16_7.x;
    u_xlat16_7.xyz = (-_HColor.xyz) + _SColor.xyz;
    u_xlat16_7.xyz = _SColor.www * u_xlat16_7.xyz + _HColor.xyz;
    u_xlat16_3.xyz = (-u_xlat16_7.xyz) + _HColor.xyz;
    u_xlat16_2.xyz = u_xlat16_2.xxx * u_xlat16_3.xyz + u_xlat16_7.xyz;
    u_xlat0.xyz = vs_TEXCOORD1.xyz;
    u_xlat0.w = 1.0;
    u_xlat16_3.x = dot(unity_SHAr, u_xlat0);
    u_xlat16_3.y = dot(unity_SHAg, u_xlat0);
    u_xlat16_3.z = dot(unity_SHAb, u_xlat0);
    u_xlat16_3.xyz = u_xlat16_3.xyz + vs_TEXCOORD3.xyz;
    u_xlat16_3.xyz = max(u_xlat16_3.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat0.xyz = log2(u_xlat16_3.xyz);
    u_xlat0.xyz = u_xlat0.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
    u_xlat0.xyz = exp2(u_xlat0.xyz);
    u_xlat0.xyz = u_xlat0.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
    u_xlat0.xyz = max(u_xlat0.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat16_1 = texture(_MainTex, vs_TEXCOORD0.xy);
    u_xlat16_3.xyz = u_xlat16_1.xyz * _Color.xyz;
    SV_Target0.w = u_xlat16_1.w * _Color.w;
    u_xlat16_4.xyz = u_xlat0.xyz * u_xlat16_3.xyz;
    u_xlat16_3.xyz = u_xlat16_3.xyz * _LightColor0.xyz;
    SV_Target0.xyz = u_xlat16_3.xyz * u_xlat16_2.xyz + u_xlat16_4.xyz;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier01 " {
Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "SHADOWS_SCREEN" "VERTEXLIGHT_ON" }
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 unity_4LightPosX0;
uniform 	vec4 unity_4LightPosY0;
uniform 	vec4 unity_4LightPosZ0;
uniform 	mediump vec4 unity_4LightAtten0;
uniform 	mediump vec4 unity_LightColor[8];
uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in highp vec3 in_NORMAL0;
in highp vec4 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out highp vec3 vs_TEXCOORD1;
out highp vec3 vs_TEXCOORD2;
out mediump vec3 vs_TEXCOORD3;
out highp vec4 vs_TEXCOORD5;
out highp vec4 vs_TEXCOORD6;
vec4 u_xlat0;
vec4 u_xlat1;
mediump vec4 u_xlat16_1;
vec4 u_xlat2;
vec4 u_xlat3;
vec4 u_xlat4;
mediump vec3 u_xlat16_5;
mediump vec3 u_xlat16_6;
float u_xlat21;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
    u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy;
    u_xlat1.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat1.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat1.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat21 = dot(u_xlat1.xyz, u_xlat1.xyz);
    u_xlat21 = inversesqrt(u_xlat21);
    u_xlat1.xyz = vec3(u_xlat21) * u_xlat1.xyz;
    vs_TEXCOORD1.xyz = u_xlat1.xyz;
    vs_TEXCOORD2.xyz = u_xlat0.xyz;
    u_xlat2 = (-u_xlat0.xxxx) + unity_4LightPosX0;
    u_xlat3 = (-u_xlat0.yyyy) + unity_4LightPosY0;
    u_xlat0 = (-u_xlat0.zzzz) + unity_4LightPosZ0;
    u_xlat4 = u_xlat1.yyyy * u_xlat3;
    u_xlat3 = u_xlat3 * u_xlat3;
    u_xlat3 = u_xlat2 * u_xlat2 + u_xlat3;
    u_xlat2 = u_xlat2 * u_xlat1.xxxx + u_xlat4;
    u_xlat2 = u_xlat0 * u_xlat1.zzzz + u_xlat2;
    u_xlat0 = u_xlat0 * u_xlat0 + u_xlat3;
    u_xlat0 = max(u_xlat0, vec4(9.99999997e-07, 9.99999997e-07, 9.99999997e-07, 9.99999997e-07));
    u_xlat3 = inversesqrt(u_xlat0);
    u_xlat0 = u_xlat0 * unity_4LightAtten0 + vec4(1.0, 1.0, 1.0, 1.0);
    u_xlat0 = vec4(1.0, 1.0, 1.0, 1.0) / u_xlat0;
    u_xlat2 = u_xlat2 * u_xlat3;
    u_xlat2 = max(u_xlat2, vec4(0.0, 0.0, 0.0, 0.0));
    u_xlat0 = u_xlat0 * u_xlat2;
    u_xlat2.xyz = u_xlat0.yyy * unity_LightColor[1].xyz;
    u_xlat2.xyz = unity_LightColor[0].xyz * u_xlat0.xxx + u_xlat2.xyz;
    u_xlat0.xyz = unity_LightColor[2].xyz * u_xlat0.zzz + u_xlat2.xyz;
    u_xlat0.xyz = unity_LightColor[3].xyz * u_xlat0.www + u_xlat0.xyz;
    u_xlat2.xyz = u_xlat0.xyz * vec3(0.305306017, 0.305306017, 0.305306017) + vec3(0.682171106, 0.682171106, 0.682171106);
    u_xlat2.xyz = u_xlat0.xyz * u_xlat2.xyz + vec3(0.0125228781, 0.0125228781, 0.0125228781);
    u_xlat16_5.x = u_xlat1.y * u_xlat1.y;
    u_xlat16_5.x = u_xlat1.x * u_xlat1.x + (-u_xlat16_5.x);
    u_xlat16_1 = u_xlat1.yzzx * u_xlat1.xyzz;
    u_xlat16_6.x = dot(unity_SHBr, u_xlat16_1);
    u_xlat16_6.y = dot(unity_SHBg, u_xlat16_1);
    u_xlat16_6.z = dot(unity_SHBb, u_xlat16_1);
    u_xlat16_5.xyz = unity_SHC.xyz * u_xlat16_5.xxx + u_xlat16_6.xyz;
    vs_TEXCOORD3.xyz = u_xlat0.xyz * u_xlat2.xyz + u_xlat16_5.xyz;
    vs_TEXCOORD5 = vec4(0.0, 0.0, 0.0, 0.0);
    vs_TEXCOORD6 = vec4(0.0, 0.0, 0.0, 0.0);
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es
#ifdef GL_EXT_shader_texture_lod
#extension GL_EXT_shader_texture_lod : enable
#endif

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec3 _WorldSpaceCameraPos;
uniform 	mediump vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	vec4 hlslcc_mtx4x4unity_WorldToShadow[16];
uniform 	mediump vec4 _LightShadowData;
uniform 	vec4 unity_ShadowFadeCenterAndType;
uniform 	vec4 hlslcc_mtx4x4unity_MatrixV[4];
uniform 	mediump vec4 _LightColor0;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 _HColor;
uniform 	mediump vec4 _SColor;
uniform 	mediump float _RampThreshold;
uniform 	mediump float _RampSmooth;
UNITY_LOCATION(0) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(1) uniform highp sampler2D _ShadowMapTexture;
UNITY_LOCATION(2) uniform highp sampler2DShadow hlslcc_zcmp_ShadowMapTexture;
in mediump vec2 vs_TEXCOORD0;
in highp vec3 vs_TEXCOORD1;
in highp vec3 vs_TEXCOORD2;
in mediump vec3 vs_TEXCOORD3;
layout(location = 0) out mediump vec4 SV_Target0;
vec4 u_xlat0;
vec3 u_xlat1;
mediump vec4 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
mediump vec3 u_xlat16_4;
vec3 u_xlat5;
mediump vec3 u_xlat16_7;
mediump float u_xlat16_12;
mediump float u_xlat16_17;
void main()
{
    u_xlat0.xyz = vs_TEXCOORD2.xyz + (-unity_ShadowFadeCenterAndType.xyz);
    u_xlat0.x = dot(u_xlat0.xyz, u_xlat0.xyz);
    u_xlat0.x = sqrt(u_xlat0.x);
    u_xlat5.xyz = (-vs_TEXCOORD2.xyz) + _WorldSpaceCameraPos.xyz;
    u_xlat1.x = hlslcc_mtx4x4unity_MatrixV[0].z;
    u_xlat1.y = hlslcc_mtx4x4unity_MatrixV[1].z;
    u_xlat1.z = hlslcc_mtx4x4unity_MatrixV[2].z;
    u_xlat5.x = dot(u_xlat5.xyz, u_xlat1.xyz);
    u_xlat0.x = (-u_xlat5.x) + u_xlat0.x;
    u_xlat0.x = unity_ShadowFadeCenterAndType.w * u_xlat0.x + u_xlat5.x;
    u_xlat0.x = u_xlat0.x * _LightShadowData.z + _LightShadowData.w;
#ifdef UNITY_ADRENO_ES3
    u_xlat0.x = min(max(u_xlat0.x, 0.0), 1.0);
#else
    u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);
#endif
    u_xlat5.xyz = vs_TEXCOORD2.yyy * hlslcc_mtx4x4unity_WorldToShadow[1].xyz;
    u_xlat5.xyz = hlslcc_mtx4x4unity_WorldToShadow[0].xyz * vs_TEXCOORD2.xxx + u_xlat5.xyz;
    u_xlat5.xyz = hlslcc_mtx4x4unity_WorldToShadow[2].xyz * vs_TEXCOORD2.zzz + u_xlat5.xyz;
    u_xlat5.xyz = u_xlat5.xyz + hlslcc_mtx4x4unity_WorldToShadow[3].xyz;
    vec3 txVec0 = vec3(u_xlat5.xy,u_xlat5.z);
    u_xlat5.x = textureLod(hlslcc_zcmp_ShadowMapTexture, txVec0, 0.0);
    u_xlat16_2.x = (-_LightShadowData.x) + 1.0;
    u_xlat16_2.x = u_xlat5.x * u_xlat16_2.x + _LightShadowData.x;
    u_xlat16_7.x = (-u_xlat16_2.x) + 1.0;
    u_xlat16_2.x = u_xlat0.x * u_xlat16_7.x + u_xlat16_2.x;
    u_xlat16_7.x = dot(vs_TEXCOORD1.xyz, vs_TEXCOORD1.xyz);
    u_xlat16_7.x = inversesqrt(u_xlat16_7.x);
    u_xlat16_7.xyz = u_xlat16_7.xxx * vs_TEXCOORD1.xyz;
    u_xlat16_7.x = dot(u_xlat16_7.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat16_7.x = max(u_xlat16_7.x, 0.0);
    u_xlat16_12 = (-_RampSmooth) * 0.5 + _RampThreshold;
    u_xlat16_7.x = (-u_xlat16_12) + u_xlat16_7.x;
    u_xlat16_17 = _RampSmooth * 0.5 + _RampThreshold;
    u_xlat16_12 = (-u_xlat16_12) + u_xlat16_17;
    u_xlat16_12 = float(1.0) / u_xlat16_12;
    u_xlat16_7.x = u_xlat16_12 * u_xlat16_7.x;
#ifdef UNITY_ADRENO_ES3
    u_xlat16_7.x = min(max(u_xlat16_7.x, 0.0), 1.0);
#else
    u_xlat16_7.x = clamp(u_xlat16_7.x, 0.0, 1.0);
#endif
    u_xlat16_12 = u_xlat16_7.x * -2.0 + 3.0;
    u_xlat16_7.x = u_xlat16_7.x * u_xlat16_7.x;
    u_xlat16_7.x = u_xlat16_7.x * u_xlat16_12;
    u_xlat16_2.x = u_xlat16_2.x * u_xlat16_7.x;
    u_xlat16_7.xyz = (-_HColor.xyz) + _SColor.xyz;
    u_xlat16_7.xyz = _SColor.www * u_xlat16_7.xyz + _HColor.xyz;
    u_xlat16_3.xyz = (-u_xlat16_7.xyz) + _HColor.xyz;
    u_xlat16_2.xyz = u_xlat16_2.xxx * u_xlat16_3.xyz + u_xlat16_7.xyz;
    u_xlat0.xyz = vs_TEXCOORD1.xyz;
    u_xlat0.w = 1.0;
    u_xlat16_3.x = dot(unity_SHAr, u_xlat0);
    u_xlat16_3.y = dot(unity_SHAg, u_xlat0);
    u_xlat16_3.z = dot(unity_SHAb, u_xlat0);
    u_xlat16_3.xyz = u_xlat16_3.xyz + vs_TEXCOORD3.xyz;
    u_xlat16_3.xyz = max(u_xlat16_3.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat0.xyz = log2(u_xlat16_3.xyz);
    u_xlat0.xyz = u_xlat0.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
    u_xlat0.xyz = exp2(u_xlat0.xyz);
    u_xlat0.xyz = u_xlat0.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
    u_xlat0.xyz = max(u_xlat0.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat16_1 = texture(_MainTex, vs_TEXCOORD0.xy);
    u_xlat16_3.xyz = u_xlat16_1.xyz * _Color.xyz;
    SV_Target0.w = u_xlat16_1.w * _Color.w;
    u_xlat16_4.xyz = u_xlat0.xyz * u_xlat16_3.xyz;
    u_xlat16_3.xyz = u_xlat16_3.xyz * _LightColor0.xyz;
    SV_Target0.xyz = u_xlat16_3.xyz * u_xlat16_2.xyz + u_xlat16_4.xyz;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier02 " {
Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "SHADOWS_SCREEN" "VERTEXLIGHT_ON" }
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 unity_4LightPosX0;
uniform 	vec4 unity_4LightPosY0;
uniform 	vec4 unity_4LightPosZ0;
uniform 	mediump vec4 unity_4LightAtten0;
uniform 	mediump vec4 unity_LightColor[8];
uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in highp vec3 in_NORMAL0;
in highp vec4 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out highp vec3 vs_TEXCOORD1;
out highp vec3 vs_TEXCOORD2;
out mediump vec3 vs_TEXCOORD3;
out highp vec4 vs_TEXCOORD5;
out highp vec4 vs_TEXCOORD6;
vec4 u_xlat0;
vec4 u_xlat1;
mediump vec4 u_xlat16_1;
vec4 u_xlat2;
vec4 u_xlat3;
vec4 u_xlat4;
mediump vec3 u_xlat16_5;
mediump vec3 u_xlat16_6;
float u_xlat21;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
    u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy;
    u_xlat1.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat1.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat1.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat21 = dot(u_xlat1.xyz, u_xlat1.xyz);
    u_xlat21 = inversesqrt(u_xlat21);
    u_xlat1.xyz = vec3(u_xlat21) * u_xlat1.xyz;
    vs_TEXCOORD1.xyz = u_xlat1.xyz;
    vs_TEXCOORD2.xyz = u_xlat0.xyz;
    u_xlat2 = (-u_xlat0.xxxx) + unity_4LightPosX0;
    u_xlat3 = (-u_xlat0.yyyy) + unity_4LightPosY0;
    u_xlat0 = (-u_xlat0.zzzz) + unity_4LightPosZ0;
    u_xlat4 = u_xlat1.yyyy * u_xlat3;
    u_xlat3 = u_xlat3 * u_xlat3;
    u_xlat3 = u_xlat2 * u_xlat2 + u_xlat3;
    u_xlat2 = u_xlat2 * u_xlat1.xxxx + u_xlat4;
    u_xlat2 = u_xlat0 * u_xlat1.zzzz + u_xlat2;
    u_xlat0 = u_xlat0 * u_xlat0 + u_xlat3;
    u_xlat0 = max(u_xlat0, vec4(9.99999997e-07, 9.99999997e-07, 9.99999997e-07, 9.99999997e-07));
    u_xlat3 = inversesqrt(u_xlat0);
    u_xlat0 = u_xlat0 * unity_4LightAtten0 + vec4(1.0, 1.0, 1.0, 1.0);
    u_xlat0 = vec4(1.0, 1.0, 1.0, 1.0) / u_xlat0;
    u_xlat2 = u_xlat2 * u_xlat3;
    u_xlat2 = max(u_xlat2, vec4(0.0, 0.0, 0.0, 0.0));
    u_xlat0 = u_xlat0 * u_xlat2;
    u_xlat2.xyz = u_xlat0.yyy * unity_LightColor[1].xyz;
    u_xlat2.xyz = unity_LightColor[0].xyz * u_xlat0.xxx + u_xlat2.xyz;
    u_xlat0.xyz = unity_LightColor[2].xyz * u_xlat0.zzz + u_xlat2.xyz;
    u_xlat0.xyz = unity_LightColor[3].xyz * u_xlat0.www + u_xlat0.xyz;
    u_xlat2.xyz = u_xlat0.xyz * vec3(0.305306017, 0.305306017, 0.305306017) + vec3(0.682171106, 0.682171106, 0.682171106);
    u_xlat2.xyz = u_xlat0.xyz * u_xlat2.xyz + vec3(0.0125228781, 0.0125228781, 0.0125228781);
    u_xlat16_5.x = u_xlat1.y * u_xlat1.y;
    u_xlat16_5.x = u_xlat1.x * u_xlat1.x + (-u_xlat16_5.x);
    u_xlat16_1 = u_xlat1.yzzx * u_xlat1.xyzz;
    u_xlat16_6.x = dot(unity_SHBr, u_xlat16_1);
    u_xlat16_6.y = dot(unity_SHBg, u_xlat16_1);
    u_xlat16_6.z = dot(unity_SHBb, u_xlat16_1);
    u_xlat16_5.xyz = unity_SHC.xyz * u_xlat16_5.xxx + u_xlat16_6.xyz;
    vs_TEXCOORD3.xyz = u_xlat0.xyz * u_xlat2.xyz + u_xlat16_5.xyz;
    vs_TEXCOORD5 = vec4(0.0, 0.0, 0.0, 0.0);
    vs_TEXCOORD6 = vec4(0.0, 0.0, 0.0, 0.0);
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es
#ifdef GL_EXT_shader_texture_lod
#extension GL_EXT_shader_texture_lod : enable
#endif

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec3 _WorldSpaceCameraPos;
uniform 	mediump vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	vec4 hlslcc_mtx4x4unity_WorldToShadow[16];
uniform 	mediump vec4 _LightShadowData;
uniform 	vec4 unity_ShadowFadeCenterAndType;
uniform 	vec4 hlslcc_mtx4x4unity_MatrixV[4];
uniform 	mediump vec4 _LightColor0;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 _HColor;
uniform 	mediump vec4 _SColor;
uniform 	mediump float _RampThreshold;
uniform 	mediump float _RampSmooth;
UNITY_LOCATION(0) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(1) uniform highp sampler2D _ShadowMapTexture;
UNITY_LOCATION(2) uniform highp sampler2DShadow hlslcc_zcmp_ShadowMapTexture;
in mediump vec2 vs_TEXCOORD0;
in highp vec3 vs_TEXCOORD1;
in highp vec3 vs_TEXCOORD2;
in mediump vec3 vs_TEXCOORD3;
layout(location = 0) out mediump vec4 SV_Target0;
vec4 u_xlat0;
vec3 u_xlat1;
mediump vec4 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
mediump vec3 u_xlat16_4;
vec3 u_xlat5;
mediump vec3 u_xlat16_7;
mediump float u_xlat16_12;
mediump float u_xlat16_17;
void main()
{
    u_xlat0.xyz = vs_TEXCOORD2.xyz + (-unity_ShadowFadeCenterAndType.xyz);
    u_xlat0.x = dot(u_xlat0.xyz, u_xlat0.xyz);
    u_xlat0.x = sqrt(u_xlat0.x);
    u_xlat5.xyz = (-vs_TEXCOORD2.xyz) + _WorldSpaceCameraPos.xyz;
    u_xlat1.x = hlslcc_mtx4x4unity_MatrixV[0].z;
    u_xlat1.y = hlslcc_mtx4x4unity_MatrixV[1].z;
    u_xlat1.z = hlslcc_mtx4x4unity_MatrixV[2].z;
    u_xlat5.x = dot(u_xlat5.xyz, u_xlat1.xyz);
    u_xlat0.x = (-u_xlat5.x) + u_xlat0.x;
    u_xlat0.x = unity_ShadowFadeCenterAndType.w * u_xlat0.x + u_xlat5.x;
    u_xlat0.x = u_xlat0.x * _LightShadowData.z + _LightShadowData.w;
#ifdef UNITY_ADRENO_ES3
    u_xlat0.x = min(max(u_xlat0.x, 0.0), 1.0);
#else
    u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);
#endif
    u_xlat5.xyz = vs_TEXCOORD2.yyy * hlslcc_mtx4x4unity_WorldToShadow[1].xyz;
    u_xlat5.xyz = hlslcc_mtx4x4unity_WorldToShadow[0].xyz * vs_TEXCOORD2.xxx + u_xlat5.xyz;
    u_xlat5.xyz = hlslcc_mtx4x4unity_WorldToShadow[2].xyz * vs_TEXCOORD2.zzz + u_xlat5.xyz;
    u_xlat5.xyz = u_xlat5.xyz + hlslcc_mtx4x4unity_WorldToShadow[3].xyz;
    vec3 txVec0 = vec3(u_xlat5.xy,u_xlat5.z);
    u_xlat5.x = textureLod(hlslcc_zcmp_ShadowMapTexture, txVec0, 0.0);
    u_xlat16_2.x = (-_LightShadowData.x) + 1.0;
    u_xlat16_2.x = u_xlat5.x * u_xlat16_2.x + _LightShadowData.x;
    u_xlat16_7.x = (-u_xlat16_2.x) + 1.0;
    u_xlat16_2.x = u_xlat0.x * u_xlat16_7.x + u_xlat16_2.x;
    u_xlat16_7.x = dot(vs_TEXCOORD1.xyz, vs_TEXCOORD1.xyz);
    u_xlat16_7.x = inversesqrt(u_xlat16_7.x);
    u_xlat16_7.xyz = u_xlat16_7.xxx * vs_TEXCOORD1.xyz;
    u_xlat16_7.x = dot(u_xlat16_7.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat16_7.x = max(u_xlat16_7.x, 0.0);
    u_xlat16_12 = (-_RampSmooth) * 0.5 + _RampThreshold;
    u_xlat16_7.x = (-u_xlat16_12) + u_xlat16_7.x;
    u_xlat16_17 = _RampSmooth * 0.5 + _RampThreshold;
    u_xlat16_12 = (-u_xlat16_12) + u_xlat16_17;
    u_xlat16_12 = float(1.0) / u_xlat16_12;
    u_xlat16_7.x = u_xlat16_12 * u_xlat16_7.x;
#ifdef UNITY_ADRENO_ES3
    u_xlat16_7.x = min(max(u_xlat16_7.x, 0.0), 1.0);
#else
    u_xlat16_7.x = clamp(u_xlat16_7.x, 0.0, 1.0);
#endif
    u_xlat16_12 = u_xlat16_7.x * -2.0 + 3.0;
    u_xlat16_7.x = u_xlat16_7.x * u_xlat16_7.x;
    u_xlat16_7.x = u_xlat16_7.x * u_xlat16_12;
    u_xlat16_2.x = u_xlat16_2.x * u_xlat16_7.x;
    u_xlat16_7.xyz = (-_HColor.xyz) + _SColor.xyz;
    u_xlat16_7.xyz = _SColor.www * u_xlat16_7.xyz + _HColor.xyz;
    u_xlat16_3.xyz = (-u_xlat16_7.xyz) + _HColor.xyz;
    u_xlat16_2.xyz = u_xlat16_2.xxx * u_xlat16_3.xyz + u_xlat16_7.xyz;
    u_xlat0.xyz = vs_TEXCOORD1.xyz;
    u_xlat0.w = 1.0;
    u_xlat16_3.x = dot(unity_SHAr, u_xlat0);
    u_xlat16_3.y = dot(unity_SHAg, u_xlat0);
    u_xlat16_3.z = dot(unity_SHAb, u_xlat0);
    u_xlat16_3.xyz = u_xlat16_3.xyz + vs_TEXCOORD3.xyz;
    u_xlat16_3.xyz = max(u_xlat16_3.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat0.xyz = log2(u_xlat16_3.xyz);
    u_xlat0.xyz = u_xlat0.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
    u_xlat0.xyz = exp2(u_xlat0.xyz);
    u_xlat0.xyz = u_xlat0.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
    u_xlat0.xyz = max(u_xlat0.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat16_1 = texture(_MainTex, vs_TEXCOORD0.xy);
    u_xlat16_3.xyz = u_xlat16_1.xyz * _Color.xyz;
    SV_Target0.w = u_xlat16_1.w * _Color.w;
    u_xlat16_4.xyz = u_xlat0.xyz * u_xlat16_3.xyz;
    u_xlat16_3.xyz = u_xlat16_3.xyz * _LightColor0.xyz;
    SV_Target0.xyz = u_xlat16_3.xyz * u_xlat16_2.xyz + u_xlat16_4.xyz;
    return;
}

#endif
"
}
SubProgram "vulkan hw_tier00 " {
Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "SHADOWS_SCREEN" "VERTEXLIGHT_ON" }
"; SPIR-V
; Version: 1.0
; Generator: Khronos Glslang Reference Front End; 6
; Bound: 369
; Schema: 0
                                                      OpCapability Shader 
                                               %1 = OpExtInstImport "GLSL.std.450" 
                                                      OpMemoryModel Logical GLSL450 
                                                      OpEntryPoint Vertex %4 "main" %11 %90 %100 %116 %120 %159 %162 %353 %361 %362 
                                                      OpName vs_TEXCOORD0 "vs_TEXCOORD0" 
                                                      OpName vs_TEXCOORD1 "vs_TEXCOORD1" 
                                                      OpName vs_TEXCOORD2 "vs_TEXCOORD2" 
                                                      OpName vs_TEXCOORD3 "vs_TEXCOORD3" 
                                                      OpName vs_TEXCOORD5 "vs_TEXCOORD5" 
                                                      OpName vs_TEXCOORD6 "vs_TEXCOORD6" 
                                                      OpDecorate %11 Location 11 
                                                      OpDecorate %16 ArrayStride 16 
                                                      OpDecorate %18 ArrayStride 18 
                                                      OpDecorate %19 ArrayStride 19 
                                                      OpDecorate %20 ArrayStride 20 
                                                      OpMemberDecorate %21 0 Offset 21 
                                                      OpMemberDecorate %21 1 Offset 21 
                                                      OpMemberDecorate %21 2 Offset 21 
                                                      OpMemberDecorate %21 3 RelaxedPrecision 
                                                      OpMemberDecorate %21 3 Offset 21 
                                                      OpMemberDecorate %21 4 RelaxedPrecision 
                                                      OpMemberDecorate %21 4 Offset 21 
                                                      OpMemberDecorate %21 5 RelaxedPrecision 
                                                      OpMemberDecorate %21 5 Offset 21 
                                                      OpMemberDecorate %21 6 RelaxedPrecision 
                                                      OpMemberDecorate %21 6 Offset 21 
                                                      OpMemberDecorate %21 7 RelaxedPrecision 
                                                      OpMemberDecorate %21 7 Offset 21 
                                                      OpMemberDecorate %21 8 RelaxedPrecision 
                                                      OpMemberDecorate %21 8 Offset 21 
                                                      OpMemberDecorate %21 9 Offset 21 
                                                      OpMemberDecorate %21 10 Offset 21 
                                                      OpMemberDecorate %21 11 Offset 21 
                                                      OpMemberDecorate %21 12 Offset 21 
                                                      OpDecorate %21 Block 
                                                      OpDecorate %23 DescriptorSet 23 
                                                      OpDecorate %23 Binding 23 
                                                      OpMemberDecorate %88 0 BuiltIn 88 
                                                      OpMemberDecorate %88 1 BuiltIn 88 
                                                      OpMemberDecorate %88 2 BuiltIn 88 
                                                      OpDecorate %88 Block 
                                                      OpDecorate %100 Location 100 
                                                      OpDecorate vs_TEXCOORD0 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD0 Location 116 
                                                      OpDecorate %120 Location 120 
                                                      OpDecorate vs_TEXCOORD1 Location 159 
                                                      OpDecorate vs_TEXCOORD2 Location 162 
                                                      OpDecorate %222 RelaxedPrecision 
                                                      OpDecorate %243 RelaxedPrecision 
                                                      OpDecorate %244 RelaxedPrecision 
                                                      OpDecorate %249 RelaxedPrecision 
                                                      OpDecorate %250 RelaxedPrecision 
                                                      OpDecorate %260 RelaxedPrecision 
                                                      OpDecorate %261 RelaxedPrecision 
                                                      OpDecorate %271 RelaxedPrecision 
                                                      OpDecorate %272 RelaxedPrecision 
                                                      OpDecorate %302 RelaxedPrecision 
                                                      OpDecorate %315 RelaxedPrecision 
                                                      OpDecorate %316 RelaxedPrecision 
                                                      OpDecorate %319 RelaxedPrecision 
                                                      OpDecorate %325 RelaxedPrecision 
                                                      OpDecorate %328 RelaxedPrecision 
                                                      OpDecorate %329 RelaxedPrecision 
                                                      OpDecorate %330 RelaxedPrecision 
                                                      OpDecorate %334 RelaxedPrecision 
                                                      OpDecorate %335 RelaxedPrecision 
                                                      OpDecorate %336 RelaxedPrecision 
                                                      OpDecorate %340 RelaxedPrecision 
                                                      OpDecorate %341 RelaxedPrecision 
                                                      OpDecorate %342 RelaxedPrecision 
                                                      OpDecorate %346 RelaxedPrecision 
                                                      OpDecorate %347 RelaxedPrecision 
                                                      OpDecorate %348 RelaxedPrecision 
                                                      OpDecorate %349 RelaxedPrecision 
                                                      OpDecorate %350 RelaxedPrecision 
                                                      OpDecorate %351 RelaxedPrecision 
                                                      OpDecorate %352 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD3 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD3 Location 353 
                                                      OpDecorate %359 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD5 Location 361 
                                                      OpDecorate vs_TEXCOORD6 Location 362 
                                               %2 = OpTypeVoid 
                                               %3 = OpTypeFunction %2 
                                               %6 = OpTypeFloat 32 
                                               %7 = OpTypeVector %6 4 
                                               %8 = OpTypePointer Private %7 
                                Private f32_4* %9 = OpVariable Private 
                                              %10 = OpTypePointer Input %7 
                                 Input f32_4* %11 = OpVariable Input 
                                              %14 = OpTypeInt 32 0 
                                          u32 %15 = OpConstant 8 
                                              %16 = OpTypeArray %7 %15 
                                          u32 %17 = OpConstant 4 
                                              %18 = OpTypeArray %7 %17 
                                              %19 = OpTypeArray %7 %17 
                                              %20 = OpTypeArray %7 %17 
                                              %21 = OpTypeStruct %7 %7 %7 %7 %16 %7 %7 %7 %7 %18 %19 %20 %7 
                                              %22 = OpTypePointer Uniform %21 
Uniform struct {f32_4; f32_4; f32_4; f32_4; f32_4[8]; f32_4; f32_4; f32_4; f32_4; f32_4[4]; f32_4[4]; f32_4[4]; f32_4;}* %23 = OpVariable Uniform 
                                              %24 = OpTypeInt 32 1 
                                          i32 %25 = OpConstant 9 
                                          i32 %26 = OpConstant 1 
                                              %27 = OpTypePointer Uniform %7 
                                          i32 %31 = OpConstant 0 
                                          i32 %39 = OpConstant 2 
                               Private f32_4* %47 = OpVariable Private 
                                          i32 %49 = OpConstant 3 
                                              %53 = OpTypeVector %6 3 
                               Private f32_4* %65 = OpVariable Private 
                                          i32 %68 = OpConstant 11 
                                          u32 %86 = OpConstant 1 
                                              %87 = OpTypeArray %6 %86 
                                              %88 = OpTypeStruct %7 %6 %87 
                                              %89 = OpTypePointer Output %88 
         Output struct {f32_4; f32; f32[1];}* %90 = OpVariable Output 
                                              %98 = OpTypePointer Output %7 
                                Input f32_4* %100 = OpVariable Input 
                                             %101 = OpTypeVector %6 2 
                                         i32 %104 = OpConstant 12 
                                             %115 = OpTypePointer Output %101 
                       Output f32_2* vs_TEXCOORD0 = OpVariable Output 
                                             %119 = OpTypePointer Input %53 
                                Input f32_3* %120 = OpVariable Input 
                                         i32 %122 = OpConstant 10 
                                         u32 %127 = OpConstant 0 
                                             %128 = OpTypePointer Private %6 
                                         u32 %141 = OpConstant 2 
                                Private f32* %143 = OpVariable Private 
                                             %158 = OpTypePointer Output %53 
                       Output f32_3* vs_TEXCOORD1 = OpVariable Output 
                       Output f32_3* vs_TEXCOORD2 = OpVariable Output 
                              Private f32_4* %171 = OpVariable Private 
                              Private f32_4* %184 = OpVariable Private 
                                         f32 %215 = OpConstant 3.674022E-40 
                                       f32_4 %216 = OpConstantComposite %215 %215 %215 %215 
                                         f32 %224 = OpConstant 3.674022E-40 
                                       f32_4 %225 = OpConstantComposite %224 %224 %224 %224 
                                         f32 %233 = OpConstant 3.674022E-40 
                                       f32_4 %234 = OpConstantComposite %233 %233 %233 %233 
                                         i32 %241 = OpConstant 4 
                                         f32 %283 = OpConstant 3.674022E-40 
                                       f32_3 %284 = OpConstantComposite %283 %283 %283 
                                         f32 %286 = OpConstant 3.674022E-40 
                                       f32_3 %287 = OpConstantComposite %286 %286 %286 
                                         f32 %296 = OpConstant 3.674022E-40 
                                       f32_3 %297 = OpConstantComposite %296 %296 %296 
                                             %301 = OpTypePointer Private %53 
                              Private f32_3* %302 = OpVariable Private 
                              Private f32_4* %319 = OpVariable Private 
                              Private f32_3* %325 = OpVariable Private 
                                         i32 %326 = OpConstant 5 
                                         i32 %332 = OpConstant 6 
                                         i32 %338 = OpConstant 7 
                                         i32 %344 = OpConstant 8 
                       Output f32_3* vs_TEXCOORD3 = OpVariable Output 
                       Output f32_4* vs_TEXCOORD5 = OpVariable Output 
                       Output f32_4* vs_TEXCOORD6 = OpVariable Output 
                                             %363 = OpTypePointer Output %6 
                                          void %4 = OpFunction None %3 
                                               %5 = OpLabel 
                                        f32_4 %12 = OpLoad %11 
                                        f32_4 %13 = OpVectorShuffle %12 %12 1 1 1 1 
                               Uniform f32_4* %28 = OpAccessChain %23 %25 %26 
                                        f32_4 %29 = OpLoad %28 
                                        f32_4 %30 = OpFMul %13 %29 
                                                      OpStore %9 %30 
                               Uniform f32_4* %32 = OpAccessChain %23 %25 %31 
                                        f32_4 %33 = OpLoad %32 
                                        f32_4 %34 = OpLoad %11 
                                        f32_4 %35 = OpVectorShuffle %34 %34 0 0 0 0 
                                        f32_4 %36 = OpFMul %33 %35 
                                        f32_4 %37 = OpLoad %9 
                                        f32_4 %38 = OpFAdd %36 %37 
                                                      OpStore %9 %38 
                               Uniform f32_4* %40 = OpAccessChain %23 %25 %39 
                                        f32_4 %41 = OpLoad %40 
                                        f32_4 %42 = OpLoad %11 
                                        f32_4 %43 = OpVectorShuffle %42 %42 2 2 2 2 
                                        f32_4 %44 = OpFMul %41 %43 
                                        f32_4 %45 = OpLoad %9 
                                        f32_4 %46 = OpFAdd %44 %45 
                                                      OpStore %9 %46 
                                        f32_4 %48 = OpLoad %9 
                               Uniform f32_4* %50 = OpAccessChain %23 %25 %49 
                                        f32_4 %51 = OpLoad %50 
                                        f32_4 %52 = OpFAdd %48 %51 
                                                      OpStore %47 %52 
                               Uniform f32_4* %54 = OpAccessChain %23 %25 %49 
                                        f32_4 %55 = OpLoad %54 
                                        f32_3 %56 = OpVectorShuffle %55 %55 0 1 2 
                                        f32_4 %57 = OpLoad %11 
                                        f32_3 %58 = OpVectorShuffle %57 %57 3 3 3 
                                        f32_3 %59 = OpFMul %56 %58 
                                        f32_4 %60 = OpLoad %9 
                                        f32_3 %61 = OpVectorShuffle %60 %60 0 1 2 
                                        f32_3 %62 = OpFAdd %59 %61 
                                        f32_4 %63 = OpLoad %9 
                                        f32_4 %64 = OpVectorShuffle %63 %62 4 5 6 3 
                                                      OpStore %9 %64 
                                        f32_4 %66 = OpLoad %47 
                                        f32_4 %67 = OpVectorShuffle %66 %66 1 1 1 1 
                               Uniform f32_4* %69 = OpAccessChain %23 %68 %26 
                                        f32_4 %70 = OpLoad %69 
                                        f32_4 %71 = OpFMul %67 %70 
                                                      OpStore %65 %71 
                               Uniform f32_4* %72 = OpAccessChain %23 %68 %31 
                                        f32_4 %73 = OpLoad %72 
                                        f32_4 %74 = OpLoad %47 
                                        f32_4 %75 = OpVectorShuffle %74 %74 0 0 0 0 
                                        f32_4 %76 = OpFMul %73 %75 
                                        f32_4 %77 = OpLoad %65 
                                        f32_4 %78 = OpFAdd %76 %77 
                                                      OpStore %65 %78 
                               Uniform f32_4* %79 = OpAccessChain %23 %68 %39 
                                        f32_4 %80 = OpLoad %79 
                                        f32_4 %81 = OpLoad %47 
                                        f32_4 %82 = OpVectorShuffle %81 %81 2 2 2 2 
                                        f32_4 %83 = OpFMul %80 %82 
                                        f32_4 %84 = OpLoad %65 
                                        f32_4 %85 = OpFAdd %83 %84 
                                                      OpStore %65 %85 
                               Uniform f32_4* %91 = OpAccessChain %23 %68 %49 
                                        f32_4 %92 = OpLoad %91 
                                        f32_4 %93 = OpLoad %47 
                                        f32_4 %94 = OpVectorShuffle %93 %93 3 3 3 3 
                                        f32_4 %95 = OpFMul %92 %94 
                                        f32_4 %96 = OpLoad %65 
                                        f32_4 %97 = OpFAdd %95 %96 
                                Output f32_4* %99 = OpAccessChain %90 %31 
                                                      OpStore %99 %97 
                                       f32_4 %102 = OpLoad %100 
                                       f32_2 %103 = OpVectorShuffle %102 %102 0 1 
                              Uniform f32_4* %105 = OpAccessChain %23 %104 
                                       f32_4 %106 = OpLoad %105 
                                       f32_2 %107 = OpVectorShuffle %106 %106 0 1 
                                       f32_2 %108 = OpFMul %103 %107 
                              Uniform f32_4* %109 = OpAccessChain %23 %104 
                                       f32_4 %110 = OpLoad %109 
                                       f32_2 %111 = OpVectorShuffle %110 %110 2 3 
                                       f32_2 %112 = OpFAdd %108 %111 
                                       f32_4 %113 = OpLoad %47 
                                       f32_4 %114 = OpVectorShuffle %113 %112 4 5 2 3 
                                                      OpStore %47 %114 
                                       f32_4 %117 = OpLoad %47 
                                       f32_2 %118 = OpVectorShuffle %117 %117 0 1 
                                                      OpStore vs_TEXCOORD0 %118 
                                       f32_3 %121 = OpLoad %120 
                              Uniform f32_4* %123 = OpAccessChain %23 %122 %31 
                                       f32_4 %124 = OpLoad %123 
                                       f32_3 %125 = OpVectorShuffle %124 %124 0 1 2 
                                         f32 %126 = OpDot %121 %125 
                                Private f32* %129 = OpAccessChain %47 %127 
                                                      OpStore %129 %126 
                                       f32_3 %130 = OpLoad %120 
                              Uniform f32_4* %131 = OpAccessChain %23 %122 %26 
                                       f32_4 %132 = OpLoad %131 
                                       f32_3 %133 = OpVectorShuffle %132 %132 0 1 2 
                                         f32 %134 = OpDot %130 %133 
                                Private f32* %135 = OpAccessChain %47 %86 
                                                      OpStore %135 %134 
                                       f32_3 %136 = OpLoad %120 
                              Uniform f32_4* %137 = OpAccessChain %23 %122 %39 
                                       f32_4 %138 = OpLoad %137 
                                       f32_3 %139 = OpVectorShuffle %138 %138 0 1 2 
                                         f32 %140 = OpDot %136 %139 
                                Private f32* %142 = OpAccessChain %47 %141 
                                                      OpStore %142 %140 
                                       f32_4 %144 = OpLoad %47 
                                       f32_3 %145 = OpVectorShuffle %144 %144 0 1 2 
                                       f32_4 %146 = OpLoad %47 
                                       f32_3 %147 = OpVectorShuffle %146 %146 0 1 2 
                                         f32 %148 = OpDot %145 %147 
                                                      OpStore %143 %148 
                                         f32 %149 = OpLoad %143 
                                         f32 %150 = OpExtInst %1 32 %149 
                                                      OpStore %143 %150 
                                         f32 %151 = OpLoad %143 
                                       f32_3 %152 = OpCompositeConstruct %151 %151 %151 
                                       f32_4 %153 = OpLoad %47 
                                       f32_3 %154 = OpVectorShuffle %153 %153 0 1 2 
                                       f32_3 %155 = OpFMul %152 %154 
                                       f32_4 %156 = OpLoad %47 
                                       f32_4 %157 = OpVectorShuffle %156 %155 4 5 6 3 
                                                      OpStore %47 %157 
                                       f32_4 %160 = OpLoad %47 
                                       f32_3 %161 = OpVectorShuffle %160 %160 0 1 2 
                                                      OpStore vs_TEXCOORD1 %161 
                                       f32_4 %163 = OpLoad %9 
                                       f32_3 %164 = OpVectorShuffle %163 %163 0 1 2 
                                                      OpStore vs_TEXCOORD2 %164 
                                       f32_4 %165 = OpLoad %9 
                                       f32_4 %166 = OpVectorShuffle %165 %165 0 0 0 0 
                                       f32_4 %167 = OpFNegate %166 
                              Uniform f32_4* %168 = OpAccessChain %23 %31 
                                       f32_4 %169 = OpLoad %168 
                                       f32_4 %170 = OpFAdd %167 %169 
                                                      OpStore %65 %170 
                                       f32_4 %172 = OpLoad %9 
                                       f32_4 %173 = OpVectorShuffle %172 %172 1 1 1 1 
                                       f32_4 %174 = OpFNegate %173 
                              Uniform f32_4* %175 = OpAccessChain %23 %26 
                                       f32_4 %176 = OpLoad %175 
                                       f32_4 %177 = OpFAdd %174 %176 
                                                      OpStore %171 %177 
                                       f32_4 %178 = OpLoad %9 
                                       f32_4 %179 = OpVectorShuffle %178 %178 2 2 2 2 
                                       f32_4 %180 = OpFNegate %179 
                              Uniform f32_4* %181 = OpAccessChain %23 %39 
                                       f32_4 %182 = OpLoad %181 
                                       f32_4 %183 = OpFAdd %180 %182 
                                                      OpStore %9 %183 
                                       f32_4 %185 = OpLoad %47 
                                       f32_4 %186 = OpVectorShuffle %185 %185 1 1 1 1 
                                       f32_4 %187 = OpLoad %171 
                                       f32_4 %188 = OpFMul %186 %187 
                                                      OpStore %184 %188 
                                       f32_4 %189 = OpLoad %171 
                                       f32_4 %190 = OpLoad %171 
                                       f32_4 %191 = OpFMul %189 %190 
                                                      OpStore %171 %191 
                                       f32_4 %192 = OpLoad %65 
                                       f32_4 %193 = OpLoad %65 
                                       f32_4 %194 = OpFMul %192 %193 
                                       f32_4 %195 = OpLoad %171 
                                       f32_4 %196 = OpFAdd %194 %195 
                                                      OpStore %171 %196 
                                       f32_4 %197 = OpLoad %65 
                                       f32_4 %198 = OpLoad %47 
                                       f32_4 %199 = OpVectorShuffle %198 %198 0 0 0 0 
                                       f32_4 %200 = OpFMul %197 %199 
                                       f32_4 %201 = OpLoad %184 
                                       f32_4 %202 = OpFAdd %200 %201 
                                                      OpStore %65 %202 
                                       f32_4 %203 = OpLoad %9 
                                       f32_4 %204 = OpLoad %47 
                                       f32_4 %205 = OpVectorShuffle %204 %204 2 2 2 2 
                                       f32_4 %206 = OpFMul %203 %205 
                                       f32_4 %207 = OpLoad %65 
                                       f32_4 %208 = OpFAdd %206 %207 
                                                      OpStore %65 %208 
                                       f32_4 %209 = OpLoad %9 
                                       f32_4 %210 = OpLoad %9 
                                       f32_4 %211 = OpFMul %209 %210 
                                       f32_4 %212 = OpLoad %171 
                                       f32_4 %213 = OpFAdd %211 %212 
                                                      OpStore %9 %213 
                                       f32_4 %214 = OpLoad %9 
                                       f32_4 %217 = OpExtInst %1 40 %214 %216 
                                                      OpStore %9 %217 
                                       f32_4 %218 = OpLoad %9 
                                       f32_4 %219 = OpExtInst %1 32 %218 
                                                      OpStore %171 %219 
                                       f32_4 %220 = OpLoad %9 
                              Uniform f32_4* %221 = OpAccessChain %23 %49 
                                       f32_4 %222 = OpLoad %221 
                                       f32_4 %223 = OpFMul %220 %222 
                                       f32_4 %226 = OpFAdd %223 %225 
                                                      OpStore %9 %226 
                                       f32_4 %227 = OpLoad %9 
                                       f32_4 %228 = OpFDiv %225 %227 
                                                      OpStore %9 %228 
                                       f32_4 %229 = OpLoad %65 
                                       f32_4 %230 = OpLoad %171 
                                       f32_4 %231 = OpFMul %229 %230 
                                                      OpStore %65 %231 
                                       f32_4 %232 = OpLoad %65 
                                       f32_4 %235 = OpExtInst %1 40 %232 %234 
                                                      OpStore %65 %235 
                                       f32_4 %236 = OpLoad %9 
                                       f32_4 %237 = OpLoad %65 
                                       f32_4 %238 = OpFMul %236 %237 
                                                      OpStore %9 %238 
                                       f32_4 %239 = OpLoad %9 
                                       f32_3 %240 = OpVectorShuffle %239 %239 1 1 1 
                              Uniform f32_4* %242 = OpAccessChain %23 %241 %26 
                                       f32_4 %243 = OpLoad %242 
                                       f32_3 %244 = OpVectorShuffle %243 %243 0 1 2 
                                       f32_3 %245 = OpFMul %240 %244 
                                       f32_4 %246 = OpLoad %65 
                                       f32_4 %247 = OpVectorShuffle %246 %245 4 5 6 3 
                                                      OpStore %65 %247 
                              Uniform f32_4* %248 = OpAccessChain %23 %241 %31 
                                       f32_4 %249 = OpLoad %248 
                                       f32_3 %250 = OpVectorShuffle %249 %249 0 1 2 
                                       f32_4 %251 = OpLoad %9 
                                       f32_3 %252 = OpVectorShuffle %251 %251 0 0 0 
                                       f32_3 %253 = OpFMul %250 %252 
                                       f32_4 %254 = OpLoad %65 
                                       f32_3 %255 = OpVectorShuffle %254 %254 0 1 2 
                                       f32_3 %256 = OpFAdd %253 %255 
                                       f32_4 %257 = OpLoad %65 
                                       f32_4 %258 = OpVectorShuffle %257 %256 4 5 6 3 
                                                      OpStore %65 %258 
                              Uniform f32_4* %259 = OpAccessChain %23 %241 %39 
                                       f32_4 %260 = OpLoad %259 
                                       f32_3 %261 = OpVectorShuffle %260 %260 0 1 2 
                                       f32_4 %262 = OpLoad %9 
                                       f32_3 %263 = OpVectorShuffle %262 %262 2 2 2 
                                       f32_3 %264 = OpFMul %261 %263 
                                       f32_4 %265 = OpLoad %65 
                                       f32_3 %266 = OpVectorShuffle %265 %265 0 1 2 
                                       f32_3 %267 = OpFAdd %264 %266 
                                       f32_4 %268 = OpLoad %9 
                                       f32_4 %269 = OpVectorShuffle %268 %267 4 5 6 3 
                                                      OpStore %9 %269 
                              Uniform f32_4* %270 = OpAccessChain %23 %241 %49 
                                       f32_4 %271 = OpLoad %270 
                                       f32_3 %272 = OpVectorShuffle %271 %271 0 1 2 
                                       f32_4 %273 = OpLoad %9 
                                       f32_3 %274 = OpVectorShuffle %273 %273 3 3 3 
                                       f32_3 %275 = OpFMul %272 %274 
                                       f32_4 %276 = OpLoad %9 
                                       f32_3 %277 = OpVectorShuffle %276 %276 0 1 2 
                                       f32_3 %278 = OpFAdd %275 %277 
                                       f32_4 %279 = OpLoad %9 
                                       f32_4 %280 = OpVectorShuffle %279 %278 4 5 6 3 
                                                      OpStore %9 %280 
                                       f32_4 %281 = OpLoad %9 
                                       f32_3 %282 = OpVectorShuffle %281 %281 0 1 2 
                                       f32_3 %285 = OpFMul %282 %284 
                                       f32_3 %288 = OpFAdd %285 %287 
                                       f32_4 %289 = OpLoad %65 
                                       f32_4 %290 = OpVectorShuffle %289 %288 4 5 6 3 
                                                      OpStore %65 %290 
                                       f32_4 %291 = OpLoad %9 
                                       f32_3 %292 = OpVectorShuffle %291 %291 0 1 2 
                                       f32_4 %293 = OpLoad %65 
                                       f32_3 %294 = OpVectorShuffle %293 %293 0 1 2 
                                       f32_3 %295 = OpFMul %292 %294 
                                       f32_3 %298 = OpFAdd %295 %297 
                                       f32_4 %299 = OpLoad %65 
                                       f32_4 %300 = OpVectorShuffle %299 %298 4 5 6 3 
                                                      OpStore %65 %300 
                                Private f32* %303 = OpAccessChain %47 %86 
                                         f32 %304 = OpLoad %303 
                                Private f32* %305 = OpAccessChain %47 %86 
                                         f32 %306 = OpLoad %305 
                                         f32 %307 = OpFMul %304 %306 
                                Private f32* %308 = OpAccessChain %302 %127 
                                                      OpStore %308 %307 
                                Private f32* %309 = OpAccessChain %47 %127 
                                         f32 %310 = OpLoad %309 
                                Private f32* %311 = OpAccessChain %47 %127 
                                         f32 %312 = OpLoad %311 
                                         f32 %313 = OpFMul %310 %312 
                                Private f32* %314 = OpAccessChain %302 %127 
                                         f32 %315 = OpLoad %314 
                                         f32 %316 = OpFNegate %315 
                                         f32 %317 = OpFAdd %313 %316 
                                Private f32* %318 = OpAccessChain %302 %127 
                                                      OpStore %318 %317 
                                       f32_4 %320 = OpLoad %47 
                                       f32_4 %321 = OpVectorShuffle %320 %320 1 2 2 0 
                                       f32_4 %322 = OpLoad %47 
                                       f32_4 %323 = OpVectorShuffle %322 %322 0 1 2 2 
                                       f32_4 %324 = OpFMul %321 %323 
                                                      OpStore %319 %324 
                              Uniform f32_4* %327 = OpAccessChain %23 %326 
                                       f32_4 %328 = OpLoad %327 
                                       f32_4 %329 = OpLoad %319 
                                         f32 %330 = OpDot %328 %329 
                                Private f32* %331 = OpAccessChain %325 %127 
                                                      OpStore %331 %330 
                              Uniform f32_4* %333 = OpAccessChain %23 %332 
                                       f32_4 %334 = OpLoad %333 
                                       f32_4 %335 = OpLoad %319 
                                         f32 %336 = OpDot %334 %335 
                                Private f32* %337 = OpAccessChain %325 %86 
                                                      OpStore %337 %336 
                              Uniform f32_4* %339 = OpAccessChain %23 %338 
                                       f32_4 %340 = OpLoad %339 
                                       f32_4 %341 = OpLoad %319 
                                         f32 %342 = OpDot %340 %341 
                                Private f32* %343 = OpAccessChain %325 %141 
                                                      OpStore %343 %342 
                              Uniform f32_4* %345 = OpAccessChain %23 %344 
                                       f32_4 %346 = OpLoad %345 
                                       f32_3 %347 = OpVectorShuffle %346 %346 0 1 2 
                                       f32_3 %348 = OpLoad %302 
                                       f32_3 %349 = OpVectorShuffle %348 %348 0 0 0 
                                       f32_3 %350 = OpFMul %347 %349 
                                       f32_3 %351 = OpLoad %325 
                                       f32_3 %352 = OpFAdd %350 %351 
                                                      OpStore %302 %352 
                                       f32_4 %354 = OpLoad %9 
                                       f32_3 %355 = OpVectorShuffle %354 %354 0 1 2 
                                       f32_4 %356 = OpLoad %65 
                                       f32_3 %357 = OpVectorShuffle %356 %356 0 1 2 
                                       f32_3 %358 = OpFMul %355 %357 
                                       f32_3 %359 = OpLoad %302 
                                       f32_3 %360 = OpFAdd %358 %359 
                                                      OpStore vs_TEXCOORD3 %360 
                                                      OpStore vs_TEXCOORD5 %234 
                                                      OpStore vs_TEXCOORD6 %234 
                                 Output f32* %364 = OpAccessChain %90 %31 %86 
                                         f32 %365 = OpLoad %364 
                                         f32 %366 = OpFNegate %365 
                                 Output f32* %367 = OpAccessChain %90 %31 %86 
                                                      OpStore %367 %366 
                                                      OpReturn
                                                      OpFunctionEnd
; SPIR-V
; Version: 1.0
; Generator: Khronos Glslang Reference Front End; 6
; Bound: 411
; Schema: 0
                                                      OpCapability Shader 
                                               %1 = OpExtInstImport "GLSL.std.450" 
                                                      OpMemoryModel Logical GLSL450 
                                                      OpEntryPoint Fragment %4 "main" %12 %190 %328 %373 %384 
                                                      OpExecutionMode %4 OriginUpperLeft 
                                                      OpName vs_TEXCOORD2 "vs_TEXCOORD2" 
                                                      OpName vs_TEXCOORD1 "vs_TEXCOORD1" 
                                                      OpName vs_TEXCOORD3 "vs_TEXCOORD3" 
                                                      OpName vs_TEXCOORD0 "vs_TEXCOORD0" 
                                                      OpDecorate vs_TEXCOORD2 Location 12 
                                                      OpDecorate %16 ArrayStride 16 
                                                      OpDecorate %18 ArrayStride 18 
                                                      OpMemberDecorate %19 0 Offset 19 
                                                      OpMemberDecorate %19 1 RelaxedPrecision 
                                                      OpMemberDecorate %19 1 Offset 19 
                                                      OpMemberDecorate %19 2 RelaxedPrecision 
                                                      OpMemberDecorate %19 2 Offset 19 
                                                      OpMemberDecorate %19 3 RelaxedPrecision 
                                                      OpMemberDecorate %19 3 Offset 19 
                                                      OpMemberDecorate %19 4 RelaxedPrecision 
                                                      OpMemberDecorate %19 4 Offset 19 
                                                      OpMemberDecorate %19 5 Offset 19 
                                                      OpMemberDecorate %19 6 RelaxedPrecision 
                                                      OpMemberDecorate %19 6 Offset 19 
                                                      OpMemberDecorate %19 7 Offset 19 
                                                      OpMemberDecorate %19 8 Offset 19 
                                                      OpMemberDecorate %19 9 RelaxedPrecision 
                                                      OpMemberDecorate %19 9 Offset 19 
                                                      OpMemberDecorate %19 10 RelaxedPrecision 
                                                      OpMemberDecorate %19 10 Offset 19 
                                                      OpMemberDecorate %19 11 RelaxedPrecision 
                                                      OpMemberDecorate %19 11 Offset 19 
                                                      OpMemberDecorate %19 12 RelaxedPrecision 
                                                      OpMemberDecorate %19 12 Offset 19 
                                                      OpMemberDecorate %19 13 RelaxedPrecision 
                                                      OpMemberDecorate %19 13 Offset 19 
                                                      OpMemberDecorate %19 14 RelaxedPrecision 
                                                      OpMemberDecorate %19 14 Offset 19 
                                                      OpDecorate %19 Block 
                                                      OpDecorate %21 DescriptorSet 21 
                                                      OpDecorate %21 Binding 21 
                                                      OpDecorate %94 RelaxedPrecision 
                                                      OpDecorate %97 RelaxedPrecision 
                                                      OpDecorate %147 DescriptorSet 147 
                                                      OpDecorate %147 Binding 147 
                                                      OpDecorate %151 DescriptorSet 151 
                                                      OpDecorate %151 Binding 151 
                                                      OpDecorate %160 RelaxedPrecision 
                                                      OpDecorate %162 RelaxedPrecision 
                                                      OpDecorate %163 RelaxedPrecision 
                                                      OpDecorate %164 RelaxedPrecision 
                                                      OpDecorate %169 RelaxedPrecision 
                                                      OpDecorate %172 RelaxedPrecision 
                                                      OpDecorate %175 RelaxedPrecision 
                                                      OpDecorate %177 RelaxedPrecision 
                                                      OpDecorate %178 RelaxedPrecision 
                                                      OpDecorate %179 RelaxedPrecision 
                                                      OpDecorate %184 RelaxedPrecision 
                                                      OpDecorate %187 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD1 Location 190 
                                                      OpDecorate %196 RelaxedPrecision 
                                                      OpDecorate %197 RelaxedPrecision 
                                                      OpDecorate %199 RelaxedPrecision 
                                                      OpDecorate %200 RelaxedPrecision 
                                                      OpDecorate %203 RelaxedPrecision 
                                                      OpDecorate %205 RelaxedPrecision 
                                                      OpDecorate %206 RelaxedPrecision 
                                                      OpDecorate %207 RelaxedPrecision 
                                                      OpDecorate %210 RelaxedPrecision 
                                                      OpDecorate %211 RelaxedPrecision 
                                                      OpDecorate %213 RelaxedPrecision 
                                                      OpDecorate %216 RelaxedPrecision 
                                                      OpDecorate %217 RelaxedPrecision 
                                                      OpDecorate %219 RelaxedPrecision 
                                                      OpDecorate %222 RelaxedPrecision 
                                                      OpDecorate %223 RelaxedPrecision 
                                                      OpDecorate %224 RelaxedPrecision 
                                                      OpDecorate %225 RelaxedPrecision 
                                                      OpDecorate %227 RelaxedPrecision 
                                                      OpDecorate %228 RelaxedPrecision 
                                                      OpDecorate %230 RelaxedPrecision 
                                                      OpDecorate %232 RelaxedPrecision 
                                                      OpDecorate %233 RelaxedPrecision 
                                                      OpDecorate %235 RelaxedPrecision 
                                                      OpDecorate %236 RelaxedPrecision 
                                                      OpDecorate %237 RelaxedPrecision 
                                                      OpDecorate %238 RelaxedPrecision 
                                                      OpDecorate %239 RelaxedPrecision 
                                                      OpDecorate %240 RelaxedPrecision 
                                                      OpDecorate %241 RelaxedPrecision 
                                                      OpDecorate %242 RelaxedPrecision 
                                                      OpDecorate %243 RelaxedPrecision 
                                                      OpDecorate %245 RelaxedPrecision 
                                                      OpDecorate %246 RelaxedPrecision 
                                                      OpDecorate %249 RelaxedPrecision 
                                                      OpDecorate %250 RelaxedPrecision 
                                                      OpDecorate %253 RelaxedPrecision 
                                                      OpDecorate %255 RelaxedPrecision 
                                                      OpDecorate %257 RelaxedPrecision 
                                                      OpDecorate %259 RelaxedPrecision 
                                                      OpDecorate %261 RelaxedPrecision 
                                                      OpDecorate %262 RelaxedPrecision 
                                                      OpDecorate %265 RelaxedPrecision 
                                                      OpDecorate %266 RelaxedPrecision 
                                                      OpDecorate %267 RelaxedPrecision 
                                                      OpDecorate %270 RelaxedPrecision 
                                                      OpDecorate %272 RelaxedPrecision 
                                                      OpDecorate %273 RelaxedPrecision 
                                                      OpDecorate %277 RelaxedPrecision 
                                                      OpDecorate %278 RelaxedPrecision 
                                                      OpDecorate %279 RelaxedPrecision 
                                                      OpDecorate %282 RelaxedPrecision 
                                                      OpDecorate %283 RelaxedPrecision 
                                                      OpDecorate %284 RelaxedPrecision 
                                                      OpDecorate %286 RelaxedPrecision 
                                                      OpDecorate %287 RelaxedPrecision 
                                                      OpDecorate %288 RelaxedPrecision 
                                                      OpDecorate %289 RelaxedPrecision 
                                                      OpDecorate %291 RelaxedPrecision 
                                                      OpDecorate %292 RelaxedPrecision 
                                                      OpDecorate %293 RelaxedPrecision 
                                                      OpDecorate %294 RelaxedPrecision 
                                                      OpDecorate %295 RelaxedPrecision 
                                                      OpDecorate %296 RelaxedPrecision 
                                                      OpDecorate %298 RelaxedPrecision 
                                                      OpDecorate %299 RelaxedPrecision 
                                                      OpDecorate %300 RelaxedPrecision 
                                                      OpDecorate %301 RelaxedPrecision 
                                                      OpDecorate %302 RelaxedPrecision 
                                                      OpDecorate %303 RelaxedPrecision 
                                                      OpDecorate %304 RelaxedPrecision 
                                                      OpDecorate %305 RelaxedPrecision 
                                                      OpDecorate %306 RelaxedPrecision 
                                                      OpDecorate %312 RelaxedPrecision 
                                                      OpDecorate %317 RelaxedPrecision 
                                                      OpDecorate %323 RelaxedPrecision 
                                                      OpDecorate %327 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD3 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD3 Location 328 
                                                      OpDecorate %329 RelaxedPrecision 
                                                      OpDecorate %330 RelaxedPrecision 
                                                      OpDecorate %331 RelaxedPrecision 
                                                      OpDecorate %333 RelaxedPrecision 
                                                      OpDecorate %334 RelaxedPrecision 
                                                      OpDecorate %335 RelaxedPrecision 
                                                      OpDecorate %365 RelaxedPrecision 
                                                      OpDecorate %366 RelaxedPrecision 
                                                      OpDecorate %366 DescriptorSet 366 
                                                      OpDecorate %366 Binding 366 
                                                      OpDecorate %367 RelaxedPrecision 
                                                      OpDecorate %368 RelaxedPrecision 
                                                      OpDecorate %368 DescriptorSet 368 
                                                      OpDecorate %368 Binding 368 
                                                      OpDecorate %369 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD0 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD0 Location 373 
                                                      OpDecorate %374 RelaxedPrecision 
                                                      OpDecorate %375 RelaxedPrecision 
                                                      OpDecorate %376 RelaxedPrecision 
                                                      OpDecorate %377 RelaxedPrecision 
                                                      OpDecorate %380 RelaxedPrecision 
                                                      OpDecorate %381 RelaxedPrecision 
                                                      OpDecorate %382 RelaxedPrecision 
                                                      OpDecorate %384 RelaxedPrecision 
                                                      OpDecorate %384 Location 384 
                                                      OpDecorate %386 RelaxedPrecision 
                                                      OpDecorate %388 RelaxedPrecision 
                                                      OpDecorate %389 RelaxedPrecision 
                                                      OpDecorate %392 RelaxedPrecision 
                                                      OpDecorate %395 RelaxedPrecision 
                                                      OpDecorate %397 RelaxedPrecision 
                                                      OpDecorate %400 RelaxedPrecision 
                                                      OpDecorate %401 RelaxedPrecision 
                                                      OpDecorate %402 RelaxedPrecision 
                                                      OpDecorate %403 RelaxedPrecision 
                                                      OpDecorate %404 RelaxedPrecision 
                                                      OpDecorate %405 RelaxedPrecision 
                                                      OpDecorate %406 RelaxedPrecision 
                                                      OpDecorate %407 RelaxedPrecision 
                                               %2 = OpTypeVoid 
                                               %3 = OpTypeFunction %2 
                                               %6 = OpTypeFloat 32 
                                               %7 = OpTypeVector %6 4 
                                               %8 = OpTypePointer Private %7 
                                Private f32_4* %9 = OpVariable Private 
                                              %10 = OpTypeVector %6 3 
                                              %11 = OpTypePointer Input %10 
                        Input f32_3* vs_TEXCOORD2 = OpVariable Input 
                                              %14 = OpTypeInt 32 0 
                                          u32 %15 = OpConstant 16 
                                              %16 = OpTypeArray %7 %15 
                                          u32 %17 = OpConstant 4 
                                              %18 = OpTypeArray %7 %17 
                                              %19 = OpTypeStruct %10 %7 %7 %7 %7 %16 %7 %7 %18 %7 %7 %7 %7 %6 %6 
                                              %20 = OpTypePointer Uniform %19 
Uniform struct {f32_3; f32_4; f32_4; f32_4; f32_4; f32_4[16]; f32_4; f32_4; f32_4[4]; f32_4; f32_4; f32_4; f32_4; f32; f32;}* %21 = OpVariable Uniform 
                                              %22 = OpTypeInt 32 1 
                                          i32 %23 = OpConstant 7 
                                              %24 = OpTypePointer Uniform %7 
                                          u32 %37 = OpConstant 0 
                                              %38 = OpTypePointer Private %6 
                                              %44 = OpTypePointer Private %10 
                               Private f32_3* %45 = OpVariable Private 
                                          i32 %48 = OpConstant 0 
                                              %49 = OpTypePointer Uniform %10 
                               Private f32_3* %53 = OpVariable Private 
                                          i32 %54 = OpConstant 8 
                                          u32 %55 = OpConstant 2 
                                              %56 = OpTypePointer Uniform %6 
                                          i32 %60 = OpConstant 1 
                                          u32 %63 = OpConstant 1 
                                          i32 %65 = OpConstant 2 
                                          u32 %80 = OpConstant 3 
                                          i32 %92 = OpConstant 6 
                                         f32 %102 = OpConstant 3.674022E-40 
                                         f32 %103 = OpConstant 3.674022E-40 
                                         i32 %108 = OpConstant 5 
                                         i32 %130 = OpConstant 3 
                                             %135 = OpTypePointer Function %10 
                                             %137 = OpTypeVector %6 2 
                                             %145 = OpTypeImage %6 Dim2D 0 0 0 1 Unknown 
                                             %146 = OpTypePointer UniformConstant %145 
        UniformConstant read_only Texture2D* %147 = OpVariable UniformConstant 
                                             %149 = OpTypeSampler 
                                             %150 = OpTypePointer UniformConstant %149 
                    UniformConstant sampler* %151 = OpVariable UniformConstant 
                                             %153 = OpTypeImage %6 Dim2D 1 0 0 1 Unknown 
                                             %154 = OpTypeSampledImage %153 
                              Private f32_3* %160 = OpVariable Private 
                              Private f32_3* %175 = OpVariable Private 
                        Input f32_3* vs_TEXCOORD1 = OpVariable Input 
                                Private f32* %213 = OpVariable Private 
                                         i32 %214 = OpConstant 14 
                                         f32 %218 = OpConstant 3.674022E-40 
                                         i32 %220 = OpConstant 13 
                                Private f32* %230 = OpVariable Private 
                                         f32 %254 = OpConstant 3.674022E-40 
                                         f32 %256 = OpConstant 3.674022E-40 
                                         i32 %275 = OpConstant 11 
                                         i32 %280 = OpConstant 12 
                              Private f32_3* %294 = OpVariable Private 
                                         i32 %321 = OpConstant 4 
                        Input f32_3* vs_TEXCOORD3 = OpVariable Input 
                                       f32_3 %332 = OpConstantComposite %102 %102 %102 
                                         f32 %340 = OpConstant 3.674022E-40 
                                       f32_3 %341 = OpConstantComposite %340 %340 %340 
                                         f32 %352 = OpConstant 3.674022E-40 
                                       f32_3 %353 = OpConstantComposite %352 %352 %352 
                                         f32 %355 = OpConstant 3.674022E-40 
                                       f32_3 %356 = OpConstantComposite %355 %355 %355 
                              Private f32_4* %365 = OpVariable Private 
        UniformConstant read_only Texture2D* %366 = OpVariable UniformConstant 
                    UniformConstant sampler* %368 = OpVariable UniformConstant 
                                             %370 = OpTypeSampledImage %145 
                                             %372 = OpTypePointer Input %137 
                        Input f32_2* vs_TEXCOORD0 = OpVariable Input 
                                         i32 %378 = OpConstant 10 
                                             %383 = OpTypePointer Output %7 
                               Output f32_4* %384 = OpVariable Output 
                                             %390 = OpTypePointer Output %6 
                              Private f32_3* %392 = OpVariable Private 
                                         i32 %398 = OpConstant 9 
                                          void %4 = OpFunction None %3 
                                               %5 = OpLabel 
                             Function f32_3* %136 = OpVariable Function 
                                        f32_3 %13 = OpLoad vs_TEXCOORD2 
                               Uniform f32_4* %25 = OpAccessChain %21 %23 
                                        f32_4 %26 = OpLoad %25 
                                        f32_3 %27 = OpVectorShuffle %26 %26 0 1 2 
                                        f32_3 %28 = OpFNegate %27 
                                        f32_3 %29 = OpFAdd %13 %28 
                                        f32_4 %30 = OpLoad %9 
                                        f32_4 %31 = OpVectorShuffle %30 %29 4 5 6 3 
                                                      OpStore %9 %31 
                                        f32_4 %32 = OpLoad %9 
                                        f32_3 %33 = OpVectorShuffle %32 %32 0 1 2 
                                        f32_4 %34 = OpLoad %9 
                                        f32_3 %35 = OpVectorShuffle %34 %34 0 1 2 
                                          f32 %36 = OpDot %33 %35 
                                 Private f32* %39 = OpAccessChain %9 %37 
                                                      OpStore %39 %36 
                                 Private f32* %40 = OpAccessChain %9 %37 
                                          f32 %41 = OpLoad %40 
                                          f32 %42 = OpExtInst %1 31 %41 
                                 Private f32* %43 = OpAccessChain %9 %37 
                                                      OpStore %43 %42 
                                        f32_3 %46 = OpLoad vs_TEXCOORD2 
                                        f32_3 %47 = OpFNegate %46 
                               Uniform f32_3* %50 = OpAccessChain %21 %48 
                                        f32_3 %51 = OpLoad %50 
                                        f32_3 %52 = OpFAdd %47 %51 
                                                      OpStore %45 %52 
                                 Uniform f32* %57 = OpAccessChain %21 %54 %48 %55 
                                          f32 %58 = OpLoad %57 
                                 Private f32* %59 = OpAccessChain %53 %37 
                                                      OpStore %59 %58 
                                 Uniform f32* %61 = OpAccessChain %21 %54 %60 %55 
                                          f32 %62 = OpLoad %61 
                                 Private f32* %64 = OpAccessChain %53 %63 
                                                      OpStore %64 %62 
                                 Uniform f32* %66 = OpAccessChain %21 %54 %65 %55 
                                          f32 %67 = OpLoad %66 
                                 Private f32* %68 = OpAccessChain %53 %55 
                                                      OpStore %68 %67 
                                        f32_3 %69 = OpLoad %45 
                                        f32_3 %70 = OpLoad %53 
                                          f32 %71 = OpDot %69 %70 
                                 Private f32* %72 = OpAccessChain %45 %37 
                                                      OpStore %72 %71 
                                 Private f32* %73 = OpAccessChain %45 %37 
                                          f32 %74 = OpLoad %73 
                                          f32 %75 = OpFNegate %74 
                                 Private f32* %76 = OpAccessChain %9 %37 
                                          f32 %77 = OpLoad %76 
                                          f32 %78 = OpFAdd %75 %77 
                                 Private f32* %79 = OpAccessChain %9 %37 
                                                      OpStore %79 %78 
                                 Uniform f32* %81 = OpAccessChain %21 %23 %80 
                                          f32 %82 = OpLoad %81 
                                 Private f32* %83 = OpAccessChain %9 %37 
                                          f32 %84 = OpLoad %83 
                                          f32 %85 = OpFMul %82 %84 
                                 Private f32* %86 = OpAccessChain %45 %37 
                                          f32 %87 = OpLoad %86 
                                          f32 %88 = OpFAdd %85 %87 
                                 Private f32* %89 = OpAccessChain %9 %37 
                                                      OpStore %89 %88 
                                 Private f32* %90 = OpAccessChain %9 %37 
                                          f32 %91 = OpLoad %90 
                                 Uniform f32* %93 = OpAccessChain %21 %92 %55 
                                          f32 %94 = OpLoad %93 
                                          f32 %95 = OpFMul %91 %94 
                                 Uniform f32* %96 = OpAccessChain %21 %92 %80 
                                          f32 %97 = OpLoad %96 
                                          f32 %98 = OpFAdd %95 %97 
                                 Private f32* %99 = OpAccessChain %9 %37 
                                                      OpStore %99 %98 
                                Private f32* %100 = OpAccessChain %9 %37 
                                         f32 %101 = OpLoad %100 
                                         f32 %104 = OpExtInst %1 43 %101 %102 %103 
                                Private f32* %105 = OpAccessChain %9 %37 
                                                      OpStore %105 %104 
                                       f32_3 %106 = OpLoad vs_TEXCOORD2 
                                       f32_3 %107 = OpVectorShuffle %106 %106 1 1 1 
                              Uniform f32_4* %109 = OpAccessChain %21 %108 %60 
                                       f32_4 %110 = OpLoad %109 
                                       f32_3 %111 = OpVectorShuffle %110 %110 0 1 2 
                                       f32_3 %112 = OpFMul %107 %111 
                                                      OpStore %45 %112 
                              Uniform f32_4* %113 = OpAccessChain %21 %108 %48 
                                       f32_4 %114 = OpLoad %113 
                                       f32_3 %115 = OpVectorShuffle %114 %114 0 1 2 
                                       f32_3 %116 = OpLoad vs_TEXCOORD2 
                                       f32_3 %117 = OpVectorShuffle %116 %116 0 0 0 
                                       f32_3 %118 = OpFMul %115 %117 
                                       f32_3 %119 = OpLoad %45 
                                       f32_3 %120 = OpFAdd %118 %119 
                                                      OpStore %45 %120 
                              Uniform f32_4* %121 = OpAccessChain %21 %108 %65 
                                       f32_4 %122 = OpLoad %121 
                                       f32_3 %123 = OpVectorShuffle %122 %122 0 1 2 
                                       f32_3 %124 = OpLoad vs_TEXCOORD2 
                                       f32_3 %125 = OpVectorShuffle %124 %124 2 2 2 
                                       f32_3 %126 = OpFMul %123 %125 
                                       f32_3 %127 = OpLoad %45 
                                       f32_3 %128 = OpFAdd %126 %127 
                                                      OpStore %45 %128 
                                       f32_3 %129 = OpLoad %45 
                              Uniform f32_4* %131 = OpAccessChain %21 %108 %130 
                                       f32_4 %132 = OpLoad %131 
                                       f32_3 %133 = OpVectorShuffle %132 %132 0 1 2 
                                       f32_3 %134 = OpFAdd %129 %133 
                                                      OpStore %45 %134 
                                       f32_3 %138 = OpLoad %45 
                                       f32_2 %139 = OpVectorShuffle %138 %138 0 1 
                                Private f32* %140 = OpAccessChain %45 %55 
                                         f32 %141 = OpLoad %140 
                                         f32 %142 = OpCompositeExtract %139 0 
                                         f32 %143 = OpCompositeExtract %139 1 
                                       f32_3 %144 = OpCompositeConstruct %142 %143 %141 
                                                      OpStore %136 %144 
                         read_only Texture2D %148 = OpLoad %147 
                                     sampler %152 = OpLoad %151 
                  read_only Texture2DSampled %155 = OpSampledImage %148 %152 
                                       f32_3 %156 = OpLoad %136 
                                         f32 %157 = OpCompositeExtract %156 2 
                                         f32 %158 = OpImageSampleDrefExplicitLod %155 %156 %157 Lod %6 
                                Private f32* %159 = OpAccessChain %45 %37 
                                                      OpStore %159 %158 
                                Uniform f32* %161 = OpAccessChain %21 %92 %37 
                                         f32 %162 = OpLoad %161 
                                         f32 %163 = OpFNegate %162 
                                         f32 %164 = OpFAdd %163 %103 
                                Private f32* %165 = OpAccessChain %160 %37 
                                                      OpStore %165 %164 
                                Private f32* %166 = OpAccessChain %45 %37 
                                         f32 %167 = OpLoad %166 
                                Private f32* %168 = OpAccessChain %160 %37 
                                         f32 %169 = OpLoad %168 
                                         f32 %170 = OpFMul %167 %169 
                                Uniform f32* %171 = OpAccessChain %21 %92 %37 
                                         f32 %172 = OpLoad %171 
                                         f32 %173 = OpFAdd %170 %172 
                                Private f32* %174 = OpAccessChain %160 %37 
                                                      OpStore %174 %173 
                                Private f32* %176 = OpAccessChain %160 %37 
                                         f32 %177 = OpLoad %176 
                                         f32 %178 = OpFNegate %177 
                                         f32 %179 = OpFAdd %178 %103 
                                Private f32* %180 = OpAccessChain %175 %37 
                                                      OpStore %180 %179 
                                Private f32* %181 = OpAccessChain %9 %37 
                                         f32 %182 = OpLoad %181 
                                Private f32* %183 = OpAccessChain %175 %37 
                                         f32 %184 = OpLoad %183 
                                         f32 %185 = OpFMul %182 %184 
                                Private f32* %186 = OpAccessChain %160 %37 
                                         f32 %187 = OpLoad %186 
                                         f32 %188 = OpFAdd %185 %187 
                                Private f32* %189 = OpAccessChain %160 %37 
                                                      OpStore %189 %188 
                                       f32_3 %191 = OpLoad vs_TEXCOORD1 
                                       f32_3 %192 = OpLoad vs_TEXCOORD1 
                                         f32 %193 = OpDot %191 %192 
                                Private f32* %194 = OpAccessChain %175 %37 
                                                      OpStore %194 %193 
                                Private f32* %195 = OpAccessChain %175 %37 
                                         f32 %196 = OpLoad %195 
                                         f32 %197 = OpExtInst %1 32 %196 
                                Private f32* %198 = OpAccessChain %175 %37 
                                                      OpStore %198 %197 
                                       f32_3 %199 = OpLoad %175 
                                       f32_3 %200 = OpVectorShuffle %199 %199 0 0 0 
                                       f32_3 %201 = OpLoad vs_TEXCOORD1 
                                       f32_3 %202 = OpFMul %200 %201 
                                                      OpStore %175 %202 
                                       f32_3 %203 = OpLoad %175 
                              Uniform f32_4* %204 = OpAccessChain %21 %60 
                                       f32_4 %205 = OpLoad %204 
                                       f32_3 %206 = OpVectorShuffle %205 %205 0 1 2 
                                         f32 %207 = OpDot %203 %206 
                                Private f32* %208 = OpAccessChain %175 %37 
                                                      OpStore %208 %207 
                                Private f32* %209 = OpAccessChain %175 %37 
                                         f32 %210 = OpLoad %209 
                                         f32 %211 = OpExtInst %1 40 %210 %102 
                                Private f32* %212 = OpAccessChain %175 %37 
                                                      OpStore %212 %211 
                                Uniform f32* %215 = OpAccessChain %21 %214 
                                         f32 %216 = OpLoad %215 
                                         f32 %217 = OpFNegate %216 
                                         f32 %219 = OpFMul %217 %218 
                                Uniform f32* %221 = OpAccessChain %21 %220 
                                         f32 %222 = OpLoad %221 
                                         f32 %223 = OpFAdd %219 %222 
                                                      OpStore %213 %223 
                                         f32 %224 = OpLoad %213 
                                         f32 %225 = OpFNegate %224 
                                Private f32* %226 = OpAccessChain %175 %37 
                                         f32 %227 = OpLoad %226 
                                         f32 %228 = OpFAdd %225 %227 
                                Private f32* %229 = OpAccessChain %175 %37 
                                                      OpStore %229 %228 
                                Uniform f32* %231 = OpAccessChain %21 %214 
                                         f32 %232 = OpLoad %231 
                                         f32 %233 = OpFMul %232 %218 
                                Uniform f32* %234 = OpAccessChain %21 %220 
                                         f32 %235 = OpLoad %234 
                                         f32 %236 = OpFAdd %233 %235 
                                                      OpStore %230 %236 
                                         f32 %237 = OpLoad %213 
                                         f32 %238 = OpFNegate %237 
                                         f32 %239 = OpLoad %230 
                                         f32 %240 = OpFAdd %238 %239 
                                                      OpStore %213 %240 
                                         f32 %241 = OpLoad %213 
                                         f32 %242 = OpFDiv %103 %241 
                                                      OpStore %213 %242 
                                         f32 %243 = OpLoad %213 
                                Private f32* %244 = OpAccessChain %175 %37 
                                         f32 %245 = OpLoad %244 
                                         f32 %246 = OpFMul %243 %245 
                                Private f32* %247 = OpAccessChain %175 %37 
                                                      OpStore %247 %246 
                                Private f32* %248 = OpAccessChain %175 %37 
                                         f32 %249 = OpLoad %248 
                                         f32 %250 = OpExtInst %1 43 %249 %102 %103 
                                Private f32* %251 = OpAccessChain %175 %37 
                                                      OpStore %251 %250 
                                Private f32* %252 = OpAccessChain %175 %37 
                                         f32 %253 = OpLoad %252 
                                         f32 %255 = OpFMul %253 %254 
                                         f32 %257 = OpFAdd %255 %256 
                                                      OpStore %213 %257 
                                Private f32* %258 = OpAccessChain %175 %37 
                                         f32 %259 = OpLoad %258 
                                Private f32* %260 = OpAccessChain %175 %37 
                                         f32 %261 = OpLoad %260 
                                         f32 %262 = OpFMul %259 %261 
                                Private f32* %263 = OpAccessChain %175 %37 
                                                      OpStore %263 %262 
                                Private f32* %264 = OpAccessChain %175 %37 
                                         f32 %265 = OpLoad %264 
                                         f32 %266 = OpLoad %213 
                                         f32 %267 = OpFMul %265 %266 
                                Private f32* %268 = OpAccessChain %175 %37 
                                                      OpStore %268 %267 
                                Private f32* %269 = OpAccessChain %160 %37 
                                         f32 %270 = OpLoad %269 
                                Private f32* %271 = OpAccessChain %175 %37 
                                         f32 %272 = OpLoad %271 
                                         f32 %273 = OpFMul %270 %272 
                                Private f32* %274 = OpAccessChain %160 %37 
                                                      OpStore %274 %273 
                              Uniform f32_4* %276 = OpAccessChain %21 %275 
                                       f32_4 %277 = OpLoad %276 
                                       f32_3 %278 = OpVectorShuffle %277 %277 0 1 2 
                                       f32_3 %279 = OpFNegate %278 
                              Uniform f32_4* %281 = OpAccessChain %21 %280 
                                       f32_4 %282 = OpLoad %281 
                                       f32_3 %283 = OpVectorShuffle %282 %282 0 1 2 
                                       f32_3 %284 = OpFAdd %279 %283 
                                                      OpStore %175 %284 
                              Uniform f32_4* %285 = OpAccessChain %21 %280 
                                       f32_4 %286 = OpLoad %285 
                                       f32_3 %287 = OpVectorShuffle %286 %286 3 3 3 
                                       f32_3 %288 = OpLoad %175 
                                       f32_3 %289 = OpFMul %287 %288 
                              Uniform f32_4* %290 = OpAccessChain %21 %275 
                                       f32_4 %291 = OpLoad %290 
                                       f32_3 %292 = OpVectorShuffle %291 %291 0 1 2 
                                       f32_3 %293 = OpFAdd %289 %292 
                                                      OpStore %175 %293 
                                       f32_3 %295 = OpLoad %175 
                                       f32_3 %296 = OpFNegate %295 
                              Uniform f32_4* %297 = OpAccessChain %21 %275 
                                       f32_4 %298 = OpLoad %297 
                                       f32_3 %299 = OpVectorShuffle %298 %298 0 1 2 
                                       f32_3 %300 = OpFAdd %296 %299 
                                                      OpStore %294 %300 
                                       f32_3 %301 = OpLoad %160 
                                       f32_3 %302 = OpVectorShuffle %301 %301 0 0 0 
                                       f32_3 %303 = OpLoad %294 
                                       f32_3 %304 = OpFMul %302 %303 
                                       f32_3 %305 = OpLoad %175 
                                       f32_3 %306 = OpFAdd %304 %305 
                                                      OpStore %160 %306 
                                       f32_3 %307 = OpLoad vs_TEXCOORD1 
                                       f32_4 %308 = OpLoad %9 
                                       f32_4 %309 = OpVectorShuffle %308 %307 4 5 6 3 
                                                      OpStore %9 %309 
                                Private f32* %310 = OpAccessChain %9 %80 
                                                      OpStore %310 %103 
                              Uniform f32_4* %311 = OpAccessChain %21 %65 
                                       f32_4 %312 = OpLoad %311 
                                       f32_4 %313 = OpLoad %9 
                                         f32 %314 = OpDot %312 %313 
                                Private f32* %315 = OpAccessChain %294 %37 
                                                      OpStore %315 %314 
                              Uniform f32_4* %316 = OpAccessChain %21 %130 
                                       f32_4 %317 = OpLoad %316 
                                       f32_4 %318 = OpLoad %9 
                                         f32 %319 = OpDot %317 %318 
                                Private f32* %320 = OpAccessChain %294 %63 
                                                      OpStore %320 %319 
                              Uniform f32_4* %322 = OpAccessChain %21 %321 
                                       f32_4 %323 = OpLoad %322 
                                       f32_4 %324 = OpLoad %9 
                                         f32 %325 = OpDot %323 %324 
                                Private f32* %326 = OpAccessChain %294 %55 
                                                      OpStore %326 %325 
                                       f32_3 %327 = OpLoad %294 
                                       f32_3 %329 = OpLoad vs_TEXCOORD3 
                                       f32_3 %330 = OpFAdd %327 %329 
                                                      OpStore %294 %330 
                                       f32_3 %331 = OpLoad %294 
                                       f32_3 %333 = OpExtInst %1 40 %331 %332 
                                                      OpStore %294 %333 
                                       f32_3 %334 = OpLoad %294 
                                       f32_3 %335 = OpExtInst %1 30 %334 
                                       f32_4 %336 = OpLoad %9 
                                       f32_4 %337 = OpVectorShuffle %336 %335 4 5 6 3 
                                                      OpStore %9 %337 
                                       f32_4 %338 = OpLoad %9 
                                       f32_3 %339 = OpVectorShuffle %338 %338 0 1 2 
                                       f32_3 %342 = OpFMul %339 %341 
                                       f32_4 %343 = OpLoad %9 
                                       f32_4 %344 = OpVectorShuffle %343 %342 4 5 6 3 
                                                      OpStore %9 %344 
                                       f32_4 %345 = OpLoad %9 
                                       f32_3 %346 = OpVectorShuffle %345 %345 0 1 2 
                                       f32_3 %347 = OpExtInst %1 29 %346 
                                       f32_4 %348 = OpLoad %9 
                                       f32_4 %349 = OpVectorShuffle %348 %347 4 5 6 3 
                                                      OpStore %9 %349 
                                       f32_4 %350 = OpLoad %9 
                                       f32_3 %351 = OpVectorShuffle %350 %350 0 1 2 
                                       f32_3 %354 = OpFMul %351 %353 
                                       f32_3 %357 = OpFAdd %354 %356 
                                       f32_4 %358 = OpLoad %9 
                                       f32_4 %359 = OpVectorShuffle %358 %357 4 5 6 3 
                                                      OpStore %9 %359 
                                       f32_4 %360 = OpLoad %9 
                                       f32_3 %361 = OpVectorShuffle %360 %360 0 1 2 
                                       f32_3 %362 = OpExtInst %1 40 %361 %332 
                                       f32_4 %363 = OpLoad %9 
                                       f32_4 %364 = OpVectorShuffle %363 %362 4 5 6 3 
                                                      OpStore %9 %364 
                         read_only Texture2D %367 = OpLoad %366 
                                     sampler %369 = OpLoad %368 
                  read_only Texture2DSampled %371 = OpSampledImage %367 %369 
                                       f32_2 %374 = OpLoad vs_TEXCOORD0 
                                       f32_4 %375 = OpImageSampleImplicitLod %371 %374 
                                                      OpStore %365 %375 
                                       f32_4 %376 = OpLoad %365 
                                       f32_3 %377 = OpVectorShuffle %376 %376 0 1 2 
                              Uniform f32_4* %379 = OpAccessChain %21 %378 
                                       f32_4 %380 = OpLoad %379 
                                       f32_3 %381 = OpVectorShuffle %380 %380 0 1 2 
                                       f32_3 %382 = OpFMul %377 %381 
                                                      OpStore %294 %382 
                                Private f32* %385 = OpAccessChain %365 %80 
                                         f32 %386 = OpLoad %385 
                                Uniform f32* %387 = OpAccessChain %21 %378 %80 
                                         f32 %388 = OpLoad %387 
                                         f32 %389 = OpFMul %386 %388 
                                 Output f32* %391 = OpAccessChain %384 %80 
                                                      OpStore %391 %389 
                                       f32_4 %393 = OpLoad %9 
                                       f32_3 %394 = OpVectorShuffle %393 %393 0 1 2 
                                       f32_3 %395 = OpLoad %294 
                                       f32_3 %396 = OpFMul %394 %395 
                                                      OpStore %392 %396 
                                       f32_3 %397 = OpLoad %294 
                              Uniform f32_4* %399 = OpAccessChain %21 %398 
                                       f32_4 %400 = OpLoad %399 
                                       f32_3 %401 = OpVectorShuffle %400 %400 0 1 2 
                                       f32_3 %402 = OpFMul %397 %401 
                                                      OpStore %294 %402 
                                       f32_3 %403 = OpLoad %294 
                                       f32_3 %404 = OpLoad %160 
                                       f32_3 %405 = OpFMul %403 %404 
                                       f32_3 %406 = OpLoad %392 
                                       f32_3 %407 = OpFAdd %405 %406 
                                       f32_4 %408 = OpLoad %384 
                                       f32_4 %409 = OpVectorShuffle %408 %407 4 5 6 3 
                                                      OpStore %384 %409 
                                                      OpReturn
                                                      OpFunctionEnd
"
}
SubProgram "vulkan hw_tier01 " {
Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "SHADOWS_SCREEN" "VERTEXLIGHT_ON" }
"; SPIR-V
; Version: 1.0
; Generator: Khronos Glslang Reference Front End; 6
; Bound: 369
; Schema: 0
                                                      OpCapability Shader 
                                               %1 = OpExtInstImport "GLSL.std.450" 
                                                      OpMemoryModel Logical GLSL450 
                                                      OpEntryPoint Vertex %4 "main" %11 %90 %100 %116 %120 %159 %162 %353 %361 %362 
                                                      OpName vs_TEXCOORD0 "vs_TEXCOORD0" 
                                                      OpName vs_TEXCOORD1 "vs_TEXCOORD1" 
                                                      OpName vs_TEXCOORD2 "vs_TEXCOORD2" 
                                                      OpName vs_TEXCOORD3 "vs_TEXCOORD3" 
                                                      OpName vs_TEXCOORD5 "vs_TEXCOORD5" 
                                                      OpName vs_TEXCOORD6 "vs_TEXCOORD6" 
                                                      OpDecorate %11 Location 11 
                                                      OpDecorate %16 ArrayStride 16 
                                                      OpDecorate %18 ArrayStride 18 
                                                      OpDecorate %19 ArrayStride 19 
                                                      OpDecorate %20 ArrayStride 20 
                                                      OpMemberDecorate %21 0 Offset 21 
                                                      OpMemberDecorate %21 1 Offset 21 
                                                      OpMemberDecorate %21 2 Offset 21 
                                                      OpMemberDecorate %21 3 RelaxedPrecision 
                                                      OpMemberDecorate %21 3 Offset 21 
                                                      OpMemberDecorate %21 4 RelaxedPrecision 
                                                      OpMemberDecorate %21 4 Offset 21 
                                                      OpMemberDecorate %21 5 RelaxedPrecision 
                                                      OpMemberDecorate %21 5 Offset 21 
                                                      OpMemberDecorate %21 6 RelaxedPrecision 
                                                      OpMemberDecorate %21 6 Offset 21 
                                                      OpMemberDecorate %21 7 RelaxedPrecision 
                                                      OpMemberDecorate %21 7 Offset 21 
                                                      OpMemberDecorate %21 8 RelaxedPrecision 
                                                      OpMemberDecorate %21 8 Offset 21 
                                                      OpMemberDecorate %21 9 Offset 21 
                                                      OpMemberDecorate %21 10 Offset 21 
                                                      OpMemberDecorate %21 11 Offset 21 
                                                      OpMemberDecorate %21 12 Offset 21 
                                                      OpDecorate %21 Block 
                                                      OpDecorate %23 DescriptorSet 23 
                                                      OpDecorate %23 Binding 23 
                                                      OpMemberDecorate %88 0 BuiltIn 88 
                                                      OpMemberDecorate %88 1 BuiltIn 88 
                                                      OpMemberDecorate %88 2 BuiltIn 88 
                                                      OpDecorate %88 Block 
                                                      OpDecorate %100 Location 100 
                                                      OpDecorate vs_TEXCOORD0 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD0 Location 116 
                                                      OpDecorate %120 Location 120 
                                                      OpDecorate vs_TEXCOORD1 Location 159 
                                                      OpDecorate vs_TEXCOORD2 Location 162 
                                                      OpDecorate %222 RelaxedPrecision 
                                                      OpDecorate %243 RelaxedPrecision 
                                                      OpDecorate %244 RelaxedPrecision 
                                                      OpDecorate %249 RelaxedPrecision 
                                                      OpDecorate %250 RelaxedPrecision 
                                                      OpDecorate %260 RelaxedPrecision 
                                                      OpDecorate %261 RelaxedPrecision 
                                                      OpDecorate %271 RelaxedPrecision 
                                                      OpDecorate %272 RelaxedPrecision 
                                                      OpDecorate %302 RelaxedPrecision 
                                                      OpDecorate %315 RelaxedPrecision 
                                                      OpDecorate %316 RelaxedPrecision 
                                                      OpDecorate %319 RelaxedPrecision 
                                                      OpDecorate %325 RelaxedPrecision 
                                                      OpDecorate %328 RelaxedPrecision 
                                                      OpDecorate %329 RelaxedPrecision 
                                                      OpDecorate %330 RelaxedPrecision 
                                                      OpDecorate %334 RelaxedPrecision 
                                                      OpDecorate %335 RelaxedPrecision 
                                                      OpDecorate %336 RelaxedPrecision 
                                                      OpDecorate %340 RelaxedPrecision 
                                                      OpDecorate %341 RelaxedPrecision 
                                                      OpDecorate %342 RelaxedPrecision 
                                                      OpDecorate %346 RelaxedPrecision 
                                                      OpDecorate %347 RelaxedPrecision 
                                                      OpDecorate %348 RelaxedPrecision 
                                                      OpDecorate %349 RelaxedPrecision 
                                                      OpDecorate %350 RelaxedPrecision 
                                                      OpDecorate %351 RelaxedPrecision 
                                                      OpDecorate %352 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD3 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD3 Location 353 
                                                      OpDecorate %359 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD5 Location 361 
                                                      OpDecorate vs_TEXCOORD6 Location 362 
                                               %2 = OpTypeVoid 
                                               %3 = OpTypeFunction %2 
                                               %6 = OpTypeFloat 32 
                                               %7 = OpTypeVector %6 4 
                                               %8 = OpTypePointer Private %7 
                                Private f32_4* %9 = OpVariable Private 
                                              %10 = OpTypePointer Input %7 
                                 Input f32_4* %11 = OpVariable Input 
                                              %14 = OpTypeInt 32 0 
                                          u32 %15 = OpConstant 8 
                                              %16 = OpTypeArray %7 %15 
                                          u32 %17 = OpConstant 4 
                                              %18 = OpTypeArray %7 %17 
                                              %19 = OpTypeArray %7 %17 
                                              %20 = OpTypeArray %7 %17 
                                              %21 = OpTypeStruct %7 %7 %7 %7 %16 %7 %7 %7 %7 %18 %19 %20 %7 
                                              %22 = OpTypePointer Uniform %21 
Uniform struct {f32_4; f32_4; f32_4; f32_4; f32_4[8]; f32_4; f32_4; f32_4; f32_4; f32_4[4]; f32_4[4]; f32_4[4]; f32_4;}* %23 = OpVariable Uniform 
                                              %24 = OpTypeInt 32 1 
                                          i32 %25 = OpConstant 9 
                                          i32 %26 = OpConstant 1 
                                              %27 = OpTypePointer Uniform %7 
                                          i32 %31 = OpConstant 0 
                                          i32 %39 = OpConstant 2 
                               Private f32_4* %47 = OpVariable Private 
                                          i32 %49 = OpConstant 3 
                                              %53 = OpTypeVector %6 3 
                               Private f32_4* %65 = OpVariable Private 
                                          i32 %68 = OpConstant 11 
                                          u32 %86 = OpConstant 1 
                                              %87 = OpTypeArray %6 %86 
                                              %88 = OpTypeStruct %7 %6 %87 
                                              %89 = OpTypePointer Output %88 
         Output struct {f32_4; f32; f32[1];}* %90 = OpVariable Output 
                                              %98 = OpTypePointer Output %7 
                                Input f32_4* %100 = OpVariable Input 
                                             %101 = OpTypeVector %6 2 
                                         i32 %104 = OpConstant 12 
                                             %115 = OpTypePointer Output %101 
                       Output f32_2* vs_TEXCOORD0 = OpVariable Output 
                                             %119 = OpTypePointer Input %53 
                                Input f32_3* %120 = OpVariable Input 
                                         i32 %122 = OpConstant 10 
                                         u32 %127 = OpConstant 0 
                                             %128 = OpTypePointer Private %6 
                                         u32 %141 = OpConstant 2 
                                Private f32* %143 = OpVariable Private 
                                             %158 = OpTypePointer Output %53 
                       Output f32_3* vs_TEXCOORD1 = OpVariable Output 
                       Output f32_3* vs_TEXCOORD2 = OpVariable Output 
                              Private f32_4* %171 = OpVariable Private 
                              Private f32_4* %184 = OpVariable Private 
                                         f32 %215 = OpConstant 3.674022E-40 
                                       f32_4 %216 = OpConstantComposite %215 %215 %215 %215 
                                         f32 %224 = OpConstant 3.674022E-40 
                                       f32_4 %225 = OpConstantComposite %224 %224 %224 %224 
                                         f32 %233 = OpConstant 3.674022E-40 
                                       f32_4 %234 = OpConstantComposite %233 %233 %233 %233 
                                         i32 %241 = OpConstant 4 
                                         f32 %283 = OpConstant 3.674022E-40 
                                       f32_3 %284 = OpConstantComposite %283 %283 %283 
                                         f32 %286 = OpConstant 3.674022E-40 
                                       f32_3 %287 = OpConstantComposite %286 %286 %286 
                                         f32 %296 = OpConstant 3.674022E-40 
                                       f32_3 %297 = OpConstantComposite %296 %296 %296 
                                             %301 = OpTypePointer Private %53 
                              Private f32_3* %302 = OpVariable Private 
                              Private f32_4* %319 = OpVariable Private 
                              Private f32_3* %325 = OpVariable Private 
                                         i32 %326 = OpConstant 5 
                                         i32 %332 = OpConstant 6 
                                         i32 %338 = OpConstant 7 
                                         i32 %344 = OpConstant 8 
                       Output f32_3* vs_TEXCOORD3 = OpVariable Output 
                       Output f32_4* vs_TEXCOORD5 = OpVariable Output 
                       Output f32_4* vs_TEXCOORD6 = OpVariable Output 
                                             %363 = OpTypePointer Output %6 
                                          void %4 = OpFunction None %3 
                                               %5 = OpLabel 
                                        f32_4 %12 = OpLoad %11 
                                        f32_4 %13 = OpVectorShuffle %12 %12 1 1 1 1 
                               Uniform f32_4* %28 = OpAccessChain %23 %25 %26 
                                        f32_4 %29 = OpLoad %28 
                                        f32_4 %30 = OpFMul %13 %29 
                                                      OpStore %9 %30 
                               Uniform f32_4* %32 = OpAccessChain %23 %25 %31 
                                        f32_4 %33 = OpLoad %32 
                                        f32_4 %34 = OpLoad %11 
                                        f32_4 %35 = OpVectorShuffle %34 %34 0 0 0 0 
                                        f32_4 %36 = OpFMul %33 %35 
                                        f32_4 %37 = OpLoad %9 
                                        f32_4 %38 = OpFAdd %36 %37 
                                                      OpStore %9 %38 
                               Uniform f32_4* %40 = OpAccessChain %23 %25 %39 
                                        f32_4 %41 = OpLoad %40 
                                        f32_4 %42 = OpLoad %11 
                                        f32_4 %43 = OpVectorShuffle %42 %42 2 2 2 2 
                                        f32_4 %44 = OpFMul %41 %43 
                                        f32_4 %45 = OpLoad %9 
                                        f32_4 %46 = OpFAdd %44 %45 
                                                      OpStore %9 %46 
                                        f32_4 %48 = OpLoad %9 
                               Uniform f32_4* %50 = OpAccessChain %23 %25 %49 
                                        f32_4 %51 = OpLoad %50 
                                        f32_4 %52 = OpFAdd %48 %51 
                                                      OpStore %47 %52 
                               Uniform f32_4* %54 = OpAccessChain %23 %25 %49 
                                        f32_4 %55 = OpLoad %54 
                                        f32_3 %56 = OpVectorShuffle %55 %55 0 1 2 
                                        f32_4 %57 = OpLoad %11 
                                        f32_3 %58 = OpVectorShuffle %57 %57 3 3 3 
                                        f32_3 %59 = OpFMul %56 %58 
                                        f32_4 %60 = OpLoad %9 
                                        f32_3 %61 = OpVectorShuffle %60 %60 0 1 2 
                                        f32_3 %62 = OpFAdd %59 %61 
                                        f32_4 %63 = OpLoad %9 
                                        f32_4 %64 = OpVectorShuffle %63 %62 4 5 6 3 
                                                      OpStore %9 %64 
                                        f32_4 %66 = OpLoad %47 
                                        f32_4 %67 = OpVectorShuffle %66 %66 1 1 1 1 
                               Uniform f32_4* %69 = OpAccessChain %23 %68 %26 
                                        f32_4 %70 = OpLoad %69 
                                        f32_4 %71 = OpFMul %67 %70 
                                                      OpStore %65 %71 
                               Uniform f32_4* %72 = OpAccessChain %23 %68 %31 
                                        f32_4 %73 = OpLoad %72 
                                        f32_4 %74 = OpLoad %47 
                                        f32_4 %75 = OpVectorShuffle %74 %74 0 0 0 0 
                                        f32_4 %76 = OpFMul %73 %75 
                                        f32_4 %77 = OpLoad %65 
                                        f32_4 %78 = OpFAdd %76 %77 
                                                      OpStore %65 %78 
                               Uniform f32_4* %79 = OpAccessChain %23 %68 %39 
                                        f32_4 %80 = OpLoad %79 
                                        f32_4 %81 = OpLoad %47 
                                        f32_4 %82 = OpVectorShuffle %81 %81 2 2 2 2 
                                        f32_4 %83 = OpFMul %80 %82 
                                        f32_4 %84 = OpLoad %65 
                                        f32_4 %85 = OpFAdd %83 %84 
                                                      OpStore %65 %85 
                               Uniform f32_4* %91 = OpAccessChain %23 %68 %49 
                                        f32_4 %92 = OpLoad %91 
                                        f32_4 %93 = OpLoad %47 
                                        f32_4 %94 = OpVectorShuffle %93 %93 3 3 3 3 
                                        f32_4 %95 = OpFMul %92 %94 
                                        f32_4 %96 = OpLoad %65 
                                        f32_4 %97 = OpFAdd %95 %96 
                                Output f32_4* %99 = OpAccessChain %90 %31 
                                                      OpStore %99 %97 
                                       f32_4 %102 = OpLoad %100 
                                       f32_2 %103 = OpVectorShuffle %102 %102 0 1 
                              Uniform f32_4* %105 = OpAccessChain %23 %104 
                                       f32_4 %106 = OpLoad %105 
                                       f32_2 %107 = OpVectorShuffle %106 %106 0 1 
                                       f32_2 %108 = OpFMul %103 %107 
                              Uniform f32_4* %109 = OpAccessChain %23 %104 
                                       f32_4 %110 = OpLoad %109 
                                       f32_2 %111 = OpVectorShuffle %110 %110 2 3 
                                       f32_2 %112 = OpFAdd %108 %111 
                                       f32_4 %113 = OpLoad %47 
                                       f32_4 %114 = OpVectorShuffle %113 %112 4 5 2 3 
                                                      OpStore %47 %114 
                                       f32_4 %117 = OpLoad %47 
                                       f32_2 %118 = OpVectorShuffle %117 %117 0 1 
                                                      OpStore vs_TEXCOORD0 %118 
                                       f32_3 %121 = OpLoad %120 
                              Uniform f32_4* %123 = OpAccessChain %23 %122 %31 
                                       f32_4 %124 = OpLoad %123 
                                       f32_3 %125 = OpVectorShuffle %124 %124 0 1 2 
                                         f32 %126 = OpDot %121 %125 
                                Private f32* %129 = OpAccessChain %47 %127 
                                                      OpStore %129 %126 
                                       f32_3 %130 = OpLoad %120 
                              Uniform f32_4* %131 = OpAccessChain %23 %122 %26 
                                       f32_4 %132 = OpLoad %131 
                                       f32_3 %133 = OpVectorShuffle %132 %132 0 1 2 
                                         f32 %134 = OpDot %130 %133 
                                Private f32* %135 = OpAccessChain %47 %86 
                                                      OpStore %135 %134 
                                       f32_3 %136 = OpLoad %120 
                              Uniform f32_4* %137 = OpAccessChain %23 %122 %39 
                                       f32_4 %138 = OpLoad %137 
                                       f32_3 %139 = OpVectorShuffle %138 %138 0 1 2 
                                         f32 %140 = OpDot %136 %139 
                                Private f32* %142 = OpAccessChain %47 %141 
                                                      OpStore %142 %140 
                                       f32_4 %144 = OpLoad %47 
                                       f32_3 %145 = OpVectorShuffle %144 %144 0 1 2 
                                       f32_4 %146 = OpLoad %47 
                                       f32_3 %147 = OpVectorShuffle %146 %146 0 1 2 
                                         f32 %148 = OpDot %145 %147 
                                                      OpStore %143 %148 
                                         f32 %149 = OpLoad %143 
                                         f32 %150 = OpExtInst %1 32 %149 
                                                      OpStore %143 %150 
                                         f32 %151 = OpLoad %143 
                                       f32_3 %152 = OpCompositeConstruct %151 %151 %151 
                                       f32_4 %153 = OpLoad %47 
                                       f32_3 %154 = OpVectorShuffle %153 %153 0 1 2 
                                       f32_3 %155 = OpFMul %152 %154 
                                       f32_4 %156 = OpLoad %47 
                                       f32_4 %157 = OpVectorShuffle %156 %155 4 5 6 3 
                                                      OpStore %47 %157 
                                       f32_4 %160 = OpLoad %47 
                                       f32_3 %161 = OpVectorShuffle %160 %160 0 1 2 
                                                      OpStore vs_TEXCOORD1 %161 
                                       f32_4 %163 = OpLoad %9 
                                       f32_3 %164 = OpVectorShuffle %163 %163 0 1 2 
                                                      OpStore vs_TEXCOORD2 %164 
                                       f32_4 %165 = OpLoad %9 
                                       f32_4 %166 = OpVectorShuffle %165 %165 0 0 0 0 
                                       f32_4 %167 = OpFNegate %166 
                              Uniform f32_4* %168 = OpAccessChain %23 %31 
                                       f32_4 %169 = OpLoad %168 
                                       f32_4 %170 = OpFAdd %167 %169 
                                                      OpStore %65 %170 
                                       f32_4 %172 = OpLoad %9 
                                       f32_4 %173 = OpVectorShuffle %172 %172 1 1 1 1 
                                       f32_4 %174 = OpFNegate %173 
                              Uniform f32_4* %175 = OpAccessChain %23 %26 
                                       f32_4 %176 = OpLoad %175 
                                       f32_4 %177 = OpFAdd %174 %176 
                                                      OpStore %171 %177 
                                       f32_4 %178 = OpLoad %9 
                                       f32_4 %179 = OpVectorShuffle %178 %178 2 2 2 2 
                                       f32_4 %180 = OpFNegate %179 
                              Uniform f32_4* %181 = OpAccessChain %23 %39 
                                       f32_4 %182 = OpLoad %181 
                                       f32_4 %183 = OpFAdd %180 %182 
                                                      OpStore %9 %183 
                                       f32_4 %185 = OpLoad %47 
                                       f32_4 %186 = OpVectorShuffle %185 %185 1 1 1 1 
                                       f32_4 %187 = OpLoad %171 
                                       f32_4 %188 = OpFMul %186 %187 
                                                      OpStore %184 %188 
                                       f32_4 %189 = OpLoad %171 
                                       f32_4 %190 = OpLoad %171 
                                       f32_4 %191 = OpFMul %189 %190 
                                                      OpStore %171 %191 
                                       f32_4 %192 = OpLoad %65 
                                       f32_4 %193 = OpLoad %65 
                                       f32_4 %194 = OpFMul %192 %193 
                                       f32_4 %195 = OpLoad %171 
                                       f32_4 %196 = OpFAdd %194 %195 
                                                      OpStore %171 %196 
                                       f32_4 %197 = OpLoad %65 
                                       f32_4 %198 = OpLoad %47 
                                       f32_4 %199 = OpVectorShuffle %198 %198 0 0 0 0 
                                       f32_4 %200 = OpFMul %197 %199 
                                       f32_4 %201 = OpLoad %184 
                                       f32_4 %202 = OpFAdd %200 %201 
                                                      OpStore %65 %202 
                                       f32_4 %203 = OpLoad %9 
                                       f32_4 %204 = OpLoad %47 
                                       f32_4 %205 = OpVectorShuffle %204 %204 2 2 2 2 
                                       f32_4 %206 = OpFMul %203 %205 
                                       f32_4 %207 = OpLoad %65 
                                       f32_4 %208 = OpFAdd %206 %207 
                                                      OpStore %65 %208 
                                       f32_4 %209 = OpLoad %9 
                                       f32_4 %210 = OpLoad %9 
                                       f32_4 %211 = OpFMul %209 %210 
                                       f32_4 %212 = OpLoad %171 
                                       f32_4 %213 = OpFAdd %211 %212 
                                                      OpStore %9 %213 
                                       f32_4 %214 = OpLoad %9 
                                       f32_4 %217 = OpExtInst %1 40 %214 %216 
                                                      OpStore %9 %217 
                                       f32_4 %218 = OpLoad %9 
                                       f32_4 %219 = OpExtInst %1 32 %218 
                                                      OpStore %171 %219 
                                       f32_4 %220 = OpLoad %9 
                              Uniform f32_4* %221 = OpAccessChain %23 %49 
                                       f32_4 %222 = OpLoad %221 
                                       f32_4 %223 = OpFMul %220 %222 
                                       f32_4 %226 = OpFAdd %223 %225 
                                                      OpStore %9 %226 
                                       f32_4 %227 = OpLoad %9 
                                       f32_4 %228 = OpFDiv %225 %227 
                                                      OpStore %9 %228 
                                       f32_4 %229 = OpLoad %65 
                                       f32_4 %230 = OpLoad %171 
                                       f32_4 %231 = OpFMul %229 %230 
                                                      OpStore %65 %231 
                                       f32_4 %232 = OpLoad %65 
                                       f32_4 %235 = OpExtInst %1 40 %232 %234 
                                                      OpStore %65 %235 
                                       f32_4 %236 = OpLoad %9 
                                       f32_4 %237 = OpLoad %65 
                                       f32_4 %238 = OpFMul %236 %237 
                                                      OpStore %9 %238 
                                       f32_4 %239 = OpLoad %9 
                                       f32_3 %240 = OpVectorShuffle %239 %239 1 1 1 
                              Uniform f32_4* %242 = OpAccessChain %23 %241 %26 
                                       f32_4 %243 = OpLoad %242 
                                       f32_3 %244 = OpVectorShuffle %243 %243 0 1 2 
                                       f32_3 %245 = OpFMul %240 %244 
                                       f32_4 %246 = OpLoad %65 
                                       f32_4 %247 = OpVectorShuffle %246 %245 4 5 6 3 
                                                      OpStore %65 %247 
                              Uniform f32_4* %248 = OpAccessChain %23 %241 %31 
                                       f32_4 %249 = OpLoad %248 
                                       f32_3 %250 = OpVectorShuffle %249 %249 0 1 2 
                                       f32_4 %251 = OpLoad %9 
                                       f32_3 %252 = OpVectorShuffle %251 %251 0 0 0 
                                       f32_3 %253 = OpFMul %250 %252 
                                       f32_4 %254 = OpLoad %65 
                                       f32_3 %255 = OpVectorShuffle %254 %254 0 1 2 
                                       f32_3 %256 = OpFAdd %253 %255 
                                       f32_4 %257 = OpLoad %65 
                                       f32_4 %258 = OpVectorShuffle %257 %256 4 5 6 3 
                                                      OpStore %65 %258 
                              Uniform f32_4* %259 = OpAccessChain %23 %241 %39 
                                       f32_4 %260 = OpLoad %259 
                                       f32_3 %261 = OpVectorShuffle %260 %260 0 1 2 
                                       f32_4 %262 = OpLoad %9 
                                       f32_3 %263 = OpVectorShuffle %262 %262 2 2 2 
                                       f32_3 %264 = OpFMul %261 %263 
                                       f32_4 %265 = OpLoad %65 
                                       f32_3 %266 = OpVectorShuffle %265 %265 0 1 2 
                                       f32_3 %267 = OpFAdd %264 %266 
                                       f32_4 %268 = OpLoad %9 
                                       f32_4 %269 = OpVectorShuffle %268 %267 4 5 6 3 
                                                      OpStore %9 %269 
                              Uniform f32_4* %270 = OpAccessChain %23 %241 %49 
                                       f32_4 %271 = OpLoad %270 
                                       f32_3 %272 = OpVectorShuffle %271 %271 0 1 2 
                                       f32_4 %273 = OpLoad %9 
                                       f32_3 %274 = OpVectorShuffle %273 %273 3 3 3 
                                       f32_3 %275 = OpFMul %272 %274 
                                       f32_4 %276 = OpLoad %9 
                                       f32_3 %277 = OpVectorShuffle %276 %276 0 1 2 
                                       f32_3 %278 = OpFAdd %275 %277 
                                       f32_4 %279 = OpLoad %9 
                                       f32_4 %280 = OpVectorShuffle %279 %278 4 5 6 3 
                                                      OpStore %9 %280 
                                       f32_4 %281 = OpLoad %9 
                                       f32_3 %282 = OpVectorShuffle %281 %281 0 1 2 
                                       f32_3 %285 = OpFMul %282 %284 
                                       f32_3 %288 = OpFAdd %285 %287 
                                       f32_4 %289 = OpLoad %65 
                                       f32_4 %290 = OpVectorShuffle %289 %288 4 5 6 3 
                                                      OpStore %65 %290 
                                       f32_4 %291 = OpLoad %9 
                                       f32_3 %292 = OpVectorShuffle %291 %291 0 1 2 
                                       f32_4 %293 = OpLoad %65 
                                       f32_3 %294 = OpVectorShuffle %293 %293 0 1 2 
                                       f32_3 %295 = OpFMul %292 %294 
                                       f32_3 %298 = OpFAdd %295 %297 
                                       f32_4 %299 = OpLoad %65 
                                       f32_4 %300 = OpVectorShuffle %299 %298 4 5 6 3 
                                                      OpStore %65 %300 
                                Private f32* %303 = OpAccessChain %47 %86 
                                         f32 %304 = OpLoad %303 
                                Private f32* %305 = OpAccessChain %47 %86 
                                         f32 %306 = OpLoad %305 
                                         f32 %307 = OpFMul %304 %306 
                                Private f32* %308 = OpAccessChain %302 %127 
                                                      OpStore %308 %307 
                                Private f32* %309 = OpAccessChain %47 %127 
                                         f32 %310 = OpLoad %309 
                                Private f32* %311 = OpAccessChain %47 %127 
                                         f32 %312 = OpLoad %311 
                                         f32 %313 = OpFMul %310 %312 
                                Private f32* %314 = OpAccessChain %302 %127 
                                         f32 %315 = OpLoad %314 
                                         f32 %316 = OpFNegate %315 
                                         f32 %317 = OpFAdd %313 %316 
                                Private f32* %318 = OpAccessChain %302 %127 
                                                      OpStore %318 %317 
                                       f32_4 %320 = OpLoad %47 
                                       f32_4 %321 = OpVectorShuffle %320 %320 1 2 2 0 
                                       f32_4 %322 = OpLoad %47 
                                       f32_4 %323 = OpVectorShuffle %322 %322 0 1 2 2 
                                       f32_4 %324 = OpFMul %321 %323 
                                                      OpStore %319 %324 
                              Uniform f32_4* %327 = OpAccessChain %23 %326 
                                       f32_4 %328 = OpLoad %327 
                                       f32_4 %329 = OpLoad %319 
                                         f32 %330 = OpDot %328 %329 
                                Private f32* %331 = OpAccessChain %325 %127 
                                                      OpStore %331 %330 
                              Uniform f32_4* %333 = OpAccessChain %23 %332 
                                       f32_4 %334 = OpLoad %333 
                                       f32_4 %335 = OpLoad %319 
                                         f32 %336 = OpDot %334 %335 
                                Private f32* %337 = OpAccessChain %325 %86 
                                                      OpStore %337 %336 
                              Uniform f32_4* %339 = OpAccessChain %23 %338 
                                       f32_4 %340 = OpLoad %339 
                                       f32_4 %341 = OpLoad %319 
                                         f32 %342 = OpDot %340 %341 
                                Private f32* %343 = OpAccessChain %325 %141 
                                                      OpStore %343 %342 
                              Uniform f32_4* %345 = OpAccessChain %23 %344 
                                       f32_4 %346 = OpLoad %345 
                                       f32_3 %347 = OpVectorShuffle %346 %346 0 1 2 
                                       f32_3 %348 = OpLoad %302 
                                       f32_3 %349 = OpVectorShuffle %348 %348 0 0 0 
                                       f32_3 %350 = OpFMul %347 %349 
                                       f32_3 %351 = OpLoad %325 
                                       f32_3 %352 = OpFAdd %350 %351 
                                                      OpStore %302 %352 
                                       f32_4 %354 = OpLoad %9 
                                       f32_3 %355 = OpVectorShuffle %354 %354 0 1 2 
                                       f32_4 %356 = OpLoad %65 
                                       f32_3 %357 = OpVectorShuffle %356 %356 0 1 2 
                                       f32_3 %358 = OpFMul %355 %357 
                                       f32_3 %359 = OpLoad %302 
                                       f32_3 %360 = OpFAdd %358 %359 
                                                      OpStore vs_TEXCOORD3 %360 
                                                      OpStore vs_TEXCOORD5 %234 
                                                      OpStore vs_TEXCOORD6 %234 
                                 Output f32* %364 = OpAccessChain %90 %31 %86 
                                         f32 %365 = OpLoad %364 
                                         f32 %366 = OpFNegate %365 
                                 Output f32* %367 = OpAccessChain %90 %31 %86 
                                                      OpStore %367 %366 
                                                      OpReturn
                                                      OpFunctionEnd
; SPIR-V
; Version: 1.0
; Generator: Khronos Glslang Reference Front End; 6
; Bound: 411
; Schema: 0
                                                      OpCapability Shader 
                                               %1 = OpExtInstImport "GLSL.std.450" 
                                                      OpMemoryModel Logical GLSL450 
                                                      OpEntryPoint Fragment %4 "main" %12 %190 %328 %373 %384 
                                                      OpExecutionMode %4 OriginUpperLeft 
                                                      OpName vs_TEXCOORD2 "vs_TEXCOORD2" 
                                                      OpName vs_TEXCOORD1 "vs_TEXCOORD1" 
                                                      OpName vs_TEXCOORD3 "vs_TEXCOORD3" 
                                                      OpName vs_TEXCOORD0 "vs_TEXCOORD0" 
                                                      OpDecorate vs_TEXCOORD2 Location 12 
                                                      OpDecorate %16 ArrayStride 16 
                                                      OpDecorate %18 ArrayStride 18 
                                                      OpMemberDecorate %19 0 Offset 19 
                                                      OpMemberDecorate %19 1 RelaxedPrecision 
                                                      OpMemberDecorate %19 1 Offset 19 
                                                      OpMemberDecorate %19 2 RelaxedPrecision 
                                                      OpMemberDecorate %19 2 Offset 19 
                                                      OpMemberDecorate %19 3 RelaxedPrecision 
                                                      OpMemberDecorate %19 3 Offset 19 
                                                      OpMemberDecorate %19 4 RelaxedPrecision 
                                                      OpMemberDecorate %19 4 Offset 19 
                                                      OpMemberDecorate %19 5 Offset 19 
                                                      OpMemberDecorate %19 6 RelaxedPrecision 
                                                      OpMemberDecorate %19 6 Offset 19 
                                                      OpMemberDecorate %19 7 Offset 19 
                                                      OpMemberDecorate %19 8 Offset 19 
                                                      OpMemberDecorate %19 9 RelaxedPrecision 
                                                      OpMemberDecorate %19 9 Offset 19 
                                                      OpMemberDecorate %19 10 RelaxedPrecision 
                                                      OpMemberDecorate %19 10 Offset 19 
                                                      OpMemberDecorate %19 11 RelaxedPrecision 
                                                      OpMemberDecorate %19 11 Offset 19 
                                                      OpMemberDecorate %19 12 RelaxedPrecision 
                                                      OpMemberDecorate %19 12 Offset 19 
                                                      OpMemberDecorate %19 13 RelaxedPrecision 
                                                      OpMemberDecorate %19 13 Offset 19 
                                                      OpMemberDecorate %19 14 RelaxedPrecision 
                                                      OpMemberDecorate %19 14 Offset 19 
                                                      OpDecorate %19 Block 
                                                      OpDecorate %21 DescriptorSet 21 
                                                      OpDecorate %21 Binding 21 
                                                      OpDecorate %94 RelaxedPrecision 
                                                      OpDecorate %97 RelaxedPrecision 
                                                      OpDecorate %147 DescriptorSet 147 
                                                      OpDecorate %147 Binding 147 
                                                      OpDecorate %151 DescriptorSet 151 
                                                      OpDecorate %151 Binding 151 
                                                      OpDecorate %160 RelaxedPrecision 
                                                      OpDecorate %162 RelaxedPrecision 
                                                      OpDecorate %163 RelaxedPrecision 
                                                      OpDecorate %164 RelaxedPrecision 
                                                      OpDecorate %169 RelaxedPrecision 
                                                      OpDecorate %172 RelaxedPrecision 
                                                      OpDecorate %175 RelaxedPrecision 
                                                      OpDecorate %177 RelaxedPrecision 
                                                      OpDecorate %178 RelaxedPrecision 
                                                      OpDecorate %179 RelaxedPrecision 
                                                      OpDecorate %184 RelaxedPrecision 
                                                      OpDecorate %187 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD1 Location 190 
                                                      OpDecorate %196 RelaxedPrecision 
                                                      OpDecorate %197 RelaxedPrecision 
                                                      OpDecorate %199 RelaxedPrecision 
                                                      OpDecorate %200 RelaxedPrecision 
                                                      OpDecorate %203 RelaxedPrecision 
                                                      OpDecorate %205 RelaxedPrecision 
                                                      OpDecorate %206 RelaxedPrecision 
                                                      OpDecorate %207 RelaxedPrecision 
                                                      OpDecorate %210 RelaxedPrecision 
                                                      OpDecorate %211 RelaxedPrecision 
                                                      OpDecorate %213 RelaxedPrecision 
                                                      OpDecorate %216 RelaxedPrecision 
                                                      OpDecorate %217 RelaxedPrecision 
                                                      OpDecorate %219 RelaxedPrecision 
                                                      OpDecorate %222 RelaxedPrecision 
                                                      OpDecorate %223 RelaxedPrecision 
                                                      OpDecorate %224 RelaxedPrecision 
                                                      OpDecorate %225 RelaxedPrecision 
                                                      OpDecorate %227 RelaxedPrecision 
                                                      OpDecorate %228 RelaxedPrecision 
                                                      OpDecorate %230 RelaxedPrecision 
                                                      OpDecorate %232 RelaxedPrecision 
                                                      OpDecorate %233 RelaxedPrecision 
                                                      OpDecorate %235 RelaxedPrecision 
                                                      OpDecorate %236 RelaxedPrecision 
                                                      OpDecorate %237 RelaxedPrecision 
                                                      OpDecorate %238 RelaxedPrecision 
                                                      OpDecorate %239 RelaxedPrecision 
                                                      OpDecorate %240 RelaxedPrecision 
                                                      OpDecorate %241 RelaxedPrecision 
                                                      OpDecorate %242 RelaxedPrecision 
                                                      OpDecorate %243 RelaxedPrecision 
                                                      OpDecorate %245 RelaxedPrecision 
                                                      OpDecorate %246 RelaxedPrecision 
                                                      OpDecorate %249 RelaxedPrecision 
                                                      OpDecorate %250 RelaxedPrecision 
                                                      OpDecorate %253 RelaxedPrecision 
                                                      OpDecorate %255 RelaxedPrecision 
                                                      OpDecorate %257 RelaxedPrecision 
                                                      OpDecorate %259 RelaxedPrecision 
                                                      OpDecorate %261 RelaxedPrecision 
                                                      OpDecorate %262 RelaxedPrecision 
                                                      OpDecorate %265 RelaxedPrecision 
                                                      OpDecorate %266 RelaxedPrecision 
                                                      OpDecorate %267 RelaxedPrecision 
                                                      OpDecorate %270 RelaxedPrecision 
                                                      OpDecorate %272 RelaxedPrecision 
                                                      OpDecorate %273 RelaxedPrecision 
                                                      OpDecorate %277 RelaxedPrecision 
                                                      OpDecorate %278 RelaxedPrecision 
                                                      OpDecorate %279 RelaxedPrecision 
                                                      OpDecorate %282 RelaxedPrecision 
                                                      OpDecorate %283 RelaxedPrecision 
                                                      OpDecorate %284 RelaxedPrecision 
                                                      OpDecorate %286 RelaxedPrecision 
                                                      OpDecorate %287 RelaxedPrecision 
                                                      OpDecorate %288 RelaxedPrecision 
                                                      OpDecorate %289 RelaxedPrecision 
                                                      OpDecorate %291 RelaxedPrecision 
                                                      OpDecorate %292 RelaxedPrecision 
                                                      OpDecorate %293 RelaxedPrecision 
                                                      OpDecorate %294 RelaxedPrecision 
                                                      OpDecorate %295 RelaxedPrecision 
                                                      OpDecorate %296 RelaxedPrecision 
                                                      OpDecorate %298 RelaxedPrecision 
                                                      OpDecorate %299 RelaxedPrecision 
                                                      OpDecorate %300 RelaxedPrecision 
                                                      OpDecorate %301 RelaxedPrecision 
                                                      OpDecorate %302 RelaxedPrecision 
                                                      OpDecorate %303 RelaxedPrecision 
                                                      OpDecorate %304 RelaxedPrecision 
                                                      OpDecorate %305 RelaxedPrecision 
                                                      OpDecorate %306 RelaxedPrecision 
                                                      OpDecorate %312 RelaxedPrecision 
                                                      OpDecorate %317 RelaxedPrecision 
                                                      OpDecorate %323 RelaxedPrecision 
                                                      OpDecorate %327 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD3 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD3 Location 328 
                                                      OpDecorate %329 RelaxedPrecision 
                                                      OpDecorate %330 RelaxedPrecision 
                                                      OpDecorate %331 RelaxedPrecision 
                                                      OpDecorate %333 RelaxedPrecision 
                                                      OpDecorate %334 RelaxedPrecision 
                                                      OpDecorate %335 RelaxedPrecision 
                                                      OpDecorate %365 RelaxedPrecision 
                                                      OpDecorate %366 RelaxedPrecision 
                                                      OpDecorate %366 DescriptorSet 366 
                                                      OpDecorate %366 Binding 366 
                                                      OpDecorate %367 RelaxedPrecision 
                                                      OpDecorate %368 RelaxedPrecision 
                                                      OpDecorate %368 DescriptorSet 368 
                                                      OpDecorate %368 Binding 368 
                                                      OpDecorate %369 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD0 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD0 Location 373 
                                                      OpDecorate %374 RelaxedPrecision 
                                                      OpDecorate %375 RelaxedPrecision 
                                                      OpDecorate %376 RelaxedPrecision 
                                                      OpDecorate %377 RelaxedPrecision 
                                                      OpDecorate %380 RelaxedPrecision 
                                                      OpDecorate %381 RelaxedPrecision 
                                                      OpDecorate %382 RelaxedPrecision 
                                                      OpDecorate %384 RelaxedPrecision 
                                                      OpDecorate %384 Location 384 
                                                      OpDecorate %386 RelaxedPrecision 
                                                      OpDecorate %388 RelaxedPrecision 
                                                      OpDecorate %389 RelaxedPrecision 
                                                      OpDecorate %392 RelaxedPrecision 
                                                      OpDecorate %395 RelaxedPrecision 
                                                      OpDecorate %397 RelaxedPrecision 
                                                      OpDecorate %400 RelaxedPrecision 
                                                      OpDecorate %401 RelaxedPrecision 
                                                      OpDecorate %402 RelaxedPrecision 
                                                      OpDecorate %403 RelaxedPrecision 
                                                      OpDecorate %404 RelaxedPrecision 
                                                      OpDecorate %405 RelaxedPrecision 
                                                      OpDecorate %406 RelaxedPrecision 
                                                      OpDecorate %407 RelaxedPrecision 
                                               %2 = OpTypeVoid 
                                               %3 = OpTypeFunction %2 
                                               %6 = OpTypeFloat 32 
                                               %7 = OpTypeVector %6 4 
                                               %8 = OpTypePointer Private %7 
                                Private f32_4* %9 = OpVariable Private 
                                              %10 = OpTypeVector %6 3 
                                              %11 = OpTypePointer Input %10 
                        Input f32_3* vs_TEXCOORD2 = OpVariable Input 
                                              %14 = OpTypeInt 32 0 
                                          u32 %15 = OpConstant 16 
                                              %16 = OpTypeArray %7 %15 
                                          u32 %17 = OpConstant 4 
                                              %18 = OpTypeArray %7 %17 
                                              %19 = OpTypeStruct %10 %7 %7 %7 %7 %16 %7 %7 %18 %7 %7 %7 %7 %6 %6 
                                              %20 = OpTypePointer Uniform %19 
Uniform struct {f32_3; f32_4; f32_4; f32_4; f32_4; f32_4[16]; f32_4; f32_4; f32_4[4]; f32_4; f32_4; f32_4; f32_4; f32; f32;}* %21 = OpVariable Uniform 
                                              %22 = OpTypeInt 32 1 
                                          i32 %23 = OpConstant 7 
                                              %24 = OpTypePointer Uniform %7 
                                          u32 %37 = OpConstant 0 
                                              %38 = OpTypePointer Private %6 
                                              %44 = OpTypePointer Private %10 
                               Private f32_3* %45 = OpVariable Private 
                                          i32 %48 = OpConstant 0 
                                              %49 = OpTypePointer Uniform %10 
                               Private f32_3* %53 = OpVariable Private 
                                          i32 %54 = OpConstant 8 
                                          u32 %55 = OpConstant 2 
                                              %56 = OpTypePointer Uniform %6 
                                          i32 %60 = OpConstant 1 
                                          u32 %63 = OpConstant 1 
                                          i32 %65 = OpConstant 2 
                                          u32 %80 = OpConstant 3 
                                          i32 %92 = OpConstant 6 
                                         f32 %102 = OpConstant 3.674022E-40 
                                         f32 %103 = OpConstant 3.674022E-40 
                                         i32 %108 = OpConstant 5 
                                         i32 %130 = OpConstant 3 
                                             %135 = OpTypePointer Function %10 
                                             %137 = OpTypeVector %6 2 
                                             %145 = OpTypeImage %6 Dim2D 0 0 0 1 Unknown 
                                             %146 = OpTypePointer UniformConstant %145 
        UniformConstant read_only Texture2D* %147 = OpVariable UniformConstant 
                                             %149 = OpTypeSampler 
                                             %150 = OpTypePointer UniformConstant %149 
                    UniformConstant sampler* %151 = OpVariable UniformConstant 
                                             %153 = OpTypeImage %6 Dim2D 1 0 0 1 Unknown 
                                             %154 = OpTypeSampledImage %153 
                              Private f32_3* %160 = OpVariable Private 
                              Private f32_3* %175 = OpVariable Private 
                        Input f32_3* vs_TEXCOORD1 = OpVariable Input 
                                Private f32* %213 = OpVariable Private 
                                         i32 %214 = OpConstant 14 
                                         f32 %218 = OpConstant 3.674022E-40 
                                         i32 %220 = OpConstant 13 
                                Private f32* %230 = OpVariable Private 
                                         f32 %254 = OpConstant 3.674022E-40 
                                         f32 %256 = OpConstant 3.674022E-40 
                                         i32 %275 = OpConstant 11 
                                         i32 %280 = OpConstant 12 
                              Private f32_3* %294 = OpVariable Private 
                                         i32 %321 = OpConstant 4 
                        Input f32_3* vs_TEXCOORD3 = OpVariable Input 
                                       f32_3 %332 = OpConstantComposite %102 %102 %102 
                                         f32 %340 = OpConstant 3.674022E-40 
                                       f32_3 %341 = OpConstantComposite %340 %340 %340 
                                         f32 %352 = OpConstant 3.674022E-40 
                                       f32_3 %353 = OpConstantComposite %352 %352 %352 
                                         f32 %355 = OpConstant 3.674022E-40 
                                       f32_3 %356 = OpConstantComposite %355 %355 %355 
                              Private f32_4* %365 = OpVariable Private 
        UniformConstant read_only Texture2D* %366 = OpVariable UniformConstant 
                    UniformConstant sampler* %368 = OpVariable UniformConstant 
                                             %370 = OpTypeSampledImage %145 
                                             %372 = OpTypePointer Input %137 
                        Input f32_2* vs_TEXCOORD0 = OpVariable Input 
                                         i32 %378 = OpConstant 10 
                                             %383 = OpTypePointer Output %7 
                               Output f32_4* %384 = OpVariable Output 
                                             %390 = OpTypePointer Output %6 
                              Private f32_3* %392 = OpVariable Private 
                                         i32 %398 = OpConstant 9 
                                          void %4 = OpFunction None %3 
                                               %5 = OpLabel 
                             Function f32_3* %136 = OpVariable Function 
                                        f32_3 %13 = OpLoad vs_TEXCOORD2 
                               Uniform f32_4* %25 = OpAccessChain %21 %23 
                                        f32_4 %26 = OpLoad %25 
                                        f32_3 %27 = OpVectorShuffle %26 %26 0 1 2 
                                        f32_3 %28 = OpFNegate %27 
                                        f32_3 %29 = OpFAdd %13 %28 
                                        f32_4 %30 = OpLoad %9 
                                        f32_4 %31 = OpVectorShuffle %30 %29 4 5 6 3 
                                                      OpStore %9 %31 
                                        f32_4 %32 = OpLoad %9 
                                        f32_3 %33 = OpVectorShuffle %32 %32 0 1 2 
                                        f32_4 %34 = OpLoad %9 
                                        f32_3 %35 = OpVectorShuffle %34 %34 0 1 2 
                                          f32 %36 = OpDot %33 %35 
                                 Private f32* %39 = OpAccessChain %9 %37 
                                                      OpStore %39 %36 
                                 Private f32* %40 = OpAccessChain %9 %37 
                                          f32 %41 = OpLoad %40 
                                          f32 %42 = OpExtInst %1 31 %41 
                                 Private f32* %43 = OpAccessChain %9 %37 
                                                      OpStore %43 %42 
                                        f32_3 %46 = OpLoad vs_TEXCOORD2 
                                        f32_3 %47 = OpFNegate %46 
                               Uniform f32_3* %50 = OpAccessChain %21 %48 
                                        f32_3 %51 = OpLoad %50 
                                        f32_3 %52 = OpFAdd %47 %51 
                                                      OpStore %45 %52 
                                 Uniform f32* %57 = OpAccessChain %21 %54 %48 %55 
                                          f32 %58 = OpLoad %57 
                                 Private f32* %59 = OpAccessChain %53 %37 
                                                      OpStore %59 %58 
                                 Uniform f32* %61 = OpAccessChain %21 %54 %60 %55 
                                          f32 %62 = OpLoad %61 
                                 Private f32* %64 = OpAccessChain %53 %63 
                                                      OpStore %64 %62 
                                 Uniform f32* %66 = OpAccessChain %21 %54 %65 %55 
                                          f32 %67 = OpLoad %66 
                                 Private f32* %68 = OpAccessChain %53 %55 
                                                      OpStore %68 %67 
                                        f32_3 %69 = OpLoad %45 
                                        f32_3 %70 = OpLoad %53 
                                          f32 %71 = OpDot %69 %70 
                                 Private f32* %72 = OpAccessChain %45 %37 
                                                      OpStore %72 %71 
                                 Private f32* %73 = OpAccessChain %45 %37 
                                          f32 %74 = OpLoad %73 
                                          f32 %75 = OpFNegate %74 
                                 Private f32* %76 = OpAccessChain %9 %37 
                                          f32 %77 = OpLoad %76 
                                          f32 %78 = OpFAdd %75 %77 
                                 Private f32* %79 = OpAccessChain %9 %37 
                                                      OpStore %79 %78 
                                 Uniform f32* %81 = OpAccessChain %21 %23 %80 
                                          f32 %82 = OpLoad %81 
                                 Private f32* %83 = OpAccessChain %9 %37 
                                          f32 %84 = OpLoad %83 
                                          f32 %85 = OpFMul %82 %84 
                                 Private f32* %86 = OpAccessChain %45 %37 
                                          f32 %87 = OpLoad %86 
                                          f32 %88 = OpFAdd %85 %87 
                                 Private f32* %89 = OpAccessChain %9 %37 
                                                      OpStore %89 %88 
                                 Private f32* %90 = OpAccessChain %9 %37 
                                          f32 %91 = OpLoad %90 
                                 Uniform f32* %93 = OpAccessChain %21 %92 %55 
                                          f32 %94 = OpLoad %93 
                                          f32 %95 = OpFMul %91 %94 
                                 Uniform f32* %96 = OpAccessChain %21 %92 %80 
                                          f32 %97 = OpLoad %96 
                                          f32 %98 = OpFAdd %95 %97 
                                 Private f32* %99 = OpAccessChain %9 %37 
                                                      OpStore %99 %98 
                                Private f32* %100 = OpAccessChain %9 %37 
                                         f32 %101 = OpLoad %100 
                                         f32 %104 = OpExtInst %1 43 %101 %102 %103 
                                Private f32* %105 = OpAccessChain %9 %37 
                                                      OpStore %105 %104 
                                       f32_3 %106 = OpLoad vs_TEXCOORD2 
                                       f32_3 %107 = OpVectorShuffle %106 %106 1 1 1 
                              Uniform f32_4* %109 = OpAccessChain %21 %108 %60 
                                       f32_4 %110 = OpLoad %109 
                                       f32_3 %111 = OpVectorShuffle %110 %110 0 1 2 
                                       f32_3 %112 = OpFMul %107 %111 
                                                      OpStore %45 %112 
                              Uniform f32_4* %113 = OpAccessChain %21 %108 %48 
                                       f32_4 %114 = OpLoad %113 
                                       f32_3 %115 = OpVectorShuffle %114 %114 0 1 2 
                                       f32_3 %116 = OpLoad vs_TEXCOORD2 
                                       f32_3 %117 = OpVectorShuffle %116 %116 0 0 0 
                                       f32_3 %118 = OpFMul %115 %117 
                                       f32_3 %119 = OpLoad %45 
                                       f32_3 %120 = OpFAdd %118 %119 
                                                      OpStore %45 %120 
                              Uniform f32_4* %121 = OpAccessChain %21 %108 %65 
                                       f32_4 %122 = OpLoad %121 
                                       f32_3 %123 = OpVectorShuffle %122 %122 0 1 2 
                                       f32_3 %124 = OpLoad vs_TEXCOORD2 
                                       f32_3 %125 = OpVectorShuffle %124 %124 2 2 2 
                                       f32_3 %126 = OpFMul %123 %125 
                                       f32_3 %127 = OpLoad %45 
                                       f32_3 %128 = OpFAdd %126 %127 
                                                      OpStore %45 %128 
                                       f32_3 %129 = OpLoad %45 
                              Uniform f32_4* %131 = OpAccessChain %21 %108 %130 
                                       f32_4 %132 = OpLoad %131 
                                       f32_3 %133 = OpVectorShuffle %132 %132 0 1 2 
                                       f32_3 %134 = OpFAdd %129 %133 
                                                      OpStore %45 %134 
                                       f32_3 %138 = OpLoad %45 
                                       f32_2 %139 = OpVectorShuffle %138 %138 0 1 
                                Private f32* %140 = OpAccessChain %45 %55 
                                         f32 %141 = OpLoad %140 
                                         f32 %142 = OpCompositeExtract %139 0 
                                         f32 %143 = OpCompositeExtract %139 1 
                                       f32_3 %144 = OpCompositeConstruct %142 %143 %141 
                                                      OpStore %136 %144 
                         read_only Texture2D %148 = OpLoad %147 
                                     sampler %152 = OpLoad %151 
                  read_only Texture2DSampled %155 = OpSampledImage %148 %152 
                                       f32_3 %156 = OpLoad %136 
                                         f32 %157 = OpCompositeExtract %156 2 
                                         f32 %158 = OpImageSampleDrefExplicitLod %155 %156 %157 Lod %6 
                                Private f32* %159 = OpAccessChain %45 %37 
                                                      OpStore %159 %158 
                                Uniform f32* %161 = OpAccessChain %21 %92 %37 
                                         f32 %162 = OpLoad %161 
                                         f32 %163 = OpFNegate %162 
                                         f32 %164 = OpFAdd %163 %103 
                                Private f32* %165 = OpAccessChain %160 %37 
                                                      OpStore %165 %164 
                                Private f32* %166 = OpAccessChain %45 %37 
                                         f32 %167 = OpLoad %166 
                                Private f32* %168 = OpAccessChain %160 %37 
                                         f32 %169 = OpLoad %168 
                                         f32 %170 = OpFMul %167 %169 
                                Uniform f32* %171 = OpAccessChain %21 %92 %37 
                                         f32 %172 = OpLoad %171 
                                         f32 %173 = OpFAdd %170 %172 
                                Private f32* %174 = OpAccessChain %160 %37 
                                                      OpStore %174 %173 
                                Private f32* %176 = OpAccessChain %160 %37 
                                         f32 %177 = OpLoad %176 
                                         f32 %178 = OpFNegate %177 
                                         f32 %179 = OpFAdd %178 %103 
                                Private f32* %180 = OpAccessChain %175 %37 
                                                      OpStore %180 %179 
                                Private f32* %181 = OpAccessChain %9 %37 
                                         f32 %182 = OpLoad %181 
                                Private f32* %183 = OpAccessChain %175 %37 
                                         f32 %184 = OpLoad %183 
                                         f32 %185 = OpFMul %182 %184 
                                Private f32* %186 = OpAccessChain %160 %37 
                                         f32 %187 = OpLoad %186 
                                         f32 %188 = OpFAdd %185 %187 
                                Private f32* %189 = OpAccessChain %160 %37 
                                                      OpStore %189 %188 
                                       f32_3 %191 = OpLoad vs_TEXCOORD1 
                                       f32_3 %192 = OpLoad vs_TEXCOORD1 
                                         f32 %193 = OpDot %191 %192 
                                Private f32* %194 = OpAccessChain %175 %37 
                                                      OpStore %194 %193 
                                Private f32* %195 = OpAccessChain %175 %37 
                                         f32 %196 = OpLoad %195 
                                         f32 %197 = OpExtInst %1 32 %196 
                                Private f32* %198 = OpAccessChain %175 %37 
                                                      OpStore %198 %197 
                                       f32_3 %199 = OpLoad %175 
                                       f32_3 %200 = OpVectorShuffle %199 %199 0 0 0 
                                       f32_3 %201 = OpLoad vs_TEXCOORD1 
                                       f32_3 %202 = OpFMul %200 %201 
                                                      OpStore %175 %202 
                                       f32_3 %203 = OpLoad %175 
                              Uniform f32_4* %204 = OpAccessChain %21 %60 
                                       f32_4 %205 = OpLoad %204 
                                       f32_3 %206 = OpVectorShuffle %205 %205 0 1 2 
                                         f32 %207 = OpDot %203 %206 
                                Private f32* %208 = OpAccessChain %175 %37 
                                                      OpStore %208 %207 
                                Private f32* %209 = OpAccessChain %175 %37 
                                         f32 %210 = OpLoad %209 
                                         f32 %211 = OpExtInst %1 40 %210 %102 
                                Private f32* %212 = OpAccessChain %175 %37 
                                                      OpStore %212 %211 
                                Uniform f32* %215 = OpAccessChain %21 %214 
                                         f32 %216 = OpLoad %215 
                                         f32 %217 = OpFNegate %216 
                                         f32 %219 = OpFMul %217 %218 
                                Uniform f32* %221 = OpAccessChain %21 %220 
                                         f32 %222 = OpLoad %221 
                                         f32 %223 = OpFAdd %219 %222 
                                                      OpStore %213 %223 
                                         f32 %224 = OpLoad %213 
                                         f32 %225 = OpFNegate %224 
                                Private f32* %226 = OpAccessChain %175 %37 
                                         f32 %227 = OpLoad %226 
                                         f32 %228 = OpFAdd %225 %227 
                                Private f32* %229 = OpAccessChain %175 %37 
                                                      OpStore %229 %228 
                                Uniform f32* %231 = OpAccessChain %21 %214 
                                         f32 %232 = OpLoad %231 
                                         f32 %233 = OpFMul %232 %218 
                                Uniform f32* %234 = OpAccessChain %21 %220 
                                         f32 %235 = OpLoad %234 
                                         f32 %236 = OpFAdd %233 %235 
                                                      OpStore %230 %236 
                                         f32 %237 = OpLoad %213 
                                         f32 %238 = OpFNegate %237 
                                         f32 %239 = OpLoad %230 
                                         f32 %240 = OpFAdd %238 %239 
                                                      OpStore %213 %240 
                                         f32 %241 = OpLoad %213 
                                         f32 %242 = OpFDiv %103 %241 
                                                      OpStore %213 %242 
                                         f32 %243 = OpLoad %213 
                                Private f32* %244 = OpAccessChain %175 %37 
                                         f32 %245 = OpLoad %244 
                                         f32 %246 = OpFMul %243 %245 
                                Private f32* %247 = OpAccessChain %175 %37 
                                                      OpStore %247 %246 
                                Private f32* %248 = OpAccessChain %175 %37 
                                         f32 %249 = OpLoad %248 
                                         f32 %250 = OpExtInst %1 43 %249 %102 %103 
                                Private f32* %251 = OpAccessChain %175 %37 
                                                      OpStore %251 %250 
                                Private f32* %252 = OpAccessChain %175 %37 
                                         f32 %253 = OpLoad %252 
                                         f32 %255 = OpFMul %253 %254 
                                         f32 %257 = OpFAdd %255 %256 
                                                      OpStore %213 %257 
                                Private f32* %258 = OpAccessChain %175 %37 
                                         f32 %259 = OpLoad %258 
                                Private f32* %260 = OpAccessChain %175 %37 
                                         f32 %261 = OpLoad %260 
                                         f32 %262 = OpFMul %259 %261 
                                Private f32* %263 = OpAccessChain %175 %37 
                                                      OpStore %263 %262 
                                Private f32* %264 = OpAccessChain %175 %37 
                                         f32 %265 = OpLoad %264 
                                         f32 %266 = OpLoad %213 
                                         f32 %267 = OpFMul %265 %266 
                                Private f32* %268 = OpAccessChain %175 %37 
                                                      OpStore %268 %267 
                                Private f32* %269 = OpAccessChain %160 %37 
                                         f32 %270 = OpLoad %269 
                                Private f32* %271 = OpAccessChain %175 %37 
                                         f32 %272 = OpLoad %271 
                                         f32 %273 = OpFMul %270 %272 
                                Private f32* %274 = OpAccessChain %160 %37 
                                                      OpStore %274 %273 
                              Uniform f32_4* %276 = OpAccessChain %21 %275 
                                       f32_4 %277 = OpLoad %276 
                                       f32_3 %278 = OpVectorShuffle %277 %277 0 1 2 
                                       f32_3 %279 = OpFNegate %278 
                              Uniform f32_4* %281 = OpAccessChain %21 %280 
                                       f32_4 %282 = OpLoad %281 
                                       f32_3 %283 = OpVectorShuffle %282 %282 0 1 2 
                                       f32_3 %284 = OpFAdd %279 %283 
                                                      OpStore %175 %284 
                              Uniform f32_4* %285 = OpAccessChain %21 %280 
                                       f32_4 %286 = OpLoad %285 
                                       f32_3 %287 = OpVectorShuffle %286 %286 3 3 3 
                                       f32_3 %288 = OpLoad %175 
                                       f32_3 %289 = OpFMul %287 %288 
                              Uniform f32_4* %290 = OpAccessChain %21 %275 
                                       f32_4 %291 = OpLoad %290 
                                       f32_3 %292 = OpVectorShuffle %291 %291 0 1 2 
                                       f32_3 %293 = OpFAdd %289 %292 
                                                      OpStore %175 %293 
                                       f32_3 %295 = OpLoad %175 
                                       f32_3 %296 = OpFNegate %295 
                              Uniform f32_4* %297 = OpAccessChain %21 %275 
                                       f32_4 %298 = OpLoad %297 
                                       f32_3 %299 = OpVectorShuffle %298 %298 0 1 2 
                                       f32_3 %300 = OpFAdd %296 %299 
                                                      OpStore %294 %300 
                                       f32_3 %301 = OpLoad %160 
                                       f32_3 %302 = OpVectorShuffle %301 %301 0 0 0 
                                       f32_3 %303 = OpLoad %294 
                                       f32_3 %304 = OpFMul %302 %303 
                                       f32_3 %305 = OpLoad %175 
                                       f32_3 %306 = OpFAdd %304 %305 
                                                      OpStore %160 %306 
                                       f32_3 %307 = OpLoad vs_TEXCOORD1 
                                       f32_4 %308 = OpLoad %9 
                                       f32_4 %309 = OpVectorShuffle %308 %307 4 5 6 3 
                                                      OpStore %9 %309 
                                Private f32* %310 = OpAccessChain %9 %80 
                                                      OpStore %310 %103 
                              Uniform f32_4* %311 = OpAccessChain %21 %65 
                                       f32_4 %312 = OpLoad %311 
                                       f32_4 %313 = OpLoad %9 
                                         f32 %314 = OpDot %312 %313 
                                Private f32* %315 = OpAccessChain %294 %37 
                                                      OpStore %315 %314 
                              Uniform f32_4* %316 = OpAccessChain %21 %130 
                                       f32_4 %317 = OpLoad %316 
                                       f32_4 %318 = OpLoad %9 
                                         f32 %319 = OpDot %317 %318 
                                Private f32* %320 = OpAccessChain %294 %63 
                                                      OpStore %320 %319 
                              Uniform f32_4* %322 = OpAccessChain %21 %321 
                                       f32_4 %323 = OpLoad %322 
                                       f32_4 %324 = OpLoad %9 
                                         f32 %325 = OpDot %323 %324 
                                Private f32* %326 = OpAccessChain %294 %55 
                                                      OpStore %326 %325 
                                       f32_3 %327 = OpLoad %294 
                                       f32_3 %329 = OpLoad vs_TEXCOORD3 
                                       f32_3 %330 = OpFAdd %327 %329 
                                                      OpStore %294 %330 
                                       f32_3 %331 = OpLoad %294 
                                       f32_3 %333 = OpExtInst %1 40 %331 %332 
                                                      OpStore %294 %333 
                                       f32_3 %334 = OpLoad %294 
                                       f32_3 %335 = OpExtInst %1 30 %334 
                                       f32_4 %336 = OpLoad %9 
                                       f32_4 %337 = OpVectorShuffle %336 %335 4 5 6 3 
                                                      OpStore %9 %337 
                                       f32_4 %338 = OpLoad %9 
                                       f32_3 %339 = OpVectorShuffle %338 %338 0 1 2 
                                       f32_3 %342 = OpFMul %339 %341 
                                       f32_4 %343 = OpLoad %9 
                                       f32_4 %344 = OpVectorShuffle %343 %342 4 5 6 3 
                                                      OpStore %9 %344 
                                       f32_4 %345 = OpLoad %9 
                                       f32_3 %346 = OpVectorShuffle %345 %345 0 1 2 
                                       f32_3 %347 = OpExtInst %1 29 %346 
                                       f32_4 %348 = OpLoad %9 
                                       f32_4 %349 = OpVectorShuffle %348 %347 4 5 6 3 
                                                      OpStore %9 %349 
                                       f32_4 %350 = OpLoad %9 
                                       f32_3 %351 = OpVectorShuffle %350 %350 0 1 2 
                                       f32_3 %354 = OpFMul %351 %353 
                                       f32_3 %357 = OpFAdd %354 %356 
                                       f32_4 %358 = OpLoad %9 
                                       f32_4 %359 = OpVectorShuffle %358 %357 4 5 6 3 
                                                      OpStore %9 %359 
                                       f32_4 %360 = OpLoad %9 
                                       f32_3 %361 = OpVectorShuffle %360 %360 0 1 2 
                                       f32_3 %362 = OpExtInst %1 40 %361 %332 
                                       f32_4 %363 = OpLoad %9 
                                       f32_4 %364 = OpVectorShuffle %363 %362 4 5 6 3 
                                                      OpStore %9 %364 
                         read_only Texture2D %367 = OpLoad %366 
                                     sampler %369 = OpLoad %368 
                  read_only Texture2DSampled %371 = OpSampledImage %367 %369 
                                       f32_2 %374 = OpLoad vs_TEXCOORD0 
                                       f32_4 %375 = OpImageSampleImplicitLod %371 %374 
                                                      OpStore %365 %375 
                                       f32_4 %376 = OpLoad %365 
                                       f32_3 %377 = OpVectorShuffle %376 %376 0 1 2 
                              Uniform f32_4* %379 = OpAccessChain %21 %378 
                                       f32_4 %380 = OpLoad %379 
                                       f32_3 %381 = OpVectorShuffle %380 %380 0 1 2 
                                       f32_3 %382 = OpFMul %377 %381 
                                                      OpStore %294 %382 
                                Private f32* %385 = OpAccessChain %365 %80 
                                         f32 %386 = OpLoad %385 
                                Uniform f32* %387 = OpAccessChain %21 %378 %80 
                                         f32 %388 = OpLoad %387 
                                         f32 %389 = OpFMul %386 %388 
                                 Output f32* %391 = OpAccessChain %384 %80 
                                                      OpStore %391 %389 
                                       f32_4 %393 = OpLoad %9 
                                       f32_3 %394 = OpVectorShuffle %393 %393 0 1 2 
                                       f32_3 %395 = OpLoad %294 
                                       f32_3 %396 = OpFMul %394 %395 
                                                      OpStore %392 %396 
                                       f32_3 %397 = OpLoad %294 
                              Uniform f32_4* %399 = OpAccessChain %21 %398 
                                       f32_4 %400 = OpLoad %399 
                                       f32_3 %401 = OpVectorShuffle %400 %400 0 1 2 
                                       f32_3 %402 = OpFMul %397 %401 
                                                      OpStore %294 %402 
                                       f32_3 %403 = OpLoad %294 
                                       f32_3 %404 = OpLoad %160 
                                       f32_3 %405 = OpFMul %403 %404 
                                       f32_3 %406 = OpLoad %392 
                                       f32_3 %407 = OpFAdd %405 %406 
                                       f32_4 %408 = OpLoad %384 
                                       f32_4 %409 = OpVectorShuffle %408 %407 4 5 6 3 
                                                      OpStore %384 %409 
                                                      OpReturn
                                                      OpFunctionEnd
"
}
SubProgram "vulkan hw_tier02 " {
Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "SHADOWS_SCREEN" "VERTEXLIGHT_ON" }
"; SPIR-V
; Version: 1.0
; Generator: Khronos Glslang Reference Front End; 6
; Bound: 369
; Schema: 0
                                                      OpCapability Shader 
                                               %1 = OpExtInstImport "GLSL.std.450" 
                                                      OpMemoryModel Logical GLSL450 
                                                      OpEntryPoint Vertex %4 "main" %11 %90 %100 %116 %120 %159 %162 %353 %361 %362 
                                                      OpName vs_TEXCOORD0 "vs_TEXCOORD0" 
                                                      OpName vs_TEXCOORD1 "vs_TEXCOORD1" 
                                                      OpName vs_TEXCOORD2 "vs_TEXCOORD2" 
                                                      OpName vs_TEXCOORD3 "vs_TEXCOORD3" 
                                                      OpName vs_TEXCOORD5 "vs_TEXCOORD5" 
                                                      OpName vs_TEXCOORD6 "vs_TEXCOORD6" 
                                                      OpDecorate %11 Location 11 
                                                      OpDecorate %16 ArrayStride 16 
                                                      OpDecorate %18 ArrayStride 18 
                                                      OpDecorate %19 ArrayStride 19 
                                                      OpDecorate %20 ArrayStride 20 
                                                      OpMemberDecorate %21 0 Offset 21 
                                                      OpMemberDecorate %21 1 Offset 21 
                                                      OpMemberDecorate %21 2 Offset 21 
                                                      OpMemberDecorate %21 3 RelaxedPrecision 
                                                      OpMemberDecorate %21 3 Offset 21 
                                                      OpMemberDecorate %21 4 RelaxedPrecision 
                                                      OpMemberDecorate %21 4 Offset 21 
                                                      OpMemberDecorate %21 5 RelaxedPrecision 
                                                      OpMemberDecorate %21 5 Offset 21 
                                                      OpMemberDecorate %21 6 RelaxedPrecision 
                                                      OpMemberDecorate %21 6 Offset 21 
                                                      OpMemberDecorate %21 7 RelaxedPrecision 
                                                      OpMemberDecorate %21 7 Offset 21 
                                                      OpMemberDecorate %21 8 RelaxedPrecision 
                                                      OpMemberDecorate %21 8 Offset 21 
                                                      OpMemberDecorate %21 9 Offset 21 
                                                      OpMemberDecorate %21 10 Offset 21 
                                                      OpMemberDecorate %21 11 Offset 21 
                                                      OpMemberDecorate %21 12 Offset 21 
                                                      OpDecorate %21 Block 
                                                      OpDecorate %23 DescriptorSet 23 
                                                      OpDecorate %23 Binding 23 
                                                      OpMemberDecorate %88 0 BuiltIn 88 
                                                      OpMemberDecorate %88 1 BuiltIn 88 
                                                      OpMemberDecorate %88 2 BuiltIn 88 
                                                      OpDecorate %88 Block 
                                                      OpDecorate %100 Location 100 
                                                      OpDecorate vs_TEXCOORD0 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD0 Location 116 
                                                      OpDecorate %120 Location 120 
                                                      OpDecorate vs_TEXCOORD1 Location 159 
                                                      OpDecorate vs_TEXCOORD2 Location 162 
                                                      OpDecorate %222 RelaxedPrecision 
                                                      OpDecorate %243 RelaxedPrecision 
                                                      OpDecorate %244 RelaxedPrecision 
                                                      OpDecorate %249 RelaxedPrecision 
                                                      OpDecorate %250 RelaxedPrecision 
                                                      OpDecorate %260 RelaxedPrecision 
                                                      OpDecorate %261 RelaxedPrecision 
                                                      OpDecorate %271 RelaxedPrecision 
                                                      OpDecorate %272 RelaxedPrecision 
                                                      OpDecorate %302 RelaxedPrecision 
                                                      OpDecorate %315 RelaxedPrecision 
                                                      OpDecorate %316 RelaxedPrecision 
                                                      OpDecorate %319 RelaxedPrecision 
                                                      OpDecorate %325 RelaxedPrecision 
                                                      OpDecorate %328 RelaxedPrecision 
                                                      OpDecorate %329 RelaxedPrecision 
                                                      OpDecorate %330 RelaxedPrecision 
                                                      OpDecorate %334 RelaxedPrecision 
                                                      OpDecorate %335 RelaxedPrecision 
                                                      OpDecorate %336 RelaxedPrecision 
                                                      OpDecorate %340 RelaxedPrecision 
                                                      OpDecorate %341 RelaxedPrecision 
                                                      OpDecorate %342 RelaxedPrecision 
                                                      OpDecorate %346 RelaxedPrecision 
                                                      OpDecorate %347 RelaxedPrecision 
                                                      OpDecorate %348 RelaxedPrecision 
                                                      OpDecorate %349 RelaxedPrecision 
                                                      OpDecorate %350 RelaxedPrecision 
                                                      OpDecorate %351 RelaxedPrecision 
                                                      OpDecorate %352 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD3 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD3 Location 353 
                                                      OpDecorate %359 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD5 Location 361 
                                                      OpDecorate vs_TEXCOORD6 Location 362 
                                               %2 = OpTypeVoid 
                                               %3 = OpTypeFunction %2 
                                               %6 = OpTypeFloat 32 
                                               %7 = OpTypeVector %6 4 
                                               %8 = OpTypePointer Private %7 
                                Private f32_4* %9 = OpVariable Private 
                                              %10 = OpTypePointer Input %7 
                                 Input f32_4* %11 = OpVariable Input 
                                              %14 = OpTypeInt 32 0 
                                          u32 %15 = OpConstant 8 
                                              %16 = OpTypeArray %7 %15 
                                          u32 %17 = OpConstant 4 
                                              %18 = OpTypeArray %7 %17 
                                              %19 = OpTypeArray %7 %17 
                                              %20 = OpTypeArray %7 %17 
                                              %21 = OpTypeStruct %7 %7 %7 %7 %16 %7 %7 %7 %7 %18 %19 %20 %7 
                                              %22 = OpTypePointer Uniform %21 
Uniform struct {f32_4; f32_4; f32_4; f32_4; f32_4[8]; f32_4; f32_4; f32_4; f32_4; f32_4[4]; f32_4[4]; f32_4[4]; f32_4;}* %23 = OpVariable Uniform 
                                              %24 = OpTypeInt 32 1 
                                          i32 %25 = OpConstant 9 
                                          i32 %26 = OpConstant 1 
                                              %27 = OpTypePointer Uniform %7 
                                          i32 %31 = OpConstant 0 
                                          i32 %39 = OpConstant 2 
                               Private f32_4* %47 = OpVariable Private 
                                          i32 %49 = OpConstant 3 
                                              %53 = OpTypeVector %6 3 
                               Private f32_4* %65 = OpVariable Private 
                                          i32 %68 = OpConstant 11 
                                          u32 %86 = OpConstant 1 
                                              %87 = OpTypeArray %6 %86 
                                              %88 = OpTypeStruct %7 %6 %87 
                                              %89 = OpTypePointer Output %88 
         Output struct {f32_4; f32; f32[1];}* %90 = OpVariable Output 
                                              %98 = OpTypePointer Output %7 
                                Input f32_4* %100 = OpVariable Input 
                                             %101 = OpTypeVector %6 2 
                                         i32 %104 = OpConstant 12 
                                             %115 = OpTypePointer Output %101 
                       Output f32_2* vs_TEXCOORD0 = OpVariable Output 
                                             %119 = OpTypePointer Input %53 
                                Input f32_3* %120 = OpVariable Input 
                                         i32 %122 = OpConstant 10 
                                         u32 %127 = OpConstant 0 
                                             %128 = OpTypePointer Private %6 
                                         u32 %141 = OpConstant 2 
                                Private f32* %143 = OpVariable Private 
                                             %158 = OpTypePointer Output %53 
                       Output f32_3* vs_TEXCOORD1 = OpVariable Output 
                       Output f32_3* vs_TEXCOORD2 = OpVariable Output 
                              Private f32_4* %171 = OpVariable Private 
                              Private f32_4* %184 = OpVariable Private 
                                         f32 %215 = OpConstant 3.674022E-40 
                                       f32_4 %216 = OpConstantComposite %215 %215 %215 %215 
                                         f32 %224 = OpConstant 3.674022E-40 
                                       f32_4 %225 = OpConstantComposite %224 %224 %224 %224 
                                         f32 %233 = OpConstant 3.674022E-40 
                                       f32_4 %234 = OpConstantComposite %233 %233 %233 %233 
                                         i32 %241 = OpConstant 4 
                                         f32 %283 = OpConstant 3.674022E-40 
                                       f32_3 %284 = OpConstantComposite %283 %283 %283 
                                         f32 %286 = OpConstant 3.674022E-40 
                                       f32_3 %287 = OpConstantComposite %286 %286 %286 
                                         f32 %296 = OpConstant 3.674022E-40 
                                       f32_3 %297 = OpConstantComposite %296 %296 %296 
                                             %301 = OpTypePointer Private %53 
                              Private f32_3* %302 = OpVariable Private 
                              Private f32_4* %319 = OpVariable Private 
                              Private f32_3* %325 = OpVariable Private 
                                         i32 %326 = OpConstant 5 
                                         i32 %332 = OpConstant 6 
                                         i32 %338 = OpConstant 7 
                                         i32 %344 = OpConstant 8 
                       Output f32_3* vs_TEXCOORD3 = OpVariable Output 
                       Output f32_4* vs_TEXCOORD5 = OpVariable Output 
                       Output f32_4* vs_TEXCOORD6 = OpVariable Output 
                                             %363 = OpTypePointer Output %6 
                                          void %4 = OpFunction None %3 
                                               %5 = OpLabel 
                                        f32_4 %12 = OpLoad %11 
                                        f32_4 %13 = OpVectorShuffle %12 %12 1 1 1 1 
                               Uniform f32_4* %28 = OpAccessChain %23 %25 %26 
                                        f32_4 %29 = OpLoad %28 
                                        f32_4 %30 = OpFMul %13 %29 
                                                      OpStore %9 %30 
                               Uniform f32_4* %32 = OpAccessChain %23 %25 %31 
                                        f32_4 %33 = OpLoad %32 
                                        f32_4 %34 = OpLoad %11 
                                        f32_4 %35 = OpVectorShuffle %34 %34 0 0 0 0 
                                        f32_4 %36 = OpFMul %33 %35 
                                        f32_4 %37 = OpLoad %9 
                                        f32_4 %38 = OpFAdd %36 %37 
                                                      OpStore %9 %38 
                               Uniform f32_4* %40 = OpAccessChain %23 %25 %39 
                                        f32_4 %41 = OpLoad %40 
                                        f32_4 %42 = OpLoad %11 
                                        f32_4 %43 = OpVectorShuffle %42 %42 2 2 2 2 
                                        f32_4 %44 = OpFMul %41 %43 
                                        f32_4 %45 = OpLoad %9 
                                        f32_4 %46 = OpFAdd %44 %45 
                                                      OpStore %9 %46 
                                        f32_4 %48 = OpLoad %9 
                               Uniform f32_4* %50 = OpAccessChain %23 %25 %49 
                                        f32_4 %51 = OpLoad %50 
                                        f32_4 %52 = OpFAdd %48 %51 
                                                      OpStore %47 %52 
                               Uniform f32_4* %54 = OpAccessChain %23 %25 %49 
                                        f32_4 %55 = OpLoad %54 
                                        f32_3 %56 = OpVectorShuffle %55 %55 0 1 2 
                                        f32_4 %57 = OpLoad %11 
                                        f32_3 %58 = OpVectorShuffle %57 %57 3 3 3 
                                        f32_3 %59 = OpFMul %56 %58 
                                        f32_4 %60 = OpLoad %9 
                                        f32_3 %61 = OpVectorShuffle %60 %60 0 1 2 
                                        f32_3 %62 = OpFAdd %59 %61 
                                        f32_4 %63 = OpLoad %9 
                                        f32_4 %64 = OpVectorShuffle %63 %62 4 5 6 3 
                                                      OpStore %9 %64 
                                        f32_4 %66 = OpLoad %47 
                                        f32_4 %67 = OpVectorShuffle %66 %66 1 1 1 1 
                               Uniform f32_4* %69 = OpAccessChain %23 %68 %26 
                                        f32_4 %70 = OpLoad %69 
                                        f32_4 %71 = OpFMul %67 %70 
                                                      OpStore %65 %71 
                               Uniform f32_4* %72 = OpAccessChain %23 %68 %31 
                                        f32_4 %73 = OpLoad %72 
                                        f32_4 %74 = OpLoad %47 
                                        f32_4 %75 = OpVectorShuffle %74 %74 0 0 0 0 
                                        f32_4 %76 = OpFMul %73 %75 
                                        f32_4 %77 = OpLoad %65 
                                        f32_4 %78 = OpFAdd %76 %77 
                                                      OpStore %65 %78 
                               Uniform f32_4* %79 = OpAccessChain %23 %68 %39 
                                        f32_4 %80 = OpLoad %79 
                                        f32_4 %81 = OpLoad %47 
                                        f32_4 %82 = OpVectorShuffle %81 %81 2 2 2 2 
                                        f32_4 %83 = OpFMul %80 %82 
                                        f32_4 %84 = OpLoad %65 
                                        f32_4 %85 = OpFAdd %83 %84 
                                                      OpStore %65 %85 
                               Uniform f32_4* %91 = OpAccessChain %23 %68 %49 
                                        f32_4 %92 = OpLoad %91 
                                        f32_4 %93 = OpLoad %47 
                                        f32_4 %94 = OpVectorShuffle %93 %93 3 3 3 3 
                                        f32_4 %95 = OpFMul %92 %94 
                                        f32_4 %96 = OpLoad %65 
                                        f32_4 %97 = OpFAdd %95 %96 
                                Output f32_4* %99 = OpAccessChain %90 %31 
                                                      OpStore %99 %97 
                                       f32_4 %102 = OpLoad %100 
                                       f32_2 %103 = OpVectorShuffle %102 %102 0 1 
                              Uniform f32_4* %105 = OpAccessChain %23 %104 
                                       f32_4 %106 = OpLoad %105 
                                       f32_2 %107 = OpVectorShuffle %106 %106 0 1 
                                       f32_2 %108 = OpFMul %103 %107 
                              Uniform f32_4* %109 = OpAccessChain %23 %104 
                                       f32_4 %110 = OpLoad %109 
                                       f32_2 %111 = OpVectorShuffle %110 %110 2 3 
                                       f32_2 %112 = OpFAdd %108 %111 
                                       f32_4 %113 = OpLoad %47 
                                       f32_4 %114 = OpVectorShuffle %113 %112 4 5 2 3 
                                                      OpStore %47 %114 
                                       f32_4 %117 = OpLoad %47 
                                       f32_2 %118 = OpVectorShuffle %117 %117 0 1 
                                                      OpStore vs_TEXCOORD0 %118 
                                       f32_3 %121 = OpLoad %120 
                              Uniform f32_4* %123 = OpAccessChain %23 %122 %31 
                                       f32_4 %124 = OpLoad %123 
                                       f32_3 %125 = OpVectorShuffle %124 %124 0 1 2 
                                         f32 %126 = OpDot %121 %125 
                                Private f32* %129 = OpAccessChain %47 %127 
                                                      OpStore %129 %126 
                                       f32_3 %130 = OpLoad %120 
                              Uniform f32_4* %131 = OpAccessChain %23 %122 %26 
                                       f32_4 %132 = OpLoad %131 
                                       f32_3 %133 = OpVectorShuffle %132 %132 0 1 2 
                                         f32 %134 = OpDot %130 %133 
                                Private f32* %135 = OpAccessChain %47 %86 
                                                      OpStore %135 %134 
                                       f32_3 %136 = OpLoad %120 
                              Uniform f32_4* %137 = OpAccessChain %23 %122 %39 
                                       f32_4 %138 = OpLoad %137 
                                       f32_3 %139 = OpVectorShuffle %138 %138 0 1 2 
                                         f32 %140 = OpDot %136 %139 
                                Private f32* %142 = OpAccessChain %47 %141 
                                                      OpStore %142 %140 
                                       f32_4 %144 = OpLoad %47 
                                       f32_3 %145 = OpVectorShuffle %144 %144 0 1 2 
                                       f32_4 %146 = OpLoad %47 
                                       f32_3 %147 = OpVectorShuffle %146 %146 0 1 2 
                                         f32 %148 = OpDot %145 %147 
                                                      OpStore %143 %148 
                                         f32 %149 = OpLoad %143 
                                         f32 %150 = OpExtInst %1 32 %149 
                                                      OpStore %143 %150 
                                         f32 %151 = OpLoad %143 
                                       f32_3 %152 = OpCompositeConstruct %151 %151 %151 
                                       f32_4 %153 = OpLoad %47 
                                       f32_3 %154 = OpVectorShuffle %153 %153 0 1 2 
                                       f32_3 %155 = OpFMul %152 %154 
                                       f32_4 %156 = OpLoad %47 
                                       f32_4 %157 = OpVectorShuffle %156 %155 4 5 6 3 
                                                      OpStore %47 %157 
                                       f32_4 %160 = OpLoad %47 
                                       f32_3 %161 = OpVectorShuffle %160 %160 0 1 2 
                                                      OpStore vs_TEXCOORD1 %161 
                                       f32_4 %163 = OpLoad %9 
                                       f32_3 %164 = OpVectorShuffle %163 %163 0 1 2 
                                                      OpStore vs_TEXCOORD2 %164 
                                       f32_4 %165 = OpLoad %9 
                                       f32_4 %166 = OpVectorShuffle %165 %165 0 0 0 0 
                                       f32_4 %167 = OpFNegate %166 
                              Uniform f32_4* %168 = OpAccessChain %23 %31 
                                       f32_4 %169 = OpLoad %168 
                                       f32_4 %170 = OpFAdd %167 %169 
                                                      OpStore %65 %170 
                                       f32_4 %172 = OpLoad %9 
                                       f32_4 %173 = OpVectorShuffle %172 %172 1 1 1 1 
                                       f32_4 %174 = OpFNegate %173 
                              Uniform f32_4* %175 = OpAccessChain %23 %26 
                                       f32_4 %176 = OpLoad %175 
                                       f32_4 %177 = OpFAdd %174 %176 
                                                      OpStore %171 %177 
                                       f32_4 %178 = OpLoad %9 
                                       f32_4 %179 = OpVectorShuffle %178 %178 2 2 2 2 
                                       f32_4 %180 = OpFNegate %179 
                              Uniform f32_4* %181 = OpAccessChain %23 %39 
                                       f32_4 %182 = OpLoad %181 
                                       f32_4 %183 = OpFAdd %180 %182 
                                                      OpStore %9 %183 
                                       f32_4 %185 = OpLoad %47 
                                       f32_4 %186 = OpVectorShuffle %185 %185 1 1 1 1 
                                       f32_4 %187 = OpLoad %171 
                                       f32_4 %188 = OpFMul %186 %187 
                                                      OpStore %184 %188 
                                       f32_4 %189 = OpLoad %171 
                                       f32_4 %190 = OpLoad %171 
                                       f32_4 %191 = OpFMul %189 %190 
                                                      OpStore %171 %191 
                                       f32_4 %192 = OpLoad %65 
                                       f32_4 %193 = OpLoad %65 
                                       f32_4 %194 = OpFMul %192 %193 
                                       f32_4 %195 = OpLoad %171 
                                       f32_4 %196 = OpFAdd %194 %195 
                                                      OpStore %171 %196 
                                       f32_4 %197 = OpLoad %65 
                                       f32_4 %198 = OpLoad %47 
                                       f32_4 %199 = OpVectorShuffle %198 %198 0 0 0 0 
                                       f32_4 %200 = OpFMul %197 %199 
                                       f32_4 %201 = OpLoad %184 
                                       f32_4 %202 = OpFAdd %200 %201 
                                                      OpStore %65 %202 
                                       f32_4 %203 = OpLoad %9 
                                       f32_4 %204 = OpLoad %47 
                                       f32_4 %205 = OpVectorShuffle %204 %204 2 2 2 2 
                                       f32_4 %206 = OpFMul %203 %205 
                                       f32_4 %207 = OpLoad %65 
                                       f32_4 %208 = OpFAdd %206 %207 
                                                      OpStore %65 %208 
                                       f32_4 %209 = OpLoad %9 
                                       f32_4 %210 = OpLoad %9 
                                       f32_4 %211 = OpFMul %209 %210 
                                       f32_4 %212 = OpLoad %171 
                                       f32_4 %213 = OpFAdd %211 %212 
                                                      OpStore %9 %213 
                                       f32_4 %214 = OpLoad %9 
                                       f32_4 %217 = OpExtInst %1 40 %214 %216 
                                                      OpStore %9 %217 
                                       f32_4 %218 = OpLoad %9 
                                       f32_4 %219 = OpExtInst %1 32 %218 
                                                      OpStore %171 %219 
                                       f32_4 %220 = OpLoad %9 
                              Uniform f32_4* %221 = OpAccessChain %23 %49 
                                       f32_4 %222 = OpLoad %221 
                                       f32_4 %223 = OpFMul %220 %222 
                                       f32_4 %226 = OpFAdd %223 %225 
                                                      OpStore %9 %226 
                                       f32_4 %227 = OpLoad %9 
                                       f32_4 %228 = OpFDiv %225 %227 
                                                      OpStore %9 %228 
                                       f32_4 %229 = OpLoad %65 
                                       f32_4 %230 = OpLoad %171 
                                       f32_4 %231 = OpFMul %229 %230 
                                                      OpStore %65 %231 
                                       f32_4 %232 = OpLoad %65 
                                       f32_4 %235 = OpExtInst %1 40 %232 %234 
                                                      OpStore %65 %235 
                                       f32_4 %236 = OpLoad %9 
                                       f32_4 %237 = OpLoad %65 
                                       f32_4 %238 = OpFMul %236 %237 
                                                      OpStore %9 %238 
                                       f32_4 %239 = OpLoad %9 
                                       f32_3 %240 = OpVectorShuffle %239 %239 1 1 1 
                              Uniform f32_4* %242 = OpAccessChain %23 %241 %26 
                                       f32_4 %243 = OpLoad %242 
                                       f32_3 %244 = OpVectorShuffle %243 %243 0 1 2 
                                       f32_3 %245 = OpFMul %240 %244 
                                       f32_4 %246 = OpLoad %65 
                                       f32_4 %247 = OpVectorShuffle %246 %245 4 5 6 3 
                                                      OpStore %65 %247 
                              Uniform f32_4* %248 = OpAccessChain %23 %241 %31 
                                       f32_4 %249 = OpLoad %248 
                                       f32_3 %250 = OpVectorShuffle %249 %249 0 1 2 
                                       f32_4 %251 = OpLoad %9 
                                       f32_3 %252 = OpVectorShuffle %251 %251 0 0 0 
                                       f32_3 %253 = OpFMul %250 %252 
                                       f32_4 %254 = OpLoad %65 
                                       f32_3 %255 = OpVectorShuffle %254 %254 0 1 2 
                                       f32_3 %256 = OpFAdd %253 %255 
                                       f32_4 %257 = OpLoad %65 
                                       f32_4 %258 = OpVectorShuffle %257 %256 4 5 6 3 
                                                      OpStore %65 %258 
                              Uniform f32_4* %259 = OpAccessChain %23 %241 %39 
                                       f32_4 %260 = OpLoad %259 
                                       f32_3 %261 = OpVectorShuffle %260 %260 0 1 2 
                                       f32_4 %262 = OpLoad %9 
                                       f32_3 %263 = OpVectorShuffle %262 %262 2 2 2 
                                       f32_3 %264 = OpFMul %261 %263 
                                       f32_4 %265 = OpLoad %65 
                                       f32_3 %266 = OpVectorShuffle %265 %265 0 1 2 
                                       f32_3 %267 = OpFAdd %264 %266 
                                       f32_4 %268 = OpLoad %9 
                                       f32_4 %269 = OpVectorShuffle %268 %267 4 5 6 3 
                                                      OpStore %9 %269 
                              Uniform f32_4* %270 = OpAccessChain %23 %241 %49 
                                       f32_4 %271 = OpLoad %270 
                                       f32_3 %272 = OpVectorShuffle %271 %271 0 1 2 
                                       f32_4 %273 = OpLoad %9 
                                       f32_3 %274 = OpVectorShuffle %273 %273 3 3 3 
                                       f32_3 %275 = OpFMul %272 %274 
                                       f32_4 %276 = OpLoad %9 
                                       f32_3 %277 = OpVectorShuffle %276 %276 0 1 2 
                                       f32_3 %278 = OpFAdd %275 %277 
                                       f32_4 %279 = OpLoad %9 
                                       f32_4 %280 = OpVectorShuffle %279 %278 4 5 6 3 
                                                      OpStore %9 %280 
                                       f32_4 %281 = OpLoad %9 
                                       f32_3 %282 = OpVectorShuffle %281 %281 0 1 2 
                                       f32_3 %285 = OpFMul %282 %284 
                                       f32_3 %288 = OpFAdd %285 %287 
                                       f32_4 %289 = OpLoad %65 
                                       f32_4 %290 = OpVectorShuffle %289 %288 4 5 6 3 
                                                      OpStore %65 %290 
                                       f32_4 %291 = OpLoad %9 
                                       f32_3 %292 = OpVectorShuffle %291 %291 0 1 2 
                                       f32_4 %293 = OpLoad %65 
                                       f32_3 %294 = OpVectorShuffle %293 %293 0 1 2 
                                       f32_3 %295 = OpFMul %292 %294 
                                       f32_3 %298 = OpFAdd %295 %297 
                                       f32_4 %299 = OpLoad %65 
                                       f32_4 %300 = OpVectorShuffle %299 %298 4 5 6 3 
                                                      OpStore %65 %300 
                                Private f32* %303 = OpAccessChain %47 %86 
                                         f32 %304 = OpLoad %303 
                                Private f32* %305 = OpAccessChain %47 %86 
                                         f32 %306 = OpLoad %305 
                                         f32 %307 = OpFMul %304 %306 
                                Private f32* %308 = OpAccessChain %302 %127 
                                                      OpStore %308 %307 
                                Private f32* %309 = OpAccessChain %47 %127 
                                         f32 %310 = OpLoad %309 
                                Private f32* %311 = OpAccessChain %47 %127 
                                         f32 %312 = OpLoad %311 
                                         f32 %313 = OpFMul %310 %312 
                                Private f32* %314 = OpAccessChain %302 %127 
                                         f32 %315 = OpLoad %314 
                                         f32 %316 = OpFNegate %315 
                                         f32 %317 = OpFAdd %313 %316 
                                Private f32* %318 = OpAccessChain %302 %127 
                                                      OpStore %318 %317 
                                       f32_4 %320 = OpLoad %47 
                                       f32_4 %321 = OpVectorShuffle %320 %320 1 2 2 0 
                                       f32_4 %322 = OpLoad %47 
                                       f32_4 %323 = OpVectorShuffle %322 %322 0 1 2 2 
                                       f32_4 %324 = OpFMul %321 %323 
                                                      OpStore %319 %324 
                              Uniform f32_4* %327 = OpAccessChain %23 %326 
                                       f32_4 %328 = OpLoad %327 
                                       f32_4 %329 = OpLoad %319 
                                         f32 %330 = OpDot %328 %329 
                                Private f32* %331 = OpAccessChain %325 %127 
                                                      OpStore %331 %330 
                              Uniform f32_4* %333 = OpAccessChain %23 %332 
                                       f32_4 %334 = OpLoad %333 
                                       f32_4 %335 = OpLoad %319 
                                         f32 %336 = OpDot %334 %335 
                                Private f32* %337 = OpAccessChain %325 %86 
                                                      OpStore %337 %336 
                              Uniform f32_4* %339 = OpAccessChain %23 %338 
                                       f32_4 %340 = OpLoad %339 
                                       f32_4 %341 = OpLoad %319 
                                         f32 %342 = OpDot %340 %341 
                                Private f32* %343 = OpAccessChain %325 %141 
                                                      OpStore %343 %342 
                              Uniform f32_4* %345 = OpAccessChain %23 %344 
                                       f32_4 %346 = OpLoad %345 
                                       f32_3 %347 = OpVectorShuffle %346 %346 0 1 2 
                                       f32_3 %348 = OpLoad %302 
                                       f32_3 %349 = OpVectorShuffle %348 %348 0 0 0 
                                       f32_3 %350 = OpFMul %347 %349 
                                       f32_3 %351 = OpLoad %325 
                                       f32_3 %352 = OpFAdd %350 %351 
                                                      OpStore %302 %352 
                                       f32_4 %354 = OpLoad %9 
                                       f32_3 %355 = OpVectorShuffle %354 %354 0 1 2 
                                       f32_4 %356 = OpLoad %65 
                                       f32_3 %357 = OpVectorShuffle %356 %356 0 1 2 
                                       f32_3 %358 = OpFMul %355 %357 
                                       f32_3 %359 = OpLoad %302 
                                       f32_3 %360 = OpFAdd %358 %359 
                                                      OpStore vs_TEXCOORD3 %360 
                                                      OpStore vs_TEXCOORD5 %234 
                                                      OpStore vs_TEXCOORD6 %234 
                                 Output f32* %364 = OpAccessChain %90 %31 %86 
                                         f32 %365 = OpLoad %364 
                                         f32 %366 = OpFNegate %365 
                                 Output f32* %367 = OpAccessChain %90 %31 %86 
                                                      OpStore %367 %366 
                                                      OpReturn
                                                      OpFunctionEnd
; SPIR-V
; Version: 1.0
; Generator: Khronos Glslang Reference Front End; 6
; Bound: 411
; Schema: 0
                                                      OpCapability Shader 
                                               %1 = OpExtInstImport "GLSL.std.450" 
                                                      OpMemoryModel Logical GLSL450 
                                                      OpEntryPoint Fragment %4 "main" %12 %190 %328 %373 %384 
                                                      OpExecutionMode %4 OriginUpperLeft 
                                                      OpName vs_TEXCOORD2 "vs_TEXCOORD2" 
                                                      OpName vs_TEXCOORD1 "vs_TEXCOORD1" 
                                                      OpName vs_TEXCOORD3 "vs_TEXCOORD3" 
                                                      OpName vs_TEXCOORD0 "vs_TEXCOORD0" 
                                                      OpDecorate vs_TEXCOORD2 Location 12 
                                                      OpDecorate %16 ArrayStride 16 
                                                      OpDecorate %18 ArrayStride 18 
                                                      OpMemberDecorate %19 0 Offset 19 
                                                      OpMemberDecorate %19 1 RelaxedPrecision 
                                                      OpMemberDecorate %19 1 Offset 19 
                                                      OpMemberDecorate %19 2 RelaxedPrecision 
                                                      OpMemberDecorate %19 2 Offset 19 
                                                      OpMemberDecorate %19 3 RelaxedPrecision 
                                                      OpMemberDecorate %19 3 Offset 19 
                                                      OpMemberDecorate %19 4 RelaxedPrecision 
                                                      OpMemberDecorate %19 4 Offset 19 
                                                      OpMemberDecorate %19 5 Offset 19 
                                                      OpMemberDecorate %19 6 RelaxedPrecision 
                                                      OpMemberDecorate %19 6 Offset 19 
                                                      OpMemberDecorate %19 7 Offset 19 
                                                      OpMemberDecorate %19 8 Offset 19 
                                                      OpMemberDecorate %19 9 RelaxedPrecision 
                                                      OpMemberDecorate %19 9 Offset 19 
                                                      OpMemberDecorate %19 10 RelaxedPrecision 
                                                      OpMemberDecorate %19 10 Offset 19 
                                                      OpMemberDecorate %19 11 RelaxedPrecision 
                                                      OpMemberDecorate %19 11 Offset 19 
                                                      OpMemberDecorate %19 12 RelaxedPrecision 
                                                      OpMemberDecorate %19 12 Offset 19 
                                                      OpMemberDecorate %19 13 RelaxedPrecision 
                                                      OpMemberDecorate %19 13 Offset 19 
                                                      OpMemberDecorate %19 14 RelaxedPrecision 
                                                      OpMemberDecorate %19 14 Offset 19 
                                                      OpDecorate %19 Block 
                                                      OpDecorate %21 DescriptorSet 21 
                                                      OpDecorate %21 Binding 21 
                                                      OpDecorate %94 RelaxedPrecision 
                                                      OpDecorate %97 RelaxedPrecision 
                                                      OpDecorate %147 DescriptorSet 147 
                                                      OpDecorate %147 Binding 147 
                                                      OpDecorate %151 DescriptorSet 151 
                                                      OpDecorate %151 Binding 151 
                                                      OpDecorate %160 RelaxedPrecision 
                                                      OpDecorate %162 RelaxedPrecision 
                                                      OpDecorate %163 RelaxedPrecision 
                                                      OpDecorate %164 RelaxedPrecision 
                                                      OpDecorate %169 RelaxedPrecision 
                                                      OpDecorate %172 RelaxedPrecision 
                                                      OpDecorate %175 RelaxedPrecision 
                                                      OpDecorate %177 RelaxedPrecision 
                                                      OpDecorate %178 RelaxedPrecision 
                                                      OpDecorate %179 RelaxedPrecision 
                                                      OpDecorate %184 RelaxedPrecision 
                                                      OpDecorate %187 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD1 Location 190 
                                                      OpDecorate %196 RelaxedPrecision 
                                                      OpDecorate %197 RelaxedPrecision 
                                                      OpDecorate %199 RelaxedPrecision 
                                                      OpDecorate %200 RelaxedPrecision 
                                                      OpDecorate %203 RelaxedPrecision 
                                                      OpDecorate %205 RelaxedPrecision 
                                                      OpDecorate %206 RelaxedPrecision 
                                                      OpDecorate %207 RelaxedPrecision 
                                                      OpDecorate %210 RelaxedPrecision 
                                                      OpDecorate %211 RelaxedPrecision 
                                                      OpDecorate %213 RelaxedPrecision 
                                                      OpDecorate %216 RelaxedPrecision 
                                                      OpDecorate %217 RelaxedPrecision 
                                                      OpDecorate %219 RelaxedPrecision 
                                                      OpDecorate %222 RelaxedPrecision 
                                                      OpDecorate %223 RelaxedPrecision 
                                                      OpDecorate %224 RelaxedPrecision 
                                                      OpDecorate %225 RelaxedPrecision 
                                                      OpDecorate %227 RelaxedPrecision 
                                                      OpDecorate %228 RelaxedPrecision 
                                                      OpDecorate %230 RelaxedPrecision 
                                                      OpDecorate %232 RelaxedPrecision 
                                                      OpDecorate %233 RelaxedPrecision 
                                                      OpDecorate %235 RelaxedPrecision 
                                                      OpDecorate %236 RelaxedPrecision 
                                                      OpDecorate %237 RelaxedPrecision 
                                                      OpDecorate %238 RelaxedPrecision 
                                                      OpDecorate %239 RelaxedPrecision 
                                                      OpDecorate %240 RelaxedPrecision 
                                                      OpDecorate %241 RelaxedPrecision 
                                                      OpDecorate %242 RelaxedPrecision 
                                                      OpDecorate %243 RelaxedPrecision 
                                                      OpDecorate %245 RelaxedPrecision 
                                                      OpDecorate %246 RelaxedPrecision 
                                                      OpDecorate %249 RelaxedPrecision 
                                                      OpDecorate %250 RelaxedPrecision 
                                                      OpDecorate %253 RelaxedPrecision 
                                                      OpDecorate %255 RelaxedPrecision 
                                                      OpDecorate %257 RelaxedPrecision 
                                                      OpDecorate %259 RelaxedPrecision 
                                                      OpDecorate %261 RelaxedPrecision 
                                                      OpDecorate %262 RelaxedPrecision 
                                                      OpDecorate %265 RelaxedPrecision 
                                                      OpDecorate %266 RelaxedPrecision 
                                                      OpDecorate %267 RelaxedPrecision 
                                                      OpDecorate %270 RelaxedPrecision 
                                                      OpDecorate %272 RelaxedPrecision 
                                                      OpDecorate %273 RelaxedPrecision 
                                                      OpDecorate %277 RelaxedPrecision 
                                                      OpDecorate %278 RelaxedPrecision 
                                                      OpDecorate %279 RelaxedPrecision 
                                                      OpDecorate %282 RelaxedPrecision 
                                                      OpDecorate %283 RelaxedPrecision 
                                                      OpDecorate %284 RelaxedPrecision 
                                                      OpDecorate %286 RelaxedPrecision 
                                                      OpDecorate %287 RelaxedPrecision 
                                                      OpDecorate %288 RelaxedPrecision 
                                                      OpDecorate %289 RelaxedPrecision 
                                                      OpDecorate %291 RelaxedPrecision 
                                                      OpDecorate %292 RelaxedPrecision 
                                                      OpDecorate %293 RelaxedPrecision 
                                                      OpDecorate %294 RelaxedPrecision 
                                                      OpDecorate %295 RelaxedPrecision 
                                                      OpDecorate %296 RelaxedPrecision 
                                                      OpDecorate %298 RelaxedPrecision 
                                                      OpDecorate %299 RelaxedPrecision 
                                                      OpDecorate %300 RelaxedPrecision 
                                                      OpDecorate %301 RelaxedPrecision 
                                                      OpDecorate %302 RelaxedPrecision 
                                                      OpDecorate %303 RelaxedPrecision 
                                                      OpDecorate %304 RelaxedPrecision 
                                                      OpDecorate %305 RelaxedPrecision 
                                                      OpDecorate %306 RelaxedPrecision 
                                                      OpDecorate %312 RelaxedPrecision 
                                                      OpDecorate %317 RelaxedPrecision 
                                                      OpDecorate %323 RelaxedPrecision 
                                                      OpDecorate %327 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD3 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD3 Location 328 
                                                      OpDecorate %329 RelaxedPrecision 
                                                      OpDecorate %330 RelaxedPrecision 
                                                      OpDecorate %331 RelaxedPrecision 
                                                      OpDecorate %333 RelaxedPrecision 
                                                      OpDecorate %334 RelaxedPrecision 
                                                      OpDecorate %335 RelaxedPrecision 
                                                      OpDecorate %365 RelaxedPrecision 
                                                      OpDecorate %366 RelaxedPrecision 
                                                      OpDecorate %366 DescriptorSet 366 
                                                      OpDecorate %366 Binding 366 
                                                      OpDecorate %367 RelaxedPrecision 
                                                      OpDecorate %368 RelaxedPrecision 
                                                      OpDecorate %368 DescriptorSet 368 
                                                      OpDecorate %368 Binding 368 
                                                      OpDecorate %369 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD0 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD0 Location 373 
                                                      OpDecorate %374 RelaxedPrecision 
                                                      OpDecorate %375 RelaxedPrecision 
                                                      OpDecorate %376 RelaxedPrecision 
                                                      OpDecorate %377 RelaxedPrecision 
                                                      OpDecorate %380 RelaxedPrecision 
                                                      OpDecorate %381 RelaxedPrecision 
                                                      OpDecorate %382 RelaxedPrecision 
                                                      OpDecorate %384 RelaxedPrecision 
                                                      OpDecorate %384 Location 384 
                                                      OpDecorate %386 RelaxedPrecision 
                                                      OpDecorate %388 RelaxedPrecision 
                                                      OpDecorate %389 RelaxedPrecision 
                                                      OpDecorate %392 RelaxedPrecision 
                                                      OpDecorate %395 RelaxedPrecision 
                                                      OpDecorate %397 RelaxedPrecision 
                                                      OpDecorate %400 RelaxedPrecision 
                                                      OpDecorate %401 RelaxedPrecision 
                                                      OpDecorate %402 RelaxedPrecision 
                                                      OpDecorate %403 RelaxedPrecision 
                                                      OpDecorate %404 RelaxedPrecision 
                                                      OpDecorate %405 RelaxedPrecision 
                                                      OpDecorate %406 RelaxedPrecision 
                                                      OpDecorate %407 RelaxedPrecision 
                                               %2 = OpTypeVoid 
                                               %3 = OpTypeFunction %2 
                                               %6 = OpTypeFloat 32 
                                               %7 = OpTypeVector %6 4 
                                               %8 = OpTypePointer Private %7 
                                Private f32_4* %9 = OpVariable Private 
                                              %10 = OpTypeVector %6 3 
                                              %11 = OpTypePointer Input %10 
                        Input f32_3* vs_TEXCOORD2 = OpVariable Input 
                                              %14 = OpTypeInt 32 0 
                                          u32 %15 = OpConstant 16 
                                              %16 = OpTypeArray %7 %15 
                                          u32 %17 = OpConstant 4 
                                              %18 = OpTypeArray %7 %17 
                                              %19 = OpTypeStruct %10 %7 %7 %7 %7 %16 %7 %7 %18 %7 %7 %7 %7 %6 %6 
                                              %20 = OpTypePointer Uniform %19 
Uniform struct {f32_3; f32_4; f32_4; f32_4; f32_4; f32_4[16]; f32_4; f32_4; f32_4[4]; f32_4; f32_4; f32_4; f32_4; f32; f32;}* %21 = OpVariable Uniform 
                                              %22 = OpTypeInt 32 1 
                                          i32 %23 = OpConstant 7 
                                              %24 = OpTypePointer Uniform %7 
                                          u32 %37 = OpConstant 0 
                                              %38 = OpTypePointer Private %6 
                                              %44 = OpTypePointer Private %10 
                               Private f32_3* %45 = OpVariable Private 
                                          i32 %48 = OpConstant 0 
                                              %49 = OpTypePointer Uniform %10 
                               Private f32_3* %53 = OpVariable Private 
                                          i32 %54 = OpConstant 8 
                                          u32 %55 = OpConstant 2 
                                              %56 = OpTypePointer Uniform %6 
                                          i32 %60 = OpConstant 1 
                                          u32 %63 = OpConstant 1 
                                          i32 %65 = OpConstant 2 
                                          u32 %80 = OpConstant 3 
                                          i32 %92 = OpConstant 6 
                                         f32 %102 = OpConstant 3.674022E-40 
                                         f32 %103 = OpConstant 3.674022E-40 
                                         i32 %108 = OpConstant 5 
                                         i32 %130 = OpConstant 3 
                                             %135 = OpTypePointer Function %10 
                                             %137 = OpTypeVector %6 2 
                                             %145 = OpTypeImage %6 Dim2D 0 0 0 1 Unknown 
                                             %146 = OpTypePointer UniformConstant %145 
        UniformConstant read_only Texture2D* %147 = OpVariable UniformConstant 
                                             %149 = OpTypeSampler 
                                             %150 = OpTypePointer UniformConstant %149 
                    UniformConstant sampler* %151 = OpVariable UniformConstant 
                                             %153 = OpTypeImage %6 Dim2D 1 0 0 1 Unknown 
                                             %154 = OpTypeSampledImage %153 
                              Private f32_3* %160 = OpVariable Private 
                              Private f32_3* %175 = OpVariable Private 
                        Input f32_3* vs_TEXCOORD1 = OpVariable Input 
                                Private f32* %213 = OpVariable Private 
                                         i32 %214 = OpConstant 14 
                                         f32 %218 = OpConstant 3.674022E-40 
                                         i32 %220 = OpConstant 13 
                                Private f32* %230 = OpVariable Private 
                                         f32 %254 = OpConstant 3.674022E-40 
                                         f32 %256 = OpConstant 3.674022E-40 
                                         i32 %275 = OpConstant 11 
                                         i32 %280 = OpConstant 12 
                              Private f32_3* %294 = OpVariable Private 
                                         i32 %321 = OpConstant 4 
                        Input f32_3* vs_TEXCOORD3 = OpVariable Input 
                                       f32_3 %332 = OpConstantComposite %102 %102 %102 
                                         f32 %340 = OpConstant 3.674022E-40 
                                       f32_3 %341 = OpConstantComposite %340 %340 %340 
                                         f32 %352 = OpConstant 3.674022E-40 
                                       f32_3 %353 = OpConstantComposite %352 %352 %352 
                                         f32 %355 = OpConstant 3.674022E-40 
                                       f32_3 %356 = OpConstantComposite %355 %355 %355 
                              Private f32_4* %365 = OpVariable Private 
        UniformConstant read_only Texture2D* %366 = OpVariable UniformConstant 
                    UniformConstant sampler* %368 = OpVariable UniformConstant 
                                             %370 = OpTypeSampledImage %145 
                                             %372 = OpTypePointer Input %137 
                        Input f32_2* vs_TEXCOORD0 = OpVariable Input 
                                         i32 %378 = OpConstant 10 
                                             %383 = OpTypePointer Output %7 
                               Output f32_4* %384 = OpVariable Output 
                                             %390 = OpTypePointer Output %6 
                              Private f32_3* %392 = OpVariable Private 
                                         i32 %398 = OpConstant 9 
                                          void %4 = OpFunction None %3 
                                               %5 = OpLabel 
                             Function f32_3* %136 = OpVariable Function 
                                        f32_3 %13 = OpLoad vs_TEXCOORD2 
                               Uniform f32_4* %25 = OpAccessChain %21 %23 
                                        f32_4 %26 = OpLoad %25 
                                        f32_3 %27 = OpVectorShuffle %26 %26 0 1 2 
                                        f32_3 %28 = OpFNegate %27 
                                        f32_3 %29 = OpFAdd %13 %28 
                                        f32_4 %30 = OpLoad %9 
                                        f32_4 %31 = OpVectorShuffle %30 %29 4 5 6 3 
                                                      OpStore %9 %31 
                                        f32_4 %32 = OpLoad %9 
                                        f32_3 %33 = OpVectorShuffle %32 %32 0 1 2 
                                        f32_4 %34 = OpLoad %9 
                                        f32_3 %35 = OpVectorShuffle %34 %34 0 1 2 
                                          f32 %36 = OpDot %33 %35 
                                 Private f32* %39 = OpAccessChain %9 %37 
                                                      OpStore %39 %36 
                                 Private f32* %40 = OpAccessChain %9 %37 
                                          f32 %41 = OpLoad %40 
                                          f32 %42 = OpExtInst %1 31 %41 
                                 Private f32* %43 = OpAccessChain %9 %37 
                                                      OpStore %43 %42 
                                        f32_3 %46 = OpLoad vs_TEXCOORD2 
                                        f32_3 %47 = OpFNegate %46 
                               Uniform f32_3* %50 = OpAccessChain %21 %48 
                                        f32_3 %51 = OpLoad %50 
                                        f32_3 %52 = OpFAdd %47 %51 
                                                      OpStore %45 %52 
                                 Uniform f32* %57 = OpAccessChain %21 %54 %48 %55 
                                          f32 %58 = OpLoad %57 
                                 Private f32* %59 = OpAccessChain %53 %37 
                                                      OpStore %59 %58 
                                 Uniform f32* %61 = OpAccessChain %21 %54 %60 %55 
                                          f32 %62 = OpLoad %61 
                                 Private f32* %64 = OpAccessChain %53 %63 
                                                      OpStore %64 %62 
                                 Uniform f32* %66 = OpAccessChain %21 %54 %65 %55 
                                          f32 %67 = OpLoad %66 
                                 Private f32* %68 = OpAccessChain %53 %55 
                                                      OpStore %68 %67 
                                        f32_3 %69 = OpLoad %45 
                                        f32_3 %70 = OpLoad %53 
                                          f32 %71 = OpDot %69 %70 
                                 Private f32* %72 = OpAccessChain %45 %37 
                                                      OpStore %72 %71 
                                 Private f32* %73 = OpAccessChain %45 %37 
                                          f32 %74 = OpLoad %73 
                                          f32 %75 = OpFNegate %74 
                                 Private f32* %76 = OpAccessChain %9 %37 
                                          f32 %77 = OpLoad %76 
                                          f32 %78 = OpFAdd %75 %77 
                                 Private f32* %79 = OpAccessChain %9 %37 
                                                      OpStore %79 %78 
                                 Uniform f32* %81 = OpAccessChain %21 %23 %80 
                                          f32 %82 = OpLoad %81 
                                 Private f32* %83 = OpAccessChain %9 %37 
                                          f32 %84 = OpLoad %83 
                                          f32 %85 = OpFMul %82 %84 
                                 Private f32* %86 = OpAccessChain %45 %37 
                                          f32 %87 = OpLoad %86 
                                          f32 %88 = OpFAdd %85 %87 
                                 Private f32* %89 = OpAccessChain %9 %37 
                                                      OpStore %89 %88 
                                 Private f32* %90 = OpAccessChain %9 %37 
                                          f32 %91 = OpLoad %90 
                                 Uniform f32* %93 = OpAccessChain %21 %92 %55 
                                          f32 %94 = OpLoad %93 
                                          f32 %95 = OpFMul %91 %94 
                                 Uniform f32* %96 = OpAccessChain %21 %92 %80 
                                          f32 %97 = OpLoad %96 
                                          f32 %98 = OpFAdd %95 %97 
                                 Private f32* %99 = OpAccessChain %9 %37 
                                                      OpStore %99 %98 
                                Private f32* %100 = OpAccessChain %9 %37 
                                         f32 %101 = OpLoad %100 
                                         f32 %104 = OpExtInst %1 43 %101 %102 %103 
                                Private f32* %105 = OpAccessChain %9 %37 
                                                      OpStore %105 %104 
                                       f32_3 %106 = OpLoad vs_TEXCOORD2 
                                       f32_3 %107 = OpVectorShuffle %106 %106 1 1 1 
                              Uniform f32_4* %109 = OpAccessChain %21 %108 %60 
                                       f32_4 %110 = OpLoad %109 
                                       f32_3 %111 = OpVectorShuffle %110 %110 0 1 2 
                                       f32_3 %112 = OpFMul %107 %111 
                                                      OpStore %45 %112 
                              Uniform f32_4* %113 = OpAccessChain %21 %108 %48 
                                       f32_4 %114 = OpLoad %113 
                                       f32_3 %115 = OpVectorShuffle %114 %114 0 1 2 
                                       f32_3 %116 = OpLoad vs_TEXCOORD2 
                                       f32_3 %117 = OpVectorShuffle %116 %116 0 0 0 
                                       f32_3 %118 = OpFMul %115 %117 
                                       f32_3 %119 = OpLoad %45 
                                       f32_3 %120 = OpFAdd %118 %119 
                                                      OpStore %45 %120 
                              Uniform f32_4* %121 = OpAccessChain %21 %108 %65 
                                       f32_4 %122 = OpLoad %121 
                                       f32_3 %123 = OpVectorShuffle %122 %122 0 1 2 
                                       f32_3 %124 = OpLoad vs_TEXCOORD2 
                                       f32_3 %125 = OpVectorShuffle %124 %124 2 2 2 
                                       f32_3 %126 = OpFMul %123 %125 
                                       f32_3 %127 = OpLoad %45 
                                       f32_3 %128 = OpFAdd %126 %127 
                                                      OpStore %45 %128 
                                       f32_3 %129 = OpLoad %45 
                              Uniform f32_4* %131 = OpAccessChain %21 %108 %130 
                                       f32_4 %132 = OpLoad %131 
                                       f32_3 %133 = OpVectorShuffle %132 %132 0 1 2 
                                       f32_3 %134 = OpFAdd %129 %133 
                                                      OpStore %45 %134 
                                       f32_3 %138 = OpLoad %45 
                                       f32_2 %139 = OpVectorShuffle %138 %138 0 1 
                                Private f32* %140 = OpAccessChain %45 %55 
                                         f32 %141 = OpLoad %140 
                                         f32 %142 = OpCompositeExtract %139 0 
                                         f32 %143 = OpCompositeExtract %139 1 
                                       f32_3 %144 = OpCompositeConstruct %142 %143 %141 
                                                      OpStore %136 %144 
                         read_only Texture2D %148 = OpLoad %147 
                                     sampler %152 = OpLoad %151 
                  read_only Texture2DSampled %155 = OpSampledImage %148 %152 
                                       f32_3 %156 = OpLoad %136 
                                         f32 %157 = OpCompositeExtract %156 2 
                                         f32 %158 = OpImageSampleDrefExplicitLod %155 %156 %157 Lod %6 
                                Private f32* %159 = OpAccessChain %45 %37 
                                                      OpStore %159 %158 
                                Uniform f32* %161 = OpAccessChain %21 %92 %37 
                                         f32 %162 = OpLoad %161 
                                         f32 %163 = OpFNegate %162 
                                         f32 %164 = OpFAdd %163 %103 
                                Private f32* %165 = OpAccessChain %160 %37 
                                                      OpStore %165 %164 
                                Private f32* %166 = OpAccessChain %45 %37 
                                         f32 %167 = OpLoad %166 
                                Private f32* %168 = OpAccessChain %160 %37 
                                         f32 %169 = OpLoad %168 
                                         f32 %170 = OpFMul %167 %169 
                                Uniform f32* %171 = OpAccessChain %21 %92 %37 
                                         f32 %172 = OpLoad %171 
                                         f32 %173 = OpFAdd %170 %172 
                                Private f32* %174 = OpAccessChain %160 %37 
                                                      OpStore %174 %173 
                                Private f32* %176 = OpAccessChain %160 %37 
                                         f32 %177 = OpLoad %176 
                                         f32 %178 = OpFNegate %177 
                                         f32 %179 = OpFAdd %178 %103 
                                Private f32* %180 = OpAccessChain %175 %37 
                                                      OpStore %180 %179 
                                Private f32* %181 = OpAccessChain %9 %37 
                                         f32 %182 = OpLoad %181 
                                Private f32* %183 = OpAccessChain %175 %37 
                                         f32 %184 = OpLoad %183 
                                         f32 %185 = OpFMul %182 %184 
                                Private f32* %186 = OpAccessChain %160 %37 
                                         f32 %187 = OpLoad %186 
                                         f32 %188 = OpFAdd %185 %187 
                                Private f32* %189 = OpAccessChain %160 %37 
                                                      OpStore %189 %188 
                                       f32_3 %191 = OpLoad vs_TEXCOORD1 
                                       f32_3 %192 = OpLoad vs_TEXCOORD1 
                                         f32 %193 = OpDot %191 %192 
                                Private f32* %194 = OpAccessChain %175 %37 
                                                      OpStore %194 %193 
                                Private f32* %195 = OpAccessChain %175 %37 
                                         f32 %196 = OpLoad %195 
                                         f32 %197 = OpExtInst %1 32 %196 
                                Private f32* %198 = OpAccessChain %175 %37 
                                                      OpStore %198 %197 
                                       f32_3 %199 = OpLoad %175 
                                       f32_3 %200 = OpVectorShuffle %199 %199 0 0 0 
                                       f32_3 %201 = OpLoad vs_TEXCOORD1 
                                       f32_3 %202 = OpFMul %200 %201 
                                                      OpStore %175 %202 
                                       f32_3 %203 = OpLoad %175 
                              Uniform f32_4* %204 = OpAccessChain %21 %60 
                                       f32_4 %205 = OpLoad %204 
                                       f32_3 %206 = OpVectorShuffle %205 %205 0 1 2 
                                         f32 %207 = OpDot %203 %206 
                                Private f32* %208 = OpAccessChain %175 %37 
                                                      OpStore %208 %207 
                                Private f32* %209 = OpAccessChain %175 %37 
                                         f32 %210 = OpLoad %209 
                                         f32 %211 = OpExtInst %1 40 %210 %102 
                                Private f32* %212 = OpAccessChain %175 %37 
                                                      OpStore %212 %211 
                                Uniform f32* %215 = OpAccessChain %21 %214 
                                         f32 %216 = OpLoad %215 
                                         f32 %217 = OpFNegate %216 
                                         f32 %219 = OpFMul %217 %218 
                                Uniform f32* %221 = OpAccessChain %21 %220 
                                         f32 %222 = OpLoad %221 
                                         f32 %223 = OpFAdd %219 %222 
                                                      OpStore %213 %223 
                                         f32 %224 = OpLoad %213 
                                         f32 %225 = OpFNegate %224 
                                Private f32* %226 = OpAccessChain %175 %37 
                                         f32 %227 = OpLoad %226 
                                         f32 %228 = OpFAdd %225 %227 
                                Private f32* %229 = OpAccessChain %175 %37 
                                                      OpStore %229 %228 
                                Uniform f32* %231 = OpAccessChain %21 %214 
                                         f32 %232 = OpLoad %231 
                                         f32 %233 = OpFMul %232 %218 
                                Uniform f32* %234 = OpAccessChain %21 %220 
                                         f32 %235 = OpLoad %234 
                                         f32 %236 = OpFAdd %233 %235 
                                                      OpStore %230 %236 
                                         f32 %237 = OpLoad %213 
                                         f32 %238 = OpFNegate %237 
                                         f32 %239 = OpLoad %230 
                                         f32 %240 = OpFAdd %238 %239 
                                                      OpStore %213 %240 
                                         f32 %241 = OpLoad %213 
                                         f32 %242 = OpFDiv %103 %241 
                                                      OpStore %213 %242 
                                         f32 %243 = OpLoad %213 
                                Private f32* %244 = OpAccessChain %175 %37 
                                         f32 %245 = OpLoad %244 
                                         f32 %246 = OpFMul %243 %245 
                                Private f32* %247 = OpAccessChain %175 %37 
                                                      OpStore %247 %246 
                                Private f32* %248 = OpAccessChain %175 %37 
                                         f32 %249 = OpLoad %248 
                                         f32 %250 = OpExtInst %1 43 %249 %102 %103 
                                Private f32* %251 = OpAccessChain %175 %37 
                                                      OpStore %251 %250 
                                Private f32* %252 = OpAccessChain %175 %37 
                                         f32 %253 = OpLoad %252 
                                         f32 %255 = OpFMul %253 %254 
                                         f32 %257 = OpFAdd %255 %256 
                                                      OpStore %213 %257 
                                Private f32* %258 = OpAccessChain %175 %37 
                                         f32 %259 = OpLoad %258 
                                Private f32* %260 = OpAccessChain %175 %37 
                                         f32 %261 = OpLoad %260 
                                         f32 %262 = OpFMul %259 %261 
                                Private f32* %263 = OpAccessChain %175 %37 
                                                      OpStore %263 %262 
                                Private f32* %264 = OpAccessChain %175 %37 
                                         f32 %265 = OpLoad %264 
                                         f32 %266 = OpLoad %213 
                                         f32 %267 = OpFMul %265 %266 
                                Private f32* %268 = OpAccessChain %175 %37 
                                                      OpStore %268 %267 
                                Private f32* %269 = OpAccessChain %160 %37 
                                         f32 %270 = OpLoad %269 
                                Private f32* %271 = OpAccessChain %175 %37 
                                         f32 %272 = OpLoad %271 
                                         f32 %273 = OpFMul %270 %272 
                                Private f32* %274 = OpAccessChain %160 %37 
                                                      OpStore %274 %273 
                              Uniform f32_4* %276 = OpAccessChain %21 %275 
                                       f32_4 %277 = OpLoad %276 
                                       f32_3 %278 = OpVectorShuffle %277 %277 0 1 2 
                                       f32_3 %279 = OpFNegate %278 
                              Uniform f32_4* %281 = OpAccessChain %21 %280 
                                       f32_4 %282 = OpLoad %281 
                                       f32_3 %283 = OpVectorShuffle %282 %282 0 1 2 
                                       f32_3 %284 = OpFAdd %279 %283 
                                                      OpStore %175 %284 
                              Uniform f32_4* %285 = OpAccessChain %21 %280 
                                       f32_4 %286 = OpLoad %285 
                                       f32_3 %287 = OpVectorShuffle %286 %286 3 3 3 
                                       f32_3 %288 = OpLoad %175 
                                       f32_3 %289 = OpFMul %287 %288 
                              Uniform f32_4* %290 = OpAccessChain %21 %275 
                                       f32_4 %291 = OpLoad %290 
                                       f32_3 %292 = OpVectorShuffle %291 %291 0 1 2 
                                       f32_3 %293 = OpFAdd %289 %292 
                                                      OpStore %175 %293 
                                       f32_3 %295 = OpLoad %175 
                                       f32_3 %296 = OpFNegate %295 
                              Uniform f32_4* %297 = OpAccessChain %21 %275 
                                       f32_4 %298 = OpLoad %297 
                                       f32_3 %299 = OpVectorShuffle %298 %298 0 1 2 
                                       f32_3 %300 = OpFAdd %296 %299 
                                                      OpStore %294 %300 
                                       f32_3 %301 = OpLoad %160 
                                       f32_3 %302 = OpVectorShuffle %301 %301 0 0 0 
                                       f32_3 %303 = OpLoad %294 
                                       f32_3 %304 = OpFMul %302 %303 
                                       f32_3 %305 = OpLoad %175 
                                       f32_3 %306 = OpFAdd %304 %305 
                                                      OpStore %160 %306 
                                       f32_3 %307 = OpLoad vs_TEXCOORD1 
                                       f32_4 %308 = OpLoad %9 
                                       f32_4 %309 = OpVectorShuffle %308 %307 4 5 6 3 
                                                      OpStore %9 %309 
                                Private f32* %310 = OpAccessChain %9 %80 
                                                      OpStore %310 %103 
                              Uniform f32_4* %311 = OpAccessChain %21 %65 
                                       f32_4 %312 = OpLoad %311 
                                       f32_4 %313 = OpLoad %9 
                                         f32 %314 = OpDot %312 %313 
                                Private f32* %315 = OpAccessChain %294 %37 
                                                      OpStore %315 %314 
                              Uniform f32_4* %316 = OpAccessChain %21 %130 
                                       f32_4 %317 = OpLoad %316 
                                       f32_4 %318 = OpLoad %9 
                                         f32 %319 = OpDot %317 %318 
                                Private f32* %320 = OpAccessChain %294 %63 
                                                      OpStore %320 %319 
                              Uniform f32_4* %322 = OpAccessChain %21 %321 
                                       f32_4 %323 = OpLoad %322 
                                       f32_4 %324 = OpLoad %9 
                                         f32 %325 = OpDot %323 %324 
                                Private f32* %326 = OpAccessChain %294 %55 
                                                      OpStore %326 %325 
                                       f32_3 %327 = OpLoad %294 
                                       f32_3 %329 = OpLoad vs_TEXCOORD3 
                                       f32_3 %330 = OpFAdd %327 %329 
                                                      OpStore %294 %330 
                                       f32_3 %331 = OpLoad %294 
                                       f32_3 %333 = OpExtInst %1 40 %331 %332 
                                                      OpStore %294 %333 
                                       f32_3 %334 = OpLoad %294 
                                       f32_3 %335 = OpExtInst %1 30 %334 
                                       f32_4 %336 = OpLoad %9 
                                       f32_4 %337 = OpVectorShuffle %336 %335 4 5 6 3 
                                                      OpStore %9 %337 
                                       f32_4 %338 = OpLoad %9 
                                       f32_3 %339 = OpVectorShuffle %338 %338 0 1 2 
                                       f32_3 %342 = OpFMul %339 %341 
                                       f32_4 %343 = OpLoad %9 
                                       f32_4 %344 = OpVectorShuffle %343 %342 4 5 6 3 
                                                      OpStore %9 %344 
                                       f32_4 %345 = OpLoad %9 
                                       f32_3 %346 = OpVectorShuffle %345 %345 0 1 2 
                                       f32_3 %347 = OpExtInst %1 29 %346 
                                       f32_4 %348 = OpLoad %9 
                                       f32_4 %349 = OpVectorShuffle %348 %347 4 5 6 3 
                                                      OpStore %9 %349 
                                       f32_4 %350 = OpLoad %9 
                                       f32_3 %351 = OpVectorShuffle %350 %350 0 1 2 
                                       f32_3 %354 = OpFMul %351 %353 
                                       f32_3 %357 = OpFAdd %354 %356 
                                       f32_4 %358 = OpLoad %9 
                                       f32_4 %359 = OpVectorShuffle %358 %357 4 5 6 3 
                                                      OpStore %9 %359 
                                       f32_4 %360 = OpLoad %9 
                                       f32_3 %361 = OpVectorShuffle %360 %360 0 1 2 
                                       f32_3 %362 = OpExtInst %1 40 %361 %332 
                                       f32_4 %363 = OpLoad %9 
                                       f32_4 %364 = OpVectorShuffle %363 %362 4 5 6 3 
                                                      OpStore %9 %364 
                         read_only Texture2D %367 = OpLoad %366 
                                     sampler %369 = OpLoad %368 
                  read_only Texture2DSampled %371 = OpSampledImage %367 %369 
                                       f32_2 %374 = OpLoad vs_TEXCOORD0 
                                       f32_4 %375 = OpImageSampleImplicitLod %371 %374 
                                                      OpStore %365 %375 
                                       f32_4 %376 = OpLoad %365 
                                       f32_3 %377 = OpVectorShuffle %376 %376 0 1 2 
                              Uniform f32_4* %379 = OpAccessChain %21 %378 
                                       f32_4 %380 = OpLoad %379 
                                       f32_3 %381 = OpVectorShuffle %380 %380 0 1 2 
                                       f32_3 %382 = OpFMul %377 %381 
                                                      OpStore %294 %382 
                                Private f32* %385 = OpAccessChain %365 %80 
                                         f32 %386 = OpLoad %385 
                                Uniform f32* %387 = OpAccessChain %21 %378 %80 
                                         f32 %388 = OpLoad %387 
                                         f32 %389 = OpFMul %386 %388 
                                 Output f32* %391 = OpAccessChain %384 %80 
                                                      OpStore %391 %389 
                                       f32_4 %393 = OpLoad %9 
                                       f32_3 %394 = OpVectorShuffle %393 %393 0 1 2 
                                       f32_3 %395 = OpLoad %294 
                                       f32_3 %396 = OpFMul %394 %395 
                                                      OpStore %392 %396 
                                       f32_3 %397 = OpLoad %294 
                              Uniform f32_4* %399 = OpAccessChain %21 %398 
                                       f32_4 %400 = OpLoad %399 
                                       f32_3 %401 = OpVectorShuffle %400 %400 0 1 2 
                                       f32_3 %402 = OpFMul %397 %401 
                                                      OpStore %294 %402 
                                       f32_3 %403 = OpLoad %294 
                                       f32_3 %404 = OpLoad %160 
                                       f32_3 %405 = OpFMul %403 %404 
                                       f32_3 %406 = OpLoad %392 
                                       f32_3 %407 = OpFAdd %405 %406 
                                       f32_4 %408 = OpLoad %384 
                                       f32_4 %409 = OpVectorShuffle %408 %407 4 5 6 3 
                                                      OpStore %384 %409 
                                                      OpReturn
                                                      OpFunctionEnd
"
}
}
Program "fp" {
SubProgram "gles3 hw_tier00 " {
Keywords { "DIRECTIONAL" }
""
}
SubProgram "gles3 hw_tier01 " {
Keywords { "DIRECTIONAL" }
""
}
SubProgram "gles3 hw_tier02 " {
Keywords { "DIRECTIONAL" }
""
}
SubProgram "vulkan hw_tier00 " {
Keywords { "DIRECTIONAL" }
""
}
SubProgram "vulkan hw_tier01 " {
Keywords { "DIRECTIONAL" }
""
}
SubProgram "vulkan hw_tier02 " {
Keywords { "DIRECTIONAL" }
""
}
SubProgram "gles3 hw_tier00 " {
Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" }
""
}
SubProgram "gles3 hw_tier01 " {
Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" }
""
}
SubProgram "gles3 hw_tier02 " {
Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" }
""
}
SubProgram "vulkan hw_tier00 " {
Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" }
""
}
SubProgram "vulkan hw_tier01 " {
Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" }
""
}
SubProgram "vulkan hw_tier02 " {
Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" }
""
}
SubProgram "gles3 hw_tier00 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" }
""
}
SubProgram "gles3 hw_tier01 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" }
""
}
SubProgram "gles3 hw_tier02 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" }
""
}
SubProgram "vulkan hw_tier00 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" }
""
}
SubProgram "vulkan hw_tier01 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" }
""
}
SubProgram "vulkan hw_tier02 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" }
""
}
SubProgram "gles3 hw_tier00 " {
Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "SHADOWS_SCREEN" }
""
}
SubProgram "gles3 hw_tier01 " {
Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "SHADOWS_SCREEN" }
""
}
SubProgram "gles3 hw_tier02 " {
Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "SHADOWS_SCREEN" }
""
}
SubProgram "vulkan hw_tier00 " {
Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "SHADOWS_SCREEN" }
""
}
SubProgram "vulkan hw_tier01 " {
Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "SHADOWS_SCREEN" }
""
}
SubProgram "vulkan hw_tier02 " {
Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "SHADOWS_SCREEN" }
""
}
}
}
 Pass {
  Name "FORWARD"
  Tags { "IGNOREPROJECTOR" = "true" "LIGHTMODE" = "FORWARDADD" "QUEUE" = "Transparent" "RenderType" = "Transparent" }
  ZWrite Off
  GpuProgramID 114045
Program "vp" {
SubProgram "gles3 hw_tier00 " {
Keywords { "POINT" }
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToLight[4];
uniform 	vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in highp vec3 in_NORMAL0;
in highp vec4 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out highp vec3 vs_TEXCOORD1;
out highp vec3 vs_TEXCOORD2;
out highp vec3 vs_TEXCOORD3;
out highp vec4 vs_TEXCOORD4;
vec4 u_xlat0;
vec4 u_xlat1;
vec4 u_xlat2;
float u_xlat10;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy;
    u_xlat1.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat1.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat1.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat10 = dot(u_xlat1.xyz, u_xlat1.xyz);
    u_xlat10 = inversesqrt(u_xlat10);
    vs_TEXCOORD1.xyz = vec3(u_xlat10) * u_xlat1.xyz;
    vs_TEXCOORD2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[3] * in_POSITION0.wwww + u_xlat0;
    u_xlat1.xyz = u_xlat0.yyy * hlslcc_mtx4x4unity_WorldToLight[1].xyz;
    u_xlat1.xyz = hlslcc_mtx4x4unity_WorldToLight[0].xyz * u_xlat0.xxx + u_xlat1.xyz;
    u_xlat0.xyz = hlslcc_mtx4x4unity_WorldToLight[2].xyz * u_xlat0.zzz + u_xlat1.xyz;
    vs_TEXCOORD3.xyz = hlslcc_mtx4x4unity_WorldToLight[3].xyz * u_xlat0.www + u_xlat0.xyz;
    vs_TEXCOORD4 = vec4(0.0, 0.0, 0.0, 0.0);
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 _LightColor0;
uniform 	vec4 hlslcc_mtx4x4unity_WorldToLight[4];
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 _HColor;
uniform 	mediump float _RampThreshold;
uniform 	mediump float _RampSmooth;
UNITY_LOCATION(0) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(1) uniform highp sampler2D _LightTexture0;
in mediump vec2 vs_TEXCOORD0;
in highp vec3 vs_TEXCOORD1;
in highp vec3 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec4 u_xlat16_0;
mediump vec3 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump float u_xlat16_4;
mediump float u_xlat16_7;
float u_xlat9;
void main()
{
    u_xlat0.xyz = (-vs_TEXCOORD2.xyz) + _WorldSpaceLightPos0.xyz;
    u_xlat9 = dot(u_xlat0.xyz, u_xlat0.xyz);
    u_xlat9 = inversesqrt(u_xlat9);
    u_xlat0.xyz = vec3(u_xlat9) * u_xlat0.xyz;
    u_xlat16_1.x = dot(vs_TEXCOORD1.xyz, vs_TEXCOORD1.xyz);
    u_xlat16_1.x = inversesqrt(u_xlat16_1.x);
    u_xlat16_1.xyz = u_xlat16_1.xxx * vs_TEXCOORD1.xyz;
    u_xlat16_1.x = dot(u_xlat16_1.xyz, u_xlat0.xyz);
    u_xlat16_1.x = max(u_xlat16_1.x, 0.0);
    u_xlat16_4 = (-_RampSmooth) * 0.5 + _RampThreshold;
    u_xlat16_1.x = (-u_xlat16_4) + u_xlat16_1.x;
    u_xlat16_7 = _RampSmooth * 0.5 + _RampThreshold;
    u_xlat16_4 = (-u_xlat16_4) + u_xlat16_7;
    u_xlat16_4 = float(1.0) / u_xlat16_4;
    u_xlat16_1.x = u_xlat16_4 * u_xlat16_1.x;
#ifdef UNITY_ADRENO_ES3
    u_xlat16_1.x = min(max(u_xlat16_1.x, 0.0), 1.0);
#else
    u_xlat16_1.x = clamp(u_xlat16_1.x, 0.0, 1.0);
#endif
    u_xlat16_4 = u_xlat16_1.x * -2.0 + 3.0;
    u_xlat16_1.x = u_xlat16_1.x * u_xlat16_1.x;
    u_xlat16_1.x = u_xlat16_1.x * u_xlat16_4;
    u_xlat16_1.xyz = u_xlat16_1.xxx * _HColor.xyz;
    u_xlat0.xyz = vs_TEXCOORD2.yyy * hlslcc_mtx4x4unity_WorldToLight[1].xyz;
    u_xlat0.xyz = hlslcc_mtx4x4unity_WorldToLight[0].xyz * vs_TEXCOORD2.xxx + u_xlat0.xyz;
    u_xlat0.xyz = hlslcc_mtx4x4unity_WorldToLight[2].xyz * vs_TEXCOORD2.zzz + u_xlat0.xyz;
    u_xlat0.xyz = u_xlat0.xyz + hlslcc_mtx4x4unity_WorldToLight[3].xyz;
    u_xlat0.x = dot(u_xlat0.xyz, u_xlat0.xyz);
    u_xlat0.x = texture(_LightTexture0, u_xlat0.xx).x;
    u_xlat16_2.xyz = u_xlat0.xxx * _LightColor0.xyz;
    u_xlat16_0 = texture(_MainTex, vs_TEXCOORD0.xy);
    u_xlat16_0 = u_xlat16_0 * _Color;
    u_xlat16_2.xyz = u_xlat16_2.xyz * u_xlat16_0.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * u_xlat16_2.xyz;
    SV_Target0.xyz = u_xlat16_0.www * u_xlat16_1.xyz;
    SV_Target0.w = u_xlat16_0.w;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier01 " {
Keywords { "POINT" }
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToLight[4];
uniform 	vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in highp vec3 in_NORMAL0;
in highp vec4 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out highp vec3 vs_TEXCOORD1;
out highp vec3 vs_TEXCOORD2;
out highp vec3 vs_TEXCOORD3;
out highp vec4 vs_TEXCOORD4;
vec4 u_xlat0;
vec4 u_xlat1;
vec4 u_xlat2;
float u_xlat10;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy;
    u_xlat1.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat1.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat1.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat10 = dot(u_xlat1.xyz, u_xlat1.xyz);
    u_xlat10 = inversesqrt(u_xlat10);
    vs_TEXCOORD1.xyz = vec3(u_xlat10) * u_xlat1.xyz;
    vs_TEXCOORD2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[3] * in_POSITION0.wwww + u_xlat0;
    u_xlat1.xyz = u_xlat0.yyy * hlslcc_mtx4x4unity_WorldToLight[1].xyz;
    u_xlat1.xyz = hlslcc_mtx4x4unity_WorldToLight[0].xyz * u_xlat0.xxx + u_xlat1.xyz;
    u_xlat0.xyz = hlslcc_mtx4x4unity_WorldToLight[2].xyz * u_xlat0.zzz + u_xlat1.xyz;
    vs_TEXCOORD3.xyz = hlslcc_mtx4x4unity_WorldToLight[3].xyz * u_xlat0.www + u_xlat0.xyz;
    vs_TEXCOORD4 = vec4(0.0, 0.0, 0.0, 0.0);
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 _LightColor0;
uniform 	vec4 hlslcc_mtx4x4unity_WorldToLight[4];
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 _HColor;
uniform 	mediump float _RampThreshold;
uniform 	mediump float _RampSmooth;
UNITY_LOCATION(0) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(1) uniform highp sampler2D _LightTexture0;
in mediump vec2 vs_TEXCOORD0;
in highp vec3 vs_TEXCOORD1;
in highp vec3 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec4 u_xlat16_0;
mediump vec3 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump float u_xlat16_4;
mediump float u_xlat16_7;
float u_xlat9;
void main()
{
    u_xlat0.xyz = (-vs_TEXCOORD2.xyz) + _WorldSpaceLightPos0.xyz;
    u_xlat9 = dot(u_xlat0.xyz, u_xlat0.xyz);
    u_xlat9 = inversesqrt(u_xlat9);
    u_xlat0.xyz = vec3(u_xlat9) * u_xlat0.xyz;
    u_xlat16_1.x = dot(vs_TEXCOORD1.xyz, vs_TEXCOORD1.xyz);
    u_xlat16_1.x = inversesqrt(u_xlat16_1.x);
    u_xlat16_1.xyz = u_xlat16_1.xxx * vs_TEXCOORD1.xyz;
    u_xlat16_1.x = dot(u_xlat16_1.xyz, u_xlat0.xyz);
    u_xlat16_1.x = max(u_xlat16_1.x, 0.0);
    u_xlat16_4 = (-_RampSmooth) * 0.5 + _RampThreshold;
    u_xlat16_1.x = (-u_xlat16_4) + u_xlat16_1.x;
    u_xlat16_7 = _RampSmooth * 0.5 + _RampThreshold;
    u_xlat16_4 = (-u_xlat16_4) + u_xlat16_7;
    u_xlat16_4 = float(1.0) / u_xlat16_4;
    u_xlat16_1.x = u_xlat16_4 * u_xlat16_1.x;
#ifdef UNITY_ADRENO_ES3
    u_xlat16_1.x = min(max(u_xlat16_1.x, 0.0), 1.0);
#else
    u_xlat16_1.x = clamp(u_xlat16_1.x, 0.0, 1.0);
#endif
    u_xlat16_4 = u_xlat16_1.x * -2.0 + 3.0;
    u_xlat16_1.x = u_xlat16_1.x * u_xlat16_1.x;
    u_xlat16_1.x = u_xlat16_1.x * u_xlat16_4;
    u_xlat16_1.xyz = u_xlat16_1.xxx * _HColor.xyz;
    u_xlat0.xyz = vs_TEXCOORD2.yyy * hlslcc_mtx4x4unity_WorldToLight[1].xyz;
    u_xlat0.xyz = hlslcc_mtx4x4unity_WorldToLight[0].xyz * vs_TEXCOORD2.xxx + u_xlat0.xyz;
    u_xlat0.xyz = hlslcc_mtx4x4unity_WorldToLight[2].xyz * vs_TEXCOORD2.zzz + u_xlat0.xyz;
    u_xlat0.xyz = u_xlat0.xyz + hlslcc_mtx4x4unity_WorldToLight[3].xyz;
    u_xlat0.x = dot(u_xlat0.xyz, u_xlat0.xyz);
    u_xlat0.x = texture(_LightTexture0, u_xlat0.xx).x;
    u_xlat16_2.xyz = u_xlat0.xxx * _LightColor0.xyz;
    u_xlat16_0 = texture(_MainTex, vs_TEXCOORD0.xy);
    u_xlat16_0 = u_xlat16_0 * _Color;
    u_xlat16_2.xyz = u_xlat16_2.xyz * u_xlat16_0.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * u_xlat16_2.xyz;
    SV_Target0.xyz = u_xlat16_0.www * u_xlat16_1.xyz;
    SV_Target0.w = u_xlat16_0.w;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier02 " {
Keywords { "POINT" }
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToLight[4];
uniform 	vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in highp vec3 in_NORMAL0;
in highp vec4 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out highp vec3 vs_TEXCOORD1;
out highp vec3 vs_TEXCOORD2;
out highp vec3 vs_TEXCOORD3;
out highp vec4 vs_TEXCOORD4;
vec4 u_xlat0;
vec4 u_xlat1;
vec4 u_xlat2;
float u_xlat10;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy;
    u_xlat1.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat1.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat1.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat10 = dot(u_xlat1.xyz, u_xlat1.xyz);
    u_xlat10 = inversesqrt(u_xlat10);
    vs_TEXCOORD1.xyz = vec3(u_xlat10) * u_xlat1.xyz;
    vs_TEXCOORD2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[3] * in_POSITION0.wwww + u_xlat0;
    u_xlat1.xyz = u_xlat0.yyy * hlslcc_mtx4x4unity_WorldToLight[1].xyz;
    u_xlat1.xyz = hlslcc_mtx4x4unity_WorldToLight[0].xyz * u_xlat0.xxx + u_xlat1.xyz;
    u_xlat0.xyz = hlslcc_mtx4x4unity_WorldToLight[2].xyz * u_xlat0.zzz + u_xlat1.xyz;
    vs_TEXCOORD3.xyz = hlslcc_mtx4x4unity_WorldToLight[3].xyz * u_xlat0.www + u_xlat0.xyz;
    vs_TEXCOORD4 = vec4(0.0, 0.0, 0.0, 0.0);
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 _LightColor0;
uniform 	vec4 hlslcc_mtx4x4unity_WorldToLight[4];
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 _HColor;
uniform 	mediump float _RampThreshold;
uniform 	mediump float _RampSmooth;
UNITY_LOCATION(0) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(1) uniform highp sampler2D _LightTexture0;
in mediump vec2 vs_TEXCOORD0;
in highp vec3 vs_TEXCOORD1;
in highp vec3 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec4 u_xlat16_0;
mediump vec3 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump float u_xlat16_4;
mediump float u_xlat16_7;
float u_xlat9;
void main()
{
    u_xlat0.xyz = (-vs_TEXCOORD2.xyz) + _WorldSpaceLightPos0.xyz;
    u_xlat9 = dot(u_xlat0.xyz, u_xlat0.xyz);
    u_xlat9 = inversesqrt(u_xlat9);
    u_xlat0.xyz = vec3(u_xlat9) * u_xlat0.xyz;
    u_xlat16_1.x = dot(vs_TEXCOORD1.xyz, vs_TEXCOORD1.xyz);
    u_xlat16_1.x = inversesqrt(u_xlat16_1.x);
    u_xlat16_1.xyz = u_xlat16_1.xxx * vs_TEXCOORD1.xyz;
    u_xlat16_1.x = dot(u_xlat16_1.xyz, u_xlat0.xyz);
    u_xlat16_1.x = max(u_xlat16_1.x, 0.0);
    u_xlat16_4 = (-_RampSmooth) * 0.5 + _RampThreshold;
    u_xlat16_1.x = (-u_xlat16_4) + u_xlat16_1.x;
    u_xlat16_7 = _RampSmooth * 0.5 + _RampThreshold;
    u_xlat16_4 = (-u_xlat16_4) + u_xlat16_7;
    u_xlat16_4 = float(1.0) / u_xlat16_4;
    u_xlat16_1.x = u_xlat16_4 * u_xlat16_1.x;
#ifdef UNITY_ADRENO_ES3
    u_xlat16_1.x = min(max(u_xlat16_1.x, 0.0), 1.0);
#else
    u_xlat16_1.x = clamp(u_xlat16_1.x, 0.0, 1.0);
#endif
    u_xlat16_4 = u_xlat16_1.x * -2.0 + 3.0;
    u_xlat16_1.x = u_xlat16_1.x * u_xlat16_1.x;
    u_xlat16_1.x = u_xlat16_1.x * u_xlat16_4;
    u_xlat16_1.xyz = u_xlat16_1.xxx * _HColor.xyz;
    u_xlat0.xyz = vs_TEXCOORD2.yyy * hlslcc_mtx4x4unity_WorldToLight[1].xyz;
    u_xlat0.xyz = hlslcc_mtx4x4unity_WorldToLight[0].xyz * vs_TEXCOORD2.xxx + u_xlat0.xyz;
    u_xlat0.xyz = hlslcc_mtx4x4unity_WorldToLight[2].xyz * vs_TEXCOORD2.zzz + u_xlat0.xyz;
    u_xlat0.xyz = u_xlat0.xyz + hlslcc_mtx4x4unity_WorldToLight[3].xyz;
    u_xlat0.x = dot(u_xlat0.xyz, u_xlat0.xyz);
    u_xlat0.x = texture(_LightTexture0, u_xlat0.xx).x;
    u_xlat16_2.xyz = u_xlat0.xxx * _LightColor0.xyz;
    u_xlat16_0 = texture(_MainTex, vs_TEXCOORD0.xy);
    u_xlat16_0 = u_xlat16_0 * _Color;
    u_xlat16_2.xyz = u_xlat16_2.xyz * u_xlat16_0.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * u_xlat16_2.xyz;
    SV_Target0.xyz = u_xlat16_0.www * u_xlat16_1.xyz;
    SV_Target0.w = u_xlat16_0.w;
    return;
}

#endif
"
}
SubProgram "vulkan hw_tier00 " {
Keywords { "POINT" }
"; SPIR-V
; Version: 1.0
; Generator: Khronos Glslang Reference Front End; 6
; Bound: 209
; Schema: 0
                                                      OpCapability Shader 
                                               %1 = OpExtInstImport "GLSL.std.450" 
                                                      OpMemoryModel Logical GLSL450 
                                                      OpEntryPoint Vertex %4 "main" %11 %75 %85 %101 %106 %137 %143 %190 %200 
                                                      OpName vs_TEXCOORD0 "vs_TEXCOORD0" 
                                                      OpName vs_TEXCOORD1 "vs_TEXCOORD1" 
                                                      OpName vs_TEXCOORD2 "vs_TEXCOORD2" 
                                                      OpName vs_TEXCOORD3 "vs_TEXCOORD3" 
                                                      OpName vs_TEXCOORD4 "vs_TEXCOORD4" 
                                                      OpDecorate %11 Location 11 
                                                      OpDecorate %16 ArrayStride 16 
                                                      OpDecorate %17 ArrayStride 17 
                                                      OpDecorate %18 ArrayStride 18 
                                                      OpDecorate %19 ArrayStride 19 
                                                      OpMemberDecorate %20 0 Offset 20 
                                                      OpMemberDecorate %20 1 Offset 20 
                                                      OpMemberDecorate %20 2 Offset 20 
                                                      OpMemberDecorate %20 3 Offset 20 
                                                      OpMemberDecorate %20 4 Offset 20 
                                                      OpDecorate %20 Block 
                                                      OpDecorate %22 DescriptorSet 22 
                                                      OpDecorate %22 Binding 22 
                                                      OpMemberDecorate %73 0 BuiltIn 73 
                                                      OpMemberDecorate %73 1 BuiltIn 73 
                                                      OpMemberDecorate %73 2 BuiltIn 73 
                                                      OpDecorate %73 Block 
                                                      OpDecorate %85 Location 85 
                                                      OpDecorate vs_TEXCOORD0 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD0 Location 101 
                                                      OpDecorate %106 Location 106 
                                                      OpDecorate vs_TEXCOORD1 Location 137 
                                                      OpDecorate vs_TEXCOORD2 Location 143 
                                                      OpDecorate vs_TEXCOORD3 Location 190 
                                                      OpDecorate vs_TEXCOORD4 Location 200 
                                               %2 = OpTypeVoid 
                                               %3 = OpTypeFunction %2 
                                               %6 = OpTypeFloat 32 
                                               %7 = OpTypeVector %6 4 
                                               %8 = OpTypePointer Private %7 
                                Private f32_4* %9 = OpVariable Private 
                                              %10 = OpTypePointer Input %7 
                                 Input f32_4* %11 = OpVariable Input 
                                              %14 = OpTypeInt 32 0 
                                          u32 %15 = OpConstant 4 
                                              %16 = OpTypeArray %7 %15 
                                              %17 = OpTypeArray %7 %15 
                                              %18 = OpTypeArray %7 %15 
                                              %19 = OpTypeArray %7 %15 
                                              %20 = OpTypeStruct %16 %17 %18 %19 %7 
                                              %21 = OpTypePointer Uniform %20 
Uniform struct {f32_4[4]; f32_4[4]; f32_4[4]; f32_4[4]; f32_4;}* %22 = OpVariable Uniform 
                                              %23 = OpTypeInt 32 1 
                                          i32 %24 = OpConstant 0 
                                          i32 %25 = OpConstant 1 
                                              %26 = OpTypePointer Uniform %7 
                                          i32 %37 = OpConstant 2 
                               Private f32_4* %45 = OpVariable Private 
                                          i32 %47 = OpConstant 3 
                               Private f32_4* %51 = OpVariable Private 
                                          u32 %71 = OpConstant 1 
                                              %72 = OpTypeArray %6 %71 
                                              %73 = OpTypeStruct %7 %6 %72 
                                              %74 = OpTypePointer Output %73 
         Output struct {f32_4; f32; f32[1];}* %75 = OpVariable Output 
                                              %83 = OpTypePointer Output %7 
                                 Input f32_4* %85 = OpVariable Input 
                                              %86 = OpTypeVector %6 2 
                                          i32 %89 = OpConstant 4 
                                             %100 = OpTypePointer Output %86 
                       Output f32_2* vs_TEXCOORD0 = OpVariable Output 
                                             %104 = OpTypeVector %6 3 
                                             %105 = OpTypePointer Input %104 
                                Input f32_3* %106 = OpVariable Input 
                                         u32 %112 = OpConstant 0 
                                             %113 = OpTypePointer Private %6 
                                         u32 %126 = OpConstant 2 
                                Private f32* %128 = OpVariable Private 
                                             %136 = OpTypePointer Output %104 
                       Output f32_3* vs_TEXCOORD1 = OpVariable Output 
                       Output f32_3* vs_TEXCOORD2 = OpVariable Output 
                       Output f32_3* vs_TEXCOORD3 = OpVariable Output 
                       Output f32_4* vs_TEXCOORD4 = OpVariable Output 
                                         f32 %201 = OpConstant 3.674022E-40 
                                       f32_4 %202 = OpConstantComposite %201 %201 %201 %201 
                                             %203 = OpTypePointer Output %6 
                                          void %4 = OpFunction None %3 
                                               %5 = OpLabel 
                                        f32_4 %12 = OpLoad %11 
                                        f32_4 %13 = OpVectorShuffle %12 %12 1 1 1 1 
                               Uniform f32_4* %27 = OpAccessChain %22 %24 %25 
                                        f32_4 %28 = OpLoad %27 
                                        f32_4 %29 = OpFMul %13 %28 
                                                      OpStore %9 %29 
                               Uniform f32_4* %30 = OpAccessChain %22 %24 %24 
                                        f32_4 %31 = OpLoad %30 
                                        f32_4 %32 = OpLoad %11 
                                        f32_4 %33 = OpVectorShuffle %32 %32 0 0 0 0 
                                        f32_4 %34 = OpFMul %31 %33 
                                        f32_4 %35 = OpLoad %9 
                                        f32_4 %36 = OpFAdd %34 %35 
                                                      OpStore %9 %36 
                               Uniform f32_4* %38 = OpAccessChain %22 %24 %37 
                                        f32_4 %39 = OpLoad %38 
                                        f32_4 %40 = OpLoad %11 
                                        f32_4 %41 = OpVectorShuffle %40 %40 2 2 2 2 
                                        f32_4 %42 = OpFMul %39 %41 
                                        f32_4 %43 = OpLoad %9 
                                        f32_4 %44 = OpFAdd %42 %43 
                                                      OpStore %9 %44 
                                        f32_4 %46 = OpLoad %9 
                               Uniform f32_4* %48 = OpAccessChain %22 %24 %47 
                                        f32_4 %49 = OpLoad %48 
                                        f32_4 %50 = OpFAdd %46 %49 
                                                      OpStore %45 %50 
                                        f32_4 %52 = OpLoad %45 
                                        f32_4 %53 = OpVectorShuffle %52 %52 1 1 1 1 
                               Uniform f32_4* %54 = OpAccessChain %22 %37 %25 
                                        f32_4 %55 = OpLoad %54 
                                        f32_4 %56 = OpFMul %53 %55 
                                                      OpStore %51 %56 
                               Uniform f32_4* %57 = OpAccessChain %22 %37 %24 
                                        f32_4 %58 = OpLoad %57 
                                        f32_4 %59 = OpLoad %45 
                                        f32_4 %60 = OpVectorShuffle %59 %59 0 0 0 0 
                                        f32_4 %61 = OpFMul %58 %60 
                                        f32_4 %62 = OpLoad %51 
                                        f32_4 %63 = OpFAdd %61 %62 
                                                      OpStore %51 %63 
                               Uniform f32_4* %64 = OpAccessChain %22 %37 %37 
                                        f32_4 %65 = OpLoad %64 
                                        f32_4 %66 = OpLoad %45 
                                        f32_4 %67 = OpVectorShuffle %66 %66 2 2 2 2 
                                        f32_4 %68 = OpFMul %65 %67 
                                        f32_4 %69 = OpLoad %51 
                                        f32_4 %70 = OpFAdd %68 %69 
                                                      OpStore %51 %70 
                               Uniform f32_4* %76 = OpAccessChain %22 %37 %47 
                                        f32_4 %77 = OpLoad %76 
                                        f32_4 %78 = OpLoad %45 
                                        f32_4 %79 = OpVectorShuffle %78 %78 3 3 3 3 
                                        f32_4 %80 = OpFMul %77 %79 
                                        f32_4 %81 = OpLoad %51 
                                        f32_4 %82 = OpFAdd %80 %81 
                                Output f32_4* %84 = OpAccessChain %75 %24 
                                                      OpStore %84 %82 
                                        f32_4 %87 = OpLoad %85 
                                        f32_2 %88 = OpVectorShuffle %87 %87 0 1 
                               Uniform f32_4* %90 = OpAccessChain %22 %89 
                                        f32_4 %91 = OpLoad %90 
                                        f32_2 %92 = OpVectorShuffle %91 %91 0 1 
                                        f32_2 %93 = OpFMul %88 %92 
                               Uniform f32_4* %94 = OpAccessChain %22 %89 
                                        f32_4 %95 = OpLoad %94 
                                        f32_2 %96 = OpVectorShuffle %95 %95 2 3 
                                        f32_2 %97 = OpFAdd %93 %96 
                                        f32_4 %98 = OpLoad %45 
                                        f32_4 %99 = OpVectorShuffle %98 %97 4 5 2 3 
                                                      OpStore %45 %99 
                                       f32_4 %102 = OpLoad %45 
                                       f32_2 %103 = OpVectorShuffle %102 %102 0 1 
                                                      OpStore vs_TEXCOORD0 %103 
                                       f32_3 %107 = OpLoad %106 
                              Uniform f32_4* %108 = OpAccessChain %22 %25 %24 
                                       f32_4 %109 = OpLoad %108 
                                       f32_3 %110 = OpVectorShuffle %109 %109 0 1 2 
                                         f32 %111 = OpDot %107 %110 
                                Private f32* %114 = OpAccessChain %45 %112 
                                                      OpStore %114 %111 
                                       f32_3 %115 = OpLoad %106 
                              Uniform f32_4* %116 = OpAccessChain %22 %25 %25 
                                       f32_4 %117 = OpLoad %116 
                                       f32_3 %118 = OpVectorShuffle %117 %117 0 1 2 
                                         f32 %119 = OpDot %115 %118 
                                Private f32* %120 = OpAccessChain %45 %71 
                                                      OpStore %120 %119 
                                       f32_3 %121 = OpLoad %106 
                              Uniform f32_4* %122 = OpAccessChain %22 %25 %37 
                                       f32_4 %123 = OpLoad %122 
                                       f32_3 %124 = OpVectorShuffle %123 %123 0 1 2 
                                         f32 %125 = OpDot %121 %124 
                                Private f32* %127 = OpAccessChain %45 %126 
                                                      OpStore %127 %125 
                                       f32_4 %129 = OpLoad %45 
                                       f32_3 %130 = OpVectorShuffle %129 %129 0 1 2 
                                       f32_4 %131 = OpLoad %45 
                                       f32_3 %132 = OpVectorShuffle %131 %131 0 1 2 
                                         f32 %133 = OpDot %130 %132 
                                                      OpStore %128 %133 
                                         f32 %134 = OpLoad %128 
                                         f32 %135 = OpExtInst %1 32 %134 
                                                      OpStore %128 %135 
                                         f32 %138 = OpLoad %128 
                                       f32_3 %139 = OpCompositeConstruct %138 %138 %138 
                                       f32_4 %140 = OpLoad %45 
                                       f32_3 %141 = OpVectorShuffle %140 %140 0 1 2 
                                       f32_3 %142 = OpFMul %139 %141 
                                                      OpStore vs_TEXCOORD1 %142 
                              Uniform f32_4* %144 = OpAccessChain %22 %24 %47 
                                       f32_4 %145 = OpLoad %144 
                                       f32_3 %146 = OpVectorShuffle %145 %145 0 1 2 
                                       f32_4 %147 = OpLoad %11 
                                       f32_3 %148 = OpVectorShuffle %147 %147 3 3 3 
                                       f32_3 %149 = OpFMul %146 %148 
                                       f32_4 %150 = OpLoad %9 
                                       f32_3 %151 = OpVectorShuffle %150 %150 0 1 2 
                                       f32_3 %152 = OpFAdd %149 %151 
                                                      OpStore vs_TEXCOORD2 %152 
                              Uniform f32_4* %153 = OpAccessChain %22 %24 %47 
                                       f32_4 %154 = OpLoad %153 
                                       f32_4 %155 = OpLoad %11 
                                       f32_4 %156 = OpVectorShuffle %155 %155 3 3 3 3 
                                       f32_4 %157 = OpFMul %154 %156 
                                       f32_4 %158 = OpLoad %9 
                                       f32_4 %159 = OpFAdd %157 %158 
                                                      OpStore %9 %159 
                                       f32_4 %160 = OpLoad %9 
                                       f32_3 %161 = OpVectorShuffle %160 %160 1 1 1 
                              Uniform f32_4* %162 = OpAccessChain %22 %47 %25 
                                       f32_4 %163 = OpLoad %162 
                                       f32_3 %164 = OpVectorShuffle %163 %163 0 1 2 
                                       f32_3 %165 = OpFMul %161 %164 
                                       f32_4 %166 = OpLoad %45 
                                       f32_4 %167 = OpVectorShuffle %166 %165 4 5 6 3 
                                                      OpStore %45 %167 
                              Uniform f32_4* %168 = OpAccessChain %22 %47 %24 
                                       f32_4 %169 = OpLoad %168 
                                       f32_3 %170 = OpVectorShuffle %169 %169 0 1 2 
                                       f32_4 %171 = OpLoad %9 
                                       f32_3 %172 = OpVectorShuffle %171 %171 0 0 0 
                                       f32_3 %173 = OpFMul %170 %172 
                                       f32_4 %174 = OpLoad %45 
                                       f32_3 %175 = OpVectorShuffle %174 %174 0 1 2 
                                       f32_3 %176 = OpFAdd %173 %175 
                                       f32_4 %177 = OpLoad %45 
                                       f32_4 %178 = OpVectorShuffle %177 %176 4 5 6 3 
                                                      OpStore %45 %178 
                              Uniform f32_4* %179 = OpAccessChain %22 %47 %37 
                                       f32_4 %180 = OpLoad %179 
                                       f32_3 %181 = OpVectorShuffle %180 %180 0 1 2 
                                       f32_4 %182 = OpLoad %9 
                                       f32_3 %183 = OpVectorShuffle %182 %182 2 2 2 
                                       f32_3 %184 = OpFMul %181 %183 
                                       f32_4 %185 = OpLoad %45 
                                       f32_3 %186 = OpVectorShuffle %185 %185 0 1 2 
                                       f32_3 %187 = OpFAdd %184 %186 
                                       f32_4 %188 = OpLoad %9 
                                       f32_4 %189 = OpVectorShuffle %188 %187 4 5 6 3 
                                                      OpStore %9 %189 
                              Uniform f32_4* %191 = OpAccessChain %22 %47 %47 
                                       f32_4 %192 = OpLoad %191 
                                       f32_3 %193 = OpVectorShuffle %192 %192 0 1 2 
                                       f32_4 %194 = OpLoad %9 
                                       f32_3 %195 = OpVectorShuffle %194 %194 3 3 3 
                                       f32_3 %196 = OpFMul %193 %195 
                                       f32_4 %197 = OpLoad %9 
                                       f32_3 %198 = OpVectorShuffle %197 %197 0 1 2 
                                       f32_3 %199 = OpFAdd %196 %198 
                                                      OpStore vs_TEXCOORD3 %199 
                                                      OpStore vs_TEXCOORD4 %202 
                                 Output f32* %204 = OpAccessChain %75 %24 %71 
                                         f32 %205 = OpLoad %204 
                                         f32 %206 = OpFNegate %205 
                                 Output f32* %207 = OpAccessChain %75 %24 %71 
                                                      OpStore %207 %206 
                                                      OpReturn
                                                      OpFunctionEnd
; SPIR-V
; Version: 1.0
; Generator: Khronos Glslang Reference Front End; 6
; Bound: 222
; Schema: 0
                                                      OpCapability Shader 
                                               %1 = OpExtInstImport "GLSL.std.450" 
                                                      OpMemoryModel Logical GLSL450 
                                                      OpEntryPoint Fragment %4 "main" %11 %40 %193 %209 
                                                      OpExecutionMode %4 OriginUpperLeft 
                                                      OpName vs_TEXCOORD2 "vs_TEXCOORD2" 
                                                      OpName vs_TEXCOORD1 "vs_TEXCOORD1" 
                                                      OpName vs_TEXCOORD0 "vs_TEXCOORD0" 
                                                      OpDecorate vs_TEXCOORD2 Location 11 
                                                      OpDecorate %17 ArrayStride 17 
                                                      OpMemberDecorate %18 0 Offset 18 
                                                      OpMemberDecorate %18 1 RelaxedPrecision 
                                                      OpMemberDecorate %18 1 Offset 18 
                                                      OpMemberDecorate %18 2 Offset 18 
                                                      OpMemberDecorate %18 3 RelaxedPrecision 
                                                      OpMemberDecorate %18 3 Offset 18 
                                                      OpMemberDecorate %18 4 RelaxedPrecision 
                                                      OpMemberDecorate %18 4 Offset 18 
                                                      OpMemberDecorate %18 5 RelaxedPrecision 
                                                      OpMemberDecorate %18 5 Offset 18 
                                                      OpMemberDecorate %18 6 RelaxedPrecision 
                                                      OpMemberDecorate %18 6 Offset 18 
                                                      OpDecorate %18 Block 
                                                      OpDecorate %20 DescriptorSet 20 
                                                      OpDecorate %20 Binding 20 
                                                      OpDecorate %39 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD1 Location 40 
                                                      OpDecorate %47 RelaxedPrecision 
                                                      OpDecorate %48 RelaxedPrecision 
                                                      OpDecorate %50 RelaxedPrecision 
                                                      OpDecorate %51 RelaxedPrecision 
                                                      OpDecorate %54 RelaxedPrecision 
                                                      OpDecorate %59 RelaxedPrecision 
                                                      OpDecorate %61 RelaxedPrecision 
                                                      OpDecorate %63 RelaxedPrecision 
                                                      OpDecorate %67 RelaxedPrecision 
                                                      OpDecorate %68 RelaxedPrecision 
                                                      OpDecorate %70 RelaxedPrecision 
                                                      OpDecorate %73 RelaxedPrecision 
                                                      OpDecorate %74 RelaxedPrecision 
                                                      OpDecorate %75 RelaxedPrecision 
                                                      OpDecorate %76 RelaxedPrecision 
                                                      OpDecorate %78 RelaxedPrecision 
                                                      OpDecorate %79 RelaxedPrecision 
                                                      OpDecorate %81 RelaxedPrecision 
                                                      OpDecorate %83 RelaxedPrecision 
                                                      OpDecorate %84 RelaxedPrecision 
                                                      OpDecorate %86 RelaxedPrecision 
                                                      OpDecorate %87 RelaxedPrecision 
                                                      OpDecorate %88 RelaxedPrecision 
                                                      OpDecorate %89 RelaxedPrecision 
                                                      OpDecorate %90 RelaxedPrecision 
                                                      OpDecorate %91 RelaxedPrecision 
                                                      OpDecorate %93 RelaxedPrecision 
                                                      OpDecorate %94 RelaxedPrecision 
                                                      OpDecorate %95 RelaxedPrecision 
                                                      OpDecorate %97 RelaxedPrecision 
                                                      OpDecorate %98 RelaxedPrecision 
                                                      OpDecorate %101 RelaxedPrecision 
                                                      OpDecorate %102 RelaxedPrecision 
                                                      OpDecorate %105 RelaxedPrecision 
                                                      OpDecorate %107 RelaxedPrecision 
                                                      OpDecorate %109 RelaxedPrecision 
                                                      OpDecorate %111 RelaxedPrecision 
                                                      OpDecorate %113 RelaxedPrecision 
                                                      OpDecorate %114 RelaxedPrecision 
                                                      OpDecorate %117 RelaxedPrecision 
                                                      OpDecorate %118 RelaxedPrecision 
                                                      OpDecorate %119 RelaxedPrecision 
                                                      OpDecorate %121 RelaxedPrecision 
                                                      OpDecorate %122 RelaxedPrecision 
                                                      OpDecorate %125 RelaxedPrecision 
                                                      OpDecorate %126 RelaxedPrecision 
                                                      OpDecorate %127 RelaxedPrecision 
                                                      OpDecorate %164 DescriptorSet 164 
                                                      OpDecorate %164 Binding 164 
                                                      OpDecorate %168 DescriptorSet 168 
                                                      OpDecorate %168 Binding 168 
                                                      OpDecorate %178 RelaxedPrecision 
                                                      OpDecorate %182 RelaxedPrecision 
                                                      OpDecorate %183 RelaxedPrecision 
                                                      OpDecorate %186 RelaxedPrecision 
                                                      OpDecorate %187 RelaxedPrecision 
                                                      OpDecorate %187 DescriptorSet 187 
                                                      OpDecorate %187 Binding 187 
                                                      OpDecorate %188 RelaxedPrecision 
                                                      OpDecorate %189 RelaxedPrecision 
                                                      OpDecorate %189 DescriptorSet 189 
                                                      OpDecorate %189 Binding 189 
                                                      OpDecorate %190 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD0 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD0 Location 193 
                                                      OpDecorate %194 RelaxedPrecision 
                                                      OpDecorate %195 RelaxedPrecision 
                                                      OpDecorate %196 RelaxedPrecision 
                                                      OpDecorate %197 RelaxedPrecision 
                                                      OpDecorate %199 RelaxedPrecision 
                                                      OpDecorate %200 RelaxedPrecision 
                                                      OpDecorate %201 RelaxedPrecision 
                                                      OpDecorate %202 RelaxedPrecision 
                                                      OpDecorate %203 RelaxedPrecision 
                                                      OpDecorate %204 RelaxedPrecision 
                                                      OpDecorate %205 RelaxedPrecision 
                                                      OpDecorate %206 RelaxedPrecision 
                                                      OpDecorate %207 RelaxedPrecision 
                                                      OpDecorate %209 RelaxedPrecision 
                                                      OpDecorate %209 Location 209 
                                                      OpDecorate %210 RelaxedPrecision 
                                                      OpDecorate %211 RelaxedPrecision 
                                                      OpDecorate %212 RelaxedPrecision 
                                                      OpDecorate %213 RelaxedPrecision 
                                                      OpDecorate %218 RelaxedPrecision 
                                               %2 = OpTypeVoid 
                                               %3 = OpTypeFunction %2 
                                               %6 = OpTypeFloat 32 
                                               %7 = OpTypeVector %6 3 
                                               %8 = OpTypePointer Private %7 
                                Private f32_3* %9 = OpVariable Private 
                                              %10 = OpTypePointer Input %7 
                        Input f32_3* vs_TEXCOORD2 = OpVariable Input 
                                              %14 = OpTypeVector %6 4 
                                              %15 = OpTypeInt 32 0 
                                          u32 %16 = OpConstant 4 
                                              %17 = OpTypeArray %14 %16 
                                              %18 = OpTypeStruct %14 %14 %17 %14 %14 %6 %6 
                                              %19 = OpTypePointer Uniform %18 
Uniform struct {f32_4; f32_4; f32_4[4]; f32_4; f32_4; f32; f32;}* %20 = OpVariable Uniform 
                                              %21 = OpTypeInt 32 1 
                                          i32 %22 = OpConstant 0 
                                              %23 = OpTypePointer Uniform %14 
                                              %28 = OpTypePointer Private %6 
                                 Private f32* %29 = OpVariable Private 
                               Private f32_3* %39 = OpVariable Private 
                        Input f32_3* vs_TEXCOORD1 = OpVariable Input 
                                          u32 %44 = OpConstant 0 
                                          f32 %60 = OpConstant 3.674022E-40 
                                 Private f32* %63 = OpVariable Private 
                                          i32 %64 = OpConstant 6 
                                              %65 = OpTypePointer Uniform %6 
                                          f32 %69 = OpConstant 3.674022E-40 
                                          i32 %71 = OpConstant 5 
                                 Private f32* %81 = OpVariable Private 
                                          f32 %92 = OpConstant 3.674022E-40 
                                         f32 %106 = OpConstant 3.674022E-40 
                                         f32 %108 = OpConstant 3.674022E-40 
                                         i32 %123 = OpConstant 4 
                                         i32 %130 = OpConstant 2 
                                         i32 %131 = OpConstant 1 
                                         i32 %153 = OpConstant 3 
                                             %162 = OpTypeImage %6 Dim2D 0 0 0 1 Unknown 
                                             %163 = OpTypePointer UniformConstant %162 
        UniformConstant read_only Texture2D* %164 = OpVariable UniformConstant 
                                             %166 = OpTypeSampler 
                                             %167 = OpTypePointer UniformConstant %166 
                    UniformConstant sampler* %168 = OpVariable UniformConstant 
                                             %170 = OpTypeSampledImage %162 
                                             %172 = OpTypeVector %6 2 
                              Private f32_3* %178 = OpVariable Private 
                                             %185 = OpTypePointer Private %14 
                              Private f32_4* %186 = OpVariable Private 
        UniformConstant read_only Texture2D* %187 = OpVariable UniformConstant 
                    UniformConstant sampler* %189 = OpVariable UniformConstant 
                                             %192 = OpTypePointer Input %172 
                        Input f32_2* vs_TEXCOORD0 = OpVariable Input 
                              Private f32_4* %196 = OpVariable Private 
                                             %208 = OpTypePointer Output %14 
                               Output f32_4* %209 = OpVariable Output 
                                         u32 %216 = OpConstant 3 
                                             %219 = OpTypePointer Output %6 
                                          void %4 = OpFunction None %3 
                                               %5 = OpLabel 
                                        f32_3 %12 = OpLoad vs_TEXCOORD2 
                                        f32_3 %13 = OpFNegate %12 
                               Uniform f32_4* %24 = OpAccessChain %20 %22 
                                        f32_4 %25 = OpLoad %24 
                                        f32_3 %26 = OpVectorShuffle %25 %25 0 1 2 
                                        f32_3 %27 = OpFAdd %13 %26 
                                                      OpStore %9 %27 
                                        f32_3 %30 = OpLoad %9 
                                        f32_3 %31 = OpLoad %9 
                                          f32 %32 = OpDot %30 %31 
                                                      OpStore %29 %32 
                                          f32 %33 = OpLoad %29 
                                          f32 %34 = OpExtInst %1 32 %33 
                                                      OpStore %29 %34 
                                          f32 %35 = OpLoad %29 
                                        f32_3 %36 = OpCompositeConstruct %35 %35 %35 
                                        f32_3 %37 = OpLoad %9 
                                        f32_3 %38 = OpFMul %36 %37 
                                                      OpStore %9 %38 
                                        f32_3 %41 = OpLoad vs_TEXCOORD1 
                                        f32_3 %42 = OpLoad vs_TEXCOORD1 
                                          f32 %43 = OpDot %41 %42 
                                 Private f32* %45 = OpAccessChain %39 %44 
                                                      OpStore %45 %43 
                                 Private f32* %46 = OpAccessChain %39 %44 
                                          f32 %47 = OpLoad %46 
                                          f32 %48 = OpExtInst %1 32 %47 
                                 Private f32* %49 = OpAccessChain %39 %44 
                                                      OpStore %49 %48 
                                        f32_3 %50 = OpLoad %39 
                                        f32_3 %51 = OpVectorShuffle %50 %50 0 0 0 
                                        f32_3 %52 = OpLoad vs_TEXCOORD1 
                                        f32_3 %53 = OpFMul %51 %52 
                                                      OpStore %39 %53 
                                        f32_3 %54 = OpLoad %39 
                                        f32_3 %55 = OpLoad %9 
                                          f32 %56 = OpDot %54 %55 
                                 Private f32* %57 = OpAccessChain %39 %44 
                                                      OpStore %57 %56 
                                 Private f32* %58 = OpAccessChain %39 %44 
                                          f32 %59 = OpLoad %58 
                                          f32 %61 = OpExtInst %1 40 %59 %60 
                                 Private f32* %62 = OpAccessChain %39 %44 
                                                      OpStore %62 %61 
                                 Uniform f32* %66 = OpAccessChain %20 %64 
                                          f32 %67 = OpLoad %66 
                                          f32 %68 = OpFNegate %67 
                                          f32 %70 = OpFMul %68 %69 
                                 Uniform f32* %72 = OpAccessChain %20 %71 
                                          f32 %73 = OpLoad %72 
                                          f32 %74 = OpFAdd %70 %73 
                                                      OpStore %63 %74 
                                          f32 %75 = OpLoad %63 
                                          f32 %76 = OpFNegate %75 
                                 Private f32* %77 = OpAccessChain %39 %44 
                                          f32 %78 = OpLoad %77 
                                          f32 %79 = OpFAdd %76 %78 
                                 Private f32* %80 = OpAccessChain %39 %44 
                                                      OpStore %80 %79 
                                 Uniform f32* %82 = OpAccessChain %20 %64 
                                          f32 %83 = OpLoad %82 
                                          f32 %84 = OpFMul %83 %69 
                                 Uniform f32* %85 = OpAccessChain %20 %71 
                                          f32 %86 = OpLoad %85 
                                          f32 %87 = OpFAdd %84 %86 
                                                      OpStore %81 %87 
                                          f32 %88 = OpLoad %63 
                                          f32 %89 = OpFNegate %88 
                                          f32 %90 = OpLoad %81 
                                          f32 %91 = OpFAdd %89 %90 
                                                      OpStore %63 %91 
                                          f32 %93 = OpLoad %63 
                                          f32 %94 = OpFDiv %92 %93 
                                                      OpStore %63 %94 
                                          f32 %95 = OpLoad %63 
                                 Private f32* %96 = OpAccessChain %39 %44 
                                          f32 %97 = OpLoad %96 
                                          f32 %98 = OpFMul %95 %97 
                                 Private f32* %99 = OpAccessChain %39 %44 
                                                      OpStore %99 %98 
                                Private f32* %100 = OpAccessChain %39 %44 
                                         f32 %101 = OpLoad %100 
                                         f32 %102 = OpExtInst %1 43 %101 %60 %92 
                                Private f32* %103 = OpAccessChain %39 %44 
                                                      OpStore %103 %102 
                                Private f32* %104 = OpAccessChain %39 %44 
                                         f32 %105 = OpLoad %104 
                                         f32 %107 = OpFMul %105 %106 
                                         f32 %109 = OpFAdd %107 %108 
                                                      OpStore %63 %109 
                                Private f32* %110 = OpAccessChain %39 %44 
                                         f32 %111 = OpLoad %110 
                                Private f32* %112 = OpAccessChain %39 %44 
                                         f32 %113 = OpLoad %112 
                                         f32 %114 = OpFMul %111 %113 
                                Private f32* %115 = OpAccessChain %39 %44 
                                                      OpStore %115 %114 
                                Private f32* %116 = OpAccessChain %39 %44 
                                         f32 %117 = OpLoad %116 
                                         f32 %118 = OpLoad %63 
                                         f32 %119 = OpFMul %117 %118 
                                Private f32* %120 = OpAccessChain %39 %44 
                                                      OpStore %120 %119 
                                       f32_3 %121 = OpLoad %39 
                                       f32_3 %122 = OpVectorShuffle %121 %121 0 0 0 
                              Uniform f32_4* %124 = OpAccessChain %20 %123 
                                       f32_4 %125 = OpLoad %124 
                                       f32_3 %126 = OpVectorShuffle %125 %125 0 1 2 
                                       f32_3 %127 = OpFMul %122 %126 
                                                      OpStore %39 %127 
                                       f32_3 %128 = OpLoad vs_TEXCOORD2 
                                       f32_3 %129 = OpVectorShuffle %128 %128 1 1 1 
                              Uniform f32_4* %132 = OpAccessChain %20 %130 %131 
                                       f32_4 %133 = OpLoad %132 
                                       f32_3 %134 = OpVectorShuffle %133 %133 0 1 2 
                                       f32_3 %135 = OpFMul %129 %134 
                                                      OpStore %9 %135 
                              Uniform f32_4* %136 = OpAccessChain %20 %130 %22 
                                       f32_4 %137 = OpLoad %136 
                                       f32_3 %138 = OpVectorShuffle %137 %137 0 1 2 
                                       f32_3 %139 = OpLoad vs_TEXCOORD2 
                                       f32_3 %140 = OpVectorShuffle %139 %139 0 0 0 
                                       f32_3 %141 = OpFMul %138 %140 
                                       f32_3 %142 = OpLoad %9 
                                       f32_3 %143 = OpFAdd %141 %142 
                                                      OpStore %9 %143 
                              Uniform f32_4* %144 = OpAccessChain %20 %130 %130 
                                       f32_4 %145 = OpLoad %144 
                                       f32_3 %146 = OpVectorShuffle %145 %145 0 1 2 
                                       f32_3 %147 = OpLoad vs_TEXCOORD2 
                                       f32_3 %148 = OpVectorShuffle %147 %147 2 2 2 
                                       f32_3 %149 = OpFMul %146 %148 
                                       f32_3 %150 = OpLoad %9 
                                       f32_3 %151 = OpFAdd %149 %150 
                                                      OpStore %9 %151 
                                       f32_3 %152 = OpLoad %9 
                              Uniform f32_4* %154 = OpAccessChain %20 %130 %153 
                                       f32_4 %155 = OpLoad %154 
                                       f32_3 %156 = OpVectorShuffle %155 %155 0 1 2 
                                       f32_3 %157 = OpFAdd %152 %156 
                                                      OpStore %9 %157 
                                       f32_3 %158 = OpLoad %9 
                                       f32_3 %159 = OpLoad %9 
                                         f32 %160 = OpDot %158 %159 
                                Private f32* %161 = OpAccessChain %9 %44 
                                                      OpStore %161 %160 
                         read_only Texture2D %165 = OpLoad %164 
                                     sampler %169 = OpLoad %168 
                  read_only Texture2DSampled %171 = OpSampledImage %165 %169 
                                       f32_3 %173 = OpLoad %9 
                                       f32_2 %174 = OpVectorShuffle %173 %173 0 0 
                                       f32_4 %175 = OpImageSampleImplicitLod %171 %174 
                                         f32 %176 = OpCompositeExtract %175 0 
                                Private f32* %177 = OpAccessChain %9 %44 
                                                      OpStore %177 %176 
                                       f32_3 %179 = OpLoad %9 
                                       f32_3 %180 = OpVectorShuffle %179 %179 0 0 0 
                              Uniform f32_4* %181 = OpAccessChain %20 %131 
                                       f32_4 %182 = OpLoad %181 
                                       f32_3 %183 = OpVectorShuffle %182 %182 0 1 2 
                                       f32_3 %184 = OpFMul %180 %183 
                                                      OpStore %178 %184 
                         read_only Texture2D %188 = OpLoad %187 
                                     sampler %190 = OpLoad %189 
                  read_only Texture2DSampled %191 = OpSampledImage %188 %190 
                                       f32_2 %194 = OpLoad vs_TEXCOORD0 
                                       f32_4 %195 = OpImageSampleImplicitLod %191 %194 
                                                      OpStore %186 %195 
                                       f32_4 %197 = OpLoad %186 
                              Uniform f32_4* %198 = OpAccessChain %20 %153 
                                       f32_4 %199 = OpLoad %198 
                                       f32_4 %200 = OpFMul %197 %199 
                                                      OpStore %196 %200 
                                       f32_3 %201 = OpLoad %178 
                                       f32_4 %202 = OpLoad %196 
                                       f32_3 %203 = OpVectorShuffle %202 %202 0 1 2 
                                       f32_3 %204 = OpFMul %201 %203 
                                                      OpStore %178 %204 
                                       f32_3 %205 = OpLoad %39 
                                       f32_3 %206 = OpLoad %178 
                                       f32_3 %207 = OpFMul %205 %206 
                                                      OpStore %39 %207 
                                       f32_4 %210 = OpLoad %196 
                                       f32_3 %211 = OpVectorShuffle %210 %210 3 3 3 
                                       f32_3 %212 = OpLoad %39 
                                       f32_3 %213 = OpFMul %211 %212 
                                       f32_4 %214 = OpLoad %209 
                                       f32_4 %215 = OpVectorShuffle %214 %213 4 5 6 3 
                                                      OpStore %209 %215 
                                Private f32* %217 = OpAccessChain %196 %216 
                                         f32 %218 = OpLoad %217 
                                 Output f32* %220 = OpAccessChain %209 %216 
                                                      OpStore %220 %218 
                                                      OpReturn
                                                      OpFunctionEnd
"
}
SubProgram "vulkan hw_tier01 " {
Keywords { "POINT" }
"; SPIR-V
; Version: 1.0
; Generator: Khronos Glslang Reference Front End; 6
; Bound: 209
; Schema: 0
                                                      OpCapability Shader 
                                               %1 = OpExtInstImport "GLSL.std.450" 
                                                      OpMemoryModel Logical GLSL450 
                                                      OpEntryPoint Vertex %4 "main" %11 %75 %85 %101 %106 %137 %143 %190 %200 
                                                      OpName vs_TEXCOORD0 "vs_TEXCOORD0" 
                                                      OpName vs_TEXCOORD1 "vs_TEXCOORD1" 
                                                      OpName vs_TEXCOORD2 "vs_TEXCOORD2" 
                                                      OpName vs_TEXCOORD3 "vs_TEXCOORD3" 
                                                      OpName vs_TEXCOORD4 "vs_TEXCOORD4" 
                                                      OpDecorate %11 Location 11 
                                                      OpDecorate %16 ArrayStride 16 
                                                      OpDecorate %17 ArrayStride 17 
                                                      OpDecorate %18 ArrayStride 18 
                                                      OpDecorate %19 ArrayStride 19 
                                                      OpMemberDecorate %20 0 Offset 20 
                                                      OpMemberDecorate %20 1 Offset 20 
                                                      OpMemberDecorate %20 2 Offset 20 
                                                      OpMemberDecorate %20 3 Offset 20 
                                                      OpMemberDecorate %20 4 Offset 20 
                                                      OpDecorate %20 Block 
                                                      OpDecorate %22 DescriptorSet 22 
                                                      OpDecorate %22 Binding 22 
                                                      OpMemberDecorate %73 0 BuiltIn 73 
                                                      OpMemberDecorate %73 1 BuiltIn 73 
                                                      OpMemberDecorate %73 2 BuiltIn 73 
                                                      OpDecorate %73 Block 
                                                      OpDecorate %85 Location 85 
                                                      OpDecorate vs_TEXCOORD0 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD0 Location 101 
                                                      OpDecorate %106 Location 106 
                                                      OpDecorate vs_TEXCOORD1 Location 137 
                                                      OpDecorate vs_TEXCOORD2 Location 143 
                                                      OpDecorate vs_TEXCOORD3 Location 190 
                                                      OpDecorate vs_TEXCOORD4 Location 200 
                                               %2 = OpTypeVoid 
                                               %3 = OpTypeFunction %2 
                                               %6 = OpTypeFloat 32 
                                               %7 = OpTypeVector %6 4 
                                               %8 = OpTypePointer Private %7 
                                Private f32_4* %9 = OpVariable Private 
                                              %10 = OpTypePointer Input %7 
                                 Input f32_4* %11 = OpVariable Input 
                                              %14 = OpTypeInt 32 0 
                                          u32 %15 = OpConstant 4 
                                              %16 = OpTypeArray %7 %15 
                                              %17 = OpTypeArray %7 %15 
                                              %18 = OpTypeArray %7 %15 
                                              %19 = OpTypeArray %7 %15 
                                              %20 = OpTypeStruct %16 %17 %18 %19 %7 
                                              %21 = OpTypePointer Uniform %20 
Uniform struct {f32_4[4]; f32_4[4]; f32_4[4]; f32_4[4]; f32_4;}* %22 = OpVariable Uniform 
                                              %23 = OpTypeInt 32 1 
                                          i32 %24 = OpConstant 0 
                                          i32 %25 = OpConstant 1 
                                              %26 = OpTypePointer Uniform %7 
                                          i32 %37 = OpConstant 2 
                               Private f32_4* %45 = OpVariable Private 
                                          i32 %47 = OpConstant 3 
                               Private f32_4* %51 = OpVariable Private 
                                          u32 %71 = OpConstant 1 
                                              %72 = OpTypeArray %6 %71 
                                              %73 = OpTypeStruct %7 %6 %72 
                                              %74 = OpTypePointer Output %73 
         Output struct {f32_4; f32; f32[1];}* %75 = OpVariable Output 
                                              %83 = OpTypePointer Output %7 
                                 Input f32_4* %85 = OpVariable Input 
                                              %86 = OpTypeVector %6 2 
                                          i32 %89 = OpConstant 4 
                                             %100 = OpTypePointer Output %86 
                       Output f32_2* vs_TEXCOORD0 = OpVariable Output 
                                             %104 = OpTypeVector %6 3 
                                             %105 = OpTypePointer Input %104 
                                Input f32_3* %106 = OpVariable Input 
                                         u32 %112 = OpConstant 0 
                                             %113 = OpTypePointer Private %6 
                                         u32 %126 = OpConstant 2 
                                Private f32* %128 = OpVariable Private 
                                             %136 = OpTypePointer Output %104 
                       Output f32_3* vs_TEXCOORD1 = OpVariable Output 
                       Output f32_3* vs_TEXCOORD2 = OpVariable Output 
                       Output f32_3* vs_TEXCOORD3 = OpVariable Output 
                       Output f32_4* vs_TEXCOORD4 = OpVariable Output 
                                         f32 %201 = OpConstant 3.674022E-40 
                                       f32_4 %202 = OpConstantComposite %201 %201 %201 %201 
                                             %203 = OpTypePointer Output %6 
                                          void %4 = OpFunction None %3 
                                               %5 = OpLabel 
                                        f32_4 %12 = OpLoad %11 
                                        f32_4 %13 = OpVectorShuffle %12 %12 1 1 1 1 
                               Uniform f32_4* %27 = OpAccessChain %22 %24 %25 
                                        f32_4 %28 = OpLoad %27 
                                        f32_4 %29 = OpFMul %13 %28 
                                                      OpStore %9 %29 
                               Uniform f32_4* %30 = OpAccessChain %22 %24 %24 
                                        f32_4 %31 = OpLoad %30 
                                        f32_4 %32 = OpLoad %11 
                                        f32_4 %33 = OpVectorShuffle %32 %32 0 0 0 0 
                                        f32_4 %34 = OpFMul %31 %33 
                                        f32_4 %35 = OpLoad %9 
                                        f32_4 %36 = OpFAdd %34 %35 
                                                      OpStore %9 %36 
                               Uniform f32_4* %38 = OpAccessChain %22 %24 %37 
                                        f32_4 %39 = OpLoad %38 
                                        f32_4 %40 = OpLoad %11 
                                        f32_4 %41 = OpVectorShuffle %40 %40 2 2 2 2 
                                        f32_4 %42 = OpFMul %39 %41 
                                        f32_4 %43 = OpLoad %9 
                                        f32_4 %44 = OpFAdd %42 %43 
                                                      OpStore %9 %44 
                                        f32_4 %46 = OpLoad %9 
                               Uniform f32_4* %48 = OpAccessChain %22 %24 %47 
                                        f32_4 %49 = OpLoad %48 
                                        f32_4 %50 = OpFAdd %46 %49 
                                                      OpStore %45 %50 
                                        f32_4 %52 = OpLoad %45 
                                        f32_4 %53 = OpVectorShuffle %52 %52 1 1 1 1 
                               Uniform f32_4* %54 = OpAccessChain %22 %37 %25 
                                        f32_4 %55 = OpLoad %54 
                                        f32_4 %56 = OpFMul %53 %55 
                                                      OpStore %51 %56 
                               Uniform f32_4* %57 = OpAccessChain %22 %37 %24 
                                        f32_4 %58 = OpLoad %57 
                                        f32_4 %59 = OpLoad %45 
                                        f32_4 %60 = OpVectorShuffle %59 %59 0 0 0 0 
                                        f32_4 %61 = OpFMul %58 %60 
                                        f32_4 %62 = OpLoad %51 
                                        f32_4 %63 = OpFAdd %61 %62 
                                                      OpStore %51 %63 
                               Uniform f32_4* %64 = OpAccessChain %22 %37 %37 
                                        f32_4 %65 = OpLoad %64 
                                        f32_4 %66 = OpLoad %45 
                                        f32_4 %67 = OpVectorShuffle %66 %66 2 2 2 2 
                                        f32_4 %68 = OpFMul %65 %67 
                                        f32_4 %69 = OpLoad %51 
                                        f32_4 %70 = OpFAdd %68 %69 
                                                      OpStore %51 %70 
                               Uniform f32_4* %76 = OpAccessChain %22 %37 %47 
                                        f32_4 %77 = OpLoad %76 
                                        f32_4 %78 = OpLoad %45 
                                        f32_4 %79 = OpVectorShuffle %78 %78 3 3 3 3 
                                        f32_4 %80 = OpFMul %77 %79 
                                        f32_4 %81 = OpLoad %51 
                                        f32_4 %82 = OpFAdd %80 %81 
                                Output f32_4* %84 = OpAccessChain %75 %24 
                                                      OpStore %84 %82 
                                        f32_4 %87 = OpLoad %85 
                                        f32_2 %88 = OpVectorShuffle %87 %87 0 1 
                               Uniform f32_4* %90 = OpAccessChain %22 %89 
                                        f32_4 %91 = OpLoad %90 
                                        f32_2 %92 = OpVectorShuffle %91 %91 0 1 
                                        f32_2 %93 = OpFMul %88 %92 
                               Uniform f32_4* %94 = OpAccessChain %22 %89 
                                        f32_4 %95 = OpLoad %94 
                                        f32_2 %96 = OpVectorShuffle %95 %95 2 3 
                                        f32_2 %97 = OpFAdd %93 %96 
                                        f32_4 %98 = OpLoad %45 
                                        f32_4 %99 = OpVectorShuffle %98 %97 4 5 2 3 
                                                      OpStore %45 %99 
                                       f32_4 %102 = OpLoad %45 
                                       f32_2 %103 = OpVectorShuffle %102 %102 0 1 
                                                      OpStore vs_TEXCOORD0 %103 
                                       f32_3 %107 = OpLoad %106 
                              Uniform f32_4* %108 = OpAccessChain %22 %25 %24 
                                       f32_4 %109 = OpLoad %108 
                                       f32_3 %110 = OpVectorShuffle %109 %109 0 1 2 
                                         f32 %111 = OpDot %107 %110 
                                Private f32* %114 = OpAccessChain %45 %112 
                                                      OpStore %114 %111 
                                       f32_3 %115 = OpLoad %106 
                              Uniform f32_4* %116 = OpAccessChain %22 %25 %25 
                                       f32_4 %117 = OpLoad %116 
                                       f32_3 %118 = OpVectorShuffle %117 %117 0 1 2 
                                         f32 %119 = OpDot %115 %118 
                                Private f32* %120 = OpAccessChain %45 %71 
                                                      OpStore %120 %119 
                                       f32_3 %121 = OpLoad %106 
                              Uniform f32_4* %122 = OpAccessChain %22 %25 %37 
                                       f32_4 %123 = OpLoad %122 
                                       f32_3 %124 = OpVectorShuffle %123 %123 0 1 2 
                                         f32 %125 = OpDot %121 %124 
                                Private f32* %127 = OpAccessChain %45 %126 
                                                      OpStore %127 %125 
                                       f32_4 %129 = OpLoad %45 
                                       f32_3 %130 = OpVectorShuffle %129 %129 0 1 2 
                                       f32_4 %131 = OpLoad %45 
                                       f32_3 %132 = OpVectorShuffle %131 %131 0 1 2 
                                         f32 %133 = OpDot %130 %132 
                                                      OpStore %128 %133 
                                         f32 %134 = OpLoad %128 
                                         f32 %135 = OpExtInst %1 32 %134 
                                                      OpStore %128 %135 
                                         f32 %138 = OpLoad %128 
                                       f32_3 %139 = OpCompositeConstruct %138 %138 %138 
                                       f32_4 %140 = OpLoad %45 
                                       f32_3 %141 = OpVectorShuffle %140 %140 0 1 2 
                                       f32_3 %142 = OpFMul %139 %141 
                                                      OpStore vs_TEXCOORD1 %142 
                              Uniform f32_4* %144 = OpAccessChain %22 %24 %47 
                                       f32_4 %145 = OpLoad %144 
                                       f32_3 %146 = OpVectorShuffle %145 %145 0 1 2 
                                       f32_4 %147 = OpLoad %11 
                                       f32_3 %148 = OpVectorShuffle %147 %147 3 3 3 
                                       f32_3 %149 = OpFMul %146 %148 
                                       f32_4 %150 = OpLoad %9 
                                       f32_3 %151 = OpVectorShuffle %150 %150 0 1 2 
                                       f32_3 %152 = OpFAdd %149 %151 
                                                      OpStore vs_TEXCOORD2 %152 
                              Uniform f32_4* %153 = OpAccessChain %22 %24 %47 
                                       f32_4 %154 = OpLoad %153 
                                       f32_4 %155 = OpLoad %11 
                                       f32_4 %156 = OpVectorShuffle %155 %155 3 3 3 3 
                                       f32_4 %157 = OpFMul %154 %156 
                                       f32_4 %158 = OpLoad %9 
                                       f32_4 %159 = OpFAdd %157 %158 
                                                      OpStore %9 %159 
                                       f32_4 %160 = OpLoad %9 
                                       f32_3 %161 = OpVectorShuffle %160 %160 1 1 1 
                              Uniform f32_4* %162 = OpAccessChain %22 %47 %25 
                                       f32_4 %163 = OpLoad %162 
                                       f32_3 %164 = OpVectorShuffle %163 %163 0 1 2 
                                       f32_3 %165 = OpFMul %161 %164 
                                       f32_4 %166 = OpLoad %45 
                                       f32_4 %167 = OpVectorShuffle %166 %165 4 5 6 3 
                                                      OpStore %45 %167 
                              Uniform f32_4* %168 = OpAccessChain %22 %47 %24 
                                       f32_4 %169 = OpLoad %168 
                                       f32_3 %170 = OpVectorShuffle %169 %169 0 1 2 
                                       f32_4 %171 = OpLoad %9 
                                       f32_3 %172 = OpVectorShuffle %171 %171 0 0 0 
                                       f32_3 %173 = OpFMul %170 %172 
                                       f32_4 %174 = OpLoad %45 
                                       f32_3 %175 = OpVectorShuffle %174 %174 0 1 2 
                                       f32_3 %176 = OpFAdd %173 %175 
                                       f32_4 %177 = OpLoad %45 
                                       f32_4 %178 = OpVectorShuffle %177 %176 4 5 6 3 
                                                      OpStore %45 %178 
                              Uniform f32_4* %179 = OpAccessChain %22 %47 %37 
                                       f32_4 %180 = OpLoad %179 
                                       f32_3 %181 = OpVectorShuffle %180 %180 0 1 2 
                                       f32_4 %182 = OpLoad %9 
                                       f32_3 %183 = OpVectorShuffle %182 %182 2 2 2 
                                       f32_3 %184 = OpFMul %181 %183 
                                       f32_4 %185 = OpLoad %45 
                                       f32_3 %186 = OpVectorShuffle %185 %185 0 1 2 
                                       f32_3 %187 = OpFAdd %184 %186 
                                       f32_4 %188 = OpLoad %9 
                                       f32_4 %189 = OpVectorShuffle %188 %187 4 5 6 3 
                                                      OpStore %9 %189 
                              Uniform f32_4* %191 = OpAccessChain %22 %47 %47 
                                       f32_4 %192 = OpLoad %191 
                                       f32_3 %193 = OpVectorShuffle %192 %192 0 1 2 
                                       f32_4 %194 = OpLoad %9 
                                       f32_3 %195 = OpVectorShuffle %194 %194 3 3 3 
                                       f32_3 %196 = OpFMul %193 %195 
                                       f32_4 %197 = OpLoad %9 
                                       f32_3 %198 = OpVectorShuffle %197 %197 0 1 2 
                                       f32_3 %199 = OpFAdd %196 %198 
                                                      OpStore vs_TEXCOORD3 %199 
                                                      OpStore vs_TEXCOORD4 %202 
                                 Output f32* %204 = OpAccessChain %75 %24 %71 
                                         f32 %205 = OpLoad %204 
                                         f32 %206 = OpFNegate %205 
                                 Output f32* %207 = OpAccessChain %75 %24 %71 
                                                      OpStore %207 %206 
                                                      OpReturn
                                                      OpFunctionEnd
; SPIR-V
; Version: 1.0
; Generator: Khronos Glslang Reference Front End; 6
; Bound: 222
; Schema: 0
                                                      OpCapability Shader 
                                               %1 = OpExtInstImport "GLSL.std.450" 
                                                      OpMemoryModel Logical GLSL450 
                                                      OpEntryPoint Fragment %4 "main" %11 %40 %193 %209 
                                                      OpExecutionMode %4 OriginUpperLeft 
                                                      OpName vs_TEXCOORD2 "vs_TEXCOORD2" 
                                                      OpName vs_TEXCOORD1 "vs_TEXCOORD1" 
                                                      OpName vs_TEXCOORD0 "vs_TEXCOORD0" 
                                                      OpDecorate vs_TEXCOORD2 Location 11 
                                                      OpDecorate %17 ArrayStride 17 
                                                      OpMemberDecorate %18 0 Offset 18 
                                                      OpMemberDecorate %18 1 RelaxedPrecision 
                                                      OpMemberDecorate %18 1 Offset 18 
                                                      OpMemberDecorate %18 2 Offset 18 
                                                      OpMemberDecorate %18 3 RelaxedPrecision 
                                                      OpMemberDecorate %18 3 Offset 18 
                                                      OpMemberDecorate %18 4 RelaxedPrecision 
                                                      OpMemberDecorate %18 4 Offset 18 
                                                      OpMemberDecorate %18 5 RelaxedPrecision 
                                                      OpMemberDecorate %18 5 Offset 18 
                                                      OpMemberDecorate %18 6 RelaxedPrecision 
                                                      OpMemberDecorate %18 6 Offset 18 
                                                      OpDecorate %18 Block 
                                                      OpDecorate %20 DescriptorSet 20 
                                                      OpDecorate %20 Binding 20 
                                                      OpDecorate %39 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD1 Location 40 
                                                      OpDecorate %47 RelaxedPrecision 
                                                      OpDecorate %48 RelaxedPrecision 
                                                      OpDecorate %50 RelaxedPrecision 
                                                      OpDecorate %51 RelaxedPrecision 
                                                      OpDecorate %54 RelaxedPrecision 
                                                      OpDecorate %59 RelaxedPrecision 
                                                      OpDecorate %61 RelaxedPrecision 
                                                      OpDecorate %63 RelaxedPrecision 
                                                      OpDecorate %67 RelaxedPrecision 
                                                      OpDecorate %68 RelaxedPrecision 
                                                      OpDecorate %70 RelaxedPrecision 
                                                      OpDecorate %73 RelaxedPrecision 
                                                      OpDecorate %74 RelaxedPrecision 
                                                      OpDecorate %75 RelaxedPrecision 
                                                      OpDecorate %76 RelaxedPrecision 
                                                      OpDecorate %78 RelaxedPrecision 
                                                      OpDecorate %79 RelaxedPrecision 
                                                      OpDecorate %81 RelaxedPrecision 
                                                      OpDecorate %83 RelaxedPrecision 
                                                      OpDecorate %84 RelaxedPrecision 
                                                      OpDecorate %86 RelaxedPrecision 
                                                      OpDecorate %87 RelaxedPrecision 
                                                      OpDecorate %88 RelaxedPrecision 
                                                      OpDecorate %89 RelaxedPrecision 
                                                      OpDecorate %90 RelaxedPrecision 
                                                      OpDecorate %91 RelaxedPrecision 
                                                      OpDecorate %93 RelaxedPrecision 
                                                      OpDecorate %94 RelaxedPrecision 
                                                      OpDecorate %95 RelaxedPrecision 
                                                      OpDecorate %97 RelaxedPrecision 
                                                      OpDecorate %98 RelaxedPrecision 
                                                      OpDecorate %101 RelaxedPrecision 
                                                      OpDecorate %102 RelaxedPrecision 
                                                      OpDecorate %105 RelaxedPrecision 
                                                      OpDecorate %107 RelaxedPrecision 
                                                      OpDecorate %109 RelaxedPrecision 
                                                      OpDecorate %111 RelaxedPrecision 
                                                      OpDecorate %113 RelaxedPrecision 
                                                      OpDecorate %114 RelaxedPrecision 
                                                      OpDecorate %117 RelaxedPrecision 
                                                      OpDecorate %118 RelaxedPrecision 
                                                      OpDecorate %119 RelaxedPrecision 
                                                      OpDecorate %121 RelaxedPrecision 
                                                      OpDecorate %122 RelaxedPrecision 
                                                      OpDecorate %125 RelaxedPrecision 
                                                      OpDecorate %126 RelaxedPrecision 
                                                      OpDecorate %127 RelaxedPrecision 
                                                      OpDecorate %164 DescriptorSet 164 
                                                      OpDecorate %164 Binding 164 
                                                      OpDecorate %168 DescriptorSet 168 
                                                      OpDecorate %168 Binding 168 
                                                      OpDecorate %178 RelaxedPrecision 
                                                      OpDecorate %182 RelaxedPrecision 
                                                      OpDecorate %183 RelaxedPrecision 
                                                      OpDecorate %186 RelaxedPrecision 
                                                      OpDecorate %187 RelaxedPrecision 
                                                      OpDecorate %187 DescriptorSet 187 
                                                      OpDecorate %187 Binding 187 
                                                      OpDecorate %188 RelaxedPrecision 
                                                      OpDecorate %189 RelaxedPrecision 
                                                      OpDecorate %189 DescriptorSet 189 
                                                      OpDecorate %189 Binding 189 
                                                      OpDecorate %190 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD0 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD0 Location 193 
                                                      OpDecorate %194 RelaxedPrecision 
                                                      OpDecorate %195 RelaxedPrecision 
                                                      OpDecorate %196 RelaxedPrecision 
                                                      OpDecorate %197 RelaxedPrecision 
                                                      OpDecorate %199 RelaxedPrecision 
                                                      OpDecorate %200 RelaxedPrecision 
                                                      OpDecorate %201 RelaxedPrecision 
                                                      OpDecorate %202 RelaxedPrecision 
                                                      OpDecorate %203 RelaxedPrecision 
                                                      OpDecorate %204 RelaxedPrecision 
                                                      OpDecorate %205 RelaxedPrecision 
                                                      OpDecorate %206 RelaxedPrecision 
                                                      OpDecorate %207 RelaxedPrecision 
                                                      OpDecorate %209 RelaxedPrecision 
                                                      OpDecorate %209 Location 209 
                                                      OpDecorate %210 RelaxedPrecision 
                                                      OpDecorate %211 RelaxedPrecision 
                                                      OpDecorate %212 RelaxedPrecision 
                                                      OpDecorate %213 RelaxedPrecision 
                                                      OpDecorate %218 RelaxedPrecision 
                                               %2 = OpTypeVoid 
                                               %3 = OpTypeFunction %2 
                                               %6 = OpTypeFloat 32 
                                               %7 = OpTypeVector %6 3 
                                               %8 = OpTypePointer Private %7 
                                Private f32_3* %9 = OpVariable Private 
                                              %10 = OpTypePointer Input %7 
                        Input f32_3* vs_TEXCOORD2 = OpVariable Input 
                                              %14 = OpTypeVector %6 4 
                                              %15 = OpTypeInt 32 0 
                                          u32 %16 = OpConstant 4 
                                              %17 = OpTypeArray %14 %16 
                                              %18 = OpTypeStruct %14 %14 %17 %14 %14 %6 %6 
                                              %19 = OpTypePointer Uniform %18 
Uniform struct {f32_4; f32_4; f32_4[4]; f32_4; f32_4; f32; f32;}* %20 = OpVariable Uniform 
                                              %21 = OpTypeInt 32 1 
                                          i32 %22 = OpConstant 0 
                                              %23 = OpTypePointer Uniform %14 
                                              %28 = OpTypePointer Private %6 
                                 Private f32* %29 = OpVariable Private 
                               Private f32_3* %39 = OpVariable Private 
                        Input f32_3* vs_TEXCOORD1 = OpVariable Input 
                                          u32 %44 = OpConstant 0 
                                          f32 %60 = OpConstant 3.674022E-40 
                                 Private f32* %63 = OpVariable Private 
                                          i32 %64 = OpConstant 6 
                                              %65 = OpTypePointer Uniform %6 
                                          f32 %69 = OpConstant 3.674022E-40 
                                          i32 %71 = OpConstant 5 
                                 Private f32* %81 = OpVariable Private 
                                          f32 %92 = OpConstant 3.674022E-40 
                                         f32 %106 = OpConstant 3.674022E-40 
                                         f32 %108 = OpConstant 3.674022E-40 
                                         i32 %123 = OpConstant 4 
                                         i32 %130 = OpConstant 2 
                                         i32 %131 = OpConstant 1 
                                         i32 %153 = OpConstant 3 
                                             %162 = OpTypeImage %6 Dim2D 0 0 0 1 Unknown 
                                             %163 = OpTypePointer UniformConstant %162 
        UniformConstant read_only Texture2D* %164 = OpVariable UniformConstant 
                                             %166 = OpTypeSampler 
                                             %167 = OpTypePointer UniformConstant %166 
                    UniformConstant sampler* %168 = OpVariable UniformConstant 
                                             %170 = OpTypeSampledImage %162 
                                             %172 = OpTypeVector %6 2 
                              Private f32_3* %178 = OpVariable Private 
                                             %185 = OpTypePointer Private %14 
                              Private f32_4* %186 = OpVariable Private 
        UniformConstant read_only Texture2D* %187 = OpVariable UniformConstant 
                    UniformConstant sampler* %189 = OpVariable UniformConstant 
                                             %192 = OpTypePointer Input %172 
                        Input f32_2* vs_TEXCOORD0 = OpVariable Input 
                              Private f32_4* %196 = OpVariable Private 
                                             %208 = OpTypePointer Output %14 
                               Output f32_4* %209 = OpVariable Output 
                                         u32 %216 = OpConstant 3 
                                             %219 = OpTypePointer Output %6 
                                          void %4 = OpFunction None %3 
                                               %5 = OpLabel 
                                        f32_3 %12 = OpLoad vs_TEXCOORD2 
                                        f32_3 %13 = OpFNegate %12 
                               Uniform f32_4* %24 = OpAccessChain %20 %22 
                                        f32_4 %25 = OpLoad %24 
                                        f32_3 %26 = OpVectorShuffle %25 %25 0 1 2 
                                        f32_3 %27 = OpFAdd %13 %26 
                                                      OpStore %9 %27 
                                        f32_3 %30 = OpLoad %9 
                                        f32_3 %31 = OpLoad %9 
                                          f32 %32 = OpDot %30 %31 
                                                      OpStore %29 %32 
                                          f32 %33 = OpLoad %29 
                                          f32 %34 = OpExtInst %1 32 %33 
                                                      OpStore %29 %34 
                                          f32 %35 = OpLoad %29 
                                        f32_3 %36 = OpCompositeConstruct %35 %35 %35 
                                        f32_3 %37 = OpLoad %9 
                                        f32_3 %38 = OpFMul %36 %37 
                                                      OpStore %9 %38 
                                        f32_3 %41 = OpLoad vs_TEXCOORD1 
                                        f32_3 %42 = OpLoad vs_TEXCOORD1 
                                          f32 %43 = OpDot %41 %42 
                                 Private f32* %45 = OpAccessChain %39 %44 
                                                      OpStore %45 %43 
                                 Private f32* %46 = OpAccessChain %39 %44 
                                          f32 %47 = OpLoad %46 
                                          f32 %48 = OpExtInst %1 32 %47 
                                 Private f32* %49 = OpAccessChain %39 %44 
                                                      OpStore %49 %48 
                                        f32_3 %50 = OpLoad %39 
                                        f32_3 %51 = OpVectorShuffle %50 %50 0 0 0 
                                        f32_3 %52 = OpLoad vs_TEXCOORD1 
                                        f32_3 %53 = OpFMul %51 %52 
                                                      OpStore %39 %53 
                                        f32_3 %54 = OpLoad %39 
                                        f32_3 %55 = OpLoad %9 
                                          f32 %56 = OpDot %54 %55 
                                 Private f32* %57 = OpAccessChain %39 %44 
                                                      OpStore %57 %56 
                                 Private f32* %58 = OpAccessChain %39 %44 
                                          f32 %59 = OpLoad %58 
                                          f32 %61 = OpExtInst %1 40 %59 %60 
                                 Private f32* %62 = OpAccessChain %39 %44 
                                                      OpStore %62 %61 
                                 Uniform f32* %66 = OpAccessChain %20 %64 
                                          f32 %67 = OpLoad %66 
                                          f32 %68 = OpFNegate %67 
                                          f32 %70 = OpFMul %68 %69 
                                 Uniform f32* %72 = OpAccessChain %20 %71 
                                          f32 %73 = OpLoad %72 
                                          f32 %74 = OpFAdd %70 %73 
                                                      OpStore %63 %74 
                                          f32 %75 = OpLoad %63 
                                          f32 %76 = OpFNegate %75 
                                 Private f32* %77 = OpAccessChain %39 %44 
                                          f32 %78 = OpLoad %77 
                                          f32 %79 = OpFAdd %76 %78 
                                 Private f32* %80 = OpAccessChain %39 %44 
                                                      OpStore %80 %79 
                                 Uniform f32* %82 = OpAccessChain %20 %64 
                                          f32 %83 = OpLoad %82 
                                          f32 %84 = OpFMul %83 %69 
                                 Uniform f32* %85 = OpAccessChain %20 %71 
                                          f32 %86 = OpLoad %85 
                                          f32 %87 = OpFAdd %84 %86 
                                                      OpStore %81 %87 
                                          f32 %88 = OpLoad %63 
                                          f32 %89 = OpFNegate %88 
                                          f32 %90 = OpLoad %81 
                                          f32 %91 = OpFAdd %89 %90 
                                                      OpStore %63 %91 
                                          f32 %93 = OpLoad %63 
                                          f32 %94 = OpFDiv %92 %93 
                                                      OpStore %63 %94 
                                          f32 %95 = OpLoad %63 
                                 Private f32* %96 = OpAccessChain %39 %44 
                                          f32 %97 = OpLoad %96 
                                          f32 %98 = OpFMul %95 %97 
                                 Private f32* %99 = OpAccessChain %39 %44 
                                                      OpStore %99 %98 
                                Private f32* %100 = OpAccessChain %39 %44 
                                         f32 %101 = OpLoad %100 
                                         f32 %102 = OpExtInst %1 43 %101 %60 %92 
                                Private f32* %103 = OpAccessChain %39 %44 
                                                      OpStore %103 %102 
                                Private f32* %104 = OpAccessChain %39 %44 
                                         f32 %105 = OpLoad %104 
                                         f32 %107 = OpFMul %105 %106 
                                         f32 %109 = OpFAdd %107 %108 
                                                      OpStore %63 %109 
                                Private f32* %110 = OpAccessChain %39 %44 
                                         f32 %111 = OpLoad %110 
                                Private f32* %112 = OpAccessChain %39 %44 
                                         f32 %113 = OpLoad %112 
                                         f32 %114 = OpFMul %111 %113 
                                Private f32* %115 = OpAccessChain %39 %44 
                                                      OpStore %115 %114 
                                Private f32* %116 = OpAccessChain %39 %44 
                                         f32 %117 = OpLoad %116 
                                         f32 %118 = OpLoad %63 
                                         f32 %119 = OpFMul %117 %118 
                                Private f32* %120 = OpAccessChain %39 %44 
                                                      OpStore %120 %119 
                                       f32_3 %121 = OpLoad %39 
                                       f32_3 %122 = OpVectorShuffle %121 %121 0 0 0 
                              Uniform f32_4* %124 = OpAccessChain %20 %123 
                                       f32_4 %125 = OpLoad %124 
                                       f32_3 %126 = OpVectorShuffle %125 %125 0 1 2 
                                       f32_3 %127 = OpFMul %122 %126 
                                                      OpStore %39 %127 
                                       f32_3 %128 = OpLoad vs_TEXCOORD2 
                                       f32_3 %129 = OpVectorShuffle %128 %128 1 1 1 
                              Uniform f32_4* %132 = OpAccessChain %20 %130 %131 
                                       f32_4 %133 = OpLoad %132 
                                       f32_3 %134 = OpVectorShuffle %133 %133 0 1 2 
                                       f32_3 %135 = OpFMul %129 %134 
                                                      OpStore %9 %135 
                              Uniform f32_4* %136 = OpAccessChain %20 %130 %22 
                                       f32_4 %137 = OpLoad %136 
                                       f32_3 %138 = OpVectorShuffle %137 %137 0 1 2 
                                       f32_3 %139 = OpLoad vs_TEXCOORD2 
                                       f32_3 %140 = OpVectorShuffle %139 %139 0 0 0 
                                       f32_3 %141 = OpFMul %138 %140 
                                       f32_3 %142 = OpLoad %9 
                                       f32_3 %143 = OpFAdd %141 %142 
                                                      OpStore %9 %143 
                              Uniform f32_4* %144 = OpAccessChain %20 %130 %130 
                                       f32_4 %145 = OpLoad %144 
                                       f32_3 %146 = OpVectorShuffle %145 %145 0 1 2 
                                       f32_3 %147 = OpLoad vs_TEXCOORD2 
                                       f32_3 %148 = OpVectorShuffle %147 %147 2 2 2 
                                       f32_3 %149 = OpFMul %146 %148 
                                       f32_3 %150 = OpLoad %9 
                                       f32_3 %151 = OpFAdd %149 %150 
                                                      OpStore %9 %151 
                                       f32_3 %152 = OpLoad %9 
                              Uniform f32_4* %154 = OpAccessChain %20 %130 %153 
                                       f32_4 %155 = OpLoad %154 
                                       f32_3 %156 = OpVectorShuffle %155 %155 0 1 2 
                                       f32_3 %157 = OpFAdd %152 %156 
                                                      OpStore %9 %157 
                                       f32_3 %158 = OpLoad %9 
                                       f32_3 %159 = OpLoad %9 
                                         f32 %160 = OpDot %158 %159 
                                Private f32* %161 = OpAccessChain %9 %44 
                                                      OpStore %161 %160 
                         read_only Texture2D %165 = OpLoad %164 
                                     sampler %169 = OpLoad %168 
                  read_only Texture2DSampled %171 = OpSampledImage %165 %169 
                                       f32_3 %173 = OpLoad %9 
                                       f32_2 %174 = OpVectorShuffle %173 %173 0 0 
                                       f32_4 %175 = OpImageSampleImplicitLod %171 %174 
                                         f32 %176 = OpCompositeExtract %175 0 
                                Private f32* %177 = OpAccessChain %9 %44 
                                                      OpStore %177 %176 
                                       f32_3 %179 = OpLoad %9 
                                       f32_3 %180 = OpVectorShuffle %179 %179 0 0 0 
                              Uniform f32_4* %181 = OpAccessChain %20 %131 
                                       f32_4 %182 = OpLoad %181 
                                       f32_3 %183 = OpVectorShuffle %182 %182 0 1 2 
                                       f32_3 %184 = OpFMul %180 %183 
                                                      OpStore %178 %184 
                         read_only Texture2D %188 = OpLoad %187 
                                     sampler %190 = OpLoad %189 
                  read_only Texture2DSampled %191 = OpSampledImage %188 %190 
                                       f32_2 %194 = OpLoad vs_TEXCOORD0 
                                       f32_4 %195 = OpImageSampleImplicitLod %191 %194 
                                                      OpStore %186 %195 
                                       f32_4 %197 = OpLoad %186 
                              Uniform f32_4* %198 = OpAccessChain %20 %153 
                                       f32_4 %199 = OpLoad %198 
                                       f32_4 %200 = OpFMul %197 %199 
                                                      OpStore %196 %200 
                                       f32_3 %201 = OpLoad %178 
                                       f32_4 %202 = OpLoad %196 
                                       f32_3 %203 = OpVectorShuffle %202 %202 0 1 2 
                                       f32_3 %204 = OpFMul %201 %203 
                                                      OpStore %178 %204 
                                       f32_3 %205 = OpLoad %39 
                                       f32_3 %206 = OpLoad %178 
                                       f32_3 %207 = OpFMul %205 %206 
                                                      OpStore %39 %207 
                                       f32_4 %210 = OpLoad %196 
                                       f32_3 %211 = OpVectorShuffle %210 %210 3 3 3 
                                       f32_3 %212 = OpLoad %39 
                                       f32_3 %213 = OpFMul %211 %212 
                                       f32_4 %214 = OpLoad %209 
                                       f32_4 %215 = OpVectorShuffle %214 %213 4 5 6 3 
                                                      OpStore %209 %215 
                                Private f32* %217 = OpAccessChain %196 %216 
                                         f32 %218 = OpLoad %217 
                                 Output f32* %220 = OpAccessChain %209 %216 
                                                      OpStore %220 %218 
                                                      OpReturn
                                                      OpFunctionEnd
"
}
SubProgram "vulkan hw_tier02 " {
Keywords { "POINT" }
"; SPIR-V
; Version: 1.0
; Generator: Khronos Glslang Reference Front End; 6
; Bound: 209
; Schema: 0
                                                      OpCapability Shader 
                                               %1 = OpExtInstImport "GLSL.std.450" 
                                                      OpMemoryModel Logical GLSL450 
                                                      OpEntryPoint Vertex %4 "main" %11 %75 %85 %101 %106 %137 %143 %190 %200 
                                                      OpName vs_TEXCOORD0 "vs_TEXCOORD0" 
                                                      OpName vs_TEXCOORD1 "vs_TEXCOORD1" 
                                                      OpName vs_TEXCOORD2 "vs_TEXCOORD2" 
                                                      OpName vs_TEXCOORD3 "vs_TEXCOORD3" 
                                                      OpName vs_TEXCOORD4 "vs_TEXCOORD4" 
                                                      OpDecorate %11 Location 11 
                                                      OpDecorate %16 ArrayStride 16 
                                                      OpDecorate %17 ArrayStride 17 
                                                      OpDecorate %18 ArrayStride 18 
                                                      OpDecorate %19 ArrayStride 19 
                                                      OpMemberDecorate %20 0 Offset 20 
                                                      OpMemberDecorate %20 1 Offset 20 
                                                      OpMemberDecorate %20 2 Offset 20 
                                                      OpMemberDecorate %20 3 Offset 20 
                                                      OpMemberDecorate %20 4 Offset 20 
                                                      OpDecorate %20 Block 
                                                      OpDecorate %22 DescriptorSet 22 
                                                      OpDecorate %22 Binding 22 
                                                      OpMemberDecorate %73 0 BuiltIn 73 
                                                      OpMemberDecorate %73 1 BuiltIn 73 
                                                      OpMemberDecorate %73 2 BuiltIn 73 
                                                      OpDecorate %73 Block 
                                                      OpDecorate %85 Location 85 
                                                      OpDecorate vs_TEXCOORD0 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD0 Location 101 
                                                      OpDecorate %106 Location 106 
                                                      OpDecorate vs_TEXCOORD1 Location 137 
                                                      OpDecorate vs_TEXCOORD2 Location 143 
                                                      OpDecorate vs_TEXCOORD3 Location 190 
                                                      OpDecorate vs_TEXCOORD4 Location 200 
                                               %2 = OpTypeVoid 
                                               %3 = OpTypeFunction %2 
                                               %6 = OpTypeFloat 32 
                                               %7 = OpTypeVector %6 4 
                                               %8 = OpTypePointer Private %7 
                                Private f32_4* %9 = OpVariable Private 
                                              %10 = OpTypePointer Input %7 
                                 Input f32_4* %11 = OpVariable Input 
                                              %14 = OpTypeInt 32 0 
                                          u32 %15 = OpConstant 4 
                                              %16 = OpTypeArray %7 %15 
                                              %17 = OpTypeArray %7 %15 
                                              %18 = OpTypeArray %7 %15 
                                              %19 = OpTypeArray %7 %15 
                                              %20 = OpTypeStruct %16 %17 %18 %19 %7 
                                              %21 = OpTypePointer Uniform %20 
Uniform struct {f32_4[4]; f32_4[4]; f32_4[4]; f32_4[4]; f32_4;}* %22 = OpVariable Uniform 
                                              %23 = OpTypeInt 32 1 
                                          i32 %24 = OpConstant 0 
                                          i32 %25 = OpConstant 1 
                                              %26 = OpTypePointer Uniform %7 
                                          i32 %37 = OpConstant 2 
                               Private f32_4* %45 = OpVariable Private 
                                          i32 %47 = OpConstant 3 
                               Private f32_4* %51 = OpVariable Private 
                                          u32 %71 = OpConstant 1 
                                              %72 = OpTypeArray %6 %71 
                                              %73 = OpTypeStruct %7 %6 %72 
                                              %74 = OpTypePointer Output %73 
         Output struct {f32_4; f32; f32[1];}* %75 = OpVariable Output 
                                              %83 = OpTypePointer Output %7 
                                 Input f32_4* %85 = OpVariable Input 
                                              %86 = OpTypeVector %6 2 
                                          i32 %89 = OpConstant 4 
                                             %100 = OpTypePointer Output %86 
                       Output f32_2* vs_TEXCOORD0 = OpVariable Output 
                                             %104 = OpTypeVector %6 3 
                                             %105 = OpTypePointer Input %104 
                                Input f32_3* %106 = OpVariable Input 
                                         u32 %112 = OpConstant 0 
                                             %113 = OpTypePointer Private %6 
                                         u32 %126 = OpConstant 2 
                                Private f32* %128 = OpVariable Private 
                                             %136 = OpTypePointer Output %104 
                       Output f32_3* vs_TEXCOORD1 = OpVariable Output 
                       Output f32_3* vs_TEXCOORD2 = OpVariable Output 
                       Output f32_3* vs_TEXCOORD3 = OpVariable Output 
                       Output f32_4* vs_TEXCOORD4 = OpVariable Output 
                                         f32 %201 = OpConstant 3.674022E-40 
                                       f32_4 %202 = OpConstantComposite %201 %201 %201 %201 
                                             %203 = OpTypePointer Output %6 
                                          void %4 = OpFunction None %3 
                                               %5 = OpLabel 
                                        f32_4 %12 = OpLoad %11 
                                        f32_4 %13 = OpVectorShuffle %12 %12 1 1 1 1 
                               Uniform f32_4* %27 = OpAccessChain %22 %24 %25 
                                        f32_4 %28 = OpLoad %27 
                                        f32_4 %29 = OpFMul %13 %28 
                                                      OpStore %9 %29 
                               Uniform f32_4* %30 = OpAccessChain %22 %24 %24 
                                        f32_4 %31 = OpLoad %30 
                                        f32_4 %32 = OpLoad %11 
                                        f32_4 %33 = OpVectorShuffle %32 %32 0 0 0 0 
                                        f32_4 %34 = OpFMul %31 %33 
                                        f32_4 %35 = OpLoad %9 
                                        f32_4 %36 = OpFAdd %34 %35 
                                                      OpStore %9 %36 
                               Uniform f32_4* %38 = OpAccessChain %22 %24 %37 
                                        f32_4 %39 = OpLoad %38 
                                        f32_4 %40 = OpLoad %11 
                                        f32_4 %41 = OpVectorShuffle %40 %40 2 2 2 2 
                                        f32_4 %42 = OpFMul %39 %41 
                                        f32_4 %43 = OpLoad %9 
                                        f32_4 %44 = OpFAdd %42 %43 
                                                      OpStore %9 %44 
                                        f32_4 %46 = OpLoad %9 
                               Uniform f32_4* %48 = OpAccessChain %22 %24 %47 
                                        f32_4 %49 = OpLoad %48 
                                        f32_4 %50 = OpFAdd %46 %49 
                                                      OpStore %45 %50 
                                        f32_4 %52 = OpLoad %45 
                                        f32_4 %53 = OpVectorShuffle %52 %52 1 1 1 1 
                               Uniform f32_4* %54 = OpAccessChain %22 %37 %25 
                                        f32_4 %55 = OpLoad %54 
                                        f32_4 %56 = OpFMul %53 %55 
                                                      OpStore %51 %56 
                               Uniform f32_4* %57 = OpAccessChain %22 %37 %24 
                                        f32_4 %58 = OpLoad %57 
                                        f32_4 %59 = OpLoad %45 
                                        f32_4 %60 = OpVectorShuffle %59 %59 0 0 0 0 
                                        f32_4 %61 = OpFMul %58 %60 
                                        f32_4 %62 = OpLoad %51 
                                        f32_4 %63 = OpFAdd %61 %62 
                                                      OpStore %51 %63 
                               Uniform f32_4* %64 = OpAccessChain %22 %37 %37 
                                        f32_4 %65 = OpLoad %64 
                                        f32_4 %66 = OpLoad %45 
                                        f32_4 %67 = OpVectorShuffle %66 %66 2 2 2 2 
                                        f32_4 %68 = OpFMul %65 %67 
                                        f32_4 %69 = OpLoad %51 
                                        f32_4 %70 = OpFAdd %68 %69 
                                                      OpStore %51 %70 
                               Uniform f32_4* %76 = OpAccessChain %22 %37 %47 
                                        f32_4 %77 = OpLoad %76 
                                        f32_4 %78 = OpLoad %45 
                                        f32_4 %79 = OpVectorShuffle %78 %78 3 3 3 3 
                                        f32_4 %80 = OpFMul %77 %79 
                                        f32_4 %81 = OpLoad %51 
                                        f32_4 %82 = OpFAdd %80 %81 
                                Output f32_4* %84 = OpAccessChain %75 %24 
                                                      OpStore %84 %82 
                                        f32_4 %87 = OpLoad %85 
                                        f32_2 %88 = OpVectorShuffle %87 %87 0 1 
                               Uniform f32_4* %90 = OpAccessChain %22 %89 
                                        f32_4 %91 = OpLoad %90 
                                        f32_2 %92 = OpVectorShuffle %91 %91 0 1 
                                        f32_2 %93 = OpFMul %88 %92 
                               Uniform f32_4* %94 = OpAccessChain %22 %89 
                                        f32_4 %95 = OpLoad %94 
                                        f32_2 %96 = OpVectorShuffle %95 %95 2 3 
                                        f32_2 %97 = OpFAdd %93 %96 
                                        f32_4 %98 = OpLoad %45 
                                        f32_4 %99 = OpVectorShuffle %98 %97 4 5 2 3 
                                                      OpStore %45 %99 
                                       f32_4 %102 = OpLoad %45 
                                       f32_2 %103 = OpVectorShuffle %102 %102 0 1 
                                                      OpStore vs_TEXCOORD0 %103 
                                       f32_3 %107 = OpLoad %106 
                              Uniform f32_4* %108 = OpAccessChain %22 %25 %24 
                                       f32_4 %109 = OpLoad %108 
                                       f32_3 %110 = OpVectorShuffle %109 %109 0 1 2 
                                         f32 %111 = OpDot %107 %110 
                                Private f32* %114 = OpAccessChain %45 %112 
                                                      OpStore %114 %111 
                                       f32_3 %115 = OpLoad %106 
                              Uniform f32_4* %116 = OpAccessChain %22 %25 %25 
                                       f32_4 %117 = OpLoad %116 
                                       f32_3 %118 = OpVectorShuffle %117 %117 0 1 2 
                                         f32 %119 = OpDot %115 %118 
                                Private f32* %120 = OpAccessChain %45 %71 
                                                      OpStore %120 %119 
                                       f32_3 %121 = OpLoad %106 
                              Uniform f32_4* %122 = OpAccessChain %22 %25 %37 
                                       f32_4 %123 = OpLoad %122 
                                       f32_3 %124 = OpVectorShuffle %123 %123 0 1 2 
                                         f32 %125 = OpDot %121 %124 
                                Private f32* %127 = OpAccessChain %45 %126 
                                                      OpStore %127 %125 
                                       f32_4 %129 = OpLoad %45 
                                       f32_3 %130 = OpVectorShuffle %129 %129 0 1 2 
                                       f32_4 %131 = OpLoad %45 
                                       f32_3 %132 = OpVectorShuffle %131 %131 0 1 2 
                                         f32 %133 = OpDot %130 %132 
                                                      OpStore %128 %133 
                                         f32 %134 = OpLoad %128 
                                         f32 %135 = OpExtInst %1 32 %134 
                                                      OpStore %128 %135 
                                         f32 %138 = OpLoad %128 
                                       f32_3 %139 = OpCompositeConstruct %138 %138 %138 
                                       f32_4 %140 = OpLoad %45 
                                       f32_3 %141 = OpVectorShuffle %140 %140 0 1 2 
                                       f32_3 %142 = OpFMul %139 %141 
                                                      OpStore vs_TEXCOORD1 %142 
                              Uniform f32_4* %144 = OpAccessChain %22 %24 %47 
                                       f32_4 %145 = OpLoad %144 
                                       f32_3 %146 = OpVectorShuffle %145 %145 0 1 2 
                                       f32_4 %147 = OpLoad %11 
                                       f32_3 %148 = OpVectorShuffle %147 %147 3 3 3 
                                       f32_3 %149 = OpFMul %146 %148 
                                       f32_4 %150 = OpLoad %9 
                                       f32_3 %151 = OpVectorShuffle %150 %150 0 1 2 
                                       f32_3 %152 = OpFAdd %149 %151 
                                                      OpStore vs_TEXCOORD2 %152 
                              Uniform f32_4* %153 = OpAccessChain %22 %24 %47 
                                       f32_4 %154 = OpLoad %153 
                                       f32_4 %155 = OpLoad %11 
                                       f32_4 %156 = OpVectorShuffle %155 %155 3 3 3 3 
                                       f32_4 %157 = OpFMul %154 %156 
                                       f32_4 %158 = OpLoad %9 
                                       f32_4 %159 = OpFAdd %157 %158 
                                                      OpStore %9 %159 
                                       f32_4 %160 = OpLoad %9 
                                       f32_3 %161 = OpVectorShuffle %160 %160 1 1 1 
                              Uniform f32_4* %162 = OpAccessChain %22 %47 %25 
                                       f32_4 %163 = OpLoad %162 
                                       f32_3 %164 = OpVectorShuffle %163 %163 0 1 2 
                                       f32_3 %165 = OpFMul %161 %164 
                                       f32_4 %166 = OpLoad %45 
                                       f32_4 %167 = OpVectorShuffle %166 %165 4 5 6 3 
                                                      OpStore %45 %167 
                              Uniform f32_4* %168 = OpAccessChain %22 %47 %24 
                                       f32_4 %169 = OpLoad %168 
                                       f32_3 %170 = OpVectorShuffle %169 %169 0 1 2 
                                       f32_4 %171 = OpLoad %9 
                                       f32_3 %172 = OpVectorShuffle %171 %171 0 0 0 
                                       f32_3 %173 = OpFMul %170 %172 
                                       f32_4 %174 = OpLoad %45 
                                       f32_3 %175 = OpVectorShuffle %174 %174 0 1 2 
                                       f32_3 %176 = OpFAdd %173 %175 
                                       f32_4 %177 = OpLoad %45 
                                       f32_4 %178 = OpVectorShuffle %177 %176 4 5 6 3 
                                                      OpStore %45 %178 
                              Uniform f32_4* %179 = OpAccessChain %22 %47 %37 
                                       f32_4 %180 = OpLoad %179 
                                       f32_3 %181 = OpVectorShuffle %180 %180 0 1 2 
                                       f32_4 %182 = OpLoad %9 
                                       f32_3 %183 = OpVectorShuffle %182 %182 2 2 2 
                                       f32_3 %184 = OpFMul %181 %183 
                                       f32_4 %185 = OpLoad %45 
                                       f32_3 %186 = OpVectorShuffle %185 %185 0 1 2 
                                       f32_3 %187 = OpFAdd %184 %186 
                                       f32_4 %188 = OpLoad %9 
                                       f32_4 %189 = OpVectorShuffle %188 %187 4 5 6 3 
                                                      OpStore %9 %189 
                              Uniform f32_4* %191 = OpAccessChain %22 %47 %47 
                                       f32_4 %192 = OpLoad %191 
                                       f32_3 %193 = OpVectorShuffle %192 %192 0 1 2 
                                       f32_4 %194 = OpLoad %9 
                                       f32_3 %195 = OpVectorShuffle %194 %194 3 3 3 
                                       f32_3 %196 = OpFMul %193 %195 
                                       f32_4 %197 = OpLoad %9 
                                       f32_3 %198 = OpVectorShuffle %197 %197 0 1 2 
                                       f32_3 %199 = OpFAdd %196 %198 
                                                      OpStore vs_TEXCOORD3 %199 
                                                      OpStore vs_TEXCOORD4 %202 
                                 Output f32* %204 = OpAccessChain %75 %24 %71 
                                         f32 %205 = OpLoad %204 
                                         f32 %206 = OpFNegate %205 
                                 Output f32* %207 = OpAccessChain %75 %24 %71 
                                                      OpStore %207 %206 
                                                      OpReturn
                                                      OpFunctionEnd
; SPIR-V
; Version: 1.0
; Generator: Khronos Glslang Reference Front End; 6
; Bound: 222
; Schema: 0
                                                      OpCapability Shader 
                                               %1 = OpExtInstImport "GLSL.std.450" 
                                                      OpMemoryModel Logical GLSL450 
                                                      OpEntryPoint Fragment %4 "main" %11 %40 %193 %209 
                                                      OpExecutionMode %4 OriginUpperLeft 
                                                      OpName vs_TEXCOORD2 "vs_TEXCOORD2" 
                                                      OpName vs_TEXCOORD1 "vs_TEXCOORD1" 
                                                      OpName vs_TEXCOORD0 "vs_TEXCOORD0" 
                                                      OpDecorate vs_TEXCOORD2 Location 11 
                                                      OpDecorate %17 ArrayStride 17 
                                                      OpMemberDecorate %18 0 Offset 18 
                                                      OpMemberDecorate %18 1 RelaxedPrecision 
                                                      OpMemberDecorate %18 1 Offset 18 
                                                      OpMemberDecorate %18 2 Offset 18 
                                                      OpMemberDecorate %18 3 RelaxedPrecision 
                                                      OpMemberDecorate %18 3 Offset 18 
                                                      OpMemberDecorate %18 4 RelaxedPrecision 
                                                      OpMemberDecorate %18 4 Offset 18 
                                                      OpMemberDecorate %18 5 RelaxedPrecision 
                                                      OpMemberDecorate %18 5 Offset 18 
                                                      OpMemberDecorate %18 6 RelaxedPrecision 
                                                      OpMemberDecorate %18 6 Offset 18 
                                                      OpDecorate %18 Block 
                                                      OpDecorate %20 DescriptorSet 20 
                                                      OpDecorate %20 Binding 20 
                                                      OpDecorate %39 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD1 Location 40 
                                                      OpDecorate %47 RelaxedPrecision 
                                                      OpDecorate %48 RelaxedPrecision 
                                                      OpDecorate %50 RelaxedPrecision 
                                                      OpDecorate %51 RelaxedPrecision 
                                                      OpDecorate %54 RelaxedPrecision 
                                                      OpDecorate %59 RelaxedPrecision 
                                                      OpDecorate %61 RelaxedPrecision 
                                                      OpDecorate %63 RelaxedPrecision 
                                                      OpDecorate %67 RelaxedPrecision 
                                                      OpDecorate %68 RelaxedPrecision 
                                                      OpDecorate %70 RelaxedPrecision 
                                                      OpDecorate %73 RelaxedPrecision 
                                                      OpDecorate %74 RelaxedPrecision 
                                                      OpDecorate %75 RelaxedPrecision 
                                                      OpDecorate %76 RelaxedPrecision 
                                                      OpDecorate %78 RelaxedPrecision 
                                                      OpDecorate %79 RelaxedPrecision 
                                                      OpDecorate %81 RelaxedPrecision 
                                                      OpDecorate %83 RelaxedPrecision 
                                                      OpDecorate %84 RelaxedPrecision 
                                                      OpDecorate %86 RelaxedPrecision 
                                                      OpDecorate %87 RelaxedPrecision 
                                                      OpDecorate %88 RelaxedPrecision 
                                                      OpDecorate %89 RelaxedPrecision 
                                                      OpDecorate %90 RelaxedPrecision 
                                                      OpDecorate %91 RelaxedPrecision 
                                                      OpDecorate %93 RelaxedPrecision 
                                                      OpDecorate %94 RelaxedPrecision 
                                                      OpDecorate %95 RelaxedPrecision 
                                                      OpDecorate %97 RelaxedPrecision 
                                                      OpDecorate %98 RelaxedPrecision 
                                                      OpDecorate %101 RelaxedPrecision 
                                                      OpDecorate %102 RelaxedPrecision 
                                                      OpDecorate %105 RelaxedPrecision 
                                                      OpDecorate %107 RelaxedPrecision 
                                                      OpDecorate %109 RelaxedPrecision 
                                                      OpDecorate %111 RelaxedPrecision 
                                                      OpDecorate %113 RelaxedPrecision 
                                                      OpDecorate %114 RelaxedPrecision 
                                                      OpDecorate %117 RelaxedPrecision 
                                                      OpDecorate %118 RelaxedPrecision 
                                                      OpDecorate %119 RelaxedPrecision 
                                                      OpDecorate %121 RelaxedPrecision 
                                                      OpDecorate %122 RelaxedPrecision 
                                                      OpDecorate %125 RelaxedPrecision 
                                                      OpDecorate %126 RelaxedPrecision 
                                                      OpDecorate %127 RelaxedPrecision 
                                                      OpDecorate %164 DescriptorSet 164 
                                                      OpDecorate %164 Binding 164 
                                                      OpDecorate %168 DescriptorSet 168 
                                                      OpDecorate %168 Binding 168 
                                                      OpDecorate %178 RelaxedPrecision 
                                                      OpDecorate %182 RelaxedPrecision 
                                                      OpDecorate %183 RelaxedPrecision 
                                                      OpDecorate %186 RelaxedPrecision 
                                                      OpDecorate %187 RelaxedPrecision 
                                                      OpDecorate %187 DescriptorSet 187 
                                                      OpDecorate %187 Binding 187 
                                                      OpDecorate %188 RelaxedPrecision 
                                                      OpDecorate %189 RelaxedPrecision 
                                                      OpDecorate %189 DescriptorSet 189 
                                                      OpDecorate %189 Binding 189 
                                                      OpDecorate %190 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD0 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD0 Location 193 
                                                      OpDecorate %194 RelaxedPrecision 
                                                      OpDecorate %195 RelaxedPrecision 
                                                      OpDecorate %196 RelaxedPrecision 
                                                      OpDecorate %197 RelaxedPrecision 
                                                      OpDecorate %199 RelaxedPrecision 
                                                      OpDecorate %200 RelaxedPrecision 
                                                      OpDecorate %201 RelaxedPrecision 
                                                      OpDecorate %202 RelaxedPrecision 
                                                      OpDecorate %203 RelaxedPrecision 
                                                      OpDecorate %204 RelaxedPrecision 
                                                      OpDecorate %205 RelaxedPrecision 
                                                      OpDecorate %206 RelaxedPrecision 
                                                      OpDecorate %207 RelaxedPrecision 
                                                      OpDecorate %209 RelaxedPrecision 
                                                      OpDecorate %209 Location 209 
                                                      OpDecorate %210 RelaxedPrecision 
                                                      OpDecorate %211 RelaxedPrecision 
                                                      OpDecorate %212 RelaxedPrecision 
                                                      OpDecorate %213 RelaxedPrecision 
                                                      OpDecorate %218 RelaxedPrecision 
                                               %2 = OpTypeVoid 
                                               %3 = OpTypeFunction %2 
                                               %6 = OpTypeFloat 32 
                                               %7 = OpTypeVector %6 3 
                                               %8 = OpTypePointer Private %7 
                                Private f32_3* %9 = OpVariable Private 
                                              %10 = OpTypePointer Input %7 
                        Input f32_3* vs_TEXCOORD2 = OpVariable Input 
                                              %14 = OpTypeVector %6 4 
                                              %15 = OpTypeInt 32 0 
                                          u32 %16 = OpConstant 4 
                                              %17 = OpTypeArray %14 %16 
                                              %18 = OpTypeStruct %14 %14 %17 %14 %14 %6 %6 
                                              %19 = OpTypePointer Uniform %18 
Uniform struct {f32_4; f32_4; f32_4[4]; f32_4; f32_4; f32; f32;}* %20 = OpVariable Uniform 
                                              %21 = OpTypeInt 32 1 
                                          i32 %22 = OpConstant 0 
                                              %23 = OpTypePointer Uniform %14 
                                              %28 = OpTypePointer Private %6 
                                 Private f32* %29 = OpVariable Private 
                               Private f32_3* %39 = OpVariable Private 
                        Input f32_3* vs_TEXCOORD1 = OpVariable Input 
                                          u32 %44 = OpConstant 0 
                                          f32 %60 = OpConstant 3.674022E-40 
                                 Private f32* %63 = OpVariable Private 
                                          i32 %64 = OpConstant 6 
                                              %65 = OpTypePointer Uniform %6 
                                          f32 %69 = OpConstant 3.674022E-40 
                                          i32 %71 = OpConstant 5 
                                 Private f32* %81 = OpVariable Private 
                                          f32 %92 = OpConstant 3.674022E-40 
                                         f32 %106 = OpConstant 3.674022E-40 
                                         f32 %108 = OpConstant 3.674022E-40 
                                         i32 %123 = OpConstant 4 
                                         i32 %130 = OpConstant 2 
                                         i32 %131 = OpConstant 1 
                                         i32 %153 = OpConstant 3 
                                             %162 = OpTypeImage %6 Dim2D 0 0 0 1 Unknown 
                                             %163 = OpTypePointer UniformConstant %162 
        UniformConstant read_only Texture2D* %164 = OpVariable UniformConstant 
                                             %166 = OpTypeSampler 
                                             %167 = OpTypePointer UniformConstant %166 
                    UniformConstant sampler* %168 = OpVariable UniformConstant 
                                             %170 = OpTypeSampledImage %162 
                                             %172 = OpTypeVector %6 2 
                              Private f32_3* %178 = OpVariable Private 
                                             %185 = OpTypePointer Private %14 
                              Private f32_4* %186 = OpVariable Private 
        UniformConstant read_only Texture2D* %187 = OpVariable UniformConstant 
                    UniformConstant sampler* %189 = OpVariable UniformConstant 
                                             %192 = OpTypePointer Input %172 
                        Input f32_2* vs_TEXCOORD0 = OpVariable Input 
                              Private f32_4* %196 = OpVariable Private 
                                             %208 = OpTypePointer Output %14 
                               Output f32_4* %209 = OpVariable Output 
                                         u32 %216 = OpConstant 3 
                                             %219 = OpTypePointer Output %6 
                                          void %4 = OpFunction None %3 
                                               %5 = OpLabel 
                                        f32_3 %12 = OpLoad vs_TEXCOORD2 
                                        f32_3 %13 = OpFNegate %12 
                               Uniform f32_4* %24 = OpAccessChain %20 %22 
                                        f32_4 %25 = OpLoad %24 
                                        f32_3 %26 = OpVectorShuffle %25 %25 0 1 2 
                                        f32_3 %27 = OpFAdd %13 %26 
                                                      OpStore %9 %27 
                                        f32_3 %30 = OpLoad %9 
                                        f32_3 %31 = OpLoad %9 
                                          f32 %32 = OpDot %30 %31 
                                                      OpStore %29 %32 
                                          f32 %33 = OpLoad %29 
                                          f32 %34 = OpExtInst %1 32 %33 
                                                      OpStore %29 %34 
                                          f32 %35 = OpLoad %29 
                                        f32_3 %36 = OpCompositeConstruct %35 %35 %35 
                                        f32_3 %37 = OpLoad %9 
                                        f32_3 %38 = OpFMul %36 %37 
                                                      OpStore %9 %38 
                                        f32_3 %41 = OpLoad vs_TEXCOORD1 
                                        f32_3 %42 = OpLoad vs_TEXCOORD1 
                                          f32 %43 = OpDot %41 %42 
                                 Private f32* %45 = OpAccessChain %39 %44 
                                                      OpStore %45 %43 
                                 Private f32* %46 = OpAccessChain %39 %44 
                                          f32 %47 = OpLoad %46 
                                          f32 %48 = OpExtInst %1 32 %47 
                                 Private f32* %49 = OpAccessChain %39 %44 
                                                      OpStore %49 %48 
                                        f32_3 %50 = OpLoad %39 
                                        f32_3 %51 = OpVectorShuffle %50 %50 0 0 0 
                                        f32_3 %52 = OpLoad vs_TEXCOORD1 
                                        f32_3 %53 = OpFMul %51 %52 
                                                      OpStore %39 %53 
                                        f32_3 %54 = OpLoad %39 
                                        f32_3 %55 = OpLoad %9 
                                          f32 %56 = OpDot %54 %55 
                                 Private f32* %57 = OpAccessChain %39 %44 
                                                      OpStore %57 %56 
                                 Private f32* %58 = OpAccessChain %39 %44 
                                          f32 %59 = OpLoad %58 
                                          f32 %61 = OpExtInst %1 40 %59 %60 
                                 Private f32* %62 = OpAccessChain %39 %44 
                                                      OpStore %62 %61 
                                 Uniform f32* %66 = OpAccessChain %20 %64 
                                          f32 %67 = OpLoad %66 
                                          f32 %68 = OpFNegate %67 
                                          f32 %70 = OpFMul %68 %69 
                                 Uniform f32* %72 = OpAccessChain %20 %71 
                                          f32 %73 = OpLoad %72 
                                          f32 %74 = OpFAdd %70 %73 
                                                      OpStore %63 %74 
                                          f32 %75 = OpLoad %63 
                                          f32 %76 = OpFNegate %75 
                                 Private f32* %77 = OpAccessChain %39 %44 
                                          f32 %78 = OpLoad %77 
                                          f32 %79 = OpFAdd %76 %78 
                                 Private f32* %80 = OpAccessChain %39 %44 
                                                      OpStore %80 %79 
                                 Uniform f32* %82 = OpAccessChain %20 %64 
                                          f32 %83 = OpLoad %82 
                                          f32 %84 = OpFMul %83 %69 
                                 Uniform f32* %85 = OpAccessChain %20 %71 
                                          f32 %86 = OpLoad %85 
                                          f32 %87 = OpFAdd %84 %86 
                                                      OpStore %81 %87 
                                          f32 %88 = OpLoad %63 
                                          f32 %89 = OpFNegate %88 
                                          f32 %90 = OpLoad %81 
                                          f32 %91 = OpFAdd %89 %90 
                                                      OpStore %63 %91 
                                          f32 %93 = OpLoad %63 
                                          f32 %94 = OpFDiv %92 %93 
                                                      OpStore %63 %94 
                                          f32 %95 = OpLoad %63 
                                 Private f32* %96 = OpAccessChain %39 %44 
                                          f32 %97 = OpLoad %96 
                                          f32 %98 = OpFMul %95 %97 
                                 Private f32* %99 = OpAccessChain %39 %44 
                                                      OpStore %99 %98 
                                Private f32* %100 = OpAccessChain %39 %44 
                                         f32 %101 = OpLoad %100 
                                         f32 %102 = OpExtInst %1 43 %101 %60 %92 
                                Private f32* %103 = OpAccessChain %39 %44 
                                                      OpStore %103 %102 
                                Private f32* %104 = OpAccessChain %39 %44 
                                         f32 %105 = OpLoad %104 
                                         f32 %107 = OpFMul %105 %106 
                                         f32 %109 = OpFAdd %107 %108 
                                                      OpStore %63 %109 
                                Private f32* %110 = OpAccessChain %39 %44 
                                         f32 %111 = OpLoad %110 
                                Private f32* %112 = OpAccessChain %39 %44 
                                         f32 %113 = OpLoad %112 
                                         f32 %114 = OpFMul %111 %113 
                                Private f32* %115 = OpAccessChain %39 %44 
                                                      OpStore %115 %114 
                                Private f32* %116 = OpAccessChain %39 %44 
                                         f32 %117 = OpLoad %116 
                                         f32 %118 = OpLoad %63 
                                         f32 %119 = OpFMul %117 %118 
                                Private f32* %120 = OpAccessChain %39 %44 
                                                      OpStore %120 %119 
                                       f32_3 %121 = OpLoad %39 
                                       f32_3 %122 = OpVectorShuffle %121 %121 0 0 0 
                              Uniform f32_4* %124 = OpAccessChain %20 %123 
                                       f32_4 %125 = OpLoad %124 
                                       f32_3 %126 = OpVectorShuffle %125 %125 0 1 2 
                                       f32_3 %127 = OpFMul %122 %126 
                                                      OpStore %39 %127 
                                       f32_3 %128 = OpLoad vs_TEXCOORD2 
                                       f32_3 %129 = OpVectorShuffle %128 %128 1 1 1 
                              Uniform f32_4* %132 = OpAccessChain %20 %130 %131 
                                       f32_4 %133 = OpLoad %132 
                                       f32_3 %134 = OpVectorShuffle %133 %133 0 1 2 
                                       f32_3 %135 = OpFMul %129 %134 
                                                      OpStore %9 %135 
                              Uniform f32_4* %136 = OpAccessChain %20 %130 %22 
                                       f32_4 %137 = OpLoad %136 
                                       f32_3 %138 = OpVectorShuffle %137 %137 0 1 2 
                                       f32_3 %139 = OpLoad vs_TEXCOORD2 
                                       f32_3 %140 = OpVectorShuffle %139 %139 0 0 0 
                                       f32_3 %141 = OpFMul %138 %140 
                                       f32_3 %142 = OpLoad %9 
                                       f32_3 %143 = OpFAdd %141 %142 
                                                      OpStore %9 %143 
                              Uniform f32_4* %144 = OpAccessChain %20 %130 %130 
                                       f32_4 %145 = OpLoad %144 
                                       f32_3 %146 = OpVectorShuffle %145 %145 0 1 2 
                                       f32_3 %147 = OpLoad vs_TEXCOORD2 
                                       f32_3 %148 = OpVectorShuffle %147 %147 2 2 2 
                                       f32_3 %149 = OpFMul %146 %148 
                                       f32_3 %150 = OpLoad %9 
                                       f32_3 %151 = OpFAdd %149 %150 
                                                      OpStore %9 %151 
                                       f32_3 %152 = OpLoad %9 
                              Uniform f32_4* %154 = OpAccessChain %20 %130 %153 
                                       f32_4 %155 = OpLoad %154 
                                       f32_3 %156 = OpVectorShuffle %155 %155 0 1 2 
                                       f32_3 %157 = OpFAdd %152 %156 
                                                      OpStore %9 %157 
                                       f32_3 %158 = OpLoad %9 
                                       f32_3 %159 = OpLoad %9 
                                         f32 %160 = OpDot %158 %159 
                                Private f32* %161 = OpAccessChain %9 %44 
                                                      OpStore %161 %160 
                         read_only Texture2D %165 = OpLoad %164 
                                     sampler %169 = OpLoad %168 
                  read_only Texture2DSampled %171 = OpSampledImage %165 %169 
                                       f32_3 %173 = OpLoad %9 
                                       f32_2 %174 = OpVectorShuffle %173 %173 0 0 
                                       f32_4 %175 = OpImageSampleImplicitLod %171 %174 
                                         f32 %176 = OpCompositeExtract %175 0 
                                Private f32* %177 = OpAccessChain %9 %44 
                                                      OpStore %177 %176 
                                       f32_3 %179 = OpLoad %9 
                                       f32_3 %180 = OpVectorShuffle %179 %179 0 0 0 
                              Uniform f32_4* %181 = OpAccessChain %20 %131 
                                       f32_4 %182 = OpLoad %181 
                                       f32_3 %183 = OpVectorShuffle %182 %182 0 1 2 
                                       f32_3 %184 = OpFMul %180 %183 
                                                      OpStore %178 %184 
                         read_only Texture2D %188 = OpLoad %187 
                                     sampler %190 = OpLoad %189 
                  read_only Texture2DSampled %191 = OpSampledImage %188 %190 
                                       f32_2 %194 = OpLoad vs_TEXCOORD0 
                                       f32_4 %195 = OpImageSampleImplicitLod %191 %194 
                                                      OpStore %186 %195 
                                       f32_4 %197 = OpLoad %186 
                              Uniform f32_4* %198 = OpAccessChain %20 %153 
                                       f32_4 %199 = OpLoad %198 
                                       f32_4 %200 = OpFMul %197 %199 
                                                      OpStore %196 %200 
                                       f32_3 %201 = OpLoad %178 
                                       f32_4 %202 = OpLoad %196 
                                       f32_3 %203 = OpVectorShuffle %202 %202 0 1 2 
                                       f32_3 %204 = OpFMul %201 %203 
                                                      OpStore %178 %204 
                                       f32_3 %205 = OpLoad %39 
                                       f32_3 %206 = OpLoad %178 
                                       f32_3 %207 = OpFMul %205 %206 
                                                      OpStore %39 %207 
                                       f32_4 %210 = OpLoad %196 
                                       f32_3 %211 = OpVectorShuffle %210 %210 3 3 3 
                                       f32_3 %212 = OpLoad %39 
                                       f32_3 %213 = OpFMul %211 %212 
                                       f32_4 %214 = OpLoad %209 
                                       f32_4 %215 = OpVectorShuffle %214 %213 4 5 6 3 
                                                      OpStore %209 %215 
                                Private f32* %217 = OpAccessChain %196 %216 
                                         f32 %218 = OpLoad %217 
                                 Output f32* %220 = OpAccessChain %209 %216 
                                                      OpStore %220 %218 
                                                      OpReturn
                                                      OpFunctionEnd
"
}
SubProgram "gles3 hw_tier00 " {
Keywords { "DIRECTIONAL" }
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in highp vec3 in_NORMAL0;
in highp vec4 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out highp vec3 vs_TEXCOORD1;
out highp vec3 vs_TEXCOORD2;
out highp vec4 vs_TEXCOORD4;
vec4 u_xlat0;
vec4 u_xlat1;
float u_xlat6;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    vs_TEXCOORD2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
    u_xlat0 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat0;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat0;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat0.xy;
    u_xlat0.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat6 = dot(u_xlat0.xyz, u_xlat0.xyz);
    u_xlat6 = inversesqrt(u_xlat6);
    vs_TEXCOORD1.xyz = vec3(u_xlat6) * u_xlat0.xyz;
    vs_TEXCOORD4 = vec4(0.0, 0.0, 0.0, 0.0);
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 _LightColor0;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 _HColor;
uniform 	mediump float _RampThreshold;
uniform 	mediump float _RampSmooth;
UNITY_LOCATION(0) uniform mediump sampler2D _MainTex;
in mediump vec2 vs_TEXCOORD0;
in highp vec3 vs_TEXCOORD1;
layout(location = 0) out mediump vec4 SV_Target0;
mediump vec3 u_xlat16_0;
mediump vec4 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump float u_xlat16_3;
mediump float u_xlat16_6;
void main()
{
    u_xlat16_0.x = dot(vs_TEXCOORD1.xyz, vs_TEXCOORD1.xyz);
    u_xlat16_0.x = inversesqrt(u_xlat16_0.x);
    u_xlat16_0.xyz = u_xlat16_0.xxx * vs_TEXCOORD1.xyz;
    u_xlat16_0.x = dot(u_xlat16_0.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat16_0.x = max(u_xlat16_0.x, 0.0);
    u_xlat16_3 = (-_RampSmooth) * 0.5 + _RampThreshold;
    u_xlat16_0.x = (-u_xlat16_3) + u_xlat16_0.x;
    u_xlat16_6 = _RampSmooth * 0.5 + _RampThreshold;
    u_xlat16_3 = (-u_xlat16_3) + u_xlat16_6;
    u_xlat16_3 = float(1.0) / u_xlat16_3;
    u_xlat16_0.x = u_xlat16_3 * u_xlat16_0.x;
#ifdef UNITY_ADRENO_ES3
    u_xlat16_0.x = min(max(u_xlat16_0.x, 0.0), 1.0);
#else
    u_xlat16_0.x = clamp(u_xlat16_0.x, 0.0, 1.0);
#endif
    u_xlat16_3 = u_xlat16_0.x * -2.0 + 3.0;
    u_xlat16_0.x = u_xlat16_0.x * u_xlat16_0.x;
    u_xlat16_0.x = u_xlat16_0.x * u_xlat16_3;
    u_xlat16_0.xyz = u_xlat16_0.xxx * _HColor.xyz;
    u_xlat16_1 = texture(_MainTex, vs_TEXCOORD0.xy);
    u_xlat16_1 = u_xlat16_1 * _Color;
    u_xlat16_2.xyz = u_xlat16_1.xyz * _LightColor0.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz * u_xlat16_2.xyz;
    SV_Target0.xyz = u_xlat16_1.www * u_xlat16_0.xyz;
    SV_Target0.w = u_xlat16_1.w;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier01 " {
Keywords { "DIRECTIONAL" }
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in highp vec3 in_NORMAL0;
in highp vec4 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out highp vec3 vs_TEXCOORD1;
out highp vec3 vs_TEXCOORD2;
out highp vec4 vs_TEXCOORD4;
vec4 u_xlat0;
vec4 u_xlat1;
float u_xlat6;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    vs_TEXCOORD2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
    u_xlat0 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat0;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat0;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat0.xy;
    u_xlat0.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat6 = dot(u_xlat0.xyz, u_xlat0.xyz);
    u_xlat6 = inversesqrt(u_xlat6);
    vs_TEXCOORD1.xyz = vec3(u_xlat6) * u_xlat0.xyz;
    vs_TEXCOORD4 = vec4(0.0, 0.0, 0.0, 0.0);
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 _LightColor0;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 _HColor;
uniform 	mediump float _RampThreshold;
uniform 	mediump float _RampSmooth;
UNITY_LOCATION(0) uniform mediump sampler2D _MainTex;
in mediump vec2 vs_TEXCOORD0;
in highp vec3 vs_TEXCOORD1;
layout(location = 0) out mediump vec4 SV_Target0;
mediump vec3 u_xlat16_0;
mediump vec4 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump float u_xlat16_3;
mediump float u_xlat16_6;
void main()
{
    u_xlat16_0.x = dot(vs_TEXCOORD1.xyz, vs_TEXCOORD1.xyz);
    u_xlat16_0.x = inversesqrt(u_xlat16_0.x);
    u_xlat16_0.xyz = u_xlat16_0.xxx * vs_TEXCOORD1.xyz;
    u_xlat16_0.x = dot(u_xlat16_0.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat16_0.x = max(u_xlat16_0.x, 0.0);
    u_xlat16_3 = (-_RampSmooth) * 0.5 + _RampThreshold;
    u_xlat16_0.x = (-u_xlat16_3) + u_xlat16_0.x;
    u_xlat16_6 = _RampSmooth * 0.5 + _RampThreshold;
    u_xlat16_3 = (-u_xlat16_3) + u_xlat16_6;
    u_xlat16_3 = float(1.0) / u_xlat16_3;
    u_xlat16_0.x = u_xlat16_3 * u_xlat16_0.x;
#ifdef UNITY_ADRENO_ES3
    u_xlat16_0.x = min(max(u_xlat16_0.x, 0.0), 1.0);
#else
    u_xlat16_0.x = clamp(u_xlat16_0.x, 0.0, 1.0);
#endif
    u_xlat16_3 = u_xlat16_0.x * -2.0 + 3.0;
    u_xlat16_0.x = u_xlat16_0.x * u_xlat16_0.x;
    u_xlat16_0.x = u_xlat16_0.x * u_xlat16_3;
    u_xlat16_0.xyz = u_xlat16_0.xxx * _HColor.xyz;
    u_xlat16_1 = texture(_MainTex, vs_TEXCOORD0.xy);
    u_xlat16_1 = u_xlat16_1 * _Color;
    u_xlat16_2.xyz = u_xlat16_1.xyz * _LightColor0.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz * u_xlat16_2.xyz;
    SV_Target0.xyz = u_xlat16_1.www * u_xlat16_0.xyz;
    SV_Target0.w = u_xlat16_1.w;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier02 " {
Keywords { "DIRECTIONAL" }
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in highp vec3 in_NORMAL0;
in highp vec4 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out highp vec3 vs_TEXCOORD1;
out highp vec3 vs_TEXCOORD2;
out highp vec4 vs_TEXCOORD4;
vec4 u_xlat0;
vec4 u_xlat1;
float u_xlat6;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    vs_TEXCOORD2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
    u_xlat0 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat0;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat0;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat0.xy;
    u_xlat0.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat6 = dot(u_xlat0.xyz, u_xlat0.xyz);
    u_xlat6 = inversesqrt(u_xlat6);
    vs_TEXCOORD1.xyz = vec3(u_xlat6) * u_xlat0.xyz;
    vs_TEXCOORD4 = vec4(0.0, 0.0, 0.0, 0.0);
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 _LightColor0;
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 _HColor;
uniform 	mediump float _RampThreshold;
uniform 	mediump float _RampSmooth;
UNITY_LOCATION(0) uniform mediump sampler2D _MainTex;
in mediump vec2 vs_TEXCOORD0;
in highp vec3 vs_TEXCOORD1;
layout(location = 0) out mediump vec4 SV_Target0;
mediump vec3 u_xlat16_0;
mediump vec4 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump float u_xlat16_3;
mediump float u_xlat16_6;
void main()
{
    u_xlat16_0.x = dot(vs_TEXCOORD1.xyz, vs_TEXCOORD1.xyz);
    u_xlat16_0.x = inversesqrt(u_xlat16_0.x);
    u_xlat16_0.xyz = u_xlat16_0.xxx * vs_TEXCOORD1.xyz;
    u_xlat16_0.x = dot(u_xlat16_0.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat16_0.x = max(u_xlat16_0.x, 0.0);
    u_xlat16_3 = (-_RampSmooth) * 0.5 + _RampThreshold;
    u_xlat16_0.x = (-u_xlat16_3) + u_xlat16_0.x;
    u_xlat16_6 = _RampSmooth * 0.5 + _RampThreshold;
    u_xlat16_3 = (-u_xlat16_3) + u_xlat16_6;
    u_xlat16_3 = float(1.0) / u_xlat16_3;
    u_xlat16_0.x = u_xlat16_3 * u_xlat16_0.x;
#ifdef UNITY_ADRENO_ES3
    u_xlat16_0.x = min(max(u_xlat16_0.x, 0.0), 1.0);
#else
    u_xlat16_0.x = clamp(u_xlat16_0.x, 0.0, 1.0);
#endif
    u_xlat16_3 = u_xlat16_0.x * -2.0 + 3.0;
    u_xlat16_0.x = u_xlat16_0.x * u_xlat16_0.x;
    u_xlat16_0.x = u_xlat16_0.x * u_xlat16_3;
    u_xlat16_0.xyz = u_xlat16_0.xxx * _HColor.xyz;
    u_xlat16_1 = texture(_MainTex, vs_TEXCOORD0.xy);
    u_xlat16_1 = u_xlat16_1 * _Color;
    u_xlat16_2.xyz = u_xlat16_1.xyz * _LightColor0.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz * u_xlat16_2.xyz;
    SV_Target0.xyz = u_xlat16_1.www * u_xlat16_0.xyz;
    SV_Target0.w = u_xlat16_1.w;
    return;
}

#endif
"
}
SubProgram "vulkan hw_tier00 " {
Keywords { "DIRECTIONAL" }
"; SPIR-V
; Version: 1.0
; Generator: Khronos Glslang Reference Front End; 6
; Bound: 159
; Schema: 0
                                                      OpCapability Shader 
                                               %1 = OpExtInstImport "GLSL.std.450" 
                                                      OpMemoryModel Logical GLSL450 
                                                      OpEntryPoint Vertex %4 "main" %11 %52 %85 %95 %110 %114 %144 %150 
                                                      OpName vs_TEXCOORD2 "vs_TEXCOORD2" 
                                                      OpName vs_TEXCOORD0 "vs_TEXCOORD0" 
                                                      OpName vs_TEXCOORD1 "vs_TEXCOORD1" 
                                                      OpName vs_TEXCOORD4 "vs_TEXCOORD4" 
                                                      OpDecorate %11 Location 11 
                                                      OpDecorate %16 ArrayStride 16 
                                                      OpDecorate %17 ArrayStride 17 
                                                      OpDecorate %18 ArrayStride 18 
                                                      OpMemberDecorate %19 0 Offset 19 
                                                      OpMemberDecorate %19 1 Offset 19 
                                                      OpMemberDecorate %19 2 Offset 19 
                                                      OpMemberDecorate %19 3 Offset 19 
                                                      OpDecorate %19 Block 
                                                      OpDecorate %21 DescriptorSet 21 
                                                      OpDecorate %21 Binding 21 
                                                      OpDecorate vs_TEXCOORD2 Location 52 
                                                      OpMemberDecorate %83 0 BuiltIn 83 
                                                      OpMemberDecorate %83 1 BuiltIn 83 
                                                      OpMemberDecorate %83 2 BuiltIn 83 
                                                      OpDecorate %83 Block 
                                                      OpDecorate %95 Location 95 
                                                      OpDecorate vs_TEXCOORD0 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD0 Location 110 
                                                      OpDecorate %114 Location 114 
                                                      OpDecorate vs_TEXCOORD1 Location 144 
                                                      OpDecorate vs_TEXCOORD4 Location 150 
                                               %2 = OpTypeVoid 
                                               %3 = OpTypeFunction %2 
                                               %6 = OpTypeFloat 32 
                                               %7 = OpTypeVector %6 4 
                                               %8 = OpTypePointer Private %7 
                                Private f32_4* %9 = OpVariable Private 
                                              %10 = OpTypePointer Input %7 
                                 Input f32_4* %11 = OpVariable Input 
                                              %14 = OpTypeInt 32 0 
                                          u32 %15 = OpConstant 4 
                                              %16 = OpTypeArray %7 %15 
                                              %17 = OpTypeArray %7 %15 
                                              %18 = OpTypeArray %7 %15 
                                              %19 = OpTypeStruct %16 %17 %18 %7 
                                              %20 = OpTypePointer Uniform %19 
Uniform struct {f32_4[4]; f32_4[4]; f32_4[4]; f32_4;}* %21 = OpVariable Uniform 
                                              %22 = OpTypeInt 32 1 
                                          i32 %23 = OpConstant 0 
                                          i32 %24 = OpConstant 1 
                                              %25 = OpTypePointer Uniform %7 
                                          i32 %36 = OpConstant 2 
                               Private f32_4* %44 = OpVariable Private 
                                          i32 %46 = OpConstant 3 
                                              %50 = OpTypeVector %6 3 
                                              %51 = OpTypePointer Output %50 
                       Output f32_3* vs_TEXCOORD2 = OpVariable Output 
                                          u32 %81 = OpConstant 1 
                                              %82 = OpTypeArray %6 %81 
                                              %83 = OpTypeStruct %7 %6 %82 
                                              %84 = OpTypePointer Output %83 
         Output struct {f32_4; f32; f32[1];}* %85 = OpVariable Output 
                                              %93 = OpTypePointer Output %7 
                                 Input f32_4* %95 = OpVariable Input 
                                              %96 = OpTypeVector %6 2 
                                             %109 = OpTypePointer Output %96 
                       Output f32_2* vs_TEXCOORD0 = OpVariable Output 
                                             %113 = OpTypePointer Input %50 
                                Input f32_3* %114 = OpVariable Input 
                                         u32 %120 = OpConstant 0 
                                             %121 = OpTypePointer Private %6 
                                         u32 %134 = OpConstant 2 
                                Private f32* %136 = OpVariable Private 
                       Output f32_3* vs_TEXCOORD1 = OpVariable Output 
                       Output f32_4* vs_TEXCOORD4 = OpVariable Output 
                                         f32 %151 = OpConstant 3.674022E-40 
                                       f32_4 %152 = OpConstantComposite %151 %151 %151 %151 
                                             %153 = OpTypePointer Output %6 
                                          void %4 = OpFunction None %3 
                                               %5 = OpLabel 
                                        f32_4 %12 = OpLoad %11 
                                        f32_4 %13 = OpVectorShuffle %12 %12 1 1 1 1 
                               Uniform f32_4* %26 = OpAccessChain %21 %23 %24 
                                        f32_4 %27 = OpLoad %26 
                                        f32_4 %28 = OpFMul %13 %27 
                                                      OpStore %9 %28 
                               Uniform f32_4* %29 = OpAccessChain %21 %23 %23 
                                        f32_4 %30 = OpLoad %29 
                                        f32_4 %31 = OpLoad %11 
                                        f32_4 %32 = OpVectorShuffle %31 %31 0 0 0 0 
                                        f32_4 %33 = OpFMul %30 %32 
                                        f32_4 %34 = OpLoad %9 
                                        f32_4 %35 = OpFAdd %33 %34 
                                                      OpStore %9 %35 
                               Uniform f32_4* %37 = OpAccessChain %21 %23 %36 
                                        f32_4 %38 = OpLoad %37 
                                        f32_4 %39 = OpLoad %11 
                                        f32_4 %40 = OpVectorShuffle %39 %39 2 2 2 2 
                                        f32_4 %41 = OpFMul %38 %40 
                                        f32_4 %42 = OpLoad %9 
                                        f32_4 %43 = OpFAdd %41 %42 
                                                      OpStore %9 %43 
                                        f32_4 %45 = OpLoad %9 
                               Uniform f32_4* %47 = OpAccessChain %21 %23 %46 
                                        f32_4 %48 = OpLoad %47 
                                        f32_4 %49 = OpFAdd %45 %48 
                                                      OpStore %44 %49 
                               Uniform f32_4* %53 = OpAccessChain %21 %23 %46 
                                        f32_4 %54 = OpLoad %53 
                                        f32_3 %55 = OpVectorShuffle %54 %54 0 1 2 
                                        f32_4 %56 = OpLoad %11 
                                        f32_3 %57 = OpVectorShuffle %56 %56 3 3 3 
                                        f32_3 %58 = OpFMul %55 %57 
                                        f32_4 %59 = OpLoad %9 
                                        f32_3 %60 = OpVectorShuffle %59 %59 0 1 2 
                                        f32_3 %61 = OpFAdd %58 %60 
                                                      OpStore vs_TEXCOORD2 %61 
                                        f32_4 %62 = OpLoad %44 
                                        f32_4 %63 = OpVectorShuffle %62 %62 1 1 1 1 
                               Uniform f32_4* %64 = OpAccessChain %21 %36 %24 
                                        f32_4 %65 = OpLoad %64 
                                        f32_4 %66 = OpFMul %63 %65 
                                                      OpStore %9 %66 
                               Uniform f32_4* %67 = OpAccessChain %21 %36 %23 
                                        f32_4 %68 = OpLoad %67 
                                        f32_4 %69 = OpLoad %44 
                                        f32_4 %70 = OpVectorShuffle %69 %69 0 0 0 0 
                                        f32_4 %71 = OpFMul %68 %70 
                                        f32_4 %72 = OpLoad %9 
                                        f32_4 %73 = OpFAdd %71 %72 
                                                      OpStore %9 %73 
                               Uniform f32_4* %74 = OpAccessChain %21 %36 %36 
                                        f32_4 %75 = OpLoad %74 
                                        f32_4 %76 = OpLoad %44 
                                        f32_4 %77 = OpVectorShuffle %76 %76 2 2 2 2 
                                        f32_4 %78 = OpFMul %75 %77 
                                        f32_4 %79 = OpLoad %9 
                                        f32_4 %80 = OpFAdd %78 %79 
                                                      OpStore %9 %80 
                               Uniform f32_4* %86 = OpAccessChain %21 %36 %46 
                                        f32_4 %87 = OpLoad %86 
                                        f32_4 %88 = OpLoad %44 
                                        f32_4 %89 = OpVectorShuffle %88 %88 3 3 3 3 
                                        f32_4 %90 = OpFMul %87 %89 
                                        f32_4 %91 = OpLoad %9 
                                        f32_4 %92 = OpFAdd %90 %91 
                                Output f32_4* %94 = OpAccessChain %85 %23 
                                                      OpStore %94 %92 
                                        f32_4 %97 = OpLoad %95 
                                        f32_2 %98 = OpVectorShuffle %97 %97 0 1 
                               Uniform f32_4* %99 = OpAccessChain %21 %46 
                                       f32_4 %100 = OpLoad %99 
                                       f32_2 %101 = OpVectorShuffle %100 %100 0 1 
                                       f32_2 %102 = OpFMul %98 %101 
                              Uniform f32_4* %103 = OpAccessChain %21 %46 
                                       f32_4 %104 = OpLoad %103 
                                       f32_2 %105 = OpVectorShuffle %104 %104 2 3 
                                       f32_2 %106 = OpFAdd %102 %105 
                                       f32_4 %107 = OpLoad %9 
                                       f32_4 %108 = OpVectorShuffle %107 %106 4 5 2 3 
                                                      OpStore %9 %108 
                                       f32_4 %111 = OpLoad %9 
                                       f32_2 %112 = OpVectorShuffle %111 %111 0 1 
                                                      OpStore vs_TEXCOORD0 %112 
                                       f32_3 %115 = OpLoad %114 
                              Uniform f32_4* %116 = OpAccessChain %21 %24 %23 
                                       f32_4 %117 = OpLoad %116 
                                       f32_3 %118 = OpVectorShuffle %117 %117 0 1 2 
                                         f32 %119 = OpDot %115 %118 
                                Private f32* %122 = OpAccessChain %9 %120 
                                                      OpStore %122 %119 
                                       f32_3 %123 = OpLoad %114 
                              Uniform f32_4* %124 = OpAccessChain %21 %24 %24 
                                       f32_4 %125 = OpLoad %124 
                                       f32_3 %126 = OpVectorShuffle %125 %125 0 1 2 
                                         f32 %127 = OpDot %123 %126 
                                Private f32* %128 = OpAccessChain %9 %81 
                                                      OpStore %128 %127 
                                       f32_3 %129 = OpLoad %114 
                              Uniform f32_4* %130 = OpAccessChain %21 %24 %36 
                                       f32_4 %131 = OpLoad %130 
                                       f32_3 %132 = OpVectorShuffle %131 %131 0 1 2 
                                         f32 %133 = OpDot %129 %132 
                                Private f32* %135 = OpAccessChain %9 %134 
                                                      OpStore %135 %133 
                                       f32_4 %137 = OpLoad %9 
                                       f32_3 %138 = OpVectorShuffle %137 %137 0 1 2 
                                       f32_4 %139 = OpLoad %9 
                                       f32_3 %140 = OpVectorShuffle %139 %139 0 1 2 
                                         f32 %141 = OpDot %138 %140 
                                                      OpStore %136 %141 
                                         f32 %142 = OpLoad %136 
                                         f32 %143 = OpExtInst %1 32 %142 
                                                      OpStore %136 %143 
                                         f32 %145 = OpLoad %136 
                                       f32_3 %146 = OpCompositeConstruct %145 %145 %145 
                                       f32_4 %147 = OpLoad %9 
                                       f32_3 %148 = OpVectorShuffle %147 %147 0 1 2 
                                       f32_3 %149 = OpFMul %146 %148 
                                                      OpStore vs_TEXCOORD1 %149 
                                                      OpStore vs_TEXCOORD4 %152 
                                 Output f32* %154 = OpAccessChain %85 %23 %81 
                                         f32 %155 = OpLoad %154 
                                         f32 %156 = OpFNegate %155 
                                 Output f32* %157 = OpAccessChain %85 %23 %81 
                                                      OpStore %157 %156 
                                                      OpReturn
                                                      OpFunctionEnd
; SPIR-V
; Version: 1.0
; Generator: Khronos Glslang Reference Front End; 6
; Bound: 158
; Schema: 0
                                                      OpCapability Shader 
                                               %1 = OpExtInstImport "GLSL.std.450" 
                                                      OpMemoryModel Logical GLSL450 
                                                      OpEntryPoint Fragment %4 "main" %11 %124 %145 
                                                      OpExecutionMode %4 OriginUpperLeft 
                                                      OpName vs_TEXCOORD1 "vs_TEXCOORD1" 
                                                      OpName vs_TEXCOORD0 "vs_TEXCOORD0" 
                                                      OpDecorate %9 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD1 Location 11 
                                                      OpDecorate %20 RelaxedPrecision 
                                                      OpDecorate %21 RelaxedPrecision 
                                                      OpDecorate %23 RelaxedPrecision 
                                                      OpDecorate %24 RelaxedPrecision 
                                                      OpDecorate %27 RelaxedPrecision 
                                                      OpMemberDecorate %29 0 RelaxedPrecision 
                                                      OpMemberDecorate %29 0 Offset 29 
                                                      OpMemberDecorate %29 1 RelaxedPrecision 
                                                      OpMemberDecorate %29 1 Offset 29 
                                                      OpMemberDecorate %29 2 RelaxedPrecision 
                                                      OpMemberDecorate %29 2 Offset 29 
                                                      OpMemberDecorate %29 3 RelaxedPrecision 
                                                      OpMemberDecorate %29 3 Offset 29 
                                                      OpMemberDecorate %29 4 RelaxedPrecision 
                                                      OpMemberDecorate %29 4 Offset 29 
                                                      OpMemberDecorate %29 5 RelaxedPrecision 
                                                      OpMemberDecorate %29 5 Offset 29 
                                                      OpDecorate %29 Block 
                                                      OpDecorate %31 DescriptorSet 31 
                                                      OpDecorate %31 Binding 31 
                                                      OpDecorate %36 RelaxedPrecision 
                                                      OpDecorate %37 RelaxedPrecision 
                                                      OpDecorate %38 RelaxedPrecision 
                                                      OpDecorate %41 RelaxedPrecision 
                                                      OpDecorate %43 RelaxedPrecision 
                                                      OpDecorate %45 RelaxedPrecision 
                                                      OpDecorate %49 RelaxedPrecision 
                                                      OpDecorate %50 RelaxedPrecision 
                                                      OpDecorate %52 RelaxedPrecision 
                                                      OpDecorate %55 RelaxedPrecision 
                                                      OpDecorate %56 RelaxedPrecision 
                                                      OpDecorate %57 RelaxedPrecision 
                                                      OpDecorate %58 RelaxedPrecision 
                                                      OpDecorate %60 RelaxedPrecision 
                                                      OpDecorate %61 RelaxedPrecision 
                                                      OpDecorate %63 RelaxedPrecision 
                                                      OpDecorate %65 RelaxedPrecision 
                                                      OpDecorate %66 RelaxedPrecision 
                                                      OpDecorate %68 RelaxedPrecision 
                                                      OpDecorate %69 RelaxedPrecision 
                                                      OpDecorate %70 RelaxedPrecision 
                                                      OpDecorate %71 RelaxedPrecision 
                                                      OpDecorate %72 RelaxedPrecision 
                                                      OpDecorate %73 RelaxedPrecision 
                                                      OpDecorate %75 RelaxedPrecision 
                                                      OpDecorate %76 RelaxedPrecision 
                                                      OpDecorate %77 RelaxedPrecision 
                                                      OpDecorate %79 RelaxedPrecision 
                                                      OpDecorate %80 RelaxedPrecision 
                                                      OpDecorate %83 RelaxedPrecision 
                                                      OpDecorate %84 RelaxedPrecision 
                                                      OpDecorate %87 RelaxedPrecision 
                                                      OpDecorate %89 RelaxedPrecision 
                                                      OpDecorate %91 RelaxedPrecision 
                                                      OpDecorate %93 RelaxedPrecision 
                                                      OpDecorate %95 RelaxedPrecision 
                                                      OpDecorate %96 RelaxedPrecision 
                                                      OpDecorate %99 RelaxedPrecision 
                                                      OpDecorate %100 RelaxedPrecision 
                                                      OpDecorate %101 RelaxedPrecision 
                                                      OpDecorate %103 RelaxedPrecision 
                                                      OpDecorate %104 RelaxedPrecision 
                                                      OpDecorate %107 RelaxedPrecision 
                                                      OpDecorate %108 RelaxedPrecision 
                                                      OpDecorate %109 RelaxedPrecision 
                                                      OpDecorate %111 RelaxedPrecision 
                                                      OpDecorate %114 RelaxedPrecision 
                                                      OpDecorate %114 DescriptorSet 114 
                                                      OpDecorate %114 Binding 114 
                                                      OpDecorate %115 RelaxedPrecision 
                                                      OpDecorate %118 RelaxedPrecision 
                                                      OpDecorate %118 DescriptorSet 118 
                                                      OpDecorate %118 Binding 118 
                                                      OpDecorate %119 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD0 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD0 Location 124 
                                                      OpDecorate %125 RelaxedPrecision 
                                                      OpDecorate %126 RelaxedPrecision 
                                                      OpDecorate %127 RelaxedPrecision 
                                                      OpDecorate %128 RelaxedPrecision 
                                                      OpDecorate %131 RelaxedPrecision 
                                                      OpDecorate %132 RelaxedPrecision 
                                                      OpDecorate %133 RelaxedPrecision 
                                                      OpDecorate %134 RelaxedPrecision 
                                                      OpDecorate %135 RelaxedPrecision 
                                                      OpDecorate %138 RelaxedPrecision 
                                                      OpDecorate %139 RelaxedPrecision 
                                                      OpDecorate %140 RelaxedPrecision 
                                                      OpDecorate %141 RelaxedPrecision 
                                                      OpDecorate %142 RelaxedPrecision 
                                                      OpDecorate %143 RelaxedPrecision 
                                                      OpDecorate %145 RelaxedPrecision 
                                                      OpDecorate %145 Location 145 
                                                      OpDecorate %146 RelaxedPrecision 
                                                      OpDecorate %147 RelaxedPrecision 
                                                      OpDecorate %148 RelaxedPrecision 
                                                      OpDecorate %149 RelaxedPrecision 
                                                      OpDecorate %154 RelaxedPrecision 
                                               %2 = OpTypeVoid 
                                               %3 = OpTypeFunction %2 
                                               %6 = OpTypeFloat 32 
                                               %7 = OpTypeVector %6 3 
                                               %8 = OpTypePointer Private %7 
                                Private f32_3* %9 = OpVariable Private 
                                              %10 = OpTypePointer Input %7 
                        Input f32_3* vs_TEXCOORD1 = OpVariable Input 
                                              %15 = OpTypeInt 32 0 
                                          u32 %16 = OpConstant 0 
                                              %17 = OpTypePointer Private %6 
                                              %28 = OpTypeVector %6 4 
                                              %29 = OpTypeStruct %28 %28 %28 %28 %6 %6 
                                              %30 = OpTypePointer Uniform %29 
Uniform struct {f32_4; f32_4; f32_4; f32_4; f32; f32;}* %31 = OpVariable Uniform 
                                              %32 = OpTypeInt 32 1 
                                          i32 %33 = OpConstant 0 
                                              %34 = OpTypePointer Uniform %28 
                                          f32 %42 = OpConstant 3.674022E-40 
                                 Private f32* %45 = OpVariable Private 
                                          i32 %46 = OpConstant 5 
                                              %47 = OpTypePointer Uniform %6 
                                          f32 %51 = OpConstant 3.674022E-40 
                                          i32 %53 = OpConstant 4 
                                 Private f32* %63 = OpVariable Private 
                                          f32 %74 = OpConstant 3.674022E-40 
                                          f32 %88 = OpConstant 3.674022E-40 
                                          f32 %90 = OpConstant 3.674022E-40 
                                         i32 %105 = OpConstant 3 
                                             %110 = OpTypePointer Private %28 
                              Private f32_4* %111 = OpVariable Private 
                                             %112 = OpTypeImage %6 Dim2D 0 0 0 1 Unknown 
                                             %113 = OpTypePointer UniformConstant %112 
        UniformConstant read_only Texture2D* %114 = OpVariable UniformConstant 
                                             %116 = OpTypeSampler 
                                             %117 = OpTypePointer UniformConstant %116 
                    UniformConstant sampler* %118 = OpVariable UniformConstant 
                                             %120 = OpTypeSampledImage %112 
                                             %122 = OpTypeVector %6 2 
                                             %123 = OpTypePointer Input %122 
                        Input f32_2* vs_TEXCOORD0 = OpVariable Input 
                              Private f32_4* %127 = OpVariable Private 
                                         i32 %129 = OpConstant 2 
                              Private f32_3* %133 = OpVariable Private 
                                         i32 %136 = OpConstant 1 
                                             %144 = OpTypePointer Output %28 
                               Output f32_4* %145 = OpVariable Output 
                                         u32 %152 = OpConstant 3 
                                             %155 = OpTypePointer Output %6 
                                          void %4 = OpFunction None %3 
                                               %5 = OpLabel 
                                        f32_3 %12 = OpLoad vs_TEXCOORD1 
                                        f32_3 %13 = OpLoad vs_TEXCOORD1 
                                          f32 %14 = OpDot %12 %13 
                                 Private f32* %18 = OpAccessChain %9 %16 
                                                      OpStore %18 %14 
                                 Private f32* %19 = OpAccessChain %9 %16 
                                          f32 %20 = OpLoad %19 
                                          f32 %21 = OpExtInst %1 32 %20 
                                 Private f32* %22 = OpAccessChain %9 %16 
                                                      OpStore %22 %21 
                                        f32_3 %23 = OpLoad %9 
                                        f32_3 %24 = OpVectorShuffle %23 %23 0 0 0 
                                        f32_3 %25 = OpLoad vs_TEXCOORD1 
                                        f32_3 %26 = OpFMul %24 %25 
                                                      OpStore %9 %26 
                                        f32_3 %27 = OpLoad %9 
                               Uniform f32_4* %35 = OpAccessChain %31 %33 
                                        f32_4 %36 = OpLoad %35 
                                        f32_3 %37 = OpVectorShuffle %36 %36 0 1 2 
                                          f32 %38 = OpDot %27 %37 
                                 Private f32* %39 = OpAccessChain %9 %16 
                                                      OpStore %39 %38 
                                 Private f32* %40 = OpAccessChain %9 %16 
                                          f32 %41 = OpLoad %40 
                                          f32 %43 = OpExtInst %1 40 %41 %42 
                                 Private f32* %44 = OpAccessChain %9 %16 
                                                      OpStore %44 %43 
                                 Uniform f32* %48 = OpAccessChain %31 %46 
                                          f32 %49 = OpLoad %48 
                                          f32 %50 = OpFNegate %49 
                                          f32 %52 = OpFMul %50 %51 
                                 Uniform f32* %54 = OpAccessChain %31 %53 
                                          f32 %55 = OpLoad %54 
                                          f32 %56 = OpFAdd %52 %55 
                                                      OpStore %45 %56 
                                          f32 %57 = OpLoad %45 
                                          f32 %58 = OpFNegate %57 
                                 Private f32* %59 = OpAccessChain %9 %16 
                                          f32 %60 = OpLoad %59 
                                          f32 %61 = OpFAdd %58 %60 
                                 Private f32* %62 = OpAccessChain %9 %16 
                                                      OpStore %62 %61 
                                 Uniform f32* %64 = OpAccessChain %31 %46 
                                          f32 %65 = OpLoad %64 
                                          f32 %66 = OpFMul %65 %51 
                                 Uniform f32* %67 = OpAccessChain %31 %53 
                                          f32 %68 = OpLoad %67 
                                          f32 %69 = OpFAdd %66 %68 
                                                      OpStore %63 %69 
                                          f32 %70 = OpLoad %45 
                                          f32 %71 = OpFNegate %70 
                                          f32 %72 = OpLoad %63 
                                          f32 %73 = OpFAdd %71 %72 
                                                      OpStore %45 %73 
                                          f32 %75 = OpLoad %45 
                                          f32 %76 = OpFDiv %74 %75 
                                                      OpStore %45 %76 
                                          f32 %77 = OpLoad %45 
                                 Private f32* %78 = OpAccessChain %9 %16 
                                          f32 %79 = OpLoad %78 
                                          f32 %80 = OpFMul %77 %79 
                                 Private f32* %81 = OpAccessChain %9 %16 
                                                      OpStore %81 %80 
                                 Private f32* %82 = OpAccessChain %9 %16 
                                          f32 %83 = OpLoad %82 
                                          f32 %84 = OpExtInst %1 43 %83 %42 %74 
                                 Private f32* %85 = OpAccessChain %9 %16 
                                                      OpStore %85 %84 
                                 Private f32* %86 = OpAccessChain %9 %16 
                                          f32 %87 = OpLoad %86 
                                          f32 %89 = OpFMul %87 %88 
                                          f32 %91 = OpFAdd %89 %90 
                                                      OpStore %45 %91 
                                 Private f32* %92 = OpAccessChain %9 %16 
                                          f32 %93 = OpLoad %92 
                                 Private f32* %94 = OpAccessChain %9 %16 
                                          f32 %95 = OpLoad %94 
                                          f32 %96 = OpFMul %93 %95 
                                 Private f32* %97 = OpAccessChain %9 %16 
                                                      OpStore %97 %96 
                                 Private f32* %98 = OpAccessChain %9 %16 
                                          f32 %99 = OpLoad %98 
                                         f32 %100 = OpLoad %45 
                                         f32 %101 = OpFMul %99 %100 
                                Private f32* %102 = OpAccessChain %9 %16 
                                                      OpStore %102 %101 
                                       f32_3 %103 = OpLoad %9 
                                       f32_3 %104 = OpVectorShuffle %103 %103 0 0 0 
                              Uniform f32_4* %106 = OpAccessChain %31 %105 
                                       f32_4 %107 = OpLoad %106 
                                       f32_3 %108 = OpVectorShuffle %107 %107 0 1 2 
                                       f32_3 %109 = OpFMul %104 %108 
                                                      OpStore %9 %109 
                         read_only Texture2D %115 = OpLoad %114 
                                     sampler %119 = OpLoad %118 
                  read_only Texture2DSampled %121 = OpSampledImage %115 %119 
                                       f32_2 %125 = OpLoad vs_TEXCOORD0 
                                       f32_4 %126 = OpImageSampleImplicitLod %121 %125 
                                                      OpStore %111 %126 
                                       f32_4 %128 = OpLoad %111 
                              Uniform f32_4* %130 = OpAccessChain %31 %129 
                                       f32_4 %131 = OpLoad %130 
                                       f32_4 %132 = OpFMul %128 %131 
                                                      OpStore %127 %132 
                                       f32_4 %134 = OpLoad %127 
                                       f32_3 %135 = OpVectorShuffle %134 %134 0 1 2 
                              Uniform f32_4* %137 = OpAccessChain %31 %136 
                                       f32_4 %138 = OpLoad %137 
                                       f32_3 %139 = OpVectorShuffle %138 %138 0 1 2 
                                       f32_3 %140 = OpFMul %135 %139 
                                                      OpStore %133 %140 
                                       f32_3 %141 = OpLoad %9 
                                       f32_3 %142 = OpLoad %133 
                                       f32_3 %143 = OpFMul %141 %142 
                                                      OpStore %9 %143 
                                       f32_4 %146 = OpLoad %127 
                                       f32_3 %147 = OpVectorShuffle %146 %146 3 3 3 
                                       f32_3 %148 = OpLoad %9 
                                       f32_3 %149 = OpFMul %147 %148 
                                       f32_4 %150 = OpLoad %145 
                                       f32_4 %151 = OpVectorShuffle %150 %149 4 5 6 3 
                                                      OpStore %145 %151 
                                Private f32* %153 = OpAccessChain %127 %152 
                                         f32 %154 = OpLoad %153 
                                 Output f32* %156 = OpAccessChain %145 %152 
                                                      OpStore %156 %154 
                                                      OpReturn
                                                      OpFunctionEnd
"
}
SubProgram "vulkan hw_tier01 " {
Keywords { "DIRECTIONAL" }
"; SPIR-V
; Version: 1.0
; Generator: Khronos Glslang Reference Front End; 6
; Bound: 159
; Schema: 0
                                                      OpCapability Shader 
                                               %1 = OpExtInstImport "GLSL.std.450" 
                                                      OpMemoryModel Logical GLSL450 
                                                      OpEntryPoint Vertex %4 "main" %11 %52 %85 %95 %110 %114 %144 %150 
                                                      OpName vs_TEXCOORD2 "vs_TEXCOORD2" 
                                                      OpName vs_TEXCOORD0 "vs_TEXCOORD0" 
                                                      OpName vs_TEXCOORD1 "vs_TEXCOORD1" 
                                                      OpName vs_TEXCOORD4 "vs_TEXCOORD4" 
                                                      OpDecorate %11 Location 11 
                                                      OpDecorate %16 ArrayStride 16 
                                                      OpDecorate %17 ArrayStride 17 
                                                      OpDecorate %18 ArrayStride 18 
                                                      OpMemberDecorate %19 0 Offset 19 
                                                      OpMemberDecorate %19 1 Offset 19 
                                                      OpMemberDecorate %19 2 Offset 19 
                                                      OpMemberDecorate %19 3 Offset 19 
                                                      OpDecorate %19 Block 
                                                      OpDecorate %21 DescriptorSet 21 
                                                      OpDecorate %21 Binding 21 
                                                      OpDecorate vs_TEXCOORD2 Location 52 
                                                      OpMemberDecorate %83 0 BuiltIn 83 
                                                      OpMemberDecorate %83 1 BuiltIn 83 
                                                      OpMemberDecorate %83 2 BuiltIn 83 
                                                      OpDecorate %83 Block 
                                                      OpDecorate %95 Location 95 
                                                      OpDecorate vs_TEXCOORD0 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD0 Location 110 
                                                      OpDecorate %114 Location 114 
                                                      OpDecorate vs_TEXCOORD1 Location 144 
                                                      OpDecorate vs_TEXCOORD4 Location 150 
                                               %2 = OpTypeVoid 
                                               %3 = OpTypeFunction %2 
                                               %6 = OpTypeFloat 32 
                                               %7 = OpTypeVector %6 4 
                                               %8 = OpTypePointer Private %7 
                                Private f32_4* %9 = OpVariable Private 
                                              %10 = OpTypePointer Input %7 
                                 Input f32_4* %11 = OpVariable Input 
                                              %14 = OpTypeInt 32 0 
                                          u32 %15 = OpConstant 4 
                                              %16 = OpTypeArray %7 %15 
                                              %17 = OpTypeArray %7 %15 
                                              %18 = OpTypeArray %7 %15 
                                              %19 = OpTypeStruct %16 %17 %18 %7 
                                              %20 = OpTypePointer Uniform %19 
Uniform struct {f32_4[4]; f32_4[4]; f32_4[4]; f32_4;}* %21 = OpVariable Uniform 
                                              %22 = OpTypeInt 32 1 
                                          i32 %23 = OpConstant 0 
                                          i32 %24 = OpConstant 1 
                                              %25 = OpTypePointer Uniform %7 
                                          i32 %36 = OpConstant 2 
                               Private f32_4* %44 = OpVariable Private 
                                          i32 %46 = OpConstant 3 
                                              %50 = OpTypeVector %6 3 
                                              %51 = OpTypePointer Output %50 
                       Output f32_3* vs_TEXCOORD2 = OpVariable Output 
                                          u32 %81 = OpConstant 1 
                                              %82 = OpTypeArray %6 %81 
                                              %83 = OpTypeStruct %7 %6 %82 
                                              %84 = OpTypePointer Output %83 
         Output struct {f32_4; f32; f32[1];}* %85 = OpVariable Output 
                                              %93 = OpTypePointer Output %7 
                                 Input f32_4* %95 = OpVariable Input 
                                              %96 = OpTypeVector %6 2 
                                             %109 = OpTypePointer Output %96 
                       Output f32_2* vs_TEXCOORD0 = OpVariable Output 
                                             %113 = OpTypePointer Input %50 
                                Input f32_3* %114 = OpVariable Input 
                                         u32 %120 = OpConstant 0 
                                             %121 = OpTypePointer Private %6 
                                         u32 %134 = OpConstant 2 
                                Private f32* %136 = OpVariable Private 
                       Output f32_3* vs_TEXCOORD1 = OpVariable Output 
                       Output f32_4* vs_TEXCOORD4 = OpVariable Output 
                                         f32 %151 = OpConstant 3.674022E-40 
                                       f32_4 %152 = OpConstantComposite %151 %151 %151 %151 
                                             %153 = OpTypePointer Output %6 
                                          void %4 = OpFunction None %3 
                                               %5 = OpLabel 
                                        f32_4 %12 = OpLoad %11 
                                        f32_4 %13 = OpVectorShuffle %12 %12 1 1 1 1 
                               Uniform f32_4* %26 = OpAccessChain %21 %23 %24 
                                        f32_4 %27 = OpLoad %26 
                                        f32_4 %28 = OpFMul %13 %27 
                                                      OpStore %9 %28 
                               Uniform f32_4* %29 = OpAccessChain %21 %23 %23 
                                        f32_4 %30 = OpLoad %29 
                                        f32_4 %31 = OpLoad %11 
                                        f32_4 %32 = OpVectorShuffle %31 %31 0 0 0 0 
                                        f32_4 %33 = OpFMul %30 %32 
                                        f32_4 %34 = OpLoad %9 
                                        f32_4 %35 = OpFAdd %33 %34 
                                                      OpStore %9 %35 
                               Uniform f32_4* %37 = OpAccessChain %21 %23 %36 
                                        f32_4 %38 = OpLoad %37 
                                        f32_4 %39 = OpLoad %11 
                                        f32_4 %40 = OpVectorShuffle %39 %39 2 2 2 2 
                                        f32_4 %41 = OpFMul %38 %40 
                                        f32_4 %42 = OpLoad %9 
                                        f32_4 %43 = OpFAdd %41 %42 
                                                      OpStore %9 %43 
                                        f32_4 %45 = OpLoad %9 
                               Uniform f32_4* %47 = OpAccessChain %21 %23 %46 
                                        f32_4 %48 = OpLoad %47 
                                        f32_4 %49 = OpFAdd %45 %48 
                                                      OpStore %44 %49 
                               Uniform f32_4* %53 = OpAccessChain %21 %23 %46 
                                        f32_4 %54 = OpLoad %53 
                                        f32_3 %55 = OpVectorShuffle %54 %54 0 1 2 
                                        f32_4 %56 = OpLoad %11 
                                        f32_3 %57 = OpVectorShuffle %56 %56 3 3 3 
                                        f32_3 %58 = OpFMul %55 %57 
                                        f32_4 %59 = OpLoad %9 
                                        f32_3 %60 = OpVectorShuffle %59 %59 0 1 2 
                                        f32_3 %61 = OpFAdd %58 %60 
                                                      OpStore vs_TEXCOORD2 %61 
                                        f32_4 %62 = OpLoad %44 
                                        f32_4 %63 = OpVectorShuffle %62 %62 1 1 1 1 
                               Uniform f32_4* %64 = OpAccessChain %21 %36 %24 
                                        f32_4 %65 = OpLoad %64 
                                        f32_4 %66 = OpFMul %63 %65 
                                                      OpStore %9 %66 
                               Uniform f32_4* %67 = OpAccessChain %21 %36 %23 
                                        f32_4 %68 = OpLoad %67 
                                        f32_4 %69 = OpLoad %44 
                                        f32_4 %70 = OpVectorShuffle %69 %69 0 0 0 0 
                                        f32_4 %71 = OpFMul %68 %70 
                                        f32_4 %72 = OpLoad %9 
                                        f32_4 %73 = OpFAdd %71 %72 
                                                      OpStore %9 %73 
                               Uniform f32_4* %74 = OpAccessChain %21 %36 %36 
                                        f32_4 %75 = OpLoad %74 
                                        f32_4 %76 = OpLoad %44 
                                        f32_4 %77 = OpVectorShuffle %76 %76 2 2 2 2 
                                        f32_4 %78 = OpFMul %75 %77 
                                        f32_4 %79 = OpLoad %9 
                                        f32_4 %80 = OpFAdd %78 %79 
                                                      OpStore %9 %80 
                               Uniform f32_4* %86 = OpAccessChain %21 %36 %46 
                                        f32_4 %87 = OpLoad %86 
                                        f32_4 %88 = OpLoad %44 
                                        f32_4 %89 = OpVectorShuffle %88 %88 3 3 3 3 
                                        f32_4 %90 = OpFMul %87 %89 
                                        f32_4 %91 = OpLoad %9 
                                        f32_4 %92 = OpFAdd %90 %91 
                                Output f32_4* %94 = OpAccessChain %85 %23 
                                                      OpStore %94 %92 
                                        f32_4 %97 = OpLoad %95 
                                        f32_2 %98 = OpVectorShuffle %97 %97 0 1 
                               Uniform f32_4* %99 = OpAccessChain %21 %46 
                                       f32_4 %100 = OpLoad %99 
                                       f32_2 %101 = OpVectorShuffle %100 %100 0 1 
                                       f32_2 %102 = OpFMul %98 %101 
                              Uniform f32_4* %103 = OpAccessChain %21 %46 
                                       f32_4 %104 = OpLoad %103 
                                       f32_2 %105 = OpVectorShuffle %104 %104 2 3 
                                       f32_2 %106 = OpFAdd %102 %105 
                                       f32_4 %107 = OpLoad %9 
                                       f32_4 %108 = OpVectorShuffle %107 %106 4 5 2 3 
                                                      OpStore %9 %108 
                                       f32_4 %111 = OpLoad %9 
                                       f32_2 %112 = OpVectorShuffle %111 %111 0 1 
                                                      OpStore vs_TEXCOORD0 %112 
                                       f32_3 %115 = OpLoad %114 
                              Uniform f32_4* %116 = OpAccessChain %21 %24 %23 
                                       f32_4 %117 = OpLoad %116 
                                       f32_3 %118 = OpVectorShuffle %117 %117 0 1 2 
                                         f32 %119 = OpDot %115 %118 
                                Private f32* %122 = OpAccessChain %9 %120 
                                                      OpStore %122 %119 
                                       f32_3 %123 = OpLoad %114 
                              Uniform f32_4* %124 = OpAccessChain %21 %24 %24 
                                       f32_4 %125 = OpLoad %124 
                                       f32_3 %126 = OpVectorShuffle %125 %125 0 1 2 
                                         f32 %127 = OpDot %123 %126 
                                Private f32* %128 = OpAccessChain %9 %81 
                                                      OpStore %128 %127 
                                       f32_3 %129 = OpLoad %114 
                              Uniform f32_4* %130 = OpAccessChain %21 %24 %36 
                                       f32_4 %131 = OpLoad %130 
                                       f32_3 %132 = OpVectorShuffle %131 %131 0 1 2 
                                         f32 %133 = OpDot %129 %132 
                                Private f32* %135 = OpAccessChain %9 %134 
                                                      OpStore %135 %133 
                                       f32_4 %137 = OpLoad %9 
                                       f32_3 %138 = OpVectorShuffle %137 %137 0 1 2 
                                       f32_4 %139 = OpLoad %9 
                                       f32_3 %140 = OpVectorShuffle %139 %139 0 1 2 
                                         f32 %141 = OpDot %138 %140 
                                                      OpStore %136 %141 
                                         f32 %142 = OpLoad %136 
                                         f32 %143 = OpExtInst %1 32 %142 
                                                      OpStore %136 %143 
                                         f32 %145 = OpLoad %136 
                                       f32_3 %146 = OpCompositeConstruct %145 %145 %145 
                                       f32_4 %147 = OpLoad %9 
                                       f32_3 %148 = OpVectorShuffle %147 %147 0 1 2 
                                       f32_3 %149 = OpFMul %146 %148 
                                                      OpStore vs_TEXCOORD1 %149 
                                                      OpStore vs_TEXCOORD4 %152 
                                 Output f32* %154 = OpAccessChain %85 %23 %81 
                                         f32 %155 = OpLoad %154 
                                         f32 %156 = OpFNegate %155 
                                 Output f32* %157 = OpAccessChain %85 %23 %81 
                                                      OpStore %157 %156 
                                                      OpReturn
                                                      OpFunctionEnd
; SPIR-V
; Version: 1.0
; Generator: Khronos Glslang Reference Front End; 6
; Bound: 158
; Schema: 0
                                                      OpCapability Shader 
                                               %1 = OpExtInstImport "GLSL.std.450" 
                                                      OpMemoryModel Logical GLSL450 
                                                      OpEntryPoint Fragment %4 "main" %11 %124 %145 
                                                      OpExecutionMode %4 OriginUpperLeft 
                                                      OpName vs_TEXCOORD1 "vs_TEXCOORD1" 
                                                      OpName vs_TEXCOORD0 "vs_TEXCOORD0" 
                                                      OpDecorate %9 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD1 Location 11 
                                                      OpDecorate %20 RelaxedPrecision 
                                                      OpDecorate %21 RelaxedPrecision 
                                                      OpDecorate %23 RelaxedPrecision 
                                                      OpDecorate %24 RelaxedPrecision 
                                                      OpDecorate %27 RelaxedPrecision 
                                                      OpMemberDecorate %29 0 RelaxedPrecision 
                                                      OpMemberDecorate %29 0 Offset 29 
                                                      OpMemberDecorate %29 1 RelaxedPrecision 
                                                      OpMemberDecorate %29 1 Offset 29 
                                                      OpMemberDecorate %29 2 RelaxedPrecision 
                                                      OpMemberDecorate %29 2 Offset 29 
                                                      OpMemberDecorate %29 3 RelaxedPrecision 
                                                      OpMemberDecorate %29 3 Offset 29 
                                                      OpMemberDecorate %29 4 RelaxedPrecision 
                                                      OpMemberDecorate %29 4 Offset 29 
                                                      OpMemberDecorate %29 5 RelaxedPrecision 
                                                      OpMemberDecorate %29 5 Offset 29 
                                                      OpDecorate %29 Block 
                                                      OpDecorate %31 DescriptorSet 31 
                                                      OpDecorate %31 Binding 31 
                                                      OpDecorate %36 RelaxedPrecision 
                                                      OpDecorate %37 RelaxedPrecision 
                                                      OpDecorate %38 RelaxedPrecision 
                                                      OpDecorate %41 RelaxedPrecision 
                                                      OpDecorate %43 RelaxedPrecision 
                                                      OpDecorate %45 RelaxedPrecision 
                                                      OpDecorate %49 RelaxedPrecision 
                                                      OpDecorate %50 RelaxedPrecision 
                                                      OpDecorate %52 RelaxedPrecision 
                                                      OpDecorate %55 RelaxedPrecision 
                                                      OpDecorate %56 RelaxedPrecision 
                                                      OpDecorate %57 RelaxedPrecision 
                                                      OpDecorate %58 RelaxedPrecision 
                                                      OpDecorate %60 RelaxedPrecision 
                                                      OpDecorate %61 RelaxedPrecision 
                                                      OpDecorate %63 RelaxedPrecision 
                                                      OpDecorate %65 RelaxedPrecision 
                                                      OpDecorate %66 RelaxedPrecision 
                                                      OpDecorate %68 RelaxedPrecision 
                                                      OpDecorate %69 RelaxedPrecision 
                                                      OpDecorate %70 RelaxedPrecision 
                                                      OpDecorate %71 RelaxedPrecision 
                                                      OpDecorate %72 RelaxedPrecision 
                                                      OpDecorate %73 RelaxedPrecision 
                                                      OpDecorate %75 RelaxedPrecision 
                                                      OpDecorate %76 RelaxedPrecision 
                                                      OpDecorate %77 RelaxedPrecision 
                                                      OpDecorate %79 RelaxedPrecision 
                                                      OpDecorate %80 RelaxedPrecision 
                                                      OpDecorate %83 RelaxedPrecision 
                                                      OpDecorate %84 RelaxedPrecision 
                                                      OpDecorate %87 RelaxedPrecision 
                                                      OpDecorate %89 RelaxedPrecision 
                                                      OpDecorate %91 RelaxedPrecision 
                                                      OpDecorate %93 RelaxedPrecision 
                                                      OpDecorate %95 RelaxedPrecision 
                                                      OpDecorate %96 RelaxedPrecision 
                                                      OpDecorate %99 RelaxedPrecision 
                                                      OpDecorate %100 RelaxedPrecision 
                                                      OpDecorate %101 RelaxedPrecision 
                                                      OpDecorate %103 RelaxedPrecision 
                                                      OpDecorate %104 RelaxedPrecision 
                                                      OpDecorate %107 RelaxedPrecision 
                                                      OpDecorate %108 RelaxedPrecision 
                                                      OpDecorate %109 RelaxedPrecision 
                                                      OpDecorate %111 RelaxedPrecision 
                                                      OpDecorate %114 RelaxedPrecision 
                                                      OpDecorate %114 DescriptorSet 114 
                                                      OpDecorate %114 Binding 114 
                                                      OpDecorate %115 RelaxedPrecision 
                                                      OpDecorate %118 RelaxedPrecision 
                                                      OpDecorate %118 DescriptorSet 118 
                                                      OpDecorate %118 Binding 118 
                                                      OpDecorate %119 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD0 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD0 Location 124 
                                                      OpDecorate %125 RelaxedPrecision 
                                                      OpDecorate %126 RelaxedPrecision 
                                                      OpDecorate %127 RelaxedPrecision 
                                                      OpDecorate %128 RelaxedPrecision 
                                                      OpDecorate %131 RelaxedPrecision 
                                                      OpDecorate %132 RelaxedPrecision 
                                                      OpDecorate %133 RelaxedPrecision 
                                                      OpDecorate %134 RelaxedPrecision 
                                                      OpDecorate %135 RelaxedPrecision 
                                                      OpDecorate %138 RelaxedPrecision 
                                                      OpDecorate %139 RelaxedPrecision 
                                                      OpDecorate %140 RelaxedPrecision 
                                                      OpDecorate %141 RelaxedPrecision 
                                                      OpDecorate %142 RelaxedPrecision 
                                                      OpDecorate %143 RelaxedPrecision 
                                                      OpDecorate %145 RelaxedPrecision 
                                                      OpDecorate %145 Location 145 
                                                      OpDecorate %146 RelaxedPrecision 
                                                      OpDecorate %147 RelaxedPrecision 
                                                      OpDecorate %148 RelaxedPrecision 
                                                      OpDecorate %149 RelaxedPrecision 
                                                      OpDecorate %154 RelaxedPrecision 
                                               %2 = OpTypeVoid 
                                               %3 = OpTypeFunction %2 
                                               %6 = OpTypeFloat 32 
                                               %7 = OpTypeVector %6 3 
                                               %8 = OpTypePointer Private %7 
                                Private f32_3* %9 = OpVariable Private 
                                              %10 = OpTypePointer Input %7 
                        Input f32_3* vs_TEXCOORD1 = OpVariable Input 
                                              %15 = OpTypeInt 32 0 
                                          u32 %16 = OpConstant 0 
                                              %17 = OpTypePointer Private %6 
                                              %28 = OpTypeVector %6 4 
                                              %29 = OpTypeStruct %28 %28 %28 %28 %6 %6 
                                              %30 = OpTypePointer Uniform %29 
Uniform struct {f32_4; f32_4; f32_4; f32_4; f32; f32;}* %31 = OpVariable Uniform 
                                              %32 = OpTypeInt 32 1 
                                          i32 %33 = OpConstant 0 
                                              %34 = OpTypePointer Uniform %28 
                                          f32 %42 = OpConstant 3.674022E-40 
                                 Private f32* %45 = OpVariable Private 
                                          i32 %46 = OpConstant 5 
                                              %47 = OpTypePointer Uniform %6 
                                          f32 %51 = OpConstant 3.674022E-40 
                                          i32 %53 = OpConstant 4 
                                 Private f32* %63 = OpVariable Private 
                                          f32 %74 = OpConstant 3.674022E-40 
                                          f32 %88 = OpConstant 3.674022E-40 
                                          f32 %90 = OpConstant 3.674022E-40 
                                         i32 %105 = OpConstant 3 
                                             %110 = OpTypePointer Private %28 
                              Private f32_4* %111 = OpVariable Private 
                                             %112 = OpTypeImage %6 Dim2D 0 0 0 1 Unknown 
                                             %113 = OpTypePointer UniformConstant %112 
        UniformConstant read_only Texture2D* %114 = OpVariable UniformConstant 
                                             %116 = OpTypeSampler 
                                             %117 = OpTypePointer UniformConstant %116 
                    UniformConstant sampler* %118 = OpVariable UniformConstant 
                                             %120 = OpTypeSampledImage %112 
                                             %122 = OpTypeVector %6 2 
                                             %123 = OpTypePointer Input %122 
                        Input f32_2* vs_TEXCOORD0 = OpVariable Input 
                              Private f32_4* %127 = OpVariable Private 
                                         i32 %129 = OpConstant 2 
                              Private f32_3* %133 = OpVariable Private 
                                         i32 %136 = OpConstant 1 
                                             %144 = OpTypePointer Output %28 
                               Output f32_4* %145 = OpVariable Output 
                                         u32 %152 = OpConstant 3 
                                             %155 = OpTypePointer Output %6 
                                          void %4 = OpFunction None %3 
                                               %5 = OpLabel 
                                        f32_3 %12 = OpLoad vs_TEXCOORD1 
                                        f32_3 %13 = OpLoad vs_TEXCOORD1 
                                          f32 %14 = OpDot %12 %13 
                                 Private f32* %18 = OpAccessChain %9 %16 
                                                      OpStore %18 %14 
                                 Private f32* %19 = OpAccessChain %9 %16 
                                          f32 %20 = OpLoad %19 
                                          f32 %21 = OpExtInst %1 32 %20 
                                 Private f32* %22 = OpAccessChain %9 %16 
                                                      OpStore %22 %21 
                                        f32_3 %23 = OpLoad %9 
                                        f32_3 %24 = OpVectorShuffle %23 %23 0 0 0 
                                        f32_3 %25 = OpLoad vs_TEXCOORD1 
                                        f32_3 %26 = OpFMul %24 %25 
                                                      OpStore %9 %26 
                                        f32_3 %27 = OpLoad %9 
                               Uniform f32_4* %35 = OpAccessChain %31 %33 
                                        f32_4 %36 = OpLoad %35 
                                        f32_3 %37 = OpVectorShuffle %36 %36 0 1 2 
                                          f32 %38 = OpDot %27 %37 
                                 Private f32* %39 = OpAccessChain %9 %16 
                                                      OpStore %39 %38 
                                 Private f32* %40 = OpAccessChain %9 %16 
                                          f32 %41 = OpLoad %40 
                                          f32 %43 = OpExtInst %1 40 %41 %42 
                                 Private f32* %44 = OpAccessChain %9 %16 
                                                      OpStore %44 %43 
                                 Uniform f32* %48 = OpAccessChain %31 %46 
                                          f32 %49 = OpLoad %48 
                                          f32 %50 = OpFNegate %49 
                                          f32 %52 = OpFMul %50 %51 
                                 Uniform f32* %54 = OpAccessChain %31 %53 
                                          f32 %55 = OpLoad %54 
                                          f32 %56 = OpFAdd %52 %55 
                                                      OpStore %45 %56 
                                          f32 %57 = OpLoad %45 
                                          f32 %58 = OpFNegate %57 
                                 Private f32* %59 = OpAccessChain %9 %16 
                                          f32 %60 = OpLoad %59 
                                          f32 %61 = OpFAdd %58 %60 
                                 Private f32* %62 = OpAccessChain %9 %16 
                                                      OpStore %62 %61 
                                 Uniform f32* %64 = OpAccessChain %31 %46 
                                          f32 %65 = OpLoad %64 
                                          f32 %66 = OpFMul %65 %51 
                                 Uniform f32* %67 = OpAccessChain %31 %53 
                                          f32 %68 = OpLoad %67 
                                          f32 %69 = OpFAdd %66 %68 
                                                      OpStore %63 %69 
                                          f32 %70 = OpLoad %45 
                                          f32 %71 = OpFNegate %70 
                                          f32 %72 = OpLoad %63 
                                          f32 %73 = OpFAdd %71 %72 
                                                      OpStore %45 %73 
                                          f32 %75 = OpLoad %45 
                                          f32 %76 = OpFDiv %74 %75 
                                                      OpStore %45 %76 
                                          f32 %77 = OpLoad %45 
                                 Private f32* %78 = OpAccessChain %9 %16 
                                          f32 %79 = OpLoad %78 
                                          f32 %80 = OpFMul %77 %79 
                                 Private f32* %81 = OpAccessChain %9 %16 
                                                      OpStore %81 %80 
                                 Private f32* %82 = OpAccessChain %9 %16 
                                          f32 %83 = OpLoad %82 
                                          f32 %84 = OpExtInst %1 43 %83 %42 %74 
                                 Private f32* %85 = OpAccessChain %9 %16 
                                                      OpStore %85 %84 
                                 Private f32* %86 = OpAccessChain %9 %16 
                                          f32 %87 = OpLoad %86 
                                          f32 %89 = OpFMul %87 %88 
                                          f32 %91 = OpFAdd %89 %90 
                                                      OpStore %45 %91 
                                 Private f32* %92 = OpAccessChain %9 %16 
                                          f32 %93 = OpLoad %92 
                                 Private f32* %94 = OpAccessChain %9 %16 
                                          f32 %95 = OpLoad %94 
                                          f32 %96 = OpFMul %93 %95 
                                 Private f32* %97 = OpAccessChain %9 %16 
                                                      OpStore %97 %96 
                                 Private f32* %98 = OpAccessChain %9 %16 
                                          f32 %99 = OpLoad %98 
                                         f32 %100 = OpLoad %45 
                                         f32 %101 = OpFMul %99 %100 
                                Private f32* %102 = OpAccessChain %9 %16 
                                                      OpStore %102 %101 
                                       f32_3 %103 = OpLoad %9 
                                       f32_3 %104 = OpVectorShuffle %103 %103 0 0 0 
                              Uniform f32_4* %106 = OpAccessChain %31 %105 
                                       f32_4 %107 = OpLoad %106 
                                       f32_3 %108 = OpVectorShuffle %107 %107 0 1 2 
                                       f32_3 %109 = OpFMul %104 %108 
                                                      OpStore %9 %109 
                         read_only Texture2D %115 = OpLoad %114 
                                     sampler %119 = OpLoad %118 
                  read_only Texture2DSampled %121 = OpSampledImage %115 %119 
                                       f32_2 %125 = OpLoad vs_TEXCOORD0 
                                       f32_4 %126 = OpImageSampleImplicitLod %121 %125 
                                                      OpStore %111 %126 
                                       f32_4 %128 = OpLoad %111 
                              Uniform f32_4* %130 = OpAccessChain %31 %129 
                                       f32_4 %131 = OpLoad %130 
                                       f32_4 %132 = OpFMul %128 %131 
                                                      OpStore %127 %132 
                                       f32_4 %134 = OpLoad %127 
                                       f32_3 %135 = OpVectorShuffle %134 %134 0 1 2 
                              Uniform f32_4* %137 = OpAccessChain %31 %136 
                                       f32_4 %138 = OpLoad %137 
                                       f32_3 %139 = OpVectorShuffle %138 %138 0 1 2 
                                       f32_3 %140 = OpFMul %135 %139 
                                                      OpStore %133 %140 
                                       f32_3 %141 = OpLoad %9 
                                       f32_3 %142 = OpLoad %133 
                                       f32_3 %143 = OpFMul %141 %142 
                                                      OpStore %9 %143 
                                       f32_4 %146 = OpLoad %127 
                                       f32_3 %147 = OpVectorShuffle %146 %146 3 3 3 
                                       f32_3 %148 = OpLoad %9 
                                       f32_3 %149 = OpFMul %147 %148 
                                       f32_4 %150 = OpLoad %145 
                                       f32_4 %151 = OpVectorShuffle %150 %149 4 5 6 3 
                                                      OpStore %145 %151 
                                Private f32* %153 = OpAccessChain %127 %152 
                                         f32 %154 = OpLoad %153 
                                 Output f32* %156 = OpAccessChain %145 %152 
                                                      OpStore %156 %154 
                                                      OpReturn
                                                      OpFunctionEnd
"
}
SubProgram "vulkan hw_tier02 " {
Keywords { "DIRECTIONAL" }
"; SPIR-V
; Version: 1.0
; Generator: Khronos Glslang Reference Front End; 6
; Bound: 159
; Schema: 0
                                                      OpCapability Shader 
                                               %1 = OpExtInstImport "GLSL.std.450" 
                                                      OpMemoryModel Logical GLSL450 
                                                      OpEntryPoint Vertex %4 "main" %11 %52 %85 %95 %110 %114 %144 %150 
                                                      OpName vs_TEXCOORD2 "vs_TEXCOORD2" 
                                                      OpName vs_TEXCOORD0 "vs_TEXCOORD0" 
                                                      OpName vs_TEXCOORD1 "vs_TEXCOORD1" 
                                                      OpName vs_TEXCOORD4 "vs_TEXCOORD4" 
                                                      OpDecorate %11 Location 11 
                                                      OpDecorate %16 ArrayStride 16 
                                                      OpDecorate %17 ArrayStride 17 
                                                      OpDecorate %18 ArrayStride 18 
                                                      OpMemberDecorate %19 0 Offset 19 
                                                      OpMemberDecorate %19 1 Offset 19 
                                                      OpMemberDecorate %19 2 Offset 19 
                                                      OpMemberDecorate %19 3 Offset 19 
                                                      OpDecorate %19 Block 
                                                      OpDecorate %21 DescriptorSet 21 
                                                      OpDecorate %21 Binding 21 
                                                      OpDecorate vs_TEXCOORD2 Location 52 
                                                      OpMemberDecorate %83 0 BuiltIn 83 
                                                      OpMemberDecorate %83 1 BuiltIn 83 
                                                      OpMemberDecorate %83 2 BuiltIn 83 
                                                      OpDecorate %83 Block 
                                                      OpDecorate %95 Location 95 
                                                      OpDecorate vs_TEXCOORD0 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD0 Location 110 
                                                      OpDecorate %114 Location 114 
                                                      OpDecorate vs_TEXCOORD1 Location 144 
                                                      OpDecorate vs_TEXCOORD4 Location 150 
                                               %2 = OpTypeVoid 
                                               %3 = OpTypeFunction %2 
                                               %6 = OpTypeFloat 32 
                                               %7 = OpTypeVector %6 4 
                                               %8 = OpTypePointer Private %7 
                                Private f32_4* %9 = OpVariable Private 
                                              %10 = OpTypePointer Input %7 
                                 Input f32_4* %11 = OpVariable Input 
                                              %14 = OpTypeInt 32 0 
                                          u32 %15 = OpConstant 4 
                                              %16 = OpTypeArray %7 %15 
                                              %17 = OpTypeArray %7 %15 
                                              %18 = OpTypeArray %7 %15 
                                              %19 = OpTypeStruct %16 %17 %18 %7 
                                              %20 = OpTypePointer Uniform %19 
Uniform struct {f32_4[4]; f32_4[4]; f32_4[4]; f32_4;}* %21 = OpVariable Uniform 
                                              %22 = OpTypeInt 32 1 
                                          i32 %23 = OpConstant 0 
                                          i32 %24 = OpConstant 1 
                                              %25 = OpTypePointer Uniform %7 
                                          i32 %36 = OpConstant 2 
                               Private f32_4* %44 = OpVariable Private 
                                          i32 %46 = OpConstant 3 
                                              %50 = OpTypeVector %6 3 
                                              %51 = OpTypePointer Output %50 
                       Output f32_3* vs_TEXCOORD2 = OpVariable Output 
                                          u32 %81 = OpConstant 1 
                                              %82 = OpTypeArray %6 %81 
                                              %83 = OpTypeStruct %7 %6 %82 
                                              %84 = OpTypePointer Output %83 
         Output struct {f32_4; f32; f32[1];}* %85 = OpVariable Output 
                                              %93 = OpTypePointer Output %7 
                                 Input f32_4* %95 = OpVariable Input 
                                              %96 = OpTypeVector %6 2 
                                             %109 = OpTypePointer Output %96 
                       Output f32_2* vs_TEXCOORD0 = OpVariable Output 
                                             %113 = OpTypePointer Input %50 
                                Input f32_3* %114 = OpVariable Input 
                                         u32 %120 = OpConstant 0 
                                             %121 = OpTypePointer Private %6 
                                         u32 %134 = OpConstant 2 
                                Private f32* %136 = OpVariable Private 
                       Output f32_3* vs_TEXCOORD1 = OpVariable Output 
                       Output f32_4* vs_TEXCOORD4 = OpVariable Output 
                                         f32 %151 = OpConstant 3.674022E-40 
                                       f32_4 %152 = OpConstantComposite %151 %151 %151 %151 
                                             %153 = OpTypePointer Output %6 
                                          void %4 = OpFunction None %3 
                                               %5 = OpLabel 
                                        f32_4 %12 = OpLoad %11 
                                        f32_4 %13 = OpVectorShuffle %12 %12 1 1 1 1 
                               Uniform f32_4* %26 = OpAccessChain %21 %23 %24 
                                        f32_4 %27 = OpLoad %26 
                                        f32_4 %28 = OpFMul %13 %27 
                                                      OpStore %9 %28 
                               Uniform f32_4* %29 = OpAccessChain %21 %23 %23 
                                        f32_4 %30 = OpLoad %29 
                                        f32_4 %31 = OpLoad %11 
                                        f32_4 %32 = OpVectorShuffle %31 %31 0 0 0 0 
                                        f32_4 %33 = OpFMul %30 %32 
                                        f32_4 %34 = OpLoad %9 
                                        f32_4 %35 = OpFAdd %33 %34 
                                                      OpStore %9 %35 
                               Uniform f32_4* %37 = OpAccessChain %21 %23 %36 
                                        f32_4 %38 = OpLoad %37 
                                        f32_4 %39 = OpLoad %11 
                                        f32_4 %40 = OpVectorShuffle %39 %39 2 2 2 2 
                                        f32_4 %41 = OpFMul %38 %40 
                                        f32_4 %42 = OpLoad %9 
                                        f32_4 %43 = OpFAdd %41 %42 
                                                      OpStore %9 %43 
                                        f32_4 %45 = OpLoad %9 
                               Uniform f32_4* %47 = OpAccessChain %21 %23 %46 
                                        f32_4 %48 = OpLoad %47 
                                        f32_4 %49 = OpFAdd %45 %48 
                                                      OpStore %44 %49 
                               Uniform f32_4* %53 = OpAccessChain %21 %23 %46 
                                        f32_4 %54 = OpLoad %53 
                                        f32_3 %55 = OpVectorShuffle %54 %54 0 1 2 
                                        f32_4 %56 = OpLoad %11 
                                        f32_3 %57 = OpVectorShuffle %56 %56 3 3 3 
                                        f32_3 %58 = OpFMul %55 %57 
                                        f32_4 %59 = OpLoad %9 
                                        f32_3 %60 = OpVectorShuffle %59 %59 0 1 2 
                                        f32_3 %61 = OpFAdd %58 %60 
                                                      OpStore vs_TEXCOORD2 %61 
                                        f32_4 %62 = OpLoad %44 
                                        f32_4 %63 = OpVectorShuffle %62 %62 1 1 1 1 
                               Uniform f32_4* %64 = OpAccessChain %21 %36 %24 
                                        f32_4 %65 = OpLoad %64 
                                        f32_4 %66 = OpFMul %63 %65 
                                                      OpStore %9 %66 
                               Uniform f32_4* %67 = OpAccessChain %21 %36 %23 
                                        f32_4 %68 = OpLoad %67 
                                        f32_4 %69 = OpLoad %44 
                                        f32_4 %70 = OpVectorShuffle %69 %69 0 0 0 0 
                                        f32_4 %71 = OpFMul %68 %70 
                                        f32_4 %72 = OpLoad %9 
                                        f32_4 %73 = OpFAdd %71 %72 
                                                      OpStore %9 %73 
                               Uniform f32_4* %74 = OpAccessChain %21 %36 %36 
                                        f32_4 %75 = OpLoad %74 
                                        f32_4 %76 = OpLoad %44 
                                        f32_4 %77 = OpVectorShuffle %76 %76 2 2 2 2 
                                        f32_4 %78 = OpFMul %75 %77 
                                        f32_4 %79 = OpLoad %9 
                                        f32_4 %80 = OpFAdd %78 %79 
                                                      OpStore %9 %80 
                               Uniform f32_4* %86 = OpAccessChain %21 %36 %46 
                                        f32_4 %87 = OpLoad %86 
                                        f32_4 %88 = OpLoad %44 
                                        f32_4 %89 = OpVectorShuffle %88 %88 3 3 3 3 
                                        f32_4 %90 = OpFMul %87 %89 
                                        f32_4 %91 = OpLoad %9 
                                        f32_4 %92 = OpFAdd %90 %91 
                                Output f32_4* %94 = OpAccessChain %85 %23 
                                                      OpStore %94 %92 
                                        f32_4 %97 = OpLoad %95 
                                        f32_2 %98 = OpVectorShuffle %97 %97 0 1 
                               Uniform f32_4* %99 = OpAccessChain %21 %46 
                                       f32_4 %100 = OpLoad %99 
                                       f32_2 %101 = OpVectorShuffle %100 %100 0 1 
                                       f32_2 %102 = OpFMul %98 %101 
                              Uniform f32_4* %103 = OpAccessChain %21 %46 
                                       f32_4 %104 = OpLoad %103 
                                       f32_2 %105 = OpVectorShuffle %104 %104 2 3 
                                       f32_2 %106 = OpFAdd %102 %105 
                                       f32_4 %107 = OpLoad %9 
                                       f32_4 %108 = OpVectorShuffle %107 %106 4 5 2 3 
                                                      OpStore %9 %108 
                                       f32_4 %111 = OpLoad %9 
                                       f32_2 %112 = OpVectorShuffle %111 %111 0 1 
                                                      OpStore vs_TEXCOORD0 %112 
                                       f32_3 %115 = OpLoad %114 
                              Uniform f32_4* %116 = OpAccessChain %21 %24 %23 
                                       f32_4 %117 = OpLoad %116 
                                       f32_3 %118 = OpVectorShuffle %117 %117 0 1 2 
                                         f32 %119 = OpDot %115 %118 
                                Private f32* %122 = OpAccessChain %9 %120 
                                                      OpStore %122 %119 
                                       f32_3 %123 = OpLoad %114 
                              Uniform f32_4* %124 = OpAccessChain %21 %24 %24 
                                       f32_4 %125 = OpLoad %124 
                                       f32_3 %126 = OpVectorShuffle %125 %125 0 1 2 
                                         f32 %127 = OpDot %123 %126 
                                Private f32* %128 = OpAccessChain %9 %81 
                                                      OpStore %128 %127 
                                       f32_3 %129 = OpLoad %114 
                              Uniform f32_4* %130 = OpAccessChain %21 %24 %36 
                                       f32_4 %131 = OpLoad %130 
                                       f32_3 %132 = OpVectorShuffle %131 %131 0 1 2 
                                         f32 %133 = OpDot %129 %132 
                                Private f32* %135 = OpAccessChain %9 %134 
                                                      OpStore %135 %133 
                                       f32_4 %137 = OpLoad %9 
                                       f32_3 %138 = OpVectorShuffle %137 %137 0 1 2 
                                       f32_4 %139 = OpLoad %9 
                                       f32_3 %140 = OpVectorShuffle %139 %139 0 1 2 
                                         f32 %141 = OpDot %138 %140 
                                                      OpStore %136 %141 
                                         f32 %142 = OpLoad %136 
                                         f32 %143 = OpExtInst %1 32 %142 
                                                      OpStore %136 %143 
                                         f32 %145 = OpLoad %136 
                                       f32_3 %146 = OpCompositeConstruct %145 %145 %145 
                                       f32_4 %147 = OpLoad %9 
                                       f32_3 %148 = OpVectorShuffle %147 %147 0 1 2 
                                       f32_3 %149 = OpFMul %146 %148 
                                                      OpStore vs_TEXCOORD1 %149 
                                                      OpStore vs_TEXCOORD4 %152 
                                 Output f32* %154 = OpAccessChain %85 %23 %81 
                                         f32 %155 = OpLoad %154 
                                         f32 %156 = OpFNegate %155 
                                 Output f32* %157 = OpAccessChain %85 %23 %81 
                                                      OpStore %157 %156 
                                                      OpReturn
                                                      OpFunctionEnd
; SPIR-V
; Version: 1.0
; Generator: Khronos Glslang Reference Front End; 6
; Bound: 158
; Schema: 0
                                                      OpCapability Shader 
                                               %1 = OpExtInstImport "GLSL.std.450" 
                                                      OpMemoryModel Logical GLSL450 
                                                      OpEntryPoint Fragment %4 "main" %11 %124 %145 
                                                      OpExecutionMode %4 OriginUpperLeft 
                                                      OpName vs_TEXCOORD1 "vs_TEXCOORD1" 
                                                      OpName vs_TEXCOORD0 "vs_TEXCOORD0" 
                                                      OpDecorate %9 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD1 Location 11 
                                                      OpDecorate %20 RelaxedPrecision 
                                                      OpDecorate %21 RelaxedPrecision 
                                                      OpDecorate %23 RelaxedPrecision 
                                                      OpDecorate %24 RelaxedPrecision 
                                                      OpDecorate %27 RelaxedPrecision 
                                                      OpMemberDecorate %29 0 RelaxedPrecision 
                                                      OpMemberDecorate %29 0 Offset 29 
                                                      OpMemberDecorate %29 1 RelaxedPrecision 
                                                      OpMemberDecorate %29 1 Offset 29 
                                                      OpMemberDecorate %29 2 RelaxedPrecision 
                                                      OpMemberDecorate %29 2 Offset 29 
                                                      OpMemberDecorate %29 3 RelaxedPrecision 
                                                      OpMemberDecorate %29 3 Offset 29 
                                                      OpMemberDecorate %29 4 RelaxedPrecision 
                                                      OpMemberDecorate %29 4 Offset 29 
                                                      OpMemberDecorate %29 5 RelaxedPrecision 
                                                      OpMemberDecorate %29 5 Offset 29 
                                                      OpDecorate %29 Block 
                                                      OpDecorate %31 DescriptorSet 31 
                                                      OpDecorate %31 Binding 31 
                                                      OpDecorate %36 RelaxedPrecision 
                                                      OpDecorate %37 RelaxedPrecision 
                                                      OpDecorate %38 RelaxedPrecision 
                                                      OpDecorate %41 RelaxedPrecision 
                                                      OpDecorate %43 RelaxedPrecision 
                                                      OpDecorate %45 RelaxedPrecision 
                                                      OpDecorate %49 RelaxedPrecision 
                                                      OpDecorate %50 RelaxedPrecision 
                                                      OpDecorate %52 RelaxedPrecision 
                                                      OpDecorate %55 RelaxedPrecision 
                                                      OpDecorate %56 RelaxedPrecision 
                                                      OpDecorate %57 RelaxedPrecision 
                                                      OpDecorate %58 RelaxedPrecision 
                                                      OpDecorate %60 RelaxedPrecision 
                                                      OpDecorate %61 RelaxedPrecision 
                                                      OpDecorate %63 RelaxedPrecision 
                                                      OpDecorate %65 RelaxedPrecision 
                                                      OpDecorate %66 RelaxedPrecision 
                                                      OpDecorate %68 RelaxedPrecision 
                                                      OpDecorate %69 RelaxedPrecision 
                                                      OpDecorate %70 RelaxedPrecision 
                                                      OpDecorate %71 RelaxedPrecision 
                                                      OpDecorate %72 RelaxedPrecision 
                                                      OpDecorate %73 RelaxedPrecision 
                                                      OpDecorate %75 RelaxedPrecision 
                                                      OpDecorate %76 RelaxedPrecision 
                                                      OpDecorate %77 RelaxedPrecision 
                                                      OpDecorate %79 RelaxedPrecision 
                                                      OpDecorate %80 RelaxedPrecision 
                                                      OpDecorate %83 RelaxedPrecision 
                                                      OpDecorate %84 RelaxedPrecision 
                                                      OpDecorate %87 RelaxedPrecision 
                                                      OpDecorate %89 RelaxedPrecision 
                                                      OpDecorate %91 RelaxedPrecision 
                                                      OpDecorate %93 RelaxedPrecision 
                                                      OpDecorate %95 RelaxedPrecision 
                                                      OpDecorate %96 RelaxedPrecision 
                                                      OpDecorate %99 RelaxedPrecision 
                                                      OpDecorate %100 RelaxedPrecision 
                                                      OpDecorate %101 RelaxedPrecision 
                                                      OpDecorate %103 RelaxedPrecision 
                                                      OpDecorate %104 RelaxedPrecision 
                                                      OpDecorate %107 RelaxedPrecision 
                                                      OpDecorate %108 RelaxedPrecision 
                                                      OpDecorate %109 RelaxedPrecision 
                                                      OpDecorate %111 RelaxedPrecision 
                                                      OpDecorate %114 RelaxedPrecision 
                                                      OpDecorate %114 DescriptorSet 114 
                                                      OpDecorate %114 Binding 114 
                                                      OpDecorate %115 RelaxedPrecision 
                                                      OpDecorate %118 RelaxedPrecision 
                                                      OpDecorate %118 DescriptorSet 118 
                                                      OpDecorate %118 Binding 118 
                                                      OpDecorate %119 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD0 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD0 Location 124 
                                                      OpDecorate %125 RelaxedPrecision 
                                                      OpDecorate %126 RelaxedPrecision 
                                                      OpDecorate %127 RelaxedPrecision 
                                                      OpDecorate %128 RelaxedPrecision 
                                                      OpDecorate %131 RelaxedPrecision 
                                                      OpDecorate %132 RelaxedPrecision 
                                                      OpDecorate %133 RelaxedPrecision 
                                                      OpDecorate %134 RelaxedPrecision 
                                                      OpDecorate %135 RelaxedPrecision 
                                                      OpDecorate %138 RelaxedPrecision 
                                                      OpDecorate %139 RelaxedPrecision 
                                                      OpDecorate %140 RelaxedPrecision 
                                                      OpDecorate %141 RelaxedPrecision 
                                                      OpDecorate %142 RelaxedPrecision 
                                                      OpDecorate %143 RelaxedPrecision 
                                                      OpDecorate %145 RelaxedPrecision 
                                                      OpDecorate %145 Location 145 
                                                      OpDecorate %146 RelaxedPrecision 
                                                      OpDecorate %147 RelaxedPrecision 
                                                      OpDecorate %148 RelaxedPrecision 
                                                      OpDecorate %149 RelaxedPrecision 
                                                      OpDecorate %154 RelaxedPrecision 
                                               %2 = OpTypeVoid 
                                               %3 = OpTypeFunction %2 
                                               %6 = OpTypeFloat 32 
                                               %7 = OpTypeVector %6 3 
                                               %8 = OpTypePointer Private %7 
                                Private f32_3* %9 = OpVariable Private 
                                              %10 = OpTypePointer Input %7 
                        Input f32_3* vs_TEXCOORD1 = OpVariable Input 
                                              %15 = OpTypeInt 32 0 
                                          u32 %16 = OpConstant 0 
                                              %17 = OpTypePointer Private %6 
                                              %28 = OpTypeVector %6 4 
                                              %29 = OpTypeStruct %28 %28 %28 %28 %6 %6 
                                              %30 = OpTypePointer Uniform %29 
Uniform struct {f32_4; f32_4; f32_4; f32_4; f32; f32;}* %31 = OpVariable Uniform 
                                              %32 = OpTypeInt 32 1 
                                          i32 %33 = OpConstant 0 
                                              %34 = OpTypePointer Uniform %28 
                                          f32 %42 = OpConstant 3.674022E-40 
                                 Private f32* %45 = OpVariable Private 
                                          i32 %46 = OpConstant 5 
                                              %47 = OpTypePointer Uniform %6 
                                          f32 %51 = OpConstant 3.674022E-40 
                                          i32 %53 = OpConstant 4 
                                 Private f32* %63 = OpVariable Private 
                                          f32 %74 = OpConstant 3.674022E-40 
                                          f32 %88 = OpConstant 3.674022E-40 
                                          f32 %90 = OpConstant 3.674022E-40 
                                         i32 %105 = OpConstant 3 
                                             %110 = OpTypePointer Private %28 
                              Private f32_4* %111 = OpVariable Private 
                                             %112 = OpTypeImage %6 Dim2D 0 0 0 1 Unknown 
                                             %113 = OpTypePointer UniformConstant %112 
        UniformConstant read_only Texture2D* %114 = OpVariable UniformConstant 
                                             %116 = OpTypeSampler 
                                             %117 = OpTypePointer UniformConstant %116 
                    UniformConstant sampler* %118 = OpVariable UniformConstant 
                                             %120 = OpTypeSampledImage %112 
                                             %122 = OpTypeVector %6 2 
                                             %123 = OpTypePointer Input %122 
                        Input f32_2* vs_TEXCOORD0 = OpVariable Input 
                              Private f32_4* %127 = OpVariable Private 
                                         i32 %129 = OpConstant 2 
                              Private f32_3* %133 = OpVariable Private 
                                         i32 %136 = OpConstant 1 
                                             %144 = OpTypePointer Output %28 
                               Output f32_4* %145 = OpVariable Output 
                                         u32 %152 = OpConstant 3 
                                             %155 = OpTypePointer Output %6 
                                          void %4 = OpFunction None %3 
                                               %5 = OpLabel 
                                        f32_3 %12 = OpLoad vs_TEXCOORD1 
                                        f32_3 %13 = OpLoad vs_TEXCOORD1 
                                          f32 %14 = OpDot %12 %13 
                                 Private f32* %18 = OpAccessChain %9 %16 
                                                      OpStore %18 %14 
                                 Private f32* %19 = OpAccessChain %9 %16 
                                          f32 %20 = OpLoad %19 
                                          f32 %21 = OpExtInst %1 32 %20 
                                 Private f32* %22 = OpAccessChain %9 %16 
                                                      OpStore %22 %21 
                                        f32_3 %23 = OpLoad %9 
                                        f32_3 %24 = OpVectorShuffle %23 %23 0 0 0 
                                        f32_3 %25 = OpLoad vs_TEXCOORD1 
                                        f32_3 %26 = OpFMul %24 %25 
                                                      OpStore %9 %26 
                                        f32_3 %27 = OpLoad %9 
                               Uniform f32_4* %35 = OpAccessChain %31 %33 
                                        f32_4 %36 = OpLoad %35 
                                        f32_3 %37 = OpVectorShuffle %36 %36 0 1 2 
                                          f32 %38 = OpDot %27 %37 
                                 Private f32* %39 = OpAccessChain %9 %16 
                                                      OpStore %39 %38 
                                 Private f32* %40 = OpAccessChain %9 %16 
                                          f32 %41 = OpLoad %40 
                                          f32 %43 = OpExtInst %1 40 %41 %42 
                                 Private f32* %44 = OpAccessChain %9 %16 
                                                      OpStore %44 %43 
                                 Uniform f32* %48 = OpAccessChain %31 %46 
                                          f32 %49 = OpLoad %48 
                                          f32 %50 = OpFNegate %49 
                                          f32 %52 = OpFMul %50 %51 
                                 Uniform f32* %54 = OpAccessChain %31 %53 
                                          f32 %55 = OpLoad %54 
                                          f32 %56 = OpFAdd %52 %55 
                                                      OpStore %45 %56 
                                          f32 %57 = OpLoad %45 
                                          f32 %58 = OpFNegate %57 
                                 Private f32* %59 = OpAccessChain %9 %16 
                                          f32 %60 = OpLoad %59 
                                          f32 %61 = OpFAdd %58 %60 
                                 Private f32* %62 = OpAccessChain %9 %16 
                                                      OpStore %62 %61 
                                 Uniform f32* %64 = OpAccessChain %31 %46 
                                          f32 %65 = OpLoad %64 
                                          f32 %66 = OpFMul %65 %51 
                                 Uniform f32* %67 = OpAccessChain %31 %53 
                                          f32 %68 = OpLoad %67 
                                          f32 %69 = OpFAdd %66 %68 
                                                      OpStore %63 %69 
                                          f32 %70 = OpLoad %45 
                                          f32 %71 = OpFNegate %70 
                                          f32 %72 = OpLoad %63 
                                          f32 %73 = OpFAdd %71 %72 
                                                      OpStore %45 %73 
                                          f32 %75 = OpLoad %45 
                                          f32 %76 = OpFDiv %74 %75 
                                                      OpStore %45 %76 
                                          f32 %77 = OpLoad %45 
                                 Private f32* %78 = OpAccessChain %9 %16 
                                          f32 %79 = OpLoad %78 
                                          f32 %80 = OpFMul %77 %79 
                                 Private f32* %81 = OpAccessChain %9 %16 
                                                      OpStore %81 %80 
                                 Private f32* %82 = OpAccessChain %9 %16 
                                          f32 %83 = OpLoad %82 
                                          f32 %84 = OpExtInst %1 43 %83 %42 %74 
                                 Private f32* %85 = OpAccessChain %9 %16 
                                                      OpStore %85 %84 
                                 Private f32* %86 = OpAccessChain %9 %16 
                                          f32 %87 = OpLoad %86 
                                          f32 %89 = OpFMul %87 %88 
                                          f32 %91 = OpFAdd %89 %90 
                                                      OpStore %45 %91 
                                 Private f32* %92 = OpAccessChain %9 %16 
                                          f32 %93 = OpLoad %92 
                                 Private f32* %94 = OpAccessChain %9 %16 
                                          f32 %95 = OpLoad %94 
                                          f32 %96 = OpFMul %93 %95 
                                 Private f32* %97 = OpAccessChain %9 %16 
                                                      OpStore %97 %96 
                                 Private f32* %98 = OpAccessChain %9 %16 
                                          f32 %99 = OpLoad %98 
                                         f32 %100 = OpLoad %45 
                                         f32 %101 = OpFMul %99 %100 
                                Private f32* %102 = OpAccessChain %9 %16 
                                                      OpStore %102 %101 
                                       f32_3 %103 = OpLoad %9 
                                       f32_3 %104 = OpVectorShuffle %103 %103 0 0 0 
                              Uniform f32_4* %106 = OpAccessChain %31 %105 
                                       f32_4 %107 = OpLoad %106 
                                       f32_3 %108 = OpVectorShuffle %107 %107 0 1 2 
                                       f32_3 %109 = OpFMul %104 %108 
                                                      OpStore %9 %109 
                         read_only Texture2D %115 = OpLoad %114 
                                     sampler %119 = OpLoad %118 
                  read_only Texture2DSampled %121 = OpSampledImage %115 %119 
                                       f32_2 %125 = OpLoad vs_TEXCOORD0 
                                       f32_4 %126 = OpImageSampleImplicitLod %121 %125 
                                                      OpStore %111 %126 
                                       f32_4 %128 = OpLoad %111 
                              Uniform f32_4* %130 = OpAccessChain %31 %129 
                                       f32_4 %131 = OpLoad %130 
                                       f32_4 %132 = OpFMul %128 %131 
                                                      OpStore %127 %132 
                                       f32_4 %134 = OpLoad %127 
                                       f32_3 %135 = OpVectorShuffle %134 %134 0 1 2 
                              Uniform f32_4* %137 = OpAccessChain %31 %136 
                                       f32_4 %138 = OpLoad %137 
                                       f32_3 %139 = OpVectorShuffle %138 %138 0 1 2 
                                       f32_3 %140 = OpFMul %135 %139 
                                                      OpStore %133 %140 
                                       f32_3 %141 = OpLoad %9 
                                       f32_3 %142 = OpLoad %133 
                                       f32_3 %143 = OpFMul %141 %142 
                                                      OpStore %9 %143 
                                       f32_4 %146 = OpLoad %127 
                                       f32_3 %147 = OpVectorShuffle %146 %146 3 3 3 
                                       f32_3 %148 = OpLoad %9 
                                       f32_3 %149 = OpFMul %147 %148 
                                       f32_4 %150 = OpLoad %145 
                                       f32_4 %151 = OpVectorShuffle %150 %149 4 5 6 3 
                                                      OpStore %145 %151 
                                Private f32* %153 = OpAccessChain %127 %152 
                                         f32 %154 = OpLoad %153 
                                 Output f32* %156 = OpAccessChain %145 %152 
                                                      OpStore %156 %154 
                                                      OpReturn
                                                      OpFunctionEnd
"
}
SubProgram "gles3 hw_tier00 " {
Keywords { "SPOT" }
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToLight[4];
uniform 	vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in highp vec3 in_NORMAL0;
in highp vec4 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out highp vec3 vs_TEXCOORD1;
out highp vec3 vs_TEXCOORD2;
out highp vec4 vs_TEXCOORD3;
out highp vec4 vs_TEXCOORD4;
vec4 u_xlat0;
vec4 u_xlat1;
vec4 u_xlat2;
float u_xlat10;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy;
    u_xlat1.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat1.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat1.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat10 = dot(u_xlat1.xyz, u_xlat1.xyz);
    u_xlat10 = inversesqrt(u_xlat10);
    vs_TEXCOORD1.xyz = vec3(u_xlat10) * u_xlat1.xyz;
    vs_TEXCOORD2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[3] * in_POSITION0.wwww + u_xlat0;
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_WorldToLight[1];
    u_xlat1 = hlslcc_mtx4x4unity_WorldToLight[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToLight[2] * u_xlat0.zzzz + u_xlat1;
    vs_TEXCOORD3 = hlslcc_mtx4x4unity_WorldToLight[3] * u_xlat0.wwww + u_xlat1;
    vs_TEXCOORD4 = vec4(0.0, 0.0, 0.0, 0.0);
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 _LightColor0;
uniform 	vec4 hlslcc_mtx4x4unity_WorldToLight[4];
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 _HColor;
uniform 	mediump float _RampThreshold;
uniform 	mediump float _RampSmooth;
UNITY_LOCATION(0) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(1) uniform highp sampler2D _LightTexture0;
UNITY_LOCATION(2) uniform highp sampler2D _LightTextureB0;
in mediump vec2 vs_TEXCOORD0;
in highp vec3 vs_TEXCOORD1;
in highp vec3 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec4 u_xlat0;
mediump vec4 u_xlat16_0;
mediump vec3 u_xlat16_1;
vec2 u_xlat2;
bool u_xlatb2;
mediump vec3 u_xlat16_3;
mediump float u_xlat16_5;
mediump float u_xlat16_9;
float u_xlat12;
mediump float u_xlat16_13;
void main()
{
    u_xlat0.xyz = (-vs_TEXCOORD2.xyz) + _WorldSpaceLightPos0.xyz;
    u_xlat12 = dot(u_xlat0.xyz, u_xlat0.xyz);
    u_xlat12 = inversesqrt(u_xlat12);
    u_xlat0.xyz = vec3(u_xlat12) * u_xlat0.xyz;
    u_xlat16_1.x = dot(vs_TEXCOORD1.xyz, vs_TEXCOORD1.xyz);
    u_xlat16_1.x = inversesqrt(u_xlat16_1.x);
    u_xlat16_1.xyz = u_xlat16_1.xxx * vs_TEXCOORD1.xyz;
    u_xlat16_1.x = dot(u_xlat16_1.xyz, u_xlat0.xyz);
    u_xlat16_1.x = max(u_xlat16_1.x, 0.0);
    u_xlat16_5 = (-_RampSmooth) * 0.5 + _RampThreshold;
    u_xlat16_1.x = (-u_xlat16_5) + u_xlat16_1.x;
    u_xlat16_9 = _RampSmooth * 0.5 + _RampThreshold;
    u_xlat16_5 = (-u_xlat16_5) + u_xlat16_9;
    u_xlat16_5 = float(1.0) / u_xlat16_5;
    u_xlat16_1.x = u_xlat16_5 * u_xlat16_1.x;
#ifdef UNITY_ADRENO_ES3
    u_xlat16_1.x = min(max(u_xlat16_1.x, 0.0), 1.0);
#else
    u_xlat16_1.x = clamp(u_xlat16_1.x, 0.0, 1.0);
#endif
    u_xlat16_5 = u_xlat16_1.x * -2.0 + 3.0;
    u_xlat16_1.x = u_xlat16_1.x * u_xlat16_1.x;
    u_xlat16_1.x = u_xlat16_1.x * u_xlat16_5;
    u_xlat16_1.xyz = u_xlat16_1.xxx * _HColor.xyz;
    u_xlat0 = vs_TEXCOORD2.yyyy * hlslcc_mtx4x4unity_WorldToLight[1];
    u_xlat0 = hlslcc_mtx4x4unity_WorldToLight[0] * vs_TEXCOORD2.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_WorldToLight[2] * vs_TEXCOORD2.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_WorldToLight[3];
    u_xlat2.xy = u_xlat0.xy / u_xlat0.ww;
    u_xlat2.xy = u_xlat2.xy + vec2(0.5, 0.5);
    u_xlat12 = texture(_LightTexture0, u_xlat2.xy).w;
#ifdef UNITY_ADRENO_ES3
    u_xlatb2 = !!(0.0<u_xlat0.z);
#else
    u_xlatb2 = 0.0<u_xlat0.z;
#endif
    u_xlat0.x = dot(u_xlat0.xyz, u_xlat0.xyz);
    u_xlat0.x = texture(_LightTextureB0, u_xlat0.xx).x;
    u_xlat16_13 = (u_xlatb2) ? 1.0 : 0.0;
    u_xlat16_13 = u_xlat12 * u_xlat16_13;
    u_xlat16_13 = u_xlat0.x * u_xlat16_13;
    u_xlat16_3.xyz = vec3(u_xlat16_13) * _LightColor0.xyz;
    u_xlat16_0 = texture(_MainTex, vs_TEXCOORD0.xy);
    u_xlat16_0 = u_xlat16_0 * _Color;
    u_xlat16_3.xyz = u_xlat16_3.xyz * u_xlat16_0.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * u_xlat16_3.xyz;
    SV_Target0.xyz = u_xlat16_0.www * u_xlat16_1.xyz;
    SV_Target0.w = u_xlat16_0.w;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier01 " {
Keywords { "SPOT" }
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToLight[4];
uniform 	vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in highp vec3 in_NORMAL0;
in highp vec4 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out highp vec3 vs_TEXCOORD1;
out highp vec3 vs_TEXCOORD2;
out highp vec4 vs_TEXCOORD3;
out highp vec4 vs_TEXCOORD4;
vec4 u_xlat0;
vec4 u_xlat1;
vec4 u_xlat2;
float u_xlat10;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy;
    u_xlat1.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat1.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat1.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat10 = dot(u_xlat1.xyz, u_xlat1.xyz);
    u_xlat10 = inversesqrt(u_xlat10);
    vs_TEXCOORD1.xyz = vec3(u_xlat10) * u_xlat1.xyz;
    vs_TEXCOORD2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[3] * in_POSITION0.wwww + u_xlat0;
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_WorldToLight[1];
    u_xlat1 = hlslcc_mtx4x4unity_WorldToLight[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToLight[2] * u_xlat0.zzzz + u_xlat1;
    vs_TEXCOORD3 = hlslcc_mtx4x4unity_WorldToLight[3] * u_xlat0.wwww + u_xlat1;
    vs_TEXCOORD4 = vec4(0.0, 0.0, 0.0, 0.0);
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 _LightColor0;
uniform 	vec4 hlslcc_mtx4x4unity_WorldToLight[4];
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 _HColor;
uniform 	mediump float _RampThreshold;
uniform 	mediump float _RampSmooth;
UNITY_LOCATION(0) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(1) uniform highp sampler2D _LightTexture0;
UNITY_LOCATION(2) uniform highp sampler2D _LightTextureB0;
in mediump vec2 vs_TEXCOORD0;
in highp vec3 vs_TEXCOORD1;
in highp vec3 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec4 u_xlat0;
mediump vec4 u_xlat16_0;
mediump vec3 u_xlat16_1;
vec2 u_xlat2;
bool u_xlatb2;
mediump vec3 u_xlat16_3;
mediump float u_xlat16_5;
mediump float u_xlat16_9;
float u_xlat12;
mediump float u_xlat16_13;
void main()
{
    u_xlat0.xyz = (-vs_TEXCOORD2.xyz) + _WorldSpaceLightPos0.xyz;
    u_xlat12 = dot(u_xlat0.xyz, u_xlat0.xyz);
    u_xlat12 = inversesqrt(u_xlat12);
    u_xlat0.xyz = vec3(u_xlat12) * u_xlat0.xyz;
    u_xlat16_1.x = dot(vs_TEXCOORD1.xyz, vs_TEXCOORD1.xyz);
    u_xlat16_1.x = inversesqrt(u_xlat16_1.x);
    u_xlat16_1.xyz = u_xlat16_1.xxx * vs_TEXCOORD1.xyz;
    u_xlat16_1.x = dot(u_xlat16_1.xyz, u_xlat0.xyz);
    u_xlat16_1.x = max(u_xlat16_1.x, 0.0);
    u_xlat16_5 = (-_RampSmooth) * 0.5 + _RampThreshold;
    u_xlat16_1.x = (-u_xlat16_5) + u_xlat16_1.x;
    u_xlat16_9 = _RampSmooth * 0.5 + _RampThreshold;
    u_xlat16_5 = (-u_xlat16_5) + u_xlat16_9;
    u_xlat16_5 = float(1.0) / u_xlat16_5;
    u_xlat16_1.x = u_xlat16_5 * u_xlat16_1.x;
#ifdef UNITY_ADRENO_ES3
    u_xlat16_1.x = min(max(u_xlat16_1.x, 0.0), 1.0);
#else
    u_xlat16_1.x = clamp(u_xlat16_1.x, 0.0, 1.0);
#endif
    u_xlat16_5 = u_xlat16_1.x * -2.0 + 3.0;
    u_xlat16_1.x = u_xlat16_1.x * u_xlat16_1.x;
    u_xlat16_1.x = u_xlat16_1.x * u_xlat16_5;
    u_xlat16_1.xyz = u_xlat16_1.xxx * _HColor.xyz;
    u_xlat0 = vs_TEXCOORD2.yyyy * hlslcc_mtx4x4unity_WorldToLight[1];
    u_xlat0 = hlslcc_mtx4x4unity_WorldToLight[0] * vs_TEXCOORD2.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_WorldToLight[2] * vs_TEXCOORD2.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_WorldToLight[3];
    u_xlat2.xy = u_xlat0.xy / u_xlat0.ww;
    u_xlat2.xy = u_xlat2.xy + vec2(0.5, 0.5);
    u_xlat12 = texture(_LightTexture0, u_xlat2.xy).w;
#ifdef UNITY_ADRENO_ES3
    u_xlatb2 = !!(0.0<u_xlat0.z);
#else
    u_xlatb2 = 0.0<u_xlat0.z;
#endif
    u_xlat0.x = dot(u_xlat0.xyz, u_xlat0.xyz);
    u_xlat0.x = texture(_LightTextureB0, u_xlat0.xx).x;
    u_xlat16_13 = (u_xlatb2) ? 1.0 : 0.0;
    u_xlat16_13 = u_xlat12 * u_xlat16_13;
    u_xlat16_13 = u_xlat0.x * u_xlat16_13;
    u_xlat16_3.xyz = vec3(u_xlat16_13) * _LightColor0.xyz;
    u_xlat16_0 = texture(_MainTex, vs_TEXCOORD0.xy);
    u_xlat16_0 = u_xlat16_0 * _Color;
    u_xlat16_3.xyz = u_xlat16_3.xyz * u_xlat16_0.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * u_xlat16_3.xyz;
    SV_Target0.xyz = u_xlat16_0.www * u_xlat16_1.xyz;
    SV_Target0.w = u_xlat16_0.w;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier02 " {
Keywords { "SPOT" }
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToLight[4];
uniform 	vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in highp vec3 in_NORMAL0;
in highp vec4 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out highp vec3 vs_TEXCOORD1;
out highp vec3 vs_TEXCOORD2;
out highp vec4 vs_TEXCOORD3;
out highp vec4 vs_TEXCOORD4;
vec4 u_xlat0;
vec4 u_xlat1;
vec4 u_xlat2;
float u_xlat10;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy;
    u_xlat1.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat1.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat1.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat10 = dot(u_xlat1.xyz, u_xlat1.xyz);
    u_xlat10 = inversesqrt(u_xlat10);
    vs_TEXCOORD1.xyz = vec3(u_xlat10) * u_xlat1.xyz;
    vs_TEXCOORD2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[3] * in_POSITION0.wwww + u_xlat0;
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_WorldToLight[1];
    u_xlat1 = hlslcc_mtx4x4unity_WorldToLight[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToLight[2] * u_xlat0.zzzz + u_xlat1;
    vs_TEXCOORD3 = hlslcc_mtx4x4unity_WorldToLight[3] * u_xlat0.wwww + u_xlat1;
    vs_TEXCOORD4 = vec4(0.0, 0.0, 0.0, 0.0);
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 _LightColor0;
uniform 	vec4 hlslcc_mtx4x4unity_WorldToLight[4];
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 _HColor;
uniform 	mediump float _RampThreshold;
uniform 	mediump float _RampSmooth;
UNITY_LOCATION(0) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(1) uniform highp sampler2D _LightTexture0;
UNITY_LOCATION(2) uniform highp sampler2D _LightTextureB0;
in mediump vec2 vs_TEXCOORD0;
in highp vec3 vs_TEXCOORD1;
in highp vec3 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec4 u_xlat0;
mediump vec4 u_xlat16_0;
mediump vec3 u_xlat16_1;
vec2 u_xlat2;
bool u_xlatb2;
mediump vec3 u_xlat16_3;
mediump float u_xlat16_5;
mediump float u_xlat16_9;
float u_xlat12;
mediump float u_xlat16_13;
void main()
{
    u_xlat0.xyz = (-vs_TEXCOORD2.xyz) + _WorldSpaceLightPos0.xyz;
    u_xlat12 = dot(u_xlat0.xyz, u_xlat0.xyz);
    u_xlat12 = inversesqrt(u_xlat12);
    u_xlat0.xyz = vec3(u_xlat12) * u_xlat0.xyz;
    u_xlat16_1.x = dot(vs_TEXCOORD1.xyz, vs_TEXCOORD1.xyz);
    u_xlat16_1.x = inversesqrt(u_xlat16_1.x);
    u_xlat16_1.xyz = u_xlat16_1.xxx * vs_TEXCOORD1.xyz;
    u_xlat16_1.x = dot(u_xlat16_1.xyz, u_xlat0.xyz);
    u_xlat16_1.x = max(u_xlat16_1.x, 0.0);
    u_xlat16_5 = (-_RampSmooth) * 0.5 + _RampThreshold;
    u_xlat16_1.x = (-u_xlat16_5) + u_xlat16_1.x;
    u_xlat16_9 = _RampSmooth * 0.5 + _RampThreshold;
    u_xlat16_5 = (-u_xlat16_5) + u_xlat16_9;
    u_xlat16_5 = float(1.0) / u_xlat16_5;
    u_xlat16_1.x = u_xlat16_5 * u_xlat16_1.x;
#ifdef UNITY_ADRENO_ES3
    u_xlat16_1.x = min(max(u_xlat16_1.x, 0.0), 1.0);
#else
    u_xlat16_1.x = clamp(u_xlat16_1.x, 0.0, 1.0);
#endif
    u_xlat16_5 = u_xlat16_1.x * -2.0 + 3.0;
    u_xlat16_1.x = u_xlat16_1.x * u_xlat16_1.x;
    u_xlat16_1.x = u_xlat16_1.x * u_xlat16_5;
    u_xlat16_1.xyz = u_xlat16_1.xxx * _HColor.xyz;
    u_xlat0 = vs_TEXCOORD2.yyyy * hlslcc_mtx4x4unity_WorldToLight[1];
    u_xlat0 = hlslcc_mtx4x4unity_WorldToLight[0] * vs_TEXCOORD2.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_WorldToLight[2] * vs_TEXCOORD2.zzzz + u_xlat0;
    u_xlat0 = u_xlat0 + hlslcc_mtx4x4unity_WorldToLight[3];
    u_xlat2.xy = u_xlat0.xy / u_xlat0.ww;
    u_xlat2.xy = u_xlat2.xy + vec2(0.5, 0.5);
    u_xlat12 = texture(_LightTexture0, u_xlat2.xy).w;
#ifdef UNITY_ADRENO_ES3
    u_xlatb2 = !!(0.0<u_xlat0.z);
#else
    u_xlatb2 = 0.0<u_xlat0.z;
#endif
    u_xlat0.x = dot(u_xlat0.xyz, u_xlat0.xyz);
    u_xlat0.x = texture(_LightTextureB0, u_xlat0.xx).x;
    u_xlat16_13 = (u_xlatb2) ? 1.0 : 0.0;
    u_xlat16_13 = u_xlat12 * u_xlat16_13;
    u_xlat16_13 = u_xlat0.x * u_xlat16_13;
    u_xlat16_3.xyz = vec3(u_xlat16_13) * _LightColor0.xyz;
    u_xlat16_0 = texture(_MainTex, vs_TEXCOORD0.xy);
    u_xlat16_0 = u_xlat16_0 * _Color;
    u_xlat16_3.xyz = u_xlat16_3.xyz * u_xlat16_0.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * u_xlat16_3.xyz;
    SV_Target0.xyz = u_xlat16_0.www * u_xlat16_1.xyz;
    SV_Target0.w = u_xlat16_0.w;
    return;
}

#endif
"
}
SubProgram "vulkan hw_tier00 " {
Keywords { "SPOT" }
"; SPIR-V
; Version: 1.0
; Generator: Khronos Glslang Reference Front End; 6
; Bound: 196
; Schema: 0
                                                      OpCapability Shader 
                                               %1 = OpExtInstImport "GLSL.std.450" 
                                                      OpMemoryModel Logical GLSL450 
                                                      OpEntryPoint Vertex %4 "main" %11 %75 %85 %101 %106 %137 %143 %179 %187 
                                                      OpName vs_TEXCOORD0 "vs_TEXCOORD0" 
                                                      OpName vs_TEXCOORD1 "vs_TEXCOORD1" 
                                                      OpName vs_TEXCOORD2 "vs_TEXCOORD2" 
                                                      OpName vs_TEXCOORD3 "vs_TEXCOORD3" 
                                                      OpName vs_TEXCOORD4 "vs_TEXCOORD4" 
                                                      OpDecorate %11 Location 11 
                                                      OpDecorate %16 ArrayStride 16 
                                                      OpDecorate %17 ArrayStride 17 
                                                      OpDecorate %18 ArrayStride 18 
                                                      OpDecorate %19 ArrayStride 19 
                                                      OpMemberDecorate %20 0 Offset 20 
                                                      OpMemberDecorate %20 1 Offset 20 
                                                      OpMemberDecorate %20 2 Offset 20 
                                                      OpMemberDecorate %20 3 Offset 20 
                                                      OpMemberDecorate %20 4 Offset 20 
                                                      OpDecorate %20 Block 
                                                      OpDecorate %22 DescriptorSet 22 
                                                      OpDecorate %22 Binding 22 
                                                      OpMemberDecorate %73 0 BuiltIn 73 
                                                      OpMemberDecorate %73 1 BuiltIn 73 
                                                      OpMemberDecorate %73 2 BuiltIn 73 
                                                      OpDecorate %73 Block 
                                                      OpDecorate %85 Location 85 
                                                      OpDecorate vs_TEXCOORD0 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD0 Location 101 
                                                      OpDecorate %106 Location 106 
                                                      OpDecorate vs_TEXCOORD1 Location 137 
                                                      OpDecorate vs_TEXCOORD2 Location 143 
                                                      OpDecorate vs_TEXCOORD3 Location 179 
                                                      OpDecorate vs_TEXCOORD4 Location 187 
                                               %2 = OpTypeVoid 
                                               %3 = OpTypeFunction %2 
                                               %6 = OpTypeFloat 32 
                                               %7 = OpTypeVector %6 4 
                                               %8 = OpTypePointer Private %7 
                                Private f32_4* %9 = OpVariable Private 
                                              %10 = OpTypePointer Input %7 
                                 Input f32_4* %11 = OpVariable Input 
                                              %14 = OpTypeInt 32 0 
                                          u32 %15 = OpConstant 4 
                                              %16 = OpTypeArray %7 %15 
                                              %17 = OpTypeArray %7 %15 
                                              %18 = OpTypeArray %7 %15 
                                              %19 = OpTypeArray %7 %15 
                                              %20 = OpTypeStruct %16 %17 %18 %19 %7 
                                              %21 = OpTypePointer Uniform %20 
Uniform struct {f32_4[4]; f32_4[4]; f32_4[4]; f32_4[4]; f32_4;}* %22 = OpVariable Uniform 
                                              %23 = OpTypeInt 32 1 
                                          i32 %24 = OpConstant 0 
                                          i32 %25 = OpConstant 1 
                                              %26 = OpTypePointer Uniform %7 
                                          i32 %37 = OpConstant 2 
                               Private f32_4* %45 = OpVariable Private 
                                          i32 %47 = OpConstant 3 
                               Private f32_4* %51 = OpVariable Private 
                                          u32 %71 = OpConstant 1 
                                              %72 = OpTypeArray %6 %71 
                                              %73 = OpTypeStruct %7 %6 %72 
                                              %74 = OpTypePointer Output %73 
         Output struct {f32_4; f32; f32[1];}* %75 = OpVariable Output 
                                              %83 = OpTypePointer Output %7 
                                 Input f32_4* %85 = OpVariable Input 
                                              %86 = OpTypeVector %6 2 
                                          i32 %89 = OpConstant 4 
                                             %100 = OpTypePointer Output %86 
                       Output f32_2* vs_TEXCOORD0 = OpVariable Output 
                                             %104 = OpTypeVector %6 3 
                                             %105 = OpTypePointer Input %104 
                                Input f32_3* %106 = OpVariable Input 
                                         u32 %112 = OpConstant 0 
                                             %113 = OpTypePointer Private %6 
                                         u32 %126 = OpConstant 2 
                                Private f32* %128 = OpVariable Private 
                                             %136 = OpTypePointer Output %104 
                       Output f32_3* vs_TEXCOORD1 = OpVariable Output 
                       Output f32_3* vs_TEXCOORD2 = OpVariable Output 
                       Output f32_4* vs_TEXCOORD3 = OpVariable Output 
                       Output f32_4* vs_TEXCOORD4 = OpVariable Output 
                                         f32 %188 = OpConstant 3.674022E-40 
                                       f32_4 %189 = OpConstantComposite %188 %188 %188 %188 
                                             %190 = OpTypePointer Output %6 
                                          void %4 = OpFunction None %3 
                                               %5 = OpLabel 
                                        f32_4 %12 = OpLoad %11 
                                        f32_4 %13 = OpVectorShuffle %12 %12 1 1 1 1 
                               Uniform f32_4* %27 = OpAccessChain %22 %24 %25 
                                        f32_4 %28 = OpLoad %27 
                                        f32_4 %29 = OpFMul %13 %28 
                                                      OpStore %9 %29 
                               Uniform f32_4* %30 = OpAccessChain %22 %24 %24 
                                        f32_4 %31 = OpLoad %30 
                                        f32_4 %32 = OpLoad %11 
                                        f32_4 %33 = OpVectorShuffle %32 %32 0 0 0 0 
                                        f32_4 %34 = OpFMul %31 %33 
                                        f32_4 %35 = OpLoad %9 
                                        f32_4 %36 = OpFAdd %34 %35 
                                                      OpStore %9 %36 
                               Uniform f32_4* %38 = OpAccessChain %22 %24 %37 
                                        f32_4 %39 = OpLoad %38 
                                        f32_4 %40 = OpLoad %11 
                                        f32_4 %41 = OpVectorShuffle %40 %40 2 2 2 2 
                                        f32_4 %42 = OpFMul %39 %41 
                                        f32_4 %43 = OpLoad %9 
                                        f32_4 %44 = OpFAdd %42 %43 
                                                      OpStore %9 %44 
                                        f32_4 %46 = OpLoad %9 
                               Uniform f32_4* %48 = OpAccessChain %22 %24 %47 
                                        f32_4 %49 = OpLoad %48 
                                        f32_4 %50 = OpFAdd %46 %49 
                                                      OpStore %45 %50 
                                        f32_4 %52 = OpLoad %45 
                                        f32_4 %53 = OpVectorShuffle %52 %52 1 1 1 1 
                               Uniform f32_4* %54 = OpAccessChain %22 %37 %25 
                                        f32_4 %55 = OpLoad %54 
                                        f32_4 %56 = OpFMul %53 %55 
                                                      OpStore %51 %56 
                               Uniform f32_4* %57 = OpAccessChain %22 %37 %24 
                                        f32_4 %58 = OpLoad %57 
                                        f32_4 %59 = OpLoad %45 
                                        f32_4 %60 = OpVectorShuffle %59 %59 0 0 0 0 
                                        f32_4 %61 = OpFMul %58 %60 
                                        f32_4 %62 = OpLoad %51 
                                        f32_4 %63 = OpFAdd %61 %62 
                                                      OpStore %51 %63 
                               Uniform f32_4* %64 = OpAccessChain %22 %37 %37 
                                        f32_4 %65 = OpLoad %64 
                                        f32_4 %66 = OpLoad %45 
                                        f32_4 %67 = OpVectorShuffle %66 %66 2 2 2 2 
                                        f32_4 %68 = OpFMul %65 %67 
                                        f32_4 %69 = OpLoad %51 
                                        f32_4 %70 = OpFAdd %68 %69 
                                                      OpStore %51 %70 
                               Uniform f32_4* %76 = OpAccessChain %22 %37 %47 
                                        f32_4 %77 = OpLoad %76 
                                        f32_4 %78 = OpLoad %45 
                                        f32_4 %79 = OpVectorShuffle %78 %78 3 3 3 3 
                                        f32_4 %80 = OpFMul %77 %79 
                                        f32_4 %81 = OpLoad %51 
                                        f32_4 %82 = OpFAdd %80 %81 
                                Output f32_4* %84 = OpAccessChain %75 %24 
                                                      OpStore %84 %82 
                                        f32_4 %87 = OpLoad %85 
                                        f32_2 %88 = OpVectorShuffle %87 %87 0 1 
                               Uniform f32_4* %90 = OpAccessChain %22 %89 
                                        f32_4 %91 = OpLoad %90 
                                        f32_2 %92 = OpVectorShuffle %91 %91 0 1 
                                        f32_2 %93 = OpFMul %88 %92 
                               Uniform f32_4* %94 = OpAccessChain %22 %89 
                                        f32_4 %95 = OpLoad %94 
                                        f32_2 %96 = OpVectorShuffle %95 %95 2 3 
                                        f32_2 %97 = OpFAdd %93 %96 
                                        f32_4 %98 = OpLoad %45 
                                        f32_4 %99 = OpVectorShuffle %98 %97 4 5 2 3 
                                                      OpStore %45 %99 
                                       f32_4 %102 = OpLoad %45 
                                       f32_2 %103 = OpVectorShuffle %102 %102 0 1 
                                                      OpStore vs_TEXCOORD0 %103 
                                       f32_3 %107 = OpLoad %106 
                              Uniform f32_4* %108 = OpAccessChain %22 %25 %24 
                                       f32_4 %109 = OpLoad %108 
                                       f32_3 %110 = OpVectorShuffle %109 %109 0 1 2 
                                         f32 %111 = OpDot %107 %110 
                                Private f32* %114 = OpAccessChain %45 %112 
                                                      OpStore %114 %111 
                                       f32_3 %115 = OpLoad %106 
                              Uniform f32_4* %116 = OpAccessChain %22 %25 %25 
                                       f32_4 %117 = OpLoad %116 
                                       f32_3 %118 = OpVectorShuffle %117 %117 0 1 2 
                                         f32 %119 = OpDot %115 %118 
                                Private f32* %120 = OpAccessChain %45 %71 
                                                      OpStore %120 %119 
                                       f32_3 %121 = OpLoad %106 
                              Uniform f32_4* %122 = OpAccessChain %22 %25 %37 
                                       f32_4 %123 = OpLoad %122 
                                       f32_3 %124 = OpVectorShuffle %123 %123 0 1 2 
                                         f32 %125 = OpDot %121 %124 
                                Private f32* %127 = OpAccessChain %45 %126 
                                                      OpStore %127 %125 
                                       f32_4 %129 = OpLoad %45 
                                       f32_3 %130 = OpVectorShuffle %129 %129 0 1 2 
                                       f32_4 %131 = OpLoad %45 
                                       f32_3 %132 = OpVectorShuffle %131 %131 0 1 2 
                                         f32 %133 = OpDot %130 %132 
                                                      OpStore %128 %133 
                                         f32 %134 = OpLoad %128 
                                         f32 %135 = OpExtInst %1 32 %134 
                                                      OpStore %128 %135 
                                         f32 %138 = OpLoad %128 
                                       f32_3 %139 = OpCompositeConstruct %138 %138 %138 
                                       f32_4 %140 = OpLoad %45 
                                       f32_3 %141 = OpVectorShuffle %140 %140 0 1 2 
                                       f32_3 %142 = OpFMul %139 %141 
                                                      OpStore vs_TEXCOORD1 %142 
                              Uniform f32_4* %144 = OpAccessChain %22 %24 %47 
                                       f32_4 %145 = OpLoad %144 
                                       f32_3 %146 = OpVectorShuffle %145 %145 0 1 2 
                                       f32_4 %147 = OpLoad %11 
                                       f32_3 %148 = OpVectorShuffle %147 %147 3 3 3 
                                       f32_3 %149 = OpFMul %146 %148 
                                       f32_4 %150 = OpLoad %9 
                                       f32_3 %151 = OpVectorShuffle %150 %150 0 1 2 
                                       f32_3 %152 = OpFAdd %149 %151 
                                                      OpStore vs_TEXCOORD2 %152 
                              Uniform f32_4* %153 = OpAccessChain %22 %24 %47 
                                       f32_4 %154 = OpLoad %153 
                                       f32_4 %155 = OpLoad %11 
                                       f32_4 %156 = OpVectorShuffle %155 %155 3 3 3 3 
                                       f32_4 %157 = OpFMul %154 %156 
                                       f32_4 %158 = OpLoad %9 
                                       f32_4 %159 = OpFAdd %157 %158 
                                                      OpStore %9 %159 
                                       f32_4 %160 = OpLoad %9 
                                       f32_4 %161 = OpVectorShuffle %160 %160 1 1 1 1 
                              Uniform f32_4* %162 = OpAccessChain %22 %47 %25 
                                       f32_4 %163 = OpLoad %162 
                                       f32_4 %164 = OpFMul %161 %163 
                                                      OpStore %45 %164 
                              Uniform f32_4* %165 = OpAccessChain %22 %47 %24 
                                       f32_4 %166 = OpLoad %165 
                                       f32_4 %167 = OpLoad %9 
                                       f32_4 %168 = OpVectorShuffle %167 %167 0 0 0 0 
                                       f32_4 %169 = OpFMul %166 %168 
                                       f32_4 %170 = OpLoad %45 
                                       f32_4 %171 = OpFAdd %169 %170 
                                                      OpStore %45 %171 
                              Uniform f32_4* %172 = OpAccessChain %22 %47 %37 
                                       f32_4 %173 = OpLoad %172 
                                       f32_4 %174 = OpLoad %9 
                                       f32_4 %175 = OpVectorShuffle %174 %174 2 2 2 2 
                                       f32_4 %176 = OpFMul %173 %175 
                                       f32_4 %177 = OpLoad %45 
                                       f32_4 %178 = OpFAdd %176 %177 
                                                      OpStore %45 %178 
                              Uniform f32_4* %180 = OpAccessChain %22 %47 %47 
                                       f32_4 %181 = OpLoad %180 
                                       f32_4 %182 = OpLoad %9 
                                       f32_4 %183 = OpVectorShuffle %182 %182 3 3 3 3 
                                       f32_4 %184 = OpFMul %181 %183 
                                       f32_4 %185 = OpLoad %45 
                                       f32_4 %186 = OpFAdd %184 %185 
                                                      OpStore vs_TEXCOORD3 %186 
                                                      OpStore vs_TEXCOORD4 %189 
                                 Output f32* %191 = OpAccessChain %75 %24 %71 
                                         f32 %192 = OpLoad %191 
                                         f32 %193 = OpFNegate %192 
                                 Output f32* %194 = OpAccessChain %75 %24 %71 
                                                      OpStore %194 %193 
                                                      OpReturn
                                                      OpFunctionEnd
; SPIR-V
; Version: 1.0
; Generator: Khronos Glslang Reference Front End; 6
; Bound: 263
; Schema: 0
                                                      OpCapability Shader 
                                               %1 = OpExtInstImport "GLSL.std.450" 
                                                      OpMemoryModel Logical GLSL450 
                                                      OpEntryPoint Fragment %4 "main" %12 %48 %235 %251 
                                                      OpExecutionMode %4 OriginUpperLeft 
                                                      OpName vs_TEXCOORD2 "vs_TEXCOORD2" 
                                                      OpName vs_TEXCOORD1 "vs_TEXCOORD1" 
                                                      OpName vs_TEXCOORD0 "vs_TEXCOORD0" 
                                                      OpDecorate vs_TEXCOORD2 Location 12 
                                                      OpDecorate %17 ArrayStride 17 
                                                      OpMemberDecorate %18 0 Offset 18 
                                                      OpMemberDecorate %18 1 RelaxedPrecision 
                                                      OpMemberDecorate %18 1 Offset 18 
                                                      OpMemberDecorate %18 2 Offset 18 
                                                      OpMemberDecorate %18 3 RelaxedPrecision 
                                                      OpMemberDecorate %18 3 Offset 18 
                                                      OpMemberDecorate %18 4 RelaxedPrecision 
                                                      OpMemberDecorate %18 4 Offset 18 
                                                      OpMemberDecorate %18 5 RelaxedPrecision 
                                                      OpMemberDecorate %18 5 Offset 18 
                                                      OpMemberDecorate %18 6 RelaxedPrecision 
                                                      OpMemberDecorate %18 6 Offset 18 
                                                      OpDecorate %18 Block 
                                                      OpDecorate %20 DescriptorSet 20 
                                                      OpDecorate %20 Binding 20 
                                                      OpDecorate %47 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD1 Location 48 
                                                      OpDecorate %55 RelaxedPrecision 
                                                      OpDecorate %56 RelaxedPrecision 
                                                      OpDecorate %58 RelaxedPrecision 
                                                      OpDecorate %59 RelaxedPrecision 
                                                      OpDecorate %62 RelaxedPrecision 
                                                      OpDecorate %68 RelaxedPrecision 
                                                      OpDecorate %70 RelaxedPrecision 
                                                      OpDecorate %72 RelaxedPrecision 
                                                      OpDecorate %76 RelaxedPrecision 
                                                      OpDecorate %77 RelaxedPrecision 
                                                      OpDecorate %79 RelaxedPrecision 
                                                      OpDecorate %82 RelaxedPrecision 
                                                      OpDecorate %83 RelaxedPrecision 
                                                      OpDecorate %84 RelaxedPrecision 
                                                      OpDecorate %85 RelaxedPrecision 
                                                      OpDecorate %87 RelaxedPrecision 
                                                      OpDecorate %88 RelaxedPrecision 
                                                      OpDecorate %90 RelaxedPrecision 
                                                      OpDecorate %92 RelaxedPrecision 
                                                      OpDecorate %93 RelaxedPrecision 
                                                      OpDecorate %95 RelaxedPrecision 
                                                      OpDecorate %96 RelaxedPrecision 
                                                      OpDecorate %97 RelaxedPrecision 
                                                      OpDecorate %98 RelaxedPrecision 
                                                      OpDecorate %99 RelaxedPrecision 
                                                      OpDecorate %100 RelaxedPrecision 
                                                      OpDecorate %102 RelaxedPrecision 
                                                      OpDecorate %103 RelaxedPrecision 
                                                      OpDecorate %104 RelaxedPrecision 
                                                      OpDecorate %106 RelaxedPrecision 
                                                      OpDecorate %107 RelaxedPrecision 
                                                      OpDecorate %110 RelaxedPrecision 
                                                      OpDecorate %111 RelaxedPrecision 
                                                      OpDecorate %114 RelaxedPrecision 
                                                      OpDecorate %116 RelaxedPrecision 
                                                      OpDecorate %118 RelaxedPrecision 
                                                      OpDecorate %120 RelaxedPrecision 
                                                      OpDecorate %122 RelaxedPrecision 
                                                      OpDecorate %123 RelaxedPrecision 
                                                      OpDecorate %126 RelaxedPrecision 
                                                      OpDecorate %127 RelaxedPrecision 
                                                      OpDecorate %128 RelaxedPrecision 
                                                      OpDecorate %130 RelaxedPrecision 
                                                      OpDecorate %131 RelaxedPrecision 
                                                      OpDecorate %134 RelaxedPrecision 
                                                      OpDecorate %135 RelaxedPrecision 
                                                      OpDecorate %136 RelaxedPrecision 
                                                      OpDecorate %176 DescriptorSet 176 
                                                      OpDecorate %176 Binding 176 
                                                      OpDecorate %180 DescriptorSet 180 
                                                      OpDecorate %180 Binding 180 
                                                      OpDecorate %201 DescriptorSet 201 
                                                      OpDecorate %201 Binding 201 
                                                      OpDecorate %203 DescriptorSet 203 
                                                      OpDecorate %203 Binding 203 
                                                      OpDecorate %211 RelaxedPrecision 
                                                      OpDecorate %215 RelaxedPrecision 
                                                      OpDecorate %219 RelaxedPrecision 
                                                      OpDecorate %221 RelaxedPrecision 
                                                      OpDecorate %222 RelaxedPrecision 
                                                      OpDecorate %223 RelaxedPrecision 
                                                      OpDecorate %225 RelaxedPrecision 
                                                      OpDecorate %226 RelaxedPrecision 
                                                      OpDecorate %227 RelaxedPrecision 
                                                      OpDecorate %228 RelaxedPrecision 
                                                      OpDecorate %229 RelaxedPrecision 
                                                      OpDecorate %229 DescriptorSet 229 
                                                      OpDecorate %229 Binding 229 
                                                      OpDecorate %230 RelaxedPrecision 
                                                      OpDecorate %231 RelaxedPrecision 
                                                      OpDecorate %231 DescriptorSet 231 
                                                      OpDecorate %231 Binding 231 
                                                      OpDecorate %232 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD0 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD0 Location 235 
                                                      OpDecorate %236 RelaxedPrecision 
                                                      OpDecorate %237 RelaxedPrecision 
                                                      OpDecorate %238 RelaxedPrecision 
                                                      OpDecorate %239 RelaxedPrecision 
                                                      OpDecorate %241 RelaxedPrecision 
                                                      OpDecorate %242 RelaxedPrecision 
                                                      OpDecorate %243 RelaxedPrecision 
                                                      OpDecorate %244 RelaxedPrecision 
                                                      OpDecorate %245 RelaxedPrecision 
                                                      OpDecorate %246 RelaxedPrecision 
                                                      OpDecorate %247 RelaxedPrecision 
                                                      OpDecorate %248 RelaxedPrecision 
                                                      OpDecorate %249 RelaxedPrecision 
                                                      OpDecorate %251 RelaxedPrecision 
                                                      OpDecorate %251 Location 251 
                                                      OpDecorate %252 RelaxedPrecision 
                                                      OpDecorate %253 RelaxedPrecision 
                                                      OpDecorate %254 RelaxedPrecision 
                                                      OpDecorate %255 RelaxedPrecision 
                                                      OpDecorate %259 RelaxedPrecision 
                                               %2 = OpTypeVoid 
                                               %3 = OpTypeFunction %2 
                                               %6 = OpTypeFloat 32 
                                               %7 = OpTypeVector %6 4 
                                               %8 = OpTypePointer Private %7 
                                Private f32_4* %9 = OpVariable Private 
                                              %10 = OpTypeVector %6 3 
                                              %11 = OpTypePointer Input %10 
                        Input f32_3* vs_TEXCOORD2 = OpVariable Input 
                                              %15 = OpTypeInt 32 0 
                                          u32 %16 = OpConstant 4 
                                              %17 = OpTypeArray %7 %16 
                                              %18 = OpTypeStruct %7 %7 %17 %7 %7 %6 %6 
                                              %19 = OpTypePointer Uniform %18 
Uniform struct {f32_4; f32_4; f32_4[4]; f32_4; f32_4; f32; f32;}* %20 = OpVariable Uniform 
                                              %21 = OpTypeInt 32 1 
                                          i32 %22 = OpConstant 0 
                                              %23 = OpTypePointer Uniform %7 
                                              %30 = OpTypePointer Private %6 
                                 Private f32* %31 = OpVariable Private 
                                              %46 = OpTypePointer Private %10 
                               Private f32_3* %47 = OpVariable Private 
                        Input f32_3* vs_TEXCOORD1 = OpVariable Input 
                                          u32 %52 = OpConstant 0 
                                          f32 %69 = OpConstant 3.674022E-40 
                                 Private f32* %72 = OpVariable Private 
                                          i32 %73 = OpConstant 6 
                                              %74 = OpTypePointer Uniform %6 
                                          f32 %78 = OpConstant 3.674022E-40 
                                          i32 %80 = OpConstant 5 
                                 Private f32* %90 = OpVariable Private 
                                         f32 %101 = OpConstant 3.674022E-40 
                                         f32 %115 = OpConstant 3.674022E-40 
                                         f32 %117 = OpConstant 3.674022E-40 
                                         i32 %132 = OpConstant 4 
                                         i32 %139 = OpConstant 2 
                                         i32 %140 = OpConstant 1 
                                         i32 %159 = OpConstant 3 
                                             %163 = OpTypeVector %6 2 
                                             %164 = OpTypePointer Private %163 
                              Private f32_2* %165 = OpVariable Private 
                                       f32_2 %172 = OpConstantComposite %78 %78 
                                             %174 = OpTypeImage %6 Dim2D 0 0 0 1 Unknown 
                                             %175 = OpTypePointer UniformConstant %174 
        UniformConstant read_only Texture2D* %176 = OpVariable UniformConstant 
                                             %178 = OpTypeSampler 
                                             %179 = OpTypePointer UniformConstant %178 
                    UniformConstant sampler* %180 = OpVariable UniformConstant 
                                             %182 = OpTypeSampledImage %174 
                                         u32 %186 = OpConstant 3 
                                             %188 = OpTypeBool 
                                             %189 = OpTypePointer Private %188 
                               Private bool* %190 = OpVariable Private 
                                         u32 %191 = OpConstant 2 
        UniformConstant read_only Texture2D* %201 = OpVariable UniformConstant 
                    UniformConstant sampler* %203 = OpVariable UniformConstant 
                                Private f32* %211 = OpVariable Private 
                              Private f32_3* %221 = OpVariable Private 
                              Private f32_4* %228 = OpVariable Private 
        UniformConstant read_only Texture2D* %229 = OpVariable UniformConstant 
                    UniformConstant sampler* %231 = OpVariable UniformConstant 
                                             %234 = OpTypePointer Input %163 
                        Input f32_2* vs_TEXCOORD0 = OpVariable Input 
                              Private f32_4* %238 = OpVariable Private 
                                             %250 = OpTypePointer Output %7 
                               Output f32_4* %251 = OpVariable Output 
                                             %260 = OpTypePointer Output %6 
                                          void %4 = OpFunction None %3 
                                               %5 = OpLabel 
                                        f32_3 %13 = OpLoad vs_TEXCOORD2 
                                        f32_3 %14 = OpFNegate %13 
                               Uniform f32_4* %24 = OpAccessChain %20 %22 
                                        f32_4 %25 = OpLoad %24 
                                        f32_3 %26 = OpVectorShuffle %25 %25 0 1 2 
                                        f32_3 %27 = OpFAdd %14 %26 
                                        f32_4 %28 = OpLoad %9 
                                        f32_4 %29 = OpVectorShuffle %28 %27 4 5 6 3 
                                                      OpStore %9 %29 
                                        f32_4 %32 = OpLoad %9 
                                        f32_3 %33 = OpVectorShuffle %32 %32 0 1 2 
                                        f32_4 %34 = OpLoad %9 
                                        f32_3 %35 = OpVectorShuffle %34 %34 0 1 2 
                                          f32 %36 = OpDot %33 %35 
                                                      OpStore %31 %36 
                                          f32 %37 = OpLoad %31 
                                          f32 %38 = OpExtInst %1 32 %37 
                                                      OpStore %31 %38 
                                          f32 %39 = OpLoad %31 
                                        f32_3 %40 = OpCompositeConstruct %39 %39 %39 
                                        f32_4 %41 = OpLoad %9 
                                        f32_3 %42 = OpVectorShuffle %41 %41 0 1 2 
                                        f32_3 %43 = OpFMul %40 %42 
                                        f32_4 %44 = OpLoad %9 
                                        f32_4 %45 = OpVectorShuffle %44 %43 4 5 6 3 
                                                      OpStore %9 %45 
                                        f32_3 %49 = OpLoad vs_TEXCOORD1 
                                        f32_3 %50 = OpLoad vs_TEXCOORD1 
                                          f32 %51 = OpDot %49 %50 
                                 Private f32* %53 = OpAccessChain %47 %52 
                                                      OpStore %53 %51 
                                 Private f32* %54 = OpAccessChain %47 %52 
                                          f32 %55 = OpLoad %54 
                                          f32 %56 = OpExtInst %1 32 %55 
                                 Private f32* %57 = OpAccessChain %47 %52 
                                                      OpStore %57 %56 
                                        f32_3 %58 = OpLoad %47 
                                        f32_3 %59 = OpVectorShuffle %58 %58 0 0 0 
                                        f32_3 %60 = OpLoad vs_TEXCOORD1 
                                        f32_3 %61 = OpFMul %59 %60 
                                                      OpStore %47 %61 
                                        f32_3 %62 = OpLoad %47 
                                        f32_4 %63 = OpLoad %9 
                                        f32_3 %64 = OpVectorShuffle %63 %63 0 1 2 
                                          f32 %65 = OpDot %62 %64 
                                 Private f32* %66 = OpAccessChain %47 %52 
                                                      OpStore %66 %65 
                                 Private f32* %67 = OpAccessChain %47 %52 
                                          f32 %68 = OpLoad %67 
                                          f32 %70 = OpExtInst %1 40 %68 %69 
                                 Private f32* %71 = OpAccessChain %47 %52 
                                                      OpStore %71 %70 
                                 Uniform f32* %75 = OpAccessChain %20 %73 
                                          f32 %76 = OpLoad %75 
                                          f32 %77 = OpFNegate %76 
                                          f32 %79 = OpFMul %77 %78 
                                 Uniform f32* %81 = OpAccessChain %20 %80 
                                          f32 %82 = OpLoad %81 
                                          f32 %83 = OpFAdd %79 %82 
                                                      OpStore %72 %83 
                                          f32 %84 = OpLoad %72 
                                          f32 %85 = OpFNegate %84 
                                 Private f32* %86 = OpAccessChain %47 %52 
                                          f32 %87 = OpLoad %86 
                                          f32 %88 = OpFAdd %85 %87 
                                 Private f32* %89 = OpAccessChain %47 %52 
                                                      OpStore %89 %88 
                                 Uniform f32* %91 = OpAccessChain %20 %73 
                                          f32 %92 = OpLoad %91 
                                          f32 %93 = OpFMul %92 %78 
                                 Uniform f32* %94 = OpAccessChain %20 %80 
                                          f32 %95 = OpLoad %94 
                                          f32 %96 = OpFAdd %93 %95 
                                                      OpStore %90 %96 
                                          f32 %97 = OpLoad %72 
                                          f32 %98 = OpFNegate %97 
                                          f32 %99 = OpLoad %90 
                                         f32 %100 = OpFAdd %98 %99 
                                                      OpStore %72 %100 
                                         f32 %102 = OpLoad %72 
                                         f32 %103 = OpFDiv %101 %102 
                                                      OpStore %72 %103 
                                         f32 %104 = OpLoad %72 
                                Private f32* %105 = OpAccessChain %47 %52 
                                         f32 %106 = OpLoad %105 
                                         f32 %107 = OpFMul %104 %106 
                                Private f32* %108 = OpAccessChain %47 %52 
                                                      OpStore %108 %107 
                                Private f32* %109 = OpAccessChain %47 %52 
                                         f32 %110 = OpLoad %109 
                                         f32 %111 = OpExtInst %1 43 %110 %69 %101 
                                Private f32* %112 = OpAccessChain %47 %52 
                                                      OpStore %112 %111 
                                Private f32* %113 = OpAccessChain %47 %52 
                                         f32 %114 = OpLoad %113 
                                         f32 %116 = OpFMul %114 %115 
                                         f32 %118 = OpFAdd %116 %117 
                                                      OpStore %72 %118 
                                Private f32* %119 = OpAccessChain %47 %52 
                                         f32 %120 = OpLoad %119 
                                Private f32* %121 = OpAccessChain %47 %52 
                                         f32 %122 = OpLoad %121 
                                         f32 %123 = OpFMul %120 %122 
                                Private f32* %124 = OpAccessChain %47 %52 
                                                      OpStore %124 %123 
                                Private f32* %125 = OpAccessChain %47 %52 
                                         f32 %126 = OpLoad %125 
                                         f32 %127 = OpLoad %72 
                                         f32 %128 = OpFMul %126 %127 
                                Private f32* %129 = OpAccessChain %47 %52 
                                                      OpStore %129 %128 
                                       f32_3 %130 = OpLoad %47 
                                       f32_3 %131 = OpVectorShuffle %130 %130 0 0 0 
                              Uniform f32_4* %133 = OpAccessChain %20 %132 
                                       f32_4 %134 = OpLoad %133 
                                       f32_3 %135 = OpVectorShuffle %134 %134 0 1 2 
                                       f32_3 %136 = OpFMul %131 %135 
                                                      OpStore %47 %136 
                                       f32_3 %137 = OpLoad vs_TEXCOORD2 
                                       f32_4 %138 = OpVectorShuffle %137 %137 1 1 1 1 
                              Uniform f32_4* %141 = OpAccessChain %20 %139 %140 
                                       f32_4 %142 = OpLoad %141 
                                       f32_4 %143 = OpFMul %138 %142 
                                                      OpStore %9 %143 
                              Uniform f32_4* %144 = OpAccessChain %20 %139 %22 
                                       f32_4 %145 = OpLoad %144 
                                       f32_3 %146 = OpLoad vs_TEXCOORD2 
                                       f32_4 %147 = OpVectorShuffle %146 %146 0 0 0 0 
                                       f32_4 %148 = OpFMul %145 %147 
                                       f32_4 %149 = OpLoad %9 
                                       f32_4 %150 = OpFAdd %148 %149 
                                                      OpStore %9 %150 
                              Uniform f32_4* %151 = OpAccessChain %20 %139 %139 
                                       f32_4 %152 = OpLoad %151 
                                       f32_3 %153 = OpLoad vs_TEXCOORD2 
                                       f32_4 %154 = OpVectorShuffle %153 %153 2 2 2 2 
                                       f32_4 %155 = OpFMul %152 %154 
                                       f32_4 %156 = OpLoad %9 
                                       f32_4 %157 = OpFAdd %155 %156 
                                                      OpStore %9 %157 
                                       f32_4 %158 = OpLoad %9 
                              Uniform f32_4* %160 = OpAccessChain %20 %139 %159 
                                       f32_4 %161 = OpLoad %160 
                                       f32_4 %162 = OpFAdd %158 %161 
                                                      OpStore %9 %162 
                                       f32_4 %166 = OpLoad %9 
                                       f32_2 %167 = OpVectorShuffle %166 %166 0 1 
                                       f32_4 %168 = OpLoad %9 
                                       f32_2 %169 = OpVectorShuffle %168 %168 3 3 
                                       f32_2 %170 = OpFDiv %167 %169 
                                                      OpStore %165 %170 
                                       f32_2 %171 = OpLoad %165 
                                       f32_2 %173 = OpFAdd %171 %172 
                                                      OpStore %165 %173 
                         read_only Texture2D %177 = OpLoad %176 
                                     sampler %181 = OpLoad %180 
                  read_only Texture2DSampled %183 = OpSampledImage %177 %181 
                                       f32_2 %184 = OpLoad %165 
                                       f32_4 %185 = OpImageSampleImplicitLod %183 %184 
                                         f32 %187 = OpCompositeExtract %185 3 
                                                      OpStore %31 %187 
                                Private f32* %192 = OpAccessChain %9 %191 
                                         f32 %193 = OpLoad %192 
                                        bool %194 = OpFOrdLessThan %69 %193 
                                                      OpStore %190 %194 
                                       f32_4 %195 = OpLoad %9 
                                       f32_3 %196 = OpVectorShuffle %195 %195 0 1 2 
                                       f32_4 %197 = OpLoad %9 
                                       f32_3 %198 = OpVectorShuffle %197 %197 0 1 2 
                                         f32 %199 = OpDot %196 %198 
                                Private f32* %200 = OpAccessChain %9 %52 
                                                      OpStore %200 %199 
                         read_only Texture2D %202 = OpLoad %201 
                                     sampler %204 = OpLoad %203 
                  read_only Texture2DSampled %205 = OpSampledImage %202 %204 
                                       f32_4 %206 = OpLoad %9 
                                       f32_2 %207 = OpVectorShuffle %206 %206 0 0 
                                       f32_4 %208 = OpImageSampleImplicitLod %205 %207 
                                         f32 %209 = OpCompositeExtract %208 0 
                                Private f32* %210 = OpAccessChain %9 %52 
                                                      OpStore %210 %209 
                                        bool %212 = OpLoad %190 
                                         f32 %213 = OpSelect %212 %101 %69 
                                                      OpStore %211 %213 
                                         f32 %214 = OpLoad %31 
                                         f32 %215 = OpLoad %211 
                                         f32 %216 = OpFMul %214 %215 
                                                      OpStore %211 %216 
                                Private f32* %217 = OpAccessChain %9 %52 
                                         f32 %218 = OpLoad %217 
                                         f32 %219 = OpLoad %211 
                                         f32 %220 = OpFMul %218 %219 
                                                      OpStore %211 %220 
                                         f32 %222 = OpLoad %211 
                                       f32_3 %223 = OpCompositeConstruct %222 %222 %222 
                              Uniform f32_4* %224 = OpAccessChain %20 %140 
                                       f32_4 %225 = OpLoad %224 
                                       f32_3 %226 = OpVectorShuffle %225 %225 0 1 2 
                                       f32_3 %227 = OpFMul %223 %226 
                                                      OpStore %221 %227 
                         read_only Texture2D %230 = OpLoad %229 
                                     sampler %232 = OpLoad %231 
                  read_only Texture2DSampled %233 = OpSampledImage %230 %232 
                                       f32_2 %236 = OpLoad vs_TEXCOORD0 
                                       f32_4 %237 = OpImageSampleImplicitLod %233 %236 
                                                      OpStore %228 %237 
                                       f32_4 %239 = OpLoad %228 
                              Uniform f32_4* %240 = OpAccessChain %20 %159 
                                       f32_4 %241 = OpLoad %240 
                                       f32_4 %242 = OpFMul %239 %241 
                                                      OpStore %238 %242 
                                       f32_3 %243 = OpLoad %221 
                                       f32_4 %244 = OpLoad %238 
                                       f32_3 %245 = OpVectorShuffle %244 %244 0 1 2 
                                       f32_3 %246 = OpFMul %243 %245 
                                                      OpStore %221 %246 
                                       f32_3 %247 = OpLoad %47 
                                       f32_3 %248 = OpLoad %221 
                                       f32_3 %249 = OpFMul %247 %248 
                                                      OpStore %47 %249 
                                       f32_4 %252 = OpLoad %238 
                                       f32_3 %253 = OpVectorShuffle %252 %252 3 3 3 
                                       f32_3 %254 = OpLoad %47 
                                       f32_3 %255 = OpFMul %253 %254 
                                       f32_4 %256 = OpLoad %251 
                                       f32_4 %257 = OpVectorShuffle %256 %255 4 5 6 3 
                                                      OpStore %251 %257 
                                Private f32* %258 = OpAccessChain %238 %186 
                                         f32 %259 = OpLoad %258 
                                 Output f32* %261 = OpAccessChain %251 %186 
                                                      OpStore %261 %259 
                                                      OpReturn
                                                      OpFunctionEnd
"
}
SubProgram "vulkan hw_tier01 " {
Keywords { "SPOT" }
"; SPIR-V
; Version: 1.0
; Generator: Khronos Glslang Reference Front End; 6
; Bound: 196
; Schema: 0
                                                      OpCapability Shader 
                                               %1 = OpExtInstImport "GLSL.std.450" 
                                                      OpMemoryModel Logical GLSL450 
                                                      OpEntryPoint Vertex %4 "main" %11 %75 %85 %101 %106 %137 %143 %179 %187 
                                                      OpName vs_TEXCOORD0 "vs_TEXCOORD0" 
                                                      OpName vs_TEXCOORD1 "vs_TEXCOORD1" 
                                                      OpName vs_TEXCOORD2 "vs_TEXCOORD2" 
                                                      OpName vs_TEXCOORD3 "vs_TEXCOORD3" 
                                                      OpName vs_TEXCOORD4 "vs_TEXCOORD4" 
                                                      OpDecorate %11 Location 11 
                                                      OpDecorate %16 ArrayStride 16 
                                                      OpDecorate %17 ArrayStride 17 
                                                      OpDecorate %18 ArrayStride 18 
                                                      OpDecorate %19 ArrayStride 19 
                                                      OpMemberDecorate %20 0 Offset 20 
                                                      OpMemberDecorate %20 1 Offset 20 
                                                      OpMemberDecorate %20 2 Offset 20 
                                                      OpMemberDecorate %20 3 Offset 20 
                                                      OpMemberDecorate %20 4 Offset 20 
                                                      OpDecorate %20 Block 
                                                      OpDecorate %22 DescriptorSet 22 
                                                      OpDecorate %22 Binding 22 
                                                      OpMemberDecorate %73 0 BuiltIn 73 
                                                      OpMemberDecorate %73 1 BuiltIn 73 
                                                      OpMemberDecorate %73 2 BuiltIn 73 
                                                      OpDecorate %73 Block 
                                                      OpDecorate %85 Location 85 
                                                      OpDecorate vs_TEXCOORD0 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD0 Location 101 
                                                      OpDecorate %106 Location 106 
                                                      OpDecorate vs_TEXCOORD1 Location 137 
                                                      OpDecorate vs_TEXCOORD2 Location 143 
                                                      OpDecorate vs_TEXCOORD3 Location 179 
                                                      OpDecorate vs_TEXCOORD4 Location 187 
                                               %2 = OpTypeVoid 
                                               %3 = OpTypeFunction %2 
                                               %6 = OpTypeFloat 32 
                                               %7 = OpTypeVector %6 4 
                                               %8 = OpTypePointer Private %7 
                                Private f32_4* %9 = OpVariable Private 
                                              %10 = OpTypePointer Input %7 
                                 Input f32_4* %11 = OpVariable Input 
                                              %14 = OpTypeInt 32 0 
                                          u32 %15 = OpConstant 4 
                                              %16 = OpTypeArray %7 %15 
                                              %17 = OpTypeArray %7 %15 
                                              %18 = OpTypeArray %7 %15 
                                              %19 = OpTypeArray %7 %15 
                                              %20 = OpTypeStruct %16 %17 %18 %19 %7 
                                              %21 = OpTypePointer Uniform %20 
Uniform struct {f32_4[4]; f32_4[4]; f32_4[4]; f32_4[4]; f32_4;}* %22 = OpVariable Uniform 
                                              %23 = OpTypeInt 32 1 
                                          i32 %24 = OpConstant 0 
                                          i32 %25 = OpConstant 1 
                                              %26 = OpTypePointer Uniform %7 
                                          i32 %37 = OpConstant 2 
                               Private f32_4* %45 = OpVariable Private 
                                          i32 %47 = OpConstant 3 
                               Private f32_4* %51 = OpVariable Private 
                                          u32 %71 = OpConstant 1 
                                              %72 = OpTypeArray %6 %71 
                                              %73 = OpTypeStruct %7 %6 %72 
                                              %74 = OpTypePointer Output %73 
         Output struct {f32_4; f32; f32[1];}* %75 = OpVariable Output 
                                              %83 = OpTypePointer Output %7 
                                 Input f32_4* %85 = OpVariable Input 
                                              %86 = OpTypeVector %6 2 
                                          i32 %89 = OpConstant 4 
                                             %100 = OpTypePointer Output %86 
                       Output f32_2* vs_TEXCOORD0 = OpVariable Output 
                                             %104 = OpTypeVector %6 3 
                                             %105 = OpTypePointer Input %104 
                                Input f32_3* %106 = OpVariable Input 
                                         u32 %112 = OpConstant 0 
                                             %113 = OpTypePointer Private %6 
                                         u32 %126 = OpConstant 2 
                                Private f32* %128 = OpVariable Private 
                                             %136 = OpTypePointer Output %104 
                       Output f32_3* vs_TEXCOORD1 = OpVariable Output 
                       Output f32_3* vs_TEXCOORD2 = OpVariable Output 
                       Output f32_4* vs_TEXCOORD3 = OpVariable Output 
                       Output f32_4* vs_TEXCOORD4 = OpVariable Output 
                                         f32 %188 = OpConstant 3.674022E-40 
                                       f32_4 %189 = OpConstantComposite %188 %188 %188 %188 
                                             %190 = OpTypePointer Output %6 
                                          void %4 = OpFunction None %3 
                                               %5 = OpLabel 
                                        f32_4 %12 = OpLoad %11 
                                        f32_4 %13 = OpVectorShuffle %12 %12 1 1 1 1 
                               Uniform f32_4* %27 = OpAccessChain %22 %24 %25 
                                        f32_4 %28 = OpLoad %27 
                                        f32_4 %29 = OpFMul %13 %28 
                                                      OpStore %9 %29 
                               Uniform f32_4* %30 = OpAccessChain %22 %24 %24 
                                        f32_4 %31 = OpLoad %30 
                                        f32_4 %32 = OpLoad %11 
                                        f32_4 %33 = OpVectorShuffle %32 %32 0 0 0 0 
                                        f32_4 %34 = OpFMul %31 %33 
                                        f32_4 %35 = OpLoad %9 
                                        f32_4 %36 = OpFAdd %34 %35 
                                                      OpStore %9 %36 
                               Uniform f32_4* %38 = OpAccessChain %22 %24 %37 
                                        f32_4 %39 = OpLoad %38 
                                        f32_4 %40 = OpLoad %11 
                                        f32_4 %41 = OpVectorShuffle %40 %40 2 2 2 2 
                                        f32_4 %42 = OpFMul %39 %41 
                                        f32_4 %43 = OpLoad %9 
                                        f32_4 %44 = OpFAdd %42 %43 
                                                      OpStore %9 %44 
                                        f32_4 %46 = OpLoad %9 
                               Uniform f32_4* %48 = OpAccessChain %22 %24 %47 
                                        f32_4 %49 = OpLoad %48 
                                        f32_4 %50 = OpFAdd %46 %49 
                                                      OpStore %45 %50 
                                        f32_4 %52 = OpLoad %45 
                                        f32_4 %53 = OpVectorShuffle %52 %52 1 1 1 1 
                               Uniform f32_4* %54 = OpAccessChain %22 %37 %25 
                                        f32_4 %55 = OpLoad %54 
                                        f32_4 %56 = OpFMul %53 %55 
                                                      OpStore %51 %56 
                               Uniform f32_4* %57 = OpAccessChain %22 %37 %24 
                                        f32_4 %58 = OpLoad %57 
                                        f32_4 %59 = OpLoad %45 
                                        f32_4 %60 = OpVectorShuffle %59 %59 0 0 0 0 
                                        f32_4 %61 = OpFMul %58 %60 
                                        f32_4 %62 = OpLoad %51 
                                        f32_4 %63 = OpFAdd %61 %62 
                                                      OpStore %51 %63 
                               Uniform f32_4* %64 = OpAccessChain %22 %37 %37 
                                        f32_4 %65 = OpLoad %64 
                                        f32_4 %66 = OpLoad %45 
                                        f32_4 %67 = OpVectorShuffle %66 %66 2 2 2 2 
                                        f32_4 %68 = OpFMul %65 %67 
                                        f32_4 %69 = OpLoad %51 
                                        f32_4 %70 = OpFAdd %68 %69 
                                                      OpStore %51 %70 
                               Uniform f32_4* %76 = OpAccessChain %22 %37 %47 
                                        f32_4 %77 = OpLoad %76 
                                        f32_4 %78 = OpLoad %45 
                                        f32_4 %79 = OpVectorShuffle %78 %78 3 3 3 3 
                                        f32_4 %80 = OpFMul %77 %79 
                                        f32_4 %81 = OpLoad %51 
                                        f32_4 %82 = OpFAdd %80 %81 
                                Output f32_4* %84 = OpAccessChain %75 %24 
                                                      OpStore %84 %82 
                                        f32_4 %87 = OpLoad %85 
                                        f32_2 %88 = OpVectorShuffle %87 %87 0 1 
                               Uniform f32_4* %90 = OpAccessChain %22 %89 
                                        f32_4 %91 = OpLoad %90 
                                        f32_2 %92 = OpVectorShuffle %91 %91 0 1 
                                        f32_2 %93 = OpFMul %88 %92 
                               Uniform f32_4* %94 = OpAccessChain %22 %89 
                                        f32_4 %95 = OpLoad %94 
                                        f32_2 %96 = OpVectorShuffle %95 %95 2 3 
                                        f32_2 %97 = OpFAdd %93 %96 
                                        f32_4 %98 = OpLoad %45 
                                        f32_4 %99 = OpVectorShuffle %98 %97 4 5 2 3 
                                                      OpStore %45 %99 
                                       f32_4 %102 = OpLoad %45 
                                       f32_2 %103 = OpVectorShuffle %102 %102 0 1 
                                                      OpStore vs_TEXCOORD0 %103 
                                       f32_3 %107 = OpLoad %106 
                              Uniform f32_4* %108 = OpAccessChain %22 %25 %24 
                                       f32_4 %109 = OpLoad %108 
                                       f32_3 %110 = OpVectorShuffle %109 %109 0 1 2 
                                         f32 %111 = OpDot %107 %110 
                                Private f32* %114 = OpAccessChain %45 %112 
                                                      OpStore %114 %111 
                                       f32_3 %115 = OpLoad %106 
                              Uniform f32_4* %116 = OpAccessChain %22 %25 %25 
                                       f32_4 %117 = OpLoad %116 
                                       f32_3 %118 = OpVectorShuffle %117 %117 0 1 2 
                                         f32 %119 = OpDot %115 %118 
                                Private f32* %120 = OpAccessChain %45 %71 
                                                      OpStore %120 %119 
                                       f32_3 %121 = OpLoad %106 
                              Uniform f32_4* %122 = OpAccessChain %22 %25 %37 
                                       f32_4 %123 = OpLoad %122 
                                       f32_3 %124 = OpVectorShuffle %123 %123 0 1 2 
                                         f32 %125 = OpDot %121 %124 
                                Private f32* %127 = OpAccessChain %45 %126 
                                                      OpStore %127 %125 
                                       f32_4 %129 = OpLoad %45 
                                       f32_3 %130 = OpVectorShuffle %129 %129 0 1 2 
                                       f32_4 %131 = OpLoad %45 
                                       f32_3 %132 = OpVectorShuffle %131 %131 0 1 2 
                                         f32 %133 = OpDot %130 %132 
                                                      OpStore %128 %133 
                                         f32 %134 = OpLoad %128 
                                         f32 %135 = OpExtInst %1 32 %134 
                                                      OpStore %128 %135 
                                         f32 %138 = OpLoad %128 
                                       f32_3 %139 = OpCompositeConstruct %138 %138 %138 
                                       f32_4 %140 = OpLoad %45 
                                       f32_3 %141 = OpVectorShuffle %140 %140 0 1 2 
                                       f32_3 %142 = OpFMul %139 %141 
                                                      OpStore vs_TEXCOORD1 %142 
                              Uniform f32_4* %144 = OpAccessChain %22 %24 %47 
                                       f32_4 %145 = OpLoad %144 
                                       f32_3 %146 = OpVectorShuffle %145 %145 0 1 2 
                                       f32_4 %147 = OpLoad %11 
                                       f32_3 %148 = OpVectorShuffle %147 %147 3 3 3 
                                       f32_3 %149 = OpFMul %146 %148 
                                       f32_4 %150 = OpLoad %9 
                                       f32_3 %151 = OpVectorShuffle %150 %150 0 1 2 
                                       f32_3 %152 = OpFAdd %149 %151 
                                                      OpStore vs_TEXCOORD2 %152 
                              Uniform f32_4* %153 = OpAccessChain %22 %24 %47 
                                       f32_4 %154 = OpLoad %153 
                                       f32_4 %155 = OpLoad %11 
                                       f32_4 %156 = OpVectorShuffle %155 %155 3 3 3 3 
                                       f32_4 %157 = OpFMul %154 %156 
                                       f32_4 %158 = OpLoad %9 
                                       f32_4 %159 = OpFAdd %157 %158 
                                                      OpStore %9 %159 
                                       f32_4 %160 = OpLoad %9 
                                       f32_4 %161 = OpVectorShuffle %160 %160 1 1 1 1 
                              Uniform f32_4* %162 = OpAccessChain %22 %47 %25 
                                       f32_4 %163 = OpLoad %162 
                                       f32_4 %164 = OpFMul %161 %163 
                                                      OpStore %45 %164 
                              Uniform f32_4* %165 = OpAccessChain %22 %47 %24 
                                       f32_4 %166 = OpLoad %165 
                                       f32_4 %167 = OpLoad %9 
                                       f32_4 %168 = OpVectorShuffle %167 %167 0 0 0 0 
                                       f32_4 %169 = OpFMul %166 %168 
                                       f32_4 %170 = OpLoad %45 
                                       f32_4 %171 = OpFAdd %169 %170 
                                                      OpStore %45 %171 
                              Uniform f32_4* %172 = OpAccessChain %22 %47 %37 
                                       f32_4 %173 = OpLoad %172 
                                       f32_4 %174 = OpLoad %9 
                                       f32_4 %175 = OpVectorShuffle %174 %174 2 2 2 2 
                                       f32_4 %176 = OpFMul %173 %175 
                                       f32_4 %177 = OpLoad %45 
                                       f32_4 %178 = OpFAdd %176 %177 
                                                      OpStore %45 %178 
                              Uniform f32_4* %180 = OpAccessChain %22 %47 %47 
                                       f32_4 %181 = OpLoad %180 
                                       f32_4 %182 = OpLoad %9 
                                       f32_4 %183 = OpVectorShuffle %182 %182 3 3 3 3 
                                       f32_4 %184 = OpFMul %181 %183 
                                       f32_4 %185 = OpLoad %45 
                                       f32_4 %186 = OpFAdd %184 %185 
                                                      OpStore vs_TEXCOORD3 %186 
                                                      OpStore vs_TEXCOORD4 %189 
                                 Output f32* %191 = OpAccessChain %75 %24 %71 
                                         f32 %192 = OpLoad %191 
                                         f32 %193 = OpFNegate %192 
                                 Output f32* %194 = OpAccessChain %75 %24 %71 
                                                      OpStore %194 %193 
                                                      OpReturn
                                                      OpFunctionEnd
; SPIR-V
; Version: 1.0
; Generator: Khronos Glslang Reference Front End; 6
; Bound: 263
; Schema: 0
                                                      OpCapability Shader 
                                               %1 = OpExtInstImport "GLSL.std.450" 
                                                      OpMemoryModel Logical GLSL450 
                                                      OpEntryPoint Fragment %4 "main" %12 %48 %235 %251 
                                                      OpExecutionMode %4 OriginUpperLeft 
                                                      OpName vs_TEXCOORD2 "vs_TEXCOORD2" 
                                                      OpName vs_TEXCOORD1 "vs_TEXCOORD1" 
                                                      OpName vs_TEXCOORD0 "vs_TEXCOORD0" 
                                                      OpDecorate vs_TEXCOORD2 Location 12 
                                                      OpDecorate %17 ArrayStride 17 
                                                      OpMemberDecorate %18 0 Offset 18 
                                                      OpMemberDecorate %18 1 RelaxedPrecision 
                                                      OpMemberDecorate %18 1 Offset 18 
                                                      OpMemberDecorate %18 2 Offset 18 
                                                      OpMemberDecorate %18 3 RelaxedPrecision 
                                                      OpMemberDecorate %18 3 Offset 18 
                                                      OpMemberDecorate %18 4 RelaxedPrecision 
                                                      OpMemberDecorate %18 4 Offset 18 
                                                      OpMemberDecorate %18 5 RelaxedPrecision 
                                                      OpMemberDecorate %18 5 Offset 18 
                                                      OpMemberDecorate %18 6 RelaxedPrecision 
                                                      OpMemberDecorate %18 6 Offset 18 
                                                      OpDecorate %18 Block 
                                                      OpDecorate %20 DescriptorSet 20 
                                                      OpDecorate %20 Binding 20 
                                                      OpDecorate %47 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD1 Location 48 
                                                      OpDecorate %55 RelaxedPrecision 
                                                      OpDecorate %56 RelaxedPrecision 
                                                      OpDecorate %58 RelaxedPrecision 
                                                      OpDecorate %59 RelaxedPrecision 
                                                      OpDecorate %62 RelaxedPrecision 
                                                      OpDecorate %68 RelaxedPrecision 
                                                      OpDecorate %70 RelaxedPrecision 
                                                      OpDecorate %72 RelaxedPrecision 
                                                      OpDecorate %76 RelaxedPrecision 
                                                      OpDecorate %77 RelaxedPrecision 
                                                      OpDecorate %79 RelaxedPrecision 
                                                      OpDecorate %82 RelaxedPrecision 
                                                      OpDecorate %83 RelaxedPrecision 
                                                      OpDecorate %84 RelaxedPrecision 
                                                      OpDecorate %85 RelaxedPrecision 
                                                      OpDecorate %87 RelaxedPrecision 
                                                      OpDecorate %88 RelaxedPrecision 
                                                      OpDecorate %90 RelaxedPrecision 
                                                      OpDecorate %92 RelaxedPrecision 
                                                      OpDecorate %93 RelaxedPrecision 
                                                      OpDecorate %95 RelaxedPrecision 
                                                      OpDecorate %96 RelaxedPrecision 
                                                      OpDecorate %97 RelaxedPrecision 
                                                      OpDecorate %98 RelaxedPrecision 
                                                      OpDecorate %99 RelaxedPrecision 
                                                      OpDecorate %100 RelaxedPrecision 
                                                      OpDecorate %102 RelaxedPrecision 
                                                      OpDecorate %103 RelaxedPrecision 
                                                      OpDecorate %104 RelaxedPrecision 
                                                      OpDecorate %106 RelaxedPrecision 
                                                      OpDecorate %107 RelaxedPrecision 
                                                      OpDecorate %110 RelaxedPrecision 
                                                      OpDecorate %111 RelaxedPrecision 
                                                      OpDecorate %114 RelaxedPrecision 
                                                      OpDecorate %116 RelaxedPrecision 
                                                      OpDecorate %118 RelaxedPrecision 
                                                      OpDecorate %120 RelaxedPrecision 
                                                      OpDecorate %122 RelaxedPrecision 
                                                      OpDecorate %123 RelaxedPrecision 
                                                      OpDecorate %126 RelaxedPrecision 
                                                      OpDecorate %127 RelaxedPrecision 
                                                      OpDecorate %128 RelaxedPrecision 
                                                      OpDecorate %130 RelaxedPrecision 
                                                      OpDecorate %131 RelaxedPrecision 
                                                      OpDecorate %134 RelaxedPrecision 
                                                      OpDecorate %135 RelaxedPrecision 
                                                      OpDecorate %136 RelaxedPrecision 
                                                      OpDecorate %176 DescriptorSet 176 
                                                      OpDecorate %176 Binding 176 
                                                      OpDecorate %180 DescriptorSet 180 
                                                      OpDecorate %180 Binding 180 
                                                      OpDecorate %201 DescriptorSet 201 
                                                      OpDecorate %201 Binding 201 
                                                      OpDecorate %203 DescriptorSet 203 
                                                      OpDecorate %203 Binding 203 
                                                      OpDecorate %211 RelaxedPrecision 
                                                      OpDecorate %215 RelaxedPrecision 
                                                      OpDecorate %219 RelaxedPrecision 
                                                      OpDecorate %221 RelaxedPrecision 
                                                      OpDecorate %222 RelaxedPrecision 
                                                      OpDecorate %223 RelaxedPrecision 
                                                      OpDecorate %225 RelaxedPrecision 
                                                      OpDecorate %226 RelaxedPrecision 
                                                      OpDecorate %227 RelaxedPrecision 
                                                      OpDecorate %228 RelaxedPrecision 
                                                      OpDecorate %229 RelaxedPrecision 
                                                      OpDecorate %229 DescriptorSet 229 
                                                      OpDecorate %229 Binding 229 
                                                      OpDecorate %230 RelaxedPrecision 
                                                      OpDecorate %231 RelaxedPrecision 
                                                      OpDecorate %231 DescriptorSet 231 
                                                      OpDecorate %231 Binding 231 
                                                      OpDecorate %232 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD0 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD0 Location 235 
                                                      OpDecorate %236 RelaxedPrecision 
                                                      OpDecorate %237 RelaxedPrecision 
                                                      OpDecorate %238 RelaxedPrecision 
                                                      OpDecorate %239 RelaxedPrecision 
                                                      OpDecorate %241 RelaxedPrecision 
                                                      OpDecorate %242 RelaxedPrecision 
                                                      OpDecorate %243 RelaxedPrecision 
                                                      OpDecorate %244 RelaxedPrecision 
                                                      OpDecorate %245 RelaxedPrecision 
                                                      OpDecorate %246 RelaxedPrecision 
                                                      OpDecorate %247 RelaxedPrecision 
                                                      OpDecorate %248 RelaxedPrecision 
                                                      OpDecorate %249 RelaxedPrecision 
                                                      OpDecorate %251 RelaxedPrecision 
                                                      OpDecorate %251 Location 251 
                                                      OpDecorate %252 RelaxedPrecision 
                                                      OpDecorate %253 RelaxedPrecision 
                                                      OpDecorate %254 RelaxedPrecision 
                                                      OpDecorate %255 RelaxedPrecision 
                                                      OpDecorate %259 RelaxedPrecision 
                                               %2 = OpTypeVoid 
                                               %3 = OpTypeFunction %2 
                                               %6 = OpTypeFloat 32 
                                               %7 = OpTypeVector %6 4 
                                               %8 = OpTypePointer Private %7 
                                Private f32_4* %9 = OpVariable Private 
                                              %10 = OpTypeVector %6 3 
                                              %11 = OpTypePointer Input %10 
                        Input f32_3* vs_TEXCOORD2 = OpVariable Input 
                                              %15 = OpTypeInt 32 0 
                                          u32 %16 = OpConstant 4 
                                              %17 = OpTypeArray %7 %16 
                                              %18 = OpTypeStruct %7 %7 %17 %7 %7 %6 %6 
                                              %19 = OpTypePointer Uniform %18 
Uniform struct {f32_4; f32_4; f32_4[4]; f32_4; f32_4; f32; f32;}* %20 = OpVariable Uniform 
                                              %21 = OpTypeInt 32 1 
                                          i32 %22 = OpConstant 0 
                                              %23 = OpTypePointer Uniform %7 
                                              %30 = OpTypePointer Private %6 
                                 Private f32* %31 = OpVariable Private 
                                              %46 = OpTypePointer Private %10 
                               Private f32_3* %47 = OpVariable Private 
                        Input f32_3* vs_TEXCOORD1 = OpVariable Input 
                                          u32 %52 = OpConstant 0 
                                          f32 %69 = OpConstant 3.674022E-40 
                                 Private f32* %72 = OpVariable Private 
                                          i32 %73 = OpConstant 6 
                                              %74 = OpTypePointer Uniform %6 
                                          f32 %78 = OpConstant 3.674022E-40 
                                          i32 %80 = OpConstant 5 
                                 Private f32* %90 = OpVariable Private 
                                         f32 %101 = OpConstant 3.674022E-40 
                                         f32 %115 = OpConstant 3.674022E-40 
                                         f32 %117 = OpConstant 3.674022E-40 
                                         i32 %132 = OpConstant 4 
                                         i32 %139 = OpConstant 2 
                                         i32 %140 = OpConstant 1 
                                         i32 %159 = OpConstant 3 
                                             %163 = OpTypeVector %6 2 
                                             %164 = OpTypePointer Private %163 
                              Private f32_2* %165 = OpVariable Private 
                                       f32_2 %172 = OpConstantComposite %78 %78 
                                             %174 = OpTypeImage %6 Dim2D 0 0 0 1 Unknown 
                                             %175 = OpTypePointer UniformConstant %174 
        UniformConstant read_only Texture2D* %176 = OpVariable UniformConstant 
                                             %178 = OpTypeSampler 
                                             %179 = OpTypePointer UniformConstant %178 
                    UniformConstant sampler* %180 = OpVariable UniformConstant 
                                             %182 = OpTypeSampledImage %174 
                                         u32 %186 = OpConstant 3 
                                             %188 = OpTypeBool 
                                             %189 = OpTypePointer Private %188 
                               Private bool* %190 = OpVariable Private 
                                         u32 %191 = OpConstant 2 
        UniformConstant read_only Texture2D* %201 = OpVariable UniformConstant 
                    UniformConstant sampler* %203 = OpVariable UniformConstant 
                                Private f32* %211 = OpVariable Private 
                              Private f32_3* %221 = OpVariable Private 
                              Private f32_4* %228 = OpVariable Private 
        UniformConstant read_only Texture2D* %229 = OpVariable UniformConstant 
                    UniformConstant sampler* %231 = OpVariable UniformConstant 
                                             %234 = OpTypePointer Input %163 
                        Input f32_2* vs_TEXCOORD0 = OpVariable Input 
                              Private f32_4* %238 = OpVariable Private 
                                             %250 = OpTypePointer Output %7 
                               Output f32_4* %251 = OpVariable Output 
                                             %260 = OpTypePointer Output %6 
                                          void %4 = OpFunction None %3 
                                               %5 = OpLabel 
                                        f32_3 %13 = OpLoad vs_TEXCOORD2 
                                        f32_3 %14 = OpFNegate %13 
                               Uniform f32_4* %24 = OpAccessChain %20 %22 
                                        f32_4 %25 = OpLoad %24 
                                        f32_3 %26 = OpVectorShuffle %25 %25 0 1 2 
                                        f32_3 %27 = OpFAdd %14 %26 
                                        f32_4 %28 = OpLoad %9 
                                        f32_4 %29 = OpVectorShuffle %28 %27 4 5 6 3 
                                                      OpStore %9 %29 
                                        f32_4 %32 = OpLoad %9 
                                        f32_3 %33 = OpVectorShuffle %32 %32 0 1 2 
                                        f32_4 %34 = OpLoad %9 
                                        f32_3 %35 = OpVectorShuffle %34 %34 0 1 2 
                                          f32 %36 = OpDot %33 %35 
                                                      OpStore %31 %36 
                                          f32 %37 = OpLoad %31 
                                          f32 %38 = OpExtInst %1 32 %37 
                                                      OpStore %31 %38 
                                          f32 %39 = OpLoad %31 
                                        f32_3 %40 = OpCompositeConstruct %39 %39 %39 
                                        f32_4 %41 = OpLoad %9 
                                        f32_3 %42 = OpVectorShuffle %41 %41 0 1 2 
                                        f32_3 %43 = OpFMul %40 %42 
                                        f32_4 %44 = OpLoad %9 
                                        f32_4 %45 = OpVectorShuffle %44 %43 4 5 6 3 
                                                      OpStore %9 %45 
                                        f32_3 %49 = OpLoad vs_TEXCOORD1 
                                        f32_3 %50 = OpLoad vs_TEXCOORD1 
                                          f32 %51 = OpDot %49 %50 
                                 Private f32* %53 = OpAccessChain %47 %52 
                                                      OpStore %53 %51 
                                 Private f32* %54 = OpAccessChain %47 %52 
                                          f32 %55 = OpLoad %54 
                                          f32 %56 = OpExtInst %1 32 %55 
                                 Private f32* %57 = OpAccessChain %47 %52 
                                                      OpStore %57 %56 
                                        f32_3 %58 = OpLoad %47 
                                        f32_3 %59 = OpVectorShuffle %58 %58 0 0 0 
                                        f32_3 %60 = OpLoad vs_TEXCOORD1 
                                        f32_3 %61 = OpFMul %59 %60 
                                                      OpStore %47 %61 
                                        f32_3 %62 = OpLoad %47 
                                        f32_4 %63 = OpLoad %9 
                                        f32_3 %64 = OpVectorShuffle %63 %63 0 1 2 
                                          f32 %65 = OpDot %62 %64 
                                 Private f32* %66 = OpAccessChain %47 %52 
                                                      OpStore %66 %65 
                                 Private f32* %67 = OpAccessChain %47 %52 
                                          f32 %68 = OpLoad %67 
                                          f32 %70 = OpExtInst %1 40 %68 %69 
                                 Private f32* %71 = OpAccessChain %47 %52 
                                                      OpStore %71 %70 
                                 Uniform f32* %75 = OpAccessChain %20 %73 
                                          f32 %76 = OpLoad %75 
                                          f32 %77 = OpFNegate %76 
                                          f32 %79 = OpFMul %77 %78 
                                 Uniform f32* %81 = OpAccessChain %20 %80 
                                          f32 %82 = OpLoad %81 
                                          f32 %83 = OpFAdd %79 %82 
                                                      OpStore %72 %83 
                                          f32 %84 = OpLoad %72 
                                          f32 %85 = OpFNegate %84 
                                 Private f32* %86 = OpAccessChain %47 %52 
                                          f32 %87 = OpLoad %86 
                                          f32 %88 = OpFAdd %85 %87 
                                 Private f32* %89 = OpAccessChain %47 %52 
                                                      OpStore %89 %88 
                                 Uniform f32* %91 = OpAccessChain %20 %73 
                                          f32 %92 = OpLoad %91 
                                          f32 %93 = OpFMul %92 %78 
                                 Uniform f32* %94 = OpAccessChain %20 %80 
                                          f32 %95 = OpLoad %94 
                                          f32 %96 = OpFAdd %93 %95 
                                                      OpStore %90 %96 
                                          f32 %97 = OpLoad %72 
                                          f32 %98 = OpFNegate %97 
                                          f32 %99 = OpLoad %90 
                                         f32 %100 = OpFAdd %98 %99 
                                                      OpStore %72 %100 
                                         f32 %102 = OpLoad %72 
                                         f32 %103 = OpFDiv %101 %102 
                                                      OpStore %72 %103 
                                         f32 %104 = OpLoad %72 
                                Private f32* %105 = OpAccessChain %47 %52 
                                         f32 %106 = OpLoad %105 
                                         f32 %107 = OpFMul %104 %106 
                                Private f32* %108 = OpAccessChain %47 %52 
                                                      OpStore %108 %107 
                                Private f32* %109 = OpAccessChain %47 %52 
                                         f32 %110 = OpLoad %109 
                                         f32 %111 = OpExtInst %1 43 %110 %69 %101 
                                Private f32* %112 = OpAccessChain %47 %52 
                                                      OpStore %112 %111 
                                Private f32* %113 = OpAccessChain %47 %52 
                                         f32 %114 = OpLoad %113 
                                         f32 %116 = OpFMul %114 %115 
                                         f32 %118 = OpFAdd %116 %117 
                                                      OpStore %72 %118 
                                Private f32* %119 = OpAccessChain %47 %52 
                                         f32 %120 = OpLoad %119 
                                Private f32* %121 = OpAccessChain %47 %52 
                                         f32 %122 = OpLoad %121 
                                         f32 %123 = OpFMul %120 %122 
                                Private f32* %124 = OpAccessChain %47 %52 
                                                      OpStore %124 %123 
                                Private f32* %125 = OpAccessChain %47 %52 
                                         f32 %126 = OpLoad %125 
                                         f32 %127 = OpLoad %72 
                                         f32 %128 = OpFMul %126 %127 
                                Private f32* %129 = OpAccessChain %47 %52 
                                                      OpStore %129 %128 
                                       f32_3 %130 = OpLoad %47 
                                       f32_3 %131 = OpVectorShuffle %130 %130 0 0 0 
                              Uniform f32_4* %133 = OpAccessChain %20 %132 
                                       f32_4 %134 = OpLoad %133 
                                       f32_3 %135 = OpVectorShuffle %134 %134 0 1 2 
                                       f32_3 %136 = OpFMul %131 %135 
                                                      OpStore %47 %136 
                                       f32_3 %137 = OpLoad vs_TEXCOORD2 
                                       f32_4 %138 = OpVectorShuffle %137 %137 1 1 1 1 
                              Uniform f32_4* %141 = OpAccessChain %20 %139 %140 
                                       f32_4 %142 = OpLoad %141 
                                       f32_4 %143 = OpFMul %138 %142 
                                                      OpStore %9 %143 
                              Uniform f32_4* %144 = OpAccessChain %20 %139 %22 
                                       f32_4 %145 = OpLoad %144 
                                       f32_3 %146 = OpLoad vs_TEXCOORD2 
                                       f32_4 %147 = OpVectorShuffle %146 %146 0 0 0 0 
                                       f32_4 %148 = OpFMul %145 %147 
                                       f32_4 %149 = OpLoad %9 
                                       f32_4 %150 = OpFAdd %148 %149 
                                                      OpStore %9 %150 
                              Uniform f32_4* %151 = OpAccessChain %20 %139 %139 
                                       f32_4 %152 = OpLoad %151 
                                       f32_3 %153 = OpLoad vs_TEXCOORD2 
                                       f32_4 %154 = OpVectorShuffle %153 %153 2 2 2 2 
                                       f32_4 %155 = OpFMul %152 %154 
                                       f32_4 %156 = OpLoad %9 
                                       f32_4 %157 = OpFAdd %155 %156 
                                                      OpStore %9 %157 
                                       f32_4 %158 = OpLoad %9 
                              Uniform f32_4* %160 = OpAccessChain %20 %139 %159 
                                       f32_4 %161 = OpLoad %160 
                                       f32_4 %162 = OpFAdd %158 %161 
                                                      OpStore %9 %162 
                                       f32_4 %166 = OpLoad %9 
                                       f32_2 %167 = OpVectorShuffle %166 %166 0 1 
                                       f32_4 %168 = OpLoad %9 
                                       f32_2 %169 = OpVectorShuffle %168 %168 3 3 
                                       f32_2 %170 = OpFDiv %167 %169 
                                                      OpStore %165 %170 
                                       f32_2 %171 = OpLoad %165 
                                       f32_2 %173 = OpFAdd %171 %172 
                                                      OpStore %165 %173 
                         read_only Texture2D %177 = OpLoad %176 
                                     sampler %181 = OpLoad %180 
                  read_only Texture2DSampled %183 = OpSampledImage %177 %181 
                                       f32_2 %184 = OpLoad %165 
                                       f32_4 %185 = OpImageSampleImplicitLod %183 %184 
                                         f32 %187 = OpCompositeExtract %185 3 
                                                      OpStore %31 %187 
                                Private f32* %192 = OpAccessChain %9 %191 
                                         f32 %193 = OpLoad %192 
                                        bool %194 = OpFOrdLessThan %69 %193 
                                                      OpStore %190 %194 
                                       f32_4 %195 = OpLoad %9 
                                       f32_3 %196 = OpVectorShuffle %195 %195 0 1 2 
                                       f32_4 %197 = OpLoad %9 
                                       f32_3 %198 = OpVectorShuffle %197 %197 0 1 2 
                                         f32 %199 = OpDot %196 %198 
                                Private f32* %200 = OpAccessChain %9 %52 
                                                      OpStore %200 %199 
                         read_only Texture2D %202 = OpLoad %201 
                                     sampler %204 = OpLoad %203 
                  read_only Texture2DSampled %205 = OpSampledImage %202 %204 
                                       f32_4 %206 = OpLoad %9 
                                       f32_2 %207 = OpVectorShuffle %206 %206 0 0 
                                       f32_4 %208 = OpImageSampleImplicitLod %205 %207 
                                         f32 %209 = OpCompositeExtract %208 0 
                                Private f32* %210 = OpAccessChain %9 %52 
                                                      OpStore %210 %209 
                                        bool %212 = OpLoad %190 
                                         f32 %213 = OpSelect %212 %101 %69 
                                                      OpStore %211 %213 
                                         f32 %214 = OpLoad %31 
                                         f32 %215 = OpLoad %211 
                                         f32 %216 = OpFMul %214 %215 
                                                      OpStore %211 %216 
                                Private f32* %217 = OpAccessChain %9 %52 
                                         f32 %218 = OpLoad %217 
                                         f32 %219 = OpLoad %211 
                                         f32 %220 = OpFMul %218 %219 
                                                      OpStore %211 %220 
                                         f32 %222 = OpLoad %211 
                                       f32_3 %223 = OpCompositeConstruct %222 %222 %222 
                              Uniform f32_4* %224 = OpAccessChain %20 %140 
                                       f32_4 %225 = OpLoad %224 
                                       f32_3 %226 = OpVectorShuffle %225 %225 0 1 2 
                                       f32_3 %227 = OpFMul %223 %226 
                                                      OpStore %221 %227 
                         read_only Texture2D %230 = OpLoad %229 
                                     sampler %232 = OpLoad %231 
                  read_only Texture2DSampled %233 = OpSampledImage %230 %232 
                                       f32_2 %236 = OpLoad vs_TEXCOORD0 
                                       f32_4 %237 = OpImageSampleImplicitLod %233 %236 
                                                      OpStore %228 %237 
                                       f32_4 %239 = OpLoad %228 
                              Uniform f32_4* %240 = OpAccessChain %20 %159 
                                       f32_4 %241 = OpLoad %240 
                                       f32_4 %242 = OpFMul %239 %241 
                                                      OpStore %238 %242 
                                       f32_3 %243 = OpLoad %221 
                                       f32_4 %244 = OpLoad %238 
                                       f32_3 %245 = OpVectorShuffle %244 %244 0 1 2 
                                       f32_3 %246 = OpFMul %243 %245 
                                                      OpStore %221 %246 
                                       f32_3 %247 = OpLoad %47 
                                       f32_3 %248 = OpLoad %221 
                                       f32_3 %249 = OpFMul %247 %248 
                                                      OpStore %47 %249 
                                       f32_4 %252 = OpLoad %238 
                                       f32_3 %253 = OpVectorShuffle %252 %252 3 3 3 
                                       f32_3 %254 = OpLoad %47 
                                       f32_3 %255 = OpFMul %253 %254 
                                       f32_4 %256 = OpLoad %251 
                                       f32_4 %257 = OpVectorShuffle %256 %255 4 5 6 3 
                                                      OpStore %251 %257 
                                Private f32* %258 = OpAccessChain %238 %186 
                                         f32 %259 = OpLoad %258 
                                 Output f32* %261 = OpAccessChain %251 %186 
                                                      OpStore %261 %259 
                                                      OpReturn
                                                      OpFunctionEnd
"
}
SubProgram "vulkan hw_tier02 " {
Keywords { "SPOT" }
"; SPIR-V
; Version: 1.0
; Generator: Khronos Glslang Reference Front End; 6
; Bound: 196
; Schema: 0
                                                      OpCapability Shader 
                                               %1 = OpExtInstImport "GLSL.std.450" 
                                                      OpMemoryModel Logical GLSL450 
                                                      OpEntryPoint Vertex %4 "main" %11 %75 %85 %101 %106 %137 %143 %179 %187 
                                                      OpName vs_TEXCOORD0 "vs_TEXCOORD0" 
                                                      OpName vs_TEXCOORD1 "vs_TEXCOORD1" 
                                                      OpName vs_TEXCOORD2 "vs_TEXCOORD2" 
                                                      OpName vs_TEXCOORD3 "vs_TEXCOORD3" 
                                                      OpName vs_TEXCOORD4 "vs_TEXCOORD4" 
                                                      OpDecorate %11 Location 11 
                                                      OpDecorate %16 ArrayStride 16 
                                                      OpDecorate %17 ArrayStride 17 
                                                      OpDecorate %18 ArrayStride 18 
                                                      OpDecorate %19 ArrayStride 19 
                                                      OpMemberDecorate %20 0 Offset 20 
                                                      OpMemberDecorate %20 1 Offset 20 
                                                      OpMemberDecorate %20 2 Offset 20 
                                                      OpMemberDecorate %20 3 Offset 20 
                                                      OpMemberDecorate %20 4 Offset 20 
                                                      OpDecorate %20 Block 
                                                      OpDecorate %22 DescriptorSet 22 
                                                      OpDecorate %22 Binding 22 
                                                      OpMemberDecorate %73 0 BuiltIn 73 
                                                      OpMemberDecorate %73 1 BuiltIn 73 
                                                      OpMemberDecorate %73 2 BuiltIn 73 
                                                      OpDecorate %73 Block 
                                                      OpDecorate %85 Location 85 
                                                      OpDecorate vs_TEXCOORD0 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD0 Location 101 
                                                      OpDecorate %106 Location 106 
                                                      OpDecorate vs_TEXCOORD1 Location 137 
                                                      OpDecorate vs_TEXCOORD2 Location 143 
                                                      OpDecorate vs_TEXCOORD3 Location 179 
                                                      OpDecorate vs_TEXCOORD4 Location 187 
                                               %2 = OpTypeVoid 
                                               %3 = OpTypeFunction %2 
                                               %6 = OpTypeFloat 32 
                                               %7 = OpTypeVector %6 4 
                                               %8 = OpTypePointer Private %7 
                                Private f32_4* %9 = OpVariable Private 
                                              %10 = OpTypePointer Input %7 
                                 Input f32_4* %11 = OpVariable Input 
                                              %14 = OpTypeInt 32 0 
                                          u32 %15 = OpConstant 4 
                                              %16 = OpTypeArray %7 %15 
                                              %17 = OpTypeArray %7 %15 
                                              %18 = OpTypeArray %7 %15 
                                              %19 = OpTypeArray %7 %15 
                                              %20 = OpTypeStruct %16 %17 %18 %19 %7 
                                              %21 = OpTypePointer Uniform %20 
Uniform struct {f32_4[4]; f32_4[4]; f32_4[4]; f32_4[4]; f32_4;}* %22 = OpVariable Uniform 
                                              %23 = OpTypeInt 32 1 
                                          i32 %24 = OpConstant 0 
                                          i32 %25 = OpConstant 1 
                                              %26 = OpTypePointer Uniform %7 
                                          i32 %37 = OpConstant 2 
                               Private f32_4* %45 = OpVariable Private 
                                          i32 %47 = OpConstant 3 
                               Private f32_4* %51 = OpVariable Private 
                                          u32 %71 = OpConstant 1 
                                              %72 = OpTypeArray %6 %71 
                                              %73 = OpTypeStruct %7 %6 %72 
                                              %74 = OpTypePointer Output %73 
         Output struct {f32_4; f32; f32[1];}* %75 = OpVariable Output 
                                              %83 = OpTypePointer Output %7 
                                 Input f32_4* %85 = OpVariable Input 
                                              %86 = OpTypeVector %6 2 
                                          i32 %89 = OpConstant 4 
                                             %100 = OpTypePointer Output %86 
                       Output f32_2* vs_TEXCOORD0 = OpVariable Output 
                                             %104 = OpTypeVector %6 3 
                                             %105 = OpTypePointer Input %104 
                                Input f32_3* %106 = OpVariable Input 
                                         u32 %112 = OpConstant 0 
                                             %113 = OpTypePointer Private %6 
                                         u32 %126 = OpConstant 2 
                                Private f32* %128 = OpVariable Private 
                                             %136 = OpTypePointer Output %104 
                       Output f32_3* vs_TEXCOORD1 = OpVariable Output 
                       Output f32_3* vs_TEXCOORD2 = OpVariable Output 
                       Output f32_4* vs_TEXCOORD3 = OpVariable Output 
                       Output f32_4* vs_TEXCOORD4 = OpVariable Output 
                                         f32 %188 = OpConstant 3.674022E-40 
                                       f32_4 %189 = OpConstantComposite %188 %188 %188 %188 
                                             %190 = OpTypePointer Output %6 
                                          void %4 = OpFunction None %3 
                                               %5 = OpLabel 
                                        f32_4 %12 = OpLoad %11 
                                        f32_4 %13 = OpVectorShuffle %12 %12 1 1 1 1 
                               Uniform f32_4* %27 = OpAccessChain %22 %24 %25 
                                        f32_4 %28 = OpLoad %27 
                                        f32_4 %29 = OpFMul %13 %28 
                                                      OpStore %9 %29 
                               Uniform f32_4* %30 = OpAccessChain %22 %24 %24 
                                        f32_4 %31 = OpLoad %30 
                                        f32_4 %32 = OpLoad %11 
                                        f32_4 %33 = OpVectorShuffle %32 %32 0 0 0 0 
                                        f32_4 %34 = OpFMul %31 %33 
                                        f32_4 %35 = OpLoad %9 
                                        f32_4 %36 = OpFAdd %34 %35 
                                                      OpStore %9 %36 
                               Uniform f32_4* %38 = OpAccessChain %22 %24 %37 
                                        f32_4 %39 = OpLoad %38 
                                        f32_4 %40 = OpLoad %11 
                                        f32_4 %41 = OpVectorShuffle %40 %40 2 2 2 2 
                                        f32_4 %42 = OpFMul %39 %41 
                                        f32_4 %43 = OpLoad %9 
                                        f32_4 %44 = OpFAdd %42 %43 
                                                      OpStore %9 %44 
                                        f32_4 %46 = OpLoad %9 
                               Uniform f32_4* %48 = OpAccessChain %22 %24 %47 
                                        f32_4 %49 = OpLoad %48 
                                        f32_4 %50 = OpFAdd %46 %49 
                                                      OpStore %45 %50 
                                        f32_4 %52 = OpLoad %45 
                                        f32_4 %53 = OpVectorShuffle %52 %52 1 1 1 1 
                               Uniform f32_4* %54 = OpAccessChain %22 %37 %25 
                                        f32_4 %55 = OpLoad %54 
                                        f32_4 %56 = OpFMul %53 %55 
                                                      OpStore %51 %56 
                               Uniform f32_4* %57 = OpAccessChain %22 %37 %24 
                                        f32_4 %58 = OpLoad %57 
                                        f32_4 %59 = OpLoad %45 
                                        f32_4 %60 = OpVectorShuffle %59 %59 0 0 0 0 
                                        f32_4 %61 = OpFMul %58 %60 
                                        f32_4 %62 = OpLoad %51 
                                        f32_4 %63 = OpFAdd %61 %62 
                                                      OpStore %51 %63 
                               Uniform f32_4* %64 = OpAccessChain %22 %37 %37 
                                        f32_4 %65 = OpLoad %64 
                                        f32_4 %66 = OpLoad %45 
                                        f32_4 %67 = OpVectorShuffle %66 %66 2 2 2 2 
                                        f32_4 %68 = OpFMul %65 %67 
                                        f32_4 %69 = OpLoad %51 
                                        f32_4 %70 = OpFAdd %68 %69 
                                                      OpStore %51 %70 
                               Uniform f32_4* %76 = OpAccessChain %22 %37 %47 
                                        f32_4 %77 = OpLoad %76 
                                        f32_4 %78 = OpLoad %45 
                                        f32_4 %79 = OpVectorShuffle %78 %78 3 3 3 3 
                                        f32_4 %80 = OpFMul %77 %79 
                                        f32_4 %81 = OpLoad %51 
                                        f32_4 %82 = OpFAdd %80 %81 
                                Output f32_4* %84 = OpAccessChain %75 %24 
                                                      OpStore %84 %82 
                                        f32_4 %87 = OpLoad %85 
                                        f32_2 %88 = OpVectorShuffle %87 %87 0 1 
                               Uniform f32_4* %90 = OpAccessChain %22 %89 
                                        f32_4 %91 = OpLoad %90 
                                        f32_2 %92 = OpVectorShuffle %91 %91 0 1 
                                        f32_2 %93 = OpFMul %88 %92 
                               Uniform f32_4* %94 = OpAccessChain %22 %89 
                                        f32_4 %95 = OpLoad %94 
                                        f32_2 %96 = OpVectorShuffle %95 %95 2 3 
                                        f32_2 %97 = OpFAdd %93 %96 
                                        f32_4 %98 = OpLoad %45 
                                        f32_4 %99 = OpVectorShuffle %98 %97 4 5 2 3 
                                                      OpStore %45 %99 
                                       f32_4 %102 = OpLoad %45 
                                       f32_2 %103 = OpVectorShuffle %102 %102 0 1 
                                                      OpStore vs_TEXCOORD0 %103 
                                       f32_3 %107 = OpLoad %106 
                              Uniform f32_4* %108 = OpAccessChain %22 %25 %24 
                                       f32_4 %109 = OpLoad %108 
                                       f32_3 %110 = OpVectorShuffle %109 %109 0 1 2 
                                         f32 %111 = OpDot %107 %110 
                                Private f32* %114 = OpAccessChain %45 %112 
                                                      OpStore %114 %111 
                                       f32_3 %115 = OpLoad %106 
                              Uniform f32_4* %116 = OpAccessChain %22 %25 %25 
                                       f32_4 %117 = OpLoad %116 
                                       f32_3 %118 = OpVectorShuffle %117 %117 0 1 2 
                                         f32 %119 = OpDot %115 %118 
                                Private f32* %120 = OpAccessChain %45 %71 
                                                      OpStore %120 %119 
                                       f32_3 %121 = OpLoad %106 
                              Uniform f32_4* %122 = OpAccessChain %22 %25 %37 
                                       f32_4 %123 = OpLoad %122 
                                       f32_3 %124 = OpVectorShuffle %123 %123 0 1 2 
                                         f32 %125 = OpDot %121 %124 
                                Private f32* %127 = OpAccessChain %45 %126 
                                                      OpStore %127 %125 
                                       f32_4 %129 = OpLoad %45 
                                       f32_3 %130 = OpVectorShuffle %129 %129 0 1 2 
                                       f32_4 %131 = OpLoad %45 
                                       f32_3 %132 = OpVectorShuffle %131 %131 0 1 2 
                                         f32 %133 = OpDot %130 %132 
                                                      OpStore %128 %133 
                                         f32 %134 = OpLoad %128 
                                         f32 %135 = OpExtInst %1 32 %134 
                                                      OpStore %128 %135 
                                         f32 %138 = OpLoad %128 
                                       f32_3 %139 = OpCompositeConstruct %138 %138 %138 
                                       f32_4 %140 = OpLoad %45 
                                       f32_3 %141 = OpVectorShuffle %140 %140 0 1 2 
                                       f32_3 %142 = OpFMul %139 %141 
                                                      OpStore vs_TEXCOORD1 %142 
                              Uniform f32_4* %144 = OpAccessChain %22 %24 %47 
                                       f32_4 %145 = OpLoad %144 
                                       f32_3 %146 = OpVectorShuffle %145 %145 0 1 2 
                                       f32_4 %147 = OpLoad %11 
                                       f32_3 %148 = OpVectorShuffle %147 %147 3 3 3 
                                       f32_3 %149 = OpFMul %146 %148 
                                       f32_4 %150 = OpLoad %9 
                                       f32_3 %151 = OpVectorShuffle %150 %150 0 1 2 
                                       f32_3 %152 = OpFAdd %149 %151 
                                                      OpStore vs_TEXCOORD2 %152 
                              Uniform f32_4* %153 = OpAccessChain %22 %24 %47 
                                       f32_4 %154 = OpLoad %153 
                                       f32_4 %155 = OpLoad %11 
                                       f32_4 %156 = OpVectorShuffle %155 %155 3 3 3 3 
                                       f32_4 %157 = OpFMul %154 %156 
                                       f32_4 %158 = OpLoad %9 
                                       f32_4 %159 = OpFAdd %157 %158 
                                                      OpStore %9 %159 
                                       f32_4 %160 = OpLoad %9 
                                       f32_4 %161 = OpVectorShuffle %160 %160 1 1 1 1 
                              Uniform f32_4* %162 = OpAccessChain %22 %47 %25 
                                       f32_4 %163 = OpLoad %162 
                                       f32_4 %164 = OpFMul %161 %163 
                                                      OpStore %45 %164 
                              Uniform f32_4* %165 = OpAccessChain %22 %47 %24 
                                       f32_4 %166 = OpLoad %165 
                                       f32_4 %167 = OpLoad %9 
                                       f32_4 %168 = OpVectorShuffle %167 %167 0 0 0 0 
                                       f32_4 %169 = OpFMul %166 %168 
                                       f32_4 %170 = OpLoad %45 
                                       f32_4 %171 = OpFAdd %169 %170 
                                                      OpStore %45 %171 
                              Uniform f32_4* %172 = OpAccessChain %22 %47 %37 
                                       f32_4 %173 = OpLoad %172 
                                       f32_4 %174 = OpLoad %9 
                                       f32_4 %175 = OpVectorShuffle %174 %174 2 2 2 2 
                                       f32_4 %176 = OpFMul %173 %175 
                                       f32_4 %177 = OpLoad %45 
                                       f32_4 %178 = OpFAdd %176 %177 
                                                      OpStore %45 %178 
                              Uniform f32_4* %180 = OpAccessChain %22 %47 %47 
                                       f32_4 %181 = OpLoad %180 
                                       f32_4 %182 = OpLoad %9 
                                       f32_4 %183 = OpVectorShuffle %182 %182 3 3 3 3 
                                       f32_4 %184 = OpFMul %181 %183 
                                       f32_4 %185 = OpLoad %45 
                                       f32_4 %186 = OpFAdd %184 %185 
                                                      OpStore vs_TEXCOORD3 %186 
                                                      OpStore vs_TEXCOORD4 %189 
                                 Output f32* %191 = OpAccessChain %75 %24 %71 
                                         f32 %192 = OpLoad %191 
                                         f32 %193 = OpFNegate %192 
                                 Output f32* %194 = OpAccessChain %75 %24 %71 
                                                      OpStore %194 %193 
                                                      OpReturn
                                                      OpFunctionEnd
; SPIR-V
; Version: 1.0
; Generator: Khronos Glslang Reference Front End; 6
; Bound: 263
; Schema: 0
                                                      OpCapability Shader 
                                               %1 = OpExtInstImport "GLSL.std.450" 
                                                      OpMemoryModel Logical GLSL450 
                                                      OpEntryPoint Fragment %4 "main" %12 %48 %235 %251 
                                                      OpExecutionMode %4 OriginUpperLeft 
                                                      OpName vs_TEXCOORD2 "vs_TEXCOORD2" 
                                                      OpName vs_TEXCOORD1 "vs_TEXCOORD1" 
                                                      OpName vs_TEXCOORD0 "vs_TEXCOORD0" 
                                                      OpDecorate vs_TEXCOORD2 Location 12 
                                                      OpDecorate %17 ArrayStride 17 
                                                      OpMemberDecorate %18 0 Offset 18 
                                                      OpMemberDecorate %18 1 RelaxedPrecision 
                                                      OpMemberDecorate %18 1 Offset 18 
                                                      OpMemberDecorate %18 2 Offset 18 
                                                      OpMemberDecorate %18 3 RelaxedPrecision 
                                                      OpMemberDecorate %18 3 Offset 18 
                                                      OpMemberDecorate %18 4 RelaxedPrecision 
                                                      OpMemberDecorate %18 4 Offset 18 
                                                      OpMemberDecorate %18 5 RelaxedPrecision 
                                                      OpMemberDecorate %18 5 Offset 18 
                                                      OpMemberDecorate %18 6 RelaxedPrecision 
                                                      OpMemberDecorate %18 6 Offset 18 
                                                      OpDecorate %18 Block 
                                                      OpDecorate %20 DescriptorSet 20 
                                                      OpDecorate %20 Binding 20 
                                                      OpDecorate %47 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD1 Location 48 
                                                      OpDecorate %55 RelaxedPrecision 
                                                      OpDecorate %56 RelaxedPrecision 
                                                      OpDecorate %58 RelaxedPrecision 
                                                      OpDecorate %59 RelaxedPrecision 
                                                      OpDecorate %62 RelaxedPrecision 
                                                      OpDecorate %68 RelaxedPrecision 
                                                      OpDecorate %70 RelaxedPrecision 
                                                      OpDecorate %72 RelaxedPrecision 
                                                      OpDecorate %76 RelaxedPrecision 
                                                      OpDecorate %77 RelaxedPrecision 
                                                      OpDecorate %79 RelaxedPrecision 
                                                      OpDecorate %82 RelaxedPrecision 
                                                      OpDecorate %83 RelaxedPrecision 
                                                      OpDecorate %84 RelaxedPrecision 
                                                      OpDecorate %85 RelaxedPrecision 
                                                      OpDecorate %87 RelaxedPrecision 
                                                      OpDecorate %88 RelaxedPrecision 
                                                      OpDecorate %90 RelaxedPrecision 
                                                      OpDecorate %92 RelaxedPrecision 
                                                      OpDecorate %93 RelaxedPrecision 
                                                      OpDecorate %95 RelaxedPrecision 
                                                      OpDecorate %96 RelaxedPrecision 
                                                      OpDecorate %97 RelaxedPrecision 
                                                      OpDecorate %98 RelaxedPrecision 
                                                      OpDecorate %99 RelaxedPrecision 
                                                      OpDecorate %100 RelaxedPrecision 
                                                      OpDecorate %102 RelaxedPrecision 
                                                      OpDecorate %103 RelaxedPrecision 
                                                      OpDecorate %104 RelaxedPrecision 
                                                      OpDecorate %106 RelaxedPrecision 
                                                      OpDecorate %107 RelaxedPrecision 
                                                      OpDecorate %110 RelaxedPrecision 
                                                      OpDecorate %111 RelaxedPrecision 
                                                      OpDecorate %114 RelaxedPrecision 
                                                      OpDecorate %116 RelaxedPrecision 
                                                      OpDecorate %118 RelaxedPrecision 
                                                      OpDecorate %120 RelaxedPrecision 
                                                      OpDecorate %122 RelaxedPrecision 
                                                      OpDecorate %123 RelaxedPrecision 
                                                      OpDecorate %126 RelaxedPrecision 
                                                      OpDecorate %127 RelaxedPrecision 
                                                      OpDecorate %128 RelaxedPrecision 
                                                      OpDecorate %130 RelaxedPrecision 
                                                      OpDecorate %131 RelaxedPrecision 
                                                      OpDecorate %134 RelaxedPrecision 
                                                      OpDecorate %135 RelaxedPrecision 
                                                      OpDecorate %136 RelaxedPrecision 
                                                      OpDecorate %176 DescriptorSet 176 
                                                      OpDecorate %176 Binding 176 
                                                      OpDecorate %180 DescriptorSet 180 
                                                      OpDecorate %180 Binding 180 
                                                      OpDecorate %201 DescriptorSet 201 
                                                      OpDecorate %201 Binding 201 
                                                      OpDecorate %203 DescriptorSet 203 
                                                      OpDecorate %203 Binding 203 
                                                      OpDecorate %211 RelaxedPrecision 
                                                      OpDecorate %215 RelaxedPrecision 
                                                      OpDecorate %219 RelaxedPrecision 
                                                      OpDecorate %221 RelaxedPrecision 
                                                      OpDecorate %222 RelaxedPrecision 
                                                      OpDecorate %223 RelaxedPrecision 
                                                      OpDecorate %225 RelaxedPrecision 
                                                      OpDecorate %226 RelaxedPrecision 
                                                      OpDecorate %227 RelaxedPrecision 
                                                      OpDecorate %228 RelaxedPrecision 
                                                      OpDecorate %229 RelaxedPrecision 
                                                      OpDecorate %229 DescriptorSet 229 
                                                      OpDecorate %229 Binding 229 
                                                      OpDecorate %230 RelaxedPrecision 
                                                      OpDecorate %231 RelaxedPrecision 
                                                      OpDecorate %231 DescriptorSet 231 
                                                      OpDecorate %231 Binding 231 
                                                      OpDecorate %232 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD0 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD0 Location 235 
                                                      OpDecorate %236 RelaxedPrecision 
                                                      OpDecorate %237 RelaxedPrecision 
                                                      OpDecorate %238 RelaxedPrecision 
                                                      OpDecorate %239 RelaxedPrecision 
                                                      OpDecorate %241 RelaxedPrecision 
                                                      OpDecorate %242 RelaxedPrecision 
                                                      OpDecorate %243 RelaxedPrecision 
                                                      OpDecorate %244 RelaxedPrecision 
                                                      OpDecorate %245 RelaxedPrecision 
                                                      OpDecorate %246 RelaxedPrecision 
                                                      OpDecorate %247 RelaxedPrecision 
                                                      OpDecorate %248 RelaxedPrecision 
                                                      OpDecorate %249 RelaxedPrecision 
                                                      OpDecorate %251 RelaxedPrecision 
                                                      OpDecorate %251 Location 251 
                                                      OpDecorate %252 RelaxedPrecision 
                                                      OpDecorate %253 RelaxedPrecision 
                                                      OpDecorate %254 RelaxedPrecision 
                                                      OpDecorate %255 RelaxedPrecision 
                                                      OpDecorate %259 RelaxedPrecision 
                                               %2 = OpTypeVoid 
                                               %3 = OpTypeFunction %2 
                                               %6 = OpTypeFloat 32 
                                               %7 = OpTypeVector %6 4 
                                               %8 = OpTypePointer Private %7 
                                Private f32_4* %9 = OpVariable Private 
                                              %10 = OpTypeVector %6 3 
                                              %11 = OpTypePointer Input %10 
                        Input f32_3* vs_TEXCOORD2 = OpVariable Input 
                                              %15 = OpTypeInt 32 0 
                                          u32 %16 = OpConstant 4 
                                              %17 = OpTypeArray %7 %16 
                                              %18 = OpTypeStruct %7 %7 %17 %7 %7 %6 %6 
                                              %19 = OpTypePointer Uniform %18 
Uniform struct {f32_4; f32_4; f32_4[4]; f32_4; f32_4; f32; f32;}* %20 = OpVariable Uniform 
                                              %21 = OpTypeInt 32 1 
                                          i32 %22 = OpConstant 0 
                                              %23 = OpTypePointer Uniform %7 
                                              %30 = OpTypePointer Private %6 
                                 Private f32* %31 = OpVariable Private 
                                              %46 = OpTypePointer Private %10 
                               Private f32_3* %47 = OpVariable Private 
                        Input f32_3* vs_TEXCOORD1 = OpVariable Input 
                                          u32 %52 = OpConstant 0 
                                          f32 %69 = OpConstant 3.674022E-40 
                                 Private f32* %72 = OpVariable Private 
                                          i32 %73 = OpConstant 6 
                                              %74 = OpTypePointer Uniform %6 
                                          f32 %78 = OpConstant 3.674022E-40 
                                          i32 %80 = OpConstant 5 
                                 Private f32* %90 = OpVariable Private 
                                         f32 %101 = OpConstant 3.674022E-40 
                                         f32 %115 = OpConstant 3.674022E-40 
                                         f32 %117 = OpConstant 3.674022E-40 
                                         i32 %132 = OpConstant 4 
                                         i32 %139 = OpConstant 2 
                                         i32 %140 = OpConstant 1 
                                         i32 %159 = OpConstant 3 
                                             %163 = OpTypeVector %6 2 
                                             %164 = OpTypePointer Private %163 
                              Private f32_2* %165 = OpVariable Private 
                                       f32_2 %172 = OpConstantComposite %78 %78 
                                             %174 = OpTypeImage %6 Dim2D 0 0 0 1 Unknown 
                                             %175 = OpTypePointer UniformConstant %174 
        UniformConstant read_only Texture2D* %176 = OpVariable UniformConstant 
                                             %178 = OpTypeSampler 
                                             %179 = OpTypePointer UniformConstant %178 
                    UniformConstant sampler* %180 = OpVariable UniformConstant 
                                             %182 = OpTypeSampledImage %174 
                                         u32 %186 = OpConstant 3 
                                             %188 = OpTypeBool 
                                             %189 = OpTypePointer Private %188 
                               Private bool* %190 = OpVariable Private 
                                         u32 %191 = OpConstant 2 
        UniformConstant read_only Texture2D* %201 = OpVariable UniformConstant 
                    UniformConstant sampler* %203 = OpVariable UniformConstant 
                                Private f32* %211 = OpVariable Private 
                              Private f32_3* %221 = OpVariable Private 
                              Private f32_4* %228 = OpVariable Private 
        UniformConstant read_only Texture2D* %229 = OpVariable UniformConstant 
                    UniformConstant sampler* %231 = OpVariable UniformConstant 
                                             %234 = OpTypePointer Input %163 
                        Input f32_2* vs_TEXCOORD0 = OpVariable Input 
                              Private f32_4* %238 = OpVariable Private 
                                             %250 = OpTypePointer Output %7 
                               Output f32_4* %251 = OpVariable Output 
                                             %260 = OpTypePointer Output %6 
                                          void %4 = OpFunction None %3 
                                               %5 = OpLabel 
                                        f32_3 %13 = OpLoad vs_TEXCOORD2 
                                        f32_3 %14 = OpFNegate %13 
                               Uniform f32_4* %24 = OpAccessChain %20 %22 
                                        f32_4 %25 = OpLoad %24 
                                        f32_3 %26 = OpVectorShuffle %25 %25 0 1 2 
                                        f32_3 %27 = OpFAdd %14 %26 
                                        f32_4 %28 = OpLoad %9 
                                        f32_4 %29 = OpVectorShuffle %28 %27 4 5 6 3 
                                                      OpStore %9 %29 
                                        f32_4 %32 = OpLoad %9 
                                        f32_3 %33 = OpVectorShuffle %32 %32 0 1 2 
                                        f32_4 %34 = OpLoad %9 
                                        f32_3 %35 = OpVectorShuffle %34 %34 0 1 2 
                                          f32 %36 = OpDot %33 %35 
                                                      OpStore %31 %36 
                                          f32 %37 = OpLoad %31 
                                          f32 %38 = OpExtInst %1 32 %37 
                                                      OpStore %31 %38 
                                          f32 %39 = OpLoad %31 
                                        f32_3 %40 = OpCompositeConstruct %39 %39 %39 
                                        f32_4 %41 = OpLoad %9 
                                        f32_3 %42 = OpVectorShuffle %41 %41 0 1 2 
                                        f32_3 %43 = OpFMul %40 %42 
                                        f32_4 %44 = OpLoad %9 
                                        f32_4 %45 = OpVectorShuffle %44 %43 4 5 6 3 
                                                      OpStore %9 %45 
                                        f32_3 %49 = OpLoad vs_TEXCOORD1 
                                        f32_3 %50 = OpLoad vs_TEXCOORD1 
                                          f32 %51 = OpDot %49 %50 
                                 Private f32* %53 = OpAccessChain %47 %52 
                                                      OpStore %53 %51 
                                 Private f32* %54 = OpAccessChain %47 %52 
                                          f32 %55 = OpLoad %54 
                                          f32 %56 = OpExtInst %1 32 %55 
                                 Private f32* %57 = OpAccessChain %47 %52 
                                                      OpStore %57 %56 
                                        f32_3 %58 = OpLoad %47 
                                        f32_3 %59 = OpVectorShuffle %58 %58 0 0 0 
                                        f32_3 %60 = OpLoad vs_TEXCOORD1 
                                        f32_3 %61 = OpFMul %59 %60 
                                                      OpStore %47 %61 
                                        f32_3 %62 = OpLoad %47 
                                        f32_4 %63 = OpLoad %9 
                                        f32_3 %64 = OpVectorShuffle %63 %63 0 1 2 
                                          f32 %65 = OpDot %62 %64 
                                 Private f32* %66 = OpAccessChain %47 %52 
                                                      OpStore %66 %65 
                                 Private f32* %67 = OpAccessChain %47 %52 
                                          f32 %68 = OpLoad %67 
                                          f32 %70 = OpExtInst %1 40 %68 %69 
                                 Private f32* %71 = OpAccessChain %47 %52 
                                                      OpStore %71 %70 
                                 Uniform f32* %75 = OpAccessChain %20 %73 
                                          f32 %76 = OpLoad %75 
                                          f32 %77 = OpFNegate %76 
                                          f32 %79 = OpFMul %77 %78 
                                 Uniform f32* %81 = OpAccessChain %20 %80 
                                          f32 %82 = OpLoad %81 
                                          f32 %83 = OpFAdd %79 %82 
                                                      OpStore %72 %83 
                                          f32 %84 = OpLoad %72 
                                          f32 %85 = OpFNegate %84 
                                 Private f32* %86 = OpAccessChain %47 %52 
                                          f32 %87 = OpLoad %86 
                                          f32 %88 = OpFAdd %85 %87 
                                 Private f32* %89 = OpAccessChain %47 %52 
                                                      OpStore %89 %88 
                                 Uniform f32* %91 = OpAccessChain %20 %73 
                                          f32 %92 = OpLoad %91 
                                          f32 %93 = OpFMul %92 %78 
                                 Uniform f32* %94 = OpAccessChain %20 %80 
                                          f32 %95 = OpLoad %94 
                                          f32 %96 = OpFAdd %93 %95 
                                                      OpStore %90 %96 
                                          f32 %97 = OpLoad %72 
                                          f32 %98 = OpFNegate %97 
                                          f32 %99 = OpLoad %90 
                                         f32 %100 = OpFAdd %98 %99 
                                                      OpStore %72 %100 
                                         f32 %102 = OpLoad %72 
                                         f32 %103 = OpFDiv %101 %102 
                                                      OpStore %72 %103 
                                         f32 %104 = OpLoad %72 
                                Private f32* %105 = OpAccessChain %47 %52 
                                         f32 %106 = OpLoad %105 
                                         f32 %107 = OpFMul %104 %106 
                                Private f32* %108 = OpAccessChain %47 %52 
                                                      OpStore %108 %107 
                                Private f32* %109 = OpAccessChain %47 %52 
                                         f32 %110 = OpLoad %109 
                                         f32 %111 = OpExtInst %1 43 %110 %69 %101 
                                Private f32* %112 = OpAccessChain %47 %52 
                                                      OpStore %112 %111 
                                Private f32* %113 = OpAccessChain %47 %52 
                                         f32 %114 = OpLoad %113 
                                         f32 %116 = OpFMul %114 %115 
                                         f32 %118 = OpFAdd %116 %117 
                                                      OpStore %72 %118 
                                Private f32* %119 = OpAccessChain %47 %52 
                                         f32 %120 = OpLoad %119 
                                Private f32* %121 = OpAccessChain %47 %52 
                                         f32 %122 = OpLoad %121 
                                         f32 %123 = OpFMul %120 %122 
                                Private f32* %124 = OpAccessChain %47 %52 
                                                      OpStore %124 %123 
                                Private f32* %125 = OpAccessChain %47 %52 
                                         f32 %126 = OpLoad %125 
                                         f32 %127 = OpLoad %72 
                                         f32 %128 = OpFMul %126 %127 
                                Private f32* %129 = OpAccessChain %47 %52 
                                                      OpStore %129 %128 
                                       f32_3 %130 = OpLoad %47 
                                       f32_3 %131 = OpVectorShuffle %130 %130 0 0 0 
                              Uniform f32_4* %133 = OpAccessChain %20 %132 
                                       f32_4 %134 = OpLoad %133 
                                       f32_3 %135 = OpVectorShuffle %134 %134 0 1 2 
                                       f32_3 %136 = OpFMul %131 %135 
                                                      OpStore %47 %136 
                                       f32_3 %137 = OpLoad vs_TEXCOORD2 
                                       f32_4 %138 = OpVectorShuffle %137 %137 1 1 1 1 
                              Uniform f32_4* %141 = OpAccessChain %20 %139 %140 
                                       f32_4 %142 = OpLoad %141 
                                       f32_4 %143 = OpFMul %138 %142 
                                                      OpStore %9 %143 
                              Uniform f32_4* %144 = OpAccessChain %20 %139 %22 
                                       f32_4 %145 = OpLoad %144 
                                       f32_3 %146 = OpLoad vs_TEXCOORD2 
                                       f32_4 %147 = OpVectorShuffle %146 %146 0 0 0 0 
                                       f32_4 %148 = OpFMul %145 %147 
                                       f32_4 %149 = OpLoad %9 
                                       f32_4 %150 = OpFAdd %148 %149 
                                                      OpStore %9 %150 
                              Uniform f32_4* %151 = OpAccessChain %20 %139 %139 
                                       f32_4 %152 = OpLoad %151 
                                       f32_3 %153 = OpLoad vs_TEXCOORD2 
                                       f32_4 %154 = OpVectorShuffle %153 %153 2 2 2 2 
                                       f32_4 %155 = OpFMul %152 %154 
                                       f32_4 %156 = OpLoad %9 
                                       f32_4 %157 = OpFAdd %155 %156 
                                                      OpStore %9 %157 
                                       f32_4 %158 = OpLoad %9 
                              Uniform f32_4* %160 = OpAccessChain %20 %139 %159 
                                       f32_4 %161 = OpLoad %160 
                                       f32_4 %162 = OpFAdd %158 %161 
                                                      OpStore %9 %162 
                                       f32_4 %166 = OpLoad %9 
                                       f32_2 %167 = OpVectorShuffle %166 %166 0 1 
                                       f32_4 %168 = OpLoad %9 
                                       f32_2 %169 = OpVectorShuffle %168 %168 3 3 
                                       f32_2 %170 = OpFDiv %167 %169 
                                                      OpStore %165 %170 
                                       f32_2 %171 = OpLoad %165 
                                       f32_2 %173 = OpFAdd %171 %172 
                                                      OpStore %165 %173 
                         read_only Texture2D %177 = OpLoad %176 
                                     sampler %181 = OpLoad %180 
                  read_only Texture2DSampled %183 = OpSampledImage %177 %181 
                                       f32_2 %184 = OpLoad %165 
                                       f32_4 %185 = OpImageSampleImplicitLod %183 %184 
                                         f32 %187 = OpCompositeExtract %185 3 
                                                      OpStore %31 %187 
                                Private f32* %192 = OpAccessChain %9 %191 
                                         f32 %193 = OpLoad %192 
                                        bool %194 = OpFOrdLessThan %69 %193 
                                                      OpStore %190 %194 
                                       f32_4 %195 = OpLoad %9 
                                       f32_3 %196 = OpVectorShuffle %195 %195 0 1 2 
                                       f32_4 %197 = OpLoad %9 
                                       f32_3 %198 = OpVectorShuffle %197 %197 0 1 2 
                                         f32 %199 = OpDot %196 %198 
                                Private f32* %200 = OpAccessChain %9 %52 
                                                      OpStore %200 %199 
                         read_only Texture2D %202 = OpLoad %201 
                                     sampler %204 = OpLoad %203 
                  read_only Texture2DSampled %205 = OpSampledImage %202 %204 
                                       f32_4 %206 = OpLoad %9 
                                       f32_2 %207 = OpVectorShuffle %206 %206 0 0 
                                       f32_4 %208 = OpImageSampleImplicitLod %205 %207 
                                         f32 %209 = OpCompositeExtract %208 0 
                                Private f32* %210 = OpAccessChain %9 %52 
                                                      OpStore %210 %209 
                                        bool %212 = OpLoad %190 
                                         f32 %213 = OpSelect %212 %101 %69 
                                                      OpStore %211 %213 
                                         f32 %214 = OpLoad %31 
                                         f32 %215 = OpLoad %211 
                                         f32 %216 = OpFMul %214 %215 
                                                      OpStore %211 %216 
                                Private f32* %217 = OpAccessChain %9 %52 
                                         f32 %218 = OpLoad %217 
                                         f32 %219 = OpLoad %211 
                                         f32 %220 = OpFMul %218 %219 
                                                      OpStore %211 %220 
                                         f32 %222 = OpLoad %211 
                                       f32_3 %223 = OpCompositeConstruct %222 %222 %222 
                              Uniform f32_4* %224 = OpAccessChain %20 %140 
                                       f32_4 %225 = OpLoad %224 
                                       f32_3 %226 = OpVectorShuffle %225 %225 0 1 2 
                                       f32_3 %227 = OpFMul %223 %226 
                                                      OpStore %221 %227 
                         read_only Texture2D %230 = OpLoad %229 
                                     sampler %232 = OpLoad %231 
                  read_only Texture2DSampled %233 = OpSampledImage %230 %232 
                                       f32_2 %236 = OpLoad vs_TEXCOORD0 
                                       f32_4 %237 = OpImageSampleImplicitLod %233 %236 
                                                      OpStore %228 %237 
                                       f32_4 %239 = OpLoad %228 
                              Uniform f32_4* %240 = OpAccessChain %20 %159 
                                       f32_4 %241 = OpLoad %240 
                                       f32_4 %242 = OpFMul %239 %241 
                                                      OpStore %238 %242 
                                       f32_3 %243 = OpLoad %221 
                                       f32_4 %244 = OpLoad %238 
                                       f32_3 %245 = OpVectorShuffle %244 %244 0 1 2 
                                       f32_3 %246 = OpFMul %243 %245 
                                                      OpStore %221 %246 
                                       f32_3 %247 = OpLoad %47 
                                       f32_3 %248 = OpLoad %221 
                                       f32_3 %249 = OpFMul %247 %248 
                                                      OpStore %47 %249 
                                       f32_4 %252 = OpLoad %238 
                                       f32_3 %253 = OpVectorShuffle %252 %252 3 3 3 
                                       f32_3 %254 = OpLoad %47 
                                       f32_3 %255 = OpFMul %253 %254 
                                       f32_4 %256 = OpLoad %251 
                                       f32_4 %257 = OpVectorShuffle %256 %255 4 5 6 3 
                                                      OpStore %251 %257 
                                Private f32* %258 = OpAccessChain %238 %186 
                                         f32 %259 = OpLoad %258 
                                 Output f32* %261 = OpAccessChain %251 %186 
                                                      OpStore %261 %259 
                                                      OpReturn
                                                      OpFunctionEnd
"
}
SubProgram "gles3 hw_tier00 " {
Keywords { "POINT_COOKIE" }
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToLight[4];
uniform 	vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in highp vec3 in_NORMAL0;
in highp vec4 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out highp vec3 vs_TEXCOORD1;
out highp vec3 vs_TEXCOORD2;
out highp vec3 vs_TEXCOORD3;
out highp vec4 vs_TEXCOORD4;
vec4 u_xlat0;
vec4 u_xlat1;
vec4 u_xlat2;
float u_xlat10;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy;
    u_xlat1.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat1.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat1.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat10 = dot(u_xlat1.xyz, u_xlat1.xyz);
    u_xlat10 = inversesqrt(u_xlat10);
    vs_TEXCOORD1.xyz = vec3(u_xlat10) * u_xlat1.xyz;
    vs_TEXCOORD2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[3] * in_POSITION0.wwww + u_xlat0;
    u_xlat1.xyz = u_xlat0.yyy * hlslcc_mtx4x4unity_WorldToLight[1].xyz;
    u_xlat1.xyz = hlslcc_mtx4x4unity_WorldToLight[0].xyz * u_xlat0.xxx + u_xlat1.xyz;
    u_xlat0.xyz = hlslcc_mtx4x4unity_WorldToLight[2].xyz * u_xlat0.zzz + u_xlat1.xyz;
    vs_TEXCOORD3.xyz = hlslcc_mtx4x4unity_WorldToLight[3].xyz * u_xlat0.www + u_xlat0.xyz;
    vs_TEXCOORD4 = vec4(0.0, 0.0, 0.0, 0.0);
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 _LightColor0;
uniform 	vec4 hlslcc_mtx4x4unity_WorldToLight[4];
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 _HColor;
uniform 	mediump float _RampThreshold;
uniform 	mediump float _RampSmooth;
UNITY_LOCATION(0) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(1) uniform highp sampler2D _LightTextureB0;
UNITY_LOCATION(2) uniform highp samplerCube _LightTexture0;
in mediump vec2 vs_TEXCOORD0;
in highp vec3 vs_TEXCOORD1;
in highp vec3 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec4 u_xlat16_0;
mediump vec3 u_xlat16_1;
mediump vec3 u_xlat16_2;
float u_xlat3;
mediump float u_xlat16_4;
mediump float u_xlat16_7;
float u_xlat9;
void main()
{
    u_xlat0.xyz = (-vs_TEXCOORD2.xyz) + _WorldSpaceLightPos0.xyz;
    u_xlat9 = dot(u_xlat0.xyz, u_xlat0.xyz);
    u_xlat9 = inversesqrt(u_xlat9);
    u_xlat0.xyz = vec3(u_xlat9) * u_xlat0.xyz;
    u_xlat16_1.x = dot(vs_TEXCOORD1.xyz, vs_TEXCOORD1.xyz);
    u_xlat16_1.x = inversesqrt(u_xlat16_1.x);
    u_xlat16_1.xyz = u_xlat16_1.xxx * vs_TEXCOORD1.xyz;
    u_xlat16_1.x = dot(u_xlat16_1.xyz, u_xlat0.xyz);
    u_xlat16_1.x = max(u_xlat16_1.x, 0.0);
    u_xlat16_4 = (-_RampSmooth) * 0.5 + _RampThreshold;
    u_xlat16_1.x = (-u_xlat16_4) + u_xlat16_1.x;
    u_xlat16_7 = _RampSmooth * 0.5 + _RampThreshold;
    u_xlat16_4 = (-u_xlat16_4) + u_xlat16_7;
    u_xlat16_4 = float(1.0) / u_xlat16_4;
    u_xlat16_1.x = u_xlat16_4 * u_xlat16_1.x;
#ifdef UNITY_ADRENO_ES3
    u_xlat16_1.x = min(max(u_xlat16_1.x, 0.0), 1.0);
#else
    u_xlat16_1.x = clamp(u_xlat16_1.x, 0.0, 1.0);
#endif
    u_xlat16_4 = u_xlat16_1.x * -2.0 + 3.0;
    u_xlat16_1.x = u_xlat16_1.x * u_xlat16_1.x;
    u_xlat16_1.x = u_xlat16_1.x * u_xlat16_4;
    u_xlat16_1.xyz = u_xlat16_1.xxx * _HColor.xyz;
    u_xlat0.xyz = vs_TEXCOORD2.yyy * hlslcc_mtx4x4unity_WorldToLight[1].xyz;
    u_xlat0.xyz = hlslcc_mtx4x4unity_WorldToLight[0].xyz * vs_TEXCOORD2.xxx + u_xlat0.xyz;
    u_xlat0.xyz = hlslcc_mtx4x4unity_WorldToLight[2].xyz * vs_TEXCOORD2.zzz + u_xlat0.xyz;
    u_xlat0.xyz = u_xlat0.xyz + hlslcc_mtx4x4unity_WorldToLight[3].xyz;
    u_xlat9 = dot(u_xlat0.xyz, u_xlat0.xyz);
    u_xlat0.x = texture(_LightTexture0, u_xlat0.xyz).w;
    u_xlat3 = texture(_LightTextureB0, vec2(u_xlat9)).x;
    u_xlat0.x = u_xlat0.x * u_xlat3;
    u_xlat16_2.xyz = u_xlat0.xxx * _LightColor0.xyz;
    u_xlat16_0 = texture(_MainTex, vs_TEXCOORD0.xy);
    u_xlat16_0 = u_xlat16_0 * _Color;
    u_xlat16_2.xyz = u_xlat16_2.xyz * u_xlat16_0.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * u_xlat16_2.xyz;
    SV_Target0.xyz = u_xlat16_0.www * u_xlat16_1.xyz;
    SV_Target0.w = u_xlat16_0.w;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier01 " {
Keywords { "POINT_COOKIE" }
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToLight[4];
uniform 	vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in highp vec3 in_NORMAL0;
in highp vec4 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out highp vec3 vs_TEXCOORD1;
out highp vec3 vs_TEXCOORD2;
out highp vec3 vs_TEXCOORD3;
out highp vec4 vs_TEXCOORD4;
vec4 u_xlat0;
vec4 u_xlat1;
vec4 u_xlat2;
float u_xlat10;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy;
    u_xlat1.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat1.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat1.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat10 = dot(u_xlat1.xyz, u_xlat1.xyz);
    u_xlat10 = inversesqrt(u_xlat10);
    vs_TEXCOORD1.xyz = vec3(u_xlat10) * u_xlat1.xyz;
    vs_TEXCOORD2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[3] * in_POSITION0.wwww + u_xlat0;
    u_xlat1.xyz = u_xlat0.yyy * hlslcc_mtx4x4unity_WorldToLight[1].xyz;
    u_xlat1.xyz = hlslcc_mtx4x4unity_WorldToLight[0].xyz * u_xlat0.xxx + u_xlat1.xyz;
    u_xlat0.xyz = hlslcc_mtx4x4unity_WorldToLight[2].xyz * u_xlat0.zzz + u_xlat1.xyz;
    vs_TEXCOORD3.xyz = hlslcc_mtx4x4unity_WorldToLight[3].xyz * u_xlat0.www + u_xlat0.xyz;
    vs_TEXCOORD4 = vec4(0.0, 0.0, 0.0, 0.0);
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 _LightColor0;
uniform 	vec4 hlslcc_mtx4x4unity_WorldToLight[4];
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 _HColor;
uniform 	mediump float _RampThreshold;
uniform 	mediump float _RampSmooth;
UNITY_LOCATION(0) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(1) uniform highp sampler2D _LightTextureB0;
UNITY_LOCATION(2) uniform highp samplerCube _LightTexture0;
in mediump vec2 vs_TEXCOORD0;
in highp vec3 vs_TEXCOORD1;
in highp vec3 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec4 u_xlat16_0;
mediump vec3 u_xlat16_1;
mediump vec3 u_xlat16_2;
float u_xlat3;
mediump float u_xlat16_4;
mediump float u_xlat16_7;
float u_xlat9;
void main()
{
    u_xlat0.xyz = (-vs_TEXCOORD2.xyz) + _WorldSpaceLightPos0.xyz;
    u_xlat9 = dot(u_xlat0.xyz, u_xlat0.xyz);
    u_xlat9 = inversesqrt(u_xlat9);
    u_xlat0.xyz = vec3(u_xlat9) * u_xlat0.xyz;
    u_xlat16_1.x = dot(vs_TEXCOORD1.xyz, vs_TEXCOORD1.xyz);
    u_xlat16_1.x = inversesqrt(u_xlat16_1.x);
    u_xlat16_1.xyz = u_xlat16_1.xxx * vs_TEXCOORD1.xyz;
    u_xlat16_1.x = dot(u_xlat16_1.xyz, u_xlat0.xyz);
    u_xlat16_1.x = max(u_xlat16_1.x, 0.0);
    u_xlat16_4 = (-_RampSmooth) * 0.5 + _RampThreshold;
    u_xlat16_1.x = (-u_xlat16_4) + u_xlat16_1.x;
    u_xlat16_7 = _RampSmooth * 0.5 + _RampThreshold;
    u_xlat16_4 = (-u_xlat16_4) + u_xlat16_7;
    u_xlat16_4 = float(1.0) / u_xlat16_4;
    u_xlat16_1.x = u_xlat16_4 * u_xlat16_1.x;
#ifdef UNITY_ADRENO_ES3
    u_xlat16_1.x = min(max(u_xlat16_1.x, 0.0), 1.0);
#else
    u_xlat16_1.x = clamp(u_xlat16_1.x, 0.0, 1.0);
#endif
    u_xlat16_4 = u_xlat16_1.x * -2.0 + 3.0;
    u_xlat16_1.x = u_xlat16_1.x * u_xlat16_1.x;
    u_xlat16_1.x = u_xlat16_1.x * u_xlat16_4;
    u_xlat16_1.xyz = u_xlat16_1.xxx * _HColor.xyz;
    u_xlat0.xyz = vs_TEXCOORD2.yyy * hlslcc_mtx4x4unity_WorldToLight[1].xyz;
    u_xlat0.xyz = hlslcc_mtx4x4unity_WorldToLight[0].xyz * vs_TEXCOORD2.xxx + u_xlat0.xyz;
    u_xlat0.xyz = hlslcc_mtx4x4unity_WorldToLight[2].xyz * vs_TEXCOORD2.zzz + u_xlat0.xyz;
    u_xlat0.xyz = u_xlat0.xyz + hlslcc_mtx4x4unity_WorldToLight[3].xyz;
    u_xlat9 = dot(u_xlat0.xyz, u_xlat0.xyz);
    u_xlat0.x = texture(_LightTexture0, u_xlat0.xyz).w;
    u_xlat3 = texture(_LightTextureB0, vec2(u_xlat9)).x;
    u_xlat0.x = u_xlat0.x * u_xlat3;
    u_xlat16_2.xyz = u_xlat0.xxx * _LightColor0.xyz;
    u_xlat16_0 = texture(_MainTex, vs_TEXCOORD0.xy);
    u_xlat16_0 = u_xlat16_0 * _Color;
    u_xlat16_2.xyz = u_xlat16_2.xyz * u_xlat16_0.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * u_xlat16_2.xyz;
    SV_Target0.xyz = u_xlat16_0.www * u_xlat16_1.xyz;
    SV_Target0.w = u_xlat16_0.w;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier02 " {
Keywords { "POINT_COOKIE" }
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToLight[4];
uniform 	vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in highp vec3 in_NORMAL0;
in highp vec4 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out highp vec3 vs_TEXCOORD1;
out highp vec3 vs_TEXCOORD2;
out highp vec3 vs_TEXCOORD3;
out highp vec4 vs_TEXCOORD4;
vec4 u_xlat0;
vec4 u_xlat1;
vec4 u_xlat2;
float u_xlat10;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy;
    u_xlat1.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat1.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat1.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat10 = dot(u_xlat1.xyz, u_xlat1.xyz);
    u_xlat10 = inversesqrt(u_xlat10);
    vs_TEXCOORD1.xyz = vec3(u_xlat10) * u_xlat1.xyz;
    vs_TEXCOORD2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[3] * in_POSITION0.wwww + u_xlat0;
    u_xlat1.xyz = u_xlat0.yyy * hlslcc_mtx4x4unity_WorldToLight[1].xyz;
    u_xlat1.xyz = hlslcc_mtx4x4unity_WorldToLight[0].xyz * u_xlat0.xxx + u_xlat1.xyz;
    u_xlat0.xyz = hlslcc_mtx4x4unity_WorldToLight[2].xyz * u_xlat0.zzz + u_xlat1.xyz;
    vs_TEXCOORD3.xyz = hlslcc_mtx4x4unity_WorldToLight[3].xyz * u_xlat0.www + u_xlat0.xyz;
    vs_TEXCOORD4 = vec4(0.0, 0.0, 0.0, 0.0);
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 _LightColor0;
uniform 	vec4 hlslcc_mtx4x4unity_WorldToLight[4];
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 _HColor;
uniform 	mediump float _RampThreshold;
uniform 	mediump float _RampSmooth;
UNITY_LOCATION(0) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(1) uniform highp sampler2D _LightTextureB0;
UNITY_LOCATION(2) uniform highp samplerCube _LightTexture0;
in mediump vec2 vs_TEXCOORD0;
in highp vec3 vs_TEXCOORD1;
in highp vec3 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec4 u_xlat16_0;
mediump vec3 u_xlat16_1;
mediump vec3 u_xlat16_2;
float u_xlat3;
mediump float u_xlat16_4;
mediump float u_xlat16_7;
float u_xlat9;
void main()
{
    u_xlat0.xyz = (-vs_TEXCOORD2.xyz) + _WorldSpaceLightPos0.xyz;
    u_xlat9 = dot(u_xlat0.xyz, u_xlat0.xyz);
    u_xlat9 = inversesqrt(u_xlat9);
    u_xlat0.xyz = vec3(u_xlat9) * u_xlat0.xyz;
    u_xlat16_1.x = dot(vs_TEXCOORD1.xyz, vs_TEXCOORD1.xyz);
    u_xlat16_1.x = inversesqrt(u_xlat16_1.x);
    u_xlat16_1.xyz = u_xlat16_1.xxx * vs_TEXCOORD1.xyz;
    u_xlat16_1.x = dot(u_xlat16_1.xyz, u_xlat0.xyz);
    u_xlat16_1.x = max(u_xlat16_1.x, 0.0);
    u_xlat16_4 = (-_RampSmooth) * 0.5 + _RampThreshold;
    u_xlat16_1.x = (-u_xlat16_4) + u_xlat16_1.x;
    u_xlat16_7 = _RampSmooth * 0.5 + _RampThreshold;
    u_xlat16_4 = (-u_xlat16_4) + u_xlat16_7;
    u_xlat16_4 = float(1.0) / u_xlat16_4;
    u_xlat16_1.x = u_xlat16_4 * u_xlat16_1.x;
#ifdef UNITY_ADRENO_ES3
    u_xlat16_1.x = min(max(u_xlat16_1.x, 0.0), 1.0);
#else
    u_xlat16_1.x = clamp(u_xlat16_1.x, 0.0, 1.0);
#endif
    u_xlat16_4 = u_xlat16_1.x * -2.0 + 3.0;
    u_xlat16_1.x = u_xlat16_1.x * u_xlat16_1.x;
    u_xlat16_1.x = u_xlat16_1.x * u_xlat16_4;
    u_xlat16_1.xyz = u_xlat16_1.xxx * _HColor.xyz;
    u_xlat0.xyz = vs_TEXCOORD2.yyy * hlslcc_mtx4x4unity_WorldToLight[1].xyz;
    u_xlat0.xyz = hlslcc_mtx4x4unity_WorldToLight[0].xyz * vs_TEXCOORD2.xxx + u_xlat0.xyz;
    u_xlat0.xyz = hlslcc_mtx4x4unity_WorldToLight[2].xyz * vs_TEXCOORD2.zzz + u_xlat0.xyz;
    u_xlat0.xyz = u_xlat0.xyz + hlslcc_mtx4x4unity_WorldToLight[3].xyz;
    u_xlat9 = dot(u_xlat0.xyz, u_xlat0.xyz);
    u_xlat0.x = texture(_LightTexture0, u_xlat0.xyz).w;
    u_xlat3 = texture(_LightTextureB0, vec2(u_xlat9)).x;
    u_xlat0.x = u_xlat0.x * u_xlat3;
    u_xlat16_2.xyz = u_xlat0.xxx * _LightColor0.xyz;
    u_xlat16_0 = texture(_MainTex, vs_TEXCOORD0.xy);
    u_xlat16_0 = u_xlat16_0 * _Color;
    u_xlat16_2.xyz = u_xlat16_2.xyz * u_xlat16_0.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xyz * u_xlat16_2.xyz;
    SV_Target0.xyz = u_xlat16_0.www * u_xlat16_1.xyz;
    SV_Target0.w = u_xlat16_0.w;
    return;
}

#endif
"
}
SubProgram "vulkan hw_tier00 " {
Keywords { "POINT_COOKIE" }
"; SPIR-V
; Version: 1.0
; Generator: Khronos Glslang Reference Front End; 6
; Bound: 209
; Schema: 0
                                                      OpCapability Shader 
                                               %1 = OpExtInstImport "GLSL.std.450" 
                                                      OpMemoryModel Logical GLSL450 
                                                      OpEntryPoint Vertex %4 "main" %11 %75 %85 %101 %106 %137 %143 %190 %200 
                                                      OpName vs_TEXCOORD0 "vs_TEXCOORD0" 
                                                      OpName vs_TEXCOORD1 "vs_TEXCOORD1" 
                                                      OpName vs_TEXCOORD2 "vs_TEXCOORD2" 
                                                      OpName vs_TEXCOORD3 "vs_TEXCOORD3" 
                                                      OpName vs_TEXCOORD4 "vs_TEXCOORD4" 
                                                      OpDecorate %11 Location 11 
                                                      OpDecorate %16 ArrayStride 16 
                                                      OpDecorate %17 ArrayStride 17 
                                                      OpDecorate %18 ArrayStride 18 
                                                      OpDecorate %19 ArrayStride 19 
                                                      OpMemberDecorate %20 0 Offset 20 
                                                      OpMemberDecorate %20 1 Offset 20 
                                                      OpMemberDecorate %20 2 Offset 20 
                                                      OpMemberDecorate %20 3 Offset 20 
                                                      OpMemberDecorate %20 4 Offset 20 
                                                      OpDecorate %20 Block 
                                                      OpDecorate %22 DescriptorSet 22 
                                                      OpDecorate %22 Binding 22 
                                                      OpMemberDecorate %73 0 BuiltIn 73 
                                                      OpMemberDecorate %73 1 BuiltIn 73 
                                                      OpMemberDecorate %73 2 BuiltIn 73 
                                                      OpDecorate %73 Block 
                                                      OpDecorate %85 Location 85 
                                                      OpDecorate vs_TEXCOORD0 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD0 Location 101 
                                                      OpDecorate %106 Location 106 
                                                      OpDecorate vs_TEXCOORD1 Location 137 
                                                      OpDecorate vs_TEXCOORD2 Location 143 
                                                      OpDecorate vs_TEXCOORD3 Location 190 
                                                      OpDecorate vs_TEXCOORD4 Location 200 
                                               %2 = OpTypeVoid 
                                               %3 = OpTypeFunction %2 
                                               %6 = OpTypeFloat 32 
                                               %7 = OpTypeVector %6 4 
                                               %8 = OpTypePointer Private %7 
                                Private f32_4* %9 = OpVariable Private 
                                              %10 = OpTypePointer Input %7 
                                 Input f32_4* %11 = OpVariable Input 
                                              %14 = OpTypeInt 32 0 
                                          u32 %15 = OpConstant 4 
                                              %16 = OpTypeArray %7 %15 
                                              %17 = OpTypeArray %7 %15 
                                              %18 = OpTypeArray %7 %15 
                                              %19 = OpTypeArray %7 %15 
                                              %20 = OpTypeStruct %16 %17 %18 %19 %7 
                                              %21 = OpTypePointer Uniform %20 
Uniform struct {f32_4[4]; f32_4[4]; f32_4[4]; f32_4[4]; f32_4;}* %22 = OpVariable Uniform 
                                              %23 = OpTypeInt 32 1 
                                          i32 %24 = OpConstant 0 
                                          i32 %25 = OpConstant 1 
                                              %26 = OpTypePointer Uniform %7 
                                          i32 %37 = OpConstant 2 
                               Private f32_4* %45 = OpVariable Private 
                                          i32 %47 = OpConstant 3 
                               Private f32_4* %51 = OpVariable Private 
                                          u32 %71 = OpConstant 1 
                                              %72 = OpTypeArray %6 %71 
                                              %73 = OpTypeStruct %7 %6 %72 
                                              %74 = OpTypePointer Output %73 
         Output struct {f32_4; f32; f32[1];}* %75 = OpVariable Output 
                                              %83 = OpTypePointer Output %7 
                                 Input f32_4* %85 = OpVariable Input 
                                              %86 = OpTypeVector %6 2 
                                          i32 %89 = OpConstant 4 
                                             %100 = OpTypePointer Output %86 
                       Output f32_2* vs_TEXCOORD0 = OpVariable Output 
                                             %104 = OpTypeVector %6 3 
                                             %105 = OpTypePointer Input %104 
                                Input f32_3* %106 = OpVariable Input 
                                         u32 %112 = OpConstant 0 
                                             %113 = OpTypePointer Private %6 
                                         u32 %126 = OpConstant 2 
                                Private f32* %128 = OpVariable Private 
                                             %136 = OpTypePointer Output %104 
                       Output f32_3* vs_TEXCOORD1 = OpVariable Output 
                       Output f32_3* vs_TEXCOORD2 = OpVariable Output 
                       Output f32_3* vs_TEXCOORD3 = OpVariable Output 
                       Output f32_4* vs_TEXCOORD4 = OpVariable Output 
                                         f32 %201 = OpConstant 3.674022E-40 
                                       f32_4 %202 = OpConstantComposite %201 %201 %201 %201 
                                             %203 = OpTypePointer Output %6 
                                          void %4 = OpFunction None %3 
                                               %5 = OpLabel 
                                        f32_4 %12 = OpLoad %11 
                                        f32_4 %13 = OpVectorShuffle %12 %12 1 1 1 1 
                               Uniform f32_4* %27 = OpAccessChain %22 %24 %25 
                                        f32_4 %28 = OpLoad %27 
                                        f32_4 %29 = OpFMul %13 %28 
                                                      OpStore %9 %29 
                               Uniform f32_4* %30 = OpAccessChain %22 %24 %24 
                                        f32_4 %31 = OpLoad %30 
                                        f32_4 %32 = OpLoad %11 
                                        f32_4 %33 = OpVectorShuffle %32 %32 0 0 0 0 
                                        f32_4 %34 = OpFMul %31 %33 
                                        f32_4 %35 = OpLoad %9 
                                        f32_4 %36 = OpFAdd %34 %35 
                                                      OpStore %9 %36 
                               Uniform f32_4* %38 = OpAccessChain %22 %24 %37 
                                        f32_4 %39 = OpLoad %38 
                                        f32_4 %40 = OpLoad %11 
                                        f32_4 %41 = OpVectorShuffle %40 %40 2 2 2 2 
                                        f32_4 %42 = OpFMul %39 %41 
                                        f32_4 %43 = OpLoad %9 
                                        f32_4 %44 = OpFAdd %42 %43 
                                                      OpStore %9 %44 
                                        f32_4 %46 = OpLoad %9 
                               Uniform f32_4* %48 = OpAccessChain %22 %24 %47 
                                        f32_4 %49 = OpLoad %48 
                                        f32_4 %50 = OpFAdd %46 %49 
                                                      OpStore %45 %50 
                                        f32_4 %52 = OpLoad %45 
                                        f32_4 %53 = OpVectorShuffle %52 %52 1 1 1 1 
                               Uniform f32_4* %54 = OpAccessChain %22 %37 %25 
                                        f32_4 %55 = OpLoad %54 
                                        f32_4 %56 = OpFMul %53 %55 
                                                      OpStore %51 %56 
                               Uniform f32_4* %57 = OpAccessChain %22 %37 %24 
                                        f32_4 %58 = OpLoad %57 
                                        f32_4 %59 = OpLoad %45 
                                        f32_4 %60 = OpVectorShuffle %59 %59 0 0 0 0 
                                        f32_4 %61 = OpFMul %58 %60 
                                        f32_4 %62 = OpLoad %51 
                                        f32_4 %63 = OpFAdd %61 %62 
                                                      OpStore %51 %63 
                               Uniform f32_4* %64 = OpAccessChain %22 %37 %37 
                                        f32_4 %65 = OpLoad %64 
                                        f32_4 %66 = OpLoad %45 
                                        f32_4 %67 = OpVectorShuffle %66 %66 2 2 2 2 
                                        f32_4 %68 = OpFMul %65 %67 
                                        f32_4 %69 = OpLoad %51 
                                        f32_4 %70 = OpFAdd %68 %69 
                                                      OpStore %51 %70 
                               Uniform f32_4* %76 = OpAccessChain %22 %37 %47 
                                        f32_4 %77 = OpLoad %76 
                                        f32_4 %78 = OpLoad %45 
                                        f32_4 %79 = OpVectorShuffle %78 %78 3 3 3 3 
                                        f32_4 %80 = OpFMul %77 %79 
                                        f32_4 %81 = OpLoad %51 
                                        f32_4 %82 = OpFAdd %80 %81 
                                Output f32_4* %84 = OpAccessChain %75 %24 
                                                      OpStore %84 %82 
                                        f32_4 %87 = OpLoad %85 
                                        f32_2 %88 = OpVectorShuffle %87 %87 0 1 
                               Uniform f32_4* %90 = OpAccessChain %22 %89 
                                        f32_4 %91 = OpLoad %90 
                                        f32_2 %92 = OpVectorShuffle %91 %91 0 1 
                                        f32_2 %93 = OpFMul %88 %92 
                               Uniform f32_4* %94 = OpAccessChain %22 %89 
                                        f32_4 %95 = OpLoad %94 
                                        f32_2 %96 = OpVectorShuffle %95 %95 2 3 
                                        f32_2 %97 = OpFAdd %93 %96 
                                        f32_4 %98 = OpLoad %45 
                                        f32_4 %99 = OpVectorShuffle %98 %97 4 5 2 3 
                                                      OpStore %45 %99 
                                       f32_4 %102 = OpLoad %45 
                                       f32_2 %103 = OpVectorShuffle %102 %102 0 1 
                                                      OpStore vs_TEXCOORD0 %103 
                                       f32_3 %107 = OpLoad %106 
                              Uniform f32_4* %108 = OpAccessChain %22 %25 %24 
                                       f32_4 %109 = OpLoad %108 
                                       f32_3 %110 = OpVectorShuffle %109 %109 0 1 2 
                                         f32 %111 = OpDot %107 %110 
                                Private f32* %114 = OpAccessChain %45 %112 
                                                      OpStore %114 %111 
                                       f32_3 %115 = OpLoad %106 
                              Uniform f32_4* %116 = OpAccessChain %22 %25 %25 
                                       f32_4 %117 = OpLoad %116 
                                       f32_3 %118 = OpVectorShuffle %117 %117 0 1 2 
                                         f32 %119 = OpDot %115 %118 
                                Private f32* %120 = OpAccessChain %45 %71 
                                                      OpStore %120 %119 
                                       f32_3 %121 = OpLoad %106 
                              Uniform f32_4* %122 = OpAccessChain %22 %25 %37 
                                       f32_4 %123 = OpLoad %122 
                                       f32_3 %124 = OpVectorShuffle %123 %123 0 1 2 
                                         f32 %125 = OpDot %121 %124 
                                Private f32* %127 = OpAccessChain %45 %126 
                                                      OpStore %127 %125 
                                       f32_4 %129 = OpLoad %45 
                                       f32_3 %130 = OpVectorShuffle %129 %129 0 1 2 
                                       f32_4 %131 = OpLoad %45 
                                       f32_3 %132 = OpVectorShuffle %131 %131 0 1 2 
                                         f32 %133 = OpDot %130 %132 
                                                      OpStore %128 %133 
                                         f32 %134 = OpLoad %128 
                                         f32 %135 = OpExtInst %1 32 %134 
                                                      OpStore %128 %135 
                                         f32 %138 = OpLoad %128 
                                       f32_3 %139 = OpCompositeConstruct %138 %138 %138 
                                       f32_4 %140 = OpLoad %45 
                                       f32_3 %141 = OpVectorShuffle %140 %140 0 1 2 
                                       f32_3 %142 = OpFMul %139 %141 
                                                      OpStore vs_TEXCOORD1 %142 
                              Uniform f32_4* %144 = OpAccessChain %22 %24 %47 
                                       f32_4 %145 = OpLoad %144 
                                       f32_3 %146 = OpVectorShuffle %145 %145 0 1 2 
                                       f32_4 %147 = OpLoad %11 
                                       f32_3 %148 = OpVectorShuffle %147 %147 3 3 3 
                                       f32_3 %149 = OpFMul %146 %148 
                                       f32_4 %150 = OpLoad %9 
                                       f32_3 %151 = OpVectorShuffle %150 %150 0 1 2 
                                       f32_3 %152 = OpFAdd %149 %151 
                                                      OpStore vs_TEXCOORD2 %152 
                              Uniform f32_4* %153 = OpAccessChain %22 %24 %47 
                                       f32_4 %154 = OpLoad %153 
                                       f32_4 %155 = OpLoad %11 
                                       f32_4 %156 = OpVectorShuffle %155 %155 3 3 3 3 
                                       f32_4 %157 = OpFMul %154 %156 
                                       f32_4 %158 = OpLoad %9 
                                       f32_4 %159 = OpFAdd %157 %158 
                                                      OpStore %9 %159 
                                       f32_4 %160 = OpLoad %9 
                                       f32_3 %161 = OpVectorShuffle %160 %160 1 1 1 
                              Uniform f32_4* %162 = OpAccessChain %22 %47 %25 
                                       f32_4 %163 = OpLoad %162 
                                       f32_3 %164 = OpVectorShuffle %163 %163 0 1 2 
                                       f32_3 %165 = OpFMul %161 %164 
                                       f32_4 %166 = OpLoad %45 
                                       f32_4 %167 = OpVectorShuffle %166 %165 4 5 6 3 
                                                      OpStore %45 %167 
                              Uniform f32_4* %168 = OpAccessChain %22 %47 %24 
                                       f32_4 %169 = OpLoad %168 
                                       f32_3 %170 = OpVectorShuffle %169 %169 0 1 2 
                                       f32_4 %171 = OpLoad %9 
                                       f32_3 %172 = OpVectorShuffle %171 %171 0 0 0 
                                       f32_3 %173 = OpFMul %170 %172 
                                       f32_4 %174 = OpLoad %45 
                                       f32_3 %175 = OpVectorShuffle %174 %174 0 1 2 
                                       f32_3 %176 = OpFAdd %173 %175 
                                       f32_4 %177 = OpLoad %45 
                                       f32_4 %178 = OpVectorShuffle %177 %176 4 5 6 3 
                                                      OpStore %45 %178 
                              Uniform f32_4* %179 = OpAccessChain %22 %47 %37 
                                       f32_4 %180 = OpLoad %179 
                                       f32_3 %181 = OpVectorShuffle %180 %180 0 1 2 
                                       f32_4 %182 = OpLoad %9 
                                       f32_3 %183 = OpVectorShuffle %182 %182 2 2 2 
                                       f32_3 %184 = OpFMul %181 %183 
                                       f32_4 %185 = OpLoad %45 
                                       f32_3 %186 = OpVectorShuffle %185 %185 0 1 2 
                                       f32_3 %187 = OpFAdd %184 %186 
                                       f32_4 %188 = OpLoad %9 
                                       f32_4 %189 = OpVectorShuffle %188 %187 4 5 6 3 
                                                      OpStore %9 %189 
                              Uniform f32_4* %191 = OpAccessChain %22 %47 %47 
                                       f32_4 %192 = OpLoad %191 
                                       f32_3 %193 = OpVectorShuffle %192 %192 0 1 2 
                                       f32_4 %194 = OpLoad %9 
                                       f32_3 %195 = OpVectorShuffle %194 %194 3 3 3 
                                       f32_3 %196 = OpFMul %193 %195 
                                       f32_4 %197 = OpLoad %9 
                                       f32_3 %198 = OpVectorShuffle %197 %197 0 1 2 
                                       f32_3 %199 = OpFAdd %196 %198 
                                                      OpStore vs_TEXCOORD3 %199 
                                                      OpStore vs_TEXCOORD4 %202 
                                 Output f32* %204 = OpAccessChain %75 %24 %71 
                                         f32 %205 = OpLoad %204 
                                         f32 %206 = OpFNegate %205 
                                 Output f32* %207 = OpAccessChain %75 %24 %71 
                                                      OpStore %207 %206 
                                                      OpReturn
                                                      OpFunctionEnd
; SPIR-V
; Version: 1.0
; Generator: Khronos Glslang Reference Front End; 6
; Bound: 238
; Schema: 0
                                                      OpCapability Shader 
                                               %1 = OpExtInstImport "GLSL.std.450" 
                                                      OpMemoryModel Logical GLSL450 
                                                      OpEntryPoint Fragment %4 "main" %11 %40 %210 %226 
                                                      OpExecutionMode %4 OriginUpperLeft 
                                                      OpName vs_TEXCOORD2 "vs_TEXCOORD2" 
                                                      OpName vs_TEXCOORD1 "vs_TEXCOORD1" 
                                                      OpName vs_TEXCOORD0 "vs_TEXCOORD0" 
                                                      OpDecorate vs_TEXCOORD2 Location 11 
                                                      OpDecorate %17 ArrayStride 17 
                                                      OpMemberDecorate %18 0 Offset 18 
                                                      OpMemberDecorate %18 1 RelaxedPrecision 
                                                      OpMemberDecorate %18 1 Offset 18 
                                                      OpMemberDecorate %18 2 Offset 18 
                                                      OpMemberDecorate %18 3 RelaxedPrecision 
                                                      OpMemberDecorate %18 3 Offset 18 
                                                      OpMemberDecorate %18 4 RelaxedPrecision 
                                                      OpMemberDecorate %18 4 Offset 18 
                                                      OpMemberDecorate %18 5 RelaxedPrecision 
                                                      OpMemberDecorate %18 5 Offset 18 
                                                      OpMemberDecorate %18 6 RelaxedPrecision 
                                                      OpMemberDecorate %18 6 Offset 18 
                                                      OpDecorate %18 Block 
                                                      OpDecorate %20 DescriptorSet 20 
                                                      OpDecorate %20 Binding 20 
                                                      OpDecorate %39 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD1 Location 40 
                                                      OpDecorate %47 RelaxedPrecision 
                                                      OpDecorate %48 RelaxedPrecision 
                                                      OpDecorate %50 RelaxedPrecision 
                                                      OpDecorate %51 RelaxedPrecision 
                                                      OpDecorate %54 RelaxedPrecision 
                                                      OpDecorate %59 RelaxedPrecision 
                                                      OpDecorate %61 RelaxedPrecision 
                                                      OpDecorate %63 RelaxedPrecision 
                                                      OpDecorate %67 RelaxedPrecision 
                                                      OpDecorate %68 RelaxedPrecision 
                                                      OpDecorate %70 RelaxedPrecision 
                                                      OpDecorate %73 RelaxedPrecision 
                                                      OpDecorate %74 RelaxedPrecision 
                                                      OpDecorate %75 RelaxedPrecision 
                                                      OpDecorate %76 RelaxedPrecision 
                                                      OpDecorate %78 RelaxedPrecision 
                                                      OpDecorate %79 RelaxedPrecision 
                                                      OpDecorate %81 RelaxedPrecision 
                                                      OpDecorate %83 RelaxedPrecision 
                                                      OpDecorate %84 RelaxedPrecision 
                                                      OpDecorate %86 RelaxedPrecision 
                                                      OpDecorate %87 RelaxedPrecision 
                                                      OpDecorate %88 RelaxedPrecision 
                                                      OpDecorate %89 RelaxedPrecision 
                                                      OpDecorate %90 RelaxedPrecision 
                                                      OpDecorate %91 RelaxedPrecision 
                                                      OpDecorate %93 RelaxedPrecision 
                                                      OpDecorate %94 RelaxedPrecision 
                                                      OpDecorate %95 RelaxedPrecision 
                                                      OpDecorate %97 RelaxedPrecision 
                                                      OpDecorate %98 RelaxedPrecision 
                                                      OpDecorate %101 RelaxedPrecision 
                                                      OpDecorate %102 RelaxedPrecision 
                                                      OpDecorate %105 RelaxedPrecision 
                                                      OpDecorate %107 RelaxedPrecision 
                                                      OpDecorate %109 RelaxedPrecision 
                                                      OpDecorate %111 RelaxedPrecision 
                                                      OpDecorate %113 RelaxedPrecision 
                                                      OpDecorate %114 RelaxedPrecision 
                                                      OpDecorate %117 RelaxedPrecision 
                                                      OpDecorate %118 RelaxedPrecision 
                                                      OpDecorate %119 RelaxedPrecision 
                                                      OpDecorate %121 RelaxedPrecision 
                                                      OpDecorate %122 RelaxedPrecision 
                                                      OpDecorate %125 RelaxedPrecision 
                                                      OpDecorate %126 RelaxedPrecision 
                                                      OpDecorate %127 RelaxedPrecision 
                                                      OpDecorate %163 DescriptorSet 163 
                                                      OpDecorate %163 Binding 163 
                                                      OpDecorate %167 DescriptorSet 167 
                                                      OpDecorate %167 Binding 167 
                                                      OpDecorate %179 DescriptorSet 179 
                                                      OpDecorate %179 Binding 179 
                                                      OpDecorate %181 DescriptorSet 181 
                                                      OpDecorate %181 Binding 181 
                                                      OpDecorate %195 RelaxedPrecision 
                                                      OpDecorate %199 RelaxedPrecision 
                                                      OpDecorate %200 RelaxedPrecision 
                                                      OpDecorate %203 RelaxedPrecision 
                                                      OpDecorate %204 RelaxedPrecision 
                                                      OpDecorate %204 DescriptorSet 204 
                                                      OpDecorate %204 Binding 204 
                                                      OpDecorate %205 RelaxedPrecision 
                                                      OpDecorate %206 RelaxedPrecision 
                                                      OpDecorate %206 DescriptorSet 206 
                                                      OpDecorate %206 Binding 206 
                                                      OpDecorate %207 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD0 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD0 Location 210 
                                                      OpDecorate %211 RelaxedPrecision 
                                                      OpDecorate %212 RelaxedPrecision 
                                                      OpDecorate %213 RelaxedPrecision 
                                                      OpDecorate %214 RelaxedPrecision 
                                                      OpDecorate %216 RelaxedPrecision 
                                                      OpDecorate %217 RelaxedPrecision 
                                                      OpDecorate %218 RelaxedPrecision 
                                                      OpDecorate %219 RelaxedPrecision 
                                                      OpDecorate %220 RelaxedPrecision 
                                                      OpDecorate %221 RelaxedPrecision 
                                                      OpDecorate %222 RelaxedPrecision 
                                                      OpDecorate %223 RelaxedPrecision 
                                                      OpDecorate %224 RelaxedPrecision 
                                                      OpDecorate %226 RelaxedPrecision 
                                                      OpDecorate %226 Location 226 
                                                      OpDecorate %227 RelaxedPrecision 
                                                      OpDecorate %228 RelaxedPrecision 
                                                      OpDecorate %229 RelaxedPrecision 
                                                      OpDecorate %230 RelaxedPrecision 
                                                      OpDecorate %234 RelaxedPrecision 
                                               %2 = OpTypeVoid 
                                               %3 = OpTypeFunction %2 
                                               %6 = OpTypeFloat 32 
                                               %7 = OpTypeVector %6 3 
                                               %8 = OpTypePointer Private %7 
                                Private f32_3* %9 = OpVariable Private 
                                              %10 = OpTypePointer Input %7 
                        Input f32_3* vs_TEXCOORD2 = OpVariable Input 
                                              %14 = OpTypeVector %6 4 
                                              %15 = OpTypeInt 32 0 
                                          u32 %16 = OpConstant 4 
                                              %17 = OpTypeArray %14 %16 
                                              %18 = OpTypeStruct %14 %14 %17 %14 %14 %6 %6 
                                              %19 = OpTypePointer Uniform %18 
Uniform struct {f32_4; f32_4; f32_4[4]; f32_4; f32_4; f32; f32;}* %20 = OpVariable Uniform 
                                              %21 = OpTypeInt 32 1 
                                          i32 %22 = OpConstant 0 
                                              %23 = OpTypePointer Uniform %14 
                                              %28 = OpTypePointer Private %6 
                                 Private f32* %29 = OpVariable Private 
                               Private f32_3* %39 = OpVariable Private 
                        Input f32_3* vs_TEXCOORD1 = OpVariable Input 
                                          u32 %44 = OpConstant 0 
                                          f32 %60 = OpConstant 3.674022E-40 
                                 Private f32* %63 = OpVariable Private 
                                          i32 %64 = OpConstant 6 
                                              %65 = OpTypePointer Uniform %6 
                                          f32 %69 = OpConstant 3.674022E-40 
                                          i32 %71 = OpConstant 5 
                                 Private f32* %81 = OpVariable Private 
                                          f32 %92 = OpConstant 3.674022E-40 
                                         f32 %106 = OpConstant 3.674022E-40 
                                         f32 %108 = OpConstant 3.674022E-40 
                                         i32 %123 = OpConstant 4 
                                         i32 %130 = OpConstant 2 
                                         i32 %131 = OpConstant 1 
                                         i32 %153 = OpConstant 3 
                                             %161 = OpTypeImage %6 Cube 0 0 0 1 Unknown 
                                             %162 = OpTypePointer UniformConstant %161 
      UniformConstant read_only TextureCube* %163 = OpVariable UniformConstant 
                                             %165 = OpTypeSampler 
                                             %166 = OpTypePointer UniformConstant %165 
                    UniformConstant sampler* %167 = OpVariable UniformConstant 
                                             %169 = OpTypeSampledImage %161 
                                         u32 %173 = OpConstant 3 
                                Private f32* %176 = OpVariable Private 
                                             %177 = OpTypeImage %6 Dim2D 0 0 0 1 Unknown 
                                             %178 = OpTypePointer UniformConstant %177 
        UniformConstant read_only Texture2D* %179 = OpVariable UniformConstant 
                    UniformConstant sampler* %181 = OpVariable UniformConstant 
                                             %183 = OpTypeSampledImage %177 
                                             %186 = OpTypeVector %6 2 
                              Private f32_3* %195 = OpVariable Private 
                                             %202 = OpTypePointer Private %14 
                              Private f32_4* %203 = OpVariable Private 
        UniformConstant read_only Texture2D* %204 = OpVariable UniformConstant 
                    UniformConstant sampler* %206 = OpVariable UniformConstant 
                                             %209 = OpTypePointer Input %186 
                        Input f32_2* vs_TEXCOORD0 = OpVariable Input 
                              Private f32_4* %213 = OpVariable Private 
                                             %225 = OpTypePointer Output %14 
                               Output f32_4* %226 = OpVariable Output 
                                             %235 = OpTypePointer Output %6 
                                          void %4 = OpFunction None %3 
                                               %5 = OpLabel 
                                        f32_3 %12 = OpLoad vs_TEXCOORD2 
                                        f32_3 %13 = OpFNegate %12 
                               Uniform f32_4* %24 = OpAccessChain %20 %22 
                                        f32_4 %25 = OpLoad %24 
                                        f32_3 %26 = OpVectorShuffle %25 %25 0 1 2 
                                        f32_3 %27 = OpFAdd %13 %26 
                                                      OpStore %9 %27 
                                        f32_3 %30 = OpLoad %9 
                                        f32_3 %31 = OpLoad %9 
                                          f32 %32 = OpDot %30 %31 
                                                      OpStore %29 %32 
                                          f32 %33 = OpLoad %29 
                                          f32 %34 = OpExtInst %1 32 %33 
                                                      OpStore %29 %34 
                                          f32 %35 = OpLoad %29 
                                        f32_3 %36 = OpCompositeConstruct %35 %35 %35 
                                        f32_3 %37 = OpLoad %9 
                                        f32_3 %38 = OpFMul %36 %37 
                                                      OpStore %9 %38 
                                        f32_3 %41 = OpLoad vs_TEXCOORD1 
                                        f32_3 %42 = OpLoad vs_TEXCOORD1 
                                          f32 %43 = OpDot %41 %42 
                                 Private f32* %45 = OpAccessChain %39 %44 
                                                      OpStore %45 %43 
                                 Private f32* %46 = OpAccessChain %39 %44 
                                          f32 %47 = OpLoad %46 
                                          f32 %48 = OpExtInst %1 32 %47 
                                 Private f32* %49 = OpAccessChain %39 %44 
                                                      OpStore %49 %48 
                                        f32_3 %50 = OpLoad %39 
                                        f32_3 %51 = OpVectorShuffle %50 %50 0 0 0 
                                        f32_3 %52 = OpLoad vs_TEXCOORD1 
                                        f32_3 %53 = OpFMul %51 %52 
                                                      OpStore %39 %53 
                                        f32_3 %54 = OpLoad %39 
                                        f32_3 %55 = OpLoad %9 
                                          f32 %56 = OpDot %54 %55 
                                 Private f32* %57 = OpAccessChain %39 %44 
                                                      OpStore %57 %56 
                                 Private f32* %58 = OpAccessChain %39 %44 
                                          f32 %59 = OpLoad %58 
                                          f32 %61 = OpExtInst %1 40 %59 %60 
                                 Private f32* %62 = OpAccessChain %39 %44 
                                                      OpStore %62 %61 
                                 Uniform f32* %66 = OpAccessChain %20 %64 
                                          f32 %67 = OpLoad %66 
                                          f32 %68 = OpFNegate %67 
                                          f32 %70 = OpFMul %68 %69 
                                 Uniform f32* %72 = OpAccessChain %20 %71 
                                          f32 %73 = OpLoad %72 
                                          f32 %74 = OpFAdd %70 %73 
                                                      OpStore %63 %74 
                                          f32 %75 = OpLoad %63 
                                          f32 %76 = OpFNegate %75 
                                 Private f32* %77 = OpAccessChain %39 %44 
                                          f32 %78 = OpLoad %77 
                                          f32 %79 = OpFAdd %76 %78 
                                 Private f32* %80 = OpAccessChain %39 %44 
                                                      OpStore %80 %79 
                                 Uniform f32* %82 = OpAccessChain %20 %64 
                                          f32 %83 = OpLoad %82 
                                          f32 %84 = OpFMul %83 %69 
                                 Uniform f32* %85 = OpAccessChain %20 %71 
                                          f32 %86 = OpLoad %85 
                                          f32 %87 = OpFAdd %84 %86 
                                                      OpStore %81 %87 
                                          f32 %88 = OpLoad %63 
                                          f32 %89 = OpFNegate %88 
                                          f32 %90 = OpLoad %81 
                                          f32 %91 = OpFAdd %89 %90 
                                                      OpStore %63 %91 
                                          f32 %93 = OpLoad %63 
                                          f32 %94 = OpFDiv %92 %93 
                                                      OpStore %63 %94 
                                          f32 %95 = OpLoad %63 
                                 Private f32* %96 = OpAccessChain %39 %44 
                                          f32 %97 = OpLoad %96 
                                          f32 %98 = OpFMul %95 %97 
                                 Private f32* %99 = OpAccessChain %39 %44 
                                                      OpStore %99 %98 
                                Private f32* %100 = OpAccessChain %39 %44 
                                         f32 %101 = OpLoad %100 
                                         f32 %102 = OpExtInst %1 43 %101 %60 %92 
                                Private f32* %103 = OpAccessChain %39 %44 
                                                      OpStore %103 %102 
                                Private f32* %104 = OpAccessChain %39 %44 
                                         f32 %105 = OpLoad %104 
                                         f32 %107 = OpFMul %105 %106 
                                         f32 %109 = OpFAdd %107 %108 
                                                      OpStore %63 %109 
                                Private f32* %110 = OpAccessChain %39 %44 
                                         f32 %111 = OpLoad %110 
                                Private f32* %112 = OpAccessChain %39 %44 
                                         f32 %113 = OpLoad %112 
                                         f32 %114 = OpFMul %111 %113 
                                Private f32* %115 = OpAccessChain %39 %44 
                                                      OpStore %115 %114 
                                Private f32* %116 = OpAccessChain %39 %44 
                                         f32 %117 = OpLoad %116 
                                         f32 %118 = OpLoad %63 
                                         f32 %119 = OpFMul %117 %118 
                                Private f32* %120 = OpAccessChain %39 %44 
                                                      OpStore %120 %119 
                                       f32_3 %121 = OpLoad %39 
                                       f32_3 %122 = OpVectorShuffle %121 %121 0 0 0 
                              Uniform f32_4* %124 = OpAccessChain %20 %123 
                                       f32_4 %125 = OpLoad %124 
                                       f32_3 %126 = OpVectorShuffle %125 %125 0 1 2 
                                       f32_3 %127 = OpFMul %122 %126 
                                                      OpStore %39 %127 
                                       f32_3 %128 = OpLoad vs_TEXCOORD2 
                                       f32_3 %129 = OpVectorShuffle %128 %128 1 1 1 
                              Uniform f32_4* %132 = OpAccessChain %20 %130 %131 
                                       f32_4 %133 = OpLoad %132 
                                       f32_3 %134 = OpVectorShuffle %133 %133 0 1 2 
                                       f32_3 %135 = OpFMul %129 %134 
                                                      OpStore %9 %135 
                              Uniform f32_4* %136 = OpAccessChain %20 %130 %22 
                                       f32_4 %137 = OpLoad %136 
                                       f32_3 %138 = OpVectorShuffle %137 %137 0 1 2 
                                       f32_3 %139 = OpLoad vs_TEXCOORD2 
                                       f32_3 %140 = OpVectorShuffle %139 %139 0 0 0 
                                       f32_3 %141 = OpFMul %138 %140 
                                       f32_3 %142 = OpLoad %9 
                                       f32_3 %143 = OpFAdd %141 %142 
                                                      OpStore %9 %143 
                              Uniform f32_4* %144 = OpAccessChain %20 %130 %130 
                                       f32_4 %145 = OpLoad %144 
                                       f32_3 %146 = OpVectorShuffle %145 %145 0 1 2 
                                       f32_3 %147 = OpLoad vs_TEXCOORD2 
                                       f32_3 %148 = OpVectorShuffle %147 %147 2 2 2 
                                       f32_3 %149 = OpFMul %146 %148 
                                       f32_3 %150 = OpLoad %9 
                                       f32_3 %151 = OpFAdd %149 %150 
                                                      OpStore %9 %151 
                                       f32_3 %152 = OpLoad %9 
                              Uniform f32_4* %154 = OpAccessChain %20 %130 %153 
                                       f32_4 %155 = OpLoad %154 
                                       f32_3 %156 = OpVectorShuffle %155 %155 0 1 2 
                                       f32_3 %157 = OpFAdd %152 %156 
                                                      OpStore %9 %157 
                                       f32_3 %158 = OpLoad %9 
                                       f32_3 %159 = OpLoad %9 
                                         f32 %160 = OpDot %158 %159 
                                                      OpStore %29 %160 
                       read_only TextureCube %164 = OpLoad %163 
                                     sampler %168 = OpLoad %167 
                read_only TextureCubeSampled %170 = OpSampledImage %164 %168 
                                       f32_3 %171 = OpLoad %9 
                                       f32_4 %172 = OpImageSampleImplicitLod %170 %171 
                                         f32 %174 = OpCompositeExtract %172 3 
                                Private f32* %175 = OpAccessChain %9 %44 
                                                      OpStore %175 %174 
                         read_only Texture2D %180 = OpLoad %179 
                                     sampler %182 = OpLoad %181 
                  read_only Texture2DSampled %184 = OpSampledImage %180 %182 
                                         f32 %185 = OpLoad %29 
                                       f32_2 %187 = OpCompositeConstruct %185 %185 
                                       f32_4 %188 = OpImageSampleImplicitLod %184 %187 
                                         f32 %189 = OpCompositeExtract %188 0 
                                                      OpStore %176 %189 
                                Private f32* %190 = OpAccessChain %9 %44 
                                         f32 %191 = OpLoad %190 
                                         f32 %192 = OpLoad %176 
                                         f32 %193 = OpFMul %191 %192 
                                Private f32* %194 = OpAccessChain %9 %44 
                                                      OpStore %194 %193 
                                       f32_3 %196 = OpLoad %9 
                                       f32_3 %197 = OpVectorShuffle %196 %196 0 0 0 
                              Uniform f32_4* %198 = OpAccessChain %20 %131 
                                       f32_4 %199 = OpLoad %198 
                                       f32_3 %200 = OpVectorShuffle %199 %199 0 1 2 
                                       f32_3 %201 = OpFMul %197 %200 
                                                      OpStore %195 %201 
                         read_only Texture2D %205 = OpLoad %204 
                                     sampler %207 = OpLoad %206 
                  read_only Texture2DSampled %208 = OpSampledImage %205 %207 
                                       f32_2 %211 = OpLoad vs_TEXCOORD0 
                                       f32_4 %212 = OpImageSampleImplicitLod %208 %211 
                                                      OpStore %203 %212 
                                       f32_4 %214 = OpLoad %203 
                              Uniform f32_4* %215 = OpAccessChain %20 %153 
                                       f32_4 %216 = OpLoad %215 
                                       f32_4 %217 = OpFMul %214 %216 
                                                      OpStore %213 %217 
                                       f32_3 %218 = OpLoad %195 
                                       f32_4 %219 = OpLoad %213 
                                       f32_3 %220 = OpVectorShuffle %219 %219 0 1 2 
                                       f32_3 %221 = OpFMul %218 %220 
                                                      OpStore %195 %221 
                                       f32_3 %222 = OpLoad %39 
                                       f32_3 %223 = OpLoad %195 
                                       f32_3 %224 = OpFMul %222 %223 
                                                      OpStore %39 %224 
                                       f32_4 %227 = OpLoad %213 
                                       f32_3 %228 = OpVectorShuffle %227 %227 3 3 3 
                                       f32_3 %229 = OpLoad %39 
                                       f32_3 %230 = OpFMul %228 %229 
                                       f32_4 %231 = OpLoad %226 
                                       f32_4 %232 = OpVectorShuffle %231 %230 4 5 6 3 
                                                      OpStore %226 %232 
                                Private f32* %233 = OpAccessChain %213 %173 
                                         f32 %234 = OpLoad %233 
                                 Output f32* %236 = OpAccessChain %226 %173 
                                                      OpStore %236 %234 
                                                      OpReturn
                                                      OpFunctionEnd
"
}
SubProgram "vulkan hw_tier01 " {
Keywords { "POINT_COOKIE" }
"; SPIR-V
; Version: 1.0
; Generator: Khronos Glslang Reference Front End; 6
; Bound: 209
; Schema: 0
                                                      OpCapability Shader 
                                               %1 = OpExtInstImport "GLSL.std.450" 
                                                      OpMemoryModel Logical GLSL450 
                                                      OpEntryPoint Vertex %4 "main" %11 %75 %85 %101 %106 %137 %143 %190 %200 
                                                      OpName vs_TEXCOORD0 "vs_TEXCOORD0" 
                                                      OpName vs_TEXCOORD1 "vs_TEXCOORD1" 
                                                      OpName vs_TEXCOORD2 "vs_TEXCOORD2" 
                                                      OpName vs_TEXCOORD3 "vs_TEXCOORD3" 
                                                      OpName vs_TEXCOORD4 "vs_TEXCOORD4" 
                                                      OpDecorate %11 Location 11 
                                                      OpDecorate %16 ArrayStride 16 
                                                      OpDecorate %17 ArrayStride 17 
                                                      OpDecorate %18 ArrayStride 18 
                                                      OpDecorate %19 ArrayStride 19 
                                                      OpMemberDecorate %20 0 Offset 20 
                                                      OpMemberDecorate %20 1 Offset 20 
                                                      OpMemberDecorate %20 2 Offset 20 
                                                      OpMemberDecorate %20 3 Offset 20 
                                                      OpMemberDecorate %20 4 Offset 20 
                                                      OpDecorate %20 Block 
                                                      OpDecorate %22 DescriptorSet 22 
                                                      OpDecorate %22 Binding 22 
                                                      OpMemberDecorate %73 0 BuiltIn 73 
                                                      OpMemberDecorate %73 1 BuiltIn 73 
                                                      OpMemberDecorate %73 2 BuiltIn 73 
                                                      OpDecorate %73 Block 
                                                      OpDecorate %85 Location 85 
                                                      OpDecorate vs_TEXCOORD0 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD0 Location 101 
                                                      OpDecorate %106 Location 106 
                                                      OpDecorate vs_TEXCOORD1 Location 137 
                                                      OpDecorate vs_TEXCOORD2 Location 143 
                                                      OpDecorate vs_TEXCOORD3 Location 190 
                                                      OpDecorate vs_TEXCOORD4 Location 200 
                                               %2 = OpTypeVoid 
                                               %3 = OpTypeFunction %2 
                                               %6 = OpTypeFloat 32 
                                               %7 = OpTypeVector %6 4 
                                               %8 = OpTypePointer Private %7 
                                Private f32_4* %9 = OpVariable Private 
                                              %10 = OpTypePointer Input %7 
                                 Input f32_4* %11 = OpVariable Input 
                                              %14 = OpTypeInt 32 0 
                                          u32 %15 = OpConstant 4 
                                              %16 = OpTypeArray %7 %15 
                                              %17 = OpTypeArray %7 %15 
                                              %18 = OpTypeArray %7 %15 
                                              %19 = OpTypeArray %7 %15 
                                              %20 = OpTypeStruct %16 %17 %18 %19 %7 
                                              %21 = OpTypePointer Uniform %20 
Uniform struct {f32_4[4]; f32_4[4]; f32_4[4]; f32_4[4]; f32_4;}* %22 = OpVariable Uniform 
                                              %23 = OpTypeInt 32 1 
                                          i32 %24 = OpConstant 0 
                                          i32 %25 = OpConstant 1 
                                              %26 = OpTypePointer Uniform %7 
                                          i32 %37 = OpConstant 2 
                               Private f32_4* %45 = OpVariable Private 
                                          i32 %47 = OpConstant 3 
                               Private f32_4* %51 = OpVariable Private 
                                          u32 %71 = OpConstant 1 
                                              %72 = OpTypeArray %6 %71 
                                              %73 = OpTypeStruct %7 %6 %72 
                                              %74 = OpTypePointer Output %73 
         Output struct {f32_4; f32; f32[1];}* %75 = OpVariable Output 
                                              %83 = OpTypePointer Output %7 
                                 Input f32_4* %85 = OpVariable Input 
                                              %86 = OpTypeVector %6 2 
                                          i32 %89 = OpConstant 4 
                                             %100 = OpTypePointer Output %86 
                       Output f32_2* vs_TEXCOORD0 = OpVariable Output 
                                             %104 = OpTypeVector %6 3 
                                             %105 = OpTypePointer Input %104 
                                Input f32_3* %106 = OpVariable Input 
                                         u32 %112 = OpConstant 0 
                                             %113 = OpTypePointer Private %6 
                                         u32 %126 = OpConstant 2 
                                Private f32* %128 = OpVariable Private 
                                             %136 = OpTypePointer Output %104 
                       Output f32_3* vs_TEXCOORD1 = OpVariable Output 
                       Output f32_3* vs_TEXCOORD2 = OpVariable Output 
                       Output f32_3* vs_TEXCOORD3 = OpVariable Output 
                       Output f32_4* vs_TEXCOORD4 = OpVariable Output 
                                         f32 %201 = OpConstant 3.674022E-40 
                                       f32_4 %202 = OpConstantComposite %201 %201 %201 %201 
                                             %203 = OpTypePointer Output %6 
                                          void %4 = OpFunction None %3 
                                               %5 = OpLabel 
                                        f32_4 %12 = OpLoad %11 
                                        f32_4 %13 = OpVectorShuffle %12 %12 1 1 1 1 
                               Uniform f32_4* %27 = OpAccessChain %22 %24 %25 
                                        f32_4 %28 = OpLoad %27 
                                        f32_4 %29 = OpFMul %13 %28 
                                                      OpStore %9 %29 
                               Uniform f32_4* %30 = OpAccessChain %22 %24 %24 
                                        f32_4 %31 = OpLoad %30 
                                        f32_4 %32 = OpLoad %11 
                                        f32_4 %33 = OpVectorShuffle %32 %32 0 0 0 0 
                                        f32_4 %34 = OpFMul %31 %33 
                                        f32_4 %35 = OpLoad %9 
                                        f32_4 %36 = OpFAdd %34 %35 
                                                      OpStore %9 %36 
                               Uniform f32_4* %38 = OpAccessChain %22 %24 %37 
                                        f32_4 %39 = OpLoad %38 
                                        f32_4 %40 = OpLoad %11 
                                        f32_4 %41 = OpVectorShuffle %40 %40 2 2 2 2 
                                        f32_4 %42 = OpFMul %39 %41 
                                        f32_4 %43 = OpLoad %9 
                                        f32_4 %44 = OpFAdd %42 %43 
                                                      OpStore %9 %44 
                                        f32_4 %46 = OpLoad %9 
                               Uniform f32_4* %48 = OpAccessChain %22 %24 %47 
                                        f32_4 %49 = OpLoad %48 
                                        f32_4 %50 = OpFAdd %46 %49 
                                                      OpStore %45 %50 
                                        f32_4 %52 = OpLoad %45 
                                        f32_4 %53 = OpVectorShuffle %52 %52 1 1 1 1 
                               Uniform f32_4* %54 = OpAccessChain %22 %37 %25 
                                        f32_4 %55 = OpLoad %54 
                                        f32_4 %56 = OpFMul %53 %55 
                                                      OpStore %51 %56 
                               Uniform f32_4* %57 = OpAccessChain %22 %37 %24 
                                        f32_4 %58 = OpLoad %57 
                                        f32_4 %59 = OpLoad %45 
                                        f32_4 %60 = OpVectorShuffle %59 %59 0 0 0 0 
                                        f32_4 %61 = OpFMul %58 %60 
                                        f32_4 %62 = OpLoad %51 
                                        f32_4 %63 = OpFAdd %61 %62 
                                                      OpStore %51 %63 
                               Uniform f32_4* %64 = OpAccessChain %22 %37 %37 
                                        f32_4 %65 = OpLoad %64 
                                        f32_4 %66 = OpLoad %45 
                                        f32_4 %67 = OpVectorShuffle %66 %66 2 2 2 2 
                                        f32_4 %68 = OpFMul %65 %67 
                                        f32_4 %69 = OpLoad %51 
                                        f32_4 %70 = OpFAdd %68 %69 
                                                      OpStore %51 %70 
                               Uniform f32_4* %76 = OpAccessChain %22 %37 %47 
                                        f32_4 %77 = OpLoad %76 
                                        f32_4 %78 = OpLoad %45 
                                        f32_4 %79 = OpVectorShuffle %78 %78 3 3 3 3 
                                        f32_4 %80 = OpFMul %77 %79 
                                        f32_4 %81 = OpLoad %51 
                                        f32_4 %82 = OpFAdd %80 %81 
                                Output f32_4* %84 = OpAccessChain %75 %24 
                                                      OpStore %84 %82 
                                        f32_4 %87 = OpLoad %85 
                                        f32_2 %88 = OpVectorShuffle %87 %87 0 1 
                               Uniform f32_4* %90 = OpAccessChain %22 %89 
                                        f32_4 %91 = OpLoad %90 
                                        f32_2 %92 = OpVectorShuffle %91 %91 0 1 
                                        f32_2 %93 = OpFMul %88 %92 
                               Uniform f32_4* %94 = OpAccessChain %22 %89 
                                        f32_4 %95 = OpLoad %94 
                                        f32_2 %96 = OpVectorShuffle %95 %95 2 3 
                                        f32_2 %97 = OpFAdd %93 %96 
                                        f32_4 %98 = OpLoad %45 
                                        f32_4 %99 = OpVectorShuffle %98 %97 4 5 2 3 
                                                      OpStore %45 %99 
                                       f32_4 %102 = OpLoad %45 
                                       f32_2 %103 = OpVectorShuffle %102 %102 0 1 
                                                      OpStore vs_TEXCOORD0 %103 
                                       f32_3 %107 = OpLoad %106 
                              Uniform f32_4* %108 = OpAccessChain %22 %25 %24 
                                       f32_4 %109 = OpLoad %108 
                                       f32_3 %110 = OpVectorShuffle %109 %109 0 1 2 
                                         f32 %111 = OpDot %107 %110 
                                Private f32* %114 = OpAccessChain %45 %112 
                                                      OpStore %114 %111 
                                       f32_3 %115 = OpLoad %106 
                              Uniform f32_4* %116 = OpAccessChain %22 %25 %25 
                                       f32_4 %117 = OpLoad %116 
                                       f32_3 %118 = OpVectorShuffle %117 %117 0 1 2 
                                         f32 %119 = OpDot %115 %118 
                                Private f32* %120 = OpAccessChain %45 %71 
                                                      OpStore %120 %119 
                                       f32_3 %121 = OpLoad %106 
                              Uniform f32_4* %122 = OpAccessChain %22 %25 %37 
                                       f32_4 %123 = OpLoad %122 
                                       f32_3 %124 = OpVectorShuffle %123 %123 0 1 2 
                                         f32 %125 = OpDot %121 %124 
                                Private f32* %127 = OpAccessChain %45 %126 
                                                      OpStore %127 %125 
                                       f32_4 %129 = OpLoad %45 
                                       f32_3 %130 = OpVectorShuffle %129 %129 0 1 2 
                                       f32_4 %131 = OpLoad %45 
                                       f32_3 %132 = OpVectorShuffle %131 %131 0 1 2 
                                         f32 %133 = OpDot %130 %132 
                                                      OpStore %128 %133 
                                         f32 %134 = OpLoad %128 
                                         f32 %135 = OpExtInst %1 32 %134 
                                                      OpStore %128 %135 
                                         f32 %138 = OpLoad %128 
                                       f32_3 %139 = OpCompositeConstruct %138 %138 %138 
                                       f32_4 %140 = OpLoad %45 
                                       f32_3 %141 = OpVectorShuffle %140 %140 0 1 2 
                                       f32_3 %142 = OpFMul %139 %141 
                                                      OpStore vs_TEXCOORD1 %142 
                              Uniform f32_4* %144 = OpAccessChain %22 %24 %47 
                                       f32_4 %145 = OpLoad %144 
                                       f32_3 %146 = OpVectorShuffle %145 %145 0 1 2 
                                       f32_4 %147 = OpLoad %11 
                                       f32_3 %148 = OpVectorShuffle %147 %147 3 3 3 
                                       f32_3 %149 = OpFMul %146 %148 
                                       f32_4 %150 = OpLoad %9 
                                       f32_3 %151 = OpVectorShuffle %150 %150 0 1 2 
                                       f32_3 %152 = OpFAdd %149 %151 
                                                      OpStore vs_TEXCOORD2 %152 
                              Uniform f32_4* %153 = OpAccessChain %22 %24 %47 
                                       f32_4 %154 = OpLoad %153 
                                       f32_4 %155 = OpLoad %11 
                                       f32_4 %156 = OpVectorShuffle %155 %155 3 3 3 3 
                                       f32_4 %157 = OpFMul %154 %156 
                                       f32_4 %158 = OpLoad %9 
                                       f32_4 %159 = OpFAdd %157 %158 
                                                      OpStore %9 %159 
                                       f32_4 %160 = OpLoad %9 
                                       f32_3 %161 = OpVectorShuffle %160 %160 1 1 1 
                              Uniform f32_4* %162 = OpAccessChain %22 %47 %25 
                                       f32_4 %163 = OpLoad %162 
                                       f32_3 %164 = OpVectorShuffle %163 %163 0 1 2 
                                       f32_3 %165 = OpFMul %161 %164 
                                       f32_4 %166 = OpLoad %45 
                                       f32_4 %167 = OpVectorShuffle %166 %165 4 5 6 3 
                                                      OpStore %45 %167 
                              Uniform f32_4* %168 = OpAccessChain %22 %47 %24 
                                       f32_4 %169 = OpLoad %168 
                                       f32_3 %170 = OpVectorShuffle %169 %169 0 1 2 
                                       f32_4 %171 = OpLoad %9 
                                       f32_3 %172 = OpVectorShuffle %171 %171 0 0 0 
                                       f32_3 %173 = OpFMul %170 %172 
                                       f32_4 %174 = OpLoad %45 
                                       f32_3 %175 = OpVectorShuffle %174 %174 0 1 2 
                                       f32_3 %176 = OpFAdd %173 %175 
                                       f32_4 %177 = OpLoad %45 
                                       f32_4 %178 = OpVectorShuffle %177 %176 4 5 6 3 
                                                      OpStore %45 %178 
                              Uniform f32_4* %179 = OpAccessChain %22 %47 %37 
                                       f32_4 %180 = OpLoad %179 
                                       f32_3 %181 = OpVectorShuffle %180 %180 0 1 2 
                                       f32_4 %182 = OpLoad %9 
                                       f32_3 %183 = OpVectorShuffle %182 %182 2 2 2 
                                       f32_3 %184 = OpFMul %181 %183 
                                       f32_4 %185 = OpLoad %45 
                                       f32_3 %186 = OpVectorShuffle %185 %185 0 1 2 
                                       f32_3 %187 = OpFAdd %184 %186 
                                       f32_4 %188 = OpLoad %9 
                                       f32_4 %189 = OpVectorShuffle %188 %187 4 5 6 3 
                                                      OpStore %9 %189 
                              Uniform f32_4* %191 = OpAccessChain %22 %47 %47 
                                       f32_4 %192 = OpLoad %191 
                                       f32_3 %193 = OpVectorShuffle %192 %192 0 1 2 
                                       f32_4 %194 = OpLoad %9 
                                       f32_3 %195 = OpVectorShuffle %194 %194 3 3 3 
                                       f32_3 %196 = OpFMul %193 %195 
                                       f32_4 %197 = OpLoad %9 
                                       f32_3 %198 = OpVectorShuffle %197 %197 0 1 2 
                                       f32_3 %199 = OpFAdd %196 %198 
                                                      OpStore vs_TEXCOORD3 %199 
                                                      OpStore vs_TEXCOORD4 %202 
                                 Output f32* %204 = OpAccessChain %75 %24 %71 
                                         f32 %205 = OpLoad %204 
                                         f32 %206 = OpFNegate %205 
                                 Output f32* %207 = OpAccessChain %75 %24 %71 
                                                      OpStore %207 %206 
                                                      OpReturn
                                                      OpFunctionEnd
; SPIR-V
; Version: 1.0
; Generator: Khronos Glslang Reference Front End; 6
; Bound: 238
; Schema: 0
                                                      OpCapability Shader 
                                               %1 = OpExtInstImport "GLSL.std.450" 
                                                      OpMemoryModel Logical GLSL450 
                                                      OpEntryPoint Fragment %4 "main" %11 %40 %210 %226 
                                                      OpExecutionMode %4 OriginUpperLeft 
                                                      OpName vs_TEXCOORD2 "vs_TEXCOORD2" 
                                                      OpName vs_TEXCOORD1 "vs_TEXCOORD1" 
                                                      OpName vs_TEXCOORD0 "vs_TEXCOORD0" 
                                                      OpDecorate vs_TEXCOORD2 Location 11 
                                                      OpDecorate %17 ArrayStride 17 
                                                      OpMemberDecorate %18 0 Offset 18 
                                                      OpMemberDecorate %18 1 RelaxedPrecision 
                                                      OpMemberDecorate %18 1 Offset 18 
                                                      OpMemberDecorate %18 2 Offset 18 
                                                      OpMemberDecorate %18 3 RelaxedPrecision 
                                                      OpMemberDecorate %18 3 Offset 18 
                                                      OpMemberDecorate %18 4 RelaxedPrecision 
                                                      OpMemberDecorate %18 4 Offset 18 
                                                      OpMemberDecorate %18 5 RelaxedPrecision 
                                                      OpMemberDecorate %18 5 Offset 18 
                                                      OpMemberDecorate %18 6 RelaxedPrecision 
                                                      OpMemberDecorate %18 6 Offset 18 
                                                      OpDecorate %18 Block 
                                                      OpDecorate %20 DescriptorSet 20 
                                                      OpDecorate %20 Binding 20 
                                                      OpDecorate %39 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD1 Location 40 
                                                      OpDecorate %47 RelaxedPrecision 
                                                      OpDecorate %48 RelaxedPrecision 
                                                      OpDecorate %50 RelaxedPrecision 
                                                      OpDecorate %51 RelaxedPrecision 
                                                      OpDecorate %54 RelaxedPrecision 
                                                      OpDecorate %59 RelaxedPrecision 
                                                      OpDecorate %61 RelaxedPrecision 
                                                      OpDecorate %63 RelaxedPrecision 
                                                      OpDecorate %67 RelaxedPrecision 
                                                      OpDecorate %68 RelaxedPrecision 
                                                      OpDecorate %70 RelaxedPrecision 
                                                      OpDecorate %73 RelaxedPrecision 
                                                      OpDecorate %74 RelaxedPrecision 
                                                      OpDecorate %75 RelaxedPrecision 
                                                      OpDecorate %76 RelaxedPrecision 
                                                      OpDecorate %78 RelaxedPrecision 
                                                      OpDecorate %79 RelaxedPrecision 
                                                      OpDecorate %81 RelaxedPrecision 
                                                      OpDecorate %83 RelaxedPrecision 
                                                      OpDecorate %84 RelaxedPrecision 
                                                      OpDecorate %86 RelaxedPrecision 
                                                      OpDecorate %87 RelaxedPrecision 
                                                      OpDecorate %88 RelaxedPrecision 
                                                      OpDecorate %89 RelaxedPrecision 
                                                      OpDecorate %90 RelaxedPrecision 
                                                      OpDecorate %91 RelaxedPrecision 
                                                      OpDecorate %93 RelaxedPrecision 
                                                      OpDecorate %94 RelaxedPrecision 
                                                      OpDecorate %95 RelaxedPrecision 
                                                      OpDecorate %97 RelaxedPrecision 
                                                      OpDecorate %98 RelaxedPrecision 
                                                      OpDecorate %101 RelaxedPrecision 
                                                      OpDecorate %102 RelaxedPrecision 
                                                      OpDecorate %105 RelaxedPrecision 
                                                      OpDecorate %107 RelaxedPrecision 
                                                      OpDecorate %109 RelaxedPrecision 
                                                      OpDecorate %111 RelaxedPrecision 
                                                      OpDecorate %113 RelaxedPrecision 
                                                      OpDecorate %114 RelaxedPrecision 
                                                      OpDecorate %117 RelaxedPrecision 
                                                      OpDecorate %118 RelaxedPrecision 
                                                      OpDecorate %119 RelaxedPrecision 
                                                      OpDecorate %121 RelaxedPrecision 
                                                      OpDecorate %122 RelaxedPrecision 
                                                      OpDecorate %125 RelaxedPrecision 
                                                      OpDecorate %126 RelaxedPrecision 
                                                      OpDecorate %127 RelaxedPrecision 
                                                      OpDecorate %163 DescriptorSet 163 
                                                      OpDecorate %163 Binding 163 
                                                      OpDecorate %167 DescriptorSet 167 
                                                      OpDecorate %167 Binding 167 
                                                      OpDecorate %179 DescriptorSet 179 
                                                      OpDecorate %179 Binding 179 
                                                      OpDecorate %181 DescriptorSet 181 
                                                      OpDecorate %181 Binding 181 
                                                      OpDecorate %195 RelaxedPrecision 
                                                      OpDecorate %199 RelaxedPrecision 
                                                      OpDecorate %200 RelaxedPrecision 
                                                      OpDecorate %203 RelaxedPrecision 
                                                      OpDecorate %204 RelaxedPrecision 
                                                      OpDecorate %204 DescriptorSet 204 
                                                      OpDecorate %204 Binding 204 
                                                      OpDecorate %205 RelaxedPrecision 
                                                      OpDecorate %206 RelaxedPrecision 
                                                      OpDecorate %206 DescriptorSet 206 
                                                      OpDecorate %206 Binding 206 
                                                      OpDecorate %207 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD0 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD0 Location 210 
                                                      OpDecorate %211 RelaxedPrecision 
                                                      OpDecorate %212 RelaxedPrecision 
                                                      OpDecorate %213 RelaxedPrecision 
                                                      OpDecorate %214 RelaxedPrecision 
                                                      OpDecorate %216 RelaxedPrecision 
                                                      OpDecorate %217 RelaxedPrecision 
                                                      OpDecorate %218 RelaxedPrecision 
                                                      OpDecorate %219 RelaxedPrecision 
                                                      OpDecorate %220 RelaxedPrecision 
                                                      OpDecorate %221 RelaxedPrecision 
                                                      OpDecorate %222 RelaxedPrecision 
                                                      OpDecorate %223 RelaxedPrecision 
                                                      OpDecorate %224 RelaxedPrecision 
                                                      OpDecorate %226 RelaxedPrecision 
                                                      OpDecorate %226 Location 226 
                                                      OpDecorate %227 RelaxedPrecision 
                                                      OpDecorate %228 RelaxedPrecision 
                                                      OpDecorate %229 RelaxedPrecision 
                                                      OpDecorate %230 RelaxedPrecision 
                                                      OpDecorate %234 RelaxedPrecision 
                                               %2 = OpTypeVoid 
                                               %3 = OpTypeFunction %2 
                                               %6 = OpTypeFloat 32 
                                               %7 = OpTypeVector %6 3 
                                               %8 = OpTypePointer Private %7 
                                Private f32_3* %9 = OpVariable Private 
                                              %10 = OpTypePointer Input %7 
                        Input f32_3* vs_TEXCOORD2 = OpVariable Input 
                                              %14 = OpTypeVector %6 4 
                                              %15 = OpTypeInt 32 0 
                                          u32 %16 = OpConstant 4 
                                              %17 = OpTypeArray %14 %16 
                                              %18 = OpTypeStruct %14 %14 %17 %14 %14 %6 %6 
                                              %19 = OpTypePointer Uniform %18 
Uniform struct {f32_4; f32_4; f32_4[4]; f32_4; f32_4; f32; f32;}* %20 = OpVariable Uniform 
                                              %21 = OpTypeInt 32 1 
                                          i32 %22 = OpConstant 0 
                                              %23 = OpTypePointer Uniform %14 
                                              %28 = OpTypePointer Private %6 
                                 Private f32* %29 = OpVariable Private 
                               Private f32_3* %39 = OpVariable Private 
                        Input f32_3* vs_TEXCOORD1 = OpVariable Input 
                                          u32 %44 = OpConstant 0 
                                          f32 %60 = OpConstant 3.674022E-40 
                                 Private f32* %63 = OpVariable Private 
                                          i32 %64 = OpConstant 6 
                                              %65 = OpTypePointer Uniform %6 
                                          f32 %69 = OpConstant 3.674022E-40 
                                          i32 %71 = OpConstant 5 
                                 Private f32* %81 = OpVariable Private 
                                          f32 %92 = OpConstant 3.674022E-40 
                                         f32 %106 = OpConstant 3.674022E-40 
                                         f32 %108 = OpConstant 3.674022E-40 
                                         i32 %123 = OpConstant 4 
                                         i32 %130 = OpConstant 2 
                                         i32 %131 = OpConstant 1 
                                         i32 %153 = OpConstant 3 
                                             %161 = OpTypeImage %6 Cube 0 0 0 1 Unknown 
                                             %162 = OpTypePointer UniformConstant %161 
      UniformConstant read_only TextureCube* %163 = OpVariable UniformConstant 
                                             %165 = OpTypeSampler 
                                             %166 = OpTypePointer UniformConstant %165 
                    UniformConstant sampler* %167 = OpVariable UniformConstant 
                                             %169 = OpTypeSampledImage %161 
                                         u32 %173 = OpConstant 3 
                                Private f32* %176 = OpVariable Private 
                                             %177 = OpTypeImage %6 Dim2D 0 0 0 1 Unknown 
                                             %178 = OpTypePointer UniformConstant %177 
        UniformConstant read_only Texture2D* %179 = OpVariable UniformConstant 
                    UniformConstant sampler* %181 = OpVariable UniformConstant 
                                             %183 = OpTypeSampledImage %177 
                                             %186 = OpTypeVector %6 2 
                              Private f32_3* %195 = OpVariable Private 
                                             %202 = OpTypePointer Private %14 
                              Private f32_4* %203 = OpVariable Private 
        UniformConstant read_only Texture2D* %204 = OpVariable UniformConstant 
                    UniformConstant sampler* %206 = OpVariable UniformConstant 
                                             %209 = OpTypePointer Input %186 
                        Input f32_2* vs_TEXCOORD0 = OpVariable Input 
                              Private f32_4* %213 = OpVariable Private 
                                             %225 = OpTypePointer Output %14 
                               Output f32_4* %226 = OpVariable Output 
                                             %235 = OpTypePointer Output %6 
                                          void %4 = OpFunction None %3 
                                               %5 = OpLabel 
                                        f32_3 %12 = OpLoad vs_TEXCOORD2 
                                        f32_3 %13 = OpFNegate %12 
                               Uniform f32_4* %24 = OpAccessChain %20 %22 
                                        f32_4 %25 = OpLoad %24 
                                        f32_3 %26 = OpVectorShuffle %25 %25 0 1 2 
                                        f32_3 %27 = OpFAdd %13 %26 
                                                      OpStore %9 %27 
                                        f32_3 %30 = OpLoad %9 
                                        f32_3 %31 = OpLoad %9 
                                          f32 %32 = OpDot %30 %31 
                                                      OpStore %29 %32 
                                          f32 %33 = OpLoad %29 
                                          f32 %34 = OpExtInst %1 32 %33 
                                                      OpStore %29 %34 
                                          f32 %35 = OpLoad %29 
                                        f32_3 %36 = OpCompositeConstruct %35 %35 %35 
                                        f32_3 %37 = OpLoad %9 
                                        f32_3 %38 = OpFMul %36 %37 
                                                      OpStore %9 %38 
                                        f32_3 %41 = OpLoad vs_TEXCOORD1 
                                        f32_3 %42 = OpLoad vs_TEXCOORD1 
                                          f32 %43 = OpDot %41 %42 
                                 Private f32* %45 = OpAccessChain %39 %44 
                                                      OpStore %45 %43 
                                 Private f32* %46 = OpAccessChain %39 %44 
                                          f32 %47 = OpLoad %46 
                                          f32 %48 = OpExtInst %1 32 %47 
                                 Private f32* %49 = OpAccessChain %39 %44 
                                                      OpStore %49 %48 
                                        f32_3 %50 = OpLoad %39 
                                        f32_3 %51 = OpVectorShuffle %50 %50 0 0 0 
                                        f32_3 %52 = OpLoad vs_TEXCOORD1 
                                        f32_3 %53 = OpFMul %51 %52 
                                                      OpStore %39 %53 
                                        f32_3 %54 = OpLoad %39 
                                        f32_3 %55 = OpLoad %9 
                                          f32 %56 = OpDot %54 %55 
                                 Private f32* %57 = OpAccessChain %39 %44 
                                                      OpStore %57 %56 
                                 Private f32* %58 = OpAccessChain %39 %44 
                                          f32 %59 = OpLoad %58 
                                          f32 %61 = OpExtInst %1 40 %59 %60 
                                 Private f32* %62 = OpAccessChain %39 %44 
                                                      OpStore %62 %61 
                                 Uniform f32* %66 = OpAccessChain %20 %64 
                                          f32 %67 = OpLoad %66 
                                          f32 %68 = OpFNegate %67 
                                          f32 %70 = OpFMul %68 %69 
                                 Uniform f32* %72 = OpAccessChain %20 %71 
                                          f32 %73 = OpLoad %72 
                                          f32 %74 = OpFAdd %70 %73 
                                                      OpStore %63 %74 
                                          f32 %75 = OpLoad %63 
                                          f32 %76 = OpFNegate %75 
                                 Private f32* %77 = OpAccessChain %39 %44 
                                          f32 %78 = OpLoad %77 
                                          f32 %79 = OpFAdd %76 %78 
                                 Private f32* %80 = OpAccessChain %39 %44 
                                                      OpStore %80 %79 
                                 Uniform f32* %82 = OpAccessChain %20 %64 
                                          f32 %83 = OpLoad %82 
                                          f32 %84 = OpFMul %83 %69 
                                 Uniform f32* %85 = OpAccessChain %20 %71 
                                          f32 %86 = OpLoad %85 
                                          f32 %87 = OpFAdd %84 %86 
                                                      OpStore %81 %87 
                                          f32 %88 = OpLoad %63 
                                          f32 %89 = OpFNegate %88 
                                          f32 %90 = OpLoad %81 
                                          f32 %91 = OpFAdd %89 %90 
                                                      OpStore %63 %91 
                                          f32 %93 = OpLoad %63 
                                          f32 %94 = OpFDiv %92 %93 
                                                      OpStore %63 %94 
                                          f32 %95 = OpLoad %63 
                                 Private f32* %96 = OpAccessChain %39 %44 
                                          f32 %97 = OpLoad %96 
                                          f32 %98 = OpFMul %95 %97 
                                 Private f32* %99 = OpAccessChain %39 %44 
                                                      OpStore %99 %98 
                                Private f32* %100 = OpAccessChain %39 %44 
                                         f32 %101 = OpLoad %100 
                                         f32 %102 = OpExtInst %1 43 %101 %60 %92 
                                Private f32* %103 = OpAccessChain %39 %44 
                                                      OpStore %103 %102 
                                Private f32* %104 = OpAccessChain %39 %44 
                                         f32 %105 = OpLoad %104 
                                         f32 %107 = OpFMul %105 %106 
                                         f32 %109 = OpFAdd %107 %108 
                                                      OpStore %63 %109 
                                Private f32* %110 = OpAccessChain %39 %44 
                                         f32 %111 = OpLoad %110 
                                Private f32* %112 = OpAccessChain %39 %44 
                                         f32 %113 = OpLoad %112 
                                         f32 %114 = OpFMul %111 %113 
                                Private f32* %115 = OpAccessChain %39 %44 
                                                      OpStore %115 %114 
                                Private f32* %116 = OpAccessChain %39 %44 
                                         f32 %117 = OpLoad %116 
                                         f32 %118 = OpLoad %63 
                                         f32 %119 = OpFMul %117 %118 
                                Private f32* %120 = OpAccessChain %39 %44 
                                                      OpStore %120 %119 
                                       f32_3 %121 = OpLoad %39 
                                       f32_3 %122 = OpVectorShuffle %121 %121 0 0 0 
                              Uniform f32_4* %124 = OpAccessChain %20 %123 
                                       f32_4 %125 = OpLoad %124 
                                       f32_3 %126 = OpVectorShuffle %125 %125 0 1 2 
                                       f32_3 %127 = OpFMul %122 %126 
                                                      OpStore %39 %127 
                                       f32_3 %128 = OpLoad vs_TEXCOORD2 
                                       f32_3 %129 = OpVectorShuffle %128 %128 1 1 1 
                              Uniform f32_4* %132 = OpAccessChain %20 %130 %131 
                                       f32_4 %133 = OpLoad %132 
                                       f32_3 %134 = OpVectorShuffle %133 %133 0 1 2 
                                       f32_3 %135 = OpFMul %129 %134 
                                                      OpStore %9 %135 
                              Uniform f32_4* %136 = OpAccessChain %20 %130 %22 
                                       f32_4 %137 = OpLoad %136 
                                       f32_3 %138 = OpVectorShuffle %137 %137 0 1 2 
                                       f32_3 %139 = OpLoad vs_TEXCOORD2 
                                       f32_3 %140 = OpVectorShuffle %139 %139 0 0 0 
                                       f32_3 %141 = OpFMul %138 %140 
                                       f32_3 %142 = OpLoad %9 
                                       f32_3 %143 = OpFAdd %141 %142 
                                                      OpStore %9 %143 
                              Uniform f32_4* %144 = OpAccessChain %20 %130 %130 
                                       f32_4 %145 = OpLoad %144 
                                       f32_3 %146 = OpVectorShuffle %145 %145 0 1 2 
                                       f32_3 %147 = OpLoad vs_TEXCOORD2 
                                       f32_3 %148 = OpVectorShuffle %147 %147 2 2 2 
                                       f32_3 %149 = OpFMul %146 %148 
                                       f32_3 %150 = OpLoad %9 
                                       f32_3 %151 = OpFAdd %149 %150 
                                                      OpStore %9 %151 
                                       f32_3 %152 = OpLoad %9 
                              Uniform f32_4* %154 = OpAccessChain %20 %130 %153 
                                       f32_4 %155 = OpLoad %154 
                                       f32_3 %156 = OpVectorShuffle %155 %155 0 1 2 
                                       f32_3 %157 = OpFAdd %152 %156 
                                                      OpStore %9 %157 
                                       f32_3 %158 = OpLoad %9 
                                       f32_3 %159 = OpLoad %9 
                                         f32 %160 = OpDot %158 %159 
                                                      OpStore %29 %160 
                       read_only TextureCube %164 = OpLoad %163 
                                     sampler %168 = OpLoad %167 
                read_only TextureCubeSampled %170 = OpSampledImage %164 %168 
                                       f32_3 %171 = OpLoad %9 
                                       f32_4 %172 = OpImageSampleImplicitLod %170 %171 
                                         f32 %174 = OpCompositeExtract %172 3 
                                Private f32* %175 = OpAccessChain %9 %44 
                                                      OpStore %175 %174 
                         read_only Texture2D %180 = OpLoad %179 
                                     sampler %182 = OpLoad %181 
                  read_only Texture2DSampled %184 = OpSampledImage %180 %182 
                                         f32 %185 = OpLoad %29 
                                       f32_2 %187 = OpCompositeConstruct %185 %185 
                                       f32_4 %188 = OpImageSampleImplicitLod %184 %187 
                                         f32 %189 = OpCompositeExtract %188 0 
                                                      OpStore %176 %189 
                                Private f32* %190 = OpAccessChain %9 %44 
                                         f32 %191 = OpLoad %190 
                                         f32 %192 = OpLoad %176 
                                         f32 %193 = OpFMul %191 %192 
                                Private f32* %194 = OpAccessChain %9 %44 
                                                      OpStore %194 %193 
                                       f32_3 %196 = OpLoad %9 
                                       f32_3 %197 = OpVectorShuffle %196 %196 0 0 0 
                              Uniform f32_4* %198 = OpAccessChain %20 %131 
                                       f32_4 %199 = OpLoad %198 
                                       f32_3 %200 = OpVectorShuffle %199 %199 0 1 2 
                                       f32_3 %201 = OpFMul %197 %200 
                                                      OpStore %195 %201 
                         read_only Texture2D %205 = OpLoad %204 
                                     sampler %207 = OpLoad %206 
                  read_only Texture2DSampled %208 = OpSampledImage %205 %207 
                                       f32_2 %211 = OpLoad vs_TEXCOORD0 
                                       f32_4 %212 = OpImageSampleImplicitLod %208 %211 
                                                      OpStore %203 %212 
                                       f32_4 %214 = OpLoad %203 
                              Uniform f32_4* %215 = OpAccessChain %20 %153 
                                       f32_4 %216 = OpLoad %215 
                                       f32_4 %217 = OpFMul %214 %216 
                                                      OpStore %213 %217 
                                       f32_3 %218 = OpLoad %195 
                                       f32_4 %219 = OpLoad %213 
                                       f32_3 %220 = OpVectorShuffle %219 %219 0 1 2 
                                       f32_3 %221 = OpFMul %218 %220 
                                                      OpStore %195 %221 
                                       f32_3 %222 = OpLoad %39 
                                       f32_3 %223 = OpLoad %195 
                                       f32_3 %224 = OpFMul %222 %223 
                                                      OpStore %39 %224 
                                       f32_4 %227 = OpLoad %213 
                                       f32_3 %228 = OpVectorShuffle %227 %227 3 3 3 
                                       f32_3 %229 = OpLoad %39 
                                       f32_3 %230 = OpFMul %228 %229 
                                       f32_4 %231 = OpLoad %226 
                                       f32_4 %232 = OpVectorShuffle %231 %230 4 5 6 3 
                                                      OpStore %226 %232 
                                Private f32* %233 = OpAccessChain %213 %173 
                                         f32 %234 = OpLoad %233 
                                 Output f32* %236 = OpAccessChain %226 %173 
                                                      OpStore %236 %234 
                                                      OpReturn
                                                      OpFunctionEnd
"
}
SubProgram "vulkan hw_tier02 " {
Keywords { "POINT_COOKIE" }
"; SPIR-V
; Version: 1.0
; Generator: Khronos Glslang Reference Front End; 6
; Bound: 209
; Schema: 0
                                                      OpCapability Shader 
                                               %1 = OpExtInstImport "GLSL.std.450" 
                                                      OpMemoryModel Logical GLSL450 
                                                      OpEntryPoint Vertex %4 "main" %11 %75 %85 %101 %106 %137 %143 %190 %200 
                                                      OpName vs_TEXCOORD0 "vs_TEXCOORD0" 
                                                      OpName vs_TEXCOORD1 "vs_TEXCOORD1" 
                                                      OpName vs_TEXCOORD2 "vs_TEXCOORD2" 
                                                      OpName vs_TEXCOORD3 "vs_TEXCOORD3" 
                                                      OpName vs_TEXCOORD4 "vs_TEXCOORD4" 
                                                      OpDecorate %11 Location 11 
                                                      OpDecorate %16 ArrayStride 16 
                                                      OpDecorate %17 ArrayStride 17 
                                                      OpDecorate %18 ArrayStride 18 
                                                      OpDecorate %19 ArrayStride 19 
                                                      OpMemberDecorate %20 0 Offset 20 
                                                      OpMemberDecorate %20 1 Offset 20 
                                                      OpMemberDecorate %20 2 Offset 20 
                                                      OpMemberDecorate %20 3 Offset 20 
                                                      OpMemberDecorate %20 4 Offset 20 
                                                      OpDecorate %20 Block 
                                                      OpDecorate %22 DescriptorSet 22 
                                                      OpDecorate %22 Binding 22 
                                                      OpMemberDecorate %73 0 BuiltIn 73 
                                                      OpMemberDecorate %73 1 BuiltIn 73 
                                                      OpMemberDecorate %73 2 BuiltIn 73 
                                                      OpDecorate %73 Block 
                                                      OpDecorate %85 Location 85 
                                                      OpDecorate vs_TEXCOORD0 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD0 Location 101 
                                                      OpDecorate %106 Location 106 
                                                      OpDecorate vs_TEXCOORD1 Location 137 
                                                      OpDecorate vs_TEXCOORD2 Location 143 
                                                      OpDecorate vs_TEXCOORD3 Location 190 
                                                      OpDecorate vs_TEXCOORD4 Location 200 
                                               %2 = OpTypeVoid 
                                               %3 = OpTypeFunction %2 
                                               %6 = OpTypeFloat 32 
                                               %7 = OpTypeVector %6 4 
                                               %8 = OpTypePointer Private %7 
                                Private f32_4* %9 = OpVariable Private 
                                              %10 = OpTypePointer Input %7 
                                 Input f32_4* %11 = OpVariable Input 
                                              %14 = OpTypeInt 32 0 
                                          u32 %15 = OpConstant 4 
                                              %16 = OpTypeArray %7 %15 
                                              %17 = OpTypeArray %7 %15 
                                              %18 = OpTypeArray %7 %15 
                                              %19 = OpTypeArray %7 %15 
                                              %20 = OpTypeStruct %16 %17 %18 %19 %7 
                                              %21 = OpTypePointer Uniform %20 
Uniform struct {f32_4[4]; f32_4[4]; f32_4[4]; f32_4[4]; f32_4;}* %22 = OpVariable Uniform 
                                              %23 = OpTypeInt 32 1 
                                          i32 %24 = OpConstant 0 
                                          i32 %25 = OpConstant 1 
                                              %26 = OpTypePointer Uniform %7 
                                          i32 %37 = OpConstant 2 
                               Private f32_4* %45 = OpVariable Private 
                                          i32 %47 = OpConstant 3 
                               Private f32_4* %51 = OpVariable Private 
                                          u32 %71 = OpConstant 1 
                                              %72 = OpTypeArray %6 %71 
                                              %73 = OpTypeStruct %7 %6 %72 
                                              %74 = OpTypePointer Output %73 
         Output struct {f32_4; f32; f32[1];}* %75 = OpVariable Output 
                                              %83 = OpTypePointer Output %7 
                                 Input f32_4* %85 = OpVariable Input 
                                              %86 = OpTypeVector %6 2 
                                          i32 %89 = OpConstant 4 
                                             %100 = OpTypePointer Output %86 
                       Output f32_2* vs_TEXCOORD0 = OpVariable Output 
                                             %104 = OpTypeVector %6 3 
                                             %105 = OpTypePointer Input %104 
                                Input f32_3* %106 = OpVariable Input 
                                         u32 %112 = OpConstant 0 
                                             %113 = OpTypePointer Private %6 
                                         u32 %126 = OpConstant 2 
                                Private f32* %128 = OpVariable Private 
                                             %136 = OpTypePointer Output %104 
                       Output f32_3* vs_TEXCOORD1 = OpVariable Output 
                       Output f32_3* vs_TEXCOORD2 = OpVariable Output 
                       Output f32_3* vs_TEXCOORD3 = OpVariable Output 
                       Output f32_4* vs_TEXCOORD4 = OpVariable Output 
                                         f32 %201 = OpConstant 3.674022E-40 
                                       f32_4 %202 = OpConstantComposite %201 %201 %201 %201 
                                             %203 = OpTypePointer Output %6 
                                          void %4 = OpFunction None %3 
                                               %5 = OpLabel 
                                        f32_4 %12 = OpLoad %11 
                                        f32_4 %13 = OpVectorShuffle %12 %12 1 1 1 1 
                               Uniform f32_4* %27 = OpAccessChain %22 %24 %25 
                                        f32_4 %28 = OpLoad %27 
                                        f32_4 %29 = OpFMul %13 %28 
                                                      OpStore %9 %29 
                               Uniform f32_4* %30 = OpAccessChain %22 %24 %24 
                                        f32_4 %31 = OpLoad %30 
                                        f32_4 %32 = OpLoad %11 
                                        f32_4 %33 = OpVectorShuffle %32 %32 0 0 0 0 
                                        f32_4 %34 = OpFMul %31 %33 
                                        f32_4 %35 = OpLoad %9 
                                        f32_4 %36 = OpFAdd %34 %35 
                                                      OpStore %9 %36 
                               Uniform f32_4* %38 = OpAccessChain %22 %24 %37 
                                        f32_4 %39 = OpLoad %38 
                                        f32_4 %40 = OpLoad %11 
                                        f32_4 %41 = OpVectorShuffle %40 %40 2 2 2 2 
                                        f32_4 %42 = OpFMul %39 %41 
                                        f32_4 %43 = OpLoad %9 
                                        f32_4 %44 = OpFAdd %42 %43 
                                                      OpStore %9 %44 
                                        f32_4 %46 = OpLoad %9 
                               Uniform f32_4* %48 = OpAccessChain %22 %24 %47 
                                        f32_4 %49 = OpLoad %48 
                                        f32_4 %50 = OpFAdd %46 %49 
                                                      OpStore %45 %50 
                                        f32_4 %52 = OpLoad %45 
                                        f32_4 %53 = OpVectorShuffle %52 %52 1 1 1 1 
                               Uniform f32_4* %54 = OpAccessChain %22 %37 %25 
                                        f32_4 %55 = OpLoad %54 
                                        f32_4 %56 = OpFMul %53 %55 
                                                      OpStore %51 %56 
                               Uniform f32_4* %57 = OpAccessChain %22 %37 %24 
                                        f32_4 %58 = OpLoad %57 
                                        f32_4 %59 = OpLoad %45 
                                        f32_4 %60 = OpVectorShuffle %59 %59 0 0 0 0 
                                        f32_4 %61 = OpFMul %58 %60 
                                        f32_4 %62 = OpLoad %51 
                                        f32_4 %63 = OpFAdd %61 %62 
                                                      OpStore %51 %63 
                               Uniform f32_4* %64 = OpAccessChain %22 %37 %37 
                                        f32_4 %65 = OpLoad %64 
                                        f32_4 %66 = OpLoad %45 
                                        f32_4 %67 = OpVectorShuffle %66 %66 2 2 2 2 
                                        f32_4 %68 = OpFMul %65 %67 
                                        f32_4 %69 = OpLoad %51 
                                        f32_4 %70 = OpFAdd %68 %69 
                                                      OpStore %51 %70 
                               Uniform f32_4* %76 = OpAccessChain %22 %37 %47 
                                        f32_4 %77 = OpLoad %76 
                                        f32_4 %78 = OpLoad %45 
                                        f32_4 %79 = OpVectorShuffle %78 %78 3 3 3 3 
                                        f32_4 %80 = OpFMul %77 %79 
                                        f32_4 %81 = OpLoad %51 
                                        f32_4 %82 = OpFAdd %80 %81 
                                Output f32_4* %84 = OpAccessChain %75 %24 
                                                      OpStore %84 %82 
                                        f32_4 %87 = OpLoad %85 
                                        f32_2 %88 = OpVectorShuffle %87 %87 0 1 
                               Uniform f32_4* %90 = OpAccessChain %22 %89 
                                        f32_4 %91 = OpLoad %90 
                                        f32_2 %92 = OpVectorShuffle %91 %91 0 1 
                                        f32_2 %93 = OpFMul %88 %92 
                               Uniform f32_4* %94 = OpAccessChain %22 %89 
                                        f32_4 %95 = OpLoad %94 
                                        f32_2 %96 = OpVectorShuffle %95 %95 2 3 
                                        f32_2 %97 = OpFAdd %93 %96 
                                        f32_4 %98 = OpLoad %45 
                                        f32_4 %99 = OpVectorShuffle %98 %97 4 5 2 3 
                                                      OpStore %45 %99 
                                       f32_4 %102 = OpLoad %45 
                                       f32_2 %103 = OpVectorShuffle %102 %102 0 1 
                                                      OpStore vs_TEXCOORD0 %103 
                                       f32_3 %107 = OpLoad %106 
                              Uniform f32_4* %108 = OpAccessChain %22 %25 %24 
                                       f32_4 %109 = OpLoad %108 
                                       f32_3 %110 = OpVectorShuffle %109 %109 0 1 2 
                                         f32 %111 = OpDot %107 %110 
                                Private f32* %114 = OpAccessChain %45 %112 
                                                      OpStore %114 %111 
                                       f32_3 %115 = OpLoad %106 
                              Uniform f32_4* %116 = OpAccessChain %22 %25 %25 
                                       f32_4 %117 = OpLoad %116 
                                       f32_3 %118 = OpVectorShuffle %117 %117 0 1 2 
                                         f32 %119 = OpDot %115 %118 
                                Private f32* %120 = OpAccessChain %45 %71 
                                                      OpStore %120 %119 
                                       f32_3 %121 = OpLoad %106 
                              Uniform f32_4* %122 = OpAccessChain %22 %25 %37 
                                       f32_4 %123 = OpLoad %122 
                                       f32_3 %124 = OpVectorShuffle %123 %123 0 1 2 
                                         f32 %125 = OpDot %121 %124 
                                Private f32* %127 = OpAccessChain %45 %126 
                                                      OpStore %127 %125 
                                       f32_4 %129 = OpLoad %45 
                                       f32_3 %130 = OpVectorShuffle %129 %129 0 1 2 
                                       f32_4 %131 = OpLoad %45 
                                       f32_3 %132 = OpVectorShuffle %131 %131 0 1 2 
                                         f32 %133 = OpDot %130 %132 
                                                      OpStore %128 %133 
                                         f32 %134 = OpLoad %128 
                                         f32 %135 = OpExtInst %1 32 %134 
                                                      OpStore %128 %135 
                                         f32 %138 = OpLoad %128 
                                       f32_3 %139 = OpCompositeConstruct %138 %138 %138 
                                       f32_4 %140 = OpLoad %45 
                                       f32_3 %141 = OpVectorShuffle %140 %140 0 1 2 
                                       f32_3 %142 = OpFMul %139 %141 
                                                      OpStore vs_TEXCOORD1 %142 
                              Uniform f32_4* %144 = OpAccessChain %22 %24 %47 
                                       f32_4 %145 = OpLoad %144 
                                       f32_3 %146 = OpVectorShuffle %145 %145 0 1 2 
                                       f32_4 %147 = OpLoad %11 
                                       f32_3 %148 = OpVectorShuffle %147 %147 3 3 3 
                                       f32_3 %149 = OpFMul %146 %148 
                                       f32_4 %150 = OpLoad %9 
                                       f32_3 %151 = OpVectorShuffle %150 %150 0 1 2 
                                       f32_3 %152 = OpFAdd %149 %151 
                                                      OpStore vs_TEXCOORD2 %152 
                              Uniform f32_4* %153 = OpAccessChain %22 %24 %47 
                                       f32_4 %154 = OpLoad %153 
                                       f32_4 %155 = OpLoad %11 
                                       f32_4 %156 = OpVectorShuffle %155 %155 3 3 3 3 
                                       f32_4 %157 = OpFMul %154 %156 
                                       f32_4 %158 = OpLoad %9 
                                       f32_4 %159 = OpFAdd %157 %158 
                                                      OpStore %9 %159 
                                       f32_4 %160 = OpLoad %9 
                                       f32_3 %161 = OpVectorShuffle %160 %160 1 1 1 
                              Uniform f32_4* %162 = OpAccessChain %22 %47 %25 
                                       f32_4 %163 = OpLoad %162 
                                       f32_3 %164 = OpVectorShuffle %163 %163 0 1 2 
                                       f32_3 %165 = OpFMul %161 %164 
                                       f32_4 %166 = OpLoad %45 
                                       f32_4 %167 = OpVectorShuffle %166 %165 4 5 6 3 
                                                      OpStore %45 %167 
                              Uniform f32_4* %168 = OpAccessChain %22 %47 %24 
                                       f32_4 %169 = OpLoad %168 
                                       f32_3 %170 = OpVectorShuffle %169 %169 0 1 2 
                                       f32_4 %171 = OpLoad %9 
                                       f32_3 %172 = OpVectorShuffle %171 %171 0 0 0 
                                       f32_3 %173 = OpFMul %170 %172 
                                       f32_4 %174 = OpLoad %45 
                                       f32_3 %175 = OpVectorShuffle %174 %174 0 1 2 
                                       f32_3 %176 = OpFAdd %173 %175 
                                       f32_4 %177 = OpLoad %45 
                                       f32_4 %178 = OpVectorShuffle %177 %176 4 5 6 3 
                                                      OpStore %45 %178 
                              Uniform f32_4* %179 = OpAccessChain %22 %47 %37 
                                       f32_4 %180 = OpLoad %179 
                                       f32_3 %181 = OpVectorShuffle %180 %180 0 1 2 
                                       f32_4 %182 = OpLoad %9 
                                       f32_3 %183 = OpVectorShuffle %182 %182 2 2 2 
                                       f32_3 %184 = OpFMul %181 %183 
                                       f32_4 %185 = OpLoad %45 
                                       f32_3 %186 = OpVectorShuffle %185 %185 0 1 2 
                                       f32_3 %187 = OpFAdd %184 %186 
                                       f32_4 %188 = OpLoad %9 
                                       f32_4 %189 = OpVectorShuffle %188 %187 4 5 6 3 
                                                      OpStore %9 %189 
                              Uniform f32_4* %191 = OpAccessChain %22 %47 %47 
                                       f32_4 %192 = OpLoad %191 
                                       f32_3 %193 = OpVectorShuffle %192 %192 0 1 2 
                                       f32_4 %194 = OpLoad %9 
                                       f32_3 %195 = OpVectorShuffle %194 %194 3 3 3 
                                       f32_3 %196 = OpFMul %193 %195 
                                       f32_4 %197 = OpLoad %9 
                                       f32_3 %198 = OpVectorShuffle %197 %197 0 1 2 
                                       f32_3 %199 = OpFAdd %196 %198 
                                                      OpStore vs_TEXCOORD3 %199 
                                                      OpStore vs_TEXCOORD4 %202 
                                 Output f32* %204 = OpAccessChain %75 %24 %71 
                                         f32 %205 = OpLoad %204 
                                         f32 %206 = OpFNegate %205 
                                 Output f32* %207 = OpAccessChain %75 %24 %71 
                                                      OpStore %207 %206 
                                                      OpReturn
                                                      OpFunctionEnd
; SPIR-V
; Version: 1.0
; Generator: Khronos Glslang Reference Front End; 6
; Bound: 238
; Schema: 0
                                                      OpCapability Shader 
                                               %1 = OpExtInstImport "GLSL.std.450" 
                                                      OpMemoryModel Logical GLSL450 
                                                      OpEntryPoint Fragment %4 "main" %11 %40 %210 %226 
                                                      OpExecutionMode %4 OriginUpperLeft 
                                                      OpName vs_TEXCOORD2 "vs_TEXCOORD2" 
                                                      OpName vs_TEXCOORD1 "vs_TEXCOORD1" 
                                                      OpName vs_TEXCOORD0 "vs_TEXCOORD0" 
                                                      OpDecorate vs_TEXCOORD2 Location 11 
                                                      OpDecorate %17 ArrayStride 17 
                                                      OpMemberDecorate %18 0 Offset 18 
                                                      OpMemberDecorate %18 1 RelaxedPrecision 
                                                      OpMemberDecorate %18 1 Offset 18 
                                                      OpMemberDecorate %18 2 Offset 18 
                                                      OpMemberDecorate %18 3 RelaxedPrecision 
                                                      OpMemberDecorate %18 3 Offset 18 
                                                      OpMemberDecorate %18 4 RelaxedPrecision 
                                                      OpMemberDecorate %18 4 Offset 18 
                                                      OpMemberDecorate %18 5 RelaxedPrecision 
                                                      OpMemberDecorate %18 5 Offset 18 
                                                      OpMemberDecorate %18 6 RelaxedPrecision 
                                                      OpMemberDecorate %18 6 Offset 18 
                                                      OpDecorate %18 Block 
                                                      OpDecorate %20 DescriptorSet 20 
                                                      OpDecorate %20 Binding 20 
                                                      OpDecorate %39 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD1 Location 40 
                                                      OpDecorate %47 RelaxedPrecision 
                                                      OpDecorate %48 RelaxedPrecision 
                                                      OpDecorate %50 RelaxedPrecision 
                                                      OpDecorate %51 RelaxedPrecision 
                                                      OpDecorate %54 RelaxedPrecision 
                                                      OpDecorate %59 RelaxedPrecision 
                                                      OpDecorate %61 RelaxedPrecision 
                                                      OpDecorate %63 RelaxedPrecision 
                                                      OpDecorate %67 RelaxedPrecision 
                                                      OpDecorate %68 RelaxedPrecision 
                                                      OpDecorate %70 RelaxedPrecision 
                                                      OpDecorate %73 RelaxedPrecision 
                                                      OpDecorate %74 RelaxedPrecision 
                                                      OpDecorate %75 RelaxedPrecision 
                                                      OpDecorate %76 RelaxedPrecision 
                                                      OpDecorate %78 RelaxedPrecision 
                                                      OpDecorate %79 RelaxedPrecision 
                                                      OpDecorate %81 RelaxedPrecision 
                                                      OpDecorate %83 RelaxedPrecision 
                                                      OpDecorate %84 RelaxedPrecision 
                                                      OpDecorate %86 RelaxedPrecision 
                                                      OpDecorate %87 RelaxedPrecision 
                                                      OpDecorate %88 RelaxedPrecision 
                                                      OpDecorate %89 RelaxedPrecision 
                                                      OpDecorate %90 RelaxedPrecision 
                                                      OpDecorate %91 RelaxedPrecision 
                                                      OpDecorate %93 RelaxedPrecision 
                                                      OpDecorate %94 RelaxedPrecision 
                                                      OpDecorate %95 RelaxedPrecision 
                                                      OpDecorate %97 RelaxedPrecision 
                                                      OpDecorate %98 RelaxedPrecision 
                                                      OpDecorate %101 RelaxedPrecision 
                                                      OpDecorate %102 RelaxedPrecision 
                                                      OpDecorate %105 RelaxedPrecision 
                                                      OpDecorate %107 RelaxedPrecision 
                                                      OpDecorate %109 RelaxedPrecision 
                                                      OpDecorate %111 RelaxedPrecision 
                                                      OpDecorate %113 RelaxedPrecision 
                                                      OpDecorate %114 RelaxedPrecision 
                                                      OpDecorate %117 RelaxedPrecision 
                                                      OpDecorate %118 RelaxedPrecision 
                                                      OpDecorate %119 RelaxedPrecision 
                                                      OpDecorate %121 RelaxedPrecision 
                                                      OpDecorate %122 RelaxedPrecision 
                                                      OpDecorate %125 RelaxedPrecision 
                                                      OpDecorate %126 RelaxedPrecision 
                                                      OpDecorate %127 RelaxedPrecision 
                                                      OpDecorate %163 DescriptorSet 163 
                                                      OpDecorate %163 Binding 163 
                                                      OpDecorate %167 DescriptorSet 167 
                                                      OpDecorate %167 Binding 167 
                                                      OpDecorate %179 DescriptorSet 179 
                                                      OpDecorate %179 Binding 179 
                                                      OpDecorate %181 DescriptorSet 181 
                                                      OpDecorate %181 Binding 181 
                                                      OpDecorate %195 RelaxedPrecision 
                                                      OpDecorate %199 RelaxedPrecision 
                                                      OpDecorate %200 RelaxedPrecision 
                                                      OpDecorate %203 RelaxedPrecision 
                                                      OpDecorate %204 RelaxedPrecision 
                                                      OpDecorate %204 DescriptorSet 204 
                                                      OpDecorate %204 Binding 204 
                                                      OpDecorate %205 RelaxedPrecision 
                                                      OpDecorate %206 RelaxedPrecision 
                                                      OpDecorate %206 DescriptorSet 206 
                                                      OpDecorate %206 Binding 206 
                                                      OpDecorate %207 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD0 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD0 Location 210 
                                                      OpDecorate %211 RelaxedPrecision 
                                                      OpDecorate %212 RelaxedPrecision 
                                                      OpDecorate %213 RelaxedPrecision 
                                                      OpDecorate %214 RelaxedPrecision 
                                                      OpDecorate %216 RelaxedPrecision 
                                                      OpDecorate %217 RelaxedPrecision 
                                                      OpDecorate %218 RelaxedPrecision 
                                                      OpDecorate %219 RelaxedPrecision 
                                                      OpDecorate %220 RelaxedPrecision 
                                                      OpDecorate %221 RelaxedPrecision 
                                                      OpDecorate %222 RelaxedPrecision 
                                                      OpDecorate %223 RelaxedPrecision 
                                                      OpDecorate %224 RelaxedPrecision 
                                                      OpDecorate %226 RelaxedPrecision 
                                                      OpDecorate %226 Location 226 
                                                      OpDecorate %227 RelaxedPrecision 
                                                      OpDecorate %228 RelaxedPrecision 
                                                      OpDecorate %229 RelaxedPrecision 
                                                      OpDecorate %230 RelaxedPrecision 
                                                      OpDecorate %234 RelaxedPrecision 
                                               %2 = OpTypeVoid 
                                               %3 = OpTypeFunction %2 
                                               %6 = OpTypeFloat 32 
                                               %7 = OpTypeVector %6 3 
                                               %8 = OpTypePointer Private %7 
                                Private f32_3* %9 = OpVariable Private 
                                              %10 = OpTypePointer Input %7 
                        Input f32_3* vs_TEXCOORD2 = OpVariable Input 
                                              %14 = OpTypeVector %6 4 
                                              %15 = OpTypeInt 32 0 
                                          u32 %16 = OpConstant 4 
                                              %17 = OpTypeArray %14 %16 
                                              %18 = OpTypeStruct %14 %14 %17 %14 %14 %6 %6 
                                              %19 = OpTypePointer Uniform %18 
Uniform struct {f32_4; f32_4; f32_4[4]; f32_4; f32_4; f32; f32;}* %20 = OpVariable Uniform 
                                              %21 = OpTypeInt 32 1 
                                          i32 %22 = OpConstant 0 
                                              %23 = OpTypePointer Uniform %14 
                                              %28 = OpTypePointer Private %6 
                                 Private f32* %29 = OpVariable Private 
                               Private f32_3* %39 = OpVariable Private 
                        Input f32_3* vs_TEXCOORD1 = OpVariable Input 
                                          u32 %44 = OpConstant 0 
                                          f32 %60 = OpConstant 3.674022E-40 
                                 Private f32* %63 = OpVariable Private 
                                          i32 %64 = OpConstant 6 
                                              %65 = OpTypePointer Uniform %6 
                                          f32 %69 = OpConstant 3.674022E-40 
                                          i32 %71 = OpConstant 5 
                                 Private f32* %81 = OpVariable Private 
                                          f32 %92 = OpConstant 3.674022E-40 
                                         f32 %106 = OpConstant 3.674022E-40 
                                         f32 %108 = OpConstant 3.674022E-40 
                                         i32 %123 = OpConstant 4 
                                         i32 %130 = OpConstant 2 
                                         i32 %131 = OpConstant 1 
                                         i32 %153 = OpConstant 3 
                                             %161 = OpTypeImage %6 Cube 0 0 0 1 Unknown 
                                             %162 = OpTypePointer UniformConstant %161 
      UniformConstant read_only TextureCube* %163 = OpVariable UniformConstant 
                                             %165 = OpTypeSampler 
                                             %166 = OpTypePointer UniformConstant %165 
                    UniformConstant sampler* %167 = OpVariable UniformConstant 
                                             %169 = OpTypeSampledImage %161 
                                         u32 %173 = OpConstant 3 
                                Private f32* %176 = OpVariable Private 
                                             %177 = OpTypeImage %6 Dim2D 0 0 0 1 Unknown 
                                             %178 = OpTypePointer UniformConstant %177 
        UniformConstant read_only Texture2D* %179 = OpVariable UniformConstant 
                    UniformConstant sampler* %181 = OpVariable UniformConstant 
                                             %183 = OpTypeSampledImage %177 
                                             %186 = OpTypeVector %6 2 
                              Private f32_3* %195 = OpVariable Private 
                                             %202 = OpTypePointer Private %14 
                              Private f32_4* %203 = OpVariable Private 
        UniformConstant read_only Texture2D* %204 = OpVariable UniformConstant 
                    UniformConstant sampler* %206 = OpVariable UniformConstant 
                                             %209 = OpTypePointer Input %186 
                        Input f32_2* vs_TEXCOORD0 = OpVariable Input 
                              Private f32_4* %213 = OpVariable Private 
                                             %225 = OpTypePointer Output %14 
                               Output f32_4* %226 = OpVariable Output 
                                             %235 = OpTypePointer Output %6 
                                          void %4 = OpFunction None %3 
                                               %5 = OpLabel 
                                        f32_3 %12 = OpLoad vs_TEXCOORD2 
                                        f32_3 %13 = OpFNegate %12 
                               Uniform f32_4* %24 = OpAccessChain %20 %22 
                                        f32_4 %25 = OpLoad %24 
                                        f32_3 %26 = OpVectorShuffle %25 %25 0 1 2 
                                        f32_3 %27 = OpFAdd %13 %26 
                                                      OpStore %9 %27 
                                        f32_3 %30 = OpLoad %9 
                                        f32_3 %31 = OpLoad %9 
                                          f32 %32 = OpDot %30 %31 
                                                      OpStore %29 %32 
                                          f32 %33 = OpLoad %29 
                                          f32 %34 = OpExtInst %1 32 %33 
                                                      OpStore %29 %34 
                                          f32 %35 = OpLoad %29 
                                        f32_3 %36 = OpCompositeConstruct %35 %35 %35 
                                        f32_3 %37 = OpLoad %9 
                                        f32_3 %38 = OpFMul %36 %37 
                                                      OpStore %9 %38 
                                        f32_3 %41 = OpLoad vs_TEXCOORD1 
                                        f32_3 %42 = OpLoad vs_TEXCOORD1 
                                          f32 %43 = OpDot %41 %42 
                                 Private f32* %45 = OpAccessChain %39 %44 
                                                      OpStore %45 %43 
                                 Private f32* %46 = OpAccessChain %39 %44 
                                          f32 %47 = OpLoad %46 
                                          f32 %48 = OpExtInst %1 32 %47 
                                 Private f32* %49 = OpAccessChain %39 %44 
                                                      OpStore %49 %48 
                                        f32_3 %50 = OpLoad %39 
                                        f32_3 %51 = OpVectorShuffle %50 %50 0 0 0 
                                        f32_3 %52 = OpLoad vs_TEXCOORD1 
                                        f32_3 %53 = OpFMul %51 %52 
                                                      OpStore %39 %53 
                                        f32_3 %54 = OpLoad %39 
                                        f32_3 %55 = OpLoad %9 
                                          f32 %56 = OpDot %54 %55 
                                 Private f32* %57 = OpAccessChain %39 %44 
                                                      OpStore %57 %56 
                                 Private f32* %58 = OpAccessChain %39 %44 
                                          f32 %59 = OpLoad %58 
                                          f32 %61 = OpExtInst %1 40 %59 %60 
                                 Private f32* %62 = OpAccessChain %39 %44 
                                                      OpStore %62 %61 
                                 Uniform f32* %66 = OpAccessChain %20 %64 
                                          f32 %67 = OpLoad %66 
                                          f32 %68 = OpFNegate %67 
                                          f32 %70 = OpFMul %68 %69 
                                 Uniform f32* %72 = OpAccessChain %20 %71 
                                          f32 %73 = OpLoad %72 
                                          f32 %74 = OpFAdd %70 %73 
                                                      OpStore %63 %74 
                                          f32 %75 = OpLoad %63 
                                          f32 %76 = OpFNegate %75 
                                 Private f32* %77 = OpAccessChain %39 %44 
                                          f32 %78 = OpLoad %77 
                                          f32 %79 = OpFAdd %76 %78 
                                 Private f32* %80 = OpAccessChain %39 %44 
                                                      OpStore %80 %79 
                                 Uniform f32* %82 = OpAccessChain %20 %64 
                                          f32 %83 = OpLoad %82 
                                          f32 %84 = OpFMul %83 %69 
                                 Uniform f32* %85 = OpAccessChain %20 %71 
                                          f32 %86 = OpLoad %85 
                                          f32 %87 = OpFAdd %84 %86 
                                                      OpStore %81 %87 
                                          f32 %88 = OpLoad %63 
                                          f32 %89 = OpFNegate %88 
                                          f32 %90 = OpLoad %81 
                                          f32 %91 = OpFAdd %89 %90 
                                                      OpStore %63 %91 
                                          f32 %93 = OpLoad %63 
                                          f32 %94 = OpFDiv %92 %93 
                                                      OpStore %63 %94 
                                          f32 %95 = OpLoad %63 
                                 Private f32* %96 = OpAccessChain %39 %44 
                                          f32 %97 = OpLoad %96 
                                          f32 %98 = OpFMul %95 %97 
                                 Private f32* %99 = OpAccessChain %39 %44 
                                                      OpStore %99 %98 
                                Private f32* %100 = OpAccessChain %39 %44 
                                         f32 %101 = OpLoad %100 
                                         f32 %102 = OpExtInst %1 43 %101 %60 %92 
                                Private f32* %103 = OpAccessChain %39 %44 
                                                      OpStore %103 %102 
                                Private f32* %104 = OpAccessChain %39 %44 
                                         f32 %105 = OpLoad %104 
                                         f32 %107 = OpFMul %105 %106 
                                         f32 %109 = OpFAdd %107 %108 
                                                      OpStore %63 %109 
                                Private f32* %110 = OpAccessChain %39 %44 
                                         f32 %111 = OpLoad %110 
                                Private f32* %112 = OpAccessChain %39 %44 
                                         f32 %113 = OpLoad %112 
                                         f32 %114 = OpFMul %111 %113 
                                Private f32* %115 = OpAccessChain %39 %44 
                                                      OpStore %115 %114 
                                Private f32* %116 = OpAccessChain %39 %44 
                                         f32 %117 = OpLoad %116 
                                         f32 %118 = OpLoad %63 
                                         f32 %119 = OpFMul %117 %118 
                                Private f32* %120 = OpAccessChain %39 %44 
                                                      OpStore %120 %119 
                                       f32_3 %121 = OpLoad %39 
                                       f32_3 %122 = OpVectorShuffle %121 %121 0 0 0 
                              Uniform f32_4* %124 = OpAccessChain %20 %123 
                                       f32_4 %125 = OpLoad %124 
                                       f32_3 %126 = OpVectorShuffle %125 %125 0 1 2 
                                       f32_3 %127 = OpFMul %122 %126 
                                                      OpStore %39 %127 
                                       f32_3 %128 = OpLoad vs_TEXCOORD2 
                                       f32_3 %129 = OpVectorShuffle %128 %128 1 1 1 
                              Uniform f32_4* %132 = OpAccessChain %20 %130 %131 
                                       f32_4 %133 = OpLoad %132 
                                       f32_3 %134 = OpVectorShuffle %133 %133 0 1 2 
                                       f32_3 %135 = OpFMul %129 %134 
                                                      OpStore %9 %135 
                              Uniform f32_4* %136 = OpAccessChain %20 %130 %22 
                                       f32_4 %137 = OpLoad %136 
                                       f32_3 %138 = OpVectorShuffle %137 %137 0 1 2 
                                       f32_3 %139 = OpLoad vs_TEXCOORD2 
                                       f32_3 %140 = OpVectorShuffle %139 %139 0 0 0 
                                       f32_3 %141 = OpFMul %138 %140 
                                       f32_3 %142 = OpLoad %9 
                                       f32_3 %143 = OpFAdd %141 %142 
                                                      OpStore %9 %143 
                              Uniform f32_4* %144 = OpAccessChain %20 %130 %130 
                                       f32_4 %145 = OpLoad %144 
                                       f32_3 %146 = OpVectorShuffle %145 %145 0 1 2 
                                       f32_3 %147 = OpLoad vs_TEXCOORD2 
                                       f32_3 %148 = OpVectorShuffle %147 %147 2 2 2 
                                       f32_3 %149 = OpFMul %146 %148 
                                       f32_3 %150 = OpLoad %9 
                                       f32_3 %151 = OpFAdd %149 %150 
                                                      OpStore %9 %151 
                                       f32_3 %152 = OpLoad %9 
                              Uniform f32_4* %154 = OpAccessChain %20 %130 %153 
                                       f32_4 %155 = OpLoad %154 
                                       f32_3 %156 = OpVectorShuffle %155 %155 0 1 2 
                                       f32_3 %157 = OpFAdd %152 %156 
                                                      OpStore %9 %157 
                                       f32_3 %158 = OpLoad %9 
                                       f32_3 %159 = OpLoad %9 
                                         f32 %160 = OpDot %158 %159 
                                                      OpStore %29 %160 
                       read_only TextureCube %164 = OpLoad %163 
                                     sampler %168 = OpLoad %167 
                read_only TextureCubeSampled %170 = OpSampledImage %164 %168 
                                       f32_3 %171 = OpLoad %9 
                                       f32_4 %172 = OpImageSampleImplicitLod %170 %171 
                                         f32 %174 = OpCompositeExtract %172 3 
                                Private f32* %175 = OpAccessChain %9 %44 
                                                      OpStore %175 %174 
                         read_only Texture2D %180 = OpLoad %179 
                                     sampler %182 = OpLoad %181 
                  read_only Texture2DSampled %184 = OpSampledImage %180 %182 
                                         f32 %185 = OpLoad %29 
                                       f32_2 %187 = OpCompositeConstruct %185 %185 
                                       f32_4 %188 = OpImageSampleImplicitLod %184 %187 
                                         f32 %189 = OpCompositeExtract %188 0 
                                                      OpStore %176 %189 
                                Private f32* %190 = OpAccessChain %9 %44 
                                         f32 %191 = OpLoad %190 
                                         f32 %192 = OpLoad %176 
                                         f32 %193 = OpFMul %191 %192 
                                Private f32* %194 = OpAccessChain %9 %44 
                                                      OpStore %194 %193 
                                       f32_3 %196 = OpLoad %9 
                                       f32_3 %197 = OpVectorShuffle %196 %196 0 0 0 
                              Uniform f32_4* %198 = OpAccessChain %20 %131 
                                       f32_4 %199 = OpLoad %198 
                                       f32_3 %200 = OpVectorShuffle %199 %199 0 1 2 
                                       f32_3 %201 = OpFMul %197 %200 
                                                      OpStore %195 %201 
                         read_only Texture2D %205 = OpLoad %204 
                                     sampler %207 = OpLoad %206 
                  read_only Texture2DSampled %208 = OpSampledImage %205 %207 
                                       f32_2 %211 = OpLoad vs_TEXCOORD0 
                                       f32_4 %212 = OpImageSampleImplicitLod %208 %211 
                                                      OpStore %203 %212 
                                       f32_4 %214 = OpLoad %203 
                              Uniform f32_4* %215 = OpAccessChain %20 %153 
                                       f32_4 %216 = OpLoad %215 
                                       f32_4 %217 = OpFMul %214 %216 
                                                      OpStore %213 %217 
                                       f32_3 %218 = OpLoad %195 
                                       f32_4 %219 = OpLoad %213 
                                       f32_3 %220 = OpVectorShuffle %219 %219 0 1 2 
                                       f32_3 %221 = OpFMul %218 %220 
                                                      OpStore %195 %221 
                                       f32_3 %222 = OpLoad %39 
                                       f32_3 %223 = OpLoad %195 
                                       f32_3 %224 = OpFMul %222 %223 
                                                      OpStore %39 %224 
                                       f32_4 %227 = OpLoad %213 
                                       f32_3 %228 = OpVectorShuffle %227 %227 3 3 3 
                                       f32_3 %229 = OpLoad %39 
                                       f32_3 %230 = OpFMul %228 %229 
                                       f32_4 %231 = OpLoad %226 
                                       f32_4 %232 = OpVectorShuffle %231 %230 4 5 6 3 
                                                      OpStore %226 %232 
                                Private f32* %233 = OpAccessChain %213 %173 
                                         f32 %234 = OpLoad %233 
                                 Output f32* %236 = OpAccessChain %226 %173 
                                                      OpStore %236 %234 
                                                      OpReturn
                                                      OpFunctionEnd
"
}
SubProgram "gles3 hw_tier00 " {
Keywords { "DIRECTIONAL_COOKIE" }
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToLight[4];
uniform 	vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in highp vec3 in_NORMAL0;
in highp vec4 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out highp vec2 vs_TEXCOORD3;
out highp vec3 vs_TEXCOORD1;
out highp vec3 vs_TEXCOORD2;
out highp vec4 vs_TEXCOORD4;
vec4 u_xlat0;
vec4 u_xlat1;
vec4 u_xlat2;
float u_xlat10;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy;
    u_xlat1.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat1.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat1.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat10 = dot(u_xlat1.xyz, u_xlat1.xyz);
    u_xlat10 = inversesqrt(u_xlat10);
    vs_TEXCOORD1.xyz = vec3(u_xlat10) * u_xlat1.xyz;
    vs_TEXCOORD2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[3] * in_POSITION0.wwww + u_xlat0;
    u_xlat1.xy = u_xlat0.yy * hlslcc_mtx4x4unity_WorldToLight[1].xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_WorldToLight[0].xy * u_xlat0.xx + u_xlat1.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_WorldToLight[2].xy * u_xlat0.zz + u_xlat0.xy;
    vs_TEXCOORD3.xy = hlslcc_mtx4x4unity_WorldToLight[3].xy * u_xlat0.ww + u_xlat0.xy;
    vs_TEXCOORD4 = vec4(0.0, 0.0, 0.0, 0.0);
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 _LightColor0;
uniform 	vec4 hlslcc_mtx4x4unity_WorldToLight[4];
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 _HColor;
uniform 	mediump float _RampThreshold;
uniform 	mediump float _RampSmooth;
UNITY_LOCATION(0) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(1) uniform highp sampler2D _LightTexture0;
in mediump vec2 vs_TEXCOORD0;
in highp vec3 vs_TEXCOORD1;
in highp vec3 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
mediump vec3 u_xlat16_0;
vec2 u_xlat1;
mediump vec4 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump float u_xlat16_3;
mediump float u_xlat16_6;
void main()
{
    u_xlat16_0.x = dot(vs_TEXCOORD1.xyz, vs_TEXCOORD1.xyz);
    u_xlat16_0.x = inversesqrt(u_xlat16_0.x);
    u_xlat16_0.xyz = u_xlat16_0.xxx * vs_TEXCOORD1.xyz;
    u_xlat16_0.x = dot(u_xlat16_0.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat16_0.x = max(u_xlat16_0.x, 0.0);
    u_xlat16_3 = (-_RampSmooth) * 0.5 + _RampThreshold;
    u_xlat16_0.x = (-u_xlat16_3) + u_xlat16_0.x;
    u_xlat16_6 = _RampSmooth * 0.5 + _RampThreshold;
    u_xlat16_3 = (-u_xlat16_3) + u_xlat16_6;
    u_xlat16_3 = float(1.0) / u_xlat16_3;
    u_xlat16_0.x = u_xlat16_3 * u_xlat16_0.x;
#ifdef UNITY_ADRENO_ES3
    u_xlat16_0.x = min(max(u_xlat16_0.x, 0.0), 1.0);
#else
    u_xlat16_0.x = clamp(u_xlat16_0.x, 0.0, 1.0);
#endif
    u_xlat16_3 = u_xlat16_0.x * -2.0 + 3.0;
    u_xlat16_0.x = u_xlat16_0.x * u_xlat16_0.x;
    u_xlat16_0.x = u_xlat16_0.x * u_xlat16_3;
    u_xlat16_0.xyz = u_xlat16_0.xxx * _HColor.xyz;
    u_xlat1.xy = vs_TEXCOORD2.yy * hlslcc_mtx4x4unity_WorldToLight[1].xy;
    u_xlat1.xy = hlslcc_mtx4x4unity_WorldToLight[0].xy * vs_TEXCOORD2.xx + u_xlat1.xy;
    u_xlat1.xy = hlslcc_mtx4x4unity_WorldToLight[2].xy * vs_TEXCOORD2.zz + u_xlat1.xy;
    u_xlat1.xy = u_xlat1.xy + hlslcc_mtx4x4unity_WorldToLight[3].xy;
    u_xlat1.x = texture(_LightTexture0, u_xlat1.xy).w;
    u_xlat16_2.xyz = u_xlat1.xxx * _LightColor0.xyz;
    u_xlat16_1 = texture(_MainTex, vs_TEXCOORD0.xy);
    u_xlat16_1 = u_xlat16_1 * _Color;
    u_xlat16_2.xyz = u_xlat16_2.xyz * u_xlat16_1.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz * u_xlat16_2.xyz;
    SV_Target0.xyz = u_xlat16_1.www * u_xlat16_0.xyz;
    SV_Target0.w = u_xlat16_1.w;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier01 " {
Keywords { "DIRECTIONAL_COOKIE" }
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToLight[4];
uniform 	vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in highp vec3 in_NORMAL0;
in highp vec4 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out highp vec2 vs_TEXCOORD3;
out highp vec3 vs_TEXCOORD1;
out highp vec3 vs_TEXCOORD2;
out highp vec4 vs_TEXCOORD4;
vec4 u_xlat0;
vec4 u_xlat1;
vec4 u_xlat2;
float u_xlat10;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy;
    u_xlat1.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat1.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat1.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat10 = dot(u_xlat1.xyz, u_xlat1.xyz);
    u_xlat10 = inversesqrt(u_xlat10);
    vs_TEXCOORD1.xyz = vec3(u_xlat10) * u_xlat1.xyz;
    vs_TEXCOORD2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[3] * in_POSITION0.wwww + u_xlat0;
    u_xlat1.xy = u_xlat0.yy * hlslcc_mtx4x4unity_WorldToLight[1].xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_WorldToLight[0].xy * u_xlat0.xx + u_xlat1.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_WorldToLight[2].xy * u_xlat0.zz + u_xlat0.xy;
    vs_TEXCOORD3.xy = hlslcc_mtx4x4unity_WorldToLight[3].xy * u_xlat0.ww + u_xlat0.xy;
    vs_TEXCOORD4 = vec4(0.0, 0.0, 0.0, 0.0);
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 _LightColor0;
uniform 	vec4 hlslcc_mtx4x4unity_WorldToLight[4];
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 _HColor;
uniform 	mediump float _RampThreshold;
uniform 	mediump float _RampSmooth;
UNITY_LOCATION(0) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(1) uniform highp sampler2D _LightTexture0;
in mediump vec2 vs_TEXCOORD0;
in highp vec3 vs_TEXCOORD1;
in highp vec3 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
mediump vec3 u_xlat16_0;
vec2 u_xlat1;
mediump vec4 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump float u_xlat16_3;
mediump float u_xlat16_6;
void main()
{
    u_xlat16_0.x = dot(vs_TEXCOORD1.xyz, vs_TEXCOORD1.xyz);
    u_xlat16_0.x = inversesqrt(u_xlat16_0.x);
    u_xlat16_0.xyz = u_xlat16_0.xxx * vs_TEXCOORD1.xyz;
    u_xlat16_0.x = dot(u_xlat16_0.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat16_0.x = max(u_xlat16_0.x, 0.0);
    u_xlat16_3 = (-_RampSmooth) * 0.5 + _RampThreshold;
    u_xlat16_0.x = (-u_xlat16_3) + u_xlat16_0.x;
    u_xlat16_6 = _RampSmooth * 0.5 + _RampThreshold;
    u_xlat16_3 = (-u_xlat16_3) + u_xlat16_6;
    u_xlat16_3 = float(1.0) / u_xlat16_3;
    u_xlat16_0.x = u_xlat16_3 * u_xlat16_0.x;
#ifdef UNITY_ADRENO_ES3
    u_xlat16_0.x = min(max(u_xlat16_0.x, 0.0), 1.0);
#else
    u_xlat16_0.x = clamp(u_xlat16_0.x, 0.0, 1.0);
#endif
    u_xlat16_3 = u_xlat16_0.x * -2.0 + 3.0;
    u_xlat16_0.x = u_xlat16_0.x * u_xlat16_0.x;
    u_xlat16_0.x = u_xlat16_0.x * u_xlat16_3;
    u_xlat16_0.xyz = u_xlat16_0.xxx * _HColor.xyz;
    u_xlat1.xy = vs_TEXCOORD2.yy * hlslcc_mtx4x4unity_WorldToLight[1].xy;
    u_xlat1.xy = hlslcc_mtx4x4unity_WorldToLight[0].xy * vs_TEXCOORD2.xx + u_xlat1.xy;
    u_xlat1.xy = hlslcc_mtx4x4unity_WorldToLight[2].xy * vs_TEXCOORD2.zz + u_xlat1.xy;
    u_xlat1.xy = u_xlat1.xy + hlslcc_mtx4x4unity_WorldToLight[3].xy;
    u_xlat1.x = texture(_LightTexture0, u_xlat1.xy).w;
    u_xlat16_2.xyz = u_xlat1.xxx * _LightColor0.xyz;
    u_xlat16_1 = texture(_MainTex, vs_TEXCOORD0.xy);
    u_xlat16_1 = u_xlat16_1 * _Color;
    u_xlat16_2.xyz = u_xlat16_2.xyz * u_xlat16_1.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz * u_xlat16_2.xyz;
    SV_Target0.xyz = u_xlat16_1.www * u_xlat16_0.xyz;
    SV_Target0.w = u_xlat16_1.w;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier02 " {
Keywords { "DIRECTIONAL_COOKIE" }
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToLight[4];
uniform 	vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in highp vec3 in_NORMAL0;
in highp vec4 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out highp vec2 vs_TEXCOORD3;
out highp vec3 vs_TEXCOORD1;
out highp vec3 vs_TEXCOORD2;
out highp vec4 vs_TEXCOORD4;
vec4 u_xlat0;
vec4 u_xlat1;
vec4 u_xlat2;
float u_xlat10;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy;
    u_xlat1.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat1.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat1.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat10 = dot(u_xlat1.xyz, u_xlat1.xyz);
    u_xlat10 = inversesqrt(u_xlat10);
    vs_TEXCOORD1.xyz = vec3(u_xlat10) * u_xlat1.xyz;
    vs_TEXCOORD2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[3] * in_POSITION0.wwww + u_xlat0;
    u_xlat1.xy = u_xlat0.yy * hlslcc_mtx4x4unity_WorldToLight[1].xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_WorldToLight[0].xy * u_xlat0.xx + u_xlat1.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_WorldToLight[2].xy * u_xlat0.zz + u_xlat0.xy;
    vs_TEXCOORD3.xy = hlslcc_mtx4x4unity_WorldToLight[3].xy * u_xlat0.ww + u_xlat0.xy;
    vs_TEXCOORD4 = vec4(0.0, 0.0, 0.0, 0.0);
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 _LightColor0;
uniform 	vec4 hlslcc_mtx4x4unity_WorldToLight[4];
uniform 	mediump vec4 _Color;
uniform 	mediump vec4 _HColor;
uniform 	mediump float _RampThreshold;
uniform 	mediump float _RampSmooth;
UNITY_LOCATION(0) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(1) uniform highp sampler2D _LightTexture0;
in mediump vec2 vs_TEXCOORD0;
in highp vec3 vs_TEXCOORD1;
in highp vec3 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
mediump vec3 u_xlat16_0;
vec2 u_xlat1;
mediump vec4 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump float u_xlat16_3;
mediump float u_xlat16_6;
void main()
{
    u_xlat16_0.x = dot(vs_TEXCOORD1.xyz, vs_TEXCOORD1.xyz);
    u_xlat16_0.x = inversesqrt(u_xlat16_0.x);
    u_xlat16_0.xyz = u_xlat16_0.xxx * vs_TEXCOORD1.xyz;
    u_xlat16_0.x = dot(u_xlat16_0.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat16_0.x = max(u_xlat16_0.x, 0.0);
    u_xlat16_3 = (-_RampSmooth) * 0.5 + _RampThreshold;
    u_xlat16_0.x = (-u_xlat16_3) + u_xlat16_0.x;
    u_xlat16_6 = _RampSmooth * 0.5 + _RampThreshold;
    u_xlat16_3 = (-u_xlat16_3) + u_xlat16_6;
    u_xlat16_3 = float(1.0) / u_xlat16_3;
    u_xlat16_0.x = u_xlat16_3 * u_xlat16_0.x;
#ifdef UNITY_ADRENO_ES3
    u_xlat16_0.x = min(max(u_xlat16_0.x, 0.0), 1.0);
#else
    u_xlat16_0.x = clamp(u_xlat16_0.x, 0.0, 1.0);
#endif
    u_xlat16_3 = u_xlat16_0.x * -2.0 + 3.0;
    u_xlat16_0.x = u_xlat16_0.x * u_xlat16_0.x;
    u_xlat16_0.x = u_xlat16_0.x * u_xlat16_3;
    u_xlat16_0.xyz = u_xlat16_0.xxx * _HColor.xyz;
    u_xlat1.xy = vs_TEXCOORD2.yy * hlslcc_mtx4x4unity_WorldToLight[1].xy;
    u_xlat1.xy = hlslcc_mtx4x4unity_WorldToLight[0].xy * vs_TEXCOORD2.xx + u_xlat1.xy;
    u_xlat1.xy = hlslcc_mtx4x4unity_WorldToLight[2].xy * vs_TEXCOORD2.zz + u_xlat1.xy;
    u_xlat1.xy = u_xlat1.xy + hlslcc_mtx4x4unity_WorldToLight[3].xy;
    u_xlat1.x = texture(_LightTexture0, u_xlat1.xy).w;
    u_xlat16_2.xyz = u_xlat1.xxx * _LightColor0.xyz;
    u_xlat16_1 = texture(_MainTex, vs_TEXCOORD0.xy);
    u_xlat16_1 = u_xlat16_1 * _Color;
    u_xlat16_2.xyz = u_xlat16_2.xyz * u_xlat16_1.xyz;
    u_xlat16_0.xyz = u_xlat16_0.xyz * u_xlat16_2.xyz;
    SV_Target0.xyz = u_xlat16_1.www * u_xlat16_0.xyz;
    SV_Target0.w = u_xlat16_1.w;
    return;
}

#endif
"
}
SubProgram "vulkan hw_tier00 " {
Keywords { "DIRECTIONAL_COOKIE" }
"; SPIR-V
; Version: 1.0
; Generator: Khronos Glslang Reference Front End; 6
; Bound: 209
; Schema: 0
                                                      OpCapability Shader 
                                               %1 = OpExtInstImport "GLSL.std.450" 
                                                      OpMemoryModel Logical GLSL450 
                                                      OpEntryPoint Vertex %4 "main" %11 %75 %85 %101 %106 %137 %143 %190 %200 
                                                      OpName vs_TEXCOORD0 "vs_TEXCOORD0" 
                                                      OpName vs_TEXCOORD1 "vs_TEXCOORD1" 
                                                      OpName vs_TEXCOORD2 "vs_TEXCOORD2" 
                                                      OpName vs_TEXCOORD3 "vs_TEXCOORD3" 
                                                      OpName vs_TEXCOORD4 "vs_TEXCOORD4" 
                                                      OpDecorate %11 Location 11 
                                                      OpDecorate %16 ArrayStride 16 
                                                      OpDecorate %17 ArrayStride 17 
                                                      OpDecorate %18 ArrayStride 18 
                                                      OpDecorate %19 ArrayStride 19 
                                                      OpMemberDecorate %20 0 Offset 20 
                                                      OpMemberDecorate %20 1 Offset 20 
                                                      OpMemberDecorate %20 2 Offset 20 
                                                      OpMemberDecorate %20 3 Offset 20 
                                                      OpMemberDecorate %20 4 Offset 20 
                                                      OpDecorate %20 Block 
                                                      OpDecorate %22 DescriptorSet 22 
                                                      OpDecorate %22 Binding 22 
                                                      OpMemberDecorate %73 0 BuiltIn 73 
                                                      OpMemberDecorate %73 1 BuiltIn 73 
                                                      OpMemberDecorate %73 2 BuiltIn 73 
                                                      OpDecorate %73 Block 
                                                      OpDecorate %85 Location 85 
                                                      OpDecorate vs_TEXCOORD0 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD0 Location 101 
                                                      OpDecorate %106 Location 106 
                                                      OpDecorate vs_TEXCOORD1 Location 137 
                                                      OpDecorate vs_TEXCOORD2 Location 143 
                                                      OpDecorate vs_TEXCOORD3 Location 190 
                                                      OpDecorate vs_TEXCOORD4 Location 200 
                                               %2 = OpTypeVoid 
                                               %3 = OpTypeFunction %2 
                                               %6 = OpTypeFloat 32 
                                               %7 = OpTypeVector %6 4 
                                               %8 = OpTypePointer Private %7 
                                Private f32_4* %9 = OpVariable Private 
                                              %10 = OpTypePointer Input %7 
                                 Input f32_4* %11 = OpVariable Input 
                                              %14 = OpTypeInt 32 0 
                                          u32 %15 = OpConstant 4 
                                              %16 = OpTypeArray %7 %15 
                                              %17 = OpTypeArray %7 %15 
                                              %18 = OpTypeArray %7 %15 
                                              %19 = OpTypeArray %7 %15 
                                              %20 = OpTypeStruct %16 %17 %18 %19 %7 
                                              %21 = OpTypePointer Uniform %20 
Uniform struct {f32_4[4]; f32_4[4]; f32_4[4]; f32_4[4]; f32_4;}* %22 = OpVariable Uniform 
                                              %23 = OpTypeInt 32 1 
                                          i32 %24 = OpConstant 0 
                                          i32 %25 = OpConstant 1 
                                              %26 = OpTypePointer Uniform %7 
                                          i32 %37 = OpConstant 2 
                               Private f32_4* %45 = OpVariable Private 
                                          i32 %47 = OpConstant 3 
                               Private f32_4* %51 = OpVariable Private 
                                          u32 %71 = OpConstant 1 
                                              %72 = OpTypeArray %6 %71 
                                              %73 = OpTypeStruct %7 %6 %72 
                                              %74 = OpTypePointer Output %73 
         Output struct {f32_4; f32; f32[1];}* %75 = OpVariable Output 
                                              %83 = OpTypePointer Output %7 
                                 Input f32_4* %85 = OpVariable Input 
                                              %86 = OpTypeVector %6 2 
                                          i32 %89 = OpConstant 4 
                                             %100 = OpTypePointer Output %86 
                       Output f32_2* vs_TEXCOORD0 = OpVariable Output 
                                             %104 = OpTypeVector %6 3 
                                             %105 = OpTypePointer Input %104 
                                Input f32_3* %106 = OpVariable Input 
                                         u32 %112 = OpConstant 0 
                                             %113 = OpTypePointer Private %6 
                                         u32 %126 = OpConstant 2 
                                Private f32* %128 = OpVariable Private 
                                             %136 = OpTypePointer Output %104 
                       Output f32_3* vs_TEXCOORD1 = OpVariable Output 
                       Output f32_3* vs_TEXCOORD2 = OpVariable Output 
                       Output f32_2* vs_TEXCOORD3 = OpVariable Output 
                       Output f32_4* vs_TEXCOORD4 = OpVariable Output 
                                         f32 %201 = OpConstant 3.674022E-40 
                                       f32_4 %202 = OpConstantComposite %201 %201 %201 %201 
                                             %203 = OpTypePointer Output %6 
                                          void %4 = OpFunction None %3 
                                               %5 = OpLabel 
                                        f32_4 %12 = OpLoad %11 
                                        f32_4 %13 = OpVectorShuffle %12 %12 1 1 1 1 
                               Uniform f32_4* %27 = OpAccessChain %22 %24 %25 
                                        f32_4 %28 = OpLoad %27 
                                        f32_4 %29 = OpFMul %13 %28 
                                                      OpStore %9 %29 
                               Uniform f32_4* %30 = OpAccessChain %22 %24 %24 
                                        f32_4 %31 = OpLoad %30 
                                        f32_4 %32 = OpLoad %11 
                                        f32_4 %33 = OpVectorShuffle %32 %32 0 0 0 0 
                                        f32_4 %34 = OpFMul %31 %33 
                                        f32_4 %35 = OpLoad %9 
                                        f32_4 %36 = OpFAdd %34 %35 
                                                      OpStore %9 %36 
                               Uniform f32_4* %38 = OpAccessChain %22 %24 %37 
                                        f32_4 %39 = OpLoad %38 
                                        f32_4 %40 = OpLoad %11 
                                        f32_4 %41 = OpVectorShuffle %40 %40 2 2 2 2 
                                        f32_4 %42 = OpFMul %39 %41 
                                        f32_4 %43 = OpLoad %9 
                                        f32_4 %44 = OpFAdd %42 %43 
                                                      OpStore %9 %44 
                                        f32_4 %46 = OpLoad %9 
                               Uniform f32_4* %48 = OpAccessChain %22 %24 %47 
                                        f32_4 %49 = OpLoad %48 
                                        f32_4 %50 = OpFAdd %46 %49 
                                                      OpStore %45 %50 
                                        f32_4 %52 = OpLoad %45 
                                        f32_4 %53 = OpVectorShuffle %52 %52 1 1 1 1 
                               Uniform f32_4* %54 = OpAccessChain %22 %37 %25 
                                        f32_4 %55 = OpLoad %54 
                                        f32_4 %56 = OpFMul %53 %55 
                                                      OpStore %51 %56 
                               Uniform f32_4* %57 = OpAccessChain %22 %37 %24 
                                        f32_4 %58 = OpLoad %57 
                                        f32_4 %59 = OpLoad %45 
                                        f32_4 %60 = OpVectorShuffle %59 %59 0 0 0 0 
                                        f32_4 %61 = OpFMul %58 %60 
                                        f32_4 %62 = OpLoad %51 
                                        f32_4 %63 = OpFAdd %61 %62 
                                                      OpStore %51 %63 
                               Uniform f32_4* %64 = OpAccessChain %22 %37 %37 
                                        f32_4 %65 = OpLoad %64 
                                        f32_4 %66 = OpLoad %45 
                                        f32_4 %67 = OpVectorShuffle %66 %66 2 2 2 2 
                                        f32_4 %68 = OpFMul %65 %67 
                                        f32_4 %69 = OpLoad %51 
                                        f32_4 %70 = OpFAdd %68 %69 
                                                      OpStore %51 %70 
                               Uniform f32_4* %76 = OpAccessChain %22 %37 %47 
                                        f32_4 %77 = OpLoad %76 
                                        f32_4 %78 = OpLoad %45 
                                        f32_4 %79 = OpVectorShuffle %78 %78 3 3 3 3 
                                        f32_4 %80 = OpFMul %77 %79 
                                        f32_4 %81 = OpLoad %51 
                                        f32_4 %82 = OpFAdd %80 %81 
                                Output f32_4* %84 = OpAccessChain %75 %24 
                                                      OpStore %84 %82 
                                        f32_4 %87 = OpLoad %85 
                                        f32_2 %88 = OpVectorShuffle %87 %87 0 1 
                               Uniform f32_4* %90 = OpAccessChain %22 %89 
                                        f32_4 %91 = OpLoad %90 
                                        f32_2 %92 = OpVectorShuffle %91 %91 0 1 
                                        f32_2 %93 = OpFMul %88 %92 
                               Uniform f32_4* %94 = OpAccessChain %22 %89 
                                        f32_4 %95 = OpLoad %94 
                                        f32_2 %96 = OpVectorShuffle %95 %95 2 3 
                                        f32_2 %97 = OpFAdd %93 %96 
                                        f32_4 %98 = OpLoad %45 
                                        f32_4 %99 = OpVectorShuffle %98 %97 4 5 2 3 
                                                      OpStore %45 %99 
                                       f32_4 %102 = OpLoad %45 
                                       f32_2 %103 = OpVectorShuffle %102 %102 0 1 
                                                      OpStore vs_TEXCOORD0 %103 
                                       f32_3 %107 = OpLoad %106 
                              Uniform f32_4* %108 = OpAccessChain %22 %25 %24 
                                       f32_4 %109 = OpLoad %108 
                                       f32_3 %110 = OpVectorShuffle %109 %109 0 1 2 
                                         f32 %111 = OpDot %107 %110 
                                Private f32* %114 = OpAccessChain %45 %112 
                                                      OpStore %114 %111 
                                       f32_3 %115 = OpLoad %106 
                              Uniform f32_4* %116 = OpAccessChain %22 %25 %25 
                                       f32_4 %117 = OpLoad %116 
                                       f32_3 %118 = OpVectorShuffle %117 %117 0 1 2 
                                         f32 %119 = OpDot %115 %118 
                                Private f32* %120 = OpAccessChain %45 %71 
                                                      OpStore %120 %119 
                                       f32_3 %121 = OpLoad %106 
                              Uniform f32_4* %122 = OpAccessChain %22 %25 %37 
                                       f32_4 %123 = OpLoad %122 
                                       f32_3 %124 = OpVectorShuffle %123 %123 0 1 2 
                                         f32 %125 = OpDot %121 %124 
                                Private f32* %127 = OpAccessChain %45 %126 
                                                      OpStore %127 %125 
                                       f32_4 %129 = OpLoad %45 
                                       f32_3 %130 = OpVectorShuffle %129 %129 0 1 2 
                                       f32_4 %131 = OpLoad %45 
                                       f32_3 %132 = OpVectorShuffle %131 %131 0 1 2 
                                         f32 %133 = OpDot %130 %132 
                                                      OpStore %128 %133 
                                         f32 %134 = OpLoad %128 
                                         f32 %135 = OpExtInst %1 32 %134 
                                                      OpStore %128 %135 
                                         f32 %138 = OpLoad %128 
                                       f32_3 %139 = OpCompositeConstruct %138 %138 %138 
                                       f32_4 %140 = OpLoad %45 
                                       f32_3 %141 = OpVectorShuffle %140 %140 0 1 2 
                                       f32_3 %142 = OpFMul %139 %141 
                                                      OpStore vs_TEXCOORD1 %142 
                              Uniform f32_4* %144 = OpAccessChain %22 %24 %47 
                                       f32_4 %145 = OpLoad %144 
                                       f32_3 %146 = OpVectorShuffle %145 %145 0 1 2 
                                       f32_4 %147 = OpLoad %11 
                                       f32_3 %148 = OpVectorShuffle %147 %147 3 3 3 
                                       f32_3 %149 = OpFMul %146 %148 
                                       f32_4 %150 = OpLoad %9 
                                       f32_3 %151 = OpVectorShuffle %150 %150 0 1 2 
                                       f32_3 %152 = OpFAdd %149 %151 
                                                      OpStore vs_TEXCOORD2 %152 
                              Uniform f32_4* %153 = OpAccessChain %22 %24 %47 
                                       f32_4 %154 = OpLoad %153 
                                       f32_4 %155 = OpLoad %11 
                                       f32_4 %156 = OpVectorShuffle %155 %155 3 3 3 3 
                                       f32_4 %157 = OpFMul %154 %156 
                                       f32_4 %158 = OpLoad %9 
                                       f32_4 %159 = OpFAdd %157 %158 
                                                      OpStore %9 %159 
                                       f32_4 %160 = OpLoad %9 
                                       f32_2 %161 = OpVectorShuffle %160 %160 1 1 
                              Uniform f32_4* %162 = OpAccessChain %22 %47 %25 
                                       f32_4 %163 = OpLoad %162 
                                       f32_2 %164 = OpVectorShuffle %163 %163 0 1 
                                       f32_2 %165 = OpFMul %161 %164 
                                       f32_4 %166 = OpLoad %45 
                                       f32_4 %167 = OpVectorShuffle %166 %165 4 5 2 3 
                                                      OpStore %45 %167 
                              Uniform f32_4* %168 = OpAccessChain %22 %47 %24 
                                       f32_4 %169 = OpLoad %168 
                                       f32_2 %170 = OpVectorShuffle %169 %169 0 1 
                                       f32_4 %171 = OpLoad %9 
                                       f32_2 %172 = OpVectorShuffle %171 %171 0 0 
                                       f32_2 %173 = OpFMul %170 %172 
                                       f32_4 %174 = OpLoad %45 
                                       f32_2 %175 = OpVectorShuffle %174 %174 0 1 
                                       f32_2 %176 = OpFAdd %173 %175 
                                       f32_4 %177 = OpLoad %9 
                                       f32_4 %178 = OpVectorShuffle %177 %176 4 5 2 3 
                                                      OpStore %9 %178 
                              Uniform f32_4* %179 = OpAccessChain %22 %47 %37 
                                       f32_4 %180 = OpLoad %179 
                                       f32_2 %181 = OpVectorShuffle %180 %180 0 1 
                                       f32_4 %182 = OpLoad %9 
                                       f32_2 %183 = OpVectorShuffle %182 %182 2 2 
                                       f32_2 %184 = OpFMul %181 %183 
                                       f32_4 %185 = OpLoad %9 
                                       f32_2 %186 = OpVectorShuffle %185 %185 0 1 
                                       f32_2 %187 = OpFAdd %184 %186 
                                       f32_4 %188 = OpLoad %9 
                                       f32_4 %189 = OpVectorShuffle %188 %187 4 5 2 3 
                                                      OpStore %9 %189 
                              Uniform f32_4* %191 = OpAccessChain %22 %47 %47 
                                       f32_4 %192 = OpLoad %191 
                                       f32_2 %193 = OpVectorShuffle %192 %192 0 1 
                                       f32_4 %194 = OpLoad %9 
                                       f32_2 %195 = OpVectorShuffle %194 %194 3 3 
                                       f32_2 %196 = OpFMul %193 %195 
                                       f32_4 %197 = OpLoad %9 
                                       f32_2 %198 = OpVectorShuffle %197 %197 0 1 
                                       f32_2 %199 = OpFAdd %196 %198 
                                                      OpStore vs_TEXCOORD3 %199 
                                                      OpStore vs_TEXCOORD4 %202 
                                 Output f32* %204 = OpAccessChain %75 %24 %71 
                                         f32 %205 = OpLoad %204 
                                         f32 %206 = OpFNegate %205 
                                 Output f32* %207 = OpAccessChain %75 %24 %71 
                                                      OpStore %207 %206 
                                                      OpReturn
                                                      OpFunctionEnd
; SPIR-V
; Version: 1.0
; Generator: Khronos Glslang Reference Front End; 6
; Bound: 204
; Schema: 0
                                                      OpCapability Shader 
                                               %1 = OpExtInstImport "GLSL.std.450" 
                                                      OpMemoryModel Logical GLSL450 
                                                      OpEntryPoint Fragment %4 "main" %11 %115 %176 %192 
                                                      OpExecutionMode %4 OriginUpperLeft 
                                                      OpName vs_TEXCOORD1 "vs_TEXCOORD1" 
                                                      OpName vs_TEXCOORD2 "vs_TEXCOORD2" 
                                                      OpName vs_TEXCOORD0 "vs_TEXCOORD0" 
                                                      OpDecorate %9 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD1 Location 11 
                                                      OpDecorate %20 RelaxedPrecision 
                                                      OpDecorate %21 RelaxedPrecision 
                                                      OpDecorate %23 RelaxedPrecision 
                                                      OpDecorate %24 RelaxedPrecision 
                                                      OpDecorate %27 RelaxedPrecision 
                                                      OpDecorate %30 ArrayStride 30 
                                                      OpMemberDecorate %31 0 RelaxedPrecision 
                                                      OpMemberDecorate %31 0 Offset 31 
                                                      OpMemberDecorate %31 1 RelaxedPrecision 
                                                      OpMemberDecorate %31 1 Offset 31 
                                                      OpMemberDecorate %31 2 Offset 31 
                                                      OpMemberDecorate %31 3 RelaxedPrecision 
                                                      OpMemberDecorate %31 3 Offset 31 
                                                      OpMemberDecorate %31 4 RelaxedPrecision 
                                                      OpMemberDecorate %31 4 Offset 31 
                                                      OpMemberDecorate %31 5 RelaxedPrecision 
                                                      OpMemberDecorate %31 5 Offset 31 
                                                      OpMemberDecorate %31 6 RelaxedPrecision 
                                                      OpMemberDecorate %31 6 Offset 31 
                                                      OpDecorate %31 Block 
                                                      OpDecorate %33 DescriptorSet 33 
                                                      OpDecorate %33 Binding 33 
                                                      OpDecorate %38 RelaxedPrecision 
                                                      OpDecorate %39 RelaxedPrecision 
                                                      OpDecorate %40 RelaxedPrecision 
                                                      OpDecorate %43 RelaxedPrecision 
                                                      OpDecorate %45 RelaxedPrecision 
                                                      OpDecorate %47 RelaxedPrecision 
                                                      OpDecorate %51 RelaxedPrecision 
                                                      OpDecorate %52 RelaxedPrecision 
                                                      OpDecorate %54 RelaxedPrecision 
                                                      OpDecorate %57 RelaxedPrecision 
                                                      OpDecorate %58 RelaxedPrecision 
                                                      OpDecorate %59 RelaxedPrecision 
                                                      OpDecorate %60 RelaxedPrecision 
                                                      OpDecorate %62 RelaxedPrecision 
                                                      OpDecorate %63 RelaxedPrecision 
                                                      OpDecorate %65 RelaxedPrecision 
                                                      OpDecorate %67 RelaxedPrecision 
                                                      OpDecorate %68 RelaxedPrecision 
                                                      OpDecorate %70 RelaxedPrecision 
                                                      OpDecorate %71 RelaxedPrecision 
                                                      OpDecorate %72 RelaxedPrecision 
                                                      OpDecorate %73 RelaxedPrecision 
                                                      OpDecorate %74 RelaxedPrecision 
                                                      OpDecorate %75 RelaxedPrecision 
                                                      OpDecorate %77 RelaxedPrecision 
                                                      OpDecorate %78 RelaxedPrecision 
                                                      OpDecorate %79 RelaxedPrecision 
                                                      OpDecorate %81 RelaxedPrecision 
                                                      OpDecorate %82 RelaxedPrecision 
                                                      OpDecorate %85 RelaxedPrecision 
                                                      OpDecorate %86 RelaxedPrecision 
                                                      OpDecorate %89 RelaxedPrecision 
                                                      OpDecorate %91 RelaxedPrecision 
                                                      OpDecorate %93 RelaxedPrecision 
                                                      OpDecorate %95 RelaxedPrecision 
                                                      OpDecorate %97 RelaxedPrecision 
                                                      OpDecorate %98 RelaxedPrecision 
                                                      OpDecorate %101 RelaxedPrecision 
                                                      OpDecorate %102 RelaxedPrecision 
                                                      OpDecorate %103 RelaxedPrecision 
                                                      OpDecorate %105 RelaxedPrecision 
                                                      OpDecorate %106 RelaxedPrecision 
                                                      OpDecorate %109 RelaxedPrecision 
                                                      OpDecorate %110 RelaxedPrecision 
                                                      OpDecorate %111 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD2 Location 115 
                                                      OpDecorate %148 DescriptorSet 148 
                                                      OpDecorate %148 Binding 148 
                                                      OpDecorate %152 DescriptorSet 152 
                                                      OpDecorate %152 Binding 152 
                                                      OpDecorate %161 RelaxedPrecision 
                                                      OpDecorate %165 RelaxedPrecision 
                                                      OpDecorate %166 RelaxedPrecision 
                                                      OpDecorate %169 RelaxedPrecision 
                                                      OpDecorate %170 RelaxedPrecision 
                                                      OpDecorate %170 DescriptorSet 170 
                                                      OpDecorate %170 Binding 170 
                                                      OpDecorate %171 RelaxedPrecision 
                                                      OpDecorate %172 RelaxedPrecision 
                                                      OpDecorate %172 DescriptorSet 172 
                                                      OpDecorate %172 Binding 172 
                                                      OpDecorate %173 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD0 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD0 Location 176 
                                                      OpDecorate %177 RelaxedPrecision 
                                                      OpDecorate %178 RelaxedPrecision 
                                                      OpDecorate %179 RelaxedPrecision 
                                                      OpDecorate %180 RelaxedPrecision 
                                                      OpDecorate %182 RelaxedPrecision 
                                                      OpDecorate %183 RelaxedPrecision 
                                                      OpDecorate %184 RelaxedPrecision 
                                                      OpDecorate %185 RelaxedPrecision 
                                                      OpDecorate %186 RelaxedPrecision 
                                                      OpDecorate %187 RelaxedPrecision 
                                                      OpDecorate %188 RelaxedPrecision 
                                                      OpDecorate %189 RelaxedPrecision 
                                                      OpDecorate %190 RelaxedPrecision 
                                                      OpDecorate %192 RelaxedPrecision 
                                                      OpDecorate %192 Location 192 
                                                      OpDecorate %193 RelaxedPrecision 
                                                      OpDecorate %194 RelaxedPrecision 
                                                      OpDecorate %195 RelaxedPrecision 
                                                      OpDecorate %196 RelaxedPrecision 
                                                      OpDecorate %200 RelaxedPrecision 
                                               %2 = OpTypeVoid 
                                               %3 = OpTypeFunction %2 
                                               %6 = OpTypeFloat 32 
                                               %7 = OpTypeVector %6 3 
                                               %8 = OpTypePointer Private %7 
                                Private f32_3* %9 = OpVariable Private 
                                              %10 = OpTypePointer Input %7 
                        Input f32_3* vs_TEXCOORD1 = OpVariable Input 
                                              %15 = OpTypeInt 32 0 
                                          u32 %16 = OpConstant 0 
                                              %17 = OpTypePointer Private %6 
                                              %28 = OpTypeVector %6 4 
                                          u32 %29 = OpConstant 4 
                                              %30 = OpTypeArray %28 %29 
                                              %31 = OpTypeStruct %28 %28 %30 %28 %28 %6 %6 
                                              %32 = OpTypePointer Uniform %31 
Uniform struct {f32_4; f32_4; f32_4[4]; f32_4; f32_4; f32; f32;}* %33 = OpVariable Uniform 
                                              %34 = OpTypeInt 32 1 
                                          i32 %35 = OpConstant 0 
                                              %36 = OpTypePointer Uniform %28 
                                          f32 %44 = OpConstant 3.674022E-40 
                                 Private f32* %47 = OpVariable Private 
                                          i32 %48 = OpConstant 6 
                                              %49 = OpTypePointer Uniform %6 
                                          f32 %53 = OpConstant 3.674022E-40 
                                          i32 %55 = OpConstant 5 
                                 Private f32* %65 = OpVariable Private 
                                          f32 %76 = OpConstant 3.674022E-40 
                                          f32 %90 = OpConstant 3.674022E-40 
                                          f32 %92 = OpConstant 3.674022E-40 
                                         i32 %107 = OpConstant 4 
                                             %112 = OpTypeVector %6 2 
                                             %113 = OpTypePointer Private %112 
                              Private f32_2* %114 = OpVariable Private 
                        Input f32_3* vs_TEXCOORD2 = OpVariable Input 
                                         i32 %118 = OpConstant 2 
                                         i32 %119 = OpConstant 1 
                                         i32 %141 = OpConstant 3 
                                             %146 = OpTypeImage %6 Dim2D 0 0 0 1 Unknown 
                                             %147 = OpTypePointer UniformConstant %146 
        UniformConstant read_only Texture2D* %148 = OpVariable UniformConstant 
                                             %150 = OpTypeSampler 
                                             %151 = OpTypePointer UniformConstant %150 
                    UniformConstant sampler* %152 = OpVariable UniformConstant 
                                             %154 = OpTypeSampledImage %146 
                                         u32 %158 = OpConstant 3 
                              Private f32_3* %161 = OpVariable Private 
                                             %168 = OpTypePointer Private %28 
                              Private f32_4* %169 = OpVariable Private 
        UniformConstant read_only Texture2D* %170 = OpVariable UniformConstant 
                    UniformConstant sampler* %172 = OpVariable UniformConstant 
                                             %175 = OpTypePointer Input %112 
                        Input f32_2* vs_TEXCOORD0 = OpVariable Input 
                              Private f32_4* %179 = OpVariable Private 
                                             %191 = OpTypePointer Output %28 
                               Output f32_4* %192 = OpVariable Output 
                                             %201 = OpTypePointer Output %6 
                                          void %4 = OpFunction None %3 
                                               %5 = OpLabel 
                                        f32_3 %12 = OpLoad vs_TEXCOORD1 
                                        f32_3 %13 = OpLoad vs_TEXCOORD1 
                                          f32 %14 = OpDot %12 %13 
                                 Private f32* %18 = OpAccessChain %9 %16 
                                                      OpStore %18 %14 
                                 Private f32* %19 = OpAccessChain %9 %16 
                                          f32 %20 = OpLoad %19 
                                          f32 %21 = OpExtInst %1 32 %20 
                                 Private f32* %22 = OpAccessChain %9 %16 
                                                      OpStore %22 %21 
                                        f32_3 %23 = OpLoad %9 
                                        f32_3 %24 = OpVectorShuffle %23 %23 0 0 0 
                                        f32_3 %25 = OpLoad vs_TEXCOORD1 
                                        f32_3 %26 = OpFMul %24 %25 
                                                      OpStore %9 %26 
                                        f32_3 %27 = OpLoad %9 
                               Uniform f32_4* %37 = OpAccessChain %33 %35 
                                        f32_4 %38 = OpLoad %37 
                                        f32_3 %39 = OpVectorShuffle %38 %38 0 1 2 
                                          f32 %40 = OpDot %27 %39 
                                 Private f32* %41 = OpAccessChain %9 %16 
                                                      OpStore %41 %40 
                                 Private f32* %42 = OpAccessChain %9 %16 
                                          f32 %43 = OpLoad %42 
                                          f32 %45 = OpExtInst %1 40 %43 %44 
                                 Private f32* %46 = OpAccessChain %9 %16 
                                                      OpStore %46 %45 
                                 Uniform f32* %50 = OpAccessChain %33 %48 
                                          f32 %51 = OpLoad %50 
                                          f32 %52 = OpFNegate %51 
                                          f32 %54 = OpFMul %52 %53 
                                 Uniform f32* %56 = OpAccessChain %33 %55 
                                          f32 %57 = OpLoad %56 
                                          f32 %58 = OpFAdd %54 %57 
                                                      OpStore %47 %58 
                                          f32 %59 = OpLoad %47 
                                          f32 %60 = OpFNegate %59 
                                 Private f32* %61 = OpAccessChain %9 %16 
                                          f32 %62 = OpLoad %61 
                                          f32 %63 = OpFAdd %60 %62 
                                 Private f32* %64 = OpAccessChain %9 %16 
                                                      OpStore %64 %63 
                                 Uniform f32* %66 = OpAccessChain %33 %48 
                                          f32 %67 = OpLoad %66 
                                          f32 %68 = OpFMul %67 %53 
                                 Uniform f32* %69 = OpAccessChain %33 %55 
                                          f32 %70 = OpLoad %69 
                                          f32 %71 = OpFAdd %68 %70 
                                                      OpStore %65 %71 
                                          f32 %72 = OpLoad %47 
                                          f32 %73 = OpFNegate %72 
                                          f32 %74 = OpLoad %65 
                                          f32 %75 = OpFAdd %73 %74 
                                                      OpStore %47 %75 
                                          f32 %77 = OpLoad %47 
                                          f32 %78 = OpFDiv %76 %77 
                                                      OpStore %47 %78 
                                          f32 %79 = OpLoad %47 
                                 Private f32* %80 = OpAccessChain %9 %16 
                                          f32 %81 = OpLoad %80 
                                          f32 %82 = OpFMul %79 %81 
                                 Private f32* %83 = OpAccessChain %9 %16 
                                                      OpStore %83 %82 
                                 Private f32* %84 = OpAccessChain %9 %16 
                                          f32 %85 = OpLoad %84 
                                          f32 %86 = OpExtInst %1 43 %85 %44 %76 
                                 Private f32* %87 = OpAccessChain %9 %16 
                                                      OpStore %87 %86 
                                 Private f32* %88 = OpAccessChain %9 %16 
                                          f32 %89 = OpLoad %88 
                                          f32 %91 = OpFMul %89 %90 
                                          f32 %93 = OpFAdd %91 %92 
                                                      OpStore %47 %93 
                                 Private f32* %94 = OpAccessChain %9 %16 
                                          f32 %95 = OpLoad %94 
                                 Private f32* %96 = OpAccessChain %9 %16 
                                          f32 %97 = OpLoad %96 
                                          f32 %98 = OpFMul %95 %97 
                                 Private f32* %99 = OpAccessChain %9 %16 
                                                      OpStore %99 %98 
                                Private f32* %100 = OpAccessChain %9 %16 
                                         f32 %101 = OpLoad %100 
                                         f32 %102 = OpLoad %47 
                                         f32 %103 = OpFMul %101 %102 
                                Private f32* %104 = OpAccessChain %9 %16 
                                                      OpStore %104 %103 
                                       f32_3 %105 = OpLoad %9 
                                       f32_3 %106 = OpVectorShuffle %105 %105 0 0 0 
                              Uniform f32_4* %108 = OpAccessChain %33 %107 
                                       f32_4 %109 = OpLoad %108 
                                       f32_3 %110 = OpVectorShuffle %109 %109 0 1 2 
                                       f32_3 %111 = OpFMul %106 %110 
                                                      OpStore %9 %111 
                                       f32_3 %116 = OpLoad vs_TEXCOORD2 
                                       f32_2 %117 = OpVectorShuffle %116 %116 1 1 
                              Uniform f32_4* %120 = OpAccessChain %33 %118 %119 
                                       f32_4 %121 = OpLoad %120 
                                       f32_2 %122 = OpVectorShuffle %121 %121 0 1 
                                       f32_2 %123 = OpFMul %117 %122 
                                                      OpStore %114 %123 
                              Uniform f32_4* %124 = OpAccessChain %33 %118 %35 
                                       f32_4 %125 = OpLoad %124 
                                       f32_2 %126 = OpVectorShuffle %125 %125 0 1 
                                       f32_3 %127 = OpLoad vs_TEXCOORD2 
                                       f32_2 %128 = OpVectorShuffle %127 %127 0 0 
                                       f32_2 %129 = OpFMul %126 %128 
                                       f32_2 %130 = OpLoad %114 
                                       f32_2 %131 = OpFAdd %129 %130 
                                                      OpStore %114 %131 
                              Uniform f32_4* %132 = OpAccessChain %33 %118 %118 
                                       f32_4 %133 = OpLoad %132 
                                       f32_2 %134 = OpVectorShuffle %133 %133 0 1 
                                       f32_3 %135 = OpLoad vs_TEXCOORD2 
                                       f32_2 %136 = OpVectorShuffle %135 %135 2 2 
                                       f32_2 %137 = OpFMul %134 %136 
                                       f32_2 %138 = OpLoad %114 
                                       f32_2 %139 = OpFAdd %137 %138 
                                                      OpStore %114 %139 
                                       f32_2 %140 = OpLoad %114 
                              Uniform f32_4* %142 = OpAccessChain %33 %118 %141 
                                       f32_4 %143 = OpLoad %142 
                                       f32_2 %144 = OpVectorShuffle %143 %143 0 1 
                                       f32_2 %145 = OpFAdd %140 %144 
                                                      OpStore %114 %145 
                         read_only Texture2D %149 = OpLoad %148 
                                     sampler %153 = OpLoad %152 
                  read_only Texture2DSampled %155 = OpSampledImage %149 %153 
                                       f32_2 %156 = OpLoad %114 
                                       f32_4 %157 = OpImageSampleImplicitLod %155 %156 
                                         f32 %159 = OpCompositeExtract %157 3 
                                Private f32* %160 = OpAccessChain %114 %16 
                                                      OpStore %160 %159 
                                       f32_2 %162 = OpLoad %114 
                                       f32_3 %163 = OpVectorShuffle %162 %162 0 0 0 
                              Uniform f32_4* %164 = OpAccessChain %33 %119 
                                       f32_4 %165 = OpLoad %164 
                                       f32_3 %166 = OpVectorShuffle %165 %165 0 1 2 
                                       f32_3 %167 = OpFMul %163 %166 
                                                      OpStore %161 %167 
                         read_only Texture2D %171 = OpLoad %170 
                                     sampler %173 = OpLoad %172 
                  read_only Texture2DSampled %174 = OpSampledImage %171 %173 
                                       f32_2 %177 = OpLoad vs_TEXCOORD0 
                                       f32_4 %178 = OpImageSampleImplicitLod %174 %177 
                                                      OpStore %169 %178 
                                       f32_4 %180 = OpLoad %169 
                              Uniform f32_4* %181 = OpAccessChain %33 %141 
                                       f32_4 %182 = OpLoad %181 
                                       f32_4 %183 = OpFMul %180 %182 
                                                      OpStore %179 %183 
                                       f32_3 %184 = OpLoad %161 
                                       f32_4 %185 = OpLoad %179 
                                       f32_3 %186 = OpVectorShuffle %185 %185 0 1 2 
                                       f32_3 %187 = OpFMul %184 %186 
                                                      OpStore %161 %187 
                                       f32_3 %188 = OpLoad %9 
                                       f32_3 %189 = OpLoad %161 
                                       f32_3 %190 = OpFMul %188 %189 
                                                      OpStore %9 %190 
                                       f32_4 %193 = OpLoad %179 
                                       f32_3 %194 = OpVectorShuffle %193 %193 3 3 3 
                                       f32_3 %195 = OpLoad %9 
                                       f32_3 %196 = OpFMul %194 %195 
                                       f32_4 %197 = OpLoad %192 
                                       f32_4 %198 = OpVectorShuffle %197 %196 4 5 6 3 
                                                      OpStore %192 %198 
                                Private f32* %199 = OpAccessChain %179 %158 
                                         f32 %200 = OpLoad %199 
                                 Output f32* %202 = OpAccessChain %192 %158 
                                                      OpStore %202 %200 
                                                      OpReturn
                                                      OpFunctionEnd
"
}
SubProgram "vulkan hw_tier01 " {
Keywords { "DIRECTIONAL_COOKIE" }
"; SPIR-V
; Version: 1.0
; Generator: Khronos Glslang Reference Front End; 6
; Bound: 209
; Schema: 0
                                                      OpCapability Shader 
                                               %1 = OpExtInstImport "GLSL.std.450" 
                                                      OpMemoryModel Logical GLSL450 
                                                      OpEntryPoint Vertex %4 "main" %11 %75 %85 %101 %106 %137 %143 %190 %200 
                                                      OpName vs_TEXCOORD0 "vs_TEXCOORD0" 
                                                      OpName vs_TEXCOORD1 "vs_TEXCOORD1" 
                                                      OpName vs_TEXCOORD2 "vs_TEXCOORD2" 
                                                      OpName vs_TEXCOORD3 "vs_TEXCOORD3" 
                                                      OpName vs_TEXCOORD4 "vs_TEXCOORD4" 
                                                      OpDecorate %11 Location 11 
                                                      OpDecorate %16 ArrayStride 16 
                                                      OpDecorate %17 ArrayStride 17 
                                                      OpDecorate %18 ArrayStride 18 
                                                      OpDecorate %19 ArrayStride 19 
                                                      OpMemberDecorate %20 0 Offset 20 
                                                      OpMemberDecorate %20 1 Offset 20 
                                                      OpMemberDecorate %20 2 Offset 20 
                                                      OpMemberDecorate %20 3 Offset 20 
                                                      OpMemberDecorate %20 4 Offset 20 
                                                      OpDecorate %20 Block 
                                                      OpDecorate %22 DescriptorSet 22 
                                                      OpDecorate %22 Binding 22 
                                                      OpMemberDecorate %73 0 BuiltIn 73 
                                                      OpMemberDecorate %73 1 BuiltIn 73 
                                                      OpMemberDecorate %73 2 BuiltIn 73 
                                                      OpDecorate %73 Block 
                                                      OpDecorate %85 Location 85 
                                                      OpDecorate vs_TEXCOORD0 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD0 Location 101 
                                                      OpDecorate %106 Location 106 
                                                      OpDecorate vs_TEXCOORD1 Location 137 
                                                      OpDecorate vs_TEXCOORD2 Location 143 
                                                      OpDecorate vs_TEXCOORD3 Location 190 
                                                      OpDecorate vs_TEXCOORD4 Location 200 
                                               %2 = OpTypeVoid 
                                               %3 = OpTypeFunction %2 
                                               %6 = OpTypeFloat 32 
                                               %7 = OpTypeVector %6 4 
                                               %8 = OpTypePointer Private %7 
                                Private f32_4* %9 = OpVariable Private 
                                              %10 = OpTypePointer Input %7 
                                 Input f32_4* %11 = OpVariable Input 
                                              %14 = OpTypeInt 32 0 
                                          u32 %15 = OpConstant 4 
                                              %16 = OpTypeArray %7 %15 
                                              %17 = OpTypeArray %7 %15 
                                              %18 = OpTypeArray %7 %15 
                                              %19 = OpTypeArray %7 %15 
                                              %20 = OpTypeStruct %16 %17 %18 %19 %7 
                                              %21 = OpTypePointer Uniform %20 
Uniform struct {f32_4[4]; f32_4[4]; f32_4[4]; f32_4[4]; f32_4;}* %22 = OpVariable Uniform 
                                              %23 = OpTypeInt 32 1 
                                          i32 %24 = OpConstant 0 
                                          i32 %25 = OpConstant 1 
                                              %26 = OpTypePointer Uniform %7 
                                          i32 %37 = OpConstant 2 
                               Private f32_4* %45 = OpVariable Private 
                                          i32 %47 = OpConstant 3 
                               Private f32_4* %51 = OpVariable Private 
                                          u32 %71 = OpConstant 1 
                                              %72 = OpTypeArray %6 %71 
                                              %73 = OpTypeStruct %7 %6 %72 
                                              %74 = OpTypePointer Output %73 
         Output struct {f32_4; f32; f32[1];}* %75 = OpVariable Output 
                                              %83 = OpTypePointer Output %7 
                                 Input f32_4* %85 = OpVariable Input 
                                              %86 = OpTypeVector %6 2 
                                          i32 %89 = OpConstant 4 
                                             %100 = OpTypePointer Output %86 
                       Output f32_2* vs_TEXCOORD0 = OpVariable Output 
                                             %104 = OpTypeVector %6 3 
                                             %105 = OpTypePointer Input %104 
                                Input f32_3* %106 = OpVariable Input 
                                         u32 %112 = OpConstant 0 
                                             %113 = OpTypePointer Private %6 
                                         u32 %126 = OpConstant 2 
                                Private f32* %128 = OpVariable Private 
                                             %136 = OpTypePointer Output %104 
                       Output f32_3* vs_TEXCOORD1 = OpVariable Output 
                       Output f32_3* vs_TEXCOORD2 = OpVariable Output 
                       Output f32_2* vs_TEXCOORD3 = OpVariable Output 
                       Output f32_4* vs_TEXCOORD4 = OpVariable Output 
                                         f32 %201 = OpConstant 3.674022E-40 
                                       f32_4 %202 = OpConstantComposite %201 %201 %201 %201 
                                             %203 = OpTypePointer Output %6 
                                          void %4 = OpFunction None %3 
                                               %5 = OpLabel 
                                        f32_4 %12 = OpLoad %11 
                                        f32_4 %13 = OpVectorShuffle %12 %12 1 1 1 1 
                               Uniform f32_4* %27 = OpAccessChain %22 %24 %25 
                                        f32_4 %28 = OpLoad %27 
                                        f32_4 %29 = OpFMul %13 %28 
                                                      OpStore %9 %29 
                               Uniform f32_4* %30 = OpAccessChain %22 %24 %24 
                                        f32_4 %31 = OpLoad %30 
                                        f32_4 %32 = OpLoad %11 
                                        f32_4 %33 = OpVectorShuffle %32 %32 0 0 0 0 
                                        f32_4 %34 = OpFMul %31 %33 
                                        f32_4 %35 = OpLoad %9 
                                        f32_4 %36 = OpFAdd %34 %35 
                                                      OpStore %9 %36 
                               Uniform f32_4* %38 = OpAccessChain %22 %24 %37 
                                        f32_4 %39 = OpLoad %38 
                                        f32_4 %40 = OpLoad %11 
                                        f32_4 %41 = OpVectorShuffle %40 %40 2 2 2 2 
                                        f32_4 %42 = OpFMul %39 %41 
                                        f32_4 %43 = OpLoad %9 
                                        f32_4 %44 = OpFAdd %42 %43 
                                                      OpStore %9 %44 
                                        f32_4 %46 = OpLoad %9 
                               Uniform f32_4* %48 = OpAccessChain %22 %24 %47 
                                        f32_4 %49 = OpLoad %48 
                                        f32_4 %50 = OpFAdd %46 %49 
                                                      OpStore %45 %50 
                                        f32_4 %52 = OpLoad %45 
                                        f32_4 %53 = OpVectorShuffle %52 %52 1 1 1 1 
                               Uniform f32_4* %54 = OpAccessChain %22 %37 %25 
                                        f32_4 %55 = OpLoad %54 
                                        f32_4 %56 = OpFMul %53 %55 
                                                      OpStore %51 %56 
                               Uniform f32_4* %57 = OpAccessChain %22 %37 %24 
                                        f32_4 %58 = OpLoad %57 
                                        f32_4 %59 = OpLoad %45 
                                        f32_4 %60 = OpVectorShuffle %59 %59 0 0 0 0 
                                        f32_4 %61 = OpFMul %58 %60 
                                        f32_4 %62 = OpLoad %51 
                                        f32_4 %63 = OpFAdd %61 %62 
                                                      OpStore %51 %63 
                               Uniform f32_4* %64 = OpAccessChain %22 %37 %37 
                                        f32_4 %65 = OpLoad %64 
                                        f32_4 %66 = OpLoad %45 
                                        f32_4 %67 = OpVectorShuffle %66 %66 2 2 2 2 
                                        f32_4 %68 = OpFMul %65 %67 
                                        f32_4 %69 = OpLoad %51 
                                        f32_4 %70 = OpFAdd %68 %69 
                                                      OpStore %51 %70 
                               Uniform f32_4* %76 = OpAccessChain %22 %37 %47 
                                        f32_4 %77 = OpLoad %76 
                                        f32_4 %78 = OpLoad %45 
                                        f32_4 %79 = OpVectorShuffle %78 %78 3 3 3 3 
                                        f32_4 %80 = OpFMul %77 %79 
                                        f32_4 %81 = OpLoad %51 
                                        f32_4 %82 = OpFAdd %80 %81 
                                Output f32_4* %84 = OpAccessChain %75 %24 
                                                      OpStore %84 %82 
                                        f32_4 %87 = OpLoad %85 
                                        f32_2 %88 = OpVectorShuffle %87 %87 0 1 
                               Uniform f32_4* %90 = OpAccessChain %22 %89 
                                        f32_4 %91 = OpLoad %90 
                                        f32_2 %92 = OpVectorShuffle %91 %91 0 1 
                                        f32_2 %93 = OpFMul %88 %92 
                               Uniform f32_4* %94 = OpAccessChain %22 %89 
                                        f32_4 %95 = OpLoad %94 
                                        f32_2 %96 = OpVectorShuffle %95 %95 2 3 
                                        f32_2 %97 = OpFAdd %93 %96 
                                        f32_4 %98 = OpLoad %45 
                                        f32_4 %99 = OpVectorShuffle %98 %97 4 5 2 3 
                                                      OpStore %45 %99 
                                       f32_4 %102 = OpLoad %45 
                                       f32_2 %103 = OpVectorShuffle %102 %102 0 1 
                                                      OpStore vs_TEXCOORD0 %103 
                                       f32_3 %107 = OpLoad %106 
                              Uniform f32_4* %108 = OpAccessChain %22 %25 %24 
                                       f32_4 %109 = OpLoad %108 
                                       f32_3 %110 = OpVectorShuffle %109 %109 0 1 2 
                                         f32 %111 = OpDot %107 %110 
                                Private f32* %114 = OpAccessChain %45 %112 
                                                      OpStore %114 %111 
                                       f32_3 %115 = OpLoad %106 
                              Uniform f32_4* %116 = OpAccessChain %22 %25 %25 
                                       f32_4 %117 = OpLoad %116 
                                       f32_3 %118 = OpVectorShuffle %117 %117 0 1 2 
                                         f32 %119 = OpDot %115 %118 
                                Private f32* %120 = OpAccessChain %45 %71 
                                                      OpStore %120 %119 
                                       f32_3 %121 = OpLoad %106 
                              Uniform f32_4* %122 = OpAccessChain %22 %25 %37 
                                       f32_4 %123 = OpLoad %122 
                                       f32_3 %124 = OpVectorShuffle %123 %123 0 1 2 
                                         f32 %125 = OpDot %121 %124 
                                Private f32* %127 = OpAccessChain %45 %126 
                                                      OpStore %127 %125 
                                       f32_4 %129 = OpLoad %45 
                                       f32_3 %130 = OpVectorShuffle %129 %129 0 1 2 
                                       f32_4 %131 = OpLoad %45 
                                       f32_3 %132 = OpVectorShuffle %131 %131 0 1 2 
                                         f32 %133 = OpDot %130 %132 
                                                      OpStore %128 %133 
                                         f32 %134 = OpLoad %128 
                                         f32 %135 = OpExtInst %1 32 %134 
                                                      OpStore %128 %135 
                                         f32 %138 = OpLoad %128 
                                       f32_3 %139 = OpCompositeConstruct %138 %138 %138 
                                       f32_4 %140 = OpLoad %45 
                                       f32_3 %141 = OpVectorShuffle %140 %140 0 1 2 
                                       f32_3 %142 = OpFMul %139 %141 
                                                      OpStore vs_TEXCOORD1 %142 
                              Uniform f32_4* %144 = OpAccessChain %22 %24 %47 
                                       f32_4 %145 = OpLoad %144 
                                       f32_3 %146 = OpVectorShuffle %145 %145 0 1 2 
                                       f32_4 %147 = OpLoad %11 
                                       f32_3 %148 = OpVectorShuffle %147 %147 3 3 3 
                                       f32_3 %149 = OpFMul %146 %148 
                                       f32_4 %150 = OpLoad %9 
                                       f32_3 %151 = OpVectorShuffle %150 %150 0 1 2 
                                       f32_3 %152 = OpFAdd %149 %151 
                                                      OpStore vs_TEXCOORD2 %152 
                              Uniform f32_4* %153 = OpAccessChain %22 %24 %47 
                                       f32_4 %154 = OpLoad %153 
                                       f32_4 %155 = OpLoad %11 
                                       f32_4 %156 = OpVectorShuffle %155 %155 3 3 3 3 
                                       f32_4 %157 = OpFMul %154 %156 
                                       f32_4 %158 = OpLoad %9 
                                       f32_4 %159 = OpFAdd %157 %158 
                                                      OpStore %9 %159 
                                       f32_4 %160 = OpLoad %9 
                                       f32_2 %161 = OpVectorShuffle %160 %160 1 1 
                              Uniform f32_4* %162 = OpAccessChain %22 %47 %25 
                                       f32_4 %163 = OpLoad %162 
                                       f32_2 %164 = OpVectorShuffle %163 %163 0 1 
                                       f32_2 %165 = OpFMul %161 %164 
                                       f32_4 %166 = OpLoad %45 
                                       f32_4 %167 = OpVectorShuffle %166 %165 4 5 2 3 
                                                      OpStore %45 %167 
                              Uniform f32_4* %168 = OpAccessChain %22 %47 %24 
                                       f32_4 %169 = OpLoad %168 
                                       f32_2 %170 = OpVectorShuffle %169 %169 0 1 
                                       f32_4 %171 = OpLoad %9 
                                       f32_2 %172 = OpVectorShuffle %171 %171 0 0 
                                       f32_2 %173 = OpFMul %170 %172 
                                       f32_4 %174 = OpLoad %45 
                                       f32_2 %175 = OpVectorShuffle %174 %174 0 1 
                                       f32_2 %176 = OpFAdd %173 %175 
                                       f32_4 %177 = OpLoad %9 
                                       f32_4 %178 = OpVectorShuffle %177 %176 4 5 2 3 
                                                      OpStore %9 %178 
                              Uniform f32_4* %179 = OpAccessChain %22 %47 %37 
                                       f32_4 %180 = OpLoad %179 
                                       f32_2 %181 = OpVectorShuffle %180 %180 0 1 
                                       f32_4 %182 = OpLoad %9 
                                       f32_2 %183 = OpVectorShuffle %182 %182 2 2 
                                       f32_2 %184 = OpFMul %181 %183 
                                       f32_4 %185 = OpLoad %9 
                                       f32_2 %186 = OpVectorShuffle %185 %185 0 1 
                                       f32_2 %187 = OpFAdd %184 %186 
                                       f32_4 %188 = OpLoad %9 
                                       f32_4 %189 = OpVectorShuffle %188 %187 4 5 2 3 
                                                      OpStore %9 %189 
                              Uniform f32_4* %191 = OpAccessChain %22 %47 %47 
                                       f32_4 %192 = OpLoad %191 
                                       f32_2 %193 = OpVectorShuffle %192 %192 0 1 
                                       f32_4 %194 = OpLoad %9 
                                       f32_2 %195 = OpVectorShuffle %194 %194 3 3 
                                       f32_2 %196 = OpFMul %193 %195 
                                       f32_4 %197 = OpLoad %9 
                                       f32_2 %198 = OpVectorShuffle %197 %197 0 1 
                                       f32_2 %199 = OpFAdd %196 %198 
                                                      OpStore vs_TEXCOORD3 %199 
                                                      OpStore vs_TEXCOORD4 %202 
                                 Output f32* %204 = OpAccessChain %75 %24 %71 
                                         f32 %205 = OpLoad %204 
                                         f32 %206 = OpFNegate %205 
                                 Output f32* %207 = OpAccessChain %75 %24 %71 
                                                      OpStore %207 %206 
                                                      OpReturn
                                                      OpFunctionEnd
; SPIR-V
; Version: 1.0
; Generator: Khronos Glslang Reference Front End; 6
; Bound: 204
; Schema: 0
                                                      OpCapability Shader 
                                               %1 = OpExtInstImport "GLSL.std.450" 
                                                      OpMemoryModel Logical GLSL450 
                                                      OpEntryPoint Fragment %4 "main" %11 %115 %176 %192 
                                                      OpExecutionMode %4 OriginUpperLeft 
                                                      OpName vs_TEXCOORD1 "vs_TEXCOORD1" 
                                                      OpName vs_TEXCOORD2 "vs_TEXCOORD2" 
                                                      OpName vs_TEXCOORD0 "vs_TEXCOORD0" 
                                                      OpDecorate %9 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD1 Location 11 
                                                      OpDecorate %20 RelaxedPrecision 
                                                      OpDecorate %21 RelaxedPrecision 
                                                      OpDecorate %23 RelaxedPrecision 
                                                      OpDecorate %24 RelaxedPrecision 
                                                      OpDecorate %27 RelaxedPrecision 
                                                      OpDecorate %30 ArrayStride 30 
                                                      OpMemberDecorate %31 0 RelaxedPrecision 
                                                      OpMemberDecorate %31 0 Offset 31 
                                                      OpMemberDecorate %31 1 RelaxedPrecision 
                                                      OpMemberDecorate %31 1 Offset 31 
                                                      OpMemberDecorate %31 2 Offset 31 
                                                      OpMemberDecorate %31 3 RelaxedPrecision 
                                                      OpMemberDecorate %31 3 Offset 31 
                                                      OpMemberDecorate %31 4 RelaxedPrecision 
                                                      OpMemberDecorate %31 4 Offset 31 
                                                      OpMemberDecorate %31 5 RelaxedPrecision 
                                                      OpMemberDecorate %31 5 Offset 31 
                                                      OpMemberDecorate %31 6 RelaxedPrecision 
                                                      OpMemberDecorate %31 6 Offset 31 
                                                      OpDecorate %31 Block 
                                                      OpDecorate %33 DescriptorSet 33 
                                                      OpDecorate %33 Binding 33 
                                                      OpDecorate %38 RelaxedPrecision 
                                                      OpDecorate %39 RelaxedPrecision 
                                                      OpDecorate %40 RelaxedPrecision 
                                                      OpDecorate %43 RelaxedPrecision 
                                                      OpDecorate %45 RelaxedPrecision 
                                                      OpDecorate %47 RelaxedPrecision 
                                                      OpDecorate %51 RelaxedPrecision 
                                                      OpDecorate %52 RelaxedPrecision 
                                                      OpDecorate %54 RelaxedPrecision 
                                                      OpDecorate %57 RelaxedPrecision 
                                                      OpDecorate %58 RelaxedPrecision 
                                                      OpDecorate %59 RelaxedPrecision 
                                                      OpDecorate %60 RelaxedPrecision 
                                                      OpDecorate %62 RelaxedPrecision 
                                                      OpDecorate %63 RelaxedPrecision 
                                                      OpDecorate %65 RelaxedPrecision 
                                                      OpDecorate %67 RelaxedPrecision 
                                                      OpDecorate %68 RelaxedPrecision 
                                                      OpDecorate %70 RelaxedPrecision 
                                                      OpDecorate %71 RelaxedPrecision 
                                                      OpDecorate %72 RelaxedPrecision 
                                                      OpDecorate %73 RelaxedPrecision 
                                                      OpDecorate %74 RelaxedPrecision 
                                                      OpDecorate %75 RelaxedPrecision 
                                                      OpDecorate %77 RelaxedPrecision 
                                                      OpDecorate %78 RelaxedPrecision 
                                                      OpDecorate %79 RelaxedPrecision 
                                                      OpDecorate %81 RelaxedPrecision 
                                                      OpDecorate %82 RelaxedPrecision 
                                                      OpDecorate %85 RelaxedPrecision 
                                                      OpDecorate %86 RelaxedPrecision 
                                                      OpDecorate %89 RelaxedPrecision 
                                                      OpDecorate %91 RelaxedPrecision 
                                                      OpDecorate %93 RelaxedPrecision 
                                                      OpDecorate %95 RelaxedPrecision 
                                                      OpDecorate %97 RelaxedPrecision 
                                                      OpDecorate %98 RelaxedPrecision 
                                                      OpDecorate %101 RelaxedPrecision 
                                                      OpDecorate %102 RelaxedPrecision 
                                                      OpDecorate %103 RelaxedPrecision 
                                                      OpDecorate %105 RelaxedPrecision 
                                                      OpDecorate %106 RelaxedPrecision 
                                                      OpDecorate %109 RelaxedPrecision 
                                                      OpDecorate %110 RelaxedPrecision 
                                                      OpDecorate %111 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD2 Location 115 
                                                      OpDecorate %148 DescriptorSet 148 
                                                      OpDecorate %148 Binding 148 
                                                      OpDecorate %152 DescriptorSet 152 
                                                      OpDecorate %152 Binding 152 
                                                      OpDecorate %161 RelaxedPrecision 
                                                      OpDecorate %165 RelaxedPrecision 
                                                      OpDecorate %166 RelaxedPrecision 
                                                      OpDecorate %169 RelaxedPrecision 
                                                      OpDecorate %170 RelaxedPrecision 
                                                      OpDecorate %170 DescriptorSet 170 
                                                      OpDecorate %170 Binding 170 
                                                      OpDecorate %171 RelaxedPrecision 
                                                      OpDecorate %172 RelaxedPrecision 
                                                      OpDecorate %172 DescriptorSet 172 
                                                      OpDecorate %172 Binding 172 
                                                      OpDecorate %173 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD0 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD0 Location 176 
                                                      OpDecorate %177 RelaxedPrecision 
                                                      OpDecorate %178 RelaxedPrecision 
                                                      OpDecorate %179 RelaxedPrecision 
                                                      OpDecorate %180 RelaxedPrecision 
                                                      OpDecorate %182 RelaxedPrecision 
                                                      OpDecorate %183 RelaxedPrecision 
                                                      OpDecorate %184 RelaxedPrecision 
                                                      OpDecorate %185 RelaxedPrecision 
                                                      OpDecorate %186 RelaxedPrecision 
                                                      OpDecorate %187 RelaxedPrecision 
                                                      OpDecorate %188 RelaxedPrecision 
                                                      OpDecorate %189 RelaxedPrecision 
                                                      OpDecorate %190 RelaxedPrecision 
                                                      OpDecorate %192 RelaxedPrecision 
                                                      OpDecorate %192 Location 192 
                                                      OpDecorate %193 RelaxedPrecision 
                                                      OpDecorate %194 RelaxedPrecision 
                                                      OpDecorate %195 RelaxedPrecision 
                                                      OpDecorate %196 RelaxedPrecision 
                                                      OpDecorate %200 RelaxedPrecision 
                                               %2 = OpTypeVoid 
                                               %3 = OpTypeFunction %2 
                                               %6 = OpTypeFloat 32 
                                               %7 = OpTypeVector %6 3 
                                               %8 = OpTypePointer Private %7 
                                Private f32_3* %9 = OpVariable Private 
                                              %10 = OpTypePointer Input %7 
                        Input f32_3* vs_TEXCOORD1 = OpVariable Input 
                                              %15 = OpTypeInt 32 0 
                                          u32 %16 = OpConstant 0 
                                              %17 = OpTypePointer Private %6 
                                              %28 = OpTypeVector %6 4 
                                          u32 %29 = OpConstant 4 
                                              %30 = OpTypeArray %28 %29 
                                              %31 = OpTypeStruct %28 %28 %30 %28 %28 %6 %6 
                                              %32 = OpTypePointer Uniform %31 
Uniform struct {f32_4; f32_4; f32_4[4]; f32_4; f32_4; f32; f32;}* %33 = OpVariable Uniform 
                                              %34 = OpTypeInt 32 1 
                                          i32 %35 = OpConstant 0 
                                              %36 = OpTypePointer Uniform %28 
                                          f32 %44 = OpConstant 3.674022E-40 
                                 Private f32* %47 = OpVariable Private 
                                          i32 %48 = OpConstant 6 
                                              %49 = OpTypePointer Uniform %6 
                                          f32 %53 = OpConstant 3.674022E-40 
                                          i32 %55 = OpConstant 5 
                                 Private f32* %65 = OpVariable Private 
                                          f32 %76 = OpConstant 3.674022E-40 
                                          f32 %90 = OpConstant 3.674022E-40 
                                          f32 %92 = OpConstant 3.674022E-40 
                                         i32 %107 = OpConstant 4 
                                             %112 = OpTypeVector %6 2 
                                             %113 = OpTypePointer Private %112 
                              Private f32_2* %114 = OpVariable Private 
                        Input f32_3* vs_TEXCOORD2 = OpVariable Input 
                                         i32 %118 = OpConstant 2 
                                         i32 %119 = OpConstant 1 
                                         i32 %141 = OpConstant 3 
                                             %146 = OpTypeImage %6 Dim2D 0 0 0 1 Unknown 
                                             %147 = OpTypePointer UniformConstant %146 
        UniformConstant read_only Texture2D* %148 = OpVariable UniformConstant 
                                             %150 = OpTypeSampler 
                                             %151 = OpTypePointer UniformConstant %150 
                    UniformConstant sampler* %152 = OpVariable UniformConstant 
                                             %154 = OpTypeSampledImage %146 
                                         u32 %158 = OpConstant 3 
                              Private f32_3* %161 = OpVariable Private 
                                             %168 = OpTypePointer Private %28 
                              Private f32_4* %169 = OpVariable Private 
        UniformConstant read_only Texture2D* %170 = OpVariable UniformConstant 
                    UniformConstant sampler* %172 = OpVariable UniformConstant 
                                             %175 = OpTypePointer Input %112 
                        Input f32_2* vs_TEXCOORD0 = OpVariable Input 
                              Private f32_4* %179 = OpVariable Private 
                                             %191 = OpTypePointer Output %28 
                               Output f32_4* %192 = OpVariable Output 
                                             %201 = OpTypePointer Output %6 
                                          void %4 = OpFunction None %3 
                                               %5 = OpLabel 
                                        f32_3 %12 = OpLoad vs_TEXCOORD1 
                                        f32_3 %13 = OpLoad vs_TEXCOORD1 
                                          f32 %14 = OpDot %12 %13 
                                 Private f32* %18 = OpAccessChain %9 %16 
                                                      OpStore %18 %14 
                                 Private f32* %19 = OpAccessChain %9 %16 
                                          f32 %20 = OpLoad %19 
                                          f32 %21 = OpExtInst %1 32 %20 
                                 Private f32* %22 = OpAccessChain %9 %16 
                                                      OpStore %22 %21 
                                        f32_3 %23 = OpLoad %9 
                                        f32_3 %24 = OpVectorShuffle %23 %23 0 0 0 
                                        f32_3 %25 = OpLoad vs_TEXCOORD1 
                                        f32_3 %26 = OpFMul %24 %25 
                                                      OpStore %9 %26 
                                        f32_3 %27 = OpLoad %9 
                               Uniform f32_4* %37 = OpAccessChain %33 %35 
                                        f32_4 %38 = OpLoad %37 
                                        f32_3 %39 = OpVectorShuffle %38 %38 0 1 2 
                                          f32 %40 = OpDot %27 %39 
                                 Private f32* %41 = OpAccessChain %9 %16 
                                                      OpStore %41 %40 
                                 Private f32* %42 = OpAccessChain %9 %16 
                                          f32 %43 = OpLoad %42 
                                          f32 %45 = OpExtInst %1 40 %43 %44 
                                 Private f32* %46 = OpAccessChain %9 %16 
                                                      OpStore %46 %45 
                                 Uniform f32* %50 = OpAccessChain %33 %48 
                                          f32 %51 = OpLoad %50 
                                          f32 %52 = OpFNegate %51 
                                          f32 %54 = OpFMul %52 %53 
                                 Uniform f32* %56 = OpAccessChain %33 %55 
                                          f32 %57 = OpLoad %56 
                                          f32 %58 = OpFAdd %54 %57 
                                                      OpStore %47 %58 
                                          f32 %59 = OpLoad %47 
                                          f32 %60 = OpFNegate %59 
                                 Private f32* %61 = OpAccessChain %9 %16 
                                          f32 %62 = OpLoad %61 
                                          f32 %63 = OpFAdd %60 %62 
                                 Private f32* %64 = OpAccessChain %9 %16 
                                                      OpStore %64 %63 
                                 Uniform f32* %66 = OpAccessChain %33 %48 
                                          f32 %67 = OpLoad %66 
                                          f32 %68 = OpFMul %67 %53 
                                 Uniform f32* %69 = OpAccessChain %33 %55 
                                          f32 %70 = OpLoad %69 
                                          f32 %71 = OpFAdd %68 %70 
                                                      OpStore %65 %71 
                                          f32 %72 = OpLoad %47 
                                          f32 %73 = OpFNegate %72 
                                          f32 %74 = OpLoad %65 
                                          f32 %75 = OpFAdd %73 %74 
                                                      OpStore %47 %75 
                                          f32 %77 = OpLoad %47 
                                          f32 %78 = OpFDiv %76 %77 
                                                      OpStore %47 %78 
                                          f32 %79 = OpLoad %47 
                                 Private f32* %80 = OpAccessChain %9 %16 
                                          f32 %81 = OpLoad %80 
                                          f32 %82 = OpFMul %79 %81 
                                 Private f32* %83 = OpAccessChain %9 %16 
                                                      OpStore %83 %82 
                                 Private f32* %84 = OpAccessChain %9 %16 
                                          f32 %85 = OpLoad %84 
                                          f32 %86 = OpExtInst %1 43 %85 %44 %76 
                                 Private f32* %87 = OpAccessChain %9 %16 
                                                      OpStore %87 %86 
                                 Private f32* %88 = OpAccessChain %9 %16 
                                          f32 %89 = OpLoad %88 
                                          f32 %91 = OpFMul %89 %90 
                                          f32 %93 = OpFAdd %91 %92 
                                                      OpStore %47 %93 
                                 Private f32* %94 = OpAccessChain %9 %16 
                                          f32 %95 = OpLoad %94 
                                 Private f32* %96 = OpAccessChain %9 %16 
                                          f32 %97 = OpLoad %96 
                                          f32 %98 = OpFMul %95 %97 
                                 Private f32* %99 = OpAccessChain %9 %16 
                                                      OpStore %99 %98 
                                Private f32* %100 = OpAccessChain %9 %16 
                                         f32 %101 = OpLoad %100 
                                         f32 %102 = OpLoad %47 
                                         f32 %103 = OpFMul %101 %102 
                                Private f32* %104 = OpAccessChain %9 %16 
                                                      OpStore %104 %103 
                                       f32_3 %105 = OpLoad %9 
                                       f32_3 %106 = OpVectorShuffle %105 %105 0 0 0 
                              Uniform f32_4* %108 = OpAccessChain %33 %107 
                                       f32_4 %109 = OpLoad %108 
                                       f32_3 %110 = OpVectorShuffle %109 %109 0 1 2 
                                       f32_3 %111 = OpFMul %106 %110 
                                                      OpStore %9 %111 
                                       f32_3 %116 = OpLoad vs_TEXCOORD2 
                                       f32_2 %117 = OpVectorShuffle %116 %116 1 1 
                              Uniform f32_4* %120 = OpAccessChain %33 %118 %119 
                                       f32_4 %121 = OpLoad %120 
                                       f32_2 %122 = OpVectorShuffle %121 %121 0 1 
                                       f32_2 %123 = OpFMul %117 %122 
                                                      OpStore %114 %123 
                              Uniform f32_4* %124 = OpAccessChain %33 %118 %35 
                                       f32_4 %125 = OpLoad %124 
                                       f32_2 %126 = OpVectorShuffle %125 %125 0 1 
                                       f32_3 %127 = OpLoad vs_TEXCOORD2 
                                       f32_2 %128 = OpVectorShuffle %127 %127 0 0 
                                       f32_2 %129 = OpFMul %126 %128 
                                       f32_2 %130 = OpLoad %114 
                                       f32_2 %131 = OpFAdd %129 %130 
                                                      OpStore %114 %131 
                              Uniform f32_4* %132 = OpAccessChain %33 %118 %118 
                                       f32_4 %133 = OpLoad %132 
                                       f32_2 %134 = OpVectorShuffle %133 %133 0 1 
                                       f32_3 %135 = OpLoad vs_TEXCOORD2 
                                       f32_2 %136 = OpVectorShuffle %135 %135 2 2 
                                       f32_2 %137 = OpFMul %134 %136 
                                       f32_2 %138 = OpLoad %114 
                                       f32_2 %139 = OpFAdd %137 %138 
                                                      OpStore %114 %139 
                                       f32_2 %140 = OpLoad %114 
                              Uniform f32_4* %142 = OpAccessChain %33 %118 %141 
                                       f32_4 %143 = OpLoad %142 
                                       f32_2 %144 = OpVectorShuffle %143 %143 0 1 
                                       f32_2 %145 = OpFAdd %140 %144 
                                                      OpStore %114 %145 
                         read_only Texture2D %149 = OpLoad %148 
                                     sampler %153 = OpLoad %152 
                  read_only Texture2DSampled %155 = OpSampledImage %149 %153 
                                       f32_2 %156 = OpLoad %114 
                                       f32_4 %157 = OpImageSampleImplicitLod %155 %156 
                                         f32 %159 = OpCompositeExtract %157 3 
                                Private f32* %160 = OpAccessChain %114 %16 
                                                      OpStore %160 %159 
                                       f32_2 %162 = OpLoad %114 
                                       f32_3 %163 = OpVectorShuffle %162 %162 0 0 0 
                              Uniform f32_4* %164 = OpAccessChain %33 %119 
                                       f32_4 %165 = OpLoad %164 
                                       f32_3 %166 = OpVectorShuffle %165 %165 0 1 2 
                                       f32_3 %167 = OpFMul %163 %166 
                                                      OpStore %161 %167 
                         read_only Texture2D %171 = OpLoad %170 
                                     sampler %173 = OpLoad %172 
                  read_only Texture2DSampled %174 = OpSampledImage %171 %173 
                                       f32_2 %177 = OpLoad vs_TEXCOORD0 
                                       f32_4 %178 = OpImageSampleImplicitLod %174 %177 
                                                      OpStore %169 %178 
                                       f32_4 %180 = OpLoad %169 
                              Uniform f32_4* %181 = OpAccessChain %33 %141 
                                       f32_4 %182 = OpLoad %181 
                                       f32_4 %183 = OpFMul %180 %182 
                                                      OpStore %179 %183 
                                       f32_3 %184 = OpLoad %161 
                                       f32_4 %185 = OpLoad %179 
                                       f32_3 %186 = OpVectorShuffle %185 %185 0 1 2 
                                       f32_3 %187 = OpFMul %184 %186 
                                                      OpStore %161 %187 
                                       f32_3 %188 = OpLoad %9 
                                       f32_3 %189 = OpLoad %161 
                                       f32_3 %190 = OpFMul %188 %189 
                                                      OpStore %9 %190 
                                       f32_4 %193 = OpLoad %179 
                                       f32_3 %194 = OpVectorShuffle %193 %193 3 3 3 
                                       f32_3 %195 = OpLoad %9 
                                       f32_3 %196 = OpFMul %194 %195 
                                       f32_4 %197 = OpLoad %192 
                                       f32_4 %198 = OpVectorShuffle %197 %196 4 5 6 3 
                                                      OpStore %192 %198 
                                Private f32* %199 = OpAccessChain %179 %158 
                                         f32 %200 = OpLoad %199 
                                 Output f32* %202 = OpAccessChain %192 %158 
                                                      OpStore %202 %200 
                                                      OpReturn
                                                      OpFunctionEnd
"
}
SubProgram "vulkan hw_tier02 " {
Keywords { "DIRECTIONAL_COOKIE" }
"; SPIR-V
; Version: 1.0
; Generator: Khronos Glslang Reference Front End; 6
; Bound: 209
; Schema: 0
                                                      OpCapability Shader 
                                               %1 = OpExtInstImport "GLSL.std.450" 
                                                      OpMemoryModel Logical GLSL450 
                                                      OpEntryPoint Vertex %4 "main" %11 %75 %85 %101 %106 %137 %143 %190 %200 
                                                      OpName vs_TEXCOORD0 "vs_TEXCOORD0" 
                                                      OpName vs_TEXCOORD1 "vs_TEXCOORD1" 
                                                      OpName vs_TEXCOORD2 "vs_TEXCOORD2" 
                                                      OpName vs_TEXCOORD3 "vs_TEXCOORD3" 
                                                      OpName vs_TEXCOORD4 "vs_TEXCOORD4" 
                                                      OpDecorate %11 Location 11 
                                                      OpDecorate %16 ArrayStride 16 
                                                      OpDecorate %17 ArrayStride 17 
                                                      OpDecorate %18 ArrayStride 18 
                                                      OpDecorate %19 ArrayStride 19 
                                                      OpMemberDecorate %20 0 Offset 20 
                                                      OpMemberDecorate %20 1 Offset 20 
                                                      OpMemberDecorate %20 2 Offset 20 
                                                      OpMemberDecorate %20 3 Offset 20 
                                                      OpMemberDecorate %20 4 Offset 20 
                                                      OpDecorate %20 Block 
                                                      OpDecorate %22 DescriptorSet 22 
                                                      OpDecorate %22 Binding 22 
                                                      OpMemberDecorate %73 0 BuiltIn 73 
                                                      OpMemberDecorate %73 1 BuiltIn 73 
                                                      OpMemberDecorate %73 2 BuiltIn 73 
                                                      OpDecorate %73 Block 
                                                      OpDecorate %85 Location 85 
                                                      OpDecorate vs_TEXCOORD0 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD0 Location 101 
                                                      OpDecorate %106 Location 106 
                                                      OpDecorate vs_TEXCOORD1 Location 137 
                                                      OpDecorate vs_TEXCOORD2 Location 143 
                                                      OpDecorate vs_TEXCOORD3 Location 190 
                                                      OpDecorate vs_TEXCOORD4 Location 200 
                                               %2 = OpTypeVoid 
                                               %3 = OpTypeFunction %2 
                                               %6 = OpTypeFloat 32 
                                               %7 = OpTypeVector %6 4 
                                               %8 = OpTypePointer Private %7 
                                Private f32_4* %9 = OpVariable Private 
                                              %10 = OpTypePointer Input %7 
                                 Input f32_4* %11 = OpVariable Input 
                                              %14 = OpTypeInt 32 0 
                                          u32 %15 = OpConstant 4 
                                              %16 = OpTypeArray %7 %15 
                                              %17 = OpTypeArray %7 %15 
                                              %18 = OpTypeArray %7 %15 
                                              %19 = OpTypeArray %7 %15 
                                              %20 = OpTypeStruct %16 %17 %18 %19 %7 
                                              %21 = OpTypePointer Uniform %20 
Uniform struct {f32_4[4]; f32_4[4]; f32_4[4]; f32_4[4]; f32_4;}* %22 = OpVariable Uniform 
                                              %23 = OpTypeInt 32 1 
                                          i32 %24 = OpConstant 0 
                                          i32 %25 = OpConstant 1 
                                              %26 = OpTypePointer Uniform %7 
                                          i32 %37 = OpConstant 2 
                               Private f32_4* %45 = OpVariable Private 
                                          i32 %47 = OpConstant 3 
                               Private f32_4* %51 = OpVariable Private 
                                          u32 %71 = OpConstant 1 
                                              %72 = OpTypeArray %6 %71 
                                              %73 = OpTypeStruct %7 %6 %72 
                                              %74 = OpTypePointer Output %73 
         Output struct {f32_4; f32; f32[1];}* %75 = OpVariable Output 
                                              %83 = OpTypePointer Output %7 
                                 Input f32_4* %85 = OpVariable Input 
                                              %86 = OpTypeVector %6 2 
                                          i32 %89 = OpConstant 4 
                                             %100 = OpTypePointer Output %86 
                       Output f32_2* vs_TEXCOORD0 = OpVariable Output 
                                             %104 = OpTypeVector %6 3 
                                             %105 = OpTypePointer Input %104 
                                Input f32_3* %106 = OpVariable Input 
                                         u32 %112 = OpConstant 0 
                                             %113 = OpTypePointer Private %6 
                                         u32 %126 = OpConstant 2 
                                Private f32* %128 = OpVariable Private 
                                             %136 = OpTypePointer Output %104 
                       Output f32_3* vs_TEXCOORD1 = OpVariable Output 
                       Output f32_3* vs_TEXCOORD2 = OpVariable Output 
                       Output f32_2* vs_TEXCOORD3 = OpVariable Output 
                       Output f32_4* vs_TEXCOORD4 = OpVariable Output 
                                         f32 %201 = OpConstant 3.674022E-40 
                                       f32_4 %202 = OpConstantComposite %201 %201 %201 %201 
                                             %203 = OpTypePointer Output %6 
                                          void %4 = OpFunction None %3 
                                               %5 = OpLabel 
                                        f32_4 %12 = OpLoad %11 
                                        f32_4 %13 = OpVectorShuffle %12 %12 1 1 1 1 
                               Uniform f32_4* %27 = OpAccessChain %22 %24 %25 
                                        f32_4 %28 = OpLoad %27 
                                        f32_4 %29 = OpFMul %13 %28 
                                                      OpStore %9 %29 
                               Uniform f32_4* %30 = OpAccessChain %22 %24 %24 
                                        f32_4 %31 = OpLoad %30 
                                        f32_4 %32 = OpLoad %11 
                                        f32_4 %33 = OpVectorShuffle %32 %32 0 0 0 0 
                                        f32_4 %34 = OpFMul %31 %33 
                                        f32_4 %35 = OpLoad %9 
                                        f32_4 %36 = OpFAdd %34 %35 
                                                      OpStore %9 %36 
                               Uniform f32_4* %38 = OpAccessChain %22 %24 %37 
                                        f32_4 %39 = OpLoad %38 
                                        f32_4 %40 = OpLoad %11 
                                        f32_4 %41 = OpVectorShuffle %40 %40 2 2 2 2 
                                        f32_4 %42 = OpFMul %39 %41 
                                        f32_4 %43 = OpLoad %9 
                                        f32_4 %44 = OpFAdd %42 %43 
                                                      OpStore %9 %44 
                                        f32_4 %46 = OpLoad %9 
                               Uniform f32_4* %48 = OpAccessChain %22 %24 %47 
                                        f32_4 %49 = OpLoad %48 
                                        f32_4 %50 = OpFAdd %46 %49 
                                                      OpStore %45 %50 
                                        f32_4 %52 = OpLoad %45 
                                        f32_4 %53 = OpVectorShuffle %52 %52 1 1 1 1 
                               Uniform f32_4* %54 = OpAccessChain %22 %37 %25 
                                        f32_4 %55 = OpLoad %54 
                                        f32_4 %56 = OpFMul %53 %55 
                                                      OpStore %51 %56 
                               Uniform f32_4* %57 = OpAccessChain %22 %37 %24 
                                        f32_4 %58 = OpLoad %57 
                                        f32_4 %59 = OpLoad %45 
                                        f32_4 %60 = OpVectorShuffle %59 %59 0 0 0 0 
                                        f32_4 %61 = OpFMul %58 %60 
                                        f32_4 %62 = OpLoad %51 
                                        f32_4 %63 = OpFAdd %61 %62 
                                                      OpStore %51 %63 
                               Uniform f32_4* %64 = OpAccessChain %22 %37 %37 
                                        f32_4 %65 = OpLoad %64 
                                        f32_4 %66 = OpLoad %45 
                                        f32_4 %67 = OpVectorShuffle %66 %66 2 2 2 2 
                                        f32_4 %68 = OpFMul %65 %67 
                                        f32_4 %69 = OpLoad %51 
                                        f32_4 %70 = OpFAdd %68 %69 
                                                      OpStore %51 %70 
                               Uniform f32_4* %76 = OpAccessChain %22 %37 %47 
                                        f32_4 %77 = OpLoad %76 
                                        f32_4 %78 = OpLoad %45 
                                        f32_4 %79 = OpVectorShuffle %78 %78 3 3 3 3 
                                        f32_4 %80 = OpFMul %77 %79 
                                        f32_4 %81 = OpLoad %51 
                                        f32_4 %82 = OpFAdd %80 %81 
                                Output f32_4* %84 = OpAccessChain %75 %24 
                                                      OpStore %84 %82 
                                        f32_4 %87 = OpLoad %85 
                                        f32_2 %88 = OpVectorShuffle %87 %87 0 1 
                               Uniform f32_4* %90 = OpAccessChain %22 %89 
                                        f32_4 %91 = OpLoad %90 
                                        f32_2 %92 = OpVectorShuffle %91 %91 0 1 
                                        f32_2 %93 = OpFMul %88 %92 
                               Uniform f32_4* %94 = OpAccessChain %22 %89 
                                        f32_4 %95 = OpLoad %94 
                                        f32_2 %96 = OpVectorShuffle %95 %95 2 3 
                                        f32_2 %97 = OpFAdd %93 %96 
                                        f32_4 %98 = OpLoad %45 
                                        f32_4 %99 = OpVectorShuffle %98 %97 4 5 2 3 
                                                      OpStore %45 %99 
                                       f32_4 %102 = OpLoad %45 
                                       f32_2 %103 = OpVectorShuffle %102 %102 0 1 
                                                      OpStore vs_TEXCOORD0 %103 
                                       f32_3 %107 = OpLoad %106 
                              Uniform f32_4* %108 = OpAccessChain %22 %25 %24 
                                       f32_4 %109 = OpLoad %108 
                                       f32_3 %110 = OpVectorShuffle %109 %109 0 1 2 
                                         f32 %111 = OpDot %107 %110 
                                Private f32* %114 = OpAccessChain %45 %112 
                                                      OpStore %114 %111 
                                       f32_3 %115 = OpLoad %106 
                              Uniform f32_4* %116 = OpAccessChain %22 %25 %25 
                                       f32_4 %117 = OpLoad %116 
                                       f32_3 %118 = OpVectorShuffle %117 %117 0 1 2 
                                         f32 %119 = OpDot %115 %118 
                                Private f32* %120 = OpAccessChain %45 %71 
                                                      OpStore %120 %119 
                                       f32_3 %121 = OpLoad %106 
                              Uniform f32_4* %122 = OpAccessChain %22 %25 %37 
                                       f32_4 %123 = OpLoad %122 
                                       f32_3 %124 = OpVectorShuffle %123 %123 0 1 2 
                                         f32 %125 = OpDot %121 %124 
                                Private f32* %127 = OpAccessChain %45 %126 
                                                      OpStore %127 %125 
                                       f32_4 %129 = OpLoad %45 
                                       f32_3 %130 = OpVectorShuffle %129 %129 0 1 2 
                                       f32_4 %131 = OpLoad %45 
                                       f32_3 %132 = OpVectorShuffle %131 %131 0 1 2 
                                         f32 %133 = OpDot %130 %132 
                                                      OpStore %128 %133 
                                         f32 %134 = OpLoad %128 
                                         f32 %135 = OpExtInst %1 32 %134 
                                                      OpStore %128 %135 
                                         f32 %138 = OpLoad %128 
                                       f32_3 %139 = OpCompositeConstruct %138 %138 %138 
                                       f32_4 %140 = OpLoad %45 
                                       f32_3 %141 = OpVectorShuffle %140 %140 0 1 2 
                                       f32_3 %142 = OpFMul %139 %141 
                                                      OpStore vs_TEXCOORD1 %142 
                              Uniform f32_4* %144 = OpAccessChain %22 %24 %47 
                                       f32_4 %145 = OpLoad %144 
                                       f32_3 %146 = OpVectorShuffle %145 %145 0 1 2 
                                       f32_4 %147 = OpLoad %11 
                                       f32_3 %148 = OpVectorShuffle %147 %147 3 3 3 
                                       f32_3 %149 = OpFMul %146 %148 
                                       f32_4 %150 = OpLoad %9 
                                       f32_3 %151 = OpVectorShuffle %150 %150 0 1 2 
                                       f32_3 %152 = OpFAdd %149 %151 
                                                      OpStore vs_TEXCOORD2 %152 
                              Uniform f32_4* %153 = OpAccessChain %22 %24 %47 
                                       f32_4 %154 = OpLoad %153 
                                       f32_4 %155 = OpLoad %11 
                                       f32_4 %156 = OpVectorShuffle %155 %155 3 3 3 3 
                                       f32_4 %157 = OpFMul %154 %156 
                                       f32_4 %158 = OpLoad %9 
                                       f32_4 %159 = OpFAdd %157 %158 
                                                      OpStore %9 %159 
                                       f32_4 %160 = OpLoad %9 
                                       f32_2 %161 = OpVectorShuffle %160 %160 1 1 
                              Uniform f32_4* %162 = OpAccessChain %22 %47 %25 
                                       f32_4 %163 = OpLoad %162 
                                       f32_2 %164 = OpVectorShuffle %163 %163 0 1 
                                       f32_2 %165 = OpFMul %161 %164 
                                       f32_4 %166 = OpLoad %45 
                                       f32_4 %167 = OpVectorShuffle %166 %165 4 5 2 3 
                                                      OpStore %45 %167 
                              Uniform f32_4* %168 = OpAccessChain %22 %47 %24 
                                       f32_4 %169 = OpLoad %168 
                                       f32_2 %170 = OpVectorShuffle %169 %169 0 1 
                                       f32_4 %171 = OpLoad %9 
                                       f32_2 %172 = OpVectorShuffle %171 %171 0 0 
                                       f32_2 %173 = OpFMul %170 %172 
                                       f32_4 %174 = OpLoad %45 
                                       f32_2 %175 = OpVectorShuffle %174 %174 0 1 
                                       f32_2 %176 = OpFAdd %173 %175 
                                       f32_4 %177 = OpLoad %9 
                                       f32_4 %178 = OpVectorShuffle %177 %176 4 5 2 3 
                                                      OpStore %9 %178 
                              Uniform f32_4* %179 = OpAccessChain %22 %47 %37 
                                       f32_4 %180 = OpLoad %179 
                                       f32_2 %181 = OpVectorShuffle %180 %180 0 1 
                                       f32_4 %182 = OpLoad %9 
                                       f32_2 %183 = OpVectorShuffle %182 %182 2 2 
                                       f32_2 %184 = OpFMul %181 %183 
                                       f32_4 %185 = OpLoad %9 
                                       f32_2 %186 = OpVectorShuffle %185 %185 0 1 
                                       f32_2 %187 = OpFAdd %184 %186 
                                       f32_4 %188 = OpLoad %9 
                                       f32_4 %189 = OpVectorShuffle %188 %187 4 5 2 3 
                                                      OpStore %9 %189 
                              Uniform f32_4* %191 = OpAccessChain %22 %47 %47 
                                       f32_4 %192 = OpLoad %191 
                                       f32_2 %193 = OpVectorShuffle %192 %192 0 1 
                                       f32_4 %194 = OpLoad %9 
                                       f32_2 %195 = OpVectorShuffle %194 %194 3 3 
                                       f32_2 %196 = OpFMul %193 %195 
                                       f32_4 %197 = OpLoad %9 
                                       f32_2 %198 = OpVectorShuffle %197 %197 0 1 
                                       f32_2 %199 = OpFAdd %196 %198 
                                                      OpStore vs_TEXCOORD3 %199 
                                                      OpStore vs_TEXCOORD4 %202 
                                 Output f32* %204 = OpAccessChain %75 %24 %71 
                                         f32 %205 = OpLoad %204 
                                         f32 %206 = OpFNegate %205 
                                 Output f32* %207 = OpAccessChain %75 %24 %71 
                                                      OpStore %207 %206 
                                                      OpReturn
                                                      OpFunctionEnd
; SPIR-V
; Version: 1.0
; Generator: Khronos Glslang Reference Front End; 6
; Bound: 204
; Schema: 0
                                                      OpCapability Shader 
                                               %1 = OpExtInstImport "GLSL.std.450" 
                                                      OpMemoryModel Logical GLSL450 
                                                      OpEntryPoint Fragment %4 "main" %11 %115 %176 %192 
                                                      OpExecutionMode %4 OriginUpperLeft 
                                                      OpName vs_TEXCOORD1 "vs_TEXCOORD1" 
                                                      OpName vs_TEXCOORD2 "vs_TEXCOORD2" 
                                                      OpName vs_TEXCOORD0 "vs_TEXCOORD0" 
                                                      OpDecorate %9 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD1 Location 11 
                                                      OpDecorate %20 RelaxedPrecision 
                                                      OpDecorate %21 RelaxedPrecision 
                                                      OpDecorate %23 RelaxedPrecision 
                                                      OpDecorate %24 RelaxedPrecision 
                                                      OpDecorate %27 RelaxedPrecision 
                                                      OpDecorate %30 ArrayStride 30 
                                                      OpMemberDecorate %31 0 RelaxedPrecision 
                                                      OpMemberDecorate %31 0 Offset 31 
                                                      OpMemberDecorate %31 1 RelaxedPrecision 
                                                      OpMemberDecorate %31 1 Offset 31 
                                                      OpMemberDecorate %31 2 Offset 31 
                                                      OpMemberDecorate %31 3 RelaxedPrecision 
                                                      OpMemberDecorate %31 3 Offset 31 
                                                      OpMemberDecorate %31 4 RelaxedPrecision 
                                                      OpMemberDecorate %31 4 Offset 31 
                                                      OpMemberDecorate %31 5 RelaxedPrecision 
                                                      OpMemberDecorate %31 5 Offset 31 
                                                      OpMemberDecorate %31 6 RelaxedPrecision 
                                                      OpMemberDecorate %31 6 Offset 31 
                                                      OpDecorate %31 Block 
                                                      OpDecorate %33 DescriptorSet 33 
                                                      OpDecorate %33 Binding 33 
                                                      OpDecorate %38 RelaxedPrecision 
                                                      OpDecorate %39 RelaxedPrecision 
                                                      OpDecorate %40 RelaxedPrecision 
                                                      OpDecorate %43 RelaxedPrecision 
                                                      OpDecorate %45 RelaxedPrecision 
                                                      OpDecorate %47 RelaxedPrecision 
                                                      OpDecorate %51 RelaxedPrecision 
                                                      OpDecorate %52 RelaxedPrecision 
                                                      OpDecorate %54 RelaxedPrecision 
                                                      OpDecorate %57 RelaxedPrecision 
                                                      OpDecorate %58 RelaxedPrecision 
                                                      OpDecorate %59 RelaxedPrecision 
                                                      OpDecorate %60 RelaxedPrecision 
                                                      OpDecorate %62 RelaxedPrecision 
                                                      OpDecorate %63 RelaxedPrecision 
                                                      OpDecorate %65 RelaxedPrecision 
                                                      OpDecorate %67 RelaxedPrecision 
                                                      OpDecorate %68 RelaxedPrecision 
                                                      OpDecorate %70 RelaxedPrecision 
                                                      OpDecorate %71 RelaxedPrecision 
                                                      OpDecorate %72 RelaxedPrecision 
                                                      OpDecorate %73 RelaxedPrecision 
                                                      OpDecorate %74 RelaxedPrecision 
                                                      OpDecorate %75 RelaxedPrecision 
                                                      OpDecorate %77 RelaxedPrecision 
                                                      OpDecorate %78 RelaxedPrecision 
                                                      OpDecorate %79 RelaxedPrecision 
                                                      OpDecorate %81 RelaxedPrecision 
                                                      OpDecorate %82 RelaxedPrecision 
                                                      OpDecorate %85 RelaxedPrecision 
                                                      OpDecorate %86 RelaxedPrecision 
                                                      OpDecorate %89 RelaxedPrecision 
                                                      OpDecorate %91 RelaxedPrecision 
                                                      OpDecorate %93 RelaxedPrecision 
                                                      OpDecorate %95 RelaxedPrecision 
                                                      OpDecorate %97 RelaxedPrecision 
                                                      OpDecorate %98 RelaxedPrecision 
                                                      OpDecorate %101 RelaxedPrecision 
                                                      OpDecorate %102 RelaxedPrecision 
                                                      OpDecorate %103 RelaxedPrecision 
                                                      OpDecorate %105 RelaxedPrecision 
                                                      OpDecorate %106 RelaxedPrecision 
                                                      OpDecorate %109 RelaxedPrecision 
                                                      OpDecorate %110 RelaxedPrecision 
                                                      OpDecorate %111 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD2 Location 115 
                                                      OpDecorate %148 DescriptorSet 148 
                                                      OpDecorate %148 Binding 148 
                                                      OpDecorate %152 DescriptorSet 152 
                                                      OpDecorate %152 Binding 152 
                                                      OpDecorate %161 RelaxedPrecision 
                                                      OpDecorate %165 RelaxedPrecision 
                                                      OpDecorate %166 RelaxedPrecision 
                                                      OpDecorate %169 RelaxedPrecision 
                                                      OpDecorate %170 RelaxedPrecision 
                                                      OpDecorate %170 DescriptorSet 170 
                                                      OpDecorate %170 Binding 170 
                                                      OpDecorate %171 RelaxedPrecision 
                                                      OpDecorate %172 RelaxedPrecision 
                                                      OpDecorate %172 DescriptorSet 172 
                                                      OpDecorate %172 Binding 172 
                                                      OpDecorate %173 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD0 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD0 Location 176 
                                                      OpDecorate %177 RelaxedPrecision 
                                                      OpDecorate %178 RelaxedPrecision 
                                                      OpDecorate %179 RelaxedPrecision 
                                                      OpDecorate %180 RelaxedPrecision 
                                                      OpDecorate %182 RelaxedPrecision 
                                                      OpDecorate %183 RelaxedPrecision 
                                                      OpDecorate %184 RelaxedPrecision 
                                                      OpDecorate %185 RelaxedPrecision 
                                                      OpDecorate %186 RelaxedPrecision 
                                                      OpDecorate %187 RelaxedPrecision 
                                                      OpDecorate %188 RelaxedPrecision 
                                                      OpDecorate %189 RelaxedPrecision 
                                                      OpDecorate %190 RelaxedPrecision 
                                                      OpDecorate %192 RelaxedPrecision 
                                                      OpDecorate %192 Location 192 
                                                      OpDecorate %193 RelaxedPrecision 
                                                      OpDecorate %194 RelaxedPrecision 
                                                      OpDecorate %195 RelaxedPrecision 
                                                      OpDecorate %196 RelaxedPrecision 
                                                      OpDecorate %200 RelaxedPrecision 
                                               %2 = OpTypeVoid 
                                               %3 = OpTypeFunction %2 
                                               %6 = OpTypeFloat 32 
                                               %7 = OpTypeVector %6 3 
                                               %8 = OpTypePointer Private %7 
                                Private f32_3* %9 = OpVariable Private 
                                              %10 = OpTypePointer Input %7 
                        Input f32_3* vs_TEXCOORD1 = OpVariable Input 
                                              %15 = OpTypeInt 32 0 
                                          u32 %16 = OpConstant 0 
                                              %17 = OpTypePointer Private %6 
                                              %28 = OpTypeVector %6 4 
                                          u32 %29 = OpConstant 4 
                                              %30 = OpTypeArray %28 %29 
                                              %31 = OpTypeStruct %28 %28 %30 %28 %28 %6 %6 
                                              %32 = OpTypePointer Uniform %31 
Uniform struct {f32_4; f32_4; f32_4[4]; f32_4; f32_4; f32; f32;}* %33 = OpVariable Uniform 
                                              %34 = OpTypeInt 32 1 
                                          i32 %35 = OpConstant 0 
                                              %36 = OpTypePointer Uniform %28 
                                          f32 %44 = OpConstant 3.674022E-40 
                                 Private f32* %47 = OpVariable Private 
                                          i32 %48 = OpConstant 6 
                                              %49 = OpTypePointer Uniform %6 
                                          f32 %53 = OpConstant 3.674022E-40 
                                          i32 %55 = OpConstant 5 
                                 Private f32* %65 = OpVariable Private 
                                          f32 %76 = OpConstant 3.674022E-40 
                                          f32 %90 = OpConstant 3.674022E-40 
                                          f32 %92 = OpConstant 3.674022E-40 
                                         i32 %107 = OpConstant 4 
                                             %112 = OpTypeVector %6 2 
                                             %113 = OpTypePointer Private %112 
                              Private f32_2* %114 = OpVariable Private 
                        Input f32_3* vs_TEXCOORD2 = OpVariable Input 
                                         i32 %118 = OpConstant 2 
                                         i32 %119 = OpConstant 1 
                                         i32 %141 = OpConstant 3 
                                             %146 = OpTypeImage %6 Dim2D 0 0 0 1 Unknown 
                                             %147 = OpTypePointer UniformConstant %146 
        UniformConstant read_only Texture2D* %148 = OpVariable UniformConstant 
                                             %150 = OpTypeSampler 
                                             %151 = OpTypePointer UniformConstant %150 
                    UniformConstant sampler* %152 = OpVariable UniformConstant 
                                             %154 = OpTypeSampledImage %146 
                                         u32 %158 = OpConstant 3 
                              Private f32_3* %161 = OpVariable Private 
                                             %168 = OpTypePointer Private %28 
                              Private f32_4* %169 = OpVariable Private 
        UniformConstant read_only Texture2D* %170 = OpVariable UniformConstant 
                    UniformConstant sampler* %172 = OpVariable UniformConstant 
                                             %175 = OpTypePointer Input %112 
                        Input f32_2* vs_TEXCOORD0 = OpVariable Input 
                              Private f32_4* %179 = OpVariable Private 
                                             %191 = OpTypePointer Output %28 
                               Output f32_4* %192 = OpVariable Output 
                                             %201 = OpTypePointer Output %6 
                                          void %4 = OpFunction None %3 
                                               %5 = OpLabel 
                                        f32_3 %12 = OpLoad vs_TEXCOORD1 
                                        f32_3 %13 = OpLoad vs_TEXCOORD1 
                                          f32 %14 = OpDot %12 %13 
                                 Private f32* %18 = OpAccessChain %9 %16 
                                                      OpStore %18 %14 
                                 Private f32* %19 = OpAccessChain %9 %16 
                                          f32 %20 = OpLoad %19 
                                          f32 %21 = OpExtInst %1 32 %20 
                                 Private f32* %22 = OpAccessChain %9 %16 
                                                      OpStore %22 %21 
                                        f32_3 %23 = OpLoad %9 
                                        f32_3 %24 = OpVectorShuffle %23 %23 0 0 0 
                                        f32_3 %25 = OpLoad vs_TEXCOORD1 
                                        f32_3 %26 = OpFMul %24 %25 
                                                      OpStore %9 %26 
                                        f32_3 %27 = OpLoad %9 
                               Uniform f32_4* %37 = OpAccessChain %33 %35 
                                        f32_4 %38 = OpLoad %37 
                                        f32_3 %39 = OpVectorShuffle %38 %38 0 1 2 
                                          f32 %40 = OpDot %27 %39 
                                 Private f32* %41 = OpAccessChain %9 %16 
                                                      OpStore %41 %40 
                                 Private f32* %42 = OpAccessChain %9 %16 
                                          f32 %43 = OpLoad %42 
                                          f32 %45 = OpExtInst %1 40 %43 %44 
                                 Private f32* %46 = OpAccessChain %9 %16 
                                                      OpStore %46 %45 
                                 Uniform f32* %50 = OpAccessChain %33 %48 
                                          f32 %51 = OpLoad %50 
                                          f32 %52 = OpFNegate %51 
                                          f32 %54 = OpFMul %52 %53 
                                 Uniform f32* %56 = OpAccessChain %33 %55 
                                          f32 %57 = OpLoad %56 
                                          f32 %58 = OpFAdd %54 %57 
                                                      OpStore %47 %58 
                                          f32 %59 = OpLoad %47 
                                          f32 %60 = OpFNegate %59 
                                 Private f32* %61 = OpAccessChain %9 %16 
                                          f32 %62 = OpLoad %61 
                                          f32 %63 = OpFAdd %60 %62 
                                 Private f32* %64 = OpAccessChain %9 %16 
                                                      OpStore %64 %63 
                                 Uniform f32* %66 = OpAccessChain %33 %48 
                                          f32 %67 = OpLoad %66 
                                          f32 %68 = OpFMul %67 %53 
                                 Uniform f32* %69 = OpAccessChain %33 %55 
                                          f32 %70 = OpLoad %69 
                                          f32 %71 = OpFAdd %68 %70 
                                                      OpStore %65 %71 
                                          f32 %72 = OpLoad %47 
                                          f32 %73 = OpFNegate %72 
                                          f32 %74 = OpLoad %65 
                                          f32 %75 = OpFAdd %73 %74 
                                                      OpStore %47 %75 
                                          f32 %77 = OpLoad %47 
                                          f32 %78 = OpFDiv %76 %77 
                                                      OpStore %47 %78 
                                          f32 %79 = OpLoad %47 
                                 Private f32* %80 = OpAccessChain %9 %16 
                                          f32 %81 = OpLoad %80 
                                          f32 %82 = OpFMul %79 %81 
                                 Private f32* %83 = OpAccessChain %9 %16 
                                                      OpStore %83 %82 
                                 Private f32* %84 = OpAccessChain %9 %16 
                                          f32 %85 = OpLoad %84 
                                          f32 %86 = OpExtInst %1 43 %85 %44 %76 
                                 Private f32* %87 = OpAccessChain %9 %16 
                                                      OpStore %87 %86 
                                 Private f32* %88 = OpAccessChain %9 %16 
                                          f32 %89 = OpLoad %88 
                                          f32 %91 = OpFMul %89 %90 
                                          f32 %93 = OpFAdd %91 %92 
                                                      OpStore %47 %93 
                                 Private f32* %94 = OpAccessChain %9 %16 
                                          f32 %95 = OpLoad %94 
                                 Private f32* %96 = OpAccessChain %9 %16 
                                          f32 %97 = OpLoad %96 
                                          f32 %98 = OpFMul %95 %97 
                                 Private f32* %99 = OpAccessChain %9 %16 
                                                      OpStore %99 %98 
                                Private f32* %100 = OpAccessChain %9 %16 
                                         f32 %101 = OpLoad %100 
                                         f32 %102 = OpLoad %47 
                                         f32 %103 = OpFMul %101 %102 
                                Private f32* %104 = OpAccessChain %9 %16 
                                                      OpStore %104 %103 
                                       f32_3 %105 = OpLoad %9 
                                       f32_3 %106 = OpVectorShuffle %105 %105 0 0 0 
                              Uniform f32_4* %108 = OpAccessChain %33 %107 
                                       f32_4 %109 = OpLoad %108 
                                       f32_3 %110 = OpVectorShuffle %109 %109 0 1 2 
                                       f32_3 %111 = OpFMul %106 %110 
                                                      OpStore %9 %111 
                                       f32_3 %116 = OpLoad vs_TEXCOORD2 
                                       f32_2 %117 = OpVectorShuffle %116 %116 1 1 
                              Uniform f32_4* %120 = OpAccessChain %33 %118 %119 
                                       f32_4 %121 = OpLoad %120 
                                       f32_2 %122 = OpVectorShuffle %121 %121 0 1 
                                       f32_2 %123 = OpFMul %117 %122 
                                                      OpStore %114 %123 
                              Uniform f32_4* %124 = OpAccessChain %33 %118 %35 
                                       f32_4 %125 = OpLoad %124 
                                       f32_2 %126 = OpVectorShuffle %125 %125 0 1 
                                       f32_3 %127 = OpLoad vs_TEXCOORD2 
                                       f32_2 %128 = OpVectorShuffle %127 %127 0 0 
                                       f32_2 %129 = OpFMul %126 %128 
                                       f32_2 %130 = OpLoad %114 
                                       f32_2 %131 = OpFAdd %129 %130 
                                                      OpStore %114 %131 
                              Uniform f32_4* %132 = OpAccessChain %33 %118 %118 
                                       f32_4 %133 = OpLoad %132 
                                       f32_2 %134 = OpVectorShuffle %133 %133 0 1 
                                       f32_3 %135 = OpLoad vs_TEXCOORD2 
                                       f32_2 %136 = OpVectorShuffle %135 %135 2 2 
                                       f32_2 %137 = OpFMul %134 %136 
                                       f32_2 %138 = OpLoad %114 
                                       f32_2 %139 = OpFAdd %137 %138 
                                                      OpStore %114 %139 
                                       f32_2 %140 = OpLoad %114 
                              Uniform f32_4* %142 = OpAccessChain %33 %118 %141 
                                       f32_4 %143 = OpLoad %142 
                                       f32_2 %144 = OpVectorShuffle %143 %143 0 1 
                                       f32_2 %145 = OpFAdd %140 %144 
                                                      OpStore %114 %145 
                         read_only Texture2D %149 = OpLoad %148 
                                     sampler %153 = OpLoad %152 
                  read_only Texture2DSampled %155 = OpSampledImage %149 %153 
                                       f32_2 %156 = OpLoad %114 
                                       f32_4 %157 = OpImageSampleImplicitLod %155 %156 
                                         f32 %159 = OpCompositeExtract %157 3 
                                Private f32* %160 = OpAccessChain %114 %16 
                                                      OpStore %160 %159 
                                       f32_2 %162 = OpLoad %114 
                                       f32_3 %163 = OpVectorShuffle %162 %162 0 0 0 
                              Uniform f32_4* %164 = OpAccessChain %33 %119 
                                       f32_4 %165 = OpLoad %164 
                                       f32_3 %166 = OpVectorShuffle %165 %165 0 1 2 
                                       f32_3 %167 = OpFMul %163 %166 
                                                      OpStore %161 %167 
                         read_only Texture2D %171 = OpLoad %170 
                                     sampler %173 = OpLoad %172 
                  read_only Texture2DSampled %174 = OpSampledImage %171 %173 
                                       f32_2 %177 = OpLoad vs_TEXCOORD0 
                                       f32_4 %178 = OpImageSampleImplicitLod %174 %177 
                                                      OpStore %169 %178 
                                       f32_4 %180 = OpLoad %169 
                              Uniform f32_4* %181 = OpAccessChain %33 %141 
                                       f32_4 %182 = OpLoad %181 
                                       f32_4 %183 = OpFMul %180 %182 
                                                      OpStore %179 %183 
                                       f32_3 %184 = OpLoad %161 
                                       f32_4 %185 = OpLoad %179 
                                       f32_3 %186 = OpVectorShuffle %185 %185 0 1 2 
                                       f32_3 %187 = OpFMul %184 %186 
                                                      OpStore %161 %187 
                                       f32_3 %188 = OpLoad %9 
                                       f32_3 %189 = OpLoad %161 
                                       f32_3 %190 = OpFMul %188 %189 
                                                      OpStore %9 %190 
                                       f32_4 %193 = OpLoad %179 
                                       f32_3 %194 = OpVectorShuffle %193 %193 3 3 3 
                                       f32_3 %195 = OpLoad %9 
                                       f32_3 %196 = OpFMul %194 %195 
                                       f32_4 %197 = OpLoad %192 
                                       f32_4 %198 = OpVectorShuffle %197 %196 4 5 6 3 
                                                      OpStore %192 %198 
                                Private f32* %199 = OpAccessChain %179 %158 
                                         f32 %200 = OpLoad %199 
                                 Output f32* %202 = OpAccessChain %192 %158 
                                                      OpStore %202 %200 
                                                      OpReturn
                                                      OpFunctionEnd
"
}
}
Program "fp" {
SubProgram "gles3 hw_tier00 " {
Keywords { "POINT" }
""
}
SubProgram "gles3 hw_tier01 " {
Keywords { "POINT" }
""
}
SubProgram "gles3 hw_tier02 " {
Keywords { "POINT" }
""
}
SubProgram "vulkan hw_tier00 " {
Keywords { "POINT" }
""
}
SubProgram "vulkan hw_tier01 " {
Keywords { "POINT" }
""
}
SubProgram "vulkan hw_tier02 " {
Keywords { "POINT" }
""
}
SubProgram "gles3 hw_tier00 " {
Keywords { "DIRECTIONAL" }
""
}
SubProgram "gles3 hw_tier01 " {
Keywords { "DIRECTIONAL" }
""
}
SubProgram "gles3 hw_tier02 " {
Keywords { "DIRECTIONAL" }
""
}
SubProgram "vulkan hw_tier00 " {
Keywords { "DIRECTIONAL" }
""
}
SubProgram "vulkan hw_tier01 " {
Keywords { "DIRECTIONAL" }
""
}
SubProgram "vulkan hw_tier02 " {
Keywords { "DIRECTIONAL" }
""
}
SubProgram "gles3 hw_tier00 " {
Keywords { "SPOT" }
""
}
SubProgram "gles3 hw_tier01 " {
Keywords { "SPOT" }
""
}
SubProgram "gles3 hw_tier02 " {
Keywords { "SPOT" }
""
}
SubProgram "vulkan hw_tier00 " {
Keywords { "SPOT" }
""
}
SubProgram "vulkan hw_tier01 " {
Keywords { "SPOT" }
""
}
SubProgram "vulkan hw_tier02 " {
Keywords { "SPOT" }
""
}
SubProgram "gles3 hw_tier00 " {
Keywords { "POINT_COOKIE" }
""
}
SubProgram "gles3 hw_tier01 " {
Keywords { "POINT_COOKIE" }
""
}
SubProgram "gles3 hw_tier02 " {
Keywords { "POINT_COOKIE" }
""
}
SubProgram "vulkan hw_tier00 " {
Keywords { "POINT_COOKIE" }
""
}
SubProgram "vulkan hw_tier01 " {
Keywords { "POINT_COOKIE" }
""
}
SubProgram "vulkan hw_tier02 " {
Keywords { "POINT_COOKIE" }
""
}
SubProgram "gles3 hw_tier00 " {
Keywords { "DIRECTIONAL_COOKIE" }
""
}
SubProgram "gles3 hw_tier01 " {
Keywords { "DIRECTIONAL_COOKIE" }
""
}
SubProgram "gles3 hw_tier02 " {
Keywords { "DIRECTIONAL_COOKIE" }
""
}
SubProgram "vulkan hw_tier00 " {
Keywords { "DIRECTIONAL_COOKIE" }
""
}
SubProgram "vulkan hw_tier01 " {
Keywords { "DIRECTIONAL_COOKIE" }
""
}
SubProgram "vulkan hw_tier02 " {
Keywords { "DIRECTIONAL_COOKIE" }
""
}
}
}
}
Fallback "Diffuse"
}