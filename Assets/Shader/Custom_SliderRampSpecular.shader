//////////////////////////////////////////
//
// NOTE: This is *not* a valid shader file
//
///////////////////////////////////////////
Shader "Custom/SliderRampSpecular" {
Properties {
[TCP2HeaderHelp(BASE, Base Properties)] _Color ("Color", Color) = (1,1,1,1)
_HColor ("Highlight Color", Color) = (0.785,0.785,0.785,1)
_SColor ("Shadow Color", Color) = (0.195,0.195,0.195,1)
_MainTex ("Main Texture", 2D) = "white" { }
[TCP2Separator] [TCP2Header(RAMP SETTINGS)] _RampThreshold ("Ramp Threshold", Range(0, 1)) = 0.5
_RampSmooth ("Ramp Smoothing", Range(0.001, 1)) = 0.1
[TCP2Separator] [TCP2HeaderHelp(SPECULAR, Specular)] _SpecColor ("Specular Color", Color) = (0.5,0.5,0.5,1)
_Smoothness ("Size", Float) = 0.2
_SpecSmooth ("Smoothness", Range(0, 1)) = 0.05
[TCP2Separator] __dummy__ ("unused", Float) = 0
}
SubShader {
 Tags { "RenderType" = "Opaque" }
 Pass {
  Name "FORWARD"
  Tags { "LIGHTMODE" = "FORWARDBASE" "RenderType" = "Opaque" "SHADOWSUPPORT" = "true" }
  GpuProgramID 43456
Program "vp" {
SubProgram "gles3 hw_tier00 " {
Keywords { "DIRECTIONAL" }
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in highp vec3 in_NORMAL0;
in highp vec4 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out highp vec3 vs_TEXCOORD1;
out highp vec3 vs_TEXCOORD2;
out highp vec4 vs_TEXCOORD5;
out highp vec4 vs_TEXCOORD6;
vec4 u_xlat0;
vec4 u_xlat1;
float u_xlat6;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    vs_TEXCOORD2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
    u_xlat0 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat0;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat0;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat0.xy;
    u_xlat0.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat6 = dot(u_xlat0.xyz, u_xlat0.xyz);
    u_xlat6 = inversesqrt(u_xlat6);
    vs_TEXCOORD1.xyz = vec3(u_xlat6) * u_xlat0.xyz;
    vs_TEXCOORD5 = vec4(0.0, 0.0, 0.0, 0.0);
    vs_TEXCOORD6 = vec4(0.0, 0.0, 0.0, 0.0);
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec3 _WorldSpaceCameraPos;
uniform 	mediump vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 _LightColor0;
uniform 	mediump vec4 _SpecColor;
uniform 	mediump vec4 _Color;
uniform 	mediump float _Smoothness;
uniform 	mediump vec4 _HColor;
uniform 	mediump vec4 _SColor;
uniform 	mediump float _RampThreshold;
uniform 	mediump float _RampSmooth;
uniform 	mediump float _SpecSmooth;
UNITY_LOCATION(0) uniform mediump sampler2D _MainTex;
in mediump vec2 vs_TEXCOORD0;
in highp vec3 vs_TEXCOORD1;
in highp vec3 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec4 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
float u_xlat4;
mediump vec3 u_xlat16_5;
mediump float u_xlat16_9;
float u_xlat12;
mediump float u_xlat16_13;
void main()
{
    u_xlat0.xyz = (-vs_TEXCOORD2.xyz) + _WorldSpaceCameraPos.xyz;
    u_xlat12 = dot(u_xlat0.xyz, u_xlat0.xyz);
    u_xlat12 = inversesqrt(u_xlat12);
    u_xlat16_1.xyz = u_xlat0.xyz * vec3(u_xlat12) + _WorldSpaceLightPos0.xyz;
    u_xlat16_13 = dot(u_xlat16_1.xyz, u_xlat16_1.xyz);
    u_xlat16_13 = inversesqrt(u_xlat16_13);
    u_xlat16_1.xyz = vec3(u_xlat16_13) * u_xlat16_1.xyz;
    u_xlat16_13 = dot(vs_TEXCOORD1.xyz, vs_TEXCOORD1.xyz);
    u_xlat16_13 = inversesqrt(u_xlat16_13);
    u_xlat16_2.xyz = vec3(u_xlat16_13) * vs_TEXCOORD1.xyz;
    u_xlat16_1.x = dot(u_xlat16_2.xyz, u_xlat16_1.xyz);
    u_xlat16_1.y = dot(u_xlat16_2.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat16_1.xy = max(u_xlat16_1.xy, vec2(0.0, 0.0));
    u_xlat0.x = log2(u_xlat16_1.x);
    u_xlat16_1.x = _Smoothness * 128.0;
    u_xlat0.x = u_xlat0.x * u_xlat16_1.x;
    u_xlat0.x = exp2(u_xlat0.x);
    u_xlat16_1.x = (-_SpecSmooth) * 0.5 + 0.5;
    u_xlat0.x = u_xlat0.x * 2.0 + (-u_xlat16_1.x);
    u_xlat16_9 = _SpecSmooth * 0.5 + 0.5;
    u_xlat4 = (-u_xlat16_1.x) + u_xlat16_9;
    u_xlat4 = float(1.0) / u_xlat4;
    u_xlat0.x = u_xlat4 * u_xlat0.x;
#ifdef UNITY_ADRENO_ES3
    u_xlat0.x = min(max(u_xlat0.x, 0.0), 1.0);
#else
    u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);
#endif
    u_xlat4 = u_xlat0.x * -2.0 + 3.0;
    u_xlat0.x = u_xlat0.x * u_xlat0.x;
    u_xlat0.x = u_xlat0.x * u_xlat4;
    u_xlat16_1.xzw = _LightColor0.xyz * _SpecColor.xyz;
    u_xlat0.xyz = u_xlat0.xxx * u_xlat16_1.xzw;
    u_xlat16_1.x = (-_RampSmooth) * 0.5 + _RampThreshold;
    u_xlat16_5.x = (-u_xlat16_1.x) + u_xlat16_1.y;
    u_xlat16_9 = _RampSmooth * 0.5 + _RampThreshold;
    u_xlat16_1.x = (-u_xlat16_1.x) + u_xlat16_9;
    u_xlat16_1.x = float(1.0) / u_xlat16_1.x;
    u_xlat16_1.x = u_xlat16_1.x * u_xlat16_5.x;
#ifdef UNITY_ADRENO_ES3
    u_xlat16_1.x = min(max(u_xlat16_1.x, 0.0), 1.0);
#else
    u_xlat16_1.x = clamp(u_xlat16_1.x, 0.0, 1.0);
#endif
    u_xlat16_5.x = u_xlat16_1.x * -2.0 + 3.0;
    u_xlat16_1.x = u_xlat16_1.x * u_xlat16_1.x;
    u_xlat16_1.x = u_xlat16_1.x * u_xlat16_5.x;
    u_xlat16_5.xyz = (-_HColor.xyz) + _SColor.xyz;
    u_xlat16_5.xyz = _SColor.www * u_xlat16_5.xyz + _HColor.xyz;
    u_xlat16_2.xyz = (-u_xlat16_5.xyz) + _HColor.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xxx * u_xlat16_2.xyz + u_xlat16_5.xyz;
    u_xlat16_3.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_2.xyz = u_xlat16_3.xyz * _Color.xyz;
    u_xlat16_2.xyz = u_xlat16_2.xyz * _LightColor0.xyz;
    u_xlat0.xyz = u_xlat16_2.xyz * u_xlat16_1.xyz + u_xlat0.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier01 " {
Keywords { "DIRECTIONAL" }
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in highp vec3 in_NORMAL0;
in highp vec4 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out highp vec3 vs_TEXCOORD1;
out highp vec3 vs_TEXCOORD2;
out highp vec4 vs_TEXCOORD5;
out highp vec4 vs_TEXCOORD6;
vec4 u_xlat0;
vec4 u_xlat1;
float u_xlat6;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    vs_TEXCOORD2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
    u_xlat0 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat0;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat0;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat0.xy;
    u_xlat0.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat6 = dot(u_xlat0.xyz, u_xlat0.xyz);
    u_xlat6 = inversesqrt(u_xlat6);
    vs_TEXCOORD1.xyz = vec3(u_xlat6) * u_xlat0.xyz;
    vs_TEXCOORD5 = vec4(0.0, 0.0, 0.0, 0.0);
    vs_TEXCOORD6 = vec4(0.0, 0.0, 0.0, 0.0);
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec3 _WorldSpaceCameraPos;
uniform 	mediump vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 _LightColor0;
uniform 	mediump vec4 _SpecColor;
uniform 	mediump vec4 _Color;
uniform 	mediump float _Smoothness;
uniform 	mediump vec4 _HColor;
uniform 	mediump vec4 _SColor;
uniform 	mediump float _RampThreshold;
uniform 	mediump float _RampSmooth;
uniform 	mediump float _SpecSmooth;
UNITY_LOCATION(0) uniform mediump sampler2D _MainTex;
in mediump vec2 vs_TEXCOORD0;
in highp vec3 vs_TEXCOORD1;
in highp vec3 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec4 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
float u_xlat4;
mediump vec3 u_xlat16_5;
mediump float u_xlat16_9;
float u_xlat12;
mediump float u_xlat16_13;
void main()
{
    u_xlat0.xyz = (-vs_TEXCOORD2.xyz) + _WorldSpaceCameraPos.xyz;
    u_xlat12 = dot(u_xlat0.xyz, u_xlat0.xyz);
    u_xlat12 = inversesqrt(u_xlat12);
    u_xlat16_1.xyz = u_xlat0.xyz * vec3(u_xlat12) + _WorldSpaceLightPos0.xyz;
    u_xlat16_13 = dot(u_xlat16_1.xyz, u_xlat16_1.xyz);
    u_xlat16_13 = inversesqrt(u_xlat16_13);
    u_xlat16_1.xyz = vec3(u_xlat16_13) * u_xlat16_1.xyz;
    u_xlat16_13 = dot(vs_TEXCOORD1.xyz, vs_TEXCOORD1.xyz);
    u_xlat16_13 = inversesqrt(u_xlat16_13);
    u_xlat16_2.xyz = vec3(u_xlat16_13) * vs_TEXCOORD1.xyz;
    u_xlat16_1.x = dot(u_xlat16_2.xyz, u_xlat16_1.xyz);
    u_xlat16_1.y = dot(u_xlat16_2.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat16_1.xy = max(u_xlat16_1.xy, vec2(0.0, 0.0));
    u_xlat0.x = log2(u_xlat16_1.x);
    u_xlat16_1.x = _Smoothness * 128.0;
    u_xlat0.x = u_xlat0.x * u_xlat16_1.x;
    u_xlat0.x = exp2(u_xlat0.x);
    u_xlat16_1.x = (-_SpecSmooth) * 0.5 + 0.5;
    u_xlat0.x = u_xlat0.x * 2.0 + (-u_xlat16_1.x);
    u_xlat16_9 = _SpecSmooth * 0.5 + 0.5;
    u_xlat4 = (-u_xlat16_1.x) + u_xlat16_9;
    u_xlat4 = float(1.0) / u_xlat4;
    u_xlat0.x = u_xlat4 * u_xlat0.x;
#ifdef UNITY_ADRENO_ES3
    u_xlat0.x = min(max(u_xlat0.x, 0.0), 1.0);
#else
    u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);
#endif
    u_xlat4 = u_xlat0.x * -2.0 + 3.0;
    u_xlat0.x = u_xlat0.x * u_xlat0.x;
    u_xlat0.x = u_xlat0.x * u_xlat4;
    u_xlat16_1.xzw = _LightColor0.xyz * _SpecColor.xyz;
    u_xlat0.xyz = u_xlat0.xxx * u_xlat16_1.xzw;
    u_xlat16_1.x = (-_RampSmooth) * 0.5 + _RampThreshold;
    u_xlat16_5.x = (-u_xlat16_1.x) + u_xlat16_1.y;
    u_xlat16_9 = _RampSmooth * 0.5 + _RampThreshold;
    u_xlat16_1.x = (-u_xlat16_1.x) + u_xlat16_9;
    u_xlat16_1.x = float(1.0) / u_xlat16_1.x;
    u_xlat16_1.x = u_xlat16_1.x * u_xlat16_5.x;
#ifdef UNITY_ADRENO_ES3
    u_xlat16_1.x = min(max(u_xlat16_1.x, 0.0), 1.0);
#else
    u_xlat16_1.x = clamp(u_xlat16_1.x, 0.0, 1.0);
#endif
    u_xlat16_5.x = u_xlat16_1.x * -2.0 + 3.0;
    u_xlat16_1.x = u_xlat16_1.x * u_xlat16_1.x;
    u_xlat16_1.x = u_xlat16_1.x * u_xlat16_5.x;
    u_xlat16_5.xyz = (-_HColor.xyz) + _SColor.xyz;
    u_xlat16_5.xyz = _SColor.www * u_xlat16_5.xyz + _HColor.xyz;
    u_xlat16_2.xyz = (-u_xlat16_5.xyz) + _HColor.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xxx * u_xlat16_2.xyz + u_xlat16_5.xyz;
    u_xlat16_3.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_2.xyz = u_xlat16_3.xyz * _Color.xyz;
    u_xlat16_2.xyz = u_xlat16_2.xyz * _LightColor0.xyz;
    u_xlat0.xyz = u_xlat16_2.xyz * u_xlat16_1.xyz + u_xlat0.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier02 " {
Keywords { "DIRECTIONAL" }
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in highp vec3 in_NORMAL0;
in highp vec4 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out highp vec3 vs_TEXCOORD1;
out highp vec3 vs_TEXCOORD2;
out highp vec4 vs_TEXCOORD5;
out highp vec4 vs_TEXCOORD6;
vec4 u_xlat0;
vec4 u_xlat1;
float u_xlat6;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    vs_TEXCOORD2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
    u_xlat0 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat0;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat0;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat0.xy;
    u_xlat0.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat6 = dot(u_xlat0.xyz, u_xlat0.xyz);
    u_xlat6 = inversesqrt(u_xlat6);
    vs_TEXCOORD1.xyz = vec3(u_xlat6) * u_xlat0.xyz;
    vs_TEXCOORD5 = vec4(0.0, 0.0, 0.0, 0.0);
    vs_TEXCOORD6 = vec4(0.0, 0.0, 0.0, 0.0);
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec3 _WorldSpaceCameraPos;
uniform 	mediump vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 _LightColor0;
uniform 	mediump vec4 _SpecColor;
uniform 	mediump vec4 _Color;
uniform 	mediump float _Smoothness;
uniform 	mediump vec4 _HColor;
uniform 	mediump vec4 _SColor;
uniform 	mediump float _RampThreshold;
uniform 	mediump float _RampSmooth;
uniform 	mediump float _SpecSmooth;
UNITY_LOCATION(0) uniform mediump sampler2D _MainTex;
in mediump vec2 vs_TEXCOORD0;
in highp vec3 vs_TEXCOORD1;
in highp vec3 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec4 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
float u_xlat4;
mediump vec3 u_xlat16_5;
mediump float u_xlat16_9;
float u_xlat12;
mediump float u_xlat16_13;
void main()
{
    u_xlat0.xyz = (-vs_TEXCOORD2.xyz) + _WorldSpaceCameraPos.xyz;
    u_xlat12 = dot(u_xlat0.xyz, u_xlat0.xyz);
    u_xlat12 = inversesqrt(u_xlat12);
    u_xlat16_1.xyz = u_xlat0.xyz * vec3(u_xlat12) + _WorldSpaceLightPos0.xyz;
    u_xlat16_13 = dot(u_xlat16_1.xyz, u_xlat16_1.xyz);
    u_xlat16_13 = inversesqrt(u_xlat16_13);
    u_xlat16_1.xyz = vec3(u_xlat16_13) * u_xlat16_1.xyz;
    u_xlat16_13 = dot(vs_TEXCOORD1.xyz, vs_TEXCOORD1.xyz);
    u_xlat16_13 = inversesqrt(u_xlat16_13);
    u_xlat16_2.xyz = vec3(u_xlat16_13) * vs_TEXCOORD1.xyz;
    u_xlat16_1.x = dot(u_xlat16_2.xyz, u_xlat16_1.xyz);
    u_xlat16_1.y = dot(u_xlat16_2.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat16_1.xy = max(u_xlat16_1.xy, vec2(0.0, 0.0));
    u_xlat0.x = log2(u_xlat16_1.x);
    u_xlat16_1.x = _Smoothness * 128.0;
    u_xlat0.x = u_xlat0.x * u_xlat16_1.x;
    u_xlat0.x = exp2(u_xlat0.x);
    u_xlat16_1.x = (-_SpecSmooth) * 0.5 + 0.5;
    u_xlat0.x = u_xlat0.x * 2.0 + (-u_xlat16_1.x);
    u_xlat16_9 = _SpecSmooth * 0.5 + 0.5;
    u_xlat4 = (-u_xlat16_1.x) + u_xlat16_9;
    u_xlat4 = float(1.0) / u_xlat4;
    u_xlat0.x = u_xlat4 * u_xlat0.x;
#ifdef UNITY_ADRENO_ES3
    u_xlat0.x = min(max(u_xlat0.x, 0.0), 1.0);
#else
    u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);
#endif
    u_xlat4 = u_xlat0.x * -2.0 + 3.0;
    u_xlat0.x = u_xlat0.x * u_xlat0.x;
    u_xlat0.x = u_xlat0.x * u_xlat4;
    u_xlat16_1.xzw = _LightColor0.xyz * _SpecColor.xyz;
    u_xlat0.xyz = u_xlat0.xxx * u_xlat16_1.xzw;
    u_xlat16_1.x = (-_RampSmooth) * 0.5 + _RampThreshold;
    u_xlat16_5.x = (-u_xlat16_1.x) + u_xlat16_1.y;
    u_xlat16_9 = _RampSmooth * 0.5 + _RampThreshold;
    u_xlat16_1.x = (-u_xlat16_1.x) + u_xlat16_9;
    u_xlat16_1.x = float(1.0) / u_xlat16_1.x;
    u_xlat16_1.x = u_xlat16_1.x * u_xlat16_5.x;
#ifdef UNITY_ADRENO_ES3
    u_xlat16_1.x = min(max(u_xlat16_1.x, 0.0), 1.0);
#else
    u_xlat16_1.x = clamp(u_xlat16_1.x, 0.0, 1.0);
#endif
    u_xlat16_5.x = u_xlat16_1.x * -2.0 + 3.0;
    u_xlat16_1.x = u_xlat16_1.x * u_xlat16_1.x;
    u_xlat16_1.x = u_xlat16_1.x * u_xlat16_5.x;
    u_xlat16_5.xyz = (-_HColor.xyz) + _SColor.xyz;
    u_xlat16_5.xyz = _SColor.www * u_xlat16_5.xyz + _HColor.xyz;
    u_xlat16_2.xyz = (-u_xlat16_5.xyz) + _HColor.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xxx * u_xlat16_2.xyz + u_xlat16_5.xyz;
    u_xlat16_3.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_2.xyz = u_xlat16_3.xyz * _Color.xyz;
    u_xlat16_2.xyz = u_xlat16_2.xyz * _LightColor0.xyz;
    u_xlat0.xyz = u_xlat16_2.xyz * u_xlat16_1.xyz + u_xlat0.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "vulkan hw_tier00 " {
Keywords { "DIRECTIONAL" }
"; SPIR-V
; Version: 1.0
; Generator: Khronos Glslang Reference Front End; 6
; Bound: 160
; Schema: 0
                                                      OpCapability Shader 
                                               %1 = OpExtInstImport "GLSL.std.450" 
                                                      OpMemoryModel Logical GLSL450 
                                                      OpEntryPoint Vertex %4 "main" %11 %52 %85 %95 %110 %114 %144 %150 %153 
                                                      OpName vs_TEXCOORD2 "vs_TEXCOORD2" 
                                                      OpName vs_TEXCOORD0 "vs_TEXCOORD0" 
                                                      OpName vs_TEXCOORD1 "vs_TEXCOORD1" 
                                                      OpName vs_TEXCOORD5 "vs_TEXCOORD5" 
                                                      OpName vs_TEXCOORD6 "vs_TEXCOORD6" 
                                                      OpDecorate %11 Location 11 
                                                      OpDecorate %16 ArrayStride 16 
                                                      OpDecorate %17 ArrayStride 17 
                                                      OpDecorate %18 ArrayStride 18 
                                                      OpMemberDecorate %19 0 Offset 19 
                                                      OpMemberDecorate %19 1 Offset 19 
                                                      OpMemberDecorate %19 2 Offset 19 
                                                      OpMemberDecorate %19 3 Offset 19 
                                                      OpDecorate %19 Block 
                                                      OpDecorate %21 DescriptorSet 21 
                                                      OpDecorate %21 Binding 21 
                                                      OpDecorate vs_TEXCOORD2 Location 52 
                                                      OpMemberDecorate %83 0 BuiltIn 83 
                                                      OpMemberDecorate %83 1 BuiltIn 83 
                                                      OpMemberDecorate %83 2 BuiltIn 83 
                                                      OpDecorate %83 Block 
                                                      OpDecorate %95 Location 95 
                                                      OpDecorate vs_TEXCOORD0 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD0 Location 110 
                                                      OpDecorate %114 Location 114 
                                                      OpDecorate vs_TEXCOORD1 Location 144 
                                                      OpDecorate vs_TEXCOORD5 Location 150 
                                                      OpDecorate vs_TEXCOORD6 Location 153 
                                               %2 = OpTypeVoid 
                                               %3 = OpTypeFunction %2 
                                               %6 = OpTypeFloat 32 
                                               %7 = OpTypeVector %6 4 
                                               %8 = OpTypePointer Private %7 
                                Private f32_4* %9 = OpVariable Private 
                                              %10 = OpTypePointer Input %7 
                                 Input f32_4* %11 = OpVariable Input 
                                              %14 = OpTypeInt 32 0 
                                          u32 %15 = OpConstant 4 
                                              %16 = OpTypeArray %7 %15 
                                              %17 = OpTypeArray %7 %15 
                                              %18 = OpTypeArray %7 %15 
                                              %19 = OpTypeStruct %16 %17 %18 %7 
                                              %20 = OpTypePointer Uniform %19 
Uniform struct {f32_4[4]; f32_4[4]; f32_4[4]; f32_4;}* %21 = OpVariable Uniform 
                                              %22 = OpTypeInt 32 1 
                                          i32 %23 = OpConstant 0 
                                          i32 %24 = OpConstant 1 
                                              %25 = OpTypePointer Uniform %7 
                                          i32 %36 = OpConstant 2 
                               Private f32_4* %44 = OpVariable Private 
                                          i32 %46 = OpConstant 3 
                                              %50 = OpTypeVector %6 3 
                                              %51 = OpTypePointer Output %50 
                       Output f32_3* vs_TEXCOORD2 = OpVariable Output 
                                          u32 %81 = OpConstant 1 
                                              %82 = OpTypeArray %6 %81 
                                              %83 = OpTypeStruct %7 %6 %82 
                                              %84 = OpTypePointer Output %83 
         Output struct {f32_4; f32; f32[1];}* %85 = OpVariable Output 
                                              %93 = OpTypePointer Output %7 
                                 Input f32_4* %95 = OpVariable Input 
                                              %96 = OpTypeVector %6 2 
                                             %109 = OpTypePointer Output %96 
                       Output f32_2* vs_TEXCOORD0 = OpVariable Output 
                                             %113 = OpTypePointer Input %50 
                                Input f32_3* %114 = OpVariable Input 
                                         u32 %120 = OpConstant 0 
                                             %121 = OpTypePointer Private %6 
                                         u32 %134 = OpConstant 2 
                                Private f32* %136 = OpVariable Private 
                       Output f32_3* vs_TEXCOORD1 = OpVariable Output 
                       Output f32_4* vs_TEXCOORD5 = OpVariable Output 
                                         f32 %151 = OpConstant 3.674022E-40 
                                       f32_4 %152 = OpConstantComposite %151 %151 %151 %151 
                       Output f32_4* vs_TEXCOORD6 = OpVariable Output 
                                             %154 = OpTypePointer Output %6 
                                          void %4 = OpFunction None %3 
                                               %5 = OpLabel 
                                        f32_4 %12 = OpLoad %11 
                                        f32_4 %13 = OpVectorShuffle %12 %12 1 1 1 1 
                               Uniform f32_4* %26 = OpAccessChain %21 %23 %24 
                                        f32_4 %27 = OpLoad %26 
                                        f32_4 %28 = OpFMul %13 %27 
                                                      OpStore %9 %28 
                               Uniform f32_4* %29 = OpAccessChain %21 %23 %23 
                                        f32_4 %30 = OpLoad %29 
                                        f32_4 %31 = OpLoad %11 
                                        f32_4 %32 = OpVectorShuffle %31 %31 0 0 0 0 
                                        f32_4 %33 = OpFMul %30 %32 
                                        f32_4 %34 = OpLoad %9 
                                        f32_4 %35 = OpFAdd %33 %34 
                                                      OpStore %9 %35 
                               Uniform f32_4* %37 = OpAccessChain %21 %23 %36 
                                        f32_4 %38 = OpLoad %37 
                                        f32_4 %39 = OpLoad %11 
                                        f32_4 %40 = OpVectorShuffle %39 %39 2 2 2 2 
                                        f32_4 %41 = OpFMul %38 %40 
                                        f32_4 %42 = OpLoad %9 
                                        f32_4 %43 = OpFAdd %41 %42 
                                                      OpStore %9 %43 
                                        f32_4 %45 = OpLoad %9 
                               Uniform f32_4* %47 = OpAccessChain %21 %23 %46 
                                        f32_4 %48 = OpLoad %47 
                                        f32_4 %49 = OpFAdd %45 %48 
                                                      OpStore %44 %49 
                               Uniform f32_4* %53 = OpAccessChain %21 %23 %46 
                                        f32_4 %54 = OpLoad %53 
                                        f32_3 %55 = OpVectorShuffle %54 %54 0 1 2 
                                        f32_4 %56 = OpLoad %11 
                                        f32_3 %57 = OpVectorShuffle %56 %56 3 3 3 
                                        f32_3 %58 = OpFMul %55 %57 
                                        f32_4 %59 = OpLoad %9 
                                        f32_3 %60 = OpVectorShuffle %59 %59 0 1 2 
                                        f32_3 %61 = OpFAdd %58 %60 
                                                      OpStore vs_TEXCOORD2 %61 
                                        f32_4 %62 = OpLoad %44 
                                        f32_4 %63 = OpVectorShuffle %62 %62 1 1 1 1 
                               Uniform f32_4* %64 = OpAccessChain %21 %36 %24 
                                        f32_4 %65 = OpLoad %64 
                                        f32_4 %66 = OpFMul %63 %65 
                                                      OpStore %9 %66 
                               Uniform f32_4* %67 = OpAccessChain %21 %36 %23 
                                        f32_4 %68 = OpLoad %67 
                                        f32_4 %69 = OpLoad %44 
                                        f32_4 %70 = OpVectorShuffle %69 %69 0 0 0 0 
                                        f32_4 %71 = OpFMul %68 %70 
                                        f32_4 %72 = OpLoad %9 
                                        f32_4 %73 = OpFAdd %71 %72 
                                                      OpStore %9 %73 
                               Uniform f32_4* %74 = OpAccessChain %21 %36 %36 
                                        f32_4 %75 = OpLoad %74 
                                        f32_4 %76 = OpLoad %44 
                                        f32_4 %77 = OpVectorShuffle %76 %76 2 2 2 2 
                                        f32_4 %78 = OpFMul %75 %77 
                                        f32_4 %79 = OpLoad %9 
                                        f32_4 %80 = OpFAdd %78 %79 
                                                      OpStore %9 %80 
                               Uniform f32_4* %86 = OpAccessChain %21 %36 %46 
                                        f32_4 %87 = OpLoad %86 
                                        f32_4 %88 = OpLoad %44 
                                        f32_4 %89 = OpVectorShuffle %88 %88 3 3 3 3 
                                        f32_4 %90 = OpFMul %87 %89 
                                        f32_4 %91 = OpLoad %9 
                                        f32_4 %92 = OpFAdd %90 %91 
                                Output f32_4* %94 = OpAccessChain %85 %23 
                                                      OpStore %94 %92 
                                        f32_4 %97 = OpLoad %95 
                                        f32_2 %98 = OpVectorShuffle %97 %97 0 1 
                               Uniform f32_4* %99 = OpAccessChain %21 %46 
                                       f32_4 %100 = OpLoad %99 
                                       f32_2 %101 = OpVectorShuffle %100 %100 0 1 
                                       f32_2 %102 = OpFMul %98 %101 
                              Uniform f32_4* %103 = OpAccessChain %21 %46 
                                       f32_4 %104 = OpLoad %103 
                                       f32_2 %105 = OpVectorShuffle %104 %104 2 3 
                                       f32_2 %106 = OpFAdd %102 %105 
                                       f32_4 %107 = OpLoad %9 
                                       f32_4 %108 = OpVectorShuffle %107 %106 4 5 2 3 
                                                      OpStore %9 %108 
                                       f32_4 %111 = OpLoad %9 
                                       f32_2 %112 = OpVectorShuffle %111 %111 0 1 
                                                      OpStore vs_TEXCOORD0 %112 
                                       f32_3 %115 = OpLoad %114 
                              Uniform f32_4* %116 = OpAccessChain %21 %24 %23 
                                       f32_4 %117 = OpLoad %116 
                                       f32_3 %118 = OpVectorShuffle %117 %117 0 1 2 
                                         f32 %119 = OpDot %115 %118 
                                Private f32* %122 = OpAccessChain %9 %120 
                                                      OpStore %122 %119 
                                       f32_3 %123 = OpLoad %114 
                              Uniform f32_4* %124 = OpAccessChain %21 %24 %24 
                                       f32_4 %125 = OpLoad %124 
                                       f32_3 %126 = OpVectorShuffle %125 %125 0 1 2 
                                         f32 %127 = OpDot %123 %126 
                                Private f32* %128 = OpAccessChain %9 %81 
                                                      OpStore %128 %127 
                                       f32_3 %129 = OpLoad %114 
                              Uniform f32_4* %130 = OpAccessChain %21 %24 %36 
                                       f32_4 %131 = OpLoad %130 
                                       f32_3 %132 = OpVectorShuffle %131 %131 0 1 2 
                                         f32 %133 = OpDot %129 %132 
                                Private f32* %135 = OpAccessChain %9 %134 
                                                      OpStore %135 %133 
                                       f32_4 %137 = OpLoad %9 
                                       f32_3 %138 = OpVectorShuffle %137 %137 0 1 2 
                                       f32_4 %139 = OpLoad %9 
                                       f32_3 %140 = OpVectorShuffle %139 %139 0 1 2 
                                         f32 %141 = OpDot %138 %140 
                                                      OpStore %136 %141 
                                         f32 %142 = OpLoad %136 
                                         f32 %143 = OpExtInst %1 32 %142 
                                                      OpStore %136 %143 
                                         f32 %145 = OpLoad %136 
                                       f32_3 %146 = OpCompositeConstruct %145 %145 %145 
                                       f32_4 %147 = OpLoad %9 
                                       f32_3 %148 = OpVectorShuffle %147 %147 0 1 2 
                                       f32_3 %149 = OpFMul %146 %148 
                                                      OpStore vs_TEXCOORD1 %149 
                                                      OpStore vs_TEXCOORD5 %152 
                                                      OpStore vs_TEXCOORD6 %152 
                                 Output f32* %155 = OpAccessChain %85 %23 %81 
                                         f32 %156 = OpLoad %155 
                                         f32 %157 = OpFNegate %156 
                                 Output f32* %158 = OpAccessChain %85 %23 %81 
                                                      OpStore %158 %157 
                                                      OpReturn
                                                      OpFunctionEnd
; SPIR-V
; Version: 1.0
; Generator: Khronos Glslang Reference Front End; 6
; Bound: 323
; Schema: 0
                                                      OpCapability Shader 
                                               %1 = OpExtInstImport "GLSL.std.450" 
                                                      OpMemoryModel Logical GLSL450 
                                                      OpEntryPoint Fragment %4 "main" %11 %60 %293 %315 
                                                      OpExecutionMode %4 OriginUpperLeft 
                                                      OpName vs_TEXCOORD2 "vs_TEXCOORD2" 
                                                      OpName vs_TEXCOORD1 "vs_TEXCOORD1" 
                                                      OpName vs_TEXCOORD0 "vs_TEXCOORD0" 
                                                      OpDecorate vs_TEXCOORD2 Location 11 
                                                      OpMemberDecorate %15 0 Offset 15 
                                                      OpMemberDecorate %15 1 RelaxedPrecision 
                                                      OpMemberDecorate %15 1 Offset 15 
                                                      OpMemberDecorate %15 2 RelaxedPrecision 
                                                      OpMemberDecorate %15 2 Offset 15 
                                                      OpMemberDecorate %15 3 RelaxedPrecision 
                                                      OpMemberDecorate %15 3 Offset 15 
                                                      OpMemberDecorate %15 4 RelaxedPrecision 
                                                      OpMemberDecorate %15 4 Offset 15 
                                                      OpMemberDecorate %15 5 RelaxedPrecision 
                                                      OpMemberDecorate %15 5 Offset 15 
                                                      OpMemberDecorate %15 6 RelaxedPrecision 
                                                      OpMemberDecorate %15 6 Offset 15 
                                                      OpMemberDecorate %15 7 RelaxedPrecision 
                                                      OpMemberDecorate %15 7 Offset 15 
                                                      OpMemberDecorate %15 8 RelaxedPrecision 
                                                      OpMemberDecorate %15 8 Offset 15 
                                                      OpMemberDecorate %15 9 RelaxedPrecision 
                                                      OpMemberDecorate %15 9 Offset 15 
                                                      OpMemberDecorate %15 10 RelaxedPrecision 
                                                      OpMemberDecorate %15 10 Offset 15 
                                                      OpDecorate %15 Block 
                                                      OpDecorate %17 DescriptorSet 17 
                                                      OpDecorate %17 Binding 17 
                                                      OpDecorate %32 RelaxedPrecision 
                                                      OpDecorate %40 RelaxedPrecision 
                                                      OpDecorate %41 RelaxedPrecision 
                                                      OpDecorate %45 RelaxedPrecision 
                                                      OpDecorate %46 RelaxedPrecision 
                                                      OpDecorate %47 RelaxedPrecision 
                                                      OpDecorate %48 RelaxedPrecision 
                                                      OpDecorate %49 RelaxedPrecision 
                                                      OpDecorate %50 RelaxedPrecision 
                                                      OpDecorate %51 RelaxedPrecision 
                                                      OpDecorate %52 RelaxedPrecision 
                                                      OpDecorate %53 RelaxedPrecision 
                                                      OpDecorate %54 RelaxedPrecision 
                                                      OpDecorate %55 RelaxedPrecision 
                                                      OpDecorate %56 RelaxedPrecision 
                                                      OpDecorate %57 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD1 Location 60 
                                                      OpDecorate %64 RelaxedPrecision 
                                                      OpDecorate %65 RelaxedPrecision 
                                                      OpDecorate %66 RelaxedPrecision 
                                                      OpDecorate %67 RelaxedPrecision 
                                                      OpDecorate %71 RelaxedPrecision 
                                                      OpDecorate %72 RelaxedPrecision 
                                                      OpDecorate %73 RelaxedPrecision 
                                                      OpDecorate %74 RelaxedPrecision 
                                                      OpDecorate %78 RelaxedPrecision 
                                                      OpDecorate %80 RelaxedPrecision 
                                                      OpDecorate %81 RelaxedPrecision 
                                                      OpDecorate %82 RelaxedPrecision 
                                                      OpDecorate %86 RelaxedPrecision 
                                                      OpDecorate %87 RelaxedPrecision 
                                                      OpDecorate %90 RelaxedPrecision 
                                                      OpDecorate %94 RelaxedPrecision 
                                                      OpDecorate %95 RelaxedPrecision 
                                                      OpDecorate %100 RelaxedPrecision 
                                                      OpDecorate %102 RelaxedPrecision 
                                                      OpDecorate %107 RelaxedPrecision 
                                                      OpDecorate %116 RelaxedPrecision 
                                                      OpDecorate %117 RelaxedPrecision 
                                                      OpDecorate %119 RelaxedPrecision 
                                                      OpDecorate %120 RelaxedPrecision 
                                                      OpDecorate %127 RelaxedPrecision 
                                                      OpDecorate %128 RelaxedPrecision 
                                                      OpDecorate %131 RelaxedPrecision 
                                                      OpDecorate %133 RelaxedPrecision 
                                                      OpDecorate %134 RelaxedPrecision 
                                                      OpDecorate %135 RelaxedPrecision 
                                                      OpDecorate %138 RelaxedPrecision 
                                                      OpDecorate %139 RelaxedPrecision 
                                                      OpDecorate %140 RelaxedPrecision 
                                                      OpDecorate %141 RelaxedPrecision 
                                                      OpDecorate %173 RelaxedPrecision 
                                                      OpDecorate %174 RelaxedPrecision 
                                                      OpDecorate %177 RelaxedPrecision 
                                                      OpDecorate %178 RelaxedPrecision 
                                                      OpDecorate %179 RelaxedPrecision 
                                                      OpDecorate %184 RelaxedPrecision 
                                                      OpDecorate %185 RelaxedPrecision 
                                                      OpDecorate %189 RelaxedPrecision 
                                                      OpDecorate %190 RelaxedPrecision 
                                                      OpDecorate %191 RelaxedPrecision 
                                                      OpDecorate %194 RelaxedPrecision 
                                                      OpDecorate %195 RelaxedPrecision 
                                                      OpDecorate %197 RelaxedPrecision 
                                                      OpDecorate %199 RelaxedPrecision 
                                                      OpDecorate %200 RelaxedPrecision 
                                                      OpDecorate %202 RelaxedPrecision 
                                                      OpDecorate %203 RelaxedPrecision 
                                                      OpDecorate %206 RelaxedPrecision 
                                                      OpDecorate %207 RelaxedPrecision 
                                                      OpDecorate %209 RelaxedPrecision 
                                                      OpDecorate %210 RelaxedPrecision 
                                                      OpDecorate %212 RelaxedPrecision 
                                                      OpDecorate %213 RelaxedPrecision 
                                                      OpDecorate %214 RelaxedPrecision 
                                                      OpDecorate %215 RelaxedPrecision 
                                                      OpDecorate %218 RelaxedPrecision 
                                                      OpDecorate %219 RelaxedPrecision 
                                                      OpDecorate %222 RelaxedPrecision 
                                                      OpDecorate %224 RelaxedPrecision 
                                                      OpDecorate %225 RelaxedPrecision 
                                                      OpDecorate %228 RelaxedPrecision 
                                                      OpDecorate %229 RelaxedPrecision 
                                                      OpDecorate %232 RelaxedPrecision 
                                                      OpDecorate %233 RelaxedPrecision 
                                                      OpDecorate %234 RelaxedPrecision 
                                                      OpDecorate %237 RelaxedPrecision 
                                                      OpDecorate %239 RelaxedPrecision 
                                                      OpDecorate %240 RelaxedPrecision 
                                                      OpDecorate %243 RelaxedPrecision 
                                                      OpDecorate %245 RelaxedPrecision 
                                                      OpDecorate %246 RelaxedPrecision 
                                                      OpDecorate %250 RelaxedPrecision 
                                                      OpDecorate %251 RelaxedPrecision 
                                                      OpDecorate %252 RelaxedPrecision 
                                                      OpDecorate %255 RelaxedPrecision 
                                                      OpDecorate %256 RelaxedPrecision 
                                                      OpDecorate %257 RelaxedPrecision 
                                                      OpDecorate %259 RelaxedPrecision 
                                                      OpDecorate %260 RelaxedPrecision 
                                                      OpDecorate %261 RelaxedPrecision 
                                                      OpDecorate %262 RelaxedPrecision 
                                                      OpDecorate %264 RelaxedPrecision 
                                                      OpDecorate %265 RelaxedPrecision 
                                                      OpDecorate %266 RelaxedPrecision 
                                                      OpDecorate %267 RelaxedPrecision 
                                                      OpDecorate %268 RelaxedPrecision 
                                                      OpDecorate %270 RelaxedPrecision 
                                                      OpDecorate %271 RelaxedPrecision 
                                                      OpDecorate %272 RelaxedPrecision 
                                                      OpDecorate %273 RelaxedPrecision 
                                                      OpDecorate %274 RelaxedPrecision 
                                                      OpDecorate %275 RelaxedPrecision 
                                                      OpDecorate %276 RelaxedPrecision 
                                                      OpDecorate %277 RelaxedPrecision 
                                                      OpDecorate %278 RelaxedPrecision 
                                                      OpDecorate %281 RelaxedPrecision 
                                                      OpDecorate %284 RelaxedPrecision 
                                                      OpDecorate %284 DescriptorSet 284 
                                                      OpDecorate %284 Binding 284 
                                                      OpDecorate %285 RelaxedPrecision 
                                                      OpDecorate %288 RelaxedPrecision 
                                                      OpDecorate %288 DescriptorSet 288 
                                                      OpDecorate %288 Binding 288 
                                                      OpDecorate %289 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD0 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD0 Location 293 
                                                      OpDecorate %294 RelaxedPrecision 
                                                      OpDecorate %295 RelaxedPrecision 
                                                      OpDecorate %296 RelaxedPrecision 
                                                      OpDecorate %297 RelaxedPrecision 
                                                      OpDecorate %300 RelaxedPrecision 
                                                      OpDecorate %301 RelaxedPrecision 
                                                      OpDecorate %302 RelaxedPrecision 
                                                      OpDecorate %303 RelaxedPrecision 
                                                      OpDecorate %305 RelaxedPrecision 
                                                      OpDecorate %306 RelaxedPrecision 
                                                      OpDecorate %307 RelaxedPrecision 
                                                      OpDecorate %308 RelaxedPrecision 
                                                      OpDecorate %309 RelaxedPrecision 
                                                      OpDecorate %310 RelaxedPrecision 
                                                      OpDecorate %311 RelaxedPrecision 
                                                      OpDecorate %315 RelaxedPrecision 
                                                      OpDecorate %315 Location 315 
                                               %2 = OpTypeVoid 
                                               %3 = OpTypeFunction %2 
                                               %6 = OpTypeFloat 32 
                                               %7 = OpTypeVector %6 3 
                                               %8 = OpTypePointer Private %7 
                                Private f32_3* %9 = OpVariable Private 
                                              %10 = OpTypePointer Input %7 
                        Input f32_3* vs_TEXCOORD2 = OpVariable Input 
                                              %14 = OpTypeVector %6 4 
                                              %15 = OpTypeStruct %7 %14 %14 %14 %14 %6 %14 %14 %6 %6 %6 
                                              %16 = OpTypePointer Uniform %15 
Uniform struct {f32_3; f32_4; f32_4; f32_4; f32_4; f32; f32_4; f32_4; f32; f32; f32;}* %17 = OpVariable Uniform 
                                              %18 = OpTypeInt 32 1 
                                          i32 %19 = OpConstant 0 
                                              %20 = OpTypePointer Uniform %7 
                                              %24 = OpTypePointer Private %6 
                                 Private f32* %25 = OpVariable Private 
                                              %31 = OpTypePointer Private %14 
                               Private f32_4* %32 = OpVariable Private 
                                          i32 %37 = OpConstant 1 
                                              %38 = OpTypePointer Uniform %14 
                                 Private f32* %45 = OpVariable Private 
                        Input f32_3* vs_TEXCOORD1 = OpVariable Input 
                               Private f32_3* %66 = OpVariable Private 
                                              %75 = OpTypeInt 32 0 
                                          u32 %76 = OpConstant 0 
                                          u32 %83 = OpConstant 1 
                                              %85 = OpTypeVector %6 2 
                                          f32 %88 = OpConstant 3.674022E-40 
                                        f32_2 %89 = OpConstantComposite %88 %88 
                                          i32 %97 = OpConstant 5 
                                              %98 = OpTypePointer Uniform %6 
                                         f32 %101 = OpConstant 3.674022E-40 
                                         i32 %114 = OpConstant 10 
                                         f32 %118 = OpConstant 3.674022E-40 
                                         f32 %124 = OpConstant 3.674022E-40 
                                Private f32* %131 = OpVariable Private 
                                Private f32* %136 = OpVariable Private 
                                         f32 %142 = OpConstant 3.674022E-40 
                                         f32 %156 = OpConstant 3.674022E-40 
                                         f32 %158 = OpConstant 3.674022E-40 
                                         i32 %171 = OpConstant 2 
                                         i32 %175 = OpConstant 3 
                                         i32 %187 = OpConstant 9 
                                         i32 %192 = OpConstant 8 
                              Private f32_3* %197 = OpVariable Private 
                                         i32 %248 = OpConstant 6 
                                         i32 %253 = OpConstant 7 
                              Private f32_3* %281 = OpVariable Private 
                                             %282 = OpTypeImage %6 Dim2D 0 0 0 1 Unknown 
                                             %283 = OpTypePointer UniformConstant %282 
        UniformConstant read_only Texture2D* %284 = OpVariable UniformConstant 
                                             %286 = OpTypeSampler 
                                             %287 = OpTypePointer UniformConstant %286 
                    UniformConstant sampler* %288 = OpVariable UniformConstant 
                                             %290 = OpTypeSampledImage %282 
                                             %292 = OpTypePointer Input %85 
                        Input f32_2* vs_TEXCOORD0 = OpVariable Input 
                                         i32 %298 = OpConstant 4 
                                             %314 = OpTypePointer Output %14 
                               Output f32_4* %315 = OpVariable Output 
                                         u32 %319 = OpConstant 3 
                                             %320 = OpTypePointer Output %6 
                                          void %4 = OpFunction None %3 
                                               %5 = OpLabel 
                                        f32_3 %12 = OpLoad vs_TEXCOORD2 
                                        f32_3 %13 = OpFNegate %12 
                               Uniform f32_3* %21 = OpAccessChain %17 %19 
                                        f32_3 %22 = OpLoad %21 
                                        f32_3 %23 = OpFAdd %13 %22 
                                                      OpStore %9 %23 
                                        f32_3 %26 = OpLoad %9 
                                        f32_3 %27 = OpLoad %9 
                                          f32 %28 = OpDot %26 %27 
                                                      OpStore %25 %28 
                                          f32 %29 = OpLoad %25 
                                          f32 %30 = OpExtInst %1 32 %29 
                                                      OpStore %25 %30 
                                        f32_3 %33 = OpLoad %9 
                                          f32 %34 = OpLoad %25 
                                        f32_3 %35 = OpCompositeConstruct %34 %34 %34 
                                        f32_3 %36 = OpFMul %33 %35 
                               Uniform f32_4* %39 = OpAccessChain %17 %37 
                                        f32_4 %40 = OpLoad %39 
                                        f32_3 %41 = OpVectorShuffle %40 %40 0 1 2 
                                        f32_3 %42 = OpFAdd %36 %41 
                                        f32_4 %43 = OpLoad %32 
                                        f32_4 %44 = OpVectorShuffle %43 %42 4 5 6 3 
                                                      OpStore %32 %44 
                                        f32_4 %46 = OpLoad %32 
                                        f32_3 %47 = OpVectorShuffle %46 %46 0 1 2 
                                        f32_4 %48 = OpLoad %32 
                                        f32_3 %49 = OpVectorShuffle %48 %48 0 1 2 
                                          f32 %50 = OpDot %47 %49 
                                                      OpStore %45 %50 
                                          f32 %51 = OpLoad %45 
                                          f32 %52 = OpExtInst %1 32 %51 
                                                      OpStore %45 %52 
                                          f32 %53 = OpLoad %45 
                                        f32_3 %54 = OpCompositeConstruct %53 %53 %53 
                                        f32_4 %55 = OpLoad %32 
                                        f32_3 %56 = OpVectorShuffle %55 %55 0 1 2 
                                        f32_3 %57 = OpFMul %54 %56 
                                        f32_4 %58 = OpLoad %32 
                                        f32_4 %59 = OpVectorShuffle %58 %57 4 5 6 3 
                                                      OpStore %32 %59 
                                        f32_3 %61 = OpLoad vs_TEXCOORD1 
                                        f32_3 %62 = OpLoad vs_TEXCOORD1 
                                          f32 %63 = OpDot %61 %62 
                                                      OpStore %45 %63 
                                          f32 %64 = OpLoad %45 
                                          f32 %65 = OpExtInst %1 32 %64 
                                                      OpStore %45 %65 
                                          f32 %67 = OpLoad %45 
                                        f32_3 %68 = OpCompositeConstruct %67 %67 %67 
                                        f32_3 %69 = OpLoad vs_TEXCOORD1 
                                        f32_3 %70 = OpFMul %68 %69 
                                                      OpStore %66 %70 
                                        f32_3 %71 = OpLoad %66 
                                        f32_4 %72 = OpLoad %32 
                                        f32_3 %73 = OpVectorShuffle %72 %72 0 1 2 
                                          f32 %74 = OpDot %71 %73 
                                 Private f32* %77 = OpAccessChain %32 %76 
                                                      OpStore %77 %74 
                                        f32_3 %78 = OpLoad %66 
                               Uniform f32_4* %79 = OpAccessChain %17 %37 
                                        f32_4 %80 = OpLoad %79 
                                        f32_3 %81 = OpVectorShuffle %80 %80 0 1 2 
                                          f32 %82 = OpDot %78 %81 
                                 Private f32* %84 = OpAccessChain %32 %83 
                                                      OpStore %84 %82 
                                        f32_4 %86 = OpLoad %32 
                                        f32_2 %87 = OpVectorShuffle %86 %86 0 1 
                                        f32_2 %90 = OpExtInst %1 40 %87 %89 
                                        f32_4 %91 = OpLoad %32 
                                        f32_4 %92 = OpVectorShuffle %91 %90 4 5 2 3 
                                                      OpStore %32 %92 
                                 Private f32* %93 = OpAccessChain %32 %76 
                                          f32 %94 = OpLoad %93 
                                          f32 %95 = OpExtInst %1 30 %94 
                                 Private f32* %96 = OpAccessChain %9 %76 
                                                      OpStore %96 %95 
                                 Uniform f32* %99 = OpAccessChain %17 %97 
                                         f32 %100 = OpLoad %99 
                                         f32 %102 = OpFMul %100 %101 
                                Private f32* %103 = OpAccessChain %32 %76 
                                                      OpStore %103 %102 
                                Private f32* %104 = OpAccessChain %9 %76 
                                         f32 %105 = OpLoad %104 
                                Private f32* %106 = OpAccessChain %32 %76 
                                         f32 %107 = OpLoad %106 
                                         f32 %108 = OpFMul %105 %107 
                                Private f32* %109 = OpAccessChain %9 %76 
                                                      OpStore %109 %108 
                                Private f32* %110 = OpAccessChain %9 %76 
                                         f32 %111 = OpLoad %110 
                                         f32 %112 = OpExtInst %1 29 %111 
                                Private f32* %113 = OpAccessChain %9 %76 
                                                      OpStore %113 %112 
                                Uniform f32* %115 = OpAccessChain %17 %114 
                                         f32 %116 = OpLoad %115 
                                         f32 %117 = OpFNegate %116 
                                         f32 %119 = OpFMul %117 %118 
                                         f32 %120 = OpFAdd %119 %118 
                                Private f32* %121 = OpAccessChain %32 %76 
                                                      OpStore %121 %120 
                                Private f32* %122 = OpAccessChain %9 %76 
                                         f32 %123 = OpLoad %122 
                                         f32 %125 = OpFMul %123 %124 
                                Private f32* %126 = OpAccessChain %32 %76 
                                         f32 %127 = OpLoad %126 
                                         f32 %128 = OpFNegate %127 
                                         f32 %129 = OpFAdd %125 %128 
                                Private f32* %130 = OpAccessChain %9 %76 
                                                      OpStore %130 %129 
                                Uniform f32* %132 = OpAccessChain %17 %114 
                                         f32 %133 = OpLoad %132 
                                         f32 %134 = OpFMul %133 %118 
                                         f32 %135 = OpFAdd %134 %118 
                                                      OpStore %131 %135 
                                Private f32* %137 = OpAccessChain %32 %76 
                                         f32 %138 = OpLoad %137 
                                         f32 %139 = OpFNegate %138 
                                         f32 %140 = OpLoad %131 
                                         f32 %141 = OpFAdd %139 %140 
                                                      OpStore %136 %141 
                                         f32 %143 = OpLoad %136 
                                         f32 %144 = OpFDiv %142 %143 
                                                      OpStore %136 %144 
                                         f32 %145 = OpLoad %136 
                                Private f32* %146 = OpAccessChain %9 %76 
                                         f32 %147 = OpLoad %146 
                                         f32 %148 = OpFMul %145 %147 
                                Private f32* %149 = OpAccessChain %9 %76 
                                                      OpStore %149 %148 
                                Private f32* %150 = OpAccessChain %9 %76 
                                         f32 %151 = OpLoad %150 
                                         f32 %152 = OpExtInst %1 43 %151 %88 %142 
                                Private f32* %153 = OpAccessChain %9 %76 
                                                      OpStore %153 %152 
                                Private f32* %154 = OpAccessChain %9 %76 
                                         f32 %155 = OpLoad %154 
                                         f32 %157 = OpFMul %155 %156 
                                         f32 %159 = OpFAdd %157 %158 
                                                      OpStore %136 %159 
                                Private f32* %160 = OpAccessChain %9 %76 
                                         f32 %161 = OpLoad %160 
                                Private f32* %162 = OpAccessChain %9 %76 
                                         f32 %163 = OpLoad %162 
                                         f32 %164 = OpFMul %161 %163 
                                Private f32* %165 = OpAccessChain %9 %76 
                                                      OpStore %165 %164 
                                Private f32* %166 = OpAccessChain %9 %76 
                                         f32 %167 = OpLoad %166 
                                         f32 %168 = OpLoad %136 
                                         f32 %169 = OpFMul %167 %168 
                                Private f32* %170 = OpAccessChain %9 %76 
                                                      OpStore %170 %169 
                              Uniform f32_4* %172 = OpAccessChain %17 %171 
                                       f32_4 %173 = OpLoad %172 
                                       f32_3 %174 = OpVectorShuffle %173 %173 0 1 2 
                              Uniform f32_4* %176 = OpAccessChain %17 %175 
                                       f32_4 %177 = OpLoad %176 
                                       f32_3 %178 = OpVectorShuffle %177 %177 0 1 2 
                                       f32_3 %179 = OpFMul %174 %178 
                                       f32_4 %180 = OpLoad %32 
                                       f32_4 %181 = OpVectorShuffle %180 %179 4 1 5 6 
                                                      OpStore %32 %181 
                                       f32_3 %182 = OpLoad %9 
                                       f32_3 %183 = OpVectorShuffle %182 %182 0 0 0 
                                       f32_4 %184 = OpLoad %32 
                                       f32_3 %185 = OpVectorShuffle %184 %184 0 2 3 
                                       f32_3 %186 = OpFMul %183 %185 
                                                      OpStore %9 %186 
                                Uniform f32* %188 = OpAccessChain %17 %187 
                                         f32 %189 = OpLoad %188 
                                         f32 %190 = OpFNegate %189 
                                         f32 %191 = OpFMul %190 %118 
                                Uniform f32* %193 = OpAccessChain %17 %192 
                                         f32 %194 = OpLoad %193 
                                         f32 %195 = OpFAdd %191 %194 
                                Private f32* %196 = OpAccessChain %32 %76 
                                                      OpStore %196 %195 
                                Private f32* %198 = OpAccessChain %32 %76 
                                         f32 %199 = OpLoad %198 
                                         f32 %200 = OpFNegate %199 
                                Private f32* %201 = OpAccessChain %32 %83 
                                         f32 %202 = OpLoad %201 
                                         f32 %203 = OpFAdd %200 %202 
                                Private f32* %204 = OpAccessChain %197 %76 
                                                      OpStore %204 %203 
                                Uniform f32* %205 = OpAccessChain %17 %187 
                                         f32 %206 = OpLoad %205 
                                         f32 %207 = OpFMul %206 %118 
                                Uniform f32* %208 = OpAccessChain %17 %192 
                                         f32 %209 = OpLoad %208 
                                         f32 %210 = OpFAdd %207 %209 
                                                      OpStore %131 %210 
                                Private f32* %211 = OpAccessChain %32 %76 
                                         f32 %212 = OpLoad %211 
                                         f32 %213 = OpFNegate %212 
                                         f32 %214 = OpLoad %131 
                                         f32 %215 = OpFAdd %213 %214 
                                Private f32* %216 = OpAccessChain %32 %76 
                                                      OpStore %216 %215 
                                Private f32* %217 = OpAccessChain %32 %76 
                                         f32 %218 = OpLoad %217 
                                         f32 %219 = OpFDiv %142 %218 
                                Private f32* %220 = OpAccessChain %32 %76 
                                                      OpStore %220 %219 
                                Private f32* %221 = OpAccessChain %32 %76 
                                         f32 %222 = OpLoad %221 
                                Private f32* %223 = OpAccessChain %197 %76 
                                         f32 %224 = OpLoad %223 
                                         f32 %225 = OpFMul %222 %224 
                                Private f32* %226 = OpAccessChain %32 %76 
                                                      OpStore %226 %225 
                                Private f32* %227 = OpAccessChain %32 %76 
                                         f32 %228 = OpLoad %227 
                                         f32 %229 = OpExtInst %1 43 %228 %88 %142 
                                Private f32* %230 = OpAccessChain %32 %76 
                                                      OpStore %230 %229 
                                Private f32* %231 = OpAccessChain %32 %76 
                                         f32 %232 = OpLoad %231 
                                         f32 %233 = OpFMul %232 %156 
                                         f32 %234 = OpFAdd %233 %158 
                                Private f32* %235 = OpAccessChain %197 %76 
                                                      OpStore %235 %234 
                                Private f32* %236 = OpAccessChain %32 %76 
                                         f32 %237 = OpLoad %236 
                                Private f32* %238 = OpAccessChain %32 %76 
                                         f32 %239 = OpLoad %238 
                                         f32 %240 = OpFMul %237 %239 
                                Private f32* %241 = OpAccessChain %32 %76 
                                                      OpStore %241 %240 
                                Private f32* %242 = OpAccessChain %32 %76 
                                         f32 %243 = OpLoad %242 
                                Private f32* %244 = OpAccessChain %197 %76 
                                         f32 %245 = OpLoad %244 
                                         f32 %246 = OpFMul %243 %245 
                                Private f32* %247 = OpAccessChain %32 %76 
                                                      OpStore %247 %246 
                              Uniform f32_4* %249 = OpAccessChain %17 %248 
                                       f32_4 %250 = OpLoad %249 
                                       f32_3 %251 = OpVectorShuffle %250 %250 0 1 2 
                                       f32_3 %252 = OpFNegate %251 
                              Uniform f32_4* %254 = OpAccessChain %17 %253 
                                       f32_4 %255 = OpLoad %254 
                                       f32_3 %256 = OpVectorShuffle %255 %255 0 1 2 
                                       f32_3 %257 = OpFAdd %252 %256 
                                                      OpStore %197 %257 
                              Uniform f32_4* %258 = OpAccessChain %17 %253 
                                       f32_4 %259 = OpLoad %258 
                                       f32_3 %260 = OpVectorShuffle %259 %259 3 3 3 
                                       f32_3 %261 = OpLoad %197 
                                       f32_3 %262 = OpFMul %260 %261 
                              Uniform f32_4* %263 = OpAccessChain %17 %248 
                                       f32_4 %264 = OpLoad %263 
                                       f32_3 %265 = OpVectorShuffle %264 %264 0 1 2 
                                       f32_3 %266 = OpFAdd %262 %265 
                                                      OpStore %197 %266 
                                       f32_3 %267 = OpLoad %197 
                                       f32_3 %268 = OpFNegate %267 
                              Uniform f32_4* %269 = OpAccessChain %17 %248 
                                       f32_4 %270 = OpLoad %269 
                                       f32_3 %271 = OpVectorShuffle %270 %270 0 1 2 
                                       f32_3 %272 = OpFAdd %268 %271 
                                                      OpStore %66 %272 
                                       f32_4 %273 = OpLoad %32 
                                       f32_3 %274 = OpVectorShuffle %273 %273 0 0 0 
                                       f32_3 %275 = OpLoad %66 
                                       f32_3 %276 = OpFMul %274 %275 
                                       f32_3 %277 = OpLoad %197 
                                       f32_3 %278 = OpFAdd %276 %277 
                                       f32_4 %279 = OpLoad %32 
                                       f32_4 %280 = OpVectorShuffle %279 %278 4 5 6 3 
                                                      OpStore %32 %280 
                         read_only Texture2D %285 = OpLoad %284 
                                     sampler %289 = OpLoad %288 
                  read_only Texture2DSampled %291 = OpSampledImage %285 %289 
                                       f32_2 %294 = OpLoad vs_TEXCOORD0 
                                       f32_4 %295 = OpImageSampleImplicitLod %291 %294 
                                       f32_3 %296 = OpVectorShuffle %295 %295 0 1 2 
                                                      OpStore %281 %296 
                                       f32_3 %297 = OpLoad %281 
                              Uniform f32_4* %299 = OpAccessChain %17 %298 
                                       f32_4 %300 = OpLoad %299 
                                       f32_3 %301 = OpVectorShuffle %300 %300 0 1 2 
                                       f32_3 %302 = OpFMul %297 %301 
                                                      OpStore %66 %302 
                                       f32_3 %303 = OpLoad %66 
                              Uniform f32_4* %304 = OpAccessChain %17 %171 
                                       f32_4 %305 = OpLoad %304 
                                       f32_3 %306 = OpVectorShuffle %305 %305 0 1 2 
                                       f32_3 %307 = OpFMul %303 %306 
                                                      OpStore %66 %307 
                                       f32_3 %308 = OpLoad %66 
                                       f32_4 %309 = OpLoad %32 
                                       f32_3 %310 = OpVectorShuffle %309 %309 0 1 2 
                                       f32_3 %311 = OpFMul %308 %310 
                                       f32_3 %312 = OpLoad %9 
                                       f32_3 %313 = OpFAdd %311 %312 
                                                      OpStore %9 %313 
                                       f32_3 %316 = OpLoad %9 
                                       f32_4 %317 = OpLoad %315 
                                       f32_4 %318 = OpVectorShuffle %317 %316 4 5 6 3 
                                                      OpStore %315 %318 
                                 Output f32* %321 = OpAccessChain %315 %319 
                                                      OpStore %321 %142 
                                                      OpReturn
                                                      OpFunctionEnd
"
}
SubProgram "vulkan hw_tier01 " {
Keywords { "DIRECTIONAL" }
"; SPIR-V
; Version: 1.0
; Generator: Khronos Glslang Reference Front End; 6
; Bound: 160
; Schema: 0
                                                      OpCapability Shader 
                                               %1 = OpExtInstImport "GLSL.std.450" 
                                                      OpMemoryModel Logical GLSL450 
                                                      OpEntryPoint Vertex %4 "main" %11 %52 %85 %95 %110 %114 %144 %150 %153 
                                                      OpName vs_TEXCOORD2 "vs_TEXCOORD2" 
                                                      OpName vs_TEXCOORD0 "vs_TEXCOORD0" 
                                                      OpName vs_TEXCOORD1 "vs_TEXCOORD1" 
                                                      OpName vs_TEXCOORD5 "vs_TEXCOORD5" 
                                                      OpName vs_TEXCOORD6 "vs_TEXCOORD6" 
                                                      OpDecorate %11 Location 11 
                                                      OpDecorate %16 ArrayStride 16 
                                                      OpDecorate %17 ArrayStride 17 
                                                      OpDecorate %18 ArrayStride 18 
                                                      OpMemberDecorate %19 0 Offset 19 
                                                      OpMemberDecorate %19 1 Offset 19 
                                                      OpMemberDecorate %19 2 Offset 19 
                                                      OpMemberDecorate %19 3 Offset 19 
                                                      OpDecorate %19 Block 
                                                      OpDecorate %21 DescriptorSet 21 
                                                      OpDecorate %21 Binding 21 
                                                      OpDecorate vs_TEXCOORD2 Location 52 
                                                      OpMemberDecorate %83 0 BuiltIn 83 
                                                      OpMemberDecorate %83 1 BuiltIn 83 
                                                      OpMemberDecorate %83 2 BuiltIn 83 
                                                      OpDecorate %83 Block 
                                                      OpDecorate %95 Location 95 
                                                      OpDecorate vs_TEXCOORD0 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD0 Location 110 
                                                      OpDecorate %114 Location 114 
                                                      OpDecorate vs_TEXCOORD1 Location 144 
                                                      OpDecorate vs_TEXCOORD5 Location 150 
                                                      OpDecorate vs_TEXCOORD6 Location 153 
                                               %2 = OpTypeVoid 
                                               %3 = OpTypeFunction %2 
                                               %6 = OpTypeFloat 32 
                                               %7 = OpTypeVector %6 4 
                                               %8 = OpTypePointer Private %7 
                                Private f32_4* %9 = OpVariable Private 
                                              %10 = OpTypePointer Input %7 
                                 Input f32_4* %11 = OpVariable Input 
                                              %14 = OpTypeInt 32 0 
                                          u32 %15 = OpConstant 4 
                                              %16 = OpTypeArray %7 %15 
                                              %17 = OpTypeArray %7 %15 
                                              %18 = OpTypeArray %7 %15 
                                              %19 = OpTypeStruct %16 %17 %18 %7 
                                              %20 = OpTypePointer Uniform %19 
Uniform struct {f32_4[4]; f32_4[4]; f32_4[4]; f32_4;}* %21 = OpVariable Uniform 
                                              %22 = OpTypeInt 32 1 
                                          i32 %23 = OpConstant 0 
                                          i32 %24 = OpConstant 1 
                                              %25 = OpTypePointer Uniform %7 
                                          i32 %36 = OpConstant 2 
                               Private f32_4* %44 = OpVariable Private 
                                          i32 %46 = OpConstant 3 
                                              %50 = OpTypeVector %6 3 
                                              %51 = OpTypePointer Output %50 
                       Output f32_3* vs_TEXCOORD2 = OpVariable Output 
                                          u32 %81 = OpConstant 1 
                                              %82 = OpTypeArray %6 %81 
                                              %83 = OpTypeStruct %7 %6 %82 
                                              %84 = OpTypePointer Output %83 
         Output struct {f32_4; f32; f32[1];}* %85 = OpVariable Output 
                                              %93 = OpTypePointer Output %7 
                                 Input f32_4* %95 = OpVariable Input 
                                              %96 = OpTypeVector %6 2 
                                             %109 = OpTypePointer Output %96 
                       Output f32_2* vs_TEXCOORD0 = OpVariable Output 
                                             %113 = OpTypePointer Input %50 
                                Input f32_3* %114 = OpVariable Input 
                                         u32 %120 = OpConstant 0 
                                             %121 = OpTypePointer Private %6 
                                         u32 %134 = OpConstant 2 
                                Private f32* %136 = OpVariable Private 
                       Output f32_3* vs_TEXCOORD1 = OpVariable Output 
                       Output f32_4* vs_TEXCOORD5 = OpVariable Output 
                                         f32 %151 = OpConstant 3.674022E-40 
                                       f32_4 %152 = OpConstantComposite %151 %151 %151 %151 
                       Output f32_4* vs_TEXCOORD6 = OpVariable Output 
                                             %154 = OpTypePointer Output %6 
                                          void %4 = OpFunction None %3 
                                               %5 = OpLabel 
                                        f32_4 %12 = OpLoad %11 
                                        f32_4 %13 = OpVectorShuffle %12 %12 1 1 1 1 
                               Uniform f32_4* %26 = OpAccessChain %21 %23 %24 
                                        f32_4 %27 = OpLoad %26 
                                        f32_4 %28 = OpFMul %13 %27 
                                                      OpStore %9 %28 
                               Uniform f32_4* %29 = OpAccessChain %21 %23 %23 
                                        f32_4 %30 = OpLoad %29 
                                        f32_4 %31 = OpLoad %11 
                                        f32_4 %32 = OpVectorShuffle %31 %31 0 0 0 0 
                                        f32_4 %33 = OpFMul %30 %32 
                                        f32_4 %34 = OpLoad %9 
                                        f32_4 %35 = OpFAdd %33 %34 
                                                      OpStore %9 %35 
                               Uniform f32_4* %37 = OpAccessChain %21 %23 %36 
                                        f32_4 %38 = OpLoad %37 
                                        f32_4 %39 = OpLoad %11 
                                        f32_4 %40 = OpVectorShuffle %39 %39 2 2 2 2 
                                        f32_4 %41 = OpFMul %38 %40 
                                        f32_4 %42 = OpLoad %9 
                                        f32_4 %43 = OpFAdd %41 %42 
                                                      OpStore %9 %43 
                                        f32_4 %45 = OpLoad %9 
                               Uniform f32_4* %47 = OpAccessChain %21 %23 %46 
                                        f32_4 %48 = OpLoad %47 
                                        f32_4 %49 = OpFAdd %45 %48 
                                                      OpStore %44 %49 
                               Uniform f32_4* %53 = OpAccessChain %21 %23 %46 
                                        f32_4 %54 = OpLoad %53 
                                        f32_3 %55 = OpVectorShuffle %54 %54 0 1 2 
                                        f32_4 %56 = OpLoad %11 
                                        f32_3 %57 = OpVectorShuffle %56 %56 3 3 3 
                                        f32_3 %58 = OpFMul %55 %57 
                                        f32_4 %59 = OpLoad %9 
                                        f32_3 %60 = OpVectorShuffle %59 %59 0 1 2 
                                        f32_3 %61 = OpFAdd %58 %60 
                                                      OpStore vs_TEXCOORD2 %61 
                                        f32_4 %62 = OpLoad %44 
                                        f32_4 %63 = OpVectorShuffle %62 %62 1 1 1 1 
                               Uniform f32_4* %64 = OpAccessChain %21 %36 %24 
                                        f32_4 %65 = OpLoad %64 
                                        f32_4 %66 = OpFMul %63 %65 
                                                      OpStore %9 %66 
                               Uniform f32_4* %67 = OpAccessChain %21 %36 %23 
                                        f32_4 %68 = OpLoad %67 
                                        f32_4 %69 = OpLoad %44 
                                        f32_4 %70 = OpVectorShuffle %69 %69 0 0 0 0 
                                        f32_4 %71 = OpFMul %68 %70 
                                        f32_4 %72 = OpLoad %9 
                                        f32_4 %73 = OpFAdd %71 %72 
                                                      OpStore %9 %73 
                               Uniform f32_4* %74 = OpAccessChain %21 %36 %36 
                                        f32_4 %75 = OpLoad %74 
                                        f32_4 %76 = OpLoad %44 
                                        f32_4 %77 = OpVectorShuffle %76 %76 2 2 2 2 
                                        f32_4 %78 = OpFMul %75 %77 
                                        f32_4 %79 = OpLoad %9 
                                        f32_4 %80 = OpFAdd %78 %79 
                                                      OpStore %9 %80 
                               Uniform f32_4* %86 = OpAccessChain %21 %36 %46 
                                        f32_4 %87 = OpLoad %86 
                                        f32_4 %88 = OpLoad %44 
                                        f32_4 %89 = OpVectorShuffle %88 %88 3 3 3 3 
                                        f32_4 %90 = OpFMul %87 %89 
                                        f32_4 %91 = OpLoad %9 
                                        f32_4 %92 = OpFAdd %90 %91 
                                Output f32_4* %94 = OpAccessChain %85 %23 
                                                      OpStore %94 %92 
                                        f32_4 %97 = OpLoad %95 
                                        f32_2 %98 = OpVectorShuffle %97 %97 0 1 
                               Uniform f32_4* %99 = OpAccessChain %21 %46 
                                       f32_4 %100 = OpLoad %99 
                                       f32_2 %101 = OpVectorShuffle %100 %100 0 1 
                                       f32_2 %102 = OpFMul %98 %101 
                              Uniform f32_4* %103 = OpAccessChain %21 %46 
                                       f32_4 %104 = OpLoad %103 
                                       f32_2 %105 = OpVectorShuffle %104 %104 2 3 
                                       f32_2 %106 = OpFAdd %102 %105 
                                       f32_4 %107 = OpLoad %9 
                                       f32_4 %108 = OpVectorShuffle %107 %106 4 5 2 3 
                                                      OpStore %9 %108 
                                       f32_4 %111 = OpLoad %9 
                                       f32_2 %112 = OpVectorShuffle %111 %111 0 1 
                                                      OpStore vs_TEXCOORD0 %112 
                                       f32_3 %115 = OpLoad %114 
                              Uniform f32_4* %116 = OpAccessChain %21 %24 %23 
                                       f32_4 %117 = OpLoad %116 
                                       f32_3 %118 = OpVectorShuffle %117 %117 0 1 2 
                                         f32 %119 = OpDot %115 %118 
                                Private f32* %122 = OpAccessChain %9 %120 
                                                      OpStore %122 %119 
                                       f32_3 %123 = OpLoad %114 
                              Uniform f32_4* %124 = OpAccessChain %21 %24 %24 
                                       f32_4 %125 = OpLoad %124 
                                       f32_3 %126 = OpVectorShuffle %125 %125 0 1 2 
                                         f32 %127 = OpDot %123 %126 
                                Private f32* %128 = OpAccessChain %9 %81 
                                                      OpStore %128 %127 
                                       f32_3 %129 = OpLoad %114 
                              Uniform f32_4* %130 = OpAccessChain %21 %24 %36 
                                       f32_4 %131 = OpLoad %130 
                                       f32_3 %132 = OpVectorShuffle %131 %131 0 1 2 
                                         f32 %133 = OpDot %129 %132 
                                Private f32* %135 = OpAccessChain %9 %134 
                                                      OpStore %135 %133 
                                       f32_4 %137 = OpLoad %9 
                                       f32_3 %138 = OpVectorShuffle %137 %137 0 1 2 
                                       f32_4 %139 = OpLoad %9 
                                       f32_3 %140 = OpVectorShuffle %139 %139 0 1 2 
                                         f32 %141 = OpDot %138 %140 
                                                      OpStore %136 %141 
                                         f32 %142 = OpLoad %136 
                                         f32 %143 = OpExtInst %1 32 %142 
                                                      OpStore %136 %143 
                                         f32 %145 = OpLoad %136 
                                       f32_3 %146 = OpCompositeConstruct %145 %145 %145 
                                       f32_4 %147 = OpLoad %9 
                                       f32_3 %148 = OpVectorShuffle %147 %147 0 1 2 
                                       f32_3 %149 = OpFMul %146 %148 
                                                      OpStore vs_TEXCOORD1 %149 
                                                      OpStore vs_TEXCOORD5 %152 
                                                      OpStore vs_TEXCOORD6 %152 
                                 Output f32* %155 = OpAccessChain %85 %23 %81 
                                         f32 %156 = OpLoad %155 
                                         f32 %157 = OpFNegate %156 
                                 Output f32* %158 = OpAccessChain %85 %23 %81 
                                                      OpStore %158 %157 
                                                      OpReturn
                                                      OpFunctionEnd
; SPIR-V
; Version: 1.0
; Generator: Khronos Glslang Reference Front End; 6
; Bound: 323
; Schema: 0
                                                      OpCapability Shader 
                                               %1 = OpExtInstImport "GLSL.std.450" 
                                                      OpMemoryModel Logical GLSL450 
                                                      OpEntryPoint Fragment %4 "main" %11 %60 %293 %315 
                                                      OpExecutionMode %4 OriginUpperLeft 
                                                      OpName vs_TEXCOORD2 "vs_TEXCOORD2" 
                                                      OpName vs_TEXCOORD1 "vs_TEXCOORD1" 
                                                      OpName vs_TEXCOORD0 "vs_TEXCOORD0" 
                                                      OpDecorate vs_TEXCOORD2 Location 11 
                                                      OpMemberDecorate %15 0 Offset 15 
                                                      OpMemberDecorate %15 1 RelaxedPrecision 
                                                      OpMemberDecorate %15 1 Offset 15 
                                                      OpMemberDecorate %15 2 RelaxedPrecision 
                                                      OpMemberDecorate %15 2 Offset 15 
                                                      OpMemberDecorate %15 3 RelaxedPrecision 
                                                      OpMemberDecorate %15 3 Offset 15 
                                                      OpMemberDecorate %15 4 RelaxedPrecision 
                                                      OpMemberDecorate %15 4 Offset 15 
                                                      OpMemberDecorate %15 5 RelaxedPrecision 
                                                      OpMemberDecorate %15 5 Offset 15 
                                                      OpMemberDecorate %15 6 RelaxedPrecision 
                                                      OpMemberDecorate %15 6 Offset 15 
                                                      OpMemberDecorate %15 7 RelaxedPrecision 
                                                      OpMemberDecorate %15 7 Offset 15 
                                                      OpMemberDecorate %15 8 RelaxedPrecision 
                                                      OpMemberDecorate %15 8 Offset 15 
                                                      OpMemberDecorate %15 9 RelaxedPrecision 
                                                      OpMemberDecorate %15 9 Offset 15 
                                                      OpMemberDecorate %15 10 RelaxedPrecision 
                                                      OpMemberDecorate %15 10 Offset 15 
                                                      OpDecorate %15 Block 
                                                      OpDecorate %17 DescriptorSet 17 
                                                      OpDecorate %17 Binding 17 
                                                      OpDecorate %32 RelaxedPrecision 
                                                      OpDecorate %40 RelaxedPrecision 
                                                      OpDecorate %41 RelaxedPrecision 
                                                      OpDecorate %45 RelaxedPrecision 
                                                      OpDecorate %46 RelaxedPrecision 
                                                      OpDecorate %47 RelaxedPrecision 
                                                      OpDecorate %48 RelaxedPrecision 
                                                      OpDecorate %49 RelaxedPrecision 
                                                      OpDecorate %50 RelaxedPrecision 
                                                      OpDecorate %51 RelaxedPrecision 
                                                      OpDecorate %52 RelaxedPrecision 
                                                      OpDecorate %53 RelaxedPrecision 
                                                      OpDecorate %54 RelaxedPrecision 
                                                      OpDecorate %55 RelaxedPrecision 
                                                      OpDecorate %56 RelaxedPrecision 
                                                      OpDecorate %57 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD1 Location 60 
                                                      OpDecorate %64 RelaxedPrecision 
                                                      OpDecorate %65 RelaxedPrecision 
                                                      OpDecorate %66 RelaxedPrecision 
                                                      OpDecorate %67 RelaxedPrecision 
                                                      OpDecorate %71 RelaxedPrecision 
                                                      OpDecorate %72 RelaxedPrecision 
                                                      OpDecorate %73 RelaxedPrecision 
                                                      OpDecorate %74 RelaxedPrecision 
                                                      OpDecorate %78 RelaxedPrecision 
                                                      OpDecorate %80 RelaxedPrecision 
                                                      OpDecorate %81 RelaxedPrecision 
                                                      OpDecorate %82 RelaxedPrecision 
                                                      OpDecorate %86 RelaxedPrecision 
                                                      OpDecorate %87 RelaxedPrecision 
                                                      OpDecorate %90 RelaxedPrecision 
                                                      OpDecorate %94 RelaxedPrecision 
                                                      OpDecorate %95 RelaxedPrecision 
                                                      OpDecorate %100 RelaxedPrecision 
                                                      OpDecorate %102 RelaxedPrecision 
                                                      OpDecorate %107 RelaxedPrecision 
                                                      OpDecorate %116 RelaxedPrecision 
                                                      OpDecorate %117 RelaxedPrecision 
                                                      OpDecorate %119 RelaxedPrecision 
                                                      OpDecorate %120 RelaxedPrecision 
                                                      OpDecorate %127 RelaxedPrecision 
                                                      OpDecorate %128 RelaxedPrecision 
                                                      OpDecorate %131 RelaxedPrecision 
                                                      OpDecorate %133 RelaxedPrecision 
                                                      OpDecorate %134 RelaxedPrecision 
                                                      OpDecorate %135 RelaxedPrecision 
                                                      OpDecorate %138 RelaxedPrecision 
                                                      OpDecorate %139 RelaxedPrecision 
                                                      OpDecorate %140 RelaxedPrecision 
                                                      OpDecorate %141 RelaxedPrecision 
                                                      OpDecorate %173 RelaxedPrecision 
                                                      OpDecorate %174 RelaxedPrecision 
                                                      OpDecorate %177 RelaxedPrecision 
                                                      OpDecorate %178 RelaxedPrecision 
                                                      OpDecorate %179 RelaxedPrecision 
                                                      OpDecorate %184 RelaxedPrecision 
                                                      OpDecorate %185 RelaxedPrecision 
                                                      OpDecorate %189 RelaxedPrecision 
                                                      OpDecorate %190 RelaxedPrecision 
                                                      OpDecorate %191 RelaxedPrecision 
                                                      OpDecorate %194 RelaxedPrecision 
                                                      OpDecorate %195 RelaxedPrecision 
                                                      OpDecorate %197 RelaxedPrecision 
                                                      OpDecorate %199 RelaxedPrecision 
                                                      OpDecorate %200 RelaxedPrecision 
                                                      OpDecorate %202 RelaxedPrecision 
                                                      OpDecorate %203 RelaxedPrecision 
                                                      OpDecorate %206 RelaxedPrecision 
                                                      OpDecorate %207 RelaxedPrecision 
                                                      OpDecorate %209 RelaxedPrecision 
                                                      OpDecorate %210 RelaxedPrecision 
                                                      OpDecorate %212 RelaxedPrecision 
                                                      OpDecorate %213 RelaxedPrecision 
                                                      OpDecorate %214 RelaxedPrecision 
                                                      OpDecorate %215 RelaxedPrecision 
                                                      OpDecorate %218 RelaxedPrecision 
                                                      OpDecorate %219 RelaxedPrecision 
                                                      OpDecorate %222 RelaxedPrecision 
                                                      OpDecorate %224 RelaxedPrecision 
                                                      OpDecorate %225 RelaxedPrecision 
                                                      OpDecorate %228 RelaxedPrecision 
                                                      OpDecorate %229 RelaxedPrecision 
                                                      OpDecorate %232 RelaxedPrecision 
                                                      OpDecorate %233 RelaxedPrecision 
                                                      OpDecorate %234 RelaxedPrecision 
                                                      OpDecorate %237 RelaxedPrecision 
                                                      OpDecorate %239 RelaxedPrecision 
                                                      OpDecorate %240 RelaxedPrecision 
                                                      OpDecorate %243 RelaxedPrecision 
                                                      OpDecorate %245 RelaxedPrecision 
                                                      OpDecorate %246 RelaxedPrecision 
                                                      OpDecorate %250 RelaxedPrecision 
                                                      OpDecorate %251 RelaxedPrecision 
                                                      OpDecorate %252 RelaxedPrecision 
                                                      OpDecorate %255 RelaxedPrecision 
                                                      OpDecorate %256 RelaxedPrecision 
                                                      OpDecorate %257 RelaxedPrecision 
                                                      OpDecorate %259 RelaxedPrecision 
                                                      OpDecorate %260 RelaxedPrecision 
                                                      OpDecorate %261 RelaxedPrecision 
                                                      OpDecorate %262 RelaxedPrecision 
                                                      OpDecorate %264 RelaxedPrecision 
                                                      OpDecorate %265 RelaxedPrecision 
                                                      OpDecorate %266 RelaxedPrecision 
                                                      OpDecorate %267 RelaxedPrecision 
                                                      OpDecorate %268 RelaxedPrecision 
                                                      OpDecorate %270 RelaxedPrecision 
                                                      OpDecorate %271 RelaxedPrecision 
                                                      OpDecorate %272 RelaxedPrecision 
                                                      OpDecorate %273 RelaxedPrecision 
                                                      OpDecorate %274 RelaxedPrecision 
                                                      OpDecorate %275 RelaxedPrecision 
                                                      OpDecorate %276 RelaxedPrecision 
                                                      OpDecorate %277 RelaxedPrecision 
                                                      OpDecorate %278 RelaxedPrecision 
                                                      OpDecorate %281 RelaxedPrecision 
                                                      OpDecorate %284 RelaxedPrecision 
                                                      OpDecorate %284 DescriptorSet 284 
                                                      OpDecorate %284 Binding 284 
                                                      OpDecorate %285 RelaxedPrecision 
                                                      OpDecorate %288 RelaxedPrecision 
                                                      OpDecorate %288 DescriptorSet 288 
                                                      OpDecorate %288 Binding 288 
                                                      OpDecorate %289 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD0 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD0 Location 293 
                                                      OpDecorate %294 RelaxedPrecision 
                                                      OpDecorate %295 RelaxedPrecision 
                                                      OpDecorate %296 RelaxedPrecision 
                                                      OpDecorate %297 RelaxedPrecision 
                                                      OpDecorate %300 RelaxedPrecision 
                                                      OpDecorate %301 RelaxedPrecision 
                                                      OpDecorate %302 RelaxedPrecision 
                                                      OpDecorate %303 RelaxedPrecision 
                                                      OpDecorate %305 RelaxedPrecision 
                                                      OpDecorate %306 RelaxedPrecision 
                                                      OpDecorate %307 RelaxedPrecision 
                                                      OpDecorate %308 RelaxedPrecision 
                                                      OpDecorate %309 RelaxedPrecision 
                                                      OpDecorate %310 RelaxedPrecision 
                                                      OpDecorate %311 RelaxedPrecision 
                                                      OpDecorate %315 RelaxedPrecision 
                                                      OpDecorate %315 Location 315 
                                               %2 = OpTypeVoid 
                                               %3 = OpTypeFunction %2 
                                               %6 = OpTypeFloat 32 
                                               %7 = OpTypeVector %6 3 
                                               %8 = OpTypePointer Private %7 
                                Private f32_3* %9 = OpVariable Private 
                                              %10 = OpTypePointer Input %7 
                        Input f32_3* vs_TEXCOORD2 = OpVariable Input 
                                              %14 = OpTypeVector %6 4 
                                              %15 = OpTypeStruct %7 %14 %14 %14 %14 %6 %14 %14 %6 %6 %6 
                                              %16 = OpTypePointer Uniform %15 
Uniform struct {f32_3; f32_4; f32_4; f32_4; f32_4; f32; f32_4; f32_4; f32; f32; f32;}* %17 = OpVariable Uniform 
                                              %18 = OpTypeInt 32 1 
                                          i32 %19 = OpConstant 0 
                                              %20 = OpTypePointer Uniform %7 
                                              %24 = OpTypePointer Private %6 
                                 Private f32* %25 = OpVariable Private 
                                              %31 = OpTypePointer Private %14 
                               Private f32_4* %32 = OpVariable Private 
                                          i32 %37 = OpConstant 1 
                                              %38 = OpTypePointer Uniform %14 
                                 Private f32* %45 = OpVariable Private 
                        Input f32_3* vs_TEXCOORD1 = OpVariable Input 
                               Private f32_3* %66 = OpVariable Private 
                                              %75 = OpTypeInt 32 0 
                                          u32 %76 = OpConstant 0 
                                          u32 %83 = OpConstant 1 
                                              %85 = OpTypeVector %6 2 
                                          f32 %88 = OpConstant 3.674022E-40 
                                        f32_2 %89 = OpConstantComposite %88 %88 
                                          i32 %97 = OpConstant 5 
                                              %98 = OpTypePointer Uniform %6 
                                         f32 %101 = OpConstant 3.674022E-40 
                                         i32 %114 = OpConstant 10 
                                         f32 %118 = OpConstant 3.674022E-40 
                                         f32 %124 = OpConstant 3.674022E-40 
                                Private f32* %131 = OpVariable Private 
                                Private f32* %136 = OpVariable Private 
                                         f32 %142 = OpConstant 3.674022E-40 
                                         f32 %156 = OpConstant 3.674022E-40 
                                         f32 %158 = OpConstant 3.674022E-40 
                                         i32 %171 = OpConstant 2 
                                         i32 %175 = OpConstant 3 
                                         i32 %187 = OpConstant 9 
                                         i32 %192 = OpConstant 8 
                              Private f32_3* %197 = OpVariable Private 
                                         i32 %248 = OpConstant 6 
                                         i32 %253 = OpConstant 7 
                              Private f32_3* %281 = OpVariable Private 
                                             %282 = OpTypeImage %6 Dim2D 0 0 0 1 Unknown 
                                             %283 = OpTypePointer UniformConstant %282 
        UniformConstant read_only Texture2D* %284 = OpVariable UniformConstant 
                                             %286 = OpTypeSampler 
                                             %287 = OpTypePointer UniformConstant %286 
                    UniformConstant sampler* %288 = OpVariable UniformConstant 
                                             %290 = OpTypeSampledImage %282 
                                             %292 = OpTypePointer Input %85 
                        Input f32_2* vs_TEXCOORD0 = OpVariable Input 
                                         i32 %298 = OpConstant 4 
                                             %314 = OpTypePointer Output %14 
                               Output f32_4* %315 = OpVariable Output 
                                         u32 %319 = OpConstant 3 
                                             %320 = OpTypePointer Output %6 
                                          void %4 = OpFunction None %3 
                                               %5 = OpLabel 
                                        f32_3 %12 = OpLoad vs_TEXCOORD2 
                                        f32_3 %13 = OpFNegate %12 
                               Uniform f32_3* %21 = OpAccessChain %17 %19 
                                        f32_3 %22 = OpLoad %21 
                                        f32_3 %23 = OpFAdd %13 %22 
                                                      OpStore %9 %23 
                                        f32_3 %26 = OpLoad %9 
                                        f32_3 %27 = OpLoad %9 
                                          f32 %28 = OpDot %26 %27 
                                                      OpStore %25 %28 
                                          f32 %29 = OpLoad %25 
                                          f32 %30 = OpExtInst %1 32 %29 
                                                      OpStore %25 %30 
                                        f32_3 %33 = OpLoad %9 
                                          f32 %34 = OpLoad %25 
                                        f32_3 %35 = OpCompositeConstruct %34 %34 %34 
                                        f32_3 %36 = OpFMul %33 %35 
                               Uniform f32_4* %39 = OpAccessChain %17 %37 
                                        f32_4 %40 = OpLoad %39 
                                        f32_3 %41 = OpVectorShuffle %40 %40 0 1 2 
                                        f32_3 %42 = OpFAdd %36 %41 
                                        f32_4 %43 = OpLoad %32 
                                        f32_4 %44 = OpVectorShuffle %43 %42 4 5 6 3 
                                                      OpStore %32 %44 
                                        f32_4 %46 = OpLoad %32 
                                        f32_3 %47 = OpVectorShuffle %46 %46 0 1 2 
                                        f32_4 %48 = OpLoad %32 
                                        f32_3 %49 = OpVectorShuffle %48 %48 0 1 2 
                                          f32 %50 = OpDot %47 %49 
                                                      OpStore %45 %50 
                                          f32 %51 = OpLoad %45 
                                          f32 %52 = OpExtInst %1 32 %51 
                                                      OpStore %45 %52 
                                          f32 %53 = OpLoad %45 
                                        f32_3 %54 = OpCompositeConstruct %53 %53 %53 
                                        f32_4 %55 = OpLoad %32 
                                        f32_3 %56 = OpVectorShuffle %55 %55 0 1 2 
                                        f32_3 %57 = OpFMul %54 %56 
                                        f32_4 %58 = OpLoad %32 
                                        f32_4 %59 = OpVectorShuffle %58 %57 4 5 6 3 
                                                      OpStore %32 %59 
                                        f32_3 %61 = OpLoad vs_TEXCOORD1 
                                        f32_3 %62 = OpLoad vs_TEXCOORD1 
                                          f32 %63 = OpDot %61 %62 
                                                      OpStore %45 %63 
                                          f32 %64 = OpLoad %45 
                                          f32 %65 = OpExtInst %1 32 %64 
                                                      OpStore %45 %65 
                                          f32 %67 = OpLoad %45 
                                        f32_3 %68 = OpCompositeConstruct %67 %67 %67 
                                        f32_3 %69 = OpLoad vs_TEXCOORD1 
                                        f32_3 %70 = OpFMul %68 %69 
                                                      OpStore %66 %70 
                                        f32_3 %71 = OpLoad %66 
                                        f32_4 %72 = OpLoad %32 
                                        f32_3 %73 = OpVectorShuffle %72 %72 0 1 2 
                                          f32 %74 = OpDot %71 %73 
                                 Private f32* %77 = OpAccessChain %32 %76 
                                                      OpStore %77 %74 
                                        f32_3 %78 = OpLoad %66 
                               Uniform f32_4* %79 = OpAccessChain %17 %37 
                                        f32_4 %80 = OpLoad %79 
                                        f32_3 %81 = OpVectorShuffle %80 %80 0 1 2 
                                          f32 %82 = OpDot %78 %81 
                                 Private f32* %84 = OpAccessChain %32 %83 
                                                      OpStore %84 %82 
                                        f32_4 %86 = OpLoad %32 
                                        f32_2 %87 = OpVectorShuffle %86 %86 0 1 
                                        f32_2 %90 = OpExtInst %1 40 %87 %89 
                                        f32_4 %91 = OpLoad %32 
                                        f32_4 %92 = OpVectorShuffle %91 %90 4 5 2 3 
                                                      OpStore %32 %92 
                                 Private f32* %93 = OpAccessChain %32 %76 
                                          f32 %94 = OpLoad %93 
                                          f32 %95 = OpExtInst %1 30 %94 
                                 Private f32* %96 = OpAccessChain %9 %76 
                                                      OpStore %96 %95 
                                 Uniform f32* %99 = OpAccessChain %17 %97 
                                         f32 %100 = OpLoad %99 
                                         f32 %102 = OpFMul %100 %101 
                                Private f32* %103 = OpAccessChain %32 %76 
                                                      OpStore %103 %102 
                                Private f32* %104 = OpAccessChain %9 %76 
                                         f32 %105 = OpLoad %104 
                                Private f32* %106 = OpAccessChain %32 %76 
                                         f32 %107 = OpLoad %106 
                                         f32 %108 = OpFMul %105 %107 
                                Private f32* %109 = OpAccessChain %9 %76 
                                                      OpStore %109 %108 
                                Private f32* %110 = OpAccessChain %9 %76 
                                         f32 %111 = OpLoad %110 
                                         f32 %112 = OpExtInst %1 29 %111 
                                Private f32* %113 = OpAccessChain %9 %76 
                                                      OpStore %113 %112 
                                Uniform f32* %115 = OpAccessChain %17 %114 
                                         f32 %116 = OpLoad %115 
                                         f32 %117 = OpFNegate %116 
                                         f32 %119 = OpFMul %117 %118 
                                         f32 %120 = OpFAdd %119 %118 
                                Private f32* %121 = OpAccessChain %32 %76 
                                                      OpStore %121 %120 
                                Private f32* %122 = OpAccessChain %9 %76 
                                         f32 %123 = OpLoad %122 
                                         f32 %125 = OpFMul %123 %124 
                                Private f32* %126 = OpAccessChain %32 %76 
                                         f32 %127 = OpLoad %126 
                                         f32 %128 = OpFNegate %127 
                                         f32 %129 = OpFAdd %125 %128 
                                Private f32* %130 = OpAccessChain %9 %76 
                                                      OpStore %130 %129 
                                Uniform f32* %132 = OpAccessChain %17 %114 
                                         f32 %133 = OpLoad %132 
                                         f32 %134 = OpFMul %133 %118 
                                         f32 %135 = OpFAdd %134 %118 
                                                      OpStore %131 %135 
                                Private f32* %137 = OpAccessChain %32 %76 
                                         f32 %138 = OpLoad %137 
                                         f32 %139 = OpFNegate %138 
                                         f32 %140 = OpLoad %131 
                                         f32 %141 = OpFAdd %139 %140 
                                                      OpStore %136 %141 
                                         f32 %143 = OpLoad %136 
                                         f32 %144 = OpFDiv %142 %143 
                                                      OpStore %136 %144 
                                         f32 %145 = OpLoad %136 
                                Private f32* %146 = OpAccessChain %9 %76 
                                         f32 %147 = OpLoad %146 
                                         f32 %148 = OpFMul %145 %147 
                                Private f32* %149 = OpAccessChain %9 %76 
                                                      OpStore %149 %148 
                                Private f32* %150 = OpAccessChain %9 %76 
                                         f32 %151 = OpLoad %150 
                                         f32 %152 = OpExtInst %1 43 %151 %88 %142 
                                Private f32* %153 = OpAccessChain %9 %76 
                                                      OpStore %153 %152 
                                Private f32* %154 = OpAccessChain %9 %76 
                                         f32 %155 = OpLoad %154 
                                         f32 %157 = OpFMul %155 %156 
                                         f32 %159 = OpFAdd %157 %158 
                                                      OpStore %136 %159 
                                Private f32* %160 = OpAccessChain %9 %76 
                                         f32 %161 = OpLoad %160 
                                Private f32* %162 = OpAccessChain %9 %76 
                                         f32 %163 = OpLoad %162 
                                         f32 %164 = OpFMul %161 %163 
                                Private f32* %165 = OpAccessChain %9 %76 
                                                      OpStore %165 %164 
                                Private f32* %166 = OpAccessChain %9 %76 
                                         f32 %167 = OpLoad %166 
                                         f32 %168 = OpLoad %136 
                                         f32 %169 = OpFMul %167 %168 
                                Private f32* %170 = OpAccessChain %9 %76 
                                                      OpStore %170 %169 
                              Uniform f32_4* %172 = OpAccessChain %17 %171 
                                       f32_4 %173 = OpLoad %172 
                                       f32_3 %174 = OpVectorShuffle %173 %173 0 1 2 
                              Uniform f32_4* %176 = OpAccessChain %17 %175 
                                       f32_4 %177 = OpLoad %176 
                                       f32_3 %178 = OpVectorShuffle %177 %177 0 1 2 
                                       f32_3 %179 = OpFMul %174 %178 
                                       f32_4 %180 = OpLoad %32 
                                       f32_4 %181 = OpVectorShuffle %180 %179 4 1 5 6 
                                                      OpStore %32 %181 
                                       f32_3 %182 = OpLoad %9 
                                       f32_3 %183 = OpVectorShuffle %182 %182 0 0 0 
                                       f32_4 %184 = OpLoad %32 
                                       f32_3 %185 = OpVectorShuffle %184 %184 0 2 3 
                                       f32_3 %186 = OpFMul %183 %185 
                                                      OpStore %9 %186 
                                Uniform f32* %188 = OpAccessChain %17 %187 
                                         f32 %189 = OpLoad %188 
                                         f32 %190 = OpFNegate %189 
                                         f32 %191 = OpFMul %190 %118 
                                Uniform f32* %193 = OpAccessChain %17 %192 
                                         f32 %194 = OpLoad %193 
                                         f32 %195 = OpFAdd %191 %194 
                                Private f32* %196 = OpAccessChain %32 %76 
                                                      OpStore %196 %195 
                                Private f32* %198 = OpAccessChain %32 %76 
                                         f32 %199 = OpLoad %198 
                                         f32 %200 = OpFNegate %199 
                                Private f32* %201 = OpAccessChain %32 %83 
                                         f32 %202 = OpLoad %201 
                                         f32 %203 = OpFAdd %200 %202 
                                Private f32* %204 = OpAccessChain %197 %76 
                                                      OpStore %204 %203 
                                Uniform f32* %205 = OpAccessChain %17 %187 
                                         f32 %206 = OpLoad %205 
                                         f32 %207 = OpFMul %206 %118 
                                Uniform f32* %208 = OpAccessChain %17 %192 
                                         f32 %209 = OpLoad %208 
                                         f32 %210 = OpFAdd %207 %209 
                                                      OpStore %131 %210 
                                Private f32* %211 = OpAccessChain %32 %76 
                                         f32 %212 = OpLoad %211 
                                         f32 %213 = OpFNegate %212 
                                         f32 %214 = OpLoad %131 
                                         f32 %215 = OpFAdd %213 %214 
                                Private f32* %216 = OpAccessChain %32 %76 
                                                      OpStore %216 %215 
                                Private f32* %217 = OpAccessChain %32 %76 
                                         f32 %218 = OpLoad %217 
                                         f32 %219 = OpFDiv %142 %218 
                                Private f32* %220 = OpAccessChain %32 %76 
                                                      OpStore %220 %219 
                                Private f32* %221 = OpAccessChain %32 %76 
                                         f32 %222 = OpLoad %221 
                                Private f32* %223 = OpAccessChain %197 %76 
                                         f32 %224 = OpLoad %223 
                                         f32 %225 = OpFMul %222 %224 
                                Private f32* %226 = OpAccessChain %32 %76 
                                                      OpStore %226 %225 
                                Private f32* %227 = OpAccessChain %32 %76 
                                         f32 %228 = OpLoad %227 
                                         f32 %229 = OpExtInst %1 43 %228 %88 %142 
                                Private f32* %230 = OpAccessChain %32 %76 
                                                      OpStore %230 %229 
                                Private f32* %231 = OpAccessChain %32 %76 
                                         f32 %232 = OpLoad %231 
                                         f32 %233 = OpFMul %232 %156 
                                         f32 %234 = OpFAdd %233 %158 
                                Private f32* %235 = OpAccessChain %197 %76 
                                                      OpStore %235 %234 
                                Private f32* %236 = OpAccessChain %32 %76 
                                         f32 %237 = OpLoad %236 
                                Private f32* %238 = OpAccessChain %32 %76 
                                         f32 %239 = OpLoad %238 
                                         f32 %240 = OpFMul %237 %239 
                                Private f32* %241 = OpAccessChain %32 %76 
                                                      OpStore %241 %240 
                                Private f32* %242 = OpAccessChain %32 %76 
                                         f32 %243 = OpLoad %242 
                                Private f32* %244 = OpAccessChain %197 %76 
                                         f32 %245 = OpLoad %244 
                                         f32 %246 = OpFMul %243 %245 
                                Private f32* %247 = OpAccessChain %32 %76 
                                                      OpStore %247 %246 
                              Uniform f32_4* %249 = OpAccessChain %17 %248 
                                       f32_4 %250 = OpLoad %249 
                                       f32_3 %251 = OpVectorShuffle %250 %250 0 1 2 
                                       f32_3 %252 = OpFNegate %251 
                              Uniform f32_4* %254 = OpAccessChain %17 %253 
                                       f32_4 %255 = OpLoad %254 
                                       f32_3 %256 = OpVectorShuffle %255 %255 0 1 2 
                                       f32_3 %257 = OpFAdd %252 %256 
                                                      OpStore %197 %257 
                              Uniform f32_4* %258 = OpAccessChain %17 %253 
                                       f32_4 %259 = OpLoad %258 
                                       f32_3 %260 = OpVectorShuffle %259 %259 3 3 3 
                                       f32_3 %261 = OpLoad %197 
                                       f32_3 %262 = OpFMul %260 %261 
                              Uniform f32_4* %263 = OpAccessChain %17 %248 
                                       f32_4 %264 = OpLoad %263 
                                       f32_3 %265 = OpVectorShuffle %264 %264 0 1 2 
                                       f32_3 %266 = OpFAdd %262 %265 
                                                      OpStore %197 %266 
                                       f32_3 %267 = OpLoad %197 
                                       f32_3 %268 = OpFNegate %267 
                              Uniform f32_4* %269 = OpAccessChain %17 %248 
                                       f32_4 %270 = OpLoad %269 
                                       f32_3 %271 = OpVectorShuffle %270 %270 0 1 2 
                                       f32_3 %272 = OpFAdd %268 %271 
                                                      OpStore %66 %272 
                                       f32_4 %273 = OpLoad %32 
                                       f32_3 %274 = OpVectorShuffle %273 %273 0 0 0 
                                       f32_3 %275 = OpLoad %66 
                                       f32_3 %276 = OpFMul %274 %275 
                                       f32_3 %277 = OpLoad %197 
                                       f32_3 %278 = OpFAdd %276 %277 
                                       f32_4 %279 = OpLoad %32 
                                       f32_4 %280 = OpVectorShuffle %279 %278 4 5 6 3 
                                                      OpStore %32 %280 
                         read_only Texture2D %285 = OpLoad %284 
                                     sampler %289 = OpLoad %288 
                  read_only Texture2DSampled %291 = OpSampledImage %285 %289 
                                       f32_2 %294 = OpLoad vs_TEXCOORD0 
                                       f32_4 %295 = OpImageSampleImplicitLod %291 %294 
                                       f32_3 %296 = OpVectorShuffle %295 %295 0 1 2 
                                                      OpStore %281 %296 
                                       f32_3 %297 = OpLoad %281 
                              Uniform f32_4* %299 = OpAccessChain %17 %298 
                                       f32_4 %300 = OpLoad %299 
                                       f32_3 %301 = OpVectorShuffle %300 %300 0 1 2 
                                       f32_3 %302 = OpFMul %297 %301 
                                                      OpStore %66 %302 
                                       f32_3 %303 = OpLoad %66 
                              Uniform f32_4* %304 = OpAccessChain %17 %171 
                                       f32_4 %305 = OpLoad %304 
                                       f32_3 %306 = OpVectorShuffle %305 %305 0 1 2 
                                       f32_3 %307 = OpFMul %303 %306 
                                                      OpStore %66 %307 
                                       f32_3 %308 = OpLoad %66 
                                       f32_4 %309 = OpLoad %32 
                                       f32_3 %310 = OpVectorShuffle %309 %309 0 1 2 
                                       f32_3 %311 = OpFMul %308 %310 
                                       f32_3 %312 = OpLoad %9 
                                       f32_3 %313 = OpFAdd %311 %312 
                                                      OpStore %9 %313 
                                       f32_3 %316 = OpLoad %9 
                                       f32_4 %317 = OpLoad %315 
                                       f32_4 %318 = OpVectorShuffle %317 %316 4 5 6 3 
                                                      OpStore %315 %318 
                                 Output f32* %321 = OpAccessChain %315 %319 
                                                      OpStore %321 %142 
                                                      OpReturn
                                                      OpFunctionEnd
"
}
SubProgram "vulkan hw_tier02 " {
Keywords { "DIRECTIONAL" }
"; SPIR-V
; Version: 1.0
; Generator: Khronos Glslang Reference Front End; 6
; Bound: 160
; Schema: 0
                                                      OpCapability Shader 
                                               %1 = OpExtInstImport "GLSL.std.450" 
                                                      OpMemoryModel Logical GLSL450 
                                                      OpEntryPoint Vertex %4 "main" %11 %52 %85 %95 %110 %114 %144 %150 %153 
                                                      OpName vs_TEXCOORD2 "vs_TEXCOORD2" 
                                                      OpName vs_TEXCOORD0 "vs_TEXCOORD0" 
                                                      OpName vs_TEXCOORD1 "vs_TEXCOORD1" 
                                                      OpName vs_TEXCOORD5 "vs_TEXCOORD5" 
                                                      OpName vs_TEXCOORD6 "vs_TEXCOORD6" 
                                                      OpDecorate %11 Location 11 
                                                      OpDecorate %16 ArrayStride 16 
                                                      OpDecorate %17 ArrayStride 17 
                                                      OpDecorate %18 ArrayStride 18 
                                                      OpMemberDecorate %19 0 Offset 19 
                                                      OpMemberDecorate %19 1 Offset 19 
                                                      OpMemberDecorate %19 2 Offset 19 
                                                      OpMemberDecorate %19 3 Offset 19 
                                                      OpDecorate %19 Block 
                                                      OpDecorate %21 DescriptorSet 21 
                                                      OpDecorate %21 Binding 21 
                                                      OpDecorate vs_TEXCOORD2 Location 52 
                                                      OpMemberDecorate %83 0 BuiltIn 83 
                                                      OpMemberDecorate %83 1 BuiltIn 83 
                                                      OpMemberDecorate %83 2 BuiltIn 83 
                                                      OpDecorate %83 Block 
                                                      OpDecorate %95 Location 95 
                                                      OpDecorate vs_TEXCOORD0 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD0 Location 110 
                                                      OpDecorate %114 Location 114 
                                                      OpDecorate vs_TEXCOORD1 Location 144 
                                                      OpDecorate vs_TEXCOORD5 Location 150 
                                                      OpDecorate vs_TEXCOORD6 Location 153 
                                               %2 = OpTypeVoid 
                                               %3 = OpTypeFunction %2 
                                               %6 = OpTypeFloat 32 
                                               %7 = OpTypeVector %6 4 
                                               %8 = OpTypePointer Private %7 
                                Private f32_4* %9 = OpVariable Private 
                                              %10 = OpTypePointer Input %7 
                                 Input f32_4* %11 = OpVariable Input 
                                              %14 = OpTypeInt 32 0 
                                          u32 %15 = OpConstant 4 
                                              %16 = OpTypeArray %7 %15 
                                              %17 = OpTypeArray %7 %15 
                                              %18 = OpTypeArray %7 %15 
                                              %19 = OpTypeStruct %16 %17 %18 %7 
                                              %20 = OpTypePointer Uniform %19 
Uniform struct {f32_4[4]; f32_4[4]; f32_4[4]; f32_4;}* %21 = OpVariable Uniform 
                                              %22 = OpTypeInt 32 1 
                                          i32 %23 = OpConstant 0 
                                          i32 %24 = OpConstant 1 
                                              %25 = OpTypePointer Uniform %7 
                                          i32 %36 = OpConstant 2 
                               Private f32_4* %44 = OpVariable Private 
                                          i32 %46 = OpConstant 3 
                                              %50 = OpTypeVector %6 3 
                                              %51 = OpTypePointer Output %50 
                       Output f32_3* vs_TEXCOORD2 = OpVariable Output 
                                          u32 %81 = OpConstant 1 
                                              %82 = OpTypeArray %6 %81 
                                              %83 = OpTypeStruct %7 %6 %82 
                                              %84 = OpTypePointer Output %83 
         Output struct {f32_4; f32; f32[1];}* %85 = OpVariable Output 
                                              %93 = OpTypePointer Output %7 
                                 Input f32_4* %95 = OpVariable Input 
                                              %96 = OpTypeVector %6 2 
                                             %109 = OpTypePointer Output %96 
                       Output f32_2* vs_TEXCOORD0 = OpVariable Output 
                                             %113 = OpTypePointer Input %50 
                                Input f32_3* %114 = OpVariable Input 
                                         u32 %120 = OpConstant 0 
                                             %121 = OpTypePointer Private %6 
                                         u32 %134 = OpConstant 2 
                                Private f32* %136 = OpVariable Private 
                       Output f32_3* vs_TEXCOORD1 = OpVariable Output 
                       Output f32_4* vs_TEXCOORD5 = OpVariable Output 
                                         f32 %151 = OpConstant 3.674022E-40 
                                       f32_4 %152 = OpConstantComposite %151 %151 %151 %151 
                       Output f32_4* vs_TEXCOORD6 = OpVariable Output 
                                             %154 = OpTypePointer Output %6 
                                          void %4 = OpFunction None %3 
                                               %5 = OpLabel 
                                        f32_4 %12 = OpLoad %11 
                                        f32_4 %13 = OpVectorShuffle %12 %12 1 1 1 1 
                               Uniform f32_4* %26 = OpAccessChain %21 %23 %24 
                                        f32_4 %27 = OpLoad %26 
                                        f32_4 %28 = OpFMul %13 %27 
                                                      OpStore %9 %28 
                               Uniform f32_4* %29 = OpAccessChain %21 %23 %23 
                                        f32_4 %30 = OpLoad %29 
                                        f32_4 %31 = OpLoad %11 
                                        f32_4 %32 = OpVectorShuffle %31 %31 0 0 0 0 
                                        f32_4 %33 = OpFMul %30 %32 
                                        f32_4 %34 = OpLoad %9 
                                        f32_4 %35 = OpFAdd %33 %34 
                                                      OpStore %9 %35 
                               Uniform f32_4* %37 = OpAccessChain %21 %23 %36 
                                        f32_4 %38 = OpLoad %37 
                                        f32_4 %39 = OpLoad %11 
                                        f32_4 %40 = OpVectorShuffle %39 %39 2 2 2 2 
                                        f32_4 %41 = OpFMul %38 %40 
                                        f32_4 %42 = OpLoad %9 
                                        f32_4 %43 = OpFAdd %41 %42 
                                                      OpStore %9 %43 
                                        f32_4 %45 = OpLoad %9 
                               Uniform f32_4* %47 = OpAccessChain %21 %23 %46 
                                        f32_4 %48 = OpLoad %47 
                                        f32_4 %49 = OpFAdd %45 %48 
                                                      OpStore %44 %49 
                               Uniform f32_4* %53 = OpAccessChain %21 %23 %46 
                                        f32_4 %54 = OpLoad %53 
                                        f32_3 %55 = OpVectorShuffle %54 %54 0 1 2 
                                        f32_4 %56 = OpLoad %11 
                                        f32_3 %57 = OpVectorShuffle %56 %56 3 3 3 
                                        f32_3 %58 = OpFMul %55 %57 
                                        f32_4 %59 = OpLoad %9 
                                        f32_3 %60 = OpVectorShuffle %59 %59 0 1 2 
                                        f32_3 %61 = OpFAdd %58 %60 
                                                      OpStore vs_TEXCOORD2 %61 
                                        f32_4 %62 = OpLoad %44 
                                        f32_4 %63 = OpVectorShuffle %62 %62 1 1 1 1 
                               Uniform f32_4* %64 = OpAccessChain %21 %36 %24 
                                        f32_4 %65 = OpLoad %64 
                                        f32_4 %66 = OpFMul %63 %65 
                                                      OpStore %9 %66 
                               Uniform f32_4* %67 = OpAccessChain %21 %36 %23 
                                        f32_4 %68 = OpLoad %67 
                                        f32_4 %69 = OpLoad %44 
                                        f32_4 %70 = OpVectorShuffle %69 %69 0 0 0 0 
                                        f32_4 %71 = OpFMul %68 %70 
                                        f32_4 %72 = OpLoad %9 
                                        f32_4 %73 = OpFAdd %71 %72 
                                                      OpStore %9 %73 
                               Uniform f32_4* %74 = OpAccessChain %21 %36 %36 
                                        f32_4 %75 = OpLoad %74 
                                        f32_4 %76 = OpLoad %44 
                                        f32_4 %77 = OpVectorShuffle %76 %76 2 2 2 2 
                                        f32_4 %78 = OpFMul %75 %77 
                                        f32_4 %79 = OpLoad %9 
                                        f32_4 %80 = OpFAdd %78 %79 
                                                      OpStore %9 %80 
                               Uniform f32_4* %86 = OpAccessChain %21 %36 %46 
                                        f32_4 %87 = OpLoad %86 
                                        f32_4 %88 = OpLoad %44 
                                        f32_4 %89 = OpVectorShuffle %88 %88 3 3 3 3 
                                        f32_4 %90 = OpFMul %87 %89 
                                        f32_4 %91 = OpLoad %9 
                                        f32_4 %92 = OpFAdd %90 %91 
                                Output f32_4* %94 = OpAccessChain %85 %23 
                                                      OpStore %94 %92 
                                        f32_4 %97 = OpLoad %95 
                                        f32_2 %98 = OpVectorShuffle %97 %97 0 1 
                               Uniform f32_4* %99 = OpAccessChain %21 %46 
                                       f32_4 %100 = OpLoad %99 
                                       f32_2 %101 = OpVectorShuffle %100 %100 0 1 
                                       f32_2 %102 = OpFMul %98 %101 
                              Uniform f32_4* %103 = OpAccessChain %21 %46 
                                       f32_4 %104 = OpLoad %103 
                                       f32_2 %105 = OpVectorShuffle %104 %104 2 3 
                                       f32_2 %106 = OpFAdd %102 %105 
                                       f32_4 %107 = OpLoad %9 
                                       f32_4 %108 = OpVectorShuffle %107 %106 4 5 2 3 
                                                      OpStore %9 %108 
                                       f32_4 %111 = OpLoad %9 
                                       f32_2 %112 = OpVectorShuffle %111 %111 0 1 
                                                      OpStore vs_TEXCOORD0 %112 
                                       f32_3 %115 = OpLoad %114 
                              Uniform f32_4* %116 = OpAccessChain %21 %24 %23 
                                       f32_4 %117 = OpLoad %116 
                                       f32_3 %118 = OpVectorShuffle %117 %117 0 1 2 
                                         f32 %119 = OpDot %115 %118 
                                Private f32* %122 = OpAccessChain %9 %120 
                                                      OpStore %122 %119 
                                       f32_3 %123 = OpLoad %114 
                              Uniform f32_4* %124 = OpAccessChain %21 %24 %24 
                                       f32_4 %125 = OpLoad %124 
                                       f32_3 %126 = OpVectorShuffle %125 %125 0 1 2 
                                         f32 %127 = OpDot %123 %126 
                                Private f32* %128 = OpAccessChain %9 %81 
                                                      OpStore %128 %127 
                                       f32_3 %129 = OpLoad %114 
                              Uniform f32_4* %130 = OpAccessChain %21 %24 %36 
                                       f32_4 %131 = OpLoad %130 
                                       f32_3 %132 = OpVectorShuffle %131 %131 0 1 2 
                                         f32 %133 = OpDot %129 %132 
                                Private f32* %135 = OpAccessChain %9 %134 
                                                      OpStore %135 %133 
                                       f32_4 %137 = OpLoad %9 
                                       f32_3 %138 = OpVectorShuffle %137 %137 0 1 2 
                                       f32_4 %139 = OpLoad %9 
                                       f32_3 %140 = OpVectorShuffle %139 %139 0 1 2 
                                         f32 %141 = OpDot %138 %140 
                                                      OpStore %136 %141 
                                         f32 %142 = OpLoad %136 
                                         f32 %143 = OpExtInst %1 32 %142 
                                                      OpStore %136 %143 
                                         f32 %145 = OpLoad %136 
                                       f32_3 %146 = OpCompositeConstruct %145 %145 %145 
                                       f32_4 %147 = OpLoad %9 
                                       f32_3 %148 = OpVectorShuffle %147 %147 0 1 2 
                                       f32_3 %149 = OpFMul %146 %148 
                                                      OpStore vs_TEXCOORD1 %149 
                                                      OpStore vs_TEXCOORD5 %152 
                                                      OpStore vs_TEXCOORD6 %152 
                                 Output f32* %155 = OpAccessChain %85 %23 %81 
                                         f32 %156 = OpLoad %155 
                                         f32 %157 = OpFNegate %156 
                                 Output f32* %158 = OpAccessChain %85 %23 %81 
                                                      OpStore %158 %157 
                                                      OpReturn
                                                      OpFunctionEnd
; SPIR-V
; Version: 1.0
; Generator: Khronos Glslang Reference Front End; 6
; Bound: 323
; Schema: 0
                                                      OpCapability Shader 
                                               %1 = OpExtInstImport "GLSL.std.450" 
                                                      OpMemoryModel Logical GLSL450 
                                                      OpEntryPoint Fragment %4 "main" %11 %60 %293 %315 
                                                      OpExecutionMode %4 OriginUpperLeft 
                                                      OpName vs_TEXCOORD2 "vs_TEXCOORD2" 
                                                      OpName vs_TEXCOORD1 "vs_TEXCOORD1" 
                                                      OpName vs_TEXCOORD0 "vs_TEXCOORD0" 
                                                      OpDecorate vs_TEXCOORD2 Location 11 
                                                      OpMemberDecorate %15 0 Offset 15 
                                                      OpMemberDecorate %15 1 RelaxedPrecision 
                                                      OpMemberDecorate %15 1 Offset 15 
                                                      OpMemberDecorate %15 2 RelaxedPrecision 
                                                      OpMemberDecorate %15 2 Offset 15 
                                                      OpMemberDecorate %15 3 RelaxedPrecision 
                                                      OpMemberDecorate %15 3 Offset 15 
                                                      OpMemberDecorate %15 4 RelaxedPrecision 
                                                      OpMemberDecorate %15 4 Offset 15 
                                                      OpMemberDecorate %15 5 RelaxedPrecision 
                                                      OpMemberDecorate %15 5 Offset 15 
                                                      OpMemberDecorate %15 6 RelaxedPrecision 
                                                      OpMemberDecorate %15 6 Offset 15 
                                                      OpMemberDecorate %15 7 RelaxedPrecision 
                                                      OpMemberDecorate %15 7 Offset 15 
                                                      OpMemberDecorate %15 8 RelaxedPrecision 
                                                      OpMemberDecorate %15 8 Offset 15 
                                                      OpMemberDecorate %15 9 RelaxedPrecision 
                                                      OpMemberDecorate %15 9 Offset 15 
                                                      OpMemberDecorate %15 10 RelaxedPrecision 
                                                      OpMemberDecorate %15 10 Offset 15 
                                                      OpDecorate %15 Block 
                                                      OpDecorate %17 DescriptorSet 17 
                                                      OpDecorate %17 Binding 17 
                                                      OpDecorate %32 RelaxedPrecision 
                                                      OpDecorate %40 RelaxedPrecision 
                                                      OpDecorate %41 RelaxedPrecision 
                                                      OpDecorate %45 RelaxedPrecision 
                                                      OpDecorate %46 RelaxedPrecision 
                                                      OpDecorate %47 RelaxedPrecision 
                                                      OpDecorate %48 RelaxedPrecision 
                                                      OpDecorate %49 RelaxedPrecision 
                                                      OpDecorate %50 RelaxedPrecision 
                                                      OpDecorate %51 RelaxedPrecision 
                                                      OpDecorate %52 RelaxedPrecision 
                                                      OpDecorate %53 RelaxedPrecision 
                                                      OpDecorate %54 RelaxedPrecision 
                                                      OpDecorate %55 RelaxedPrecision 
                                                      OpDecorate %56 RelaxedPrecision 
                                                      OpDecorate %57 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD1 Location 60 
                                                      OpDecorate %64 RelaxedPrecision 
                                                      OpDecorate %65 RelaxedPrecision 
                                                      OpDecorate %66 RelaxedPrecision 
                                                      OpDecorate %67 RelaxedPrecision 
                                                      OpDecorate %71 RelaxedPrecision 
                                                      OpDecorate %72 RelaxedPrecision 
                                                      OpDecorate %73 RelaxedPrecision 
                                                      OpDecorate %74 RelaxedPrecision 
                                                      OpDecorate %78 RelaxedPrecision 
                                                      OpDecorate %80 RelaxedPrecision 
                                                      OpDecorate %81 RelaxedPrecision 
                                                      OpDecorate %82 RelaxedPrecision 
                                                      OpDecorate %86 RelaxedPrecision 
                                                      OpDecorate %87 RelaxedPrecision 
                                                      OpDecorate %90 RelaxedPrecision 
                                                      OpDecorate %94 RelaxedPrecision 
                                                      OpDecorate %95 RelaxedPrecision 
                                                      OpDecorate %100 RelaxedPrecision 
                                                      OpDecorate %102 RelaxedPrecision 
                                                      OpDecorate %107 RelaxedPrecision 
                                                      OpDecorate %116 RelaxedPrecision 
                                                      OpDecorate %117 RelaxedPrecision 
                                                      OpDecorate %119 RelaxedPrecision 
                                                      OpDecorate %120 RelaxedPrecision 
                                                      OpDecorate %127 RelaxedPrecision 
                                                      OpDecorate %128 RelaxedPrecision 
                                                      OpDecorate %131 RelaxedPrecision 
                                                      OpDecorate %133 RelaxedPrecision 
                                                      OpDecorate %134 RelaxedPrecision 
                                                      OpDecorate %135 RelaxedPrecision 
                                                      OpDecorate %138 RelaxedPrecision 
                                                      OpDecorate %139 RelaxedPrecision 
                                                      OpDecorate %140 RelaxedPrecision 
                                                      OpDecorate %141 RelaxedPrecision 
                                                      OpDecorate %173 RelaxedPrecision 
                                                      OpDecorate %174 RelaxedPrecision 
                                                      OpDecorate %177 RelaxedPrecision 
                                                      OpDecorate %178 RelaxedPrecision 
                                                      OpDecorate %179 RelaxedPrecision 
                                                      OpDecorate %184 RelaxedPrecision 
                                                      OpDecorate %185 RelaxedPrecision 
                                                      OpDecorate %189 RelaxedPrecision 
                                                      OpDecorate %190 RelaxedPrecision 
                                                      OpDecorate %191 RelaxedPrecision 
                                                      OpDecorate %194 RelaxedPrecision 
                                                      OpDecorate %195 RelaxedPrecision 
                                                      OpDecorate %197 RelaxedPrecision 
                                                      OpDecorate %199 RelaxedPrecision 
                                                      OpDecorate %200 RelaxedPrecision 
                                                      OpDecorate %202 RelaxedPrecision 
                                                      OpDecorate %203 RelaxedPrecision 
                                                      OpDecorate %206 RelaxedPrecision 
                                                      OpDecorate %207 RelaxedPrecision 
                                                      OpDecorate %209 RelaxedPrecision 
                                                      OpDecorate %210 RelaxedPrecision 
                                                      OpDecorate %212 RelaxedPrecision 
                                                      OpDecorate %213 RelaxedPrecision 
                                                      OpDecorate %214 RelaxedPrecision 
                                                      OpDecorate %215 RelaxedPrecision 
                                                      OpDecorate %218 RelaxedPrecision 
                                                      OpDecorate %219 RelaxedPrecision 
                                                      OpDecorate %222 RelaxedPrecision 
                                                      OpDecorate %224 RelaxedPrecision 
                                                      OpDecorate %225 RelaxedPrecision 
                                                      OpDecorate %228 RelaxedPrecision 
                                                      OpDecorate %229 RelaxedPrecision 
                                                      OpDecorate %232 RelaxedPrecision 
                                                      OpDecorate %233 RelaxedPrecision 
                                                      OpDecorate %234 RelaxedPrecision 
                                                      OpDecorate %237 RelaxedPrecision 
                                                      OpDecorate %239 RelaxedPrecision 
                                                      OpDecorate %240 RelaxedPrecision 
                                                      OpDecorate %243 RelaxedPrecision 
                                                      OpDecorate %245 RelaxedPrecision 
                                                      OpDecorate %246 RelaxedPrecision 
                                                      OpDecorate %250 RelaxedPrecision 
                                                      OpDecorate %251 RelaxedPrecision 
                                                      OpDecorate %252 RelaxedPrecision 
                                                      OpDecorate %255 RelaxedPrecision 
                                                      OpDecorate %256 RelaxedPrecision 
                                                      OpDecorate %257 RelaxedPrecision 
                                                      OpDecorate %259 RelaxedPrecision 
                                                      OpDecorate %260 RelaxedPrecision 
                                                      OpDecorate %261 RelaxedPrecision 
                                                      OpDecorate %262 RelaxedPrecision 
                                                      OpDecorate %264 RelaxedPrecision 
                                                      OpDecorate %265 RelaxedPrecision 
                                                      OpDecorate %266 RelaxedPrecision 
                                                      OpDecorate %267 RelaxedPrecision 
                                                      OpDecorate %268 RelaxedPrecision 
                                                      OpDecorate %270 RelaxedPrecision 
                                                      OpDecorate %271 RelaxedPrecision 
                                                      OpDecorate %272 RelaxedPrecision 
                                                      OpDecorate %273 RelaxedPrecision 
                                                      OpDecorate %274 RelaxedPrecision 
                                                      OpDecorate %275 RelaxedPrecision 
                                                      OpDecorate %276 RelaxedPrecision 
                                                      OpDecorate %277 RelaxedPrecision 
                                                      OpDecorate %278 RelaxedPrecision 
                                                      OpDecorate %281 RelaxedPrecision 
                                                      OpDecorate %284 RelaxedPrecision 
                                                      OpDecorate %284 DescriptorSet 284 
                                                      OpDecorate %284 Binding 284 
                                                      OpDecorate %285 RelaxedPrecision 
                                                      OpDecorate %288 RelaxedPrecision 
                                                      OpDecorate %288 DescriptorSet 288 
                                                      OpDecorate %288 Binding 288 
                                                      OpDecorate %289 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD0 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD0 Location 293 
                                                      OpDecorate %294 RelaxedPrecision 
                                                      OpDecorate %295 RelaxedPrecision 
                                                      OpDecorate %296 RelaxedPrecision 
                                                      OpDecorate %297 RelaxedPrecision 
                                                      OpDecorate %300 RelaxedPrecision 
                                                      OpDecorate %301 RelaxedPrecision 
                                                      OpDecorate %302 RelaxedPrecision 
                                                      OpDecorate %303 RelaxedPrecision 
                                                      OpDecorate %305 RelaxedPrecision 
                                                      OpDecorate %306 RelaxedPrecision 
                                                      OpDecorate %307 RelaxedPrecision 
                                                      OpDecorate %308 RelaxedPrecision 
                                                      OpDecorate %309 RelaxedPrecision 
                                                      OpDecorate %310 RelaxedPrecision 
                                                      OpDecorate %311 RelaxedPrecision 
                                                      OpDecorate %315 RelaxedPrecision 
                                                      OpDecorate %315 Location 315 
                                               %2 = OpTypeVoid 
                                               %3 = OpTypeFunction %2 
                                               %6 = OpTypeFloat 32 
                                               %7 = OpTypeVector %6 3 
                                               %8 = OpTypePointer Private %7 
                                Private f32_3* %9 = OpVariable Private 
                                              %10 = OpTypePointer Input %7 
                        Input f32_3* vs_TEXCOORD2 = OpVariable Input 
                                              %14 = OpTypeVector %6 4 
                                              %15 = OpTypeStruct %7 %14 %14 %14 %14 %6 %14 %14 %6 %6 %6 
                                              %16 = OpTypePointer Uniform %15 
Uniform struct {f32_3; f32_4; f32_4; f32_4; f32_4; f32; f32_4; f32_4; f32; f32; f32;}* %17 = OpVariable Uniform 
                                              %18 = OpTypeInt 32 1 
                                          i32 %19 = OpConstant 0 
                                              %20 = OpTypePointer Uniform %7 
                                              %24 = OpTypePointer Private %6 
                                 Private f32* %25 = OpVariable Private 
                                              %31 = OpTypePointer Private %14 
                               Private f32_4* %32 = OpVariable Private 
                                          i32 %37 = OpConstant 1 
                                              %38 = OpTypePointer Uniform %14 
                                 Private f32* %45 = OpVariable Private 
                        Input f32_3* vs_TEXCOORD1 = OpVariable Input 
                               Private f32_3* %66 = OpVariable Private 
                                              %75 = OpTypeInt 32 0 
                                          u32 %76 = OpConstant 0 
                                          u32 %83 = OpConstant 1 
                                              %85 = OpTypeVector %6 2 
                                          f32 %88 = OpConstant 3.674022E-40 
                                        f32_2 %89 = OpConstantComposite %88 %88 
                                          i32 %97 = OpConstant 5 
                                              %98 = OpTypePointer Uniform %6 
                                         f32 %101 = OpConstant 3.674022E-40 
                                         i32 %114 = OpConstant 10 
                                         f32 %118 = OpConstant 3.674022E-40 
                                         f32 %124 = OpConstant 3.674022E-40 
                                Private f32* %131 = OpVariable Private 
                                Private f32* %136 = OpVariable Private 
                                         f32 %142 = OpConstant 3.674022E-40 
                                         f32 %156 = OpConstant 3.674022E-40 
                                         f32 %158 = OpConstant 3.674022E-40 
                                         i32 %171 = OpConstant 2 
                                         i32 %175 = OpConstant 3 
                                         i32 %187 = OpConstant 9 
                                         i32 %192 = OpConstant 8 
                              Private f32_3* %197 = OpVariable Private 
                                         i32 %248 = OpConstant 6 
                                         i32 %253 = OpConstant 7 
                              Private f32_3* %281 = OpVariable Private 
                                             %282 = OpTypeImage %6 Dim2D 0 0 0 1 Unknown 
                                             %283 = OpTypePointer UniformConstant %282 
        UniformConstant read_only Texture2D* %284 = OpVariable UniformConstant 
                                             %286 = OpTypeSampler 
                                             %287 = OpTypePointer UniformConstant %286 
                    UniformConstant sampler* %288 = OpVariable UniformConstant 
                                             %290 = OpTypeSampledImage %282 
                                             %292 = OpTypePointer Input %85 
                        Input f32_2* vs_TEXCOORD0 = OpVariable Input 
                                         i32 %298 = OpConstant 4 
                                             %314 = OpTypePointer Output %14 
                               Output f32_4* %315 = OpVariable Output 
                                         u32 %319 = OpConstant 3 
                                             %320 = OpTypePointer Output %6 
                                          void %4 = OpFunction None %3 
                                               %5 = OpLabel 
                                        f32_3 %12 = OpLoad vs_TEXCOORD2 
                                        f32_3 %13 = OpFNegate %12 
                               Uniform f32_3* %21 = OpAccessChain %17 %19 
                                        f32_3 %22 = OpLoad %21 
                                        f32_3 %23 = OpFAdd %13 %22 
                                                      OpStore %9 %23 
                                        f32_3 %26 = OpLoad %9 
                                        f32_3 %27 = OpLoad %9 
                                          f32 %28 = OpDot %26 %27 
                                                      OpStore %25 %28 
                                          f32 %29 = OpLoad %25 
                                          f32 %30 = OpExtInst %1 32 %29 
                                                      OpStore %25 %30 
                                        f32_3 %33 = OpLoad %9 
                                          f32 %34 = OpLoad %25 
                                        f32_3 %35 = OpCompositeConstruct %34 %34 %34 
                                        f32_3 %36 = OpFMul %33 %35 
                               Uniform f32_4* %39 = OpAccessChain %17 %37 
                                        f32_4 %40 = OpLoad %39 
                                        f32_3 %41 = OpVectorShuffle %40 %40 0 1 2 
                                        f32_3 %42 = OpFAdd %36 %41 
                                        f32_4 %43 = OpLoad %32 
                                        f32_4 %44 = OpVectorShuffle %43 %42 4 5 6 3 
                                                      OpStore %32 %44 
                                        f32_4 %46 = OpLoad %32 
                                        f32_3 %47 = OpVectorShuffle %46 %46 0 1 2 
                                        f32_4 %48 = OpLoad %32 
                                        f32_3 %49 = OpVectorShuffle %48 %48 0 1 2 
                                          f32 %50 = OpDot %47 %49 
                                                      OpStore %45 %50 
                                          f32 %51 = OpLoad %45 
                                          f32 %52 = OpExtInst %1 32 %51 
                                                      OpStore %45 %52 
                                          f32 %53 = OpLoad %45 
                                        f32_3 %54 = OpCompositeConstruct %53 %53 %53 
                                        f32_4 %55 = OpLoad %32 
                                        f32_3 %56 = OpVectorShuffle %55 %55 0 1 2 
                                        f32_3 %57 = OpFMul %54 %56 
                                        f32_4 %58 = OpLoad %32 
                                        f32_4 %59 = OpVectorShuffle %58 %57 4 5 6 3 
                                                      OpStore %32 %59 
                                        f32_3 %61 = OpLoad vs_TEXCOORD1 
                                        f32_3 %62 = OpLoad vs_TEXCOORD1 
                                          f32 %63 = OpDot %61 %62 
                                                      OpStore %45 %63 
                                          f32 %64 = OpLoad %45 
                                          f32 %65 = OpExtInst %1 32 %64 
                                                      OpStore %45 %65 
                                          f32 %67 = OpLoad %45 
                                        f32_3 %68 = OpCompositeConstruct %67 %67 %67 
                                        f32_3 %69 = OpLoad vs_TEXCOORD1 
                                        f32_3 %70 = OpFMul %68 %69 
                                                      OpStore %66 %70 
                                        f32_3 %71 = OpLoad %66 
                                        f32_4 %72 = OpLoad %32 
                                        f32_3 %73 = OpVectorShuffle %72 %72 0 1 2 
                                          f32 %74 = OpDot %71 %73 
                                 Private f32* %77 = OpAccessChain %32 %76 
                                                      OpStore %77 %74 
                                        f32_3 %78 = OpLoad %66 
                               Uniform f32_4* %79 = OpAccessChain %17 %37 
                                        f32_4 %80 = OpLoad %79 
                                        f32_3 %81 = OpVectorShuffle %80 %80 0 1 2 
                                          f32 %82 = OpDot %78 %81 
                                 Private f32* %84 = OpAccessChain %32 %83 
                                                      OpStore %84 %82 
                                        f32_4 %86 = OpLoad %32 
                                        f32_2 %87 = OpVectorShuffle %86 %86 0 1 
                                        f32_2 %90 = OpExtInst %1 40 %87 %89 
                                        f32_4 %91 = OpLoad %32 
                                        f32_4 %92 = OpVectorShuffle %91 %90 4 5 2 3 
                                                      OpStore %32 %92 
                                 Private f32* %93 = OpAccessChain %32 %76 
                                          f32 %94 = OpLoad %93 
                                          f32 %95 = OpExtInst %1 30 %94 
                                 Private f32* %96 = OpAccessChain %9 %76 
                                                      OpStore %96 %95 
                                 Uniform f32* %99 = OpAccessChain %17 %97 
                                         f32 %100 = OpLoad %99 
                                         f32 %102 = OpFMul %100 %101 
                                Private f32* %103 = OpAccessChain %32 %76 
                                                      OpStore %103 %102 
                                Private f32* %104 = OpAccessChain %9 %76 
                                         f32 %105 = OpLoad %104 
                                Private f32* %106 = OpAccessChain %32 %76 
                                         f32 %107 = OpLoad %106 
                                         f32 %108 = OpFMul %105 %107 
                                Private f32* %109 = OpAccessChain %9 %76 
                                                      OpStore %109 %108 
                                Private f32* %110 = OpAccessChain %9 %76 
                                         f32 %111 = OpLoad %110 
                                         f32 %112 = OpExtInst %1 29 %111 
                                Private f32* %113 = OpAccessChain %9 %76 
                                                      OpStore %113 %112 
                                Uniform f32* %115 = OpAccessChain %17 %114 
                                         f32 %116 = OpLoad %115 
                                         f32 %117 = OpFNegate %116 
                                         f32 %119 = OpFMul %117 %118 
                                         f32 %120 = OpFAdd %119 %118 
                                Private f32* %121 = OpAccessChain %32 %76 
                                                      OpStore %121 %120 
                                Private f32* %122 = OpAccessChain %9 %76 
                                         f32 %123 = OpLoad %122 
                                         f32 %125 = OpFMul %123 %124 
                                Private f32* %126 = OpAccessChain %32 %76 
                                         f32 %127 = OpLoad %126 
                                         f32 %128 = OpFNegate %127 
                                         f32 %129 = OpFAdd %125 %128 
                                Private f32* %130 = OpAccessChain %9 %76 
                                                      OpStore %130 %129 
                                Uniform f32* %132 = OpAccessChain %17 %114 
                                         f32 %133 = OpLoad %132 
                                         f32 %134 = OpFMul %133 %118 
                                         f32 %135 = OpFAdd %134 %118 
                                                      OpStore %131 %135 
                                Private f32* %137 = OpAccessChain %32 %76 
                                         f32 %138 = OpLoad %137 
                                         f32 %139 = OpFNegate %138 
                                         f32 %140 = OpLoad %131 
                                         f32 %141 = OpFAdd %139 %140 
                                                      OpStore %136 %141 
                                         f32 %143 = OpLoad %136 
                                         f32 %144 = OpFDiv %142 %143 
                                                      OpStore %136 %144 
                                         f32 %145 = OpLoad %136 
                                Private f32* %146 = OpAccessChain %9 %76 
                                         f32 %147 = OpLoad %146 
                                         f32 %148 = OpFMul %145 %147 
                                Private f32* %149 = OpAccessChain %9 %76 
                                                      OpStore %149 %148 
                                Private f32* %150 = OpAccessChain %9 %76 
                                         f32 %151 = OpLoad %150 
                                         f32 %152 = OpExtInst %1 43 %151 %88 %142 
                                Private f32* %153 = OpAccessChain %9 %76 
                                                      OpStore %153 %152 
                                Private f32* %154 = OpAccessChain %9 %76 
                                         f32 %155 = OpLoad %154 
                                         f32 %157 = OpFMul %155 %156 
                                         f32 %159 = OpFAdd %157 %158 
                                                      OpStore %136 %159 
                                Private f32* %160 = OpAccessChain %9 %76 
                                         f32 %161 = OpLoad %160 
                                Private f32* %162 = OpAccessChain %9 %76 
                                         f32 %163 = OpLoad %162 
                                         f32 %164 = OpFMul %161 %163 
                                Private f32* %165 = OpAccessChain %9 %76 
                                                      OpStore %165 %164 
                                Private f32* %166 = OpAccessChain %9 %76 
                                         f32 %167 = OpLoad %166 
                                         f32 %168 = OpLoad %136 
                                         f32 %169 = OpFMul %167 %168 
                                Private f32* %170 = OpAccessChain %9 %76 
                                                      OpStore %170 %169 
                              Uniform f32_4* %172 = OpAccessChain %17 %171 
                                       f32_4 %173 = OpLoad %172 
                                       f32_3 %174 = OpVectorShuffle %173 %173 0 1 2 
                              Uniform f32_4* %176 = OpAccessChain %17 %175 
                                       f32_4 %177 = OpLoad %176 
                                       f32_3 %178 = OpVectorShuffle %177 %177 0 1 2 
                                       f32_3 %179 = OpFMul %174 %178 
                                       f32_4 %180 = OpLoad %32 
                                       f32_4 %181 = OpVectorShuffle %180 %179 4 1 5 6 
                                                      OpStore %32 %181 
                                       f32_3 %182 = OpLoad %9 
                                       f32_3 %183 = OpVectorShuffle %182 %182 0 0 0 
                                       f32_4 %184 = OpLoad %32 
                                       f32_3 %185 = OpVectorShuffle %184 %184 0 2 3 
                                       f32_3 %186 = OpFMul %183 %185 
                                                      OpStore %9 %186 
                                Uniform f32* %188 = OpAccessChain %17 %187 
                                         f32 %189 = OpLoad %188 
                                         f32 %190 = OpFNegate %189 
                                         f32 %191 = OpFMul %190 %118 
                                Uniform f32* %193 = OpAccessChain %17 %192 
                                         f32 %194 = OpLoad %193 
                                         f32 %195 = OpFAdd %191 %194 
                                Private f32* %196 = OpAccessChain %32 %76 
                                                      OpStore %196 %195 
                                Private f32* %198 = OpAccessChain %32 %76 
                                         f32 %199 = OpLoad %198 
                                         f32 %200 = OpFNegate %199 
                                Private f32* %201 = OpAccessChain %32 %83 
                                         f32 %202 = OpLoad %201 
                                         f32 %203 = OpFAdd %200 %202 
                                Private f32* %204 = OpAccessChain %197 %76 
                                                      OpStore %204 %203 
                                Uniform f32* %205 = OpAccessChain %17 %187 
                                         f32 %206 = OpLoad %205 
                                         f32 %207 = OpFMul %206 %118 
                                Uniform f32* %208 = OpAccessChain %17 %192 
                                         f32 %209 = OpLoad %208 
                                         f32 %210 = OpFAdd %207 %209 
                                                      OpStore %131 %210 
                                Private f32* %211 = OpAccessChain %32 %76 
                                         f32 %212 = OpLoad %211 
                                         f32 %213 = OpFNegate %212 
                                         f32 %214 = OpLoad %131 
                                         f32 %215 = OpFAdd %213 %214 
                                Private f32* %216 = OpAccessChain %32 %76 
                                                      OpStore %216 %215 
                                Private f32* %217 = OpAccessChain %32 %76 
                                         f32 %218 = OpLoad %217 
                                         f32 %219 = OpFDiv %142 %218 
                                Private f32* %220 = OpAccessChain %32 %76 
                                                      OpStore %220 %219 
                                Private f32* %221 = OpAccessChain %32 %76 
                                         f32 %222 = OpLoad %221 
                                Private f32* %223 = OpAccessChain %197 %76 
                                         f32 %224 = OpLoad %223 
                                         f32 %225 = OpFMul %222 %224 
                                Private f32* %226 = OpAccessChain %32 %76 
                                                      OpStore %226 %225 
                                Private f32* %227 = OpAccessChain %32 %76 
                                         f32 %228 = OpLoad %227 
                                         f32 %229 = OpExtInst %1 43 %228 %88 %142 
                                Private f32* %230 = OpAccessChain %32 %76 
                                                      OpStore %230 %229 
                                Private f32* %231 = OpAccessChain %32 %76 
                                         f32 %232 = OpLoad %231 
                                         f32 %233 = OpFMul %232 %156 
                                         f32 %234 = OpFAdd %233 %158 
                                Private f32* %235 = OpAccessChain %197 %76 
                                                      OpStore %235 %234 
                                Private f32* %236 = OpAccessChain %32 %76 
                                         f32 %237 = OpLoad %236 
                                Private f32* %238 = OpAccessChain %32 %76 
                                         f32 %239 = OpLoad %238 
                                         f32 %240 = OpFMul %237 %239 
                                Private f32* %241 = OpAccessChain %32 %76 
                                                      OpStore %241 %240 
                                Private f32* %242 = OpAccessChain %32 %76 
                                         f32 %243 = OpLoad %242 
                                Private f32* %244 = OpAccessChain %197 %76 
                                         f32 %245 = OpLoad %244 
                                         f32 %246 = OpFMul %243 %245 
                                Private f32* %247 = OpAccessChain %32 %76 
                                                      OpStore %247 %246 
                              Uniform f32_4* %249 = OpAccessChain %17 %248 
                                       f32_4 %250 = OpLoad %249 
                                       f32_3 %251 = OpVectorShuffle %250 %250 0 1 2 
                                       f32_3 %252 = OpFNegate %251 
                              Uniform f32_4* %254 = OpAccessChain %17 %253 
                                       f32_4 %255 = OpLoad %254 
                                       f32_3 %256 = OpVectorShuffle %255 %255 0 1 2 
                                       f32_3 %257 = OpFAdd %252 %256 
                                                      OpStore %197 %257 
                              Uniform f32_4* %258 = OpAccessChain %17 %253 
                                       f32_4 %259 = OpLoad %258 
                                       f32_3 %260 = OpVectorShuffle %259 %259 3 3 3 
                                       f32_3 %261 = OpLoad %197 
                                       f32_3 %262 = OpFMul %260 %261 
                              Uniform f32_4* %263 = OpAccessChain %17 %248 
                                       f32_4 %264 = OpLoad %263 
                                       f32_3 %265 = OpVectorShuffle %264 %264 0 1 2 
                                       f32_3 %266 = OpFAdd %262 %265 
                                                      OpStore %197 %266 
                                       f32_3 %267 = OpLoad %197 
                                       f32_3 %268 = OpFNegate %267 
                              Uniform f32_4* %269 = OpAccessChain %17 %248 
                                       f32_4 %270 = OpLoad %269 
                                       f32_3 %271 = OpVectorShuffle %270 %270 0 1 2 
                                       f32_3 %272 = OpFAdd %268 %271 
                                                      OpStore %66 %272 
                                       f32_4 %273 = OpLoad %32 
                                       f32_3 %274 = OpVectorShuffle %273 %273 0 0 0 
                                       f32_3 %275 = OpLoad %66 
                                       f32_3 %276 = OpFMul %274 %275 
                                       f32_3 %277 = OpLoad %197 
                                       f32_3 %278 = OpFAdd %276 %277 
                                       f32_4 %279 = OpLoad %32 
                                       f32_4 %280 = OpVectorShuffle %279 %278 4 5 6 3 
                                                      OpStore %32 %280 
                         read_only Texture2D %285 = OpLoad %284 
                                     sampler %289 = OpLoad %288 
                  read_only Texture2DSampled %291 = OpSampledImage %285 %289 
                                       f32_2 %294 = OpLoad vs_TEXCOORD0 
                                       f32_4 %295 = OpImageSampleImplicitLod %291 %294 
                                       f32_3 %296 = OpVectorShuffle %295 %295 0 1 2 
                                                      OpStore %281 %296 
                                       f32_3 %297 = OpLoad %281 
                              Uniform f32_4* %299 = OpAccessChain %17 %298 
                                       f32_4 %300 = OpLoad %299 
                                       f32_3 %301 = OpVectorShuffle %300 %300 0 1 2 
                                       f32_3 %302 = OpFMul %297 %301 
                                                      OpStore %66 %302 
                                       f32_3 %303 = OpLoad %66 
                              Uniform f32_4* %304 = OpAccessChain %17 %171 
                                       f32_4 %305 = OpLoad %304 
                                       f32_3 %306 = OpVectorShuffle %305 %305 0 1 2 
                                       f32_3 %307 = OpFMul %303 %306 
                                                      OpStore %66 %307 
                                       f32_3 %308 = OpLoad %66 
                                       f32_4 %309 = OpLoad %32 
                                       f32_3 %310 = OpVectorShuffle %309 %309 0 1 2 
                                       f32_3 %311 = OpFMul %308 %310 
                                       f32_3 %312 = OpLoad %9 
                                       f32_3 %313 = OpFAdd %311 %312 
                                                      OpStore %9 %313 
                                       f32_3 %316 = OpLoad %9 
                                       f32_4 %317 = OpLoad %315 
                                       f32_4 %318 = OpVectorShuffle %317 %316 4 5 6 3 
                                                      OpStore %315 %318 
                                 Output f32* %321 = OpAccessChain %315 %319 
                                                      OpStore %321 %142 
                                                      OpReturn
                                                      OpFunctionEnd
"
}
SubProgram "gles3 hw_tier00 " {
Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" }
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in highp vec3 in_NORMAL0;
in highp vec4 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out highp vec3 vs_TEXCOORD1;
out highp vec3 vs_TEXCOORD2;
out mediump vec3 vs_TEXCOORD3;
out highp vec4 vs_TEXCOORD5;
out highp vec4 vs_TEXCOORD6;
vec4 u_xlat0;
mediump vec4 u_xlat16_0;
vec4 u_xlat1;
mediump float u_xlat16_2;
mediump vec3 u_xlat16_3;
float u_xlat12;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    vs_TEXCOORD2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
    u_xlat0 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat0;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat0;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat0.xy;
    u_xlat0.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat12 = dot(u_xlat0.xyz, u_xlat0.xyz);
    u_xlat12 = inversesqrt(u_xlat12);
    u_xlat0.xyz = vec3(u_xlat12) * u_xlat0.xyz;
    vs_TEXCOORD1.xyz = u_xlat0.xyz;
    u_xlat16_2 = u_xlat0.y * u_xlat0.y;
    u_xlat16_2 = u_xlat0.x * u_xlat0.x + (-u_xlat16_2);
    u_xlat16_0 = u_xlat0.yzzx * u_xlat0.xyzz;
    u_xlat16_3.x = dot(unity_SHBr, u_xlat16_0);
    u_xlat16_3.y = dot(unity_SHBg, u_xlat16_0);
    u_xlat16_3.z = dot(unity_SHBb, u_xlat16_0);
    vs_TEXCOORD3.xyz = unity_SHC.xyz * vec3(u_xlat16_2) + u_xlat16_3.xyz;
    vs_TEXCOORD5 = vec4(0.0, 0.0, 0.0, 0.0);
    vs_TEXCOORD6 = vec4(0.0, 0.0, 0.0, 0.0);
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec3 _WorldSpaceCameraPos;
uniform 	mediump vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 _LightColor0;
uniform 	mediump vec4 _SpecColor;
uniform 	mediump vec4 _Color;
uniform 	mediump float _Smoothness;
uniform 	mediump vec4 _HColor;
uniform 	mediump vec4 _SColor;
uniform 	mediump float _RampThreshold;
uniform 	mediump float _RampSmooth;
uniform 	mediump float _SpecSmooth;
UNITY_LOCATION(0) uniform mediump sampler2D _MainTex;
in mediump vec2 vs_TEXCOORD0;
in highp vec3 vs_TEXCOORD1;
in highp vec3 vs_TEXCOORD2;
in mediump vec3 vs_TEXCOORD3;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
vec4 u_xlat1;
mediump vec4 u_xlat16_1;
mediump vec3 u_xlat16_2;
vec3 u_xlat3;
mediump vec3 u_xlat16_3;
mediump vec3 u_xlat16_4;
float u_xlat5;
mediump vec3 u_xlat16_6;
mediump float u_xlat16_11;
float u_xlat15;
mediump float u_xlat16_16;
void main()
{
    u_xlat0.xyz = (-vs_TEXCOORD2.xyz) + _WorldSpaceCameraPos.xyz;
    u_xlat15 = dot(u_xlat0.xyz, u_xlat0.xyz);
    u_xlat15 = inversesqrt(u_xlat15);
    u_xlat16_1.xyz = u_xlat0.xyz * vec3(u_xlat15) + _WorldSpaceLightPos0.xyz;
    u_xlat16_16 = dot(u_xlat16_1.xyz, u_xlat16_1.xyz);
    u_xlat16_16 = inversesqrt(u_xlat16_16);
    u_xlat16_1.xyz = vec3(u_xlat16_16) * u_xlat16_1.xyz;
    u_xlat16_16 = dot(vs_TEXCOORD1.xyz, vs_TEXCOORD1.xyz);
    u_xlat16_16 = inversesqrt(u_xlat16_16);
    u_xlat16_2.xyz = vec3(u_xlat16_16) * vs_TEXCOORD1.xyz;
    u_xlat16_1.x = dot(u_xlat16_2.xyz, u_xlat16_1.xyz);
    u_xlat16_1.y = dot(u_xlat16_2.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat16_1.xy = max(u_xlat16_1.xy, vec2(0.0, 0.0));
    u_xlat0.x = log2(u_xlat16_1.x);
    u_xlat16_1.x = _Smoothness * 128.0;
    u_xlat0.x = u_xlat0.x * u_xlat16_1.x;
    u_xlat0.x = exp2(u_xlat0.x);
    u_xlat16_1.x = (-_SpecSmooth) * 0.5 + 0.5;
    u_xlat0.x = u_xlat0.x * 2.0 + (-u_xlat16_1.x);
    u_xlat16_11 = _SpecSmooth * 0.5 + 0.5;
    u_xlat5 = (-u_xlat16_1.x) + u_xlat16_11;
    u_xlat5 = float(1.0) / u_xlat5;
    u_xlat0.x = u_xlat5 * u_xlat0.x;
#ifdef UNITY_ADRENO_ES3
    u_xlat0.x = min(max(u_xlat0.x, 0.0), 1.0);
#else
    u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);
#endif
    u_xlat5 = u_xlat0.x * -2.0 + 3.0;
    u_xlat0.x = u_xlat0.x * u_xlat0.x;
    u_xlat0.x = u_xlat0.x * u_xlat5;
    u_xlat16_1.xzw = _LightColor0.xyz * _SpecColor.xyz;
    u_xlat0.xyz = u_xlat0.xxx * u_xlat16_1.xzw;
    u_xlat16_1.x = (-_RampSmooth) * 0.5 + _RampThreshold;
    u_xlat16_6.x = (-u_xlat16_1.x) + u_xlat16_1.y;
    u_xlat16_11 = _RampSmooth * 0.5 + _RampThreshold;
    u_xlat16_1.x = (-u_xlat16_1.x) + u_xlat16_11;
    u_xlat16_1.x = float(1.0) / u_xlat16_1.x;
    u_xlat16_1.x = u_xlat16_1.x * u_xlat16_6.x;
#ifdef UNITY_ADRENO_ES3
    u_xlat16_1.x = min(max(u_xlat16_1.x, 0.0), 1.0);
#else
    u_xlat16_1.x = clamp(u_xlat16_1.x, 0.0, 1.0);
#endif
    u_xlat16_6.x = u_xlat16_1.x * -2.0 + 3.0;
    u_xlat16_1.x = u_xlat16_1.x * u_xlat16_1.x;
    u_xlat16_1.x = u_xlat16_1.x * u_xlat16_6.x;
    u_xlat16_6.xyz = (-_HColor.xyz) + _SColor.xyz;
    u_xlat16_6.xyz = _SColor.www * u_xlat16_6.xyz + _HColor.xyz;
    u_xlat16_2.xyz = (-u_xlat16_6.xyz) + _HColor.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xxx * u_xlat16_2.xyz + u_xlat16_6.xyz;
    u_xlat16_3.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_2.xyz = u_xlat16_3.xyz * _Color.xyz;
    u_xlat16_4.xyz = u_xlat16_2.xyz * _LightColor0.xyz;
    u_xlat0.xyz = u_xlat16_4.xyz * u_xlat16_1.xyz + u_xlat0.xyz;
    u_xlat1.xyz = vs_TEXCOORD1.xyz;
    u_xlat1.w = 1.0;
    u_xlat16_4.x = dot(unity_SHAr, u_xlat1);
    u_xlat16_4.y = dot(unity_SHAg, u_xlat1);
    u_xlat16_4.z = dot(unity_SHAb, u_xlat1);
    u_xlat16_4.xyz = u_xlat16_4.xyz + vs_TEXCOORD3.xyz;
    u_xlat16_4.xyz = max(u_xlat16_4.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat3.xyz = log2(u_xlat16_4.xyz);
    u_xlat3.xyz = u_xlat3.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
    u_xlat3.xyz = exp2(u_xlat3.xyz);
    u_xlat3.xyz = u_xlat3.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
    u_xlat3.xyz = max(u_xlat3.xyz, vec3(0.0, 0.0, 0.0));
    SV_Target0.xyz = u_xlat16_2.xyz * u_xlat3.xyz + u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier01 " {
Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" }
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in highp vec3 in_NORMAL0;
in highp vec4 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out highp vec3 vs_TEXCOORD1;
out highp vec3 vs_TEXCOORD2;
out mediump vec3 vs_TEXCOORD3;
out highp vec4 vs_TEXCOORD5;
out highp vec4 vs_TEXCOORD6;
vec4 u_xlat0;
mediump vec4 u_xlat16_0;
vec4 u_xlat1;
mediump float u_xlat16_2;
mediump vec3 u_xlat16_3;
float u_xlat12;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    vs_TEXCOORD2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
    u_xlat0 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat0;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat0;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat0.xy;
    u_xlat0.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat12 = dot(u_xlat0.xyz, u_xlat0.xyz);
    u_xlat12 = inversesqrt(u_xlat12);
    u_xlat0.xyz = vec3(u_xlat12) * u_xlat0.xyz;
    vs_TEXCOORD1.xyz = u_xlat0.xyz;
    u_xlat16_2 = u_xlat0.y * u_xlat0.y;
    u_xlat16_2 = u_xlat0.x * u_xlat0.x + (-u_xlat16_2);
    u_xlat16_0 = u_xlat0.yzzx * u_xlat0.xyzz;
    u_xlat16_3.x = dot(unity_SHBr, u_xlat16_0);
    u_xlat16_3.y = dot(unity_SHBg, u_xlat16_0);
    u_xlat16_3.z = dot(unity_SHBb, u_xlat16_0);
    vs_TEXCOORD3.xyz = unity_SHC.xyz * vec3(u_xlat16_2) + u_xlat16_3.xyz;
    vs_TEXCOORD5 = vec4(0.0, 0.0, 0.0, 0.0);
    vs_TEXCOORD6 = vec4(0.0, 0.0, 0.0, 0.0);
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec3 _WorldSpaceCameraPos;
uniform 	mediump vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 _LightColor0;
uniform 	mediump vec4 _SpecColor;
uniform 	mediump vec4 _Color;
uniform 	mediump float _Smoothness;
uniform 	mediump vec4 _HColor;
uniform 	mediump vec4 _SColor;
uniform 	mediump float _RampThreshold;
uniform 	mediump float _RampSmooth;
uniform 	mediump float _SpecSmooth;
UNITY_LOCATION(0) uniform mediump sampler2D _MainTex;
in mediump vec2 vs_TEXCOORD0;
in highp vec3 vs_TEXCOORD1;
in highp vec3 vs_TEXCOORD2;
in mediump vec3 vs_TEXCOORD3;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
vec4 u_xlat1;
mediump vec4 u_xlat16_1;
mediump vec3 u_xlat16_2;
vec3 u_xlat3;
mediump vec3 u_xlat16_3;
mediump vec3 u_xlat16_4;
float u_xlat5;
mediump vec3 u_xlat16_6;
mediump float u_xlat16_11;
float u_xlat15;
mediump float u_xlat16_16;
void main()
{
    u_xlat0.xyz = (-vs_TEXCOORD2.xyz) + _WorldSpaceCameraPos.xyz;
    u_xlat15 = dot(u_xlat0.xyz, u_xlat0.xyz);
    u_xlat15 = inversesqrt(u_xlat15);
    u_xlat16_1.xyz = u_xlat0.xyz * vec3(u_xlat15) + _WorldSpaceLightPos0.xyz;
    u_xlat16_16 = dot(u_xlat16_1.xyz, u_xlat16_1.xyz);
    u_xlat16_16 = inversesqrt(u_xlat16_16);
    u_xlat16_1.xyz = vec3(u_xlat16_16) * u_xlat16_1.xyz;
    u_xlat16_16 = dot(vs_TEXCOORD1.xyz, vs_TEXCOORD1.xyz);
    u_xlat16_16 = inversesqrt(u_xlat16_16);
    u_xlat16_2.xyz = vec3(u_xlat16_16) * vs_TEXCOORD1.xyz;
    u_xlat16_1.x = dot(u_xlat16_2.xyz, u_xlat16_1.xyz);
    u_xlat16_1.y = dot(u_xlat16_2.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat16_1.xy = max(u_xlat16_1.xy, vec2(0.0, 0.0));
    u_xlat0.x = log2(u_xlat16_1.x);
    u_xlat16_1.x = _Smoothness * 128.0;
    u_xlat0.x = u_xlat0.x * u_xlat16_1.x;
    u_xlat0.x = exp2(u_xlat0.x);
    u_xlat16_1.x = (-_SpecSmooth) * 0.5 + 0.5;
    u_xlat0.x = u_xlat0.x * 2.0 + (-u_xlat16_1.x);
    u_xlat16_11 = _SpecSmooth * 0.5 + 0.5;
    u_xlat5 = (-u_xlat16_1.x) + u_xlat16_11;
    u_xlat5 = float(1.0) / u_xlat5;
    u_xlat0.x = u_xlat5 * u_xlat0.x;
#ifdef UNITY_ADRENO_ES3
    u_xlat0.x = min(max(u_xlat0.x, 0.0), 1.0);
#else
    u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);
#endif
    u_xlat5 = u_xlat0.x * -2.0 + 3.0;
    u_xlat0.x = u_xlat0.x * u_xlat0.x;
    u_xlat0.x = u_xlat0.x * u_xlat5;
    u_xlat16_1.xzw = _LightColor0.xyz * _SpecColor.xyz;
    u_xlat0.xyz = u_xlat0.xxx * u_xlat16_1.xzw;
    u_xlat16_1.x = (-_RampSmooth) * 0.5 + _RampThreshold;
    u_xlat16_6.x = (-u_xlat16_1.x) + u_xlat16_1.y;
    u_xlat16_11 = _RampSmooth * 0.5 + _RampThreshold;
    u_xlat16_1.x = (-u_xlat16_1.x) + u_xlat16_11;
    u_xlat16_1.x = float(1.0) / u_xlat16_1.x;
    u_xlat16_1.x = u_xlat16_1.x * u_xlat16_6.x;
#ifdef UNITY_ADRENO_ES3
    u_xlat16_1.x = min(max(u_xlat16_1.x, 0.0), 1.0);
#else
    u_xlat16_1.x = clamp(u_xlat16_1.x, 0.0, 1.0);
#endif
    u_xlat16_6.x = u_xlat16_1.x * -2.0 + 3.0;
    u_xlat16_1.x = u_xlat16_1.x * u_xlat16_1.x;
    u_xlat16_1.x = u_xlat16_1.x * u_xlat16_6.x;
    u_xlat16_6.xyz = (-_HColor.xyz) + _SColor.xyz;
    u_xlat16_6.xyz = _SColor.www * u_xlat16_6.xyz + _HColor.xyz;
    u_xlat16_2.xyz = (-u_xlat16_6.xyz) + _HColor.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xxx * u_xlat16_2.xyz + u_xlat16_6.xyz;
    u_xlat16_3.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_2.xyz = u_xlat16_3.xyz * _Color.xyz;
    u_xlat16_4.xyz = u_xlat16_2.xyz * _LightColor0.xyz;
    u_xlat0.xyz = u_xlat16_4.xyz * u_xlat16_1.xyz + u_xlat0.xyz;
    u_xlat1.xyz = vs_TEXCOORD1.xyz;
    u_xlat1.w = 1.0;
    u_xlat16_4.x = dot(unity_SHAr, u_xlat1);
    u_xlat16_4.y = dot(unity_SHAg, u_xlat1);
    u_xlat16_4.z = dot(unity_SHAb, u_xlat1);
    u_xlat16_4.xyz = u_xlat16_4.xyz + vs_TEXCOORD3.xyz;
    u_xlat16_4.xyz = max(u_xlat16_4.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat3.xyz = log2(u_xlat16_4.xyz);
    u_xlat3.xyz = u_xlat3.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
    u_xlat3.xyz = exp2(u_xlat3.xyz);
    u_xlat3.xyz = u_xlat3.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
    u_xlat3.xyz = max(u_xlat3.xyz, vec3(0.0, 0.0, 0.0));
    SV_Target0.xyz = u_xlat16_2.xyz * u_xlat3.xyz + u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier02 " {
Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" }
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in highp vec3 in_NORMAL0;
in highp vec4 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out highp vec3 vs_TEXCOORD1;
out highp vec3 vs_TEXCOORD2;
out mediump vec3 vs_TEXCOORD3;
out highp vec4 vs_TEXCOORD5;
out highp vec4 vs_TEXCOORD6;
vec4 u_xlat0;
mediump vec4 u_xlat16_0;
vec4 u_xlat1;
mediump float u_xlat16_2;
mediump vec3 u_xlat16_3;
float u_xlat12;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    vs_TEXCOORD2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
    u_xlat0 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat0;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat0;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat0.xy;
    u_xlat0.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat12 = dot(u_xlat0.xyz, u_xlat0.xyz);
    u_xlat12 = inversesqrt(u_xlat12);
    u_xlat0.xyz = vec3(u_xlat12) * u_xlat0.xyz;
    vs_TEXCOORD1.xyz = u_xlat0.xyz;
    u_xlat16_2 = u_xlat0.y * u_xlat0.y;
    u_xlat16_2 = u_xlat0.x * u_xlat0.x + (-u_xlat16_2);
    u_xlat16_0 = u_xlat0.yzzx * u_xlat0.xyzz;
    u_xlat16_3.x = dot(unity_SHBr, u_xlat16_0);
    u_xlat16_3.y = dot(unity_SHBg, u_xlat16_0);
    u_xlat16_3.z = dot(unity_SHBb, u_xlat16_0);
    vs_TEXCOORD3.xyz = unity_SHC.xyz * vec3(u_xlat16_2) + u_xlat16_3.xyz;
    vs_TEXCOORD5 = vec4(0.0, 0.0, 0.0, 0.0);
    vs_TEXCOORD6 = vec4(0.0, 0.0, 0.0, 0.0);
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec3 _WorldSpaceCameraPos;
uniform 	mediump vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 _LightColor0;
uniform 	mediump vec4 _SpecColor;
uniform 	mediump vec4 _Color;
uniform 	mediump float _Smoothness;
uniform 	mediump vec4 _HColor;
uniform 	mediump vec4 _SColor;
uniform 	mediump float _RampThreshold;
uniform 	mediump float _RampSmooth;
uniform 	mediump float _SpecSmooth;
UNITY_LOCATION(0) uniform mediump sampler2D _MainTex;
in mediump vec2 vs_TEXCOORD0;
in highp vec3 vs_TEXCOORD1;
in highp vec3 vs_TEXCOORD2;
in mediump vec3 vs_TEXCOORD3;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
vec4 u_xlat1;
mediump vec4 u_xlat16_1;
mediump vec3 u_xlat16_2;
vec3 u_xlat3;
mediump vec3 u_xlat16_3;
mediump vec3 u_xlat16_4;
float u_xlat5;
mediump vec3 u_xlat16_6;
mediump float u_xlat16_11;
float u_xlat15;
mediump float u_xlat16_16;
void main()
{
    u_xlat0.xyz = (-vs_TEXCOORD2.xyz) + _WorldSpaceCameraPos.xyz;
    u_xlat15 = dot(u_xlat0.xyz, u_xlat0.xyz);
    u_xlat15 = inversesqrt(u_xlat15);
    u_xlat16_1.xyz = u_xlat0.xyz * vec3(u_xlat15) + _WorldSpaceLightPos0.xyz;
    u_xlat16_16 = dot(u_xlat16_1.xyz, u_xlat16_1.xyz);
    u_xlat16_16 = inversesqrt(u_xlat16_16);
    u_xlat16_1.xyz = vec3(u_xlat16_16) * u_xlat16_1.xyz;
    u_xlat16_16 = dot(vs_TEXCOORD1.xyz, vs_TEXCOORD1.xyz);
    u_xlat16_16 = inversesqrt(u_xlat16_16);
    u_xlat16_2.xyz = vec3(u_xlat16_16) * vs_TEXCOORD1.xyz;
    u_xlat16_1.x = dot(u_xlat16_2.xyz, u_xlat16_1.xyz);
    u_xlat16_1.y = dot(u_xlat16_2.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat16_1.xy = max(u_xlat16_1.xy, vec2(0.0, 0.0));
    u_xlat0.x = log2(u_xlat16_1.x);
    u_xlat16_1.x = _Smoothness * 128.0;
    u_xlat0.x = u_xlat0.x * u_xlat16_1.x;
    u_xlat0.x = exp2(u_xlat0.x);
    u_xlat16_1.x = (-_SpecSmooth) * 0.5 + 0.5;
    u_xlat0.x = u_xlat0.x * 2.0 + (-u_xlat16_1.x);
    u_xlat16_11 = _SpecSmooth * 0.5 + 0.5;
    u_xlat5 = (-u_xlat16_1.x) + u_xlat16_11;
    u_xlat5 = float(1.0) / u_xlat5;
    u_xlat0.x = u_xlat5 * u_xlat0.x;
#ifdef UNITY_ADRENO_ES3
    u_xlat0.x = min(max(u_xlat0.x, 0.0), 1.0);
#else
    u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);
#endif
    u_xlat5 = u_xlat0.x * -2.0 + 3.0;
    u_xlat0.x = u_xlat0.x * u_xlat0.x;
    u_xlat0.x = u_xlat0.x * u_xlat5;
    u_xlat16_1.xzw = _LightColor0.xyz * _SpecColor.xyz;
    u_xlat0.xyz = u_xlat0.xxx * u_xlat16_1.xzw;
    u_xlat16_1.x = (-_RampSmooth) * 0.5 + _RampThreshold;
    u_xlat16_6.x = (-u_xlat16_1.x) + u_xlat16_1.y;
    u_xlat16_11 = _RampSmooth * 0.5 + _RampThreshold;
    u_xlat16_1.x = (-u_xlat16_1.x) + u_xlat16_11;
    u_xlat16_1.x = float(1.0) / u_xlat16_1.x;
    u_xlat16_1.x = u_xlat16_1.x * u_xlat16_6.x;
#ifdef UNITY_ADRENO_ES3
    u_xlat16_1.x = min(max(u_xlat16_1.x, 0.0), 1.0);
#else
    u_xlat16_1.x = clamp(u_xlat16_1.x, 0.0, 1.0);
#endif
    u_xlat16_6.x = u_xlat16_1.x * -2.0 + 3.0;
    u_xlat16_1.x = u_xlat16_1.x * u_xlat16_1.x;
    u_xlat16_1.x = u_xlat16_1.x * u_xlat16_6.x;
    u_xlat16_6.xyz = (-_HColor.xyz) + _SColor.xyz;
    u_xlat16_6.xyz = _SColor.www * u_xlat16_6.xyz + _HColor.xyz;
    u_xlat16_2.xyz = (-u_xlat16_6.xyz) + _HColor.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xxx * u_xlat16_2.xyz + u_xlat16_6.xyz;
    u_xlat16_3.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_2.xyz = u_xlat16_3.xyz * _Color.xyz;
    u_xlat16_4.xyz = u_xlat16_2.xyz * _LightColor0.xyz;
    u_xlat0.xyz = u_xlat16_4.xyz * u_xlat16_1.xyz + u_xlat0.xyz;
    u_xlat1.xyz = vs_TEXCOORD1.xyz;
    u_xlat1.w = 1.0;
    u_xlat16_4.x = dot(unity_SHAr, u_xlat1);
    u_xlat16_4.y = dot(unity_SHAg, u_xlat1);
    u_xlat16_4.z = dot(unity_SHAb, u_xlat1);
    u_xlat16_4.xyz = u_xlat16_4.xyz + vs_TEXCOORD3.xyz;
    u_xlat16_4.xyz = max(u_xlat16_4.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat3.xyz = log2(u_xlat16_4.xyz);
    u_xlat3.xyz = u_xlat3.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
    u_xlat3.xyz = exp2(u_xlat3.xyz);
    u_xlat3.xyz = u_xlat3.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
    u_xlat3.xyz = max(u_xlat3.xyz, vec3(0.0, 0.0, 0.0));
    SV_Target0.xyz = u_xlat16_2.xyz * u_xlat3.xyz + u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "vulkan hw_tier00 " {
Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" }
"; SPIR-V
; Version: 1.0
; Generator: Khronos Glslang Reference Front End; 6
; Bound: 214
; Schema: 0
                                                      OpCapability Shader 
                                               %1 = OpExtInstImport "GLSL.std.450" 
                                                      OpMemoryModel Logical GLSL450 
                                                      OpEntryPoint Vertex %4 "main" %11 %53 %87 %97 %113 %117 %155 %195 %204 %207 
                                                      OpName vs_TEXCOORD2 "vs_TEXCOORD2" 
                                                      OpName vs_TEXCOORD0 "vs_TEXCOORD0" 
                                                      OpName vs_TEXCOORD1 "vs_TEXCOORD1" 
                                                      OpName vs_TEXCOORD3 "vs_TEXCOORD3" 
                                                      OpName vs_TEXCOORD5 "vs_TEXCOORD5" 
                                                      OpName vs_TEXCOORD6 "vs_TEXCOORD6" 
                                                      OpDecorate %11 Location 11 
                                                      OpDecorate %16 ArrayStride 16 
                                                      OpDecorate %17 ArrayStride 17 
                                                      OpDecorate %18 ArrayStride 18 
                                                      OpMemberDecorate %19 0 RelaxedPrecision 
                                                      OpMemberDecorate %19 0 Offset 19 
                                                      OpMemberDecorate %19 1 RelaxedPrecision 
                                                      OpMemberDecorate %19 1 Offset 19 
                                                      OpMemberDecorate %19 2 RelaxedPrecision 
                                                      OpMemberDecorate %19 2 Offset 19 
                                                      OpMemberDecorate %19 3 RelaxedPrecision 
                                                      OpMemberDecorate %19 3 Offset 19 
                                                      OpMemberDecorate %19 4 Offset 19 
                                                      OpMemberDecorate %19 5 Offset 19 
                                                      OpMemberDecorate %19 6 Offset 19 
                                                      OpMemberDecorate %19 7 Offset 19 
                                                      OpDecorate %19 Block 
                                                      OpDecorate %21 DescriptorSet 21 
                                                      OpDecorate %21 Binding 21 
                                                      OpDecorate vs_TEXCOORD2 Location 53 
                                                      OpMemberDecorate %85 0 BuiltIn 85 
                                                      OpMemberDecorate %85 1 BuiltIn 85 
                                                      OpMemberDecorate %85 2 BuiltIn 85 
                                                      OpDecorate %85 Block 
                                                      OpDecorate %97 Location 97 
                                                      OpDecorate vs_TEXCOORD0 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD0 Location 113 
                                                      OpDecorate %117 Location 117 
                                                      OpDecorate vs_TEXCOORD1 Location 155 
                                                      OpDecorate %158 RelaxedPrecision 
                                                      OpDecorate %169 RelaxedPrecision 
                                                      OpDecorate %170 RelaxedPrecision 
                                                      OpDecorate %172 RelaxedPrecision 
                                                      OpDecorate %179 RelaxedPrecision 
                                                      OpDecorate %181 RelaxedPrecision 
                                                      OpDecorate %182 RelaxedPrecision 
                                                      OpDecorate %183 RelaxedPrecision 
                                                      OpDecorate %186 RelaxedPrecision 
                                                      OpDecorate %187 RelaxedPrecision 
                                                      OpDecorate %188 RelaxedPrecision 
                                                      OpDecorate %191 RelaxedPrecision 
                                                      OpDecorate %192 RelaxedPrecision 
                                                      OpDecorate %193 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD3 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD3 Location 195 
                                                      OpDecorate %197 RelaxedPrecision 
                                                      OpDecorate %198 RelaxedPrecision 
                                                      OpDecorate %199 RelaxedPrecision 
                                                      OpDecorate %200 RelaxedPrecision 
                                                      OpDecorate %201 RelaxedPrecision 
                                                      OpDecorate %202 RelaxedPrecision 
                                                      OpDecorate %203 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD5 Location 204 
                                                      OpDecorate vs_TEXCOORD6 Location 207 
                                               %2 = OpTypeVoid 
                                               %3 = OpTypeFunction %2 
                                               %6 = OpTypeFloat 32 
                                               %7 = OpTypeVector %6 4 
                                               %8 = OpTypePointer Private %7 
                                Private f32_4* %9 = OpVariable Private 
                                              %10 = OpTypePointer Input %7 
                                 Input f32_4* %11 = OpVariable Input 
                                              %14 = OpTypeInt 32 0 
                                          u32 %15 = OpConstant 4 
                                              %16 = OpTypeArray %7 %15 
                                              %17 = OpTypeArray %7 %15 
                                              %18 = OpTypeArray %7 %15 
                                              %19 = OpTypeStruct %7 %7 %7 %7 %16 %17 %18 %7 
                                              %20 = OpTypePointer Uniform %19 
Uniform struct {f32_4; f32_4; f32_4; f32_4; f32_4[4]; f32_4[4]; f32_4[4]; f32_4;}* %21 = OpVariable Uniform 
                                              %22 = OpTypeInt 32 1 
                                          i32 %23 = OpConstant 4 
                                          i32 %24 = OpConstant 1 
                                              %25 = OpTypePointer Uniform %7 
                                          i32 %29 = OpConstant 0 
                                          i32 %37 = OpConstant 2 
                               Private f32_4* %45 = OpVariable Private 
                                          i32 %47 = OpConstant 3 
                                              %51 = OpTypeVector %6 3 
                                              %52 = OpTypePointer Output %51 
                       Output f32_3* vs_TEXCOORD2 = OpVariable Output 
                                          i32 %65 = OpConstant 6 
                                          u32 %83 = OpConstant 1 
                                              %84 = OpTypeArray %6 %83 
                                              %85 = OpTypeStruct %7 %6 %84 
                                              %86 = OpTypePointer Output %85 
         Output struct {f32_4; f32; f32[1];}* %87 = OpVariable Output 
                                              %95 = OpTypePointer Output %7 
                                 Input f32_4* %97 = OpVariable Input 
                                              %98 = OpTypeVector %6 2 
                                         i32 %101 = OpConstant 7 
                                             %112 = OpTypePointer Output %98 
                       Output f32_2* vs_TEXCOORD0 = OpVariable Output 
                                             %116 = OpTypePointer Input %51 
                                Input f32_3* %117 = OpVariable Input 
                                         i32 %119 = OpConstant 5 
                                         u32 %124 = OpConstant 0 
                                             %125 = OpTypePointer Private %6 
                                         u32 %138 = OpConstant 2 
                                Private f32* %140 = OpVariable Private 
                       Output f32_3* vs_TEXCOORD1 = OpVariable Output 
                                Private f32* %158 = OpVariable Private 
                              Private f32_4* %172 = OpVariable Private 
                                             %178 = OpTypePointer Private %51 
                              Private f32_3* %179 = OpVariable Private 
                       Output f32_3* vs_TEXCOORD3 = OpVariable Output 
                       Output f32_4* vs_TEXCOORD5 = OpVariable Output 
                                         f32 %205 = OpConstant 3.674022E-40 
                                       f32_4 %206 = OpConstantComposite %205 %205 %205 %205 
                       Output f32_4* vs_TEXCOORD6 = OpVariable Output 
                                             %208 = OpTypePointer Output %6 
                                          void %4 = OpFunction None %3 
                                               %5 = OpLabel 
                                        f32_4 %12 = OpLoad %11 
                                        f32_4 %13 = OpVectorShuffle %12 %12 1 1 1 1 
                               Uniform f32_4* %26 = OpAccessChain %21 %23 %24 
                                        f32_4 %27 = OpLoad %26 
                                        f32_4 %28 = OpFMul %13 %27 
                                                      OpStore %9 %28 
                               Uniform f32_4* %30 = OpAccessChain %21 %23 %29 
                                        f32_4 %31 = OpLoad %30 
                                        f32_4 %32 = OpLoad %11 
                                        f32_4 %33 = OpVectorShuffle %32 %32 0 0 0 0 
                                        f32_4 %34 = OpFMul %31 %33 
                                        f32_4 %35 = OpLoad %9 
                                        f32_4 %36 = OpFAdd %34 %35 
                                                      OpStore %9 %36 
                               Uniform f32_4* %38 = OpAccessChain %21 %23 %37 
                                        f32_4 %39 = OpLoad %38 
                                        f32_4 %40 = OpLoad %11 
                                        f32_4 %41 = OpVectorShuffle %40 %40 2 2 2 2 
                                        f32_4 %42 = OpFMul %39 %41 
                                        f32_4 %43 = OpLoad %9 
                                        f32_4 %44 = OpFAdd %42 %43 
                                                      OpStore %9 %44 
                                        f32_4 %46 = OpLoad %9 
                               Uniform f32_4* %48 = OpAccessChain %21 %23 %47 
                                        f32_4 %49 = OpLoad %48 
                                        f32_4 %50 = OpFAdd %46 %49 
                                                      OpStore %45 %50 
                               Uniform f32_4* %54 = OpAccessChain %21 %23 %47 
                                        f32_4 %55 = OpLoad %54 
                                        f32_3 %56 = OpVectorShuffle %55 %55 0 1 2 
                                        f32_4 %57 = OpLoad %11 
                                        f32_3 %58 = OpVectorShuffle %57 %57 3 3 3 
                                        f32_3 %59 = OpFMul %56 %58 
                                        f32_4 %60 = OpLoad %9 
                                        f32_3 %61 = OpVectorShuffle %60 %60 0 1 2 
                                        f32_3 %62 = OpFAdd %59 %61 
                                                      OpStore vs_TEXCOORD2 %62 
                                        f32_4 %63 = OpLoad %45 
                                        f32_4 %64 = OpVectorShuffle %63 %63 1 1 1 1 
                               Uniform f32_4* %66 = OpAccessChain %21 %65 %24 
                                        f32_4 %67 = OpLoad %66 
                                        f32_4 %68 = OpFMul %64 %67 
                                                      OpStore %9 %68 
                               Uniform f32_4* %69 = OpAccessChain %21 %65 %29 
                                        f32_4 %70 = OpLoad %69 
                                        f32_4 %71 = OpLoad %45 
                                        f32_4 %72 = OpVectorShuffle %71 %71 0 0 0 0 
                                        f32_4 %73 = OpFMul %70 %72 
                                        f32_4 %74 = OpLoad %9 
                                        f32_4 %75 = OpFAdd %73 %74 
                                                      OpStore %9 %75 
                               Uniform f32_4* %76 = OpAccessChain %21 %65 %37 
                                        f32_4 %77 = OpLoad %76 
                                        f32_4 %78 = OpLoad %45 
                                        f32_4 %79 = OpVectorShuffle %78 %78 2 2 2 2 
                                        f32_4 %80 = OpFMul %77 %79 
                                        f32_4 %81 = OpLoad %9 
                                        f32_4 %82 = OpFAdd %80 %81 
                                                      OpStore %9 %82 
                               Uniform f32_4* %88 = OpAccessChain %21 %65 %47 
                                        f32_4 %89 = OpLoad %88 
                                        f32_4 %90 = OpLoad %45 
                                        f32_4 %91 = OpVectorShuffle %90 %90 3 3 3 3 
                                        f32_4 %92 = OpFMul %89 %91 
                                        f32_4 %93 = OpLoad %9 
                                        f32_4 %94 = OpFAdd %92 %93 
                                Output f32_4* %96 = OpAccessChain %87 %29 
                                                      OpStore %96 %94 
                                        f32_4 %99 = OpLoad %97 
                                       f32_2 %100 = OpVectorShuffle %99 %99 0 1 
                              Uniform f32_4* %102 = OpAccessChain %21 %101 
                                       f32_4 %103 = OpLoad %102 
                                       f32_2 %104 = OpVectorShuffle %103 %103 0 1 
                                       f32_2 %105 = OpFMul %100 %104 
                              Uniform f32_4* %106 = OpAccessChain %21 %101 
                                       f32_4 %107 = OpLoad %106 
                                       f32_2 %108 = OpVectorShuffle %107 %107 2 3 
                                       f32_2 %109 = OpFAdd %105 %108 
                                       f32_4 %110 = OpLoad %9 
                                       f32_4 %111 = OpVectorShuffle %110 %109 4 5 2 3 
                                                      OpStore %9 %111 
                                       f32_4 %114 = OpLoad %9 
                                       f32_2 %115 = OpVectorShuffle %114 %114 0 1 
                                                      OpStore vs_TEXCOORD0 %115 
                                       f32_3 %118 = OpLoad %117 
                              Uniform f32_4* %120 = OpAccessChain %21 %119 %29 
                                       f32_4 %121 = OpLoad %120 
                                       f32_3 %122 = OpVectorShuffle %121 %121 0 1 2 
                                         f32 %123 = OpDot %118 %122 
                                Private f32* %126 = OpAccessChain %9 %124 
                                                      OpStore %126 %123 
                                       f32_3 %127 = OpLoad %117 
                              Uniform f32_4* %128 = OpAccessChain %21 %119 %24 
                                       f32_4 %129 = OpLoad %128 
                                       f32_3 %130 = OpVectorShuffle %129 %129 0 1 2 
                                         f32 %131 = OpDot %127 %130 
                                Private f32* %132 = OpAccessChain %9 %83 
                                                      OpStore %132 %131 
                                       f32_3 %133 = OpLoad %117 
                              Uniform f32_4* %134 = OpAccessChain %21 %119 %37 
                                       f32_4 %135 = OpLoad %134 
                                       f32_3 %136 = OpVectorShuffle %135 %135 0 1 2 
                                         f32 %137 = OpDot %133 %136 
                                Private f32* %139 = OpAccessChain %9 %138 
                                                      OpStore %139 %137 
                                       f32_4 %141 = OpLoad %9 
                                       f32_3 %142 = OpVectorShuffle %141 %141 0 1 2 
                                       f32_4 %143 = OpLoad %9 
                                       f32_3 %144 = OpVectorShuffle %143 %143 0 1 2 
                                         f32 %145 = OpDot %142 %144 
                                                      OpStore %140 %145 
                                         f32 %146 = OpLoad %140 
                                         f32 %147 = OpExtInst %1 32 %146 
                                                      OpStore %140 %147 
                                         f32 %148 = OpLoad %140 
                                       f32_3 %149 = OpCompositeConstruct %148 %148 %148 
                                       f32_4 %150 = OpLoad %9 
                                       f32_3 %151 = OpVectorShuffle %150 %150 0 1 2 
                                       f32_3 %152 = OpFMul %149 %151 
                                       f32_4 %153 = OpLoad %9 
                                       f32_4 %154 = OpVectorShuffle %153 %152 4 5 6 3 
                                                      OpStore %9 %154 
                                       f32_4 %156 = OpLoad %9 
                                       f32_3 %157 = OpVectorShuffle %156 %156 0 1 2 
                                                      OpStore vs_TEXCOORD1 %157 
                                Private f32* %159 = OpAccessChain %9 %83 
                                         f32 %160 = OpLoad %159 
                                Private f32* %161 = OpAccessChain %9 %83 
                                         f32 %162 = OpLoad %161 
                                         f32 %163 = OpFMul %160 %162 
                                                      OpStore %158 %163 
                                Private f32* %164 = OpAccessChain %9 %124 
                                         f32 %165 = OpLoad %164 
                                Private f32* %166 = OpAccessChain %9 %124 
                                         f32 %167 = OpLoad %166 
                                         f32 %168 = OpFMul %165 %167 
                                         f32 %169 = OpLoad %158 
                                         f32 %170 = OpFNegate %169 
                                         f32 %171 = OpFAdd %168 %170 
                                                      OpStore %158 %171 
                                       f32_4 %173 = OpLoad %9 
                                       f32_4 %174 = OpVectorShuffle %173 %173 1 2 2 0 
                                       f32_4 %175 = OpLoad %9 
                                       f32_4 %176 = OpVectorShuffle %175 %175 0 1 2 2 
                                       f32_4 %177 = OpFMul %174 %176 
                                                      OpStore %172 %177 
                              Uniform f32_4* %180 = OpAccessChain %21 %29 
                                       f32_4 %181 = OpLoad %180 
                                       f32_4 %182 = OpLoad %172 
                                         f32 %183 = OpDot %181 %182 
                                Private f32* %184 = OpAccessChain %179 %124 
                                                      OpStore %184 %183 
                              Uniform f32_4* %185 = OpAccessChain %21 %24 
                                       f32_4 %186 = OpLoad %185 
                                       f32_4 %187 = OpLoad %172 
                                         f32 %188 = OpDot %186 %187 
                                Private f32* %189 = OpAccessChain %179 %83 
                                                      OpStore %189 %188 
                              Uniform f32_4* %190 = OpAccessChain %21 %37 
                                       f32_4 %191 = OpLoad %190 
                                       f32_4 %192 = OpLoad %172 
                                         f32 %193 = OpDot %191 %192 
                                Private f32* %194 = OpAccessChain %179 %138 
                                                      OpStore %194 %193 
                              Uniform f32_4* %196 = OpAccessChain %21 %47 
                                       f32_4 %197 = OpLoad %196 
                                       f32_3 %198 = OpVectorShuffle %197 %197 0 1 2 
                                         f32 %199 = OpLoad %158 
                                       f32_3 %200 = OpCompositeConstruct %199 %199 %199 
                                       f32_3 %201 = OpFMul %198 %200 
                                       f32_3 %202 = OpLoad %179 
                                       f32_3 %203 = OpFAdd %201 %202 
                                                      OpStore vs_TEXCOORD3 %203 
                                                      OpStore vs_TEXCOORD5 %206 
                                                      OpStore vs_TEXCOORD6 %206 
                                 Output f32* %209 = OpAccessChain %87 %29 %83 
                                         f32 %210 = OpLoad %209 
                                         f32 %211 = OpFNegate %210 
                                 Output f32* %212 = OpAccessChain %87 %29 %83 
                                                      OpStore %212 %211 
                                                      OpReturn
                                                      OpFunctionEnd
; SPIR-V
; Version: 1.0
; Generator: Khronos Glslang Reference Front End; 6
; Bound: 377
; Schema: 0
                                                      OpCapability Shader 
                                               %1 = OpExtInstImport "GLSL.std.450" 
                                                      OpMemoryModel Logical GLSL450 
                                                      OpEntryPoint Fragment %4 "main" %11 %60 %293 %341 %366 
                                                      OpExecutionMode %4 OriginUpperLeft 
                                                      OpName vs_TEXCOORD2 "vs_TEXCOORD2" 
                                                      OpName vs_TEXCOORD1 "vs_TEXCOORD1" 
                                                      OpName vs_TEXCOORD0 "vs_TEXCOORD0" 
                                                      OpName vs_TEXCOORD3 "vs_TEXCOORD3" 
                                                      OpDecorate vs_TEXCOORD2 Location 11 
                                                      OpMemberDecorate %15 0 Offset 15 
                                                      OpMemberDecorate %15 1 RelaxedPrecision 
                                                      OpMemberDecorate %15 1 Offset 15 
                                                      OpMemberDecorate %15 2 RelaxedPrecision 
                                                      OpMemberDecorate %15 2 Offset 15 
                                                      OpMemberDecorate %15 3 RelaxedPrecision 
                                                      OpMemberDecorate %15 3 Offset 15 
                                                      OpMemberDecorate %15 4 RelaxedPrecision 
                                                      OpMemberDecorate %15 4 Offset 15 
                                                      OpMemberDecorate %15 5 RelaxedPrecision 
                                                      OpMemberDecorate %15 5 Offset 15 
                                                      OpMemberDecorate %15 6 RelaxedPrecision 
                                                      OpMemberDecorate %15 6 Offset 15 
                                                      OpMemberDecorate %15 7 RelaxedPrecision 
                                                      OpMemberDecorate %15 7 Offset 15 
                                                      OpMemberDecorate %15 8 RelaxedPrecision 
                                                      OpMemberDecorate %15 8 Offset 15 
                                                      OpMemberDecorate %15 9 RelaxedPrecision 
                                                      OpMemberDecorate %15 9 Offset 15 
                                                      OpMemberDecorate %15 10 RelaxedPrecision 
                                                      OpMemberDecorate %15 10 Offset 15 
                                                      OpMemberDecorate %15 11 RelaxedPrecision 
                                                      OpMemberDecorate %15 11 Offset 15 
                                                      OpMemberDecorate %15 12 RelaxedPrecision 
                                                      OpMemberDecorate %15 12 Offset 15 
                                                      OpMemberDecorate %15 13 RelaxedPrecision 
                                                      OpMemberDecorate %15 13 Offset 15 
                                                      OpDecorate %15 Block 
                                                      OpDecorate %17 DescriptorSet 17 
                                                      OpDecorate %17 Binding 17 
                                                      OpDecorate %32 RelaxedPrecision 
                                                      OpDecorate %40 RelaxedPrecision 
                                                      OpDecorate %41 RelaxedPrecision 
                                                      OpDecorate %45 RelaxedPrecision 
                                                      OpDecorate %46 RelaxedPrecision 
                                                      OpDecorate %47 RelaxedPrecision 
                                                      OpDecorate %48 RelaxedPrecision 
                                                      OpDecorate %49 RelaxedPrecision 
                                                      OpDecorate %50 RelaxedPrecision 
                                                      OpDecorate %51 RelaxedPrecision 
                                                      OpDecorate %52 RelaxedPrecision 
                                                      OpDecorate %53 RelaxedPrecision 
                                                      OpDecorate %54 RelaxedPrecision 
                                                      OpDecorate %55 RelaxedPrecision 
                                                      OpDecorate %56 RelaxedPrecision 
                                                      OpDecorate %57 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD1 Location 60 
                                                      OpDecorate %64 RelaxedPrecision 
                                                      OpDecorate %65 RelaxedPrecision 
                                                      OpDecorate %66 RelaxedPrecision 
                                                      OpDecorate %67 RelaxedPrecision 
                                                      OpDecorate %71 RelaxedPrecision 
                                                      OpDecorate %72 RelaxedPrecision 
                                                      OpDecorate %73 RelaxedPrecision 
                                                      OpDecorate %74 RelaxedPrecision 
                                                      OpDecorate %78 RelaxedPrecision 
                                                      OpDecorate %80 RelaxedPrecision 
                                                      OpDecorate %81 RelaxedPrecision 
                                                      OpDecorate %82 RelaxedPrecision 
                                                      OpDecorate %86 RelaxedPrecision 
                                                      OpDecorate %87 RelaxedPrecision 
                                                      OpDecorate %90 RelaxedPrecision 
                                                      OpDecorate %94 RelaxedPrecision 
                                                      OpDecorate %95 RelaxedPrecision 
                                                      OpDecorate %100 RelaxedPrecision 
                                                      OpDecorate %102 RelaxedPrecision 
                                                      OpDecorate %107 RelaxedPrecision 
                                                      OpDecorate %116 RelaxedPrecision 
                                                      OpDecorate %117 RelaxedPrecision 
                                                      OpDecorate %119 RelaxedPrecision 
                                                      OpDecorate %120 RelaxedPrecision 
                                                      OpDecorate %127 RelaxedPrecision 
                                                      OpDecorate %128 RelaxedPrecision 
                                                      OpDecorate %131 RelaxedPrecision 
                                                      OpDecorate %133 RelaxedPrecision 
                                                      OpDecorate %134 RelaxedPrecision 
                                                      OpDecorate %135 RelaxedPrecision 
                                                      OpDecorate %138 RelaxedPrecision 
                                                      OpDecorate %139 RelaxedPrecision 
                                                      OpDecorate %140 RelaxedPrecision 
                                                      OpDecorate %141 RelaxedPrecision 
                                                      OpDecorate %173 RelaxedPrecision 
                                                      OpDecorate %174 RelaxedPrecision 
                                                      OpDecorate %177 RelaxedPrecision 
                                                      OpDecorate %178 RelaxedPrecision 
                                                      OpDecorate %179 RelaxedPrecision 
                                                      OpDecorate %184 RelaxedPrecision 
                                                      OpDecorate %185 RelaxedPrecision 
                                                      OpDecorate %189 RelaxedPrecision 
                                                      OpDecorate %190 RelaxedPrecision 
                                                      OpDecorate %191 RelaxedPrecision 
                                                      OpDecorate %194 RelaxedPrecision 
                                                      OpDecorate %195 RelaxedPrecision 
                                                      OpDecorate %197 RelaxedPrecision 
                                                      OpDecorate %199 RelaxedPrecision 
                                                      OpDecorate %200 RelaxedPrecision 
                                                      OpDecorate %202 RelaxedPrecision 
                                                      OpDecorate %203 RelaxedPrecision 
                                                      OpDecorate %206 RelaxedPrecision 
                                                      OpDecorate %207 RelaxedPrecision 
                                                      OpDecorate %209 RelaxedPrecision 
                                                      OpDecorate %210 RelaxedPrecision 
                                                      OpDecorate %212 RelaxedPrecision 
                                                      OpDecorate %213 RelaxedPrecision 
                                                      OpDecorate %214 RelaxedPrecision 
                                                      OpDecorate %215 RelaxedPrecision 
                                                      OpDecorate %218 RelaxedPrecision 
                                                      OpDecorate %219 RelaxedPrecision 
                                                      OpDecorate %222 RelaxedPrecision 
                                                      OpDecorate %224 RelaxedPrecision 
                                                      OpDecorate %225 RelaxedPrecision 
                                                      OpDecorate %228 RelaxedPrecision 
                                                      OpDecorate %229 RelaxedPrecision 
                                                      OpDecorate %232 RelaxedPrecision 
                                                      OpDecorate %233 RelaxedPrecision 
                                                      OpDecorate %234 RelaxedPrecision 
                                                      OpDecorate %237 RelaxedPrecision 
                                                      OpDecorate %239 RelaxedPrecision 
                                                      OpDecorate %240 RelaxedPrecision 
                                                      OpDecorate %243 RelaxedPrecision 
                                                      OpDecorate %245 RelaxedPrecision 
                                                      OpDecorate %246 RelaxedPrecision 
                                                      OpDecorate %250 RelaxedPrecision 
                                                      OpDecorate %251 RelaxedPrecision 
                                                      OpDecorate %252 RelaxedPrecision 
                                                      OpDecorate %255 RelaxedPrecision 
                                                      OpDecorate %256 RelaxedPrecision 
                                                      OpDecorate %257 RelaxedPrecision 
                                                      OpDecorate %259 RelaxedPrecision 
                                                      OpDecorate %260 RelaxedPrecision 
                                                      OpDecorate %261 RelaxedPrecision 
                                                      OpDecorate %262 RelaxedPrecision 
                                                      OpDecorate %264 RelaxedPrecision 
                                                      OpDecorate %265 RelaxedPrecision 
                                                      OpDecorate %266 RelaxedPrecision 
                                                      OpDecorate %267 RelaxedPrecision 
                                                      OpDecorate %268 RelaxedPrecision 
                                                      OpDecorate %270 RelaxedPrecision 
                                                      OpDecorate %271 RelaxedPrecision 
                                                      OpDecorate %272 RelaxedPrecision 
                                                      OpDecorate %273 RelaxedPrecision 
                                                      OpDecorate %274 RelaxedPrecision 
                                                      OpDecorate %275 RelaxedPrecision 
                                                      OpDecorate %276 RelaxedPrecision 
                                                      OpDecorate %277 RelaxedPrecision 
                                                      OpDecorate %278 RelaxedPrecision 
                                                      OpDecorate %281 RelaxedPrecision 
                                                      OpDecorate %284 RelaxedPrecision 
                                                      OpDecorate %284 DescriptorSet 284 
                                                      OpDecorate %284 Binding 284 
                                                      OpDecorate %285 RelaxedPrecision 
                                                      OpDecorate %288 RelaxedPrecision 
                                                      OpDecorate %288 DescriptorSet 288 
                                                      OpDecorate %288 Binding 288 
                                                      OpDecorate %289 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD0 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD0 Location 293 
                                                      OpDecorate %294 RelaxedPrecision 
                                                      OpDecorate %295 RelaxedPrecision 
                                                      OpDecorate %296 RelaxedPrecision 
                                                      OpDecorate %297 RelaxedPrecision 
                                                      OpDecorate %300 RelaxedPrecision 
                                                      OpDecorate %301 RelaxedPrecision 
                                                      OpDecorate %302 RelaxedPrecision 
                                                      OpDecorate %303 RelaxedPrecision 
                                                      OpDecorate %304 RelaxedPrecision 
                                                      OpDecorate %306 RelaxedPrecision 
                                                      OpDecorate %307 RelaxedPrecision 
                                                      OpDecorate %308 RelaxedPrecision 
                                                      OpDecorate %309 RelaxedPrecision 
                                                      OpDecorate %310 RelaxedPrecision 
                                                      OpDecorate %311 RelaxedPrecision 
                                                      OpDecorate %312 RelaxedPrecision 
                                                      OpDecorate %323 RelaxedPrecision 
                                                      OpDecorate %329 RelaxedPrecision 
                                                      OpDecorate %335 RelaxedPrecision 
                                                      OpDecorate %340 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD3 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD3 Location 341 
                                                      OpDecorate %342 RelaxedPrecision 
                                                      OpDecorate %343 RelaxedPrecision 
                                                      OpDecorate %344 RelaxedPrecision 
                                                      OpDecorate %346 RelaxedPrecision 
                                                      OpDecorate %348 RelaxedPrecision 
                                                      OpDecorate %349 RelaxedPrecision 
                                                      OpDecorate %366 RelaxedPrecision 
                                                      OpDecorate %366 Location 366 
                                                      OpDecorate %367 RelaxedPrecision 
                                               %2 = OpTypeVoid 
                                               %3 = OpTypeFunction %2 
                                               %6 = OpTypeFloat 32 
                                               %7 = OpTypeVector %6 3 
                                               %8 = OpTypePointer Private %7 
                                Private f32_3* %9 = OpVariable Private 
                                              %10 = OpTypePointer Input %7 
                        Input f32_3* vs_TEXCOORD2 = OpVariable Input 
                                              %14 = OpTypeVector %6 4 
                                              %15 = OpTypeStruct %7 %14 %14 %14 %14 %14 %14 %14 %6 %14 %14 %6 %6 %6 
                                              %16 = OpTypePointer Uniform %15 
Uniform struct {f32_3; f32_4; f32_4; f32_4; f32_4; f32_4; f32_4; f32_4; f32; f32_4; f32_4; f32; f32; f32;}* %17 = OpVariable Uniform 
                                              %18 = OpTypeInt 32 1 
                                          i32 %19 = OpConstant 0 
                                              %20 = OpTypePointer Uniform %7 
                                              %24 = OpTypePointer Private %6 
                                 Private f32* %25 = OpVariable Private 
                                              %31 = OpTypePointer Private %14 
                               Private f32_4* %32 = OpVariable Private 
                                          i32 %37 = OpConstant 1 
                                              %38 = OpTypePointer Uniform %14 
                                 Private f32* %45 = OpVariable Private 
                        Input f32_3* vs_TEXCOORD1 = OpVariable Input 
                               Private f32_3* %66 = OpVariable Private 
                                              %75 = OpTypeInt 32 0 
                                          u32 %76 = OpConstant 0 
                                          u32 %83 = OpConstant 1 
                                              %85 = OpTypeVector %6 2 
                                          f32 %88 = OpConstant 3.674022E-40 
                                        f32_2 %89 = OpConstantComposite %88 %88 
                                          i32 %97 = OpConstant 8 
                                              %98 = OpTypePointer Uniform %6 
                                         f32 %101 = OpConstant 3.674022E-40 
                                         i32 %114 = OpConstant 13 
                                         f32 %118 = OpConstant 3.674022E-40 
                                         f32 %124 = OpConstant 3.674022E-40 
                                Private f32* %131 = OpVariable Private 
                                Private f32* %136 = OpVariable Private 
                                         f32 %142 = OpConstant 3.674022E-40 
                                         f32 %156 = OpConstant 3.674022E-40 
                                         f32 %158 = OpConstant 3.674022E-40 
                                         i32 %171 = OpConstant 5 
                                         i32 %175 = OpConstant 6 
                                         i32 %187 = OpConstant 12 
                                         i32 %192 = OpConstant 11 
                              Private f32_3* %197 = OpVariable Private 
                                         i32 %248 = OpConstant 9 
                                         i32 %253 = OpConstant 10 
                              Private f32_3* %281 = OpVariable Private 
                                             %282 = OpTypeImage %6 Dim2D 0 0 0 1 Unknown 
                                             %283 = OpTypePointer UniformConstant %282 
        UniformConstant read_only Texture2D* %284 = OpVariable UniformConstant 
                                             %286 = OpTypeSampler 
                                             %287 = OpTypePointer UniformConstant %286 
                    UniformConstant sampler* %288 = OpVariable UniformConstant 
                                             %290 = OpTypeSampledImage %282 
                                             %292 = OpTypePointer Input %85 
                        Input f32_2* vs_TEXCOORD0 = OpVariable Input 
                                         i32 %298 = OpConstant 7 
                              Private f32_3* %303 = OpVariable Private 
                              Private f32_4* %315 = OpVariable Private 
                                         u32 %319 = OpConstant 3 
                                         i32 %321 = OpConstant 2 
                                         i32 %327 = OpConstant 3 
                                         i32 %333 = OpConstant 4 
                                         u32 %338 = OpConstant 2 
                        Input f32_3* vs_TEXCOORD3 = OpVariable Input 
                                       f32_3 %345 = OpConstantComposite %88 %88 %88 
                              Private f32_3* %347 = OpVariable Private 
                                         f32 %351 = OpConstant 3.674022E-40 
                                       f32_3 %352 = OpConstantComposite %351 %351 %351 
                                         f32 %357 = OpConstant 3.674022E-40 
                                       f32_3 %358 = OpConstantComposite %357 %357 %357 
                                         f32 %360 = OpConstant 3.674022E-40 
                                       f32_3 %361 = OpConstantComposite %360 %360 %360 
                                             %365 = OpTypePointer Output %14 
                               Output f32_4* %366 = OpVariable Output 
                                             %374 = OpTypePointer Output %6 
                                          void %4 = OpFunction None %3 
                                               %5 = OpLabel 
                                        f32_3 %12 = OpLoad vs_TEXCOORD2 
                                        f32_3 %13 = OpFNegate %12 
                               Uniform f32_3* %21 = OpAccessChain %17 %19 
                                        f32_3 %22 = OpLoad %21 
                                        f32_3 %23 = OpFAdd %13 %22 
                                                      OpStore %9 %23 
                                        f32_3 %26 = OpLoad %9 
                                        f32_3 %27 = OpLoad %9 
                                          f32 %28 = OpDot %26 %27 
                                                      OpStore %25 %28 
                                          f32 %29 = OpLoad %25 
                                          f32 %30 = OpExtInst %1 32 %29 
                                                      OpStore %25 %30 
                                        f32_3 %33 = OpLoad %9 
                                          f32 %34 = OpLoad %25 
                                        f32_3 %35 = OpCompositeConstruct %34 %34 %34 
                                        f32_3 %36 = OpFMul %33 %35 
                               Uniform f32_4* %39 = OpAccessChain %17 %37 
                                        f32_4 %40 = OpLoad %39 
                                        f32_3 %41 = OpVectorShuffle %40 %40 0 1 2 
                                        f32_3 %42 = OpFAdd %36 %41 
                                        f32_4 %43 = OpLoad %32 
                                        f32_4 %44 = OpVectorShuffle %43 %42 4 5 6 3 
                                                      OpStore %32 %44 
                                        f32_4 %46 = OpLoad %32 
                                        f32_3 %47 = OpVectorShuffle %46 %46 0 1 2 
                                        f32_4 %48 = OpLoad %32 
                                        f32_3 %49 = OpVectorShuffle %48 %48 0 1 2 
                                          f32 %50 = OpDot %47 %49 
                                                      OpStore %45 %50 
                                          f32 %51 = OpLoad %45 
                                          f32 %52 = OpExtInst %1 32 %51 
                                                      OpStore %45 %52 
                                          f32 %53 = OpLoad %45 
                                        f32_3 %54 = OpCompositeConstruct %53 %53 %53 
                                        f32_4 %55 = OpLoad %32 
                                        f32_3 %56 = OpVectorShuffle %55 %55 0 1 2 
                                        f32_3 %57 = OpFMul %54 %56 
                                        f32_4 %58 = OpLoad %32 
                                        f32_4 %59 = OpVectorShuffle %58 %57 4 5 6 3 
                                                      OpStore %32 %59 
                                        f32_3 %61 = OpLoad vs_TEXCOORD1 
                                        f32_3 %62 = OpLoad vs_TEXCOORD1 
                                          f32 %63 = OpDot %61 %62 
                                                      OpStore %45 %63 
                                          f32 %64 = OpLoad %45 
                                          f32 %65 = OpExtInst %1 32 %64 
                                                      OpStore %45 %65 
                                          f32 %67 = OpLoad %45 
                                        f32_3 %68 = OpCompositeConstruct %67 %67 %67 
                                        f32_3 %69 = OpLoad vs_TEXCOORD1 
                                        f32_3 %70 = OpFMul %68 %69 
                                                      OpStore %66 %70 
                                        f32_3 %71 = OpLoad %66 
                                        f32_4 %72 = OpLoad %32 
                                        f32_3 %73 = OpVectorShuffle %72 %72 0 1 2 
                                          f32 %74 = OpDot %71 %73 
                                 Private f32* %77 = OpAccessChain %32 %76 
                                                      OpStore %77 %74 
                                        f32_3 %78 = OpLoad %66 
                               Uniform f32_4* %79 = OpAccessChain %17 %37 
                                        f32_4 %80 = OpLoad %79 
                                        f32_3 %81 = OpVectorShuffle %80 %80 0 1 2 
                                          f32 %82 = OpDot %78 %81 
                                 Private f32* %84 = OpAccessChain %32 %83 
                                                      OpStore %84 %82 
                                        f32_4 %86 = OpLoad %32 
                                        f32_2 %87 = OpVectorShuffle %86 %86 0 1 
                                        f32_2 %90 = OpExtInst %1 40 %87 %89 
                                        f32_4 %91 = OpLoad %32 
                                        f32_4 %92 = OpVectorShuffle %91 %90 4 5 2 3 
                                                      OpStore %32 %92 
                                 Private f32* %93 = OpAccessChain %32 %76 
                                          f32 %94 = OpLoad %93 
                                          f32 %95 = OpExtInst %1 30 %94 
                                 Private f32* %96 = OpAccessChain %9 %76 
                                                      OpStore %96 %95 
                                 Uniform f32* %99 = OpAccessChain %17 %97 
                                         f32 %100 = OpLoad %99 
                                         f32 %102 = OpFMul %100 %101 
                                Private f32* %103 = OpAccessChain %32 %76 
                                                      OpStore %103 %102 
                                Private f32* %104 = OpAccessChain %9 %76 
                                         f32 %105 = OpLoad %104 
                                Private f32* %106 = OpAccessChain %32 %76 
                                         f32 %107 = OpLoad %106 
                                         f32 %108 = OpFMul %105 %107 
                                Private f32* %109 = OpAccessChain %9 %76 
                                                      OpStore %109 %108 
                                Private f32* %110 = OpAccessChain %9 %76 
                                         f32 %111 = OpLoad %110 
                                         f32 %112 = OpExtInst %1 29 %111 
                                Private f32* %113 = OpAccessChain %9 %76 
                                                      OpStore %113 %112 
                                Uniform f32* %115 = OpAccessChain %17 %114 
                                         f32 %116 = OpLoad %115 
                                         f32 %117 = OpFNegate %116 
                                         f32 %119 = OpFMul %117 %118 
                                         f32 %120 = OpFAdd %119 %118 
                                Private f32* %121 = OpAccessChain %32 %76 
                                                      OpStore %121 %120 
                                Private f32* %122 = OpAccessChain %9 %76 
                                         f32 %123 = OpLoad %122 
                                         f32 %125 = OpFMul %123 %124 
                                Private f32* %126 = OpAccessChain %32 %76 
                                         f32 %127 = OpLoad %126 
                                         f32 %128 = OpFNegate %127 
                                         f32 %129 = OpFAdd %125 %128 
                                Private f32* %130 = OpAccessChain %9 %76 
                                                      OpStore %130 %129 
                                Uniform f32* %132 = OpAccessChain %17 %114 
                                         f32 %133 = OpLoad %132 
                                         f32 %134 = OpFMul %133 %118 
                                         f32 %135 = OpFAdd %134 %118 
                                                      OpStore %131 %135 
                                Private f32* %137 = OpAccessChain %32 %76 
                                         f32 %138 = OpLoad %137 
                                         f32 %139 = OpFNegate %138 
                                         f32 %140 = OpLoad %131 
                                         f32 %141 = OpFAdd %139 %140 
                                                      OpStore %136 %141 
                                         f32 %143 = OpLoad %136 
                                         f32 %144 = OpFDiv %142 %143 
                                                      OpStore %136 %144 
                                         f32 %145 = OpLoad %136 
                                Private f32* %146 = OpAccessChain %9 %76 
                                         f32 %147 = OpLoad %146 
                                         f32 %148 = OpFMul %145 %147 
                                Private f32* %149 = OpAccessChain %9 %76 
                                                      OpStore %149 %148 
                                Private f32* %150 = OpAccessChain %9 %76 
                                         f32 %151 = OpLoad %150 
                                         f32 %152 = OpExtInst %1 43 %151 %88 %142 
                                Private f32* %153 = OpAccessChain %9 %76 
                                                      OpStore %153 %152 
                                Private f32* %154 = OpAccessChain %9 %76 
                                         f32 %155 = OpLoad %154 
                                         f32 %157 = OpFMul %155 %156 
                                         f32 %159 = OpFAdd %157 %158 
                                                      OpStore %136 %159 
                                Private f32* %160 = OpAccessChain %9 %76 
                                         f32 %161 = OpLoad %160 
                                Private f32* %162 = OpAccessChain %9 %76 
                                         f32 %163 = OpLoad %162 
                                         f32 %164 = OpFMul %161 %163 
                                Private f32* %165 = OpAccessChain %9 %76 
                                                      OpStore %165 %164 
                                Private f32* %166 = OpAccessChain %9 %76 
                                         f32 %167 = OpLoad %166 
                                         f32 %168 = OpLoad %136 
                                         f32 %169 = OpFMul %167 %168 
                                Private f32* %170 = OpAccessChain %9 %76 
                                                      OpStore %170 %169 
                              Uniform f32_4* %172 = OpAccessChain %17 %171 
                                       f32_4 %173 = OpLoad %172 
                                       f32_3 %174 = OpVectorShuffle %173 %173 0 1 2 
                              Uniform f32_4* %176 = OpAccessChain %17 %175 
                                       f32_4 %177 = OpLoad %176 
                                       f32_3 %178 = OpVectorShuffle %177 %177 0 1 2 
                                       f32_3 %179 = OpFMul %174 %178 
                                       f32_4 %180 = OpLoad %32 
                                       f32_4 %181 = OpVectorShuffle %180 %179 4 1 5 6 
                                                      OpStore %32 %181 
                                       f32_3 %182 = OpLoad %9 
                                       f32_3 %183 = OpVectorShuffle %182 %182 0 0 0 
                                       f32_4 %184 = OpLoad %32 
                                       f32_3 %185 = OpVectorShuffle %184 %184 0 2 3 
                                       f32_3 %186 = OpFMul %183 %185 
                                                      OpStore %9 %186 
                                Uniform f32* %188 = OpAccessChain %17 %187 
                                         f32 %189 = OpLoad %188 
                                         f32 %190 = OpFNegate %189 
                                         f32 %191 = OpFMul %190 %118 
                                Uniform f32* %193 = OpAccessChain %17 %192 
                                         f32 %194 = OpLoad %193 
                                         f32 %195 = OpFAdd %191 %194 
                                Private f32* %196 = OpAccessChain %32 %76 
                                                      OpStore %196 %195 
                                Private f32* %198 = OpAccessChain %32 %76 
                                         f32 %199 = OpLoad %198 
                                         f32 %200 = OpFNegate %199 
                                Private f32* %201 = OpAccessChain %32 %83 
                                         f32 %202 = OpLoad %201 
                                         f32 %203 = OpFAdd %200 %202 
                                Private f32* %204 = OpAccessChain %197 %76 
                                                      OpStore %204 %203 
                                Uniform f32* %205 = OpAccessChain %17 %187 
                                         f32 %206 = OpLoad %205 
                                         f32 %207 = OpFMul %206 %118 
                                Uniform f32* %208 = OpAccessChain %17 %192 
                                         f32 %209 = OpLoad %208 
                                         f32 %210 = OpFAdd %207 %209 
                                                      OpStore %131 %210 
                                Private f32* %211 = OpAccessChain %32 %76 
                                         f32 %212 = OpLoad %211 
                                         f32 %213 = OpFNegate %212 
                                         f32 %214 = OpLoad %131 
                                         f32 %215 = OpFAdd %213 %214 
                                Private f32* %216 = OpAccessChain %32 %76 
                                                      OpStore %216 %215 
                                Private f32* %217 = OpAccessChain %32 %76 
                                         f32 %218 = OpLoad %217 
                                         f32 %219 = OpFDiv %142 %218 
                                Private f32* %220 = OpAccessChain %32 %76 
                                                      OpStore %220 %219 
                                Private f32* %221 = OpAccessChain %32 %76 
                                         f32 %222 = OpLoad %221 
                                Private f32* %223 = OpAccessChain %197 %76 
                                         f32 %224 = OpLoad %223 
                                         f32 %225 = OpFMul %222 %224 
                                Private f32* %226 = OpAccessChain %32 %76 
                                                      OpStore %226 %225 
                                Private f32* %227 = OpAccessChain %32 %76 
                                         f32 %228 = OpLoad %227 
                                         f32 %229 = OpExtInst %1 43 %228 %88 %142 
                                Private f32* %230 = OpAccessChain %32 %76 
                                                      OpStore %230 %229 
                                Private f32* %231 = OpAccessChain %32 %76 
                                         f32 %232 = OpLoad %231 
                                         f32 %233 = OpFMul %232 %156 
                                         f32 %234 = OpFAdd %233 %158 
                                Private f32* %235 = OpAccessChain %197 %76 
                                                      OpStore %235 %234 
                                Private f32* %236 = OpAccessChain %32 %76 
                                         f32 %237 = OpLoad %236 
                                Private f32* %238 = OpAccessChain %32 %76 
                                         f32 %239 = OpLoad %238 
                                         f32 %240 = OpFMul %237 %239 
                                Private f32* %241 = OpAccessChain %32 %76 
                                                      OpStore %241 %240 
                                Private f32* %242 = OpAccessChain %32 %76 
                                         f32 %243 = OpLoad %242 
                                Private f32* %244 = OpAccessChain %197 %76 
                                         f32 %245 = OpLoad %244 
                                         f32 %246 = OpFMul %243 %245 
                                Private f32* %247 = OpAccessChain %32 %76 
                                                      OpStore %247 %246 
                              Uniform f32_4* %249 = OpAccessChain %17 %248 
                                       f32_4 %250 = OpLoad %249 
                                       f32_3 %251 = OpVectorShuffle %250 %250 0 1 2 
                                       f32_3 %252 = OpFNegate %251 
                              Uniform f32_4* %254 = OpAccessChain %17 %253 
                                       f32_4 %255 = OpLoad %254 
                                       f32_3 %256 = OpVectorShuffle %255 %255 0 1 2 
                                       f32_3 %257 = OpFAdd %252 %256 
                                                      OpStore %197 %257 
                              Uniform f32_4* %258 = OpAccessChain %17 %253 
                                       f32_4 %259 = OpLoad %258 
                                       f32_3 %260 = OpVectorShuffle %259 %259 3 3 3 
                                       f32_3 %261 = OpLoad %197 
                                       f32_3 %262 = OpFMul %260 %261 
                              Uniform f32_4* %263 = OpAccessChain %17 %248 
                                       f32_4 %264 = OpLoad %263 
                                       f32_3 %265 = OpVectorShuffle %264 %264 0 1 2 
                                       f32_3 %266 = OpFAdd %262 %265 
                                                      OpStore %197 %266 
                                       f32_3 %267 = OpLoad %197 
                                       f32_3 %268 = OpFNegate %267 
                              Uniform f32_4* %269 = OpAccessChain %17 %248 
                                       f32_4 %270 = OpLoad %269 
                                       f32_3 %271 = OpVectorShuffle %270 %270 0 1 2 
                                       f32_3 %272 = OpFAdd %268 %271 
                                                      OpStore %66 %272 
                                       f32_4 %273 = OpLoad %32 
                                       f32_3 %274 = OpVectorShuffle %273 %273 0 0 0 
                                       f32_3 %275 = OpLoad %66 
                                       f32_3 %276 = OpFMul %274 %275 
                                       f32_3 %277 = OpLoad %197 
                                       f32_3 %278 = OpFAdd %276 %277 
                                       f32_4 %279 = OpLoad %32 
                                       f32_4 %280 = OpVectorShuffle %279 %278 4 5 6 3 
                                                      OpStore %32 %280 
                         read_only Texture2D %285 = OpLoad %284 
                                     sampler %289 = OpLoad %288 
                  read_only Texture2DSampled %291 = OpSampledImage %285 %289 
                                       f32_2 %294 = OpLoad vs_TEXCOORD0 
                                       f32_4 %295 = OpImageSampleImplicitLod %291 %294 
                                       f32_3 %296 = OpVectorShuffle %295 %295 0 1 2 
                                                      OpStore %281 %296 
                                       f32_3 %297 = OpLoad %281 
                              Uniform f32_4* %299 = OpAccessChain %17 %298 
                                       f32_4 %300 = OpLoad %299 
                                       f32_3 %301 = OpVectorShuffle %300 %300 0 1 2 
                                       f32_3 %302 = OpFMul %297 %301 
                                                      OpStore %66 %302 
                                       f32_3 %304 = OpLoad %66 
                              Uniform f32_4* %305 = OpAccessChain %17 %171 
                                       f32_4 %306 = OpLoad %305 
                                       f32_3 %307 = OpVectorShuffle %306 %306 0 1 2 
                                       f32_3 %308 = OpFMul %304 %307 
                                                      OpStore %303 %308 
                                       f32_3 %309 = OpLoad %303 
                                       f32_4 %310 = OpLoad %32 
                                       f32_3 %311 = OpVectorShuffle %310 %310 0 1 2 
                                       f32_3 %312 = OpFMul %309 %311 
                                       f32_3 %313 = OpLoad %9 
                                       f32_3 %314 = OpFAdd %312 %313 
                                                      OpStore %9 %314 
                                       f32_3 %316 = OpLoad vs_TEXCOORD1 
                                       f32_4 %317 = OpLoad %315 
                                       f32_4 %318 = OpVectorShuffle %317 %316 4 5 6 3 
                                                      OpStore %315 %318 
                                Private f32* %320 = OpAccessChain %315 %319 
                                                      OpStore %320 %142 
                              Uniform f32_4* %322 = OpAccessChain %17 %321 
                                       f32_4 %323 = OpLoad %322 
                                       f32_4 %324 = OpLoad %315 
                                         f32 %325 = OpDot %323 %324 
                                Private f32* %326 = OpAccessChain %303 %76 
                                                      OpStore %326 %325 
                              Uniform f32_4* %328 = OpAccessChain %17 %327 
                                       f32_4 %329 = OpLoad %328 
                                       f32_4 %330 = OpLoad %315 
                                         f32 %331 = OpDot %329 %330 
                                Private f32* %332 = OpAccessChain %303 %83 
                                                      OpStore %332 %331 
                              Uniform f32_4* %334 = OpAccessChain %17 %333 
                                       f32_4 %335 = OpLoad %334 
                                       f32_4 %336 = OpLoad %315 
                                         f32 %337 = OpDot %335 %336 
                                Private f32* %339 = OpAccessChain %303 %338 
                                                      OpStore %339 %337 
                                       f32_3 %340 = OpLoad %303 
                                       f32_3 %342 = OpLoad vs_TEXCOORD3 
                                       f32_3 %343 = OpFAdd %340 %342 
                                                      OpStore %303 %343 
                                       f32_3 %344 = OpLoad %303 
                                       f32_3 %346 = OpExtInst %1 40 %344 %345 
                                                      OpStore %303 %346 
                                       f32_3 %348 = OpLoad %303 
                                       f32_3 %349 = OpExtInst %1 30 %348 
                                                      OpStore %347 %349 
                                       f32_3 %350 = OpLoad %347 
                                       f32_3 %353 = OpFMul %350 %352 
                                                      OpStore %347 %353 
                                       f32_3 %354 = OpLoad %347 
                                       f32_3 %355 = OpExtInst %1 29 %354 
                                                      OpStore %347 %355 
                                       f32_3 %356 = OpLoad %347 
                                       f32_3 %359 = OpFMul %356 %358 
                                       f32_3 %362 = OpFAdd %359 %361 
                                                      OpStore %347 %362 
                                       f32_3 %363 = OpLoad %347 
                                       f32_3 %364 = OpExtInst %1 40 %363 %345 
                                                      OpStore %347 %364 
                                       f32_3 %367 = OpLoad %66 
                                       f32_3 %368 = OpLoad %347 
                                       f32_3 %369 = OpFMul %367 %368 
                                       f32_3 %370 = OpLoad %9 
                                       f32_3 %371 = OpFAdd %369 %370 
                                       f32_4 %372 = OpLoad %366 
                                       f32_4 %373 = OpVectorShuffle %372 %371 4 5 6 3 
                                                      OpStore %366 %373 
                                 Output f32* %375 = OpAccessChain %366 %319 
                                                      OpStore %375 %142 
                                                      OpReturn
                                                      OpFunctionEnd
"
}
SubProgram "vulkan hw_tier01 " {
Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" }
"; SPIR-V
; Version: 1.0
; Generator: Khronos Glslang Reference Front End; 6
; Bound: 214
; Schema: 0
                                                      OpCapability Shader 
                                               %1 = OpExtInstImport "GLSL.std.450" 
                                                      OpMemoryModel Logical GLSL450 
                                                      OpEntryPoint Vertex %4 "main" %11 %53 %87 %97 %113 %117 %155 %195 %204 %207 
                                                      OpName vs_TEXCOORD2 "vs_TEXCOORD2" 
                                                      OpName vs_TEXCOORD0 "vs_TEXCOORD0" 
                                                      OpName vs_TEXCOORD1 "vs_TEXCOORD1" 
                                                      OpName vs_TEXCOORD3 "vs_TEXCOORD3" 
                                                      OpName vs_TEXCOORD5 "vs_TEXCOORD5" 
                                                      OpName vs_TEXCOORD6 "vs_TEXCOORD6" 
                                                      OpDecorate %11 Location 11 
                                                      OpDecorate %16 ArrayStride 16 
                                                      OpDecorate %17 ArrayStride 17 
                                                      OpDecorate %18 ArrayStride 18 
                                                      OpMemberDecorate %19 0 RelaxedPrecision 
                                                      OpMemberDecorate %19 0 Offset 19 
                                                      OpMemberDecorate %19 1 RelaxedPrecision 
                                                      OpMemberDecorate %19 1 Offset 19 
                                                      OpMemberDecorate %19 2 RelaxedPrecision 
                                                      OpMemberDecorate %19 2 Offset 19 
                                                      OpMemberDecorate %19 3 RelaxedPrecision 
                                                      OpMemberDecorate %19 3 Offset 19 
                                                      OpMemberDecorate %19 4 Offset 19 
                                                      OpMemberDecorate %19 5 Offset 19 
                                                      OpMemberDecorate %19 6 Offset 19 
                                                      OpMemberDecorate %19 7 Offset 19 
                                                      OpDecorate %19 Block 
                                                      OpDecorate %21 DescriptorSet 21 
                                                      OpDecorate %21 Binding 21 
                                                      OpDecorate vs_TEXCOORD2 Location 53 
                                                      OpMemberDecorate %85 0 BuiltIn 85 
                                                      OpMemberDecorate %85 1 BuiltIn 85 
                                                      OpMemberDecorate %85 2 BuiltIn 85 
                                                      OpDecorate %85 Block 
                                                      OpDecorate %97 Location 97 
                                                      OpDecorate vs_TEXCOORD0 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD0 Location 113 
                                                      OpDecorate %117 Location 117 
                                                      OpDecorate vs_TEXCOORD1 Location 155 
                                                      OpDecorate %158 RelaxedPrecision 
                                                      OpDecorate %169 RelaxedPrecision 
                                                      OpDecorate %170 RelaxedPrecision 
                                                      OpDecorate %172 RelaxedPrecision 
                                                      OpDecorate %179 RelaxedPrecision 
                                                      OpDecorate %181 RelaxedPrecision 
                                                      OpDecorate %182 RelaxedPrecision 
                                                      OpDecorate %183 RelaxedPrecision 
                                                      OpDecorate %186 RelaxedPrecision 
                                                      OpDecorate %187 RelaxedPrecision 
                                                      OpDecorate %188 RelaxedPrecision 
                                                      OpDecorate %191 RelaxedPrecision 
                                                      OpDecorate %192 RelaxedPrecision 
                                                      OpDecorate %193 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD3 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD3 Location 195 
                                                      OpDecorate %197 RelaxedPrecision 
                                                      OpDecorate %198 RelaxedPrecision 
                                                      OpDecorate %199 RelaxedPrecision 
                                                      OpDecorate %200 RelaxedPrecision 
                                                      OpDecorate %201 RelaxedPrecision 
                                                      OpDecorate %202 RelaxedPrecision 
                                                      OpDecorate %203 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD5 Location 204 
                                                      OpDecorate vs_TEXCOORD6 Location 207 
                                               %2 = OpTypeVoid 
                                               %3 = OpTypeFunction %2 
                                               %6 = OpTypeFloat 32 
                                               %7 = OpTypeVector %6 4 
                                               %8 = OpTypePointer Private %7 
                                Private f32_4* %9 = OpVariable Private 
                                              %10 = OpTypePointer Input %7 
                                 Input f32_4* %11 = OpVariable Input 
                                              %14 = OpTypeInt 32 0 
                                          u32 %15 = OpConstant 4 
                                              %16 = OpTypeArray %7 %15 
                                              %17 = OpTypeArray %7 %15 
                                              %18 = OpTypeArray %7 %15 
                                              %19 = OpTypeStruct %7 %7 %7 %7 %16 %17 %18 %7 
                                              %20 = OpTypePointer Uniform %19 
Uniform struct {f32_4; f32_4; f32_4; f32_4; f32_4[4]; f32_4[4]; f32_4[4]; f32_4;}* %21 = OpVariable Uniform 
                                              %22 = OpTypeInt 32 1 
                                          i32 %23 = OpConstant 4 
                                          i32 %24 = OpConstant 1 
                                              %25 = OpTypePointer Uniform %7 
                                          i32 %29 = OpConstant 0 
                                          i32 %37 = OpConstant 2 
                               Private f32_4* %45 = OpVariable Private 
                                          i32 %47 = OpConstant 3 
                                              %51 = OpTypeVector %6 3 
                                              %52 = OpTypePointer Output %51 
                       Output f32_3* vs_TEXCOORD2 = OpVariable Output 
                                          i32 %65 = OpConstant 6 
                                          u32 %83 = OpConstant 1 
                                              %84 = OpTypeArray %6 %83 
                                              %85 = OpTypeStruct %7 %6 %84 
                                              %86 = OpTypePointer Output %85 
         Output struct {f32_4; f32; f32[1];}* %87 = OpVariable Output 
                                              %95 = OpTypePointer Output %7 
                                 Input f32_4* %97 = OpVariable Input 
                                              %98 = OpTypeVector %6 2 
                                         i32 %101 = OpConstant 7 
                                             %112 = OpTypePointer Output %98 
                       Output f32_2* vs_TEXCOORD0 = OpVariable Output 
                                             %116 = OpTypePointer Input %51 
                                Input f32_3* %117 = OpVariable Input 
                                         i32 %119 = OpConstant 5 
                                         u32 %124 = OpConstant 0 
                                             %125 = OpTypePointer Private %6 
                                         u32 %138 = OpConstant 2 
                                Private f32* %140 = OpVariable Private 
                       Output f32_3* vs_TEXCOORD1 = OpVariable Output 
                                Private f32* %158 = OpVariable Private 
                              Private f32_4* %172 = OpVariable Private 
                                             %178 = OpTypePointer Private %51 
                              Private f32_3* %179 = OpVariable Private 
                       Output f32_3* vs_TEXCOORD3 = OpVariable Output 
                       Output f32_4* vs_TEXCOORD5 = OpVariable Output 
                                         f32 %205 = OpConstant 3.674022E-40 
                                       f32_4 %206 = OpConstantComposite %205 %205 %205 %205 
                       Output f32_4* vs_TEXCOORD6 = OpVariable Output 
                                             %208 = OpTypePointer Output %6 
                                          void %4 = OpFunction None %3 
                                               %5 = OpLabel 
                                        f32_4 %12 = OpLoad %11 
                                        f32_4 %13 = OpVectorShuffle %12 %12 1 1 1 1 
                               Uniform f32_4* %26 = OpAccessChain %21 %23 %24 
                                        f32_4 %27 = OpLoad %26 
                                        f32_4 %28 = OpFMul %13 %27 
                                                      OpStore %9 %28 
                               Uniform f32_4* %30 = OpAccessChain %21 %23 %29 
                                        f32_4 %31 = OpLoad %30 
                                        f32_4 %32 = OpLoad %11 
                                        f32_4 %33 = OpVectorShuffle %32 %32 0 0 0 0 
                                        f32_4 %34 = OpFMul %31 %33 
                                        f32_4 %35 = OpLoad %9 
                                        f32_4 %36 = OpFAdd %34 %35 
                                                      OpStore %9 %36 
                               Uniform f32_4* %38 = OpAccessChain %21 %23 %37 
                                        f32_4 %39 = OpLoad %38 
                                        f32_4 %40 = OpLoad %11 
                                        f32_4 %41 = OpVectorShuffle %40 %40 2 2 2 2 
                                        f32_4 %42 = OpFMul %39 %41 
                                        f32_4 %43 = OpLoad %9 
                                        f32_4 %44 = OpFAdd %42 %43 
                                                      OpStore %9 %44 
                                        f32_4 %46 = OpLoad %9 
                               Uniform f32_4* %48 = OpAccessChain %21 %23 %47 
                                        f32_4 %49 = OpLoad %48 
                                        f32_4 %50 = OpFAdd %46 %49 
                                                      OpStore %45 %50 
                               Uniform f32_4* %54 = OpAccessChain %21 %23 %47 
                                        f32_4 %55 = OpLoad %54 
                                        f32_3 %56 = OpVectorShuffle %55 %55 0 1 2 
                                        f32_4 %57 = OpLoad %11 
                                        f32_3 %58 = OpVectorShuffle %57 %57 3 3 3 
                                        f32_3 %59 = OpFMul %56 %58 
                                        f32_4 %60 = OpLoad %9 
                                        f32_3 %61 = OpVectorShuffle %60 %60 0 1 2 
                                        f32_3 %62 = OpFAdd %59 %61 
                                                      OpStore vs_TEXCOORD2 %62 
                                        f32_4 %63 = OpLoad %45 
                                        f32_4 %64 = OpVectorShuffle %63 %63 1 1 1 1 
                               Uniform f32_4* %66 = OpAccessChain %21 %65 %24 
                                        f32_4 %67 = OpLoad %66 
                                        f32_4 %68 = OpFMul %64 %67 
                                                      OpStore %9 %68 
                               Uniform f32_4* %69 = OpAccessChain %21 %65 %29 
                                        f32_4 %70 = OpLoad %69 
                                        f32_4 %71 = OpLoad %45 
                                        f32_4 %72 = OpVectorShuffle %71 %71 0 0 0 0 
                                        f32_4 %73 = OpFMul %70 %72 
                                        f32_4 %74 = OpLoad %9 
                                        f32_4 %75 = OpFAdd %73 %74 
                                                      OpStore %9 %75 
                               Uniform f32_4* %76 = OpAccessChain %21 %65 %37 
                                        f32_4 %77 = OpLoad %76 
                                        f32_4 %78 = OpLoad %45 
                                        f32_4 %79 = OpVectorShuffle %78 %78 2 2 2 2 
                                        f32_4 %80 = OpFMul %77 %79 
                                        f32_4 %81 = OpLoad %9 
                                        f32_4 %82 = OpFAdd %80 %81 
                                                      OpStore %9 %82 
                               Uniform f32_4* %88 = OpAccessChain %21 %65 %47 
                                        f32_4 %89 = OpLoad %88 
                                        f32_4 %90 = OpLoad %45 
                                        f32_4 %91 = OpVectorShuffle %90 %90 3 3 3 3 
                                        f32_4 %92 = OpFMul %89 %91 
                                        f32_4 %93 = OpLoad %9 
                                        f32_4 %94 = OpFAdd %92 %93 
                                Output f32_4* %96 = OpAccessChain %87 %29 
                                                      OpStore %96 %94 
                                        f32_4 %99 = OpLoad %97 
                                       f32_2 %100 = OpVectorShuffle %99 %99 0 1 
                              Uniform f32_4* %102 = OpAccessChain %21 %101 
                                       f32_4 %103 = OpLoad %102 
                                       f32_2 %104 = OpVectorShuffle %103 %103 0 1 
                                       f32_2 %105 = OpFMul %100 %104 
                              Uniform f32_4* %106 = OpAccessChain %21 %101 
                                       f32_4 %107 = OpLoad %106 
                                       f32_2 %108 = OpVectorShuffle %107 %107 2 3 
                                       f32_2 %109 = OpFAdd %105 %108 
                                       f32_4 %110 = OpLoad %9 
                                       f32_4 %111 = OpVectorShuffle %110 %109 4 5 2 3 
                                                      OpStore %9 %111 
                                       f32_4 %114 = OpLoad %9 
                                       f32_2 %115 = OpVectorShuffle %114 %114 0 1 
                                                      OpStore vs_TEXCOORD0 %115 
                                       f32_3 %118 = OpLoad %117 
                              Uniform f32_4* %120 = OpAccessChain %21 %119 %29 
                                       f32_4 %121 = OpLoad %120 
                                       f32_3 %122 = OpVectorShuffle %121 %121 0 1 2 
                                         f32 %123 = OpDot %118 %122 
                                Private f32* %126 = OpAccessChain %9 %124 
                                                      OpStore %126 %123 
                                       f32_3 %127 = OpLoad %117 
                              Uniform f32_4* %128 = OpAccessChain %21 %119 %24 
                                       f32_4 %129 = OpLoad %128 
                                       f32_3 %130 = OpVectorShuffle %129 %129 0 1 2 
                                         f32 %131 = OpDot %127 %130 
                                Private f32* %132 = OpAccessChain %9 %83 
                                                      OpStore %132 %131 
                                       f32_3 %133 = OpLoad %117 
                              Uniform f32_4* %134 = OpAccessChain %21 %119 %37 
                                       f32_4 %135 = OpLoad %134 
                                       f32_3 %136 = OpVectorShuffle %135 %135 0 1 2 
                                         f32 %137 = OpDot %133 %136 
                                Private f32* %139 = OpAccessChain %9 %138 
                                                      OpStore %139 %137 
                                       f32_4 %141 = OpLoad %9 
                                       f32_3 %142 = OpVectorShuffle %141 %141 0 1 2 
                                       f32_4 %143 = OpLoad %9 
                                       f32_3 %144 = OpVectorShuffle %143 %143 0 1 2 
                                         f32 %145 = OpDot %142 %144 
                                                      OpStore %140 %145 
                                         f32 %146 = OpLoad %140 
                                         f32 %147 = OpExtInst %1 32 %146 
                                                      OpStore %140 %147 
                                         f32 %148 = OpLoad %140 
                                       f32_3 %149 = OpCompositeConstruct %148 %148 %148 
                                       f32_4 %150 = OpLoad %9 
                                       f32_3 %151 = OpVectorShuffle %150 %150 0 1 2 
                                       f32_3 %152 = OpFMul %149 %151 
                                       f32_4 %153 = OpLoad %9 
                                       f32_4 %154 = OpVectorShuffle %153 %152 4 5 6 3 
                                                      OpStore %9 %154 
                                       f32_4 %156 = OpLoad %9 
                                       f32_3 %157 = OpVectorShuffle %156 %156 0 1 2 
                                                      OpStore vs_TEXCOORD1 %157 
                                Private f32* %159 = OpAccessChain %9 %83 
                                         f32 %160 = OpLoad %159 
                                Private f32* %161 = OpAccessChain %9 %83 
                                         f32 %162 = OpLoad %161 
                                         f32 %163 = OpFMul %160 %162 
                                                      OpStore %158 %163 
                                Private f32* %164 = OpAccessChain %9 %124 
                                         f32 %165 = OpLoad %164 
                                Private f32* %166 = OpAccessChain %9 %124 
                                         f32 %167 = OpLoad %166 
                                         f32 %168 = OpFMul %165 %167 
                                         f32 %169 = OpLoad %158 
                                         f32 %170 = OpFNegate %169 
                                         f32 %171 = OpFAdd %168 %170 
                                                      OpStore %158 %171 
                                       f32_4 %173 = OpLoad %9 
                                       f32_4 %174 = OpVectorShuffle %173 %173 1 2 2 0 
                                       f32_4 %175 = OpLoad %9 
                                       f32_4 %176 = OpVectorShuffle %175 %175 0 1 2 2 
                                       f32_4 %177 = OpFMul %174 %176 
                                                      OpStore %172 %177 
                              Uniform f32_4* %180 = OpAccessChain %21 %29 
                                       f32_4 %181 = OpLoad %180 
                                       f32_4 %182 = OpLoad %172 
                                         f32 %183 = OpDot %181 %182 
                                Private f32* %184 = OpAccessChain %179 %124 
                                                      OpStore %184 %183 
                              Uniform f32_4* %185 = OpAccessChain %21 %24 
                                       f32_4 %186 = OpLoad %185 
                                       f32_4 %187 = OpLoad %172 
                                         f32 %188 = OpDot %186 %187 
                                Private f32* %189 = OpAccessChain %179 %83 
                                                      OpStore %189 %188 
                              Uniform f32_4* %190 = OpAccessChain %21 %37 
                                       f32_4 %191 = OpLoad %190 
                                       f32_4 %192 = OpLoad %172 
                                         f32 %193 = OpDot %191 %192 
                                Private f32* %194 = OpAccessChain %179 %138 
                                                      OpStore %194 %193 
                              Uniform f32_4* %196 = OpAccessChain %21 %47 
                                       f32_4 %197 = OpLoad %196 
                                       f32_3 %198 = OpVectorShuffle %197 %197 0 1 2 
                                         f32 %199 = OpLoad %158 
                                       f32_3 %200 = OpCompositeConstruct %199 %199 %199 
                                       f32_3 %201 = OpFMul %198 %200 
                                       f32_3 %202 = OpLoad %179 
                                       f32_3 %203 = OpFAdd %201 %202 
                                                      OpStore vs_TEXCOORD3 %203 
                                                      OpStore vs_TEXCOORD5 %206 
                                                      OpStore vs_TEXCOORD6 %206 
                                 Output f32* %209 = OpAccessChain %87 %29 %83 
                                         f32 %210 = OpLoad %209 
                                         f32 %211 = OpFNegate %210 
                                 Output f32* %212 = OpAccessChain %87 %29 %83 
                                                      OpStore %212 %211 
                                                      OpReturn
                                                      OpFunctionEnd
; SPIR-V
; Version: 1.0
; Generator: Khronos Glslang Reference Front End; 6
; Bound: 377
; Schema: 0
                                                      OpCapability Shader 
                                               %1 = OpExtInstImport "GLSL.std.450" 
                                                      OpMemoryModel Logical GLSL450 
                                                      OpEntryPoint Fragment %4 "main" %11 %60 %293 %341 %366 
                                                      OpExecutionMode %4 OriginUpperLeft 
                                                      OpName vs_TEXCOORD2 "vs_TEXCOORD2" 
                                                      OpName vs_TEXCOORD1 "vs_TEXCOORD1" 
                                                      OpName vs_TEXCOORD0 "vs_TEXCOORD0" 
                                                      OpName vs_TEXCOORD3 "vs_TEXCOORD3" 
                                                      OpDecorate vs_TEXCOORD2 Location 11 
                                                      OpMemberDecorate %15 0 Offset 15 
                                                      OpMemberDecorate %15 1 RelaxedPrecision 
                                                      OpMemberDecorate %15 1 Offset 15 
                                                      OpMemberDecorate %15 2 RelaxedPrecision 
                                                      OpMemberDecorate %15 2 Offset 15 
                                                      OpMemberDecorate %15 3 RelaxedPrecision 
                                                      OpMemberDecorate %15 3 Offset 15 
                                                      OpMemberDecorate %15 4 RelaxedPrecision 
                                                      OpMemberDecorate %15 4 Offset 15 
                                                      OpMemberDecorate %15 5 RelaxedPrecision 
                                                      OpMemberDecorate %15 5 Offset 15 
                                                      OpMemberDecorate %15 6 RelaxedPrecision 
                                                      OpMemberDecorate %15 6 Offset 15 
                                                      OpMemberDecorate %15 7 RelaxedPrecision 
                                                      OpMemberDecorate %15 7 Offset 15 
                                                      OpMemberDecorate %15 8 RelaxedPrecision 
                                                      OpMemberDecorate %15 8 Offset 15 
                                                      OpMemberDecorate %15 9 RelaxedPrecision 
                                                      OpMemberDecorate %15 9 Offset 15 
                                                      OpMemberDecorate %15 10 RelaxedPrecision 
                                                      OpMemberDecorate %15 10 Offset 15 
                                                      OpMemberDecorate %15 11 RelaxedPrecision 
                                                      OpMemberDecorate %15 11 Offset 15 
                                                      OpMemberDecorate %15 12 RelaxedPrecision 
                                                      OpMemberDecorate %15 12 Offset 15 
                                                      OpMemberDecorate %15 13 RelaxedPrecision 
                                                      OpMemberDecorate %15 13 Offset 15 
                                                      OpDecorate %15 Block 
                                                      OpDecorate %17 DescriptorSet 17 
                                                      OpDecorate %17 Binding 17 
                                                      OpDecorate %32 RelaxedPrecision 
                                                      OpDecorate %40 RelaxedPrecision 
                                                      OpDecorate %41 RelaxedPrecision 
                                                      OpDecorate %45 RelaxedPrecision 
                                                      OpDecorate %46 RelaxedPrecision 
                                                      OpDecorate %47 RelaxedPrecision 
                                                      OpDecorate %48 RelaxedPrecision 
                                                      OpDecorate %49 RelaxedPrecision 
                                                      OpDecorate %50 RelaxedPrecision 
                                                      OpDecorate %51 RelaxedPrecision 
                                                      OpDecorate %52 RelaxedPrecision 
                                                      OpDecorate %53 RelaxedPrecision 
                                                      OpDecorate %54 RelaxedPrecision 
                                                      OpDecorate %55 RelaxedPrecision 
                                                      OpDecorate %56 RelaxedPrecision 
                                                      OpDecorate %57 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD1 Location 60 
                                                      OpDecorate %64 RelaxedPrecision 
                                                      OpDecorate %65 RelaxedPrecision 
                                                      OpDecorate %66 RelaxedPrecision 
                                                      OpDecorate %67 RelaxedPrecision 
                                                      OpDecorate %71 RelaxedPrecision 
                                                      OpDecorate %72 RelaxedPrecision 
                                                      OpDecorate %73 RelaxedPrecision 
                                                      OpDecorate %74 RelaxedPrecision 
                                                      OpDecorate %78 RelaxedPrecision 
                                                      OpDecorate %80 RelaxedPrecision 
                                                      OpDecorate %81 RelaxedPrecision 
                                                      OpDecorate %82 RelaxedPrecision 
                                                      OpDecorate %86 RelaxedPrecision 
                                                      OpDecorate %87 RelaxedPrecision 
                                                      OpDecorate %90 RelaxedPrecision 
                                                      OpDecorate %94 RelaxedPrecision 
                                                      OpDecorate %95 RelaxedPrecision 
                                                      OpDecorate %100 RelaxedPrecision 
                                                      OpDecorate %102 RelaxedPrecision 
                                                      OpDecorate %107 RelaxedPrecision 
                                                      OpDecorate %116 RelaxedPrecision 
                                                      OpDecorate %117 RelaxedPrecision 
                                                      OpDecorate %119 RelaxedPrecision 
                                                      OpDecorate %120 RelaxedPrecision 
                                                      OpDecorate %127 RelaxedPrecision 
                                                      OpDecorate %128 RelaxedPrecision 
                                                      OpDecorate %131 RelaxedPrecision 
                                                      OpDecorate %133 RelaxedPrecision 
                                                      OpDecorate %134 RelaxedPrecision 
                                                      OpDecorate %135 RelaxedPrecision 
                                                      OpDecorate %138 RelaxedPrecision 
                                                      OpDecorate %139 RelaxedPrecision 
                                                      OpDecorate %140 RelaxedPrecision 
                                                      OpDecorate %141 RelaxedPrecision 
                                                      OpDecorate %173 RelaxedPrecision 
                                                      OpDecorate %174 RelaxedPrecision 
                                                      OpDecorate %177 RelaxedPrecision 
                                                      OpDecorate %178 RelaxedPrecision 
                                                      OpDecorate %179 RelaxedPrecision 
                                                      OpDecorate %184 RelaxedPrecision 
                                                      OpDecorate %185 RelaxedPrecision 
                                                      OpDecorate %189 RelaxedPrecision 
                                                      OpDecorate %190 RelaxedPrecision 
                                                      OpDecorate %191 RelaxedPrecision 
                                                      OpDecorate %194 RelaxedPrecision 
                                                      OpDecorate %195 RelaxedPrecision 
                                                      OpDecorate %197 RelaxedPrecision 
                                                      OpDecorate %199 RelaxedPrecision 
                                                      OpDecorate %200 RelaxedPrecision 
                                                      OpDecorate %202 RelaxedPrecision 
                                                      OpDecorate %203 RelaxedPrecision 
                                                      OpDecorate %206 RelaxedPrecision 
                                                      OpDecorate %207 RelaxedPrecision 
                                                      OpDecorate %209 RelaxedPrecision 
                                                      OpDecorate %210 RelaxedPrecision 
                                                      OpDecorate %212 RelaxedPrecision 
                                                      OpDecorate %213 RelaxedPrecision 
                                                      OpDecorate %214 RelaxedPrecision 
                                                      OpDecorate %215 RelaxedPrecision 
                                                      OpDecorate %218 RelaxedPrecision 
                                                      OpDecorate %219 RelaxedPrecision 
                                                      OpDecorate %222 RelaxedPrecision 
                                                      OpDecorate %224 RelaxedPrecision 
                                                      OpDecorate %225 RelaxedPrecision 
                                                      OpDecorate %228 RelaxedPrecision 
                                                      OpDecorate %229 RelaxedPrecision 
                                                      OpDecorate %232 RelaxedPrecision 
                                                      OpDecorate %233 RelaxedPrecision 
                                                      OpDecorate %234 RelaxedPrecision 
                                                      OpDecorate %237 RelaxedPrecision 
                                                      OpDecorate %239 RelaxedPrecision 
                                                      OpDecorate %240 RelaxedPrecision 
                                                      OpDecorate %243 RelaxedPrecision 
                                                      OpDecorate %245 RelaxedPrecision 
                                                      OpDecorate %246 RelaxedPrecision 
                                                      OpDecorate %250 RelaxedPrecision 
                                                      OpDecorate %251 RelaxedPrecision 
                                                      OpDecorate %252 RelaxedPrecision 
                                                      OpDecorate %255 RelaxedPrecision 
                                                      OpDecorate %256 RelaxedPrecision 
                                                      OpDecorate %257 RelaxedPrecision 
                                                      OpDecorate %259 RelaxedPrecision 
                                                      OpDecorate %260 RelaxedPrecision 
                                                      OpDecorate %261 RelaxedPrecision 
                                                      OpDecorate %262 RelaxedPrecision 
                                                      OpDecorate %264 RelaxedPrecision 
                                                      OpDecorate %265 RelaxedPrecision 
                                                      OpDecorate %266 RelaxedPrecision 
                                                      OpDecorate %267 RelaxedPrecision 
                                                      OpDecorate %268 RelaxedPrecision 
                                                      OpDecorate %270 RelaxedPrecision 
                                                      OpDecorate %271 RelaxedPrecision 
                                                      OpDecorate %272 RelaxedPrecision 
                                                      OpDecorate %273 RelaxedPrecision 
                                                      OpDecorate %274 RelaxedPrecision 
                                                      OpDecorate %275 RelaxedPrecision 
                                                      OpDecorate %276 RelaxedPrecision 
                                                      OpDecorate %277 RelaxedPrecision 
                                                      OpDecorate %278 RelaxedPrecision 
                                                      OpDecorate %281 RelaxedPrecision 
                                                      OpDecorate %284 RelaxedPrecision 
                                                      OpDecorate %284 DescriptorSet 284 
                                                      OpDecorate %284 Binding 284 
                                                      OpDecorate %285 RelaxedPrecision 
                                                      OpDecorate %288 RelaxedPrecision 
                                                      OpDecorate %288 DescriptorSet 288 
                                                      OpDecorate %288 Binding 288 
                                                      OpDecorate %289 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD0 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD0 Location 293 
                                                      OpDecorate %294 RelaxedPrecision 
                                                      OpDecorate %295 RelaxedPrecision 
                                                      OpDecorate %296 RelaxedPrecision 
                                                      OpDecorate %297 RelaxedPrecision 
                                                      OpDecorate %300 RelaxedPrecision 
                                                      OpDecorate %301 RelaxedPrecision 
                                                      OpDecorate %302 RelaxedPrecision 
                                                      OpDecorate %303 RelaxedPrecision 
                                                      OpDecorate %304 RelaxedPrecision 
                                                      OpDecorate %306 RelaxedPrecision 
                                                      OpDecorate %307 RelaxedPrecision 
                                                      OpDecorate %308 RelaxedPrecision 
                                                      OpDecorate %309 RelaxedPrecision 
                                                      OpDecorate %310 RelaxedPrecision 
                                                      OpDecorate %311 RelaxedPrecision 
                                                      OpDecorate %312 RelaxedPrecision 
                                                      OpDecorate %323 RelaxedPrecision 
                                                      OpDecorate %329 RelaxedPrecision 
                                                      OpDecorate %335 RelaxedPrecision 
                                                      OpDecorate %340 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD3 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD3 Location 341 
                                                      OpDecorate %342 RelaxedPrecision 
                                                      OpDecorate %343 RelaxedPrecision 
                                                      OpDecorate %344 RelaxedPrecision 
                                                      OpDecorate %346 RelaxedPrecision 
                                                      OpDecorate %348 RelaxedPrecision 
                                                      OpDecorate %349 RelaxedPrecision 
                                                      OpDecorate %366 RelaxedPrecision 
                                                      OpDecorate %366 Location 366 
                                                      OpDecorate %367 RelaxedPrecision 
                                               %2 = OpTypeVoid 
                                               %3 = OpTypeFunction %2 
                                               %6 = OpTypeFloat 32 
                                               %7 = OpTypeVector %6 3 
                                               %8 = OpTypePointer Private %7 
                                Private f32_3* %9 = OpVariable Private 
                                              %10 = OpTypePointer Input %7 
                        Input f32_3* vs_TEXCOORD2 = OpVariable Input 
                                              %14 = OpTypeVector %6 4 
                                              %15 = OpTypeStruct %7 %14 %14 %14 %14 %14 %14 %14 %6 %14 %14 %6 %6 %6 
                                              %16 = OpTypePointer Uniform %15 
Uniform struct {f32_3; f32_4; f32_4; f32_4; f32_4; f32_4; f32_4; f32_4; f32; f32_4; f32_4; f32; f32; f32;}* %17 = OpVariable Uniform 
                                              %18 = OpTypeInt 32 1 
                                          i32 %19 = OpConstant 0 
                                              %20 = OpTypePointer Uniform %7 
                                              %24 = OpTypePointer Private %6 
                                 Private f32* %25 = OpVariable Private 
                                              %31 = OpTypePointer Private %14 
                               Private f32_4* %32 = OpVariable Private 
                                          i32 %37 = OpConstant 1 
                                              %38 = OpTypePointer Uniform %14 
                                 Private f32* %45 = OpVariable Private 
                        Input f32_3* vs_TEXCOORD1 = OpVariable Input 
                               Private f32_3* %66 = OpVariable Private 
                                              %75 = OpTypeInt 32 0 
                                          u32 %76 = OpConstant 0 
                                          u32 %83 = OpConstant 1 
                                              %85 = OpTypeVector %6 2 
                                          f32 %88 = OpConstant 3.674022E-40 
                                        f32_2 %89 = OpConstantComposite %88 %88 
                                          i32 %97 = OpConstant 8 
                                              %98 = OpTypePointer Uniform %6 
                                         f32 %101 = OpConstant 3.674022E-40 
                                         i32 %114 = OpConstant 13 
                                         f32 %118 = OpConstant 3.674022E-40 
                                         f32 %124 = OpConstant 3.674022E-40 
                                Private f32* %131 = OpVariable Private 
                                Private f32* %136 = OpVariable Private 
                                         f32 %142 = OpConstant 3.674022E-40 
                                         f32 %156 = OpConstant 3.674022E-40 
                                         f32 %158 = OpConstant 3.674022E-40 
                                         i32 %171 = OpConstant 5 
                                         i32 %175 = OpConstant 6 
                                         i32 %187 = OpConstant 12 
                                         i32 %192 = OpConstant 11 
                              Private f32_3* %197 = OpVariable Private 
                                         i32 %248 = OpConstant 9 
                                         i32 %253 = OpConstant 10 
                              Private f32_3* %281 = OpVariable Private 
                                             %282 = OpTypeImage %6 Dim2D 0 0 0 1 Unknown 
                                             %283 = OpTypePointer UniformConstant %282 
        UniformConstant read_only Texture2D* %284 = OpVariable UniformConstant 
                                             %286 = OpTypeSampler 
                                             %287 = OpTypePointer UniformConstant %286 
                    UniformConstant sampler* %288 = OpVariable UniformConstant 
                                             %290 = OpTypeSampledImage %282 
                                             %292 = OpTypePointer Input %85 
                        Input f32_2* vs_TEXCOORD0 = OpVariable Input 
                                         i32 %298 = OpConstant 7 
                              Private f32_3* %303 = OpVariable Private 
                              Private f32_4* %315 = OpVariable Private 
                                         u32 %319 = OpConstant 3 
                                         i32 %321 = OpConstant 2 
                                         i32 %327 = OpConstant 3 
                                         i32 %333 = OpConstant 4 
                                         u32 %338 = OpConstant 2 
                        Input f32_3* vs_TEXCOORD3 = OpVariable Input 
                                       f32_3 %345 = OpConstantComposite %88 %88 %88 
                              Private f32_3* %347 = OpVariable Private 
                                         f32 %351 = OpConstant 3.674022E-40 
                                       f32_3 %352 = OpConstantComposite %351 %351 %351 
                                         f32 %357 = OpConstant 3.674022E-40 
                                       f32_3 %358 = OpConstantComposite %357 %357 %357 
                                         f32 %360 = OpConstant 3.674022E-40 
                                       f32_3 %361 = OpConstantComposite %360 %360 %360 
                                             %365 = OpTypePointer Output %14 
                               Output f32_4* %366 = OpVariable Output 
                                             %374 = OpTypePointer Output %6 
                                          void %4 = OpFunction None %3 
                                               %5 = OpLabel 
                                        f32_3 %12 = OpLoad vs_TEXCOORD2 
                                        f32_3 %13 = OpFNegate %12 
                               Uniform f32_3* %21 = OpAccessChain %17 %19 
                                        f32_3 %22 = OpLoad %21 
                                        f32_3 %23 = OpFAdd %13 %22 
                                                      OpStore %9 %23 
                                        f32_3 %26 = OpLoad %9 
                                        f32_3 %27 = OpLoad %9 
                                          f32 %28 = OpDot %26 %27 
                                                      OpStore %25 %28 
                                          f32 %29 = OpLoad %25 
                                          f32 %30 = OpExtInst %1 32 %29 
                                                      OpStore %25 %30 
                                        f32_3 %33 = OpLoad %9 
                                          f32 %34 = OpLoad %25 
                                        f32_3 %35 = OpCompositeConstruct %34 %34 %34 
                                        f32_3 %36 = OpFMul %33 %35 
                               Uniform f32_4* %39 = OpAccessChain %17 %37 
                                        f32_4 %40 = OpLoad %39 
                                        f32_3 %41 = OpVectorShuffle %40 %40 0 1 2 
                                        f32_3 %42 = OpFAdd %36 %41 
                                        f32_4 %43 = OpLoad %32 
                                        f32_4 %44 = OpVectorShuffle %43 %42 4 5 6 3 
                                                      OpStore %32 %44 
                                        f32_4 %46 = OpLoad %32 
                                        f32_3 %47 = OpVectorShuffle %46 %46 0 1 2 
                                        f32_4 %48 = OpLoad %32 
                                        f32_3 %49 = OpVectorShuffle %48 %48 0 1 2 
                                          f32 %50 = OpDot %47 %49 
                                                      OpStore %45 %50 
                                          f32 %51 = OpLoad %45 
                                          f32 %52 = OpExtInst %1 32 %51 
                                                      OpStore %45 %52 
                                          f32 %53 = OpLoad %45 
                                        f32_3 %54 = OpCompositeConstruct %53 %53 %53 
                                        f32_4 %55 = OpLoad %32 
                                        f32_3 %56 = OpVectorShuffle %55 %55 0 1 2 
                                        f32_3 %57 = OpFMul %54 %56 
                                        f32_4 %58 = OpLoad %32 
                                        f32_4 %59 = OpVectorShuffle %58 %57 4 5 6 3 
                                                      OpStore %32 %59 
                                        f32_3 %61 = OpLoad vs_TEXCOORD1 
                                        f32_3 %62 = OpLoad vs_TEXCOORD1 
                                          f32 %63 = OpDot %61 %62 
                                                      OpStore %45 %63 
                                          f32 %64 = OpLoad %45 
                                          f32 %65 = OpExtInst %1 32 %64 
                                                      OpStore %45 %65 
                                          f32 %67 = OpLoad %45 
                                        f32_3 %68 = OpCompositeConstruct %67 %67 %67 
                                        f32_3 %69 = OpLoad vs_TEXCOORD1 
                                        f32_3 %70 = OpFMul %68 %69 
                                                      OpStore %66 %70 
                                        f32_3 %71 = OpLoad %66 
                                        f32_4 %72 = OpLoad %32 
                                        f32_3 %73 = OpVectorShuffle %72 %72 0 1 2 
                                          f32 %74 = OpDot %71 %73 
                                 Private f32* %77 = OpAccessChain %32 %76 
                                                      OpStore %77 %74 
                                        f32_3 %78 = OpLoad %66 
                               Uniform f32_4* %79 = OpAccessChain %17 %37 
                                        f32_4 %80 = OpLoad %79 
                                        f32_3 %81 = OpVectorShuffle %80 %80 0 1 2 
                                          f32 %82 = OpDot %78 %81 
                                 Private f32* %84 = OpAccessChain %32 %83 
                                                      OpStore %84 %82 
                                        f32_4 %86 = OpLoad %32 
                                        f32_2 %87 = OpVectorShuffle %86 %86 0 1 
                                        f32_2 %90 = OpExtInst %1 40 %87 %89 
                                        f32_4 %91 = OpLoad %32 
                                        f32_4 %92 = OpVectorShuffle %91 %90 4 5 2 3 
                                                      OpStore %32 %92 
                                 Private f32* %93 = OpAccessChain %32 %76 
                                          f32 %94 = OpLoad %93 
                                          f32 %95 = OpExtInst %1 30 %94 
                                 Private f32* %96 = OpAccessChain %9 %76 
                                                      OpStore %96 %95 
                                 Uniform f32* %99 = OpAccessChain %17 %97 
                                         f32 %100 = OpLoad %99 
                                         f32 %102 = OpFMul %100 %101 
                                Private f32* %103 = OpAccessChain %32 %76 
                                                      OpStore %103 %102 
                                Private f32* %104 = OpAccessChain %9 %76 
                                         f32 %105 = OpLoad %104 
                                Private f32* %106 = OpAccessChain %32 %76 
                                         f32 %107 = OpLoad %106 
                                         f32 %108 = OpFMul %105 %107 
                                Private f32* %109 = OpAccessChain %9 %76 
                                                      OpStore %109 %108 
                                Private f32* %110 = OpAccessChain %9 %76 
                                         f32 %111 = OpLoad %110 
                                         f32 %112 = OpExtInst %1 29 %111 
                                Private f32* %113 = OpAccessChain %9 %76 
                                                      OpStore %113 %112 
                                Uniform f32* %115 = OpAccessChain %17 %114 
                                         f32 %116 = OpLoad %115 
                                         f32 %117 = OpFNegate %116 
                                         f32 %119 = OpFMul %117 %118 
                                         f32 %120 = OpFAdd %119 %118 
                                Private f32* %121 = OpAccessChain %32 %76 
                                                      OpStore %121 %120 
                                Private f32* %122 = OpAccessChain %9 %76 
                                         f32 %123 = OpLoad %122 
                                         f32 %125 = OpFMul %123 %124 
                                Private f32* %126 = OpAccessChain %32 %76 
                                         f32 %127 = OpLoad %126 
                                         f32 %128 = OpFNegate %127 
                                         f32 %129 = OpFAdd %125 %128 
                                Private f32* %130 = OpAccessChain %9 %76 
                                                      OpStore %130 %129 
                                Uniform f32* %132 = OpAccessChain %17 %114 
                                         f32 %133 = OpLoad %132 
                                         f32 %134 = OpFMul %133 %118 
                                         f32 %135 = OpFAdd %134 %118 
                                                      OpStore %131 %135 
                                Private f32* %137 = OpAccessChain %32 %76 
                                         f32 %138 = OpLoad %137 
                                         f32 %139 = OpFNegate %138 
                                         f32 %140 = OpLoad %131 
                                         f32 %141 = OpFAdd %139 %140 
                                                      OpStore %136 %141 
                                         f32 %143 = OpLoad %136 
                                         f32 %144 = OpFDiv %142 %143 
                                                      OpStore %136 %144 
                                         f32 %145 = OpLoad %136 
                                Private f32* %146 = OpAccessChain %9 %76 
                                         f32 %147 = OpLoad %146 
                                         f32 %148 = OpFMul %145 %147 
                                Private f32* %149 = OpAccessChain %9 %76 
                                                      OpStore %149 %148 
                                Private f32* %150 = OpAccessChain %9 %76 
                                         f32 %151 = OpLoad %150 
                                         f32 %152 = OpExtInst %1 43 %151 %88 %142 
                                Private f32* %153 = OpAccessChain %9 %76 
                                                      OpStore %153 %152 
                                Private f32* %154 = OpAccessChain %9 %76 
                                         f32 %155 = OpLoad %154 
                                         f32 %157 = OpFMul %155 %156 
                                         f32 %159 = OpFAdd %157 %158 
                                                      OpStore %136 %159 
                                Private f32* %160 = OpAccessChain %9 %76 
                                         f32 %161 = OpLoad %160 
                                Private f32* %162 = OpAccessChain %9 %76 
                                         f32 %163 = OpLoad %162 
                                         f32 %164 = OpFMul %161 %163 
                                Private f32* %165 = OpAccessChain %9 %76 
                                                      OpStore %165 %164 
                                Private f32* %166 = OpAccessChain %9 %76 
                                         f32 %167 = OpLoad %166 
                                         f32 %168 = OpLoad %136 
                                         f32 %169 = OpFMul %167 %168 
                                Private f32* %170 = OpAccessChain %9 %76 
                                                      OpStore %170 %169 
                              Uniform f32_4* %172 = OpAccessChain %17 %171 
                                       f32_4 %173 = OpLoad %172 
                                       f32_3 %174 = OpVectorShuffle %173 %173 0 1 2 
                              Uniform f32_4* %176 = OpAccessChain %17 %175 
                                       f32_4 %177 = OpLoad %176 
                                       f32_3 %178 = OpVectorShuffle %177 %177 0 1 2 
                                       f32_3 %179 = OpFMul %174 %178 
                                       f32_4 %180 = OpLoad %32 
                                       f32_4 %181 = OpVectorShuffle %180 %179 4 1 5 6 
                                                      OpStore %32 %181 
                                       f32_3 %182 = OpLoad %9 
                                       f32_3 %183 = OpVectorShuffle %182 %182 0 0 0 
                                       f32_4 %184 = OpLoad %32 
                                       f32_3 %185 = OpVectorShuffle %184 %184 0 2 3 
                                       f32_3 %186 = OpFMul %183 %185 
                                                      OpStore %9 %186 
                                Uniform f32* %188 = OpAccessChain %17 %187 
                                         f32 %189 = OpLoad %188 
                                         f32 %190 = OpFNegate %189 
                                         f32 %191 = OpFMul %190 %118 
                                Uniform f32* %193 = OpAccessChain %17 %192 
                                         f32 %194 = OpLoad %193 
                                         f32 %195 = OpFAdd %191 %194 
                                Private f32* %196 = OpAccessChain %32 %76 
                                                      OpStore %196 %195 
                                Private f32* %198 = OpAccessChain %32 %76 
                                         f32 %199 = OpLoad %198 
                                         f32 %200 = OpFNegate %199 
                                Private f32* %201 = OpAccessChain %32 %83 
                                         f32 %202 = OpLoad %201 
                                         f32 %203 = OpFAdd %200 %202 
                                Private f32* %204 = OpAccessChain %197 %76 
                                                      OpStore %204 %203 
                                Uniform f32* %205 = OpAccessChain %17 %187 
                                         f32 %206 = OpLoad %205 
                                         f32 %207 = OpFMul %206 %118 
                                Uniform f32* %208 = OpAccessChain %17 %192 
                                         f32 %209 = OpLoad %208 
                                         f32 %210 = OpFAdd %207 %209 
                                                      OpStore %131 %210 
                                Private f32* %211 = OpAccessChain %32 %76 
                                         f32 %212 = OpLoad %211 
                                         f32 %213 = OpFNegate %212 
                                         f32 %214 = OpLoad %131 
                                         f32 %215 = OpFAdd %213 %214 
                                Private f32* %216 = OpAccessChain %32 %76 
                                                      OpStore %216 %215 
                                Private f32* %217 = OpAccessChain %32 %76 
                                         f32 %218 = OpLoad %217 
                                         f32 %219 = OpFDiv %142 %218 
                                Private f32* %220 = OpAccessChain %32 %76 
                                                      OpStore %220 %219 
                                Private f32* %221 = OpAccessChain %32 %76 
                                         f32 %222 = OpLoad %221 
                                Private f32* %223 = OpAccessChain %197 %76 
                                         f32 %224 = OpLoad %223 
                                         f32 %225 = OpFMul %222 %224 
                                Private f32* %226 = OpAccessChain %32 %76 
                                                      OpStore %226 %225 
                                Private f32* %227 = OpAccessChain %32 %76 
                                         f32 %228 = OpLoad %227 
                                         f32 %229 = OpExtInst %1 43 %228 %88 %142 
                                Private f32* %230 = OpAccessChain %32 %76 
                                                      OpStore %230 %229 
                                Private f32* %231 = OpAccessChain %32 %76 
                                         f32 %232 = OpLoad %231 
                                         f32 %233 = OpFMul %232 %156 
                                         f32 %234 = OpFAdd %233 %158 
                                Private f32* %235 = OpAccessChain %197 %76 
                                                      OpStore %235 %234 
                                Private f32* %236 = OpAccessChain %32 %76 
                                         f32 %237 = OpLoad %236 
                                Private f32* %238 = OpAccessChain %32 %76 
                                         f32 %239 = OpLoad %238 
                                         f32 %240 = OpFMul %237 %239 
                                Private f32* %241 = OpAccessChain %32 %76 
                                                      OpStore %241 %240 
                                Private f32* %242 = OpAccessChain %32 %76 
                                         f32 %243 = OpLoad %242 
                                Private f32* %244 = OpAccessChain %197 %76 
                                         f32 %245 = OpLoad %244 
                                         f32 %246 = OpFMul %243 %245 
                                Private f32* %247 = OpAccessChain %32 %76 
                                                      OpStore %247 %246 
                              Uniform f32_4* %249 = OpAccessChain %17 %248 
                                       f32_4 %250 = OpLoad %249 
                                       f32_3 %251 = OpVectorShuffle %250 %250 0 1 2 
                                       f32_3 %252 = OpFNegate %251 
                              Uniform f32_4* %254 = OpAccessChain %17 %253 
                                       f32_4 %255 = OpLoad %254 
                                       f32_3 %256 = OpVectorShuffle %255 %255 0 1 2 
                                       f32_3 %257 = OpFAdd %252 %256 
                                                      OpStore %197 %257 
                              Uniform f32_4* %258 = OpAccessChain %17 %253 
                                       f32_4 %259 = OpLoad %258 
                                       f32_3 %260 = OpVectorShuffle %259 %259 3 3 3 
                                       f32_3 %261 = OpLoad %197 
                                       f32_3 %262 = OpFMul %260 %261 
                              Uniform f32_4* %263 = OpAccessChain %17 %248 
                                       f32_4 %264 = OpLoad %263 
                                       f32_3 %265 = OpVectorShuffle %264 %264 0 1 2 
                                       f32_3 %266 = OpFAdd %262 %265 
                                                      OpStore %197 %266 
                                       f32_3 %267 = OpLoad %197 
                                       f32_3 %268 = OpFNegate %267 
                              Uniform f32_4* %269 = OpAccessChain %17 %248 
                                       f32_4 %270 = OpLoad %269 
                                       f32_3 %271 = OpVectorShuffle %270 %270 0 1 2 
                                       f32_3 %272 = OpFAdd %268 %271 
                                                      OpStore %66 %272 
                                       f32_4 %273 = OpLoad %32 
                                       f32_3 %274 = OpVectorShuffle %273 %273 0 0 0 
                                       f32_3 %275 = OpLoad %66 
                                       f32_3 %276 = OpFMul %274 %275 
                                       f32_3 %277 = OpLoad %197 
                                       f32_3 %278 = OpFAdd %276 %277 
                                       f32_4 %279 = OpLoad %32 
                                       f32_4 %280 = OpVectorShuffle %279 %278 4 5 6 3 
                                                      OpStore %32 %280 
                         read_only Texture2D %285 = OpLoad %284 
                                     sampler %289 = OpLoad %288 
                  read_only Texture2DSampled %291 = OpSampledImage %285 %289 
                                       f32_2 %294 = OpLoad vs_TEXCOORD0 
                                       f32_4 %295 = OpImageSampleImplicitLod %291 %294 
                                       f32_3 %296 = OpVectorShuffle %295 %295 0 1 2 
                                                      OpStore %281 %296 
                                       f32_3 %297 = OpLoad %281 
                              Uniform f32_4* %299 = OpAccessChain %17 %298 
                                       f32_4 %300 = OpLoad %299 
                                       f32_3 %301 = OpVectorShuffle %300 %300 0 1 2 
                                       f32_3 %302 = OpFMul %297 %301 
                                                      OpStore %66 %302 
                                       f32_3 %304 = OpLoad %66 
                              Uniform f32_4* %305 = OpAccessChain %17 %171 
                                       f32_4 %306 = OpLoad %305 
                                       f32_3 %307 = OpVectorShuffle %306 %306 0 1 2 
                                       f32_3 %308 = OpFMul %304 %307 
                                                      OpStore %303 %308 
                                       f32_3 %309 = OpLoad %303 
                                       f32_4 %310 = OpLoad %32 
                                       f32_3 %311 = OpVectorShuffle %310 %310 0 1 2 
                                       f32_3 %312 = OpFMul %309 %311 
                                       f32_3 %313 = OpLoad %9 
                                       f32_3 %314 = OpFAdd %312 %313 
                                                      OpStore %9 %314 
                                       f32_3 %316 = OpLoad vs_TEXCOORD1 
                                       f32_4 %317 = OpLoad %315 
                                       f32_4 %318 = OpVectorShuffle %317 %316 4 5 6 3 
                                                      OpStore %315 %318 
                                Private f32* %320 = OpAccessChain %315 %319 
                                                      OpStore %320 %142 
                              Uniform f32_4* %322 = OpAccessChain %17 %321 
                                       f32_4 %323 = OpLoad %322 
                                       f32_4 %324 = OpLoad %315 
                                         f32 %325 = OpDot %323 %324 
                                Private f32* %326 = OpAccessChain %303 %76 
                                                      OpStore %326 %325 
                              Uniform f32_4* %328 = OpAccessChain %17 %327 
                                       f32_4 %329 = OpLoad %328 
                                       f32_4 %330 = OpLoad %315 
                                         f32 %331 = OpDot %329 %330 
                                Private f32* %332 = OpAccessChain %303 %83 
                                                      OpStore %332 %331 
                              Uniform f32_4* %334 = OpAccessChain %17 %333 
                                       f32_4 %335 = OpLoad %334 
                                       f32_4 %336 = OpLoad %315 
                                         f32 %337 = OpDot %335 %336 
                                Private f32* %339 = OpAccessChain %303 %338 
                                                      OpStore %339 %337 
                                       f32_3 %340 = OpLoad %303 
                                       f32_3 %342 = OpLoad vs_TEXCOORD3 
                                       f32_3 %343 = OpFAdd %340 %342 
                                                      OpStore %303 %343 
                                       f32_3 %344 = OpLoad %303 
                                       f32_3 %346 = OpExtInst %1 40 %344 %345 
                                                      OpStore %303 %346 
                                       f32_3 %348 = OpLoad %303 
                                       f32_3 %349 = OpExtInst %1 30 %348 
                                                      OpStore %347 %349 
                                       f32_3 %350 = OpLoad %347 
                                       f32_3 %353 = OpFMul %350 %352 
                                                      OpStore %347 %353 
                                       f32_3 %354 = OpLoad %347 
                                       f32_3 %355 = OpExtInst %1 29 %354 
                                                      OpStore %347 %355 
                                       f32_3 %356 = OpLoad %347 
                                       f32_3 %359 = OpFMul %356 %358 
                                       f32_3 %362 = OpFAdd %359 %361 
                                                      OpStore %347 %362 
                                       f32_3 %363 = OpLoad %347 
                                       f32_3 %364 = OpExtInst %1 40 %363 %345 
                                                      OpStore %347 %364 
                                       f32_3 %367 = OpLoad %66 
                                       f32_3 %368 = OpLoad %347 
                                       f32_3 %369 = OpFMul %367 %368 
                                       f32_3 %370 = OpLoad %9 
                                       f32_3 %371 = OpFAdd %369 %370 
                                       f32_4 %372 = OpLoad %366 
                                       f32_4 %373 = OpVectorShuffle %372 %371 4 5 6 3 
                                                      OpStore %366 %373 
                                 Output f32* %375 = OpAccessChain %366 %319 
                                                      OpStore %375 %142 
                                                      OpReturn
                                                      OpFunctionEnd
"
}
SubProgram "vulkan hw_tier02 " {
Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" }
"; SPIR-V
; Version: 1.0
; Generator: Khronos Glslang Reference Front End; 6
; Bound: 214
; Schema: 0
                                                      OpCapability Shader 
                                               %1 = OpExtInstImport "GLSL.std.450" 
                                                      OpMemoryModel Logical GLSL450 
                                                      OpEntryPoint Vertex %4 "main" %11 %53 %87 %97 %113 %117 %155 %195 %204 %207 
                                                      OpName vs_TEXCOORD2 "vs_TEXCOORD2" 
                                                      OpName vs_TEXCOORD0 "vs_TEXCOORD0" 
                                                      OpName vs_TEXCOORD1 "vs_TEXCOORD1" 
                                                      OpName vs_TEXCOORD3 "vs_TEXCOORD3" 
                                                      OpName vs_TEXCOORD5 "vs_TEXCOORD5" 
                                                      OpName vs_TEXCOORD6 "vs_TEXCOORD6" 
                                                      OpDecorate %11 Location 11 
                                                      OpDecorate %16 ArrayStride 16 
                                                      OpDecorate %17 ArrayStride 17 
                                                      OpDecorate %18 ArrayStride 18 
                                                      OpMemberDecorate %19 0 RelaxedPrecision 
                                                      OpMemberDecorate %19 0 Offset 19 
                                                      OpMemberDecorate %19 1 RelaxedPrecision 
                                                      OpMemberDecorate %19 1 Offset 19 
                                                      OpMemberDecorate %19 2 RelaxedPrecision 
                                                      OpMemberDecorate %19 2 Offset 19 
                                                      OpMemberDecorate %19 3 RelaxedPrecision 
                                                      OpMemberDecorate %19 3 Offset 19 
                                                      OpMemberDecorate %19 4 Offset 19 
                                                      OpMemberDecorate %19 5 Offset 19 
                                                      OpMemberDecorate %19 6 Offset 19 
                                                      OpMemberDecorate %19 7 Offset 19 
                                                      OpDecorate %19 Block 
                                                      OpDecorate %21 DescriptorSet 21 
                                                      OpDecorate %21 Binding 21 
                                                      OpDecorate vs_TEXCOORD2 Location 53 
                                                      OpMemberDecorate %85 0 BuiltIn 85 
                                                      OpMemberDecorate %85 1 BuiltIn 85 
                                                      OpMemberDecorate %85 2 BuiltIn 85 
                                                      OpDecorate %85 Block 
                                                      OpDecorate %97 Location 97 
                                                      OpDecorate vs_TEXCOORD0 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD0 Location 113 
                                                      OpDecorate %117 Location 117 
                                                      OpDecorate vs_TEXCOORD1 Location 155 
                                                      OpDecorate %158 RelaxedPrecision 
                                                      OpDecorate %169 RelaxedPrecision 
                                                      OpDecorate %170 RelaxedPrecision 
                                                      OpDecorate %172 RelaxedPrecision 
                                                      OpDecorate %179 RelaxedPrecision 
                                                      OpDecorate %181 RelaxedPrecision 
                                                      OpDecorate %182 RelaxedPrecision 
                                                      OpDecorate %183 RelaxedPrecision 
                                                      OpDecorate %186 RelaxedPrecision 
                                                      OpDecorate %187 RelaxedPrecision 
                                                      OpDecorate %188 RelaxedPrecision 
                                                      OpDecorate %191 RelaxedPrecision 
                                                      OpDecorate %192 RelaxedPrecision 
                                                      OpDecorate %193 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD3 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD3 Location 195 
                                                      OpDecorate %197 RelaxedPrecision 
                                                      OpDecorate %198 RelaxedPrecision 
                                                      OpDecorate %199 RelaxedPrecision 
                                                      OpDecorate %200 RelaxedPrecision 
                                                      OpDecorate %201 RelaxedPrecision 
                                                      OpDecorate %202 RelaxedPrecision 
                                                      OpDecorate %203 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD5 Location 204 
                                                      OpDecorate vs_TEXCOORD6 Location 207 
                                               %2 = OpTypeVoid 
                                               %3 = OpTypeFunction %2 
                                               %6 = OpTypeFloat 32 
                                               %7 = OpTypeVector %6 4 
                                               %8 = OpTypePointer Private %7 
                                Private f32_4* %9 = OpVariable Private 
                                              %10 = OpTypePointer Input %7 
                                 Input f32_4* %11 = OpVariable Input 
                                              %14 = OpTypeInt 32 0 
                                          u32 %15 = OpConstant 4 
                                              %16 = OpTypeArray %7 %15 
                                              %17 = OpTypeArray %7 %15 
                                              %18 = OpTypeArray %7 %15 
                                              %19 = OpTypeStruct %7 %7 %7 %7 %16 %17 %18 %7 
                                              %20 = OpTypePointer Uniform %19 
Uniform struct {f32_4; f32_4; f32_4; f32_4; f32_4[4]; f32_4[4]; f32_4[4]; f32_4;}* %21 = OpVariable Uniform 
                                              %22 = OpTypeInt 32 1 
                                          i32 %23 = OpConstant 4 
                                          i32 %24 = OpConstant 1 
                                              %25 = OpTypePointer Uniform %7 
                                          i32 %29 = OpConstant 0 
                                          i32 %37 = OpConstant 2 
                               Private f32_4* %45 = OpVariable Private 
                                          i32 %47 = OpConstant 3 
                                              %51 = OpTypeVector %6 3 
                                              %52 = OpTypePointer Output %51 
                       Output f32_3* vs_TEXCOORD2 = OpVariable Output 
                                          i32 %65 = OpConstant 6 
                                          u32 %83 = OpConstant 1 
                                              %84 = OpTypeArray %6 %83 
                                              %85 = OpTypeStruct %7 %6 %84 
                                              %86 = OpTypePointer Output %85 
         Output struct {f32_4; f32; f32[1];}* %87 = OpVariable Output 
                                              %95 = OpTypePointer Output %7 
                                 Input f32_4* %97 = OpVariable Input 
                                              %98 = OpTypeVector %6 2 
                                         i32 %101 = OpConstant 7 
                                             %112 = OpTypePointer Output %98 
                       Output f32_2* vs_TEXCOORD0 = OpVariable Output 
                                             %116 = OpTypePointer Input %51 
                                Input f32_3* %117 = OpVariable Input 
                                         i32 %119 = OpConstant 5 
                                         u32 %124 = OpConstant 0 
                                             %125 = OpTypePointer Private %6 
                                         u32 %138 = OpConstant 2 
                                Private f32* %140 = OpVariable Private 
                       Output f32_3* vs_TEXCOORD1 = OpVariable Output 
                                Private f32* %158 = OpVariable Private 
                              Private f32_4* %172 = OpVariable Private 
                                             %178 = OpTypePointer Private %51 
                              Private f32_3* %179 = OpVariable Private 
                       Output f32_3* vs_TEXCOORD3 = OpVariable Output 
                       Output f32_4* vs_TEXCOORD5 = OpVariable Output 
                                         f32 %205 = OpConstant 3.674022E-40 
                                       f32_4 %206 = OpConstantComposite %205 %205 %205 %205 
                       Output f32_4* vs_TEXCOORD6 = OpVariable Output 
                                             %208 = OpTypePointer Output %6 
                                          void %4 = OpFunction None %3 
                                               %5 = OpLabel 
                                        f32_4 %12 = OpLoad %11 
                                        f32_4 %13 = OpVectorShuffle %12 %12 1 1 1 1 
                               Uniform f32_4* %26 = OpAccessChain %21 %23 %24 
                                        f32_4 %27 = OpLoad %26 
                                        f32_4 %28 = OpFMul %13 %27 
                                                      OpStore %9 %28 
                               Uniform f32_4* %30 = OpAccessChain %21 %23 %29 
                                        f32_4 %31 = OpLoad %30 
                                        f32_4 %32 = OpLoad %11 
                                        f32_4 %33 = OpVectorShuffle %32 %32 0 0 0 0 
                                        f32_4 %34 = OpFMul %31 %33 
                                        f32_4 %35 = OpLoad %9 
                                        f32_4 %36 = OpFAdd %34 %35 
                                                      OpStore %9 %36 
                               Uniform f32_4* %38 = OpAccessChain %21 %23 %37 
                                        f32_4 %39 = OpLoad %38 
                                        f32_4 %40 = OpLoad %11 
                                        f32_4 %41 = OpVectorShuffle %40 %40 2 2 2 2 
                                        f32_4 %42 = OpFMul %39 %41 
                                        f32_4 %43 = OpLoad %9 
                                        f32_4 %44 = OpFAdd %42 %43 
                                                      OpStore %9 %44 
                                        f32_4 %46 = OpLoad %9 
                               Uniform f32_4* %48 = OpAccessChain %21 %23 %47 
                                        f32_4 %49 = OpLoad %48 
                                        f32_4 %50 = OpFAdd %46 %49 
                                                      OpStore %45 %50 
                               Uniform f32_4* %54 = OpAccessChain %21 %23 %47 
                                        f32_4 %55 = OpLoad %54 
                                        f32_3 %56 = OpVectorShuffle %55 %55 0 1 2 
                                        f32_4 %57 = OpLoad %11 
                                        f32_3 %58 = OpVectorShuffle %57 %57 3 3 3 
                                        f32_3 %59 = OpFMul %56 %58 
                                        f32_4 %60 = OpLoad %9 
                                        f32_3 %61 = OpVectorShuffle %60 %60 0 1 2 
                                        f32_3 %62 = OpFAdd %59 %61 
                                                      OpStore vs_TEXCOORD2 %62 
                                        f32_4 %63 = OpLoad %45 
                                        f32_4 %64 = OpVectorShuffle %63 %63 1 1 1 1 
                               Uniform f32_4* %66 = OpAccessChain %21 %65 %24 
                                        f32_4 %67 = OpLoad %66 
                                        f32_4 %68 = OpFMul %64 %67 
                                                      OpStore %9 %68 
                               Uniform f32_4* %69 = OpAccessChain %21 %65 %29 
                                        f32_4 %70 = OpLoad %69 
                                        f32_4 %71 = OpLoad %45 
                                        f32_4 %72 = OpVectorShuffle %71 %71 0 0 0 0 
                                        f32_4 %73 = OpFMul %70 %72 
                                        f32_4 %74 = OpLoad %9 
                                        f32_4 %75 = OpFAdd %73 %74 
                                                      OpStore %9 %75 
                               Uniform f32_4* %76 = OpAccessChain %21 %65 %37 
                                        f32_4 %77 = OpLoad %76 
                                        f32_4 %78 = OpLoad %45 
                                        f32_4 %79 = OpVectorShuffle %78 %78 2 2 2 2 
                                        f32_4 %80 = OpFMul %77 %79 
                                        f32_4 %81 = OpLoad %9 
                                        f32_4 %82 = OpFAdd %80 %81 
                                                      OpStore %9 %82 
                               Uniform f32_4* %88 = OpAccessChain %21 %65 %47 
                                        f32_4 %89 = OpLoad %88 
                                        f32_4 %90 = OpLoad %45 
                                        f32_4 %91 = OpVectorShuffle %90 %90 3 3 3 3 
                                        f32_4 %92 = OpFMul %89 %91 
                                        f32_4 %93 = OpLoad %9 
                                        f32_4 %94 = OpFAdd %92 %93 
                                Output f32_4* %96 = OpAccessChain %87 %29 
                                                      OpStore %96 %94 
                                        f32_4 %99 = OpLoad %97 
                                       f32_2 %100 = OpVectorShuffle %99 %99 0 1 
                              Uniform f32_4* %102 = OpAccessChain %21 %101 
                                       f32_4 %103 = OpLoad %102 
                                       f32_2 %104 = OpVectorShuffle %103 %103 0 1 
                                       f32_2 %105 = OpFMul %100 %104 
                              Uniform f32_4* %106 = OpAccessChain %21 %101 
                                       f32_4 %107 = OpLoad %106 
                                       f32_2 %108 = OpVectorShuffle %107 %107 2 3 
                                       f32_2 %109 = OpFAdd %105 %108 
                                       f32_4 %110 = OpLoad %9 
                                       f32_4 %111 = OpVectorShuffle %110 %109 4 5 2 3 
                                                      OpStore %9 %111 
                                       f32_4 %114 = OpLoad %9 
                                       f32_2 %115 = OpVectorShuffle %114 %114 0 1 
                                                      OpStore vs_TEXCOORD0 %115 
                                       f32_3 %118 = OpLoad %117 
                              Uniform f32_4* %120 = OpAccessChain %21 %119 %29 
                                       f32_4 %121 = OpLoad %120 
                                       f32_3 %122 = OpVectorShuffle %121 %121 0 1 2 
                                         f32 %123 = OpDot %118 %122 
                                Private f32* %126 = OpAccessChain %9 %124 
                                                      OpStore %126 %123 
                                       f32_3 %127 = OpLoad %117 
                              Uniform f32_4* %128 = OpAccessChain %21 %119 %24 
                                       f32_4 %129 = OpLoad %128 
                                       f32_3 %130 = OpVectorShuffle %129 %129 0 1 2 
                                         f32 %131 = OpDot %127 %130 
                                Private f32* %132 = OpAccessChain %9 %83 
                                                      OpStore %132 %131 
                                       f32_3 %133 = OpLoad %117 
                              Uniform f32_4* %134 = OpAccessChain %21 %119 %37 
                                       f32_4 %135 = OpLoad %134 
                                       f32_3 %136 = OpVectorShuffle %135 %135 0 1 2 
                                         f32 %137 = OpDot %133 %136 
                                Private f32* %139 = OpAccessChain %9 %138 
                                                      OpStore %139 %137 
                                       f32_4 %141 = OpLoad %9 
                                       f32_3 %142 = OpVectorShuffle %141 %141 0 1 2 
                                       f32_4 %143 = OpLoad %9 
                                       f32_3 %144 = OpVectorShuffle %143 %143 0 1 2 
                                         f32 %145 = OpDot %142 %144 
                                                      OpStore %140 %145 
                                         f32 %146 = OpLoad %140 
                                         f32 %147 = OpExtInst %1 32 %146 
                                                      OpStore %140 %147 
                                         f32 %148 = OpLoad %140 
                                       f32_3 %149 = OpCompositeConstruct %148 %148 %148 
                                       f32_4 %150 = OpLoad %9 
                                       f32_3 %151 = OpVectorShuffle %150 %150 0 1 2 
                                       f32_3 %152 = OpFMul %149 %151 
                                       f32_4 %153 = OpLoad %9 
                                       f32_4 %154 = OpVectorShuffle %153 %152 4 5 6 3 
                                                      OpStore %9 %154 
                                       f32_4 %156 = OpLoad %9 
                                       f32_3 %157 = OpVectorShuffle %156 %156 0 1 2 
                                                      OpStore vs_TEXCOORD1 %157 
                                Private f32* %159 = OpAccessChain %9 %83 
                                         f32 %160 = OpLoad %159 
                                Private f32* %161 = OpAccessChain %9 %83 
                                         f32 %162 = OpLoad %161 
                                         f32 %163 = OpFMul %160 %162 
                                                      OpStore %158 %163 
                                Private f32* %164 = OpAccessChain %9 %124 
                                         f32 %165 = OpLoad %164 
                                Private f32* %166 = OpAccessChain %9 %124 
                                         f32 %167 = OpLoad %166 
                                         f32 %168 = OpFMul %165 %167 
                                         f32 %169 = OpLoad %158 
                                         f32 %170 = OpFNegate %169 
                                         f32 %171 = OpFAdd %168 %170 
                                                      OpStore %158 %171 
                                       f32_4 %173 = OpLoad %9 
                                       f32_4 %174 = OpVectorShuffle %173 %173 1 2 2 0 
                                       f32_4 %175 = OpLoad %9 
                                       f32_4 %176 = OpVectorShuffle %175 %175 0 1 2 2 
                                       f32_4 %177 = OpFMul %174 %176 
                                                      OpStore %172 %177 
                              Uniform f32_4* %180 = OpAccessChain %21 %29 
                                       f32_4 %181 = OpLoad %180 
                                       f32_4 %182 = OpLoad %172 
                                         f32 %183 = OpDot %181 %182 
                                Private f32* %184 = OpAccessChain %179 %124 
                                                      OpStore %184 %183 
                              Uniform f32_4* %185 = OpAccessChain %21 %24 
                                       f32_4 %186 = OpLoad %185 
                                       f32_4 %187 = OpLoad %172 
                                         f32 %188 = OpDot %186 %187 
                                Private f32* %189 = OpAccessChain %179 %83 
                                                      OpStore %189 %188 
                              Uniform f32_4* %190 = OpAccessChain %21 %37 
                                       f32_4 %191 = OpLoad %190 
                                       f32_4 %192 = OpLoad %172 
                                         f32 %193 = OpDot %191 %192 
                                Private f32* %194 = OpAccessChain %179 %138 
                                                      OpStore %194 %193 
                              Uniform f32_4* %196 = OpAccessChain %21 %47 
                                       f32_4 %197 = OpLoad %196 
                                       f32_3 %198 = OpVectorShuffle %197 %197 0 1 2 
                                         f32 %199 = OpLoad %158 
                                       f32_3 %200 = OpCompositeConstruct %199 %199 %199 
                                       f32_3 %201 = OpFMul %198 %200 
                                       f32_3 %202 = OpLoad %179 
                                       f32_3 %203 = OpFAdd %201 %202 
                                                      OpStore vs_TEXCOORD3 %203 
                                                      OpStore vs_TEXCOORD5 %206 
                                                      OpStore vs_TEXCOORD6 %206 
                                 Output f32* %209 = OpAccessChain %87 %29 %83 
                                         f32 %210 = OpLoad %209 
                                         f32 %211 = OpFNegate %210 
                                 Output f32* %212 = OpAccessChain %87 %29 %83 
                                                      OpStore %212 %211 
                                                      OpReturn
                                                      OpFunctionEnd
; SPIR-V
; Version: 1.0
; Generator: Khronos Glslang Reference Front End; 6
; Bound: 377
; Schema: 0
                                                      OpCapability Shader 
                                               %1 = OpExtInstImport "GLSL.std.450" 
                                                      OpMemoryModel Logical GLSL450 
                                                      OpEntryPoint Fragment %4 "main" %11 %60 %293 %341 %366 
                                                      OpExecutionMode %4 OriginUpperLeft 
                                                      OpName vs_TEXCOORD2 "vs_TEXCOORD2" 
                                                      OpName vs_TEXCOORD1 "vs_TEXCOORD1" 
                                                      OpName vs_TEXCOORD0 "vs_TEXCOORD0" 
                                                      OpName vs_TEXCOORD3 "vs_TEXCOORD3" 
                                                      OpDecorate vs_TEXCOORD2 Location 11 
                                                      OpMemberDecorate %15 0 Offset 15 
                                                      OpMemberDecorate %15 1 RelaxedPrecision 
                                                      OpMemberDecorate %15 1 Offset 15 
                                                      OpMemberDecorate %15 2 RelaxedPrecision 
                                                      OpMemberDecorate %15 2 Offset 15 
                                                      OpMemberDecorate %15 3 RelaxedPrecision 
                                                      OpMemberDecorate %15 3 Offset 15 
                                                      OpMemberDecorate %15 4 RelaxedPrecision 
                                                      OpMemberDecorate %15 4 Offset 15 
                                                      OpMemberDecorate %15 5 RelaxedPrecision 
                                                      OpMemberDecorate %15 5 Offset 15 
                                                      OpMemberDecorate %15 6 RelaxedPrecision 
                                                      OpMemberDecorate %15 6 Offset 15 
                                                      OpMemberDecorate %15 7 RelaxedPrecision 
                                                      OpMemberDecorate %15 7 Offset 15 
                                                      OpMemberDecorate %15 8 RelaxedPrecision 
                                                      OpMemberDecorate %15 8 Offset 15 
                                                      OpMemberDecorate %15 9 RelaxedPrecision 
                                                      OpMemberDecorate %15 9 Offset 15 
                                                      OpMemberDecorate %15 10 RelaxedPrecision 
                                                      OpMemberDecorate %15 10 Offset 15 
                                                      OpMemberDecorate %15 11 RelaxedPrecision 
                                                      OpMemberDecorate %15 11 Offset 15 
                                                      OpMemberDecorate %15 12 RelaxedPrecision 
                                                      OpMemberDecorate %15 12 Offset 15 
                                                      OpMemberDecorate %15 13 RelaxedPrecision 
                                                      OpMemberDecorate %15 13 Offset 15 
                                                      OpDecorate %15 Block 
                                                      OpDecorate %17 DescriptorSet 17 
                                                      OpDecorate %17 Binding 17 
                                                      OpDecorate %32 RelaxedPrecision 
                                                      OpDecorate %40 RelaxedPrecision 
                                                      OpDecorate %41 RelaxedPrecision 
                                                      OpDecorate %45 RelaxedPrecision 
                                                      OpDecorate %46 RelaxedPrecision 
                                                      OpDecorate %47 RelaxedPrecision 
                                                      OpDecorate %48 RelaxedPrecision 
                                                      OpDecorate %49 RelaxedPrecision 
                                                      OpDecorate %50 RelaxedPrecision 
                                                      OpDecorate %51 RelaxedPrecision 
                                                      OpDecorate %52 RelaxedPrecision 
                                                      OpDecorate %53 RelaxedPrecision 
                                                      OpDecorate %54 RelaxedPrecision 
                                                      OpDecorate %55 RelaxedPrecision 
                                                      OpDecorate %56 RelaxedPrecision 
                                                      OpDecorate %57 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD1 Location 60 
                                                      OpDecorate %64 RelaxedPrecision 
                                                      OpDecorate %65 RelaxedPrecision 
                                                      OpDecorate %66 RelaxedPrecision 
                                                      OpDecorate %67 RelaxedPrecision 
                                                      OpDecorate %71 RelaxedPrecision 
                                                      OpDecorate %72 RelaxedPrecision 
                                                      OpDecorate %73 RelaxedPrecision 
                                                      OpDecorate %74 RelaxedPrecision 
                                                      OpDecorate %78 RelaxedPrecision 
                                                      OpDecorate %80 RelaxedPrecision 
                                                      OpDecorate %81 RelaxedPrecision 
                                                      OpDecorate %82 RelaxedPrecision 
                                                      OpDecorate %86 RelaxedPrecision 
                                                      OpDecorate %87 RelaxedPrecision 
                                                      OpDecorate %90 RelaxedPrecision 
                                                      OpDecorate %94 RelaxedPrecision 
                                                      OpDecorate %95 RelaxedPrecision 
                                                      OpDecorate %100 RelaxedPrecision 
                                                      OpDecorate %102 RelaxedPrecision 
                                                      OpDecorate %107 RelaxedPrecision 
                                                      OpDecorate %116 RelaxedPrecision 
                                                      OpDecorate %117 RelaxedPrecision 
                                                      OpDecorate %119 RelaxedPrecision 
                                                      OpDecorate %120 RelaxedPrecision 
                                                      OpDecorate %127 RelaxedPrecision 
                                                      OpDecorate %128 RelaxedPrecision 
                                                      OpDecorate %131 RelaxedPrecision 
                                                      OpDecorate %133 RelaxedPrecision 
                                                      OpDecorate %134 RelaxedPrecision 
                                                      OpDecorate %135 RelaxedPrecision 
                                                      OpDecorate %138 RelaxedPrecision 
                                                      OpDecorate %139 RelaxedPrecision 
                                                      OpDecorate %140 RelaxedPrecision 
                                                      OpDecorate %141 RelaxedPrecision 
                                                      OpDecorate %173 RelaxedPrecision 
                                                      OpDecorate %174 RelaxedPrecision 
                                                      OpDecorate %177 RelaxedPrecision 
                                                      OpDecorate %178 RelaxedPrecision 
                                                      OpDecorate %179 RelaxedPrecision 
                                                      OpDecorate %184 RelaxedPrecision 
                                                      OpDecorate %185 RelaxedPrecision 
                                                      OpDecorate %189 RelaxedPrecision 
                                                      OpDecorate %190 RelaxedPrecision 
                                                      OpDecorate %191 RelaxedPrecision 
                                                      OpDecorate %194 RelaxedPrecision 
                                                      OpDecorate %195 RelaxedPrecision 
                                                      OpDecorate %197 RelaxedPrecision 
                                                      OpDecorate %199 RelaxedPrecision 
                                                      OpDecorate %200 RelaxedPrecision 
                                                      OpDecorate %202 RelaxedPrecision 
                                                      OpDecorate %203 RelaxedPrecision 
                                                      OpDecorate %206 RelaxedPrecision 
                                                      OpDecorate %207 RelaxedPrecision 
                                                      OpDecorate %209 RelaxedPrecision 
                                                      OpDecorate %210 RelaxedPrecision 
                                                      OpDecorate %212 RelaxedPrecision 
                                                      OpDecorate %213 RelaxedPrecision 
                                                      OpDecorate %214 RelaxedPrecision 
                                                      OpDecorate %215 RelaxedPrecision 
                                                      OpDecorate %218 RelaxedPrecision 
                                                      OpDecorate %219 RelaxedPrecision 
                                                      OpDecorate %222 RelaxedPrecision 
                                                      OpDecorate %224 RelaxedPrecision 
                                                      OpDecorate %225 RelaxedPrecision 
                                                      OpDecorate %228 RelaxedPrecision 
                                                      OpDecorate %229 RelaxedPrecision 
                                                      OpDecorate %232 RelaxedPrecision 
                                                      OpDecorate %233 RelaxedPrecision 
                                                      OpDecorate %234 RelaxedPrecision 
                                                      OpDecorate %237 RelaxedPrecision 
                                                      OpDecorate %239 RelaxedPrecision 
                                                      OpDecorate %240 RelaxedPrecision 
                                                      OpDecorate %243 RelaxedPrecision 
                                                      OpDecorate %245 RelaxedPrecision 
                                                      OpDecorate %246 RelaxedPrecision 
                                                      OpDecorate %250 RelaxedPrecision 
                                                      OpDecorate %251 RelaxedPrecision 
                                                      OpDecorate %252 RelaxedPrecision 
                                                      OpDecorate %255 RelaxedPrecision 
                                                      OpDecorate %256 RelaxedPrecision 
                                                      OpDecorate %257 RelaxedPrecision 
                                                      OpDecorate %259 RelaxedPrecision 
                                                      OpDecorate %260 RelaxedPrecision 
                                                      OpDecorate %261 RelaxedPrecision 
                                                      OpDecorate %262 RelaxedPrecision 
                                                      OpDecorate %264 RelaxedPrecision 
                                                      OpDecorate %265 RelaxedPrecision 
                                                      OpDecorate %266 RelaxedPrecision 
                                                      OpDecorate %267 RelaxedPrecision 
                                                      OpDecorate %268 RelaxedPrecision 
                                                      OpDecorate %270 RelaxedPrecision 
                                                      OpDecorate %271 RelaxedPrecision 
                                                      OpDecorate %272 RelaxedPrecision 
                                                      OpDecorate %273 RelaxedPrecision 
                                                      OpDecorate %274 RelaxedPrecision 
                                                      OpDecorate %275 RelaxedPrecision 
                                                      OpDecorate %276 RelaxedPrecision 
                                                      OpDecorate %277 RelaxedPrecision 
                                                      OpDecorate %278 RelaxedPrecision 
                                                      OpDecorate %281 RelaxedPrecision 
                                                      OpDecorate %284 RelaxedPrecision 
                                                      OpDecorate %284 DescriptorSet 284 
                                                      OpDecorate %284 Binding 284 
                                                      OpDecorate %285 RelaxedPrecision 
                                                      OpDecorate %288 RelaxedPrecision 
                                                      OpDecorate %288 DescriptorSet 288 
                                                      OpDecorate %288 Binding 288 
                                                      OpDecorate %289 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD0 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD0 Location 293 
                                                      OpDecorate %294 RelaxedPrecision 
                                                      OpDecorate %295 RelaxedPrecision 
                                                      OpDecorate %296 RelaxedPrecision 
                                                      OpDecorate %297 RelaxedPrecision 
                                                      OpDecorate %300 RelaxedPrecision 
                                                      OpDecorate %301 RelaxedPrecision 
                                                      OpDecorate %302 RelaxedPrecision 
                                                      OpDecorate %303 RelaxedPrecision 
                                                      OpDecorate %304 RelaxedPrecision 
                                                      OpDecorate %306 RelaxedPrecision 
                                                      OpDecorate %307 RelaxedPrecision 
                                                      OpDecorate %308 RelaxedPrecision 
                                                      OpDecorate %309 RelaxedPrecision 
                                                      OpDecorate %310 RelaxedPrecision 
                                                      OpDecorate %311 RelaxedPrecision 
                                                      OpDecorate %312 RelaxedPrecision 
                                                      OpDecorate %323 RelaxedPrecision 
                                                      OpDecorate %329 RelaxedPrecision 
                                                      OpDecorate %335 RelaxedPrecision 
                                                      OpDecorate %340 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD3 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD3 Location 341 
                                                      OpDecorate %342 RelaxedPrecision 
                                                      OpDecorate %343 RelaxedPrecision 
                                                      OpDecorate %344 RelaxedPrecision 
                                                      OpDecorate %346 RelaxedPrecision 
                                                      OpDecorate %348 RelaxedPrecision 
                                                      OpDecorate %349 RelaxedPrecision 
                                                      OpDecorate %366 RelaxedPrecision 
                                                      OpDecorate %366 Location 366 
                                                      OpDecorate %367 RelaxedPrecision 
                                               %2 = OpTypeVoid 
                                               %3 = OpTypeFunction %2 
                                               %6 = OpTypeFloat 32 
                                               %7 = OpTypeVector %6 3 
                                               %8 = OpTypePointer Private %7 
                                Private f32_3* %9 = OpVariable Private 
                                              %10 = OpTypePointer Input %7 
                        Input f32_3* vs_TEXCOORD2 = OpVariable Input 
                                              %14 = OpTypeVector %6 4 
                                              %15 = OpTypeStruct %7 %14 %14 %14 %14 %14 %14 %14 %6 %14 %14 %6 %6 %6 
                                              %16 = OpTypePointer Uniform %15 
Uniform struct {f32_3; f32_4; f32_4; f32_4; f32_4; f32_4; f32_4; f32_4; f32; f32_4; f32_4; f32; f32; f32;}* %17 = OpVariable Uniform 
                                              %18 = OpTypeInt 32 1 
                                          i32 %19 = OpConstant 0 
                                              %20 = OpTypePointer Uniform %7 
                                              %24 = OpTypePointer Private %6 
                                 Private f32* %25 = OpVariable Private 
                                              %31 = OpTypePointer Private %14 
                               Private f32_4* %32 = OpVariable Private 
                                          i32 %37 = OpConstant 1 
                                              %38 = OpTypePointer Uniform %14 
                                 Private f32* %45 = OpVariable Private 
                        Input f32_3* vs_TEXCOORD1 = OpVariable Input 
                               Private f32_3* %66 = OpVariable Private 
                                              %75 = OpTypeInt 32 0 
                                          u32 %76 = OpConstant 0 
                                          u32 %83 = OpConstant 1 
                                              %85 = OpTypeVector %6 2 
                                          f32 %88 = OpConstant 3.674022E-40 
                                        f32_2 %89 = OpConstantComposite %88 %88 
                                          i32 %97 = OpConstant 8 
                                              %98 = OpTypePointer Uniform %6 
                                         f32 %101 = OpConstant 3.674022E-40 
                                         i32 %114 = OpConstant 13 
                                         f32 %118 = OpConstant 3.674022E-40 
                                         f32 %124 = OpConstant 3.674022E-40 
                                Private f32* %131 = OpVariable Private 
                                Private f32* %136 = OpVariable Private 
                                         f32 %142 = OpConstant 3.674022E-40 
                                         f32 %156 = OpConstant 3.674022E-40 
                                         f32 %158 = OpConstant 3.674022E-40 
                                         i32 %171 = OpConstant 5 
                                         i32 %175 = OpConstant 6 
                                         i32 %187 = OpConstant 12 
                                         i32 %192 = OpConstant 11 
                              Private f32_3* %197 = OpVariable Private 
                                         i32 %248 = OpConstant 9 
                                         i32 %253 = OpConstant 10 
                              Private f32_3* %281 = OpVariable Private 
                                             %282 = OpTypeImage %6 Dim2D 0 0 0 1 Unknown 
                                             %283 = OpTypePointer UniformConstant %282 
        UniformConstant read_only Texture2D* %284 = OpVariable UniformConstant 
                                             %286 = OpTypeSampler 
                                             %287 = OpTypePointer UniformConstant %286 
                    UniformConstant sampler* %288 = OpVariable UniformConstant 
                                             %290 = OpTypeSampledImage %282 
                                             %292 = OpTypePointer Input %85 
                        Input f32_2* vs_TEXCOORD0 = OpVariable Input 
                                         i32 %298 = OpConstant 7 
                              Private f32_3* %303 = OpVariable Private 
                              Private f32_4* %315 = OpVariable Private 
                                         u32 %319 = OpConstant 3 
                                         i32 %321 = OpConstant 2 
                                         i32 %327 = OpConstant 3 
                                         i32 %333 = OpConstant 4 
                                         u32 %338 = OpConstant 2 
                        Input f32_3* vs_TEXCOORD3 = OpVariable Input 
                                       f32_3 %345 = OpConstantComposite %88 %88 %88 
                              Private f32_3* %347 = OpVariable Private 
                                         f32 %351 = OpConstant 3.674022E-40 
                                       f32_3 %352 = OpConstantComposite %351 %351 %351 
                                         f32 %357 = OpConstant 3.674022E-40 
                                       f32_3 %358 = OpConstantComposite %357 %357 %357 
                                         f32 %360 = OpConstant 3.674022E-40 
                                       f32_3 %361 = OpConstantComposite %360 %360 %360 
                                             %365 = OpTypePointer Output %14 
                               Output f32_4* %366 = OpVariable Output 
                                             %374 = OpTypePointer Output %6 
                                          void %4 = OpFunction None %3 
                                               %5 = OpLabel 
                                        f32_3 %12 = OpLoad vs_TEXCOORD2 
                                        f32_3 %13 = OpFNegate %12 
                               Uniform f32_3* %21 = OpAccessChain %17 %19 
                                        f32_3 %22 = OpLoad %21 
                                        f32_3 %23 = OpFAdd %13 %22 
                                                      OpStore %9 %23 
                                        f32_3 %26 = OpLoad %9 
                                        f32_3 %27 = OpLoad %9 
                                          f32 %28 = OpDot %26 %27 
                                                      OpStore %25 %28 
                                          f32 %29 = OpLoad %25 
                                          f32 %30 = OpExtInst %1 32 %29 
                                                      OpStore %25 %30 
                                        f32_3 %33 = OpLoad %9 
                                          f32 %34 = OpLoad %25 
                                        f32_3 %35 = OpCompositeConstruct %34 %34 %34 
                                        f32_3 %36 = OpFMul %33 %35 
                               Uniform f32_4* %39 = OpAccessChain %17 %37 
                                        f32_4 %40 = OpLoad %39 
                                        f32_3 %41 = OpVectorShuffle %40 %40 0 1 2 
                                        f32_3 %42 = OpFAdd %36 %41 
                                        f32_4 %43 = OpLoad %32 
                                        f32_4 %44 = OpVectorShuffle %43 %42 4 5 6 3 
                                                      OpStore %32 %44 
                                        f32_4 %46 = OpLoad %32 
                                        f32_3 %47 = OpVectorShuffle %46 %46 0 1 2 
                                        f32_4 %48 = OpLoad %32 
                                        f32_3 %49 = OpVectorShuffle %48 %48 0 1 2 
                                          f32 %50 = OpDot %47 %49 
                                                      OpStore %45 %50 
                                          f32 %51 = OpLoad %45 
                                          f32 %52 = OpExtInst %1 32 %51 
                                                      OpStore %45 %52 
                                          f32 %53 = OpLoad %45 
                                        f32_3 %54 = OpCompositeConstruct %53 %53 %53 
                                        f32_4 %55 = OpLoad %32 
                                        f32_3 %56 = OpVectorShuffle %55 %55 0 1 2 
                                        f32_3 %57 = OpFMul %54 %56 
                                        f32_4 %58 = OpLoad %32 
                                        f32_4 %59 = OpVectorShuffle %58 %57 4 5 6 3 
                                                      OpStore %32 %59 
                                        f32_3 %61 = OpLoad vs_TEXCOORD1 
                                        f32_3 %62 = OpLoad vs_TEXCOORD1 
                                          f32 %63 = OpDot %61 %62 
                                                      OpStore %45 %63 
                                          f32 %64 = OpLoad %45 
                                          f32 %65 = OpExtInst %1 32 %64 
                                                      OpStore %45 %65 
                                          f32 %67 = OpLoad %45 
                                        f32_3 %68 = OpCompositeConstruct %67 %67 %67 
                                        f32_3 %69 = OpLoad vs_TEXCOORD1 
                                        f32_3 %70 = OpFMul %68 %69 
                                                      OpStore %66 %70 
                                        f32_3 %71 = OpLoad %66 
                                        f32_4 %72 = OpLoad %32 
                                        f32_3 %73 = OpVectorShuffle %72 %72 0 1 2 
                                          f32 %74 = OpDot %71 %73 
                                 Private f32* %77 = OpAccessChain %32 %76 
                                                      OpStore %77 %74 
                                        f32_3 %78 = OpLoad %66 
                               Uniform f32_4* %79 = OpAccessChain %17 %37 
                                        f32_4 %80 = OpLoad %79 
                                        f32_3 %81 = OpVectorShuffle %80 %80 0 1 2 
                                          f32 %82 = OpDot %78 %81 
                                 Private f32* %84 = OpAccessChain %32 %83 
                                                      OpStore %84 %82 
                                        f32_4 %86 = OpLoad %32 
                                        f32_2 %87 = OpVectorShuffle %86 %86 0 1 
                                        f32_2 %90 = OpExtInst %1 40 %87 %89 
                                        f32_4 %91 = OpLoad %32 
                                        f32_4 %92 = OpVectorShuffle %91 %90 4 5 2 3 
                                                      OpStore %32 %92 
                                 Private f32* %93 = OpAccessChain %32 %76 
                                          f32 %94 = OpLoad %93 
                                          f32 %95 = OpExtInst %1 30 %94 
                                 Private f32* %96 = OpAccessChain %9 %76 
                                                      OpStore %96 %95 
                                 Uniform f32* %99 = OpAccessChain %17 %97 
                                         f32 %100 = OpLoad %99 
                                         f32 %102 = OpFMul %100 %101 
                                Private f32* %103 = OpAccessChain %32 %76 
                                                      OpStore %103 %102 
                                Private f32* %104 = OpAccessChain %9 %76 
                                         f32 %105 = OpLoad %104 
                                Private f32* %106 = OpAccessChain %32 %76 
                                         f32 %107 = OpLoad %106 
                                         f32 %108 = OpFMul %105 %107 
                                Private f32* %109 = OpAccessChain %9 %76 
                                                      OpStore %109 %108 
                                Private f32* %110 = OpAccessChain %9 %76 
                                         f32 %111 = OpLoad %110 
                                         f32 %112 = OpExtInst %1 29 %111 
                                Private f32* %113 = OpAccessChain %9 %76 
                                                      OpStore %113 %112 
                                Uniform f32* %115 = OpAccessChain %17 %114 
                                         f32 %116 = OpLoad %115 
                                         f32 %117 = OpFNegate %116 
                                         f32 %119 = OpFMul %117 %118 
                                         f32 %120 = OpFAdd %119 %118 
                                Private f32* %121 = OpAccessChain %32 %76 
                                                      OpStore %121 %120 
                                Private f32* %122 = OpAccessChain %9 %76 
                                         f32 %123 = OpLoad %122 
                                         f32 %125 = OpFMul %123 %124 
                                Private f32* %126 = OpAccessChain %32 %76 
                                         f32 %127 = OpLoad %126 
                                         f32 %128 = OpFNegate %127 
                                         f32 %129 = OpFAdd %125 %128 
                                Private f32* %130 = OpAccessChain %9 %76 
                                                      OpStore %130 %129 
                                Uniform f32* %132 = OpAccessChain %17 %114 
                                         f32 %133 = OpLoad %132 
                                         f32 %134 = OpFMul %133 %118 
                                         f32 %135 = OpFAdd %134 %118 
                                                      OpStore %131 %135 
                                Private f32* %137 = OpAccessChain %32 %76 
                                         f32 %138 = OpLoad %137 
                                         f32 %139 = OpFNegate %138 
                                         f32 %140 = OpLoad %131 
                                         f32 %141 = OpFAdd %139 %140 
                                                      OpStore %136 %141 
                                         f32 %143 = OpLoad %136 
                                         f32 %144 = OpFDiv %142 %143 
                                                      OpStore %136 %144 
                                         f32 %145 = OpLoad %136 
                                Private f32* %146 = OpAccessChain %9 %76 
                                         f32 %147 = OpLoad %146 
                                         f32 %148 = OpFMul %145 %147 
                                Private f32* %149 = OpAccessChain %9 %76 
                                                      OpStore %149 %148 
                                Private f32* %150 = OpAccessChain %9 %76 
                                         f32 %151 = OpLoad %150 
                                         f32 %152 = OpExtInst %1 43 %151 %88 %142 
                                Private f32* %153 = OpAccessChain %9 %76 
                                                      OpStore %153 %152 
                                Private f32* %154 = OpAccessChain %9 %76 
                                         f32 %155 = OpLoad %154 
                                         f32 %157 = OpFMul %155 %156 
                                         f32 %159 = OpFAdd %157 %158 
                                                      OpStore %136 %159 
                                Private f32* %160 = OpAccessChain %9 %76 
                                         f32 %161 = OpLoad %160 
                                Private f32* %162 = OpAccessChain %9 %76 
                                         f32 %163 = OpLoad %162 
                                         f32 %164 = OpFMul %161 %163 
                                Private f32* %165 = OpAccessChain %9 %76 
                                                      OpStore %165 %164 
                                Private f32* %166 = OpAccessChain %9 %76 
                                         f32 %167 = OpLoad %166 
                                         f32 %168 = OpLoad %136 
                                         f32 %169 = OpFMul %167 %168 
                                Private f32* %170 = OpAccessChain %9 %76 
                                                      OpStore %170 %169 
                              Uniform f32_4* %172 = OpAccessChain %17 %171 
                                       f32_4 %173 = OpLoad %172 
                                       f32_3 %174 = OpVectorShuffle %173 %173 0 1 2 
                              Uniform f32_4* %176 = OpAccessChain %17 %175 
                                       f32_4 %177 = OpLoad %176 
                                       f32_3 %178 = OpVectorShuffle %177 %177 0 1 2 
                                       f32_3 %179 = OpFMul %174 %178 
                                       f32_4 %180 = OpLoad %32 
                                       f32_4 %181 = OpVectorShuffle %180 %179 4 1 5 6 
                                                      OpStore %32 %181 
                                       f32_3 %182 = OpLoad %9 
                                       f32_3 %183 = OpVectorShuffle %182 %182 0 0 0 
                                       f32_4 %184 = OpLoad %32 
                                       f32_3 %185 = OpVectorShuffle %184 %184 0 2 3 
                                       f32_3 %186 = OpFMul %183 %185 
                                                      OpStore %9 %186 
                                Uniform f32* %188 = OpAccessChain %17 %187 
                                         f32 %189 = OpLoad %188 
                                         f32 %190 = OpFNegate %189 
                                         f32 %191 = OpFMul %190 %118 
                                Uniform f32* %193 = OpAccessChain %17 %192 
                                         f32 %194 = OpLoad %193 
                                         f32 %195 = OpFAdd %191 %194 
                                Private f32* %196 = OpAccessChain %32 %76 
                                                      OpStore %196 %195 
                                Private f32* %198 = OpAccessChain %32 %76 
                                         f32 %199 = OpLoad %198 
                                         f32 %200 = OpFNegate %199 
                                Private f32* %201 = OpAccessChain %32 %83 
                                         f32 %202 = OpLoad %201 
                                         f32 %203 = OpFAdd %200 %202 
                                Private f32* %204 = OpAccessChain %197 %76 
                                                      OpStore %204 %203 
                                Uniform f32* %205 = OpAccessChain %17 %187 
                                         f32 %206 = OpLoad %205 
                                         f32 %207 = OpFMul %206 %118 
                                Uniform f32* %208 = OpAccessChain %17 %192 
                                         f32 %209 = OpLoad %208 
                                         f32 %210 = OpFAdd %207 %209 
                                                      OpStore %131 %210 
                                Private f32* %211 = OpAccessChain %32 %76 
                                         f32 %212 = OpLoad %211 
                                         f32 %213 = OpFNegate %212 
                                         f32 %214 = OpLoad %131 
                                         f32 %215 = OpFAdd %213 %214 
                                Private f32* %216 = OpAccessChain %32 %76 
                                                      OpStore %216 %215 
                                Private f32* %217 = OpAccessChain %32 %76 
                                         f32 %218 = OpLoad %217 
                                         f32 %219 = OpFDiv %142 %218 
                                Private f32* %220 = OpAccessChain %32 %76 
                                                      OpStore %220 %219 
                                Private f32* %221 = OpAccessChain %32 %76 
                                         f32 %222 = OpLoad %221 
                                Private f32* %223 = OpAccessChain %197 %76 
                                         f32 %224 = OpLoad %223 
                                         f32 %225 = OpFMul %222 %224 
                                Private f32* %226 = OpAccessChain %32 %76 
                                                      OpStore %226 %225 
                                Private f32* %227 = OpAccessChain %32 %76 
                                         f32 %228 = OpLoad %227 
                                         f32 %229 = OpExtInst %1 43 %228 %88 %142 
                                Private f32* %230 = OpAccessChain %32 %76 
                                                      OpStore %230 %229 
                                Private f32* %231 = OpAccessChain %32 %76 
                                         f32 %232 = OpLoad %231 
                                         f32 %233 = OpFMul %232 %156 
                                         f32 %234 = OpFAdd %233 %158 
                                Private f32* %235 = OpAccessChain %197 %76 
                                                      OpStore %235 %234 
                                Private f32* %236 = OpAccessChain %32 %76 
                                         f32 %237 = OpLoad %236 
                                Private f32* %238 = OpAccessChain %32 %76 
                                         f32 %239 = OpLoad %238 
                                         f32 %240 = OpFMul %237 %239 
                                Private f32* %241 = OpAccessChain %32 %76 
                                                      OpStore %241 %240 
                                Private f32* %242 = OpAccessChain %32 %76 
                                         f32 %243 = OpLoad %242 
                                Private f32* %244 = OpAccessChain %197 %76 
                                         f32 %245 = OpLoad %244 
                                         f32 %246 = OpFMul %243 %245 
                                Private f32* %247 = OpAccessChain %32 %76 
                                                      OpStore %247 %246 
                              Uniform f32_4* %249 = OpAccessChain %17 %248 
                                       f32_4 %250 = OpLoad %249 
                                       f32_3 %251 = OpVectorShuffle %250 %250 0 1 2 
                                       f32_3 %252 = OpFNegate %251 
                              Uniform f32_4* %254 = OpAccessChain %17 %253 
                                       f32_4 %255 = OpLoad %254 
                                       f32_3 %256 = OpVectorShuffle %255 %255 0 1 2 
                                       f32_3 %257 = OpFAdd %252 %256 
                                                      OpStore %197 %257 
                              Uniform f32_4* %258 = OpAccessChain %17 %253 
                                       f32_4 %259 = OpLoad %258 
                                       f32_3 %260 = OpVectorShuffle %259 %259 3 3 3 
                                       f32_3 %261 = OpLoad %197 
                                       f32_3 %262 = OpFMul %260 %261 
                              Uniform f32_4* %263 = OpAccessChain %17 %248 
                                       f32_4 %264 = OpLoad %263 
                                       f32_3 %265 = OpVectorShuffle %264 %264 0 1 2 
                                       f32_3 %266 = OpFAdd %262 %265 
                                                      OpStore %197 %266 
                                       f32_3 %267 = OpLoad %197 
                                       f32_3 %268 = OpFNegate %267 
                              Uniform f32_4* %269 = OpAccessChain %17 %248 
                                       f32_4 %270 = OpLoad %269 
                                       f32_3 %271 = OpVectorShuffle %270 %270 0 1 2 
                                       f32_3 %272 = OpFAdd %268 %271 
                                                      OpStore %66 %272 
                                       f32_4 %273 = OpLoad %32 
                                       f32_3 %274 = OpVectorShuffle %273 %273 0 0 0 
                                       f32_3 %275 = OpLoad %66 
                                       f32_3 %276 = OpFMul %274 %275 
                                       f32_3 %277 = OpLoad %197 
                                       f32_3 %278 = OpFAdd %276 %277 
                                       f32_4 %279 = OpLoad %32 
                                       f32_4 %280 = OpVectorShuffle %279 %278 4 5 6 3 
                                                      OpStore %32 %280 
                         read_only Texture2D %285 = OpLoad %284 
                                     sampler %289 = OpLoad %288 
                  read_only Texture2DSampled %291 = OpSampledImage %285 %289 
                                       f32_2 %294 = OpLoad vs_TEXCOORD0 
                                       f32_4 %295 = OpImageSampleImplicitLod %291 %294 
                                       f32_3 %296 = OpVectorShuffle %295 %295 0 1 2 
                                                      OpStore %281 %296 
                                       f32_3 %297 = OpLoad %281 
                              Uniform f32_4* %299 = OpAccessChain %17 %298 
                                       f32_4 %300 = OpLoad %299 
                                       f32_3 %301 = OpVectorShuffle %300 %300 0 1 2 
                                       f32_3 %302 = OpFMul %297 %301 
                                                      OpStore %66 %302 
                                       f32_3 %304 = OpLoad %66 
                              Uniform f32_4* %305 = OpAccessChain %17 %171 
                                       f32_4 %306 = OpLoad %305 
                                       f32_3 %307 = OpVectorShuffle %306 %306 0 1 2 
                                       f32_3 %308 = OpFMul %304 %307 
                                                      OpStore %303 %308 
                                       f32_3 %309 = OpLoad %303 
                                       f32_4 %310 = OpLoad %32 
                                       f32_3 %311 = OpVectorShuffle %310 %310 0 1 2 
                                       f32_3 %312 = OpFMul %309 %311 
                                       f32_3 %313 = OpLoad %9 
                                       f32_3 %314 = OpFAdd %312 %313 
                                                      OpStore %9 %314 
                                       f32_3 %316 = OpLoad vs_TEXCOORD1 
                                       f32_4 %317 = OpLoad %315 
                                       f32_4 %318 = OpVectorShuffle %317 %316 4 5 6 3 
                                                      OpStore %315 %318 
                                Private f32* %320 = OpAccessChain %315 %319 
                                                      OpStore %320 %142 
                              Uniform f32_4* %322 = OpAccessChain %17 %321 
                                       f32_4 %323 = OpLoad %322 
                                       f32_4 %324 = OpLoad %315 
                                         f32 %325 = OpDot %323 %324 
                                Private f32* %326 = OpAccessChain %303 %76 
                                                      OpStore %326 %325 
                              Uniform f32_4* %328 = OpAccessChain %17 %327 
                                       f32_4 %329 = OpLoad %328 
                                       f32_4 %330 = OpLoad %315 
                                         f32 %331 = OpDot %329 %330 
                                Private f32* %332 = OpAccessChain %303 %83 
                                                      OpStore %332 %331 
                              Uniform f32_4* %334 = OpAccessChain %17 %333 
                                       f32_4 %335 = OpLoad %334 
                                       f32_4 %336 = OpLoad %315 
                                         f32 %337 = OpDot %335 %336 
                                Private f32* %339 = OpAccessChain %303 %338 
                                                      OpStore %339 %337 
                                       f32_3 %340 = OpLoad %303 
                                       f32_3 %342 = OpLoad vs_TEXCOORD3 
                                       f32_3 %343 = OpFAdd %340 %342 
                                                      OpStore %303 %343 
                                       f32_3 %344 = OpLoad %303 
                                       f32_3 %346 = OpExtInst %1 40 %344 %345 
                                                      OpStore %303 %346 
                                       f32_3 %348 = OpLoad %303 
                                       f32_3 %349 = OpExtInst %1 30 %348 
                                                      OpStore %347 %349 
                                       f32_3 %350 = OpLoad %347 
                                       f32_3 %353 = OpFMul %350 %352 
                                                      OpStore %347 %353 
                                       f32_3 %354 = OpLoad %347 
                                       f32_3 %355 = OpExtInst %1 29 %354 
                                                      OpStore %347 %355 
                                       f32_3 %356 = OpLoad %347 
                                       f32_3 %359 = OpFMul %356 %358 
                                       f32_3 %362 = OpFAdd %359 %361 
                                                      OpStore %347 %362 
                                       f32_3 %363 = OpLoad %347 
                                       f32_3 %364 = OpExtInst %1 40 %363 %345 
                                                      OpStore %347 %364 
                                       f32_3 %367 = OpLoad %66 
                                       f32_3 %368 = OpLoad %347 
                                       f32_3 %369 = OpFMul %367 %368 
                                       f32_3 %370 = OpLoad %9 
                                       f32_3 %371 = OpFAdd %369 %370 
                                       f32_4 %372 = OpLoad %366 
                                       f32_4 %373 = OpVectorShuffle %372 %371 4 5 6 3 
                                                      OpStore %366 %373 
                                 Output f32* %375 = OpAccessChain %366 %319 
                                                      OpStore %375 %142 
                                                      OpReturn
                                                      OpFunctionEnd
"
}
SubProgram "gles3 hw_tier00 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" }
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in highp vec3 in_NORMAL0;
in highp vec4 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out highp vec3 vs_TEXCOORD1;
out highp vec3 vs_TEXCOORD2;
out highp vec4 vs_TEXCOORD5;
out highp vec4 vs_TEXCOORD6;
vec4 u_xlat0;
vec4 u_xlat1;
float u_xlat6;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    vs_TEXCOORD2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
    u_xlat0 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat0;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat0;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat0.xy;
    u_xlat0.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat6 = dot(u_xlat0.xyz, u_xlat0.xyz);
    u_xlat6 = inversesqrt(u_xlat6);
    vs_TEXCOORD1.xyz = vec3(u_xlat6) * u_xlat0.xyz;
    vs_TEXCOORD5 = vec4(0.0, 0.0, 0.0, 0.0);
    vs_TEXCOORD6 = vec4(0.0, 0.0, 0.0, 0.0);
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es
#ifdef GL_EXT_shader_texture_lod
#extension GL_EXT_shader_texture_lod : enable
#endif

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec3 _WorldSpaceCameraPos;
uniform 	mediump vec4 _WorldSpaceLightPos0;
uniform 	vec4 hlslcc_mtx4x4unity_WorldToShadow[16];
uniform 	mediump vec4 _LightShadowData;
uniform 	vec4 unity_ShadowFadeCenterAndType;
uniform 	vec4 hlslcc_mtx4x4unity_MatrixV[4];
uniform 	mediump vec4 _LightColor0;
uniform 	mediump vec4 _SpecColor;
uniform 	mediump vec4 _Color;
uniform 	mediump float _Smoothness;
uniform 	mediump vec4 _HColor;
uniform 	mediump vec4 _SColor;
uniform 	mediump float _RampThreshold;
uniform 	mediump float _RampSmooth;
uniform 	mediump float _SpecSmooth;
UNITY_LOCATION(0) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(1) uniform highp sampler2D _ShadowMapTexture;
UNITY_LOCATION(2) uniform highp sampler2DShadow hlslcc_zcmp_ShadowMapTexture;
in mediump vec2 vs_TEXCOORD0;
in highp vec3 vs_TEXCOORD1;
in highp vec3 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_1;
mediump vec3 u_xlat16_2;
vec3 u_xlat3;
mediump vec3 u_xlat16_3;
float u_xlat4;
mediump vec3 u_xlat16_5;
mediump float u_xlat16_9;
float u_xlat12;
mediump float u_xlat16_13;
void main()
{
    u_xlat0.xyz = (-vs_TEXCOORD2.xyz) + _WorldSpaceCameraPos.xyz;
    u_xlat12 = dot(u_xlat0.xyz, u_xlat0.xyz);
    u_xlat12 = inversesqrt(u_xlat12);
    u_xlat16_1.xyz = u_xlat0.xyz * vec3(u_xlat12) + _WorldSpaceLightPos0.xyz;
    u_xlat16_13 = dot(u_xlat16_1.xyz, u_xlat16_1.xyz);
    u_xlat16_13 = inversesqrt(u_xlat16_13);
    u_xlat16_1.xyz = vec3(u_xlat16_13) * u_xlat16_1.xyz;
    u_xlat16_13 = dot(vs_TEXCOORD1.xyz, vs_TEXCOORD1.xyz);
    u_xlat16_13 = inversesqrt(u_xlat16_13);
    u_xlat16_2.xyz = vec3(u_xlat16_13) * vs_TEXCOORD1.xyz;
    u_xlat16_1.x = dot(u_xlat16_2.xyz, u_xlat16_1.xyz);
    u_xlat16_1.y = dot(u_xlat16_2.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat16_1.xy = max(u_xlat16_1.xy, vec2(0.0, 0.0));
    u_xlat12 = log2(u_xlat16_1.x);
    u_xlat16_1.x = _Smoothness * 128.0;
    u_xlat12 = u_xlat12 * u_xlat16_1.x;
    u_xlat12 = exp2(u_xlat12);
    u_xlat16_1.x = (-_SpecSmooth) * 0.5 + 0.5;
    u_xlat12 = u_xlat12 * 2.0 + (-u_xlat16_1.x);
    u_xlat16_9 = _SpecSmooth * 0.5 + 0.5;
    u_xlat3.x = (-u_xlat16_1.x) + u_xlat16_9;
    u_xlat3.x = float(1.0) / u_xlat3.x;
    u_xlat12 = u_xlat12 * u_xlat3.x;
#ifdef UNITY_ADRENO_ES3
    u_xlat12 = min(max(u_xlat12, 0.0), 1.0);
#else
    u_xlat12 = clamp(u_xlat12, 0.0, 1.0);
#endif
    u_xlat3.x = u_xlat12 * -2.0 + 3.0;
    u_xlat12 = u_xlat12 * u_xlat12;
    u_xlat12 = u_xlat12 * u_xlat3.x;
    u_xlat3.x = hlslcc_mtx4x4unity_MatrixV[0].z;
    u_xlat3.y = hlslcc_mtx4x4unity_MatrixV[1].z;
    u_xlat3.z = hlslcc_mtx4x4unity_MatrixV[2].z;
    u_xlat0.x = dot(u_xlat0.xyz, u_xlat3.xyz);
    u_xlat3.xyz = vs_TEXCOORD2.xyz + (-unity_ShadowFadeCenterAndType.xyz);
    u_xlat4 = dot(u_xlat3.xyz, u_xlat3.xyz);
    u_xlat4 = sqrt(u_xlat4);
    u_xlat4 = (-u_xlat0.x) + u_xlat4;
    u_xlat0.x = unity_ShadowFadeCenterAndType.w * u_xlat4 + u_xlat0.x;
    u_xlat0.x = u_xlat0.x * _LightShadowData.z + _LightShadowData.w;
#ifdef UNITY_ADRENO_ES3
    u_xlat0.x = min(max(u_xlat0.x, 0.0), 1.0);
#else
    u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);
#endif
    u_xlat3.xyz = vs_TEXCOORD2.yyy * hlslcc_mtx4x4unity_WorldToShadow[1].xyz;
    u_xlat3.xyz = hlslcc_mtx4x4unity_WorldToShadow[0].xyz * vs_TEXCOORD2.xxx + u_xlat3.xyz;
    u_xlat3.xyz = hlslcc_mtx4x4unity_WorldToShadow[2].xyz * vs_TEXCOORD2.zzz + u_xlat3.xyz;
    u_xlat3.xyz = u_xlat3.xyz + hlslcc_mtx4x4unity_WorldToShadow[3].xyz;
    vec3 txVec0 = vec3(u_xlat3.xy,u_xlat3.z);
    u_xlat4 = textureLod(hlslcc_zcmp_ShadowMapTexture, txVec0, 0.0);
    u_xlat16_1.x = (-_LightShadowData.x) + 1.0;
    u_xlat16_1.x = u_xlat4 * u_xlat16_1.x + _LightShadowData.x;
    u_xlat16_9 = (-u_xlat16_1.x) + 1.0;
    u_xlat16_1.x = u_xlat0.x * u_xlat16_9 + u_xlat16_1.x;
    u_xlat0.x = u_xlat12 * u_xlat16_1.x;
    u_xlat16_2.xyz = _LightColor0.xyz * _SpecColor.xyz;
    u_xlat0.xyz = u_xlat0.xxx * u_xlat16_2.xyz;
    u_xlat16_9 = (-_RampSmooth) * 0.5 + _RampThreshold;
    u_xlat16_5.x = (-u_xlat16_9) + u_xlat16_1.y;
    u_xlat16_13 = _RampSmooth * 0.5 + _RampThreshold;
    u_xlat16_9 = (-u_xlat16_9) + u_xlat16_13;
    u_xlat16_9 = float(1.0) / u_xlat16_9;
    u_xlat16_5.x = u_xlat16_9 * u_xlat16_5.x;
#ifdef UNITY_ADRENO_ES3
    u_xlat16_5.x = min(max(u_xlat16_5.x, 0.0), 1.0);
#else
    u_xlat16_5.x = clamp(u_xlat16_5.x, 0.0, 1.0);
#endif
    u_xlat16_9 = u_xlat16_5.x * -2.0 + 3.0;
    u_xlat16_5.x = u_xlat16_5.x * u_xlat16_5.x;
    u_xlat16_5.x = u_xlat16_5.x * u_xlat16_9;
    u_xlat16_1.x = u_xlat16_1.x * u_xlat16_5.x;
    u_xlat16_5.xyz = (-_HColor.xyz) + _SColor.xyz;
    u_xlat16_5.xyz = _SColor.www * u_xlat16_5.xyz + _HColor.xyz;
    u_xlat16_2.xyz = (-u_xlat16_5.xyz) + _HColor.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xxx * u_xlat16_2.xyz + u_xlat16_5.xyz;
    u_xlat16_3.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_2.xyz = u_xlat16_3.xyz * _Color.xyz;
    u_xlat16_2.xyz = u_xlat16_2.xyz * _LightColor0.xyz;
    u_xlat0.xyz = u_xlat16_2.xyz * u_xlat16_1.xyz + u_xlat0.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier01 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" }
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in highp vec3 in_NORMAL0;
in highp vec4 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out highp vec3 vs_TEXCOORD1;
out highp vec3 vs_TEXCOORD2;
out highp vec4 vs_TEXCOORD5;
out highp vec4 vs_TEXCOORD6;
vec4 u_xlat0;
vec4 u_xlat1;
float u_xlat6;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    vs_TEXCOORD2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
    u_xlat0 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat0;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat0;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat0.xy;
    u_xlat0.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat6 = dot(u_xlat0.xyz, u_xlat0.xyz);
    u_xlat6 = inversesqrt(u_xlat6);
    vs_TEXCOORD1.xyz = vec3(u_xlat6) * u_xlat0.xyz;
    vs_TEXCOORD5 = vec4(0.0, 0.0, 0.0, 0.0);
    vs_TEXCOORD6 = vec4(0.0, 0.0, 0.0, 0.0);
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es
#ifdef GL_EXT_shader_texture_lod
#extension GL_EXT_shader_texture_lod : enable
#endif

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec3 _WorldSpaceCameraPos;
uniform 	mediump vec4 _WorldSpaceLightPos0;
uniform 	vec4 hlslcc_mtx4x4unity_WorldToShadow[16];
uniform 	mediump vec4 _LightShadowData;
uniform 	vec4 unity_ShadowFadeCenterAndType;
uniform 	vec4 hlslcc_mtx4x4unity_MatrixV[4];
uniform 	mediump vec4 _LightColor0;
uniform 	mediump vec4 _SpecColor;
uniform 	mediump vec4 _Color;
uniform 	mediump float _Smoothness;
uniform 	mediump vec4 _HColor;
uniform 	mediump vec4 _SColor;
uniform 	mediump float _RampThreshold;
uniform 	mediump float _RampSmooth;
uniform 	mediump float _SpecSmooth;
UNITY_LOCATION(0) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(1) uniform highp sampler2D _ShadowMapTexture;
UNITY_LOCATION(2) uniform highp sampler2DShadow hlslcc_zcmp_ShadowMapTexture;
in mediump vec2 vs_TEXCOORD0;
in highp vec3 vs_TEXCOORD1;
in highp vec3 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_1;
mediump vec3 u_xlat16_2;
vec3 u_xlat3;
mediump vec3 u_xlat16_3;
float u_xlat4;
mediump vec3 u_xlat16_5;
mediump float u_xlat16_9;
float u_xlat12;
mediump float u_xlat16_13;
void main()
{
    u_xlat0.xyz = (-vs_TEXCOORD2.xyz) + _WorldSpaceCameraPos.xyz;
    u_xlat12 = dot(u_xlat0.xyz, u_xlat0.xyz);
    u_xlat12 = inversesqrt(u_xlat12);
    u_xlat16_1.xyz = u_xlat0.xyz * vec3(u_xlat12) + _WorldSpaceLightPos0.xyz;
    u_xlat16_13 = dot(u_xlat16_1.xyz, u_xlat16_1.xyz);
    u_xlat16_13 = inversesqrt(u_xlat16_13);
    u_xlat16_1.xyz = vec3(u_xlat16_13) * u_xlat16_1.xyz;
    u_xlat16_13 = dot(vs_TEXCOORD1.xyz, vs_TEXCOORD1.xyz);
    u_xlat16_13 = inversesqrt(u_xlat16_13);
    u_xlat16_2.xyz = vec3(u_xlat16_13) * vs_TEXCOORD1.xyz;
    u_xlat16_1.x = dot(u_xlat16_2.xyz, u_xlat16_1.xyz);
    u_xlat16_1.y = dot(u_xlat16_2.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat16_1.xy = max(u_xlat16_1.xy, vec2(0.0, 0.0));
    u_xlat12 = log2(u_xlat16_1.x);
    u_xlat16_1.x = _Smoothness * 128.0;
    u_xlat12 = u_xlat12 * u_xlat16_1.x;
    u_xlat12 = exp2(u_xlat12);
    u_xlat16_1.x = (-_SpecSmooth) * 0.5 + 0.5;
    u_xlat12 = u_xlat12 * 2.0 + (-u_xlat16_1.x);
    u_xlat16_9 = _SpecSmooth * 0.5 + 0.5;
    u_xlat3.x = (-u_xlat16_1.x) + u_xlat16_9;
    u_xlat3.x = float(1.0) / u_xlat3.x;
    u_xlat12 = u_xlat12 * u_xlat3.x;
#ifdef UNITY_ADRENO_ES3
    u_xlat12 = min(max(u_xlat12, 0.0), 1.0);
#else
    u_xlat12 = clamp(u_xlat12, 0.0, 1.0);
#endif
    u_xlat3.x = u_xlat12 * -2.0 + 3.0;
    u_xlat12 = u_xlat12 * u_xlat12;
    u_xlat12 = u_xlat12 * u_xlat3.x;
    u_xlat3.x = hlslcc_mtx4x4unity_MatrixV[0].z;
    u_xlat3.y = hlslcc_mtx4x4unity_MatrixV[1].z;
    u_xlat3.z = hlslcc_mtx4x4unity_MatrixV[2].z;
    u_xlat0.x = dot(u_xlat0.xyz, u_xlat3.xyz);
    u_xlat3.xyz = vs_TEXCOORD2.xyz + (-unity_ShadowFadeCenterAndType.xyz);
    u_xlat4 = dot(u_xlat3.xyz, u_xlat3.xyz);
    u_xlat4 = sqrt(u_xlat4);
    u_xlat4 = (-u_xlat0.x) + u_xlat4;
    u_xlat0.x = unity_ShadowFadeCenterAndType.w * u_xlat4 + u_xlat0.x;
    u_xlat0.x = u_xlat0.x * _LightShadowData.z + _LightShadowData.w;
#ifdef UNITY_ADRENO_ES3
    u_xlat0.x = min(max(u_xlat0.x, 0.0), 1.0);
#else
    u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);
#endif
    u_xlat3.xyz = vs_TEXCOORD2.yyy * hlslcc_mtx4x4unity_WorldToShadow[1].xyz;
    u_xlat3.xyz = hlslcc_mtx4x4unity_WorldToShadow[0].xyz * vs_TEXCOORD2.xxx + u_xlat3.xyz;
    u_xlat3.xyz = hlslcc_mtx4x4unity_WorldToShadow[2].xyz * vs_TEXCOORD2.zzz + u_xlat3.xyz;
    u_xlat3.xyz = u_xlat3.xyz + hlslcc_mtx4x4unity_WorldToShadow[3].xyz;
    vec3 txVec0 = vec3(u_xlat3.xy,u_xlat3.z);
    u_xlat4 = textureLod(hlslcc_zcmp_ShadowMapTexture, txVec0, 0.0);
    u_xlat16_1.x = (-_LightShadowData.x) + 1.0;
    u_xlat16_1.x = u_xlat4 * u_xlat16_1.x + _LightShadowData.x;
    u_xlat16_9 = (-u_xlat16_1.x) + 1.0;
    u_xlat16_1.x = u_xlat0.x * u_xlat16_9 + u_xlat16_1.x;
    u_xlat0.x = u_xlat12 * u_xlat16_1.x;
    u_xlat16_2.xyz = _LightColor0.xyz * _SpecColor.xyz;
    u_xlat0.xyz = u_xlat0.xxx * u_xlat16_2.xyz;
    u_xlat16_9 = (-_RampSmooth) * 0.5 + _RampThreshold;
    u_xlat16_5.x = (-u_xlat16_9) + u_xlat16_1.y;
    u_xlat16_13 = _RampSmooth * 0.5 + _RampThreshold;
    u_xlat16_9 = (-u_xlat16_9) + u_xlat16_13;
    u_xlat16_9 = float(1.0) / u_xlat16_9;
    u_xlat16_5.x = u_xlat16_9 * u_xlat16_5.x;
#ifdef UNITY_ADRENO_ES3
    u_xlat16_5.x = min(max(u_xlat16_5.x, 0.0), 1.0);
#else
    u_xlat16_5.x = clamp(u_xlat16_5.x, 0.0, 1.0);
#endif
    u_xlat16_9 = u_xlat16_5.x * -2.0 + 3.0;
    u_xlat16_5.x = u_xlat16_5.x * u_xlat16_5.x;
    u_xlat16_5.x = u_xlat16_5.x * u_xlat16_9;
    u_xlat16_1.x = u_xlat16_1.x * u_xlat16_5.x;
    u_xlat16_5.xyz = (-_HColor.xyz) + _SColor.xyz;
    u_xlat16_5.xyz = _SColor.www * u_xlat16_5.xyz + _HColor.xyz;
    u_xlat16_2.xyz = (-u_xlat16_5.xyz) + _HColor.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xxx * u_xlat16_2.xyz + u_xlat16_5.xyz;
    u_xlat16_3.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_2.xyz = u_xlat16_3.xyz * _Color.xyz;
    u_xlat16_2.xyz = u_xlat16_2.xyz * _LightColor0.xyz;
    u_xlat0.xyz = u_xlat16_2.xyz * u_xlat16_1.xyz + u_xlat0.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier02 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" }
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in highp vec3 in_NORMAL0;
in highp vec4 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out highp vec3 vs_TEXCOORD1;
out highp vec3 vs_TEXCOORD2;
out highp vec4 vs_TEXCOORD5;
out highp vec4 vs_TEXCOORD6;
vec4 u_xlat0;
vec4 u_xlat1;
float u_xlat6;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    vs_TEXCOORD2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
    u_xlat0 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat0;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat0;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat0.xy;
    u_xlat0.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat6 = dot(u_xlat0.xyz, u_xlat0.xyz);
    u_xlat6 = inversesqrt(u_xlat6);
    vs_TEXCOORD1.xyz = vec3(u_xlat6) * u_xlat0.xyz;
    vs_TEXCOORD5 = vec4(0.0, 0.0, 0.0, 0.0);
    vs_TEXCOORD6 = vec4(0.0, 0.0, 0.0, 0.0);
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es
#ifdef GL_EXT_shader_texture_lod
#extension GL_EXT_shader_texture_lod : enable
#endif

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec3 _WorldSpaceCameraPos;
uniform 	mediump vec4 _WorldSpaceLightPos0;
uniform 	vec4 hlslcc_mtx4x4unity_WorldToShadow[16];
uniform 	mediump vec4 _LightShadowData;
uniform 	vec4 unity_ShadowFadeCenterAndType;
uniform 	vec4 hlslcc_mtx4x4unity_MatrixV[4];
uniform 	mediump vec4 _LightColor0;
uniform 	mediump vec4 _SpecColor;
uniform 	mediump vec4 _Color;
uniform 	mediump float _Smoothness;
uniform 	mediump vec4 _HColor;
uniform 	mediump vec4 _SColor;
uniform 	mediump float _RampThreshold;
uniform 	mediump float _RampSmooth;
uniform 	mediump float _SpecSmooth;
UNITY_LOCATION(0) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(1) uniform highp sampler2D _ShadowMapTexture;
UNITY_LOCATION(2) uniform highp sampler2DShadow hlslcc_zcmp_ShadowMapTexture;
in mediump vec2 vs_TEXCOORD0;
in highp vec3 vs_TEXCOORD1;
in highp vec3 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_1;
mediump vec3 u_xlat16_2;
vec3 u_xlat3;
mediump vec3 u_xlat16_3;
float u_xlat4;
mediump vec3 u_xlat16_5;
mediump float u_xlat16_9;
float u_xlat12;
mediump float u_xlat16_13;
void main()
{
    u_xlat0.xyz = (-vs_TEXCOORD2.xyz) + _WorldSpaceCameraPos.xyz;
    u_xlat12 = dot(u_xlat0.xyz, u_xlat0.xyz);
    u_xlat12 = inversesqrt(u_xlat12);
    u_xlat16_1.xyz = u_xlat0.xyz * vec3(u_xlat12) + _WorldSpaceLightPos0.xyz;
    u_xlat16_13 = dot(u_xlat16_1.xyz, u_xlat16_1.xyz);
    u_xlat16_13 = inversesqrt(u_xlat16_13);
    u_xlat16_1.xyz = vec3(u_xlat16_13) * u_xlat16_1.xyz;
    u_xlat16_13 = dot(vs_TEXCOORD1.xyz, vs_TEXCOORD1.xyz);
    u_xlat16_13 = inversesqrt(u_xlat16_13);
    u_xlat16_2.xyz = vec3(u_xlat16_13) * vs_TEXCOORD1.xyz;
    u_xlat16_1.x = dot(u_xlat16_2.xyz, u_xlat16_1.xyz);
    u_xlat16_1.y = dot(u_xlat16_2.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat16_1.xy = max(u_xlat16_1.xy, vec2(0.0, 0.0));
    u_xlat12 = log2(u_xlat16_1.x);
    u_xlat16_1.x = _Smoothness * 128.0;
    u_xlat12 = u_xlat12 * u_xlat16_1.x;
    u_xlat12 = exp2(u_xlat12);
    u_xlat16_1.x = (-_SpecSmooth) * 0.5 + 0.5;
    u_xlat12 = u_xlat12 * 2.0 + (-u_xlat16_1.x);
    u_xlat16_9 = _SpecSmooth * 0.5 + 0.5;
    u_xlat3.x = (-u_xlat16_1.x) + u_xlat16_9;
    u_xlat3.x = float(1.0) / u_xlat3.x;
    u_xlat12 = u_xlat12 * u_xlat3.x;
#ifdef UNITY_ADRENO_ES3
    u_xlat12 = min(max(u_xlat12, 0.0), 1.0);
#else
    u_xlat12 = clamp(u_xlat12, 0.0, 1.0);
#endif
    u_xlat3.x = u_xlat12 * -2.0 + 3.0;
    u_xlat12 = u_xlat12 * u_xlat12;
    u_xlat12 = u_xlat12 * u_xlat3.x;
    u_xlat3.x = hlslcc_mtx4x4unity_MatrixV[0].z;
    u_xlat3.y = hlslcc_mtx4x4unity_MatrixV[1].z;
    u_xlat3.z = hlslcc_mtx4x4unity_MatrixV[2].z;
    u_xlat0.x = dot(u_xlat0.xyz, u_xlat3.xyz);
    u_xlat3.xyz = vs_TEXCOORD2.xyz + (-unity_ShadowFadeCenterAndType.xyz);
    u_xlat4 = dot(u_xlat3.xyz, u_xlat3.xyz);
    u_xlat4 = sqrt(u_xlat4);
    u_xlat4 = (-u_xlat0.x) + u_xlat4;
    u_xlat0.x = unity_ShadowFadeCenterAndType.w * u_xlat4 + u_xlat0.x;
    u_xlat0.x = u_xlat0.x * _LightShadowData.z + _LightShadowData.w;
#ifdef UNITY_ADRENO_ES3
    u_xlat0.x = min(max(u_xlat0.x, 0.0), 1.0);
#else
    u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);
#endif
    u_xlat3.xyz = vs_TEXCOORD2.yyy * hlslcc_mtx4x4unity_WorldToShadow[1].xyz;
    u_xlat3.xyz = hlslcc_mtx4x4unity_WorldToShadow[0].xyz * vs_TEXCOORD2.xxx + u_xlat3.xyz;
    u_xlat3.xyz = hlslcc_mtx4x4unity_WorldToShadow[2].xyz * vs_TEXCOORD2.zzz + u_xlat3.xyz;
    u_xlat3.xyz = u_xlat3.xyz + hlslcc_mtx4x4unity_WorldToShadow[3].xyz;
    vec3 txVec0 = vec3(u_xlat3.xy,u_xlat3.z);
    u_xlat4 = textureLod(hlslcc_zcmp_ShadowMapTexture, txVec0, 0.0);
    u_xlat16_1.x = (-_LightShadowData.x) + 1.0;
    u_xlat16_1.x = u_xlat4 * u_xlat16_1.x + _LightShadowData.x;
    u_xlat16_9 = (-u_xlat16_1.x) + 1.0;
    u_xlat16_1.x = u_xlat0.x * u_xlat16_9 + u_xlat16_1.x;
    u_xlat0.x = u_xlat12 * u_xlat16_1.x;
    u_xlat16_2.xyz = _LightColor0.xyz * _SpecColor.xyz;
    u_xlat0.xyz = u_xlat0.xxx * u_xlat16_2.xyz;
    u_xlat16_9 = (-_RampSmooth) * 0.5 + _RampThreshold;
    u_xlat16_5.x = (-u_xlat16_9) + u_xlat16_1.y;
    u_xlat16_13 = _RampSmooth * 0.5 + _RampThreshold;
    u_xlat16_9 = (-u_xlat16_9) + u_xlat16_13;
    u_xlat16_9 = float(1.0) / u_xlat16_9;
    u_xlat16_5.x = u_xlat16_9 * u_xlat16_5.x;
#ifdef UNITY_ADRENO_ES3
    u_xlat16_5.x = min(max(u_xlat16_5.x, 0.0), 1.0);
#else
    u_xlat16_5.x = clamp(u_xlat16_5.x, 0.0, 1.0);
#endif
    u_xlat16_9 = u_xlat16_5.x * -2.0 + 3.0;
    u_xlat16_5.x = u_xlat16_5.x * u_xlat16_5.x;
    u_xlat16_5.x = u_xlat16_5.x * u_xlat16_9;
    u_xlat16_1.x = u_xlat16_1.x * u_xlat16_5.x;
    u_xlat16_5.xyz = (-_HColor.xyz) + _SColor.xyz;
    u_xlat16_5.xyz = _SColor.www * u_xlat16_5.xyz + _HColor.xyz;
    u_xlat16_2.xyz = (-u_xlat16_5.xyz) + _HColor.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xxx * u_xlat16_2.xyz + u_xlat16_5.xyz;
    u_xlat16_3.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_2.xyz = u_xlat16_3.xyz * _Color.xyz;
    u_xlat16_2.xyz = u_xlat16_2.xyz * _LightColor0.xyz;
    u_xlat0.xyz = u_xlat16_2.xyz * u_xlat16_1.xyz + u_xlat0.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "vulkan hw_tier00 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" }
"; SPIR-V
; Version: 1.0
; Generator: Khronos Glslang Reference Front End; 6
; Bound: 160
; Schema: 0
                                                      OpCapability Shader 
                                               %1 = OpExtInstImport "GLSL.std.450" 
                                                      OpMemoryModel Logical GLSL450 
                                                      OpEntryPoint Vertex %4 "main" %11 %52 %85 %95 %110 %114 %144 %150 %153 
                                                      OpName vs_TEXCOORD2 "vs_TEXCOORD2" 
                                                      OpName vs_TEXCOORD0 "vs_TEXCOORD0" 
                                                      OpName vs_TEXCOORD1 "vs_TEXCOORD1" 
                                                      OpName vs_TEXCOORD5 "vs_TEXCOORD5" 
                                                      OpName vs_TEXCOORD6 "vs_TEXCOORD6" 
                                                      OpDecorate %11 Location 11 
                                                      OpDecorate %16 ArrayStride 16 
                                                      OpDecorate %17 ArrayStride 17 
                                                      OpDecorate %18 ArrayStride 18 
                                                      OpMemberDecorate %19 0 Offset 19 
                                                      OpMemberDecorate %19 1 Offset 19 
                                                      OpMemberDecorate %19 2 Offset 19 
                                                      OpMemberDecorate %19 3 Offset 19 
                                                      OpDecorate %19 Block 
                                                      OpDecorate %21 DescriptorSet 21 
                                                      OpDecorate %21 Binding 21 
                                                      OpDecorate vs_TEXCOORD2 Location 52 
                                                      OpMemberDecorate %83 0 BuiltIn 83 
                                                      OpMemberDecorate %83 1 BuiltIn 83 
                                                      OpMemberDecorate %83 2 BuiltIn 83 
                                                      OpDecorate %83 Block 
                                                      OpDecorate %95 Location 95 
                                                      OpDecorate vs_TEXCOORD0 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD0 Location 110 
                                                      OpDecorate %114 Location 114 
                                                      OpDecorate vs_TEXCOORD1 Location 144 
                                                      OpDecorate vs_TEXCOORD5 Location 150 
                                                      OpDecorate vs_TEXCOORD6 Location 153 
                                               %2 = OpTypeVoid 
                                               %3 = OpTypeFunction %2 
                                               %6 = OpTypeFloat 32 
                                               %7 = OpTypeVector %6 4 
                                               %8 = OpTypePointer Private %7 
                                Private f32_4* %9 = OpVariable Private 
                                              %10 = OpTypePointer Input %7 
                                 Input f32_4* %11 = OpVariable Input 
                                              %14 = OpTypeInt 32 0 
                                          u32 %15 = OpConstant 4 
                                              %16 = OpTypeArray %7 %15 
                                              %17 = OpTypeArray %7 %15 
                                              %18 = OpTypeArray %7 %15 
                                              %19 = OpTypeStruct %16 %17 %18 %7 
                                              %20 = OpTypePointer Uniform %19 
Uniform struct {f32_4[4]; f32_4[4]; f32_4[4]; f32_4;}* %21 = OpVariable Uniform 
                                              %22 = OpTypeInt 32 1 
                                          i32 %23 = OpConstant 0 
                                          i32 %24 = OpConstant 1 
                                              %25 = OpTypePointer Uniform %7 
                                          i32 %36 = OpConstant 2 
                               Private f32_4* %44 = OpVariable Private 
                                          i32 %46 = OpConstant 3 
                                              %50 = OpTypeVector %6 3 
                                              %51 = OpTypePointer Output %50 
                       Output f32_3* vs_TEXCOORD2 = OpVariable Output 
                                          u32 %81 = OpConstant 1 
                                              %82 = OpTypeArray %6 %81 
                                              %83 = OpTypeStruct %7 %6 %82 
                                              %84 = OpTypePointer Output %83 
         Output struct {f32_4; f32; f32[1];}* %85 = OpVariable Output 
                                              %93 = OpTypePointer Output %7 
                                 Input f32_4* %95 = OpVariable Input 
                                              %96 = OpTypeVector %6 2 
                                             %109 = OpTypePointer Output %96 
                       Output f32_2* vs_TEXCOORD0 = OpVariable Output 
                                             %113 = OpTypePointer Input %50 
                                Input f32_3* %114 = OpVariable Input 
                                         u32 %120 = OpConstant 0 
                                             %121 = OpTypePointer Private %6 
                                         u32 %134 = OpConstant 2 
                                Private f32* %136 = OpVariable Private 
                       Output f32_3* vs_TEXCOORD1 = OpVariable Output 
                       Output f32_4* vs_TEXCOORD5 = OpVariable Output 
                                         f32 %151 = OpConstant 3.674022E-40 
                                       f32_4 %152 = OpConstantComposite %151 %151 %151 %151 
                       Output f32_4* vs_TEXCOORD6 = OpVariable Output 
                                             %154 = OpTypePointer Output %6 
                                          void %4 = OpFunction None %3 
                                               %5 = OpLabel 
                                        f32_4 %12 = OpLoad %11 
                                        f32_4 %13 = OpVectorShuffle %12 %12 1 1 1 1 
                               Uniform f32_4* %26 = OpAccessChain %21 %23 %24 
                                        f32_4 %27 = OpLoad %26 
                                        f32_4 %28 = OpFMul %13 %27 
                                                      OpStore %9 %28 
                               Uniform f32_4* %29 = OpAccessChain %21 %23 %23 
                                        f32_4 %30 = OpLoad %29 
                                        f32_4 %31 = OpLoad %11 
                                        f32_4 %32 = OpVectorShuffle %31 %31 0 0 0 0 
                                        f32_4 %33 = OpFMul %30 %32 
                                        f32_4 %34 = OpLoad %9 
                                        f32_4 %35 = OpFAdd %33 %34 
                                                      OpStore %9 %35 
                               Uniform f32_4* %37 = OpAccessChain %21 %23 %36 
                                        f32_4 %38 = OpLoad %37 
                                        f32_4 %39 = OpLoad %11 
                                        f32_4 %40 = OpVectorShuffle %39 %39 2 2 2 2 
                                        f32_4 %41 = OpFMul %38 %40 
                                        f32_4 %42 = OpLoad %9 
                                        f32_4 %43 = OpFAdd %41 %42 
                                                      OpStore %9 %43 
                                        f32_4 %45 = OpLoad %9 
                               Uniform f32_4* %47 = OpAccessChain %21 %23 %46 
                                        f32_4 %48 = OpLoad %47 
                                        f32_4 %49 = OpFAdd %45 %48 
                                                      OpStore %44 %49 
                               Uniform f32_4* %53 = OpAccessChain %21 %23 %46 
                                        f32_4 %54 = OpLoad %53 
                                        f32_3 %55 = OpVectorShuffle %54 %54 0 1 2 
                                        f32_4 %56 = OpLoad %11 
                                        f32_3 %57 = OpVectorShuffle %56 %56 3 3 3 
                                        f32_3 %58 = OpFMul %55 %57 
                                        f32_4 %59 = OpLoad %9 
                                        f32_3 %60 = OpVectorShuffle %59 %59 0 1 2 
                                        f32_3 %61 = OpFAdd %58 %60 
                                                      OpStore vs_TEXCOORD2 %61 
                                        f32_4 %62 = OpLoad %44 
                                        f32_4 %63 = OpVectorShuffle %62 %62 1 1 1 1 
                               Uniform f32_4* %64 = OpAccessChain %21 %36 %24 
                                        f32_4 %65 = OpLoad %64 
                                        f32_4 %66 = OpFMul %63 %65 
                                                      OpStore %9 %66 
                               Uniform f32_4* %67 = OpAccessChain %21 %36 %23 
                                        f32_4 %68 = OpLoad %67 
                                        f32_4 %69 = OpLoad %44 
                                        f32_4 %70 = OpVectorShuffle %69 %69 0 0 0 0 
                                        f32_4 %71 = OpFMul %68 %70 
                                        f32_4 %72 = OpLoad %9 
                                        f32_4 %73 = OpFAdd %71 %72 
                                                      OpStore %9 %73 
                               Uniform f32_4* %74 = OpAccessChain %21 %36 %36 
                                        f32_4 %75 = OpLoad %74 
                                        f32_4 %76 = OpLoad %44 
                                        f32_4 %77 = OpVectorShuffle %76 %76 2 2 2 2 
                                        f32_4 %78 = OpFMul %75 %77 
                                        f32_4 %79 = OpLoad %9 
                                        f32_4 %80 = OpFAdd %78 %79 
                                                      OpStore %9 %80 
                               Uniform f32_4* %86 = OpAccessChain %21 %36 %46 
                                        f32_4 %87 = OpLoad %86 
                                        f32_4 %88 = OpLoad %44 
                                        f32_4 %89 = OpVectorShuffle %88 %88 3 3 3 3 
                                        f32_4 %90 = OpFMul %87 %89 
                                        f32_4 %91 = OpLoad %9 
                                        f32_4 %92 = OpFAdd %90 %91 
                                Output f32_4* %94 = OpAccessChain %85 %23 
                                                      OpStore %94 %92 
                                        f32_4 %97 = OpLoad %95 
                                        f32_2 %98 = OpVectorShuffle %97 %97 0 1 
                               Uniform f32_4* %99 = OpAccessChain %21 %46 
                                       f32_4 %100 = OpLoad %99 
                                       f32_2 %101 = OpVectorShuffle %100 %100 0 1 
                                       f32_2 %102 = OpFMul %98 %101 
                              Uniform f32_4* %103 = OpAccessChain %21 %46 
                                       f32_4 %104 = OpLoad %103 
                                       f32_2 %105 = OpVectorShuffle %104 %104 2 3 
                                       f32_2 %106 = OpFAdd %102 %105 
                                       f32_4 %107 = OpLoad %9 
                                       f32_4 %108 = OpVectorShuffle %107 %106 4 5 2 3 
                                                      OpStore %9 %108 
                                       f32_4 %111 = OpLoad %9 
                                       f32_2 %112 = OpVectorShuffle %111 %111 0 1 
                                                      OpStore vs_TEXCOORD0 %112 
                                       f32_3 %115 = OpLoad %114 
                              Uniform f32_4* %116 = OpAccessChain %21 %24 %23 
                                       f32_4 %117 = OpLoad %116 
                                       f32_3 %118 = OpVectorShuffle %117 %117 0 1 2 
                                         f32 %119 = OpDot %115 %118 
                                Private f32* %122 = OpAccessChain %9 %120 
                                                      OpStore %122 %119 
                                       f32_3 %123 = OpLoad %114 
                              Uniform f32_4* %124 = OpAccessChain %21 %24 %24 
                                       f32_4 %125 = OpLoad %124 
                                       f32_3 %126 = OpVectorShuffle %125 %125 0 1 2 
                                         f32 %127 = OpDot %123 %126 
                                Private f32* %128 = OpAccessChain %9 %81 
                                                      OpStore %128 %127 
                                       f32_3 %129 = OpLoad %114 
                              Uniform f32_4* %130 = OpAccessChain %21 %24 %36 
                                       f32_4 %131 = OpLoad %130 
                                       f32_3 %132 = OpVectorShuffle %131 %131 0 1 2 
                                         f32 %133 = OpDot %129 %132 
                                Private f32* %135 = OpAccessChain %9 %134 
                                                      OpStore %135 %133 
                                       f32_4 %137 = OpLoad %9 
                                       f32_3 %138 = OpVectorShuffle %137 %137 0 1 2 
                                       f32_4 %139 = OpLoad %9 
                                       f32_3 %140 = OpVectorShuffle %139 %139 0 1 2 
                                         f32 %141 = OpDot %138 %140 
                                                      OpStore %136 %141 
                                         f32 %142 = OpLoad %136 
                                         f32 %143 = OpExtInst %1 32 %142 
                                                      OpStore %136 %143 
                                         f32 %145 = OpLoad %136 
                                       f32_3 %146 = OpCompositeConstruct %145 %145 %145 
                                       f32_4 %147 = OpLoad %9 
                                       f32_3 %148 = OpVectorShuffle %147 %147 0 1 2 
                                       f32_3 %149 = OpFMul %146 %148 
                                                      OpStore vs_TEXCOORD1 %149 
                                                      OpStore vs_TEXCOORD5 %152 
                                                      OpStore vs_TEXCOORD6 %152 
                                 Output f32* %155 = OpAccessChain %85 %23 %81 
                                         f32 %156 = OpLoad %155 
                                         f32 %157 = OpFNegate %156 
                                 Output f32* %158 = OpAccessChain %85 %23 %81 
                                                      OpStore %158 %157 
                                                      OpReturn
                                                      OpFunctionEnd
; SPIR-V
; Version: 1.0
; Generator: Khronos Glslang Reference Front End; 6
; Bound: 430
; Schema: 0
                                                      OpCapability Shader 
                                               %1 = OpExtInstImport "GLSL.std.450" 
                                                      OpMemoryModel Logical GLSL450 
                                                      OpEntryPoint Fragment %4 "main" %11 %57 %402 %423 
                                                      OpExecutionMode %4 OriginUpperLeft 
                                                      OpName vs_TEXCOORD2 "vs_TEXCOORD2" 
                                                      OpName vs_TEXCOORD1 "vs_TEXCOORD1" 
                                                      OpName vs_TEXCOORD0 "vs_TEXCOORD0" 
                                                      OpDecorate vs_TEXCOORD2 Location 11 
                                                      OpDecorate %17 ArrayStride 17 
                                                      OpDecorate %19 ArrayStride 19 
                                                      OpMemberDecorate %20 0 Offset 20 
                                                      OpMemberDecorate %20 1 RelaxedPrecision 
                                                      OpMemberDecorate %20 1 Offset 20 
                                                      OpMemberDecorate %20 2 Offset 20 
                                                      OpMemberDecorate %20 3 RelaxedPrecision 
                                                      OpMemberDecorate %20 3 Offset 20 
                                                      OpMemberDecorate %20 4 Offset 20 
                                                      OpMemberDecorate %20 5 Offset 20 
                                                      OpMemberDecorate %20 6 RelaxedPrecision 
                                                      OpMemberDecorate %20 6 Offset 20 
                                                      OpMemberDecorate %20 7 RelaxedPrecision 
                                                      OpMemberDecorate %20 7 Offset 20 
                                                      OpMemberDecorate %20 8 RelaxedPrecision 
                                                      OpMemberDecorate %20 8 Offset 20 
                                                      OpMemberDecorate %20 9 RelaxedPrecision 
                                                      OpMemberDecorate %20 9 Offset 20 
                                                      OpMemberDecorate %20 10 RelaxedPrecision 
                                                      OpMemberDecorate %20 10 Offset 20 
                                                      OpMemberDecorate %20 11 RelaxedPrecision 
                                                      OpMemberDecorate %20 11 Offset 20 
                                                      OpMemberDecorate %20 12 RelaxedPrecision 
                                                      OpMemberDecorate %20 12 Offset 20 
                                                      OpMemberDecorate %20 13 RelaxedPrecision 
                                                      OpMemberDecorate %20 13 Offset 20 
                                                      OpMemberDecorate %20 14 RelaxedPrecision 
                                                      OpMemberDecorate %20 14 Offset 20 
                                                      OpDecorate %20 Block 
                                                      OpDecorate %22 DescriptorSet 22 
                                                      OpDecorate %22 Binding 22 
                                                      OpDecorate %36 RelaxedPrecision 
                                                      OpDecorate %44 RelaxedPrecision 
                                                      OpDecorate %45 RelaxedPrecision 
                                                      OpDecorate %47 RelaxedPrecision 
                                                      OpDecorate %48 RelaxedPrecision 
                                                      OpDecorate %49 RelaxedPrecision 
                                                      OpDecorate %50 RelaxedPrecision 
                                                      OpDecorate %51 RelaxedPrecision 
                                                      OpDecorate %52 RelaxedPrecision 
                                                      OpDecorate %53 RelaxedPrecision 
                                                      OpDecorate %54 RelaxedPrecision 
                                                      OpDecorate %55 RelaxedPrecision 
                                                      OpDecorate %56 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD1 Location 57 
                                                      OpDecorate %61 RelaxedPrecision 
                                                      OpDecorate %62 RelaxedPrecision 
                                                      OpDecorate %63 RelaxedPrecision 
                                                      OpDecorate %64 RelaxedPrecision 
                                                      OpDecorate %68 RelaxedPrecision 
                                                      OpDecorate %69 RelaxedPrecision 
                                                      OpDecorate %70 RelaxedPrecision 
                                                      OpDecorate %73 RelaxedPrecision 
                                                      OpDecorate %75 RelaxedPrecision 
                                                      OpDecorate %76 RelaxedPrecision 
                                                      OpDecorate %77 RelaxedPrecision 
                                                      OpDecorate %81 RelaxedPrecision 
                                                      OpDecorate %82 RelaxedPrecision 
                                                      OpDecorate %85 RelaxedPrecision 
                                                      OpDecorate %89 RelaxedPrecision 
                                                      OpDecorate %90 RelaxedPrecision 
                                                      OpDecorate %94 RelaxedPrecision 
                                                      OpDecorate %96 RelaxedPrecision 
                                                      OpDecorate %100 RelaxedPrecision 
                                                      OpDecorate %106 RelaxedPrecision 
                                                      OpDecorate %107 RelaxedPrecision 
                                                      OpDecorate %109 RelaxedPrecision 
                                                      OpDecorate %110 RelaxedPrecision 
                                                      OpDecorate %116 RelaxedPrecision 
                                                      OpDecorate %117 RelaxedPrecision 
                                                      OpDecorate %119 RelaxedPrecision 
                                                      OpDecorate %121 RelaxedPrecision 
                                                      OpDecorate %122 RelaxedPrecision 
                                                      OpDecorate %123 RelaxedPrecision 
                                                      OpDecorate %126 RelaxedPrecision 
                                                      OpDecorate %127 RelaxedPrecision 
                                                      OpDecorate %128 RelaxedPrecision 
                                                      OpDecorate %129 RelaxedPrecision 
                                                      OpDecorate %202 RelaxedPrecision 
                                                      OpDecorate %205 RelaxedPrecision 
                                                      OpDecorate %250 DescriptorSet 250 
                                                      OpDecorate %250 Binding 250 
                                                      OpDecorate %254 DescriptorSet 254 
                                                      OpDecorate %254 Binding 254 
                                                      OpDecorate %263 RelaxedPrecision 
                                                      OpDecorate %264 RelaxedPrecision 
                                                      OpDecorate %265 RelaxedPrecision 
                                                      OpDecorate %269 RelaxedPrecision 
                                                      OpDecorate %272 RelaxedPrecision 
                                                      OpDecorate %276 RelaxedPrecision 
                                                      OpDecorate %277 RelaxedPrecision 
                                                      OpDecorate %278 RelaxedPrecision 
                                                      OpDecorate %281 RelaxedPrecision 
                                                      OpDecorate %284 RelaxedPrecision 
                                                      OpDecorate %289 RelaxedPrecision 
                                                      OpDecorate %294 RelaxedPrecision 
                                                      OpDecorate %295 RelaxedPrecision 
                                                      OpDecorate %298 RelaxedPrecision 
                                                      OpDecorate %299 RelaxedPrecision 
                                                      OpDecorate %300 RelaxedPrecision 
                                                      OpDecorate %303 RelaxedPrecision 
                                                      OpDecorate %307 RelaxedPrecision 
                                                      OpDecorate %308 RelaxedPrecision 
                                                      OpDecorate %309 RelaxedPrecision 
                                                      OpDecorate %312 RelaxedPrecision 
                                                      OpDecorate %313 RelaxedPrecision 
                                                      OpDecorate %314 RelaxedPrecision 
                                                      OpDecorate %315 RelaxedPrecision 
                                                      OpDecorate %316 RelaxedPrecision 
                                                      OpDecorate %318 RelaxedPrecision 
                                                      OpDecorate %319 RelaxedPrecision 
                                                      OpDecorate %322 RelaxedPrecision 
                                                      OpDecorate %323 RelaxedPrecision 
                                                      OpDecorate %325 RelaxedPrecision 
                                                      OpDecorate %326 RelaxedPrecision 
                                                      OpDecorate %327 RelaxedPrecision 
                                                      OpDecorate %328 RelaxedPrecision 
                                                      OpDecorate %329 RelaxedPrecision 
                                                      OpDecorate %330 RelaxedPrecision 
                                                      OpDecorate %331 RelaxedPrecision 
                                                      OpDecorate %332 RelaxedPrecision 
                                                      OpDecorate %333 RelaxedPrecision 
                                                      OpDecorate %335 RelaxedPrecision 
                                                      OpDecorate %336 RelaxedPrecision 
                                                      OpDecorate %339 RelaxedPrecision 
                                                      OpDecorate %340 RelaxedPrecision 
                                                      OpDecorate %343 RelaxedPrecision 
                                                      OpDecorate %344 RelaxedPrecision 
                                                      OpDecorate %345 RelaxedPrecision 
                                                      OpDecorate %347 RelaxedPrecision 
                                                      OpDecorate %349 RelaxedPrecision 
                                                      OpDecorate %350 RelaxedPrecision 
                                                      OpDecorate %353 RelaxedPrecision 
                                                      OpDecorate %354 RelaxedPrecision 
                                                      OpDecorate %355 RelaxedPrecision 
                                                      OpDecorate %358 RelaxedPrecision 
                                                      OpDecorate %360 RelaxedPrecision 
                                                      OpDecorate %361 RelaxedPrecision 
                                                      OpDecorate %365 RelaxedPrecision 
                                                      OpDecorate %366 RelaxedPrecision 
                                                      OpDecorate %367 RelaxedPrecision 
                                                      OpDecorate %370 RelaxedPrecision 
                                                      OpDecorate %371 RelaxedPrecision 
                                                      OpDecorate %372 RelaxedPrecision 
                                                      OpDecorate %374 RelaxedPrecision 
                                                      OpDecorate %375 RelaxedPrecision 
                                                      OpDecorate %376 RelaxedPrecision 
                                                      OpDecorate %377 RelaxedPrecision 
                                                      OpDecorate %379 RelaxedPrecision 
                                                      OpDecorate %380 RelaxedPrecision 
                                                      OpDecorate %381 RelaxedPrecision 
                                                      OpDecorate %382 RelaxedPrecision 
                                                      OpDecorate %383 RelaxedPrecision 
                                                      OpDecorate %385 RelaxedPrecision 
                                                      OpDecorate %386 RelaxedPrecision 
                                                      OpDecorate %387 RelaxedPrecision 
                                                      OpDecorate %388 RelaxedPrecision 
                                                      OpDecorate %389 RelaxedPrecision 
                                                      OpDecorate %390 RelaxedPrecision 
                                                      OpDecorate %391 RelaxedPrecision 
                                                      OpDecorate %392 RelaxedPrecision 
                                                      OpDecorate %393 RelaxedPrecision 
                                                      OpDecorate %394 RelaxedPrecision 
                                                      OpDecorate %395 RelaxedPrecision 
                                                      OpDecorate %395 DescriptorSet 395 
                                                      OpDecorate %395 Binding 395 
                                                      OpDecorate %396 RelaxedPrecision 
                                                      OpDecorate %397 RelaxedPrecision 
                                                      OpDecorate %397 DescriptorSet 397 
                                                      OpDecorate %397 Binding 397 
                                                      OpDecorate %398 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD0 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD0 Location 402 
                                                      OpDecorate %403 RelaxedPrecision 
                                                      OpDecorate %404 RelaxedPrecision 
                                                      OpDecorate %405 RelaxedPrecision 
                                                      OpDecorate %406 RelaxedPrecision 
                                                      OpDecorate %409 RelaxedPrecision 
                                                      OpDecorate %410 RelaxedPrecision 
                                                      OpDecorate %411 RelaxedPrecision 
                                                      OpDecorate %412 RelaxedPrecision 
                                                      OpDecorate %414 RelaxedPrecision 
                                                      OpDecorate %415 RelaxedPrecision 
                                                      OpDecorate %416 RelaxedPrecision 
                                                      OpDecorate %417 RelaxedPrecision 
                                                      OpDecorate %418 RelaxedPrecision 
                                                      OpDecorate %419 RelaxedPrecision 
                                                      OpDecorate %423 RelaxedPrecision 
                                                      OpDecorate %423 Location 423 
                                               %2 = OpTypeVoid 
                                               %3 = OpTypeFunction %2 
                                               %6 = OpTypeFloat 32 
                                               %7 = OpTypeVector %6 3 
                                               %8 = OpTypePointer Private %7 
                                Private f32_3* %9 = OpVariable Private 
                                              %10 = OpTypePointer Input %7 
                        Input f32_3* vs_TEXCOORD2 = OpVariable Input 
                                              %14 = OpTypeVector %6 4 
                                              %15 = OpTypeInt 32 0 
                                          u32 %16 = OpConstant 16 
                                              %17 = OpTypeArray %14 %16 
                                          u32 %18 = OpConstant 4 
                                              %19 = OpTypeArray %14 %18 
                                              %20 = OpTypeStruct %7 %14 %17 %14 %14 %19 %14 %14 %14 %6 %14 %14 %6 %6 %6 
                                              %21 = OpTypePointer Uniform %20 
Uniform struct {f32_3; f32_4; f32_4[16]; f32_4; f32_4; f32_4[4]; f32_4; f32_4; f32_4; f32; f32_4; f32_4; f32; f32; f32;}* %22 = OpVariable Uniform 
                                              %23 = OpTypeInt 32 1 
                                          i32 %24 = OpConstant 0 
                                              %25 = OpTypePointer Uniform %7 
                                              %29 = OpTypePointer Private %6 
                                 Private f32* %30 = OpVariable Private 
                               Private f32_3* %36 = OpVariable Private 
                                          i32 %41 = OpConstant 1 
                                              %42 = OpTypePointer Uniform %14 
                                 Private f32* %47 = OpVariable Private 
                        Input f32_3* vs_TEXCOORD1 = OpVariable Input 
                               Private f32_3* %63 = OpVariable Private 
                                          u32 %71 = OpConstant 0 
                                          u32 %78 = OpConstant 1 
                                              %80 = OpTypeVector %6 2 
                                          f32 %83 = OpConstant 3.674022E-40 
                                        f32_2 %84 = OpConstantComposite %83 %83 
                                          i32 %91 = OpConstant 9 
                                              %92 = OpTypePointer Uniform %6 
                                          f32 %95 = OpConstant 3.674022E-40 
                                         i32 %104 = OpConstant 14 
                                         f32 %108 = OpConstant 3.674022E-40 
                                         f32 %113 = OpConstant 3.674022E-40 
                                Private f32* %119 = OpVariable Private 
                              Private f32_3* %124 = OpVariable Private 
                                         f32 %131 = OpConstant 3.674022E-40 
                                         f32 %143 = OpConstant 3.674022E-40 
                                         f32 %145 = OpConstant 3.674022E-40 
                                         i32 %155 = OpConstant 5 
                                         u32 %156 = OpConstant 2 
                                         i32 %163 = OpConstant 2 
                                         i32 %172 = OpConstant 4 
                                Private f32* %178 = OpVariable Private 
                                         u32 %189 = OpConstant 3 
                                         i32 %200 = OpConstant 3 
                                             %239 = OpTypePointer Function %7 
                                             %248 = OpTypeImage %6 Dim2D 0 0 0 1 Unknown 
                                             %249 = OpTypePointer UniformConstant %248 
        UniformConstant read_only Texture2D* %250 = OpVariable UniformConstant 
                                             %252 = OpTypeSampler 
                                             %253 = OpTypePointer UniformConstant %252 
                    UniformConstant sampler* %254 = OpVariable UniformConstant 
                                             %256 = OpTypeImage %6 Dim2D 1 0 0 1 Unknown 
                                             %257 = OpTypeSampledImage %256 
                                         i32 %292 = OpConstant 6 
                                         i32 %296 = OpConstant 7 
                                         i32 %305 = OpConstant 13 
                                         i32 %310 = OpConstant 12 
                              Private f32_3* %314 = OpVariable Private 
                                         i32 %363 = OpConstant 10 
                                         i32 %368 = OpConstant 11 
                              Private f32_3* %394 = OpVariable Private 
        UniformConstant read_only Texture2D* %395 = OpVariable UniformConstant 
                    UniformConstant sampler* %397 = OpVariable UniformConstant 
                                             %399 = OpTypeSampledImage %248 
                                             %401 = OpTypePointer Input %80 
                        Input f32_2* vs_TEXCOORD0 = OpVariable Input 
                                         i32 %407 = OpConstant 8 
                                             %422 = OpTypePointer Output %14 
                               Output f32_4* %423 = OpVariable Output 
                                             %427 = OpTypePointer Output %6 
                                          void %4 = OpFunction None %3 
                                               %5 = OpLabel 
                             Function f32_3* %240 = OpVariable Function 
                                        f32_3 %12 = OpLoad vs_TEXCOORD2 
                                        f32_3 %13 = OpFNegate %12 
                               Uniform f32_3* %26 = OpAccessChain %22 %24 
                                        f32_3 %27 = OpLoad %26 
                                        f32_3 %28 = OpFAdd %13 %27 
                                                      OpStore %9 %28 
                                        f32_3 %31 = OpLoad %9 
                                        f32_3 %32 = OpLoad %9 
                                          f32 %33 = OpDot %31 %32 
                                                      OpStore %30 %33 
                                          f32 %34 = OpLoad %30 
                                          f32 %35 = OpExtInst %1 32 %34 
                                                      OpStore %30 %35 
                                        f32_3 %37 = OpLoad %9 
                                          f32 %38 = OpLoad %30 
                                        f32_3 %39 = OpCompositeConstruct %38 %38 %38 
                                        f32_3 %40 = OpFMul %37 %39 
                               Uniform f32_4* %43 = OpAccessChain %22 %41 
                                        f32_4 %44 = OpLoad %43 
                                        f32_3 %45 = OpVectorShuffle %44 %44 0 1 2 
                                        f32_3 %46 = OpFAdd %40 %45 
                                                      OpStore %36 %46 
                                        f32_3 %48 = OpLoad %36 
                                        f32_3 %49 = OpLoad %36 
                                          f32 %50 = OpDot %48 %49 
                                                      OpStore %47 %50 
                                          f32 %51 = OpLoad %47 
                                          f32 %52 = OpExtInst %1 32 %51 
                                                      OpStore %47 %52 
                                          f32 %53 = OpLoad %47 
                                        f32_3 %54 = OpCompositeConstruct %53 %53 %53 
                                        f32_3 %55 = OpLoad %36 
                                        f32_3 %56 = OpFMul %54 %55 
                                                      OpStore %36 %56 
                                        f32_3 %58 = OpLoad vs_TEXCOORD1 
                                        f32_3 %59 = OpLoad vs_TEXCOORD1 
                                          f32 %60 = OpDot %58 %59 
                                                      OpStore %47 %60 
                                          f32 %61 = OpLoad %47 
                                          f32 %62 = OpExtInst %1 32 %61 
                                                      OpStore %47 %62 
                                          f32 %64 = OpLoad %47 
                                        f32_3 %65 = OpCompositeConstruct %64 %64 %64 
                                        f32_3 %66 = OpLoad vs_TEXCOORD1 
                                        f32_3 %67 = OpFMul %65 %66 
                                                      OpStore %63 %67 
                                        f32_3 %68 = OpLoad %63 
                                        f32_3 %69 = OpLoad %36 
                                          f32 %70 = OpDot %68 %69 
                                 Private f32* %72 = OpAccessChain %36 %71 
                                                      OpStore %72 %70 
                                        f32_3 %73 = OpLoad %63 
                               Uniform f32_4* %74 = OpAccessChain %22 %41 
                                        f32_4 %75 = OpLoad %74 
                                        f32_3 %76 = OpVectorShuffle %75 %75 0 1 2 
                                          f32 %77 = OpDot %73 %76 
                                 Private f32* %79 = OpAccessChain %36 %78 
                                                      OpStore %79 %77 
                                        f32_3 %81 = OpLoad %36 
                                        f32_2 %82 = OpVectorShuffle %81 %81 0 1 
                                        f32_2 %85 = OpExtInst %1 40 %82 %84 
                                        f32_3 %86 = OpLoad %36 
                                        f32_3 %87 = OpVectorShuffle %86 %85 3 4 2 
                                                      OpStore %36 %87 
                                 Private f32* %88 = OpAccessChain %36 %71 
                                          f32 %89 = OpLoad %88 
                                          f32 %90 = OpExtInst %1 30 %89 
                                                      OpStore %30 %90 
                                 Uniform f32* %93 = OpAccessChain %22 %91 
                                          f32 %94 = OpLoad %93 
                                          f32 %96 = OpFMul %94 %95 
                                 Private f32* %97 = OpAccessChain %36 %71 
                                                      OpStore %97 %96 
                                          f32 %98 = OpLoad %30 
                                 Private f32* %99 = OpAccessChain %36 %71 
                                         f32 %100 = OpLoad %99 
                                         f32 %101 = OpFMul %98 %100 
                                                      OpStore %30 %101 
                                         f32 %102 = OpLoad %30 
                                         f32 %103 = OpExtInst %1 29 %102 
                                                      OpStore %30 %103 
                                Uniform f32* %105 = OpAccessChain %22 %104 
                                         f32 %106 = OpLoad %105 
                                         f32 %107 = OpFNegate %106 
                                         f32 %109 = OpFMul %107 %108 
                                         f32 %110 = OpFAdd %109 %108 
                                Private f32* %111 = OpAccessChain %36 %71 
                                                      OpStore %111 %110 
                                         f32 %112 = OpLoad %30 
                                         f32 %114 = OpFMul %112 %113 
                                Private f32* %115 = OpAccessChain %36 %71 
                                         f32 %116 = OpLoad %115 
                                         f32 %117 = OpFNegate %116 
                                         f32 %118 = OpFAdd %114 %117 
                                                      OpStore %30 %118 
                                Uniform f32* %120 = OpAccessChain %22 %104 
                                         f32 %121 = OpLoad %120 
                                         f32 %122 = OpFMul %121 %108 
                                         f32 %123 = OpFAdd %122 %108 
                                                      OpStore %119 %123 
                                Private f32* %125 = OpAccessChain %36 %71 
                                         f32 %126 = OpLoad %125 
                                         f32 %127 = OpFNegate %126 
                                         f32 %128 = OpLoad %119 
                                         f32 %129 = OpFAdd %127 %128 
                                Private f32* %130 = OpAccessChain %124 %71 
                                                      OpStore %130 %129 
                                Private f32* %132 = OpAccessChain %124 %71 
                                         f32 %133 = OpLoad %132 
                                         f32 %134 = OpFDiv %131 %133 
                                Private f32* %135 = OpAccessChain %124 %71 
                                                      OpStore %135 %134 
                                         f32 %136 = OpLoad %30 
                                Private f32* %137 = OpAccessChain %124 %71 
                                         f32 %138 = OpLoad %137 
                                         f32 %139 = OpFMul %136 %138 
                                                      OpStore %30 %139 
                                         f32 %140 = OpLoad %30 
                                         f32 %141 = OpExtInst %1 43 %140 %83 %131 
                                                      OpStore %30 %141 
                                         f32 %142 = OpLoad %30 
                                         f32 %144 = OpFMul %142 %143 
                                         f32 %146 = OpFAdd %144 %145 
                                Private f32* %147 = OpAccessChain %124 %71 
                                                      OpStore %147 %146 
                                         f32 %148 = OpLoad %30 
                                         f32 %149 = OpLoad %30 
                                         f32 %150 = OpFMul %148 %149 
                                                      OpStore %30 %150 
                                         f32 %151 = OpLoad %30 
                                Private f32* %152 = OpAccessChain %124 %71 
                                         f32 %153 = OpLoad %152 
                                         f32 %154 = OpFMul %151 %153 
                                                      OpStore %30 %154 
                                Uniform f32* %157 = OpAccessChain %22 %155 %24 %156 
                                         f32 %158 = OpLoad %157 
                                Private f32* %159 = OpAccessChain %124 %71 
                                                      OpStore %159 %158 
                                Uniform f32* %160 = OpAccessChain %22 %155 %41 %156 
                                         f32 %161 = OpLoad %160 
                                Private f32* %162 = OpAccessChain %124 %78 
                                                      OpStore %162 %161 
                                Uniform f32* %164 = OpAccessChain %22 %155 %163 %156 
                                         f32 %165 = OpLoad %164 
                                Private f32* %166 = OpAccessChain %124 %156 
                                                      OpStore %166 %165 
                                       f32_3 %167 = OpLoad %9 
                                       f32_3 %168 = OpLoad %124 
                                         f32 %169 = OpDot %167 %168 
                                Private f32* %170 = OpAccessChain %9 %71 
                                                      OpStore %170 %169 
                                       f32_3 %171 = OpLoad vs_TEXCOORD2 
                              Uniform f32_4* %173 = OpAccessChain %22 %172 
                                       f32_4 %174 = OpLoad %173 
                                       f32_3 %175 = OpVectorShuffle %174 %174 0 1 2 
                                       f32_3 %176 = OpFNegate %175 
                                       f32_3 %177 = OpFAdd %171 %176 
                                                      OpStore %124 %177 
                                       f32_3 %179 = OpLoad %124 
                                       f32_3 %180 = OpLoad %124 
                                         f32 %181 = OpDot %179 %180 
                                                      OpStore %178 %181 
                                         f32 %182 = OpLoad %178 
                                         f32 %183 = OpExtInst %1 31 %182 
                                                      OpStore %178 %183 
                                Private f32* %184 = OpAccessChain %9 %71 
                                         f32 %185 = OpLoad %184 
                                         f32 %186 = OpFNegate %185 
                                         f32 %187 = OpLoad %178 
                                         f32 %188 = OpFAdd %186 %187 
                                                      OpStore %178 %188 
                                Uniform f32* %190 = OpAccessChain %22 %172 %189 
                                         f32 %191 = OpLoad %190 
                                         f32 %192 = OpLoad %178 
                                         f32 %193 = OpFMul %191 %192 
                                Private f32* %194 = OpAccessChain %9 %71 
                                         f32 %195 = OpLoad %194 
                                         f32 %196 = OpFAdd %193 %195 
                                Private f32* %197 = OpAccessChain %9 %71 
                                                      OpStore %197 %196 
                                Private f32* %198 = OpAccessChain %9 %71 
                                         f32 %199 = OpLoad %198 
                                Uniform f32* %201 = OpAccessChain %22 %200 %156 
                                         f32 %202 = OpLoad %201 
                                         f32 %203 = OpFMul %199 %202 
                                Uniform f32* %204 = OpAccessChain %22 %200 %189 
                                         f32 %205 = OpLoad %204 
                                         f32 %206 = OpFAdd %203 %205 
                                Private f32* %207 = OpAccessChain %9 %71 
                                                      OpStore %207 %206 
                                Private f32* %208 = OpAccessChain %9 %71 
                                         f32 %209 = OpLoad %208 
                                         f32 %210 = OpExtInst %1 43 %209 %83 %131 
                                Private f32* %211 = OpAccessChain %9 %71 
                                                      OpStore %211 %210 
                                       f32_3 %212 = OpLoad vs_TEXCOORD2 
                                       f32_3 %213 = OpVectorShuffle %212 %212 1 1 1 
                              Uniform f32_4* %214 = OpAccessChain %22 %163 %41 
                                       f32_4 %215 = OpLoad %214 
                                       f32_3 %216 = OpVectorShuffle %215 %215 0 1 2 
                                       f32_3 %217 = OpFMul %213 %216 
                                                      OpStore %124 %217 
                              Uniform f32_4* %218 = OpAccessChain %22 %163 %24 
                                       f32_4 %219 = OpLoad %218 
                                       f32_3 %220 = OpVectorShuffle %219 %219 0 1 2 
                                       f32_3 %221 = OpLoad vs_TEXCOORD2 
                                       f32_3 %222 = OpVectorShuffle %221 %221 0 0 0 
                                       f32_3 %223 = OpFMul %220 %222 
                                       f32_3 %224 = OpLoad %124 
                                       f32_3 %225 = OpFAdd %223 %224 
                                                      OpStore %124 %225 
                              Uniform f32_4* %226 = OpAccessChain %22 %163 %163 
                                       f32_4 %227 = OpLoad %226 
                                       f32_3 %228 = OpVectorShuffle %227 %227 0 1 2 
                                       f32_3 %229 = OpLoad vs_TEXCOORD2 
                                       f32_3 %230 = OpVectorShuffle %229 %229 2 2 2 
                                       f32_3 %231 = OpFMul %228 %230 
                                       f32_3 %232 = OpLoad %124 
                                       f32_3 %233 = OpFAdd %231 %232 
                                                      OpStore %124 %233 
                                       f32_3 %234 = OpLoad %124 
                              Uniform f32_4* %235 = OpAccessChain %22 %163 %200 
                                       f32_4 %236 = OpLoad %235 
                                       f32_3 %237 = OpVectorShuffle %236 %236 0 1 2 
                                       f32_3 %238 = OpFAdd %234 %237 
                                                      OpStore %124 %238 
                                       f32_3 %241 = OpLoad %124 
                                       f32_2 %242 = OpVectorShuffle %241 %241 0 1 
                                Private f32* %243 = OpAccessChain %124 %156 
                                         f32 %244 = OpLoad %243 
                                         f32 %245 = OpCompositeExtract %242 0 
                                         f32 %246 = OpCompositeExtract %242 1 
                                       f32_3 %247 = OpCompositeConstruct %245 %246 %244 
                                                      OpStore %240 %247 
                         read_only Texture2D %251 = OpLoad %250 
                                     sampler %255 = OpLoad %254 
                  read_only Texture2DSampled %258 = OpSampledImage %251 %255 
                                       f32_3 %259 = OpLoad %240 
                                         f32 %260 = OpCompositeExtract %259 2 
                                         f32 %261 = OpImageSampleDrefExplicitLod %258 %259 %260 Lod %6 
                                                      OpStore %178 %261 
                                Uniform f32* %262 = OpAccessChain %22 %200 %71 
                                         f32 %263 = OpLoad %262 
                                         f32 %264 = OpFNegate %263 
                                         f32 %265 = OpFAdd %264 %131 
                                Private f32* %266 = OpAccessChain %36 %71 
                                                      OpStore %266 %265 
                                         f32 %267 = OpLoad %178 
                                Private f32* %268 = OpAccessChain %36 %71 
                                         f32 %269 = OpLoad %268 
                                         f32 %270 = OpFMul %267 %269 
                                Uniform f32* %271 = OpAccessChain %22 %200 %71 
                                         f32 %272 = OpLoad %271 
                                         f32 %273 = OpFAdd %270 %272 
                                Private f32* %274 = OpAccessChain %36 %71 
                                                      OpStore %274 %273 
                                Private f32* %275 = OpAccessChain %36 %71 
                                         f32 %276 = OpLoad %275 
                                         f32 %277 = OpFNegate %276 
                                         f32 %278 = OpFAdd %277 %131 
                                                      OpStore %119 %278 
                                Private f32* %279 = OpAccessChain %9 %71 
                                         f32 %280 = OpLoad %279 
                                         f32 %281 = OpLoad %119 
                                         f32 %282 = OpFMul %280 %281 
                                Private f32* %283 = OpAccessChain %36 %71 
                                         f32 %284 = OpLoad %283 
                                         f32 %285 = OpFAdd %282 %284 
                                Private f32* %286 = OpAccessChain %36 %71 
                                                      OpStore %286 %285 
                                         f32 %287 = OpLoad %30 
                                Private f32* %288 = OpAccessChain %36 %71 
                                         f32 %289 = OpLoad %288 
                                         f32 %290 = OpFMul %287 %289 
                                Private f32* %291 = OpAccessChain %9 %71 
                                                      OpStore %291 %290 
                              Uniform f32_4* %293 = OpAccessChain %22 %292 
                                       f32_4 %294 = OpLoad %293 
                                       f32_3 %295 = OpVectorShuffle %294 %294 0 1 2 
                              Uniform f32_4* %297 = OpAccessChain %22 %296 
                                       f32_4 %298 = OpLoad %297 
                                       f32_3 %299 = OpVectorShuffle %298 %298 0 1 2 
                                       f32_3 %300 = OpFMul %295 %299 
                                                      OpStore %63 %300 
                                       f32_3 %301 = OpLoad %9 
                                       f32_3 %302 = OpVectorShuffle %301 %301 0 0 0 
                                       f32_3 %303 = OpLoad %63 
                                       f32_3 %304 = OpFMul %302 %303 
                                                      OpStore %9 %304 
                                Uniform f32* %306 = OpAccessChain %22 %305 
                                         f32 %307 = OpLoad %306 
                                         f32 %308 = OpFNegate %307 
                                         f32 %309 = OpFMul %308 %108 
                                Uniform f32* %311 = OpAccessChain %22 %310 
                                         f32 %312 = OpLoad %311 
                                         f32 %313 = OpFAdd %309 %312 
                                                      OpStore %119 %313 
                                         f32 %315 = OpLoad %119 
                                         f32 %316 = OpFNegate %315 
                                Private f32* %317 = OpAccessChain %36 %78 
                                         f32 %318 = OpLoad %317 
                                         f32 %319 = OpFAdd %316 %318 
                                Private f32* %320 = OpAccessChain %314 %71 
                                                      OpStore %320 %319 
                                Uniform f32* %321 = OpAccessChain %22 %305 
                                         f32 %322 = OpLoad %321 
                                         f32 %323 = OpFMul %322 %108 
                                Uniform f32* %324 = OpAccessChain %22 %310 
                                         f32 %325 = OpLoad %324 
                                         f32 %326 = OpFAdd %323 %325 
                                                      OpStore %47 %326 
                                         f32 %327 = OpLoad %119 
                                         f32 %328 = OpFNegate %327 
                                         f32 %329 = OpLoad %47 
                                         f32 %330 = OpFAdd %328 %329 
                                                      OpStore %119 %330 
                                         f32 %331 = OpLoad %119 
                                         f32 %332 = OpFDiv %131 %331 
                                                      OpStore %119 %332 
                                         f32 %333 = OpLoad %119 
                                Private f32* %334 = OpAccessChain %314 %71 
                                         f32 %335 = OpLoad %334 
                                         f32 %336 = OpFMul %333 %335 
                                Private f32* %337 = OpAccessChain %314 %71 
                                                      OpStore %337 %336 
                                Private f32* %338 = OpAccessChain %314 %71 
                                         f32 %339 = OpLoad %338 
                                         f32 %340 = OpExtInst %1 43 %339 %83 %131 
                                Private f32* %341 = OpAccessChain %314 %71 
                                                      OpStore %341 %340 
                                Private f32* %342 = OpAccessChain %314 %71 
                                         f32 %343 = OpLoad %342 
                                         f32 %344 = OpFMul %343 %143 
                                         f32 %345 = OpFAdd %344 %145 
                                                      OpStore %119 %345 
                                Private f32* %346 = OpAccessChain %314 %71 
                                         f32 %347 = OpLoad %346 
                                Private f32* %348 = OpAccessChain %314 %71 
                                         f32 %349 = OpLoad %348 
                                         f32 %350 = OpFMul %347 %349 
                                Private f32* %351 = OpAccessChain %314 %71 
                                                      OpStore %351 %350 
                                Private f32* %352 = OpAccessChain %314 %71 
                                         f32 %353 = OpLoad %352 
                                         f32 %354 = OpLoad %119 
                                         f32 %355 = OpFMul %353 %354 
                                Private f32* %356 = OpAccessChain %314 %71 
                                                      OpStore %356 %355 
                                Private f32* %357 = OpAccessChain %36 %71 
                                         f32 %358 = OpLoad %357 
                                Private f32* %359 = OpAccessChain %314 %71 
                                         f32 %360 = OpLoad %359 
                                         f32 %361 = OpFMul %358 %360 
                                Private f32* %362 = OpAccessChain %36 %71 
                                                      OpStore %362 %361 
                              Uniform f32_4* %364 = OpAccessChain %22 %363 
                                       f32_4 %365 = OpLoad %364 
                                       f32_3 %366 = OpVectorShuffle %365 %365 0 1 2 
                                       f32_3 %367 = OpFNegate %366 
                              Uniform f32_4* %369 = OpAccessChain %22 %368 
                                       f32_4 %370 = OpLoad %369 
                                       f32_3 %371 = OpVectorShuffle %370 %370 0 1 2 
                                       f32_3 %372 = OpFAdd %367 %371 
                                                      OpStore %314 %372 
                              Uniform f32_4* %373 = OpAccessChain %22 %368 
                                       f32_4 %374 = OpLoad %373 
                                       f32_3 %375 = OpVectorShuffle %374 %374 3 3 3 
                                       f32_3 %376 = OpLoad %314 
                                       f32_3 %377 = OpFMul %375 %376 
                              Uniform f32_4* %378 = OpAccessChain %22 %363 
                                       f32_4 %379 = OpLoad %378 
                                       f32_3 %380 = OpVectorShuffle %379 %379 0 1 2 
                                       f32_3 %381 = OpFAdd %377 %380 
                                                      OpStore %314 %381 
                                       f32_3 %382 = OpLoad %314 
                                       f32_3 %383 = OpFNegate %382 
                              Uniform f32_4* %384 = OpAccessChain %22 %363 
                                       f32_4 %385 = OpLoad %384 
                                       f32_3 %386 = OpVectorShuffle %385 %385 0 1 2 
                                       f32_3 %387 = OpFAdd %383 %386 
                                                      OpStore %63 %387 
                                       f32_3 %388 = OpLoad %36 
                                       f32_3 %389 = OpVectorShuffle %388 %388 0 0 0 
                                       f32_3 %390 = OpLoad %63 
                                       f32_3 %391 = OpFMul %389 %390 
                                       f32_3 %392 = OpLoad %314 
                                       f32_3 %393 = OpFAdd %391 %392 
                                                      OpStore %36 %393 
                         read_only Texture2D %396 = OpLoad %395 
                                     sampler %398 = OpLoad %397 
                  read_only Texture2DSampled %400 = OpSampledImage %396 %398 
                                       f32_2 %403 = OpLoad vs_TEXCOORD0 
                                       f32_4 %404 = OpImageSampleImplicitLod %400 %403 
                                       f32_3 %405 = OpVectorShuffle %404 %404 0 1 2 
                                                      OpStore %394 %405 
                                       f32_3 %406 = OpLoad %394 
                              Uniform f32_4* %408 = OpAccessChain %22 %407 
                                       f32_4 %409 = OpLoad %408 
                                       f32_3 %410 = OpVectorShuffle %409 %409 0 1 2 
                                       f32_3 %411 = OpFMul %406 %410 
                                                      OpStore %63 %411 
                                       f32_3 %412 = OpLoad %63 
                              Uniform f32_4* %413 = OpAccessChain %22 %292 
                                       f32_4 %414 = OpLoad %413 
                                       f32_3 %415 = OpVectorShuffle %414 %414 0 1 2 
                                       f32_3 %416 = OpFMul %412 %415 
                                                      OpStore %63 %416 
                                       f32_3 %417 = OpLoad %63 
                                       f32_3 %418 = OpLoad %36 
                                       f32_3 %419 = OpFMul %417 %418 
                                       f32_3 %420 = OpLoad %9 
                                       f32_3 %421 = OpFAdd %419 %420 
                                                      OpStore %9 %421 
                                       f32_3 %424 = OpLoad %9 
                                       f32_4 %425 = OpLoad %423 
                                       f32_4 %426 = OpVectorShuffle %425 %424 4 5 6 3 
                                                      OpStore %423 %426 
                                 Output f32* %428 = OpAccessChain %423 %189 
                                                      OpStore %428 %131 
                                                      OpReturn
                                                      OpFunctionEnd
"
}
SubProgram "vulkan hw_tier01 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" }
"; SPIR-V
; Version: 1.0
; Generator: Khronos Glslang Reference Front End; 6
; Bound: 160
; Schema: 0
                                                      OpCapability Shader 
                                               %1 = OpExtInstImport "GLSL.std.450" 
                                                      OpMemoryModel Logical GLSL450 
                                                      OpEntryPoint Vertex %4 "main" %11 %52 %85 %95 %110 %114 %144 %150 %153 
                                                      OpName vs_TEXCOORD2 "vs_TEXCOORD2" 
                                                      OpName vs_TEXCOORD0 "vs_TEXCOORD0" 
                                                      OpName vs_TEXCOORD1 "vs_TEXCOORD1" 
                                                      OpName vs_TEXCOORD5 "vs_TEXCOORD5" 
                                                      OpName vs_TEXCOORD6 "vs_TEXCOORD6" 
                                                      OpDecorate %11 Location 11 
                                                      OpDecorate %16 ArrayStride 16 
                                                      OpDecorate %17 ArrayStride 17 
                                                      OpDecorate %18 ArrayStride 18 
                                                      OpMemberDecorate %19 0 Offset 19 
                                                      OpMemberDecorate %19 1 Offset 19 
                                                      OpMemberDecorate %19 2 Offset 19 
                                                      OpMemberDecorate %19 3 Offset 19 
                                                      OpDecorate %19 Block 
                                                      OpDecorate %21 DescriptorSet 21 
                                                      OpDecorate %21 Binding 21 
                                                      OpDecorate vs_TEXCOORD2 Location 52 
                                                      OpMemberDecorate %83 0 BuiltIn 83 
                                                      OpMemberDecorate %83 1 BuiltIn 83 
                                                      OpMemberDecorate %83 2 BuiltIn 83 
                                                      OpDecorate %83 Block 
                                                      OpDecorate %95 Location 95 
                                                      OpDecorate vs_TEXCOORD0 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD0 Location 110 
                                                      OpDecorate %114 Location 114 
                                                      OpDecorate vs_TEXCOORD1 Location 144 
                                                      OpDecorate vs_TEXCOORD5 Location 150 
                                                      OpDecorate vs_TEXCOORD6 Location 153 
                                               %2 = OpTypeVoid 
                                               %3 = OpTypeFunction %2 
                                               %6 = OpTypeFloat 32 
                                               %7 = OpTypeVector %6 4 
                                               %8 = OpTypePointer Private %7 
                                Private f32_4* %9 = OpVariable Private 
                                              %10 = OpTypePointer Input %7 
                                 Input f32_4* %11 = OpVariable Input 
                                              %14 = OpTypeInt 32 0 
                                          u32 %15 = OpConstant 4 
                                              %16 = OpTypeArray %7 %15 
                                              %17 = OpTypeArray %7 %15 
                                              %18 = OpTypeArray %7 %15 
                                              %19 = OpTypeStruct %16 %17 %18 %7 
                                              %20 = OpTypePointer Uniform %19 
Uniform struct {f32_4[4]; f32_4[4]; f32_4[4]; f32_4;}* %21 = OpVariable Uniform 
                                              %22 = OpTypeInt 32 1 
                                          i32 %23 = OpConstant 0 
                                          i32 %24 = OpConstant 1 
                                              %25 = OpTypePointer Uniform %7 
                                          i32 %36 = OpConstant 2 
                               Private f32_4* %44 = OpVariable Private 
                                          i32 %46 = OpConstant 3 
                                              %50 = OpTypeVector %6 3 
                                              %51 = OpTypePointer Output %50 
                       Output f32_3* vs_TEXCOORD2 = OpVariable Output 
                                          u32 %81 = OpConstant 1 
                                              %82 = OpTypeArray %6 %81 
                                              %83 = OpTypeStruct %7 %6 %82 
                                              %84 = OpTypePointer Output %83 
         Output struct {f32_4; f32; f32[1];}* %85 = OpVariable Output 
                                              %93 = OpTypePointer Output %7 
                                 Input f32_4* %95 = OpVariable Input 
                                              %96 = OpTypeVector %6 2 
                                             %109 = OpTypePointer Output %96 
                       Output f32_2* vs_TEXCOORD0 = OpVariable Output 
                                             %113 = OpTypePointer Input %50 
                                Input f32_3* %114 = OpVariable Input 
                                         u32 %120 = OpConstant 0 
                                             %121 = OpTypePointer Private %6 
                                         u32 %134 = OpConstant 2 
                                Private f32* %136 = OpVariable Private 
                       Output f32_3* vs_TEXCOORD1 = OpVariable Output 
                       Output f32_4* vs_TEXCOORD5 = OpVariable Output 
                                         f32 %151 = OpConstant 3.674022E-40 
                                       f32_4 %152 = OpConstantComposite %151 %151 %151 %151 
                       Output f32_4* vs_TEXCOORD6 = OpVariable Output 
                                             %154 = OpTypePointer Output %6 
                                          void %4 = OpFunction None %3 
                                               %5 = OpLabel 
                                        f32_4 %12 = OpLoad %11 
                                        f32_4 %13 = OpVectorShuffle %12 %12 1 1 1 1 
                               Uniform f32_4* %26 = OpAccessChain %21 %23 %24 
                                        f32_4 %27 = OpLoad %26 
                                        f32_4 %28 = OpFMul %13 %27 
                                                      OpStore %9 %28 
                               Uniform f32_4* %29 = OpAccessChain %21 %23 %23 
                                        f32_4 %30 = OpLoad %29 
                                        f32_4 %31 = OpLoad %11 
                                        f32_4 %32 = OpVectorShuffle %31 %31 0 0 0 0 
                                        f32_4 %33 = OpFMul %30 %32 
                                        f32_4 %34 = OpLoad %9 
                                        f32_4 %35 = OpFAdd %33 %34 
                                                      OpStore %9 %35 
                               Uniform f32_4* %37 = OpAccessChain %21 %23 %36 
                                        f32_4 %38 = OpLoad %37 
                                        f32_4 %39 = OpLoad %11 
                                        f32_4 %40 = OpVectorShuffle %39 %39 2 2 2 2 
                                        f32_4 %41 = OpFMul %38 %40 
                                        f32_4 %42 = OpLoad %9 
                                        f32_4 %43 = OpFAdd %41 %42 
                                                      OpStore %9 %43 
                                        f32_4 %45 = OpLoad %9 
                               Uniform f32_4* %47 = OpAccessChain %21 %23 %46 
                                        f32_4 %48 = OpLoad %47 
                                        f32_4 %49 = OpFAdd %45 %48 
                                                      OpStore %44 %49 
                               Uniform f32_4* %53 = OpAccessChain %21 %23 %46 
                                        f32_4 %54 = OpLoad %53 
                                        f32_3 %55 = OpVectorShuffle %54 %54 0 1 2 
                                        f32_4 %56 = OpLoad %11 
                                        f32_3 %57 = OpVectorShuffle %56 %56 3 3 3 
                                        f32_3 %58 = OpFMul %55 %57 
                                        f32_4 %59 = OpLoad %9 
                                        f32_3 %60 = OpVectorShuffle %59 %59 0 1 2 
                                        f32_3 %61 = OpFAdd %58 %60 
                                                      OpStore vs_TEXCOORD2 %61 
                                        f32_4 %62 = OpLoad %44 
                                        f32_4 %63 = OpVectorShuffle %62 %62 1 1 1 1 
                               Uniform f32_4* %64 = OpAccessChain %21 %36 %24 
                                        f32_4 %65 = OpLoad %64 
                                        f32_4 %66 = OpFMul %63 %65 
                                                      OpStore %9 %66 
                               Uniform f32_4* %67 = OpAccessChain %21 %36 %23 
                                        f32_4 %68 = OpLoad %67 
                                        f32_4 %69 = OpLoad %44 
                                        f32_4 %70 = OpVectorShuffle %69 %69 0 0 0 0 
                                        f32_4 %71 = OpFMul %68 %70 
                                        f32_4 %72 = OpLoad %9 
                                        f32_4 %73 = OpFAdd %71 %72 
                                                      OpStore %9 %73 
                               Uniform f32_4* %74 = OpAccessChain %21 %36 %36 
                                        f32_4 %75 = OpLoad %74 
                                        f32_4 %76 = OpLoad %44 
                                        f32_4 %77 = OpVectorShuffle %76 %76 2 2 2 2 
                                        f32_4 %78 = OpFMul %75 %77 
                                        f32_4 %79 = OpLoad %9 
                                        f32_4 %80 = OpFAdd %78 %79 
                                                      OpStore %9 %80 
                               Uniform f32_4* %86 = OpAccessChain %21 %36 %46 
                                        f32_4 %87 = OpLoad %86 
                                        f32_4 %88 = OpLoad %44 
                                        f32_4 %89 = OpVectorShuffle %88 %88 3 3 3 3 
                                        f32_4 %90 = OpFMul %87 %89 
                                        f32_4 %91 = OpLoad %9 
                                        f32_4 %92 = OpFAdd %90 %91 
                                Output f32_4* %94 = OpAccessChain %85 %23 
                                                      OpStore %94 %92 
                                        f32_4 %97 = OpLoad %95 
                                        f32_2 %98 = OpVectorShuffle %97 %97 0 1 
                               Uniform f32_4* %99 = OpAccessChain %21 %46 
                                       f32_4 %100 = OpLoad %99 
                                       f32_2 %101 = OpVectorShuffle %100 %100 0 1 
                                       f32_2 %102 = OpFMul %98 %101 
                              Uniform f32_4* %103 = OpAccessChain %21 %46 
                                       f32_4 %104 = OpLoad %103 
                                       f32_2 %105 = OpVectorShuffle %104 %104 2 3 
                                       f32_2 %106 = OpFAdd %102 %105 
                                       f32_4 %107 = OpLoad %9 
                                       f32_4 %108 = OpVectorShuffle %107 %106 4 5 2 3 
                                                      OpStore %9 %108 
                                       f32_4 %111 = OpLoad %9 
                                       f32_2 %112 = OpVectorShuffle %111 %111 0 1 
                                                      OpStore vs_TEXCOORD0 %112 
                                       f32_3 %115 = OpLoad %114 
                              Uniform f32_4* %116 = OpAccessChain %21 %24 %23 
                                       f32_4 %117 = OpLoad %116 
                                       f32_3 %118 = OpVectorShuffle %117 %117 0 1 2 
                                         f32 %119 = OpDot %115 %118 
                                Private f32* %122 = OpAccessChain %9 %120 
                                                      OpStore %122 %119 
                                       f32_3 %123 = OpLoad %114 
                              Uniform f32_4* %124 = OpAccessChain %21 %24 %24 
                                       f32_4 %125 = OpLoad %124 
                                       f32_3 %126 = OpVectorShuffle %125 %125 0 1 2 
                                         f32 %127 = OpDot %123 %126 
                                Private f32* %128 = OpAccessChain %9 %81 
                                                      OpStore %128 %127 
                                       f32_3 %129 = OpLoad %114 
                              Uniform f32_4* %130 = OpAccessChain %21 %24 %36 
                                       f32_4 %131 = OpLoad %130 
                                       f32_3 %132 = OpVectorShuffle %131 %131 0 1 2 
                                         f32 %133 = OpDot %129 %132 
                                Private f32* %135 = OpAccessChain %9 %134 
                                                      OpStore %135 %133 
                                       f32_4 %137 = OpLoad %9 
                                       f32_3 %138 = OpVectorShuffle %137 %137 0 1 2 
                                       f32_4 %139 = OpLoad %9 
                                       f32_3 %140 = OpVectorShuffle %139 %139 0 1 2 
                                         f32 %141 = OpDot %138 %140 
                                                      OpStore %136 %141 
                                         f32 %142 = OpLoad %136 
                                         f32 %143 = OpExtInst %1 32 %142 
                                                      OpStore %136 %143 
                                         f32 %145 = OpLoad %136 
                                       f32_3 %146 = OpCompositeConstruct %145 %145 %145 
                                       f32_4 %147 = OpLoad %9 
                                       f32_3 %148 = OpVectorShuffle %147 %147 0 1 2 
                                       f32_3 %149 = OpFMul %146 %148 
                                                      OpStore vs_TEXCOORD1 %149 
                                                      OpStore vs_TEXCOORD5 %152 
                                                      OpStore vs_TEXCOORD6 %152 
                                 Output f32* %155 = OpAccessChain %85 %23 %81 
                                         f32 %156 = OpLoad %155 
                                         f32 %157 = OpFNegate %156 
                                 Output f32* %158 = OpAccessChain %85 %23 %81 
                                                      OpStore %158 %157 
                                                      OpReturn
                                                      OpFunctionEnd
; SPIR-V
; Version: 1.0
; Generator: Khronos Glslang Reference Front End; 6
; Bound: 430
; Schema: 0
                                                      OpCapability Shader 
                                               %1 = OpExtInstImport "GLSL.std.450" 
                                                      OpMemoryModel Logical GLSL450 
                                                      OpEntryPoint Fragment %4 "main" %11 %57 %402 %423 
                                                      OpExecutionMode %4 OriginUpperLeft 
                                                      OpName vs_TEXCOORD2 "vs_TEXCOORD2" 
                                                      OpName vs_TEXCOORD1 "vs_TEXCOORD1" 
                                                      OpName vs_TEXCOORD0 "vs_TEXCOORD0" 
                                                      OpDecorate vs_TEXCOORD2 Location 11 
                                                      OpDecorate %17 ArrayStride 17 
                                                      OpDecorate %19 ArrayStride 19 
                                                      OpMemberDecorate %20 0 Offset 20 
                                                      OpMemberDecorate %20 1 RelaxedPrecision 
                                                      OpMemberDecorate %20 1 Offset 20 
                                                      OpMemberDecorate %20 2 Offset 20 
                                                      OpMemberDecorate %20 3 RelaxedPrecision 
                                                      OpMemberDecorate %20 3 Offset 20 
                                                      OpMemberDecorate %20 4 Offset 20 
                                                      OpMemberDecorate %20 5 Offset 20 
                                                      OpMemberDecorate %20 6 RelaxedPrecision 
                                                      OpMemberDecorate %20 6 Offset 20 
                                                      OpMemberDecorate %20 7 RelaxedPrecision 
                                                      OpMemberDecorate %20 7 Offset 20 
                                                      OpMemberDecorate %20 8 RelaxedPrecision 
                                                      OpMemberDecorate %20 8 Offset 20 
                                                      OpMemberDecorate %20 9 RelaxedPrecision 
                                                      OpMemberDecorate %20 9 Offset 20 
                                                      OpMemberDecorate %20 10 RelaxedPrecision 
                                                      OpMemberDecorate %20 10 Offset 20 
                                                      OpMemberDecorate %20 11 RelaxedPrecision 
                                                      OpMemberDecorate %20 11 Offset 20 
                                                      OpMemberDecorate %20 12 RelaxedPrecision 
                                                      OpMemberDecorate %20 12 Offset 20 
                                                      OpMemberDecorate %20 13 RelaxedPrecision 
                                                      OpMemberDecorate %20 13 Offset 20 
                                                      OpMemberDecorate %20 14 RelaxedPrecision 
                                                      OpMemberDecorate %20 14 Offset 20 
                                                      OpDecorate %20 Block 
                                                      OpDecorate %22 DescriptorSet 22 
                                                      OpDecorate %22 Binding 22 
                                                      OpDecorate %36 RelaxedPrecision 
                                                      OpDecorate %44 RelaxedPrecision 
                                                      OpDecorate %45 RelaxedPrecision 
                                                      OpDecorate %47 RelaxedPrecision 
                                                      OpDecorate %48 RelaxedPrecision 
                                                      OpDecorate %49 RelaxedPrecision 
                                                      OpDecorate %50 RelaxedPrecision 
                                                      OpDecorate %51 RelaxedPrecision 
                                                      OpDecorate %52 RelaxedPrecision 
                                                      OpDecorate %53 RelaxedPrecision 
                                                      OpDecorate %54 RelaxedPrecision 
                                                      OpDecorate %55 RelaxedPrecision 
                                                      OpDecorate %56 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD1 Location 57 
                                                      OpDecorate %61 RelaxedPrecision 
                                                      OpDecorate %62 RelaxedPrecision 
                                                      OpDecorate %63 RelaxedPrecision 
                                                      OpDecorate %64 RelaxedPrecision 
                                                      OpDecorate %68 RelaxedPrecision 
                                                      OpDecorate %69 RelaxedPrecision 
                                                      OpDecorate %70 RelaxedPrecision 
                                                      OpDecorate %73 RelaxedPrecision 
                                                      OpDecorate %75 RelaxedPrecision 
                                                      OpDecorate %76 RelaxedPrecision 
                                                      OpDecorate %77 RelaxedPrecision 
                                                      OpDecorate %81 RelaxedPrecision 
                                                      OpDecorate %82 RelaxedPrecision 
                                                      OpDecorate %85 RelaxedPrecision 
                                                      OpDecorate %89 RelaxedPrecision 
                                                      OpDecorate %90 RelaxedPrecision 
                                                      OpDecorate %94 RelaxedPrecision 
                                                      OpDecorate %96 RelaxedPrecision 
                                                      OpDecorate %100 RelaxedPrecision 
                                                      OpDecorate %106 RelaxedPrecision 
                                                      OpDecorate %107 RelaxedPrecision 
                                                      OpDecorate %109 RelaxedPrecision 
                                                      OpDecorate %110 RelaxedPrecision 
                                                      OpDecorate %116 RelaxedPrecision 
                                                      OpDecorate %117 RelaxedPrecision 
                                                      OpDecorate %119 RelaxedPrecision 
                                                      OpDecorate %121 RelaxedPrecision 
                                                      OpDecorate %122 RelaxedPrecision 
                                                      OpDecorate %123 RelaxedPrecision 
                                                      OpDecorate %126 RelaxedPrecision 
                                                      OpDecorate %127 RelaxedPrecision 
                                                      OpDecorate %128 RelaxedPrecision 
                                                      OpDecorate %129 RelaxedPrecision 
                                                      OpDecorate %202 RelaxedPrecision 
                                                      OpDecorate %205 RelaxedPrecision 
                                                      OpDecorate %250 DescriptorSet 250 
                                                      OpDecorate %250 Binding 250 
                                                      OpDecorate %254 DescriptorSet 254 
                                                      OpDecorate %254 Binding 254 
                                                      OpDecorate %263 RelaxedPrecision 
                                                      OpDecorate %264 RelaxedPrecision 
                                                      OpDecorate %265 RelaxedPrecision 
                                                      OpDecorate %269 RelaxedPrecision 
                                                      OpDecorate %272 RelaxedPrecision 
                                                      OpDecorate %276 RelaxedPrecision 
                                                      OpDecorate %277 RelaxedPrecision 
                                                      OpDecorate %278 RelaxedPrecision 
                                                      OpDecorate %281 RelaxedPrecision 
                                                      OpDecorate %284 RelaxedPrecision 
                                                      OpDecorate %289 RelaxedPrecision 
                                                      OpDecorate %294 RelaxedPrecision 
                                                      OpDecorate %295 RelaxedPrecision 
                                                      OpDecorate %298 RelaxedPrecision 
                                                      OpDecorate %299 RelaxedPrecision 
                                                      OpDecorate %300 RelaxedPrecision 
                                                      OpDecorate %303 RelaxedPrecision 
                                                      OpDecorate %307 RelaxedPrecision 
                                                      OpDecorate %308 RelaxedPrecision 
                                                      OpDecorate %309 RelaxedPrecision 
                                                      OpDecorate %312 RelaxedPrecision 
                                                      OpDecorate %313 RelaxedPrecision 
                                                      OpDecorate %314 RelaxedPrecision 
                                                      OpDecorate %315 RelaxedPrecision 
                                                      OpDecorate %316 RelaxedPrecision 
                                                      OpDecorate %318 RelaxedPrecision 
                                                      OpDecorate %319 RelaxedPrecision 
                                                      OpDecorate %322 RelaxedPrecision 
                                                      OpDecorate %323 RelaxedPrecision 
                                                      OpDecorate %325 RelaxedPrecision 
                                                      OpDecorate %326 RelaxedPrecision 
                                                      OpDecorate %327 RelaxedPrecision 
                                                      OpDecorate %328 RelaxedPrecision 
                                                      OpDecorate %329 RelaxedPrecision 
                                                      OpDecorate %330 RelaxedPrecision 
                                                      OpDecorate %331 RelaxedPrecision 
                                                      OpDecorate %332 RelaxedPrecision 
                                                      OpDecorate %333 RelaxedPrecision 
                                                      OpDecorate %335 RelaxedPrecision 
                                                      OpDecorate %336 RelaxedPrecision 
                                                      OpDecorate %339 RelaxedPrecision 
                                                      OpDecorate %340 RelaxedPrecision 
                                                      OpDecorate %343 RelaxedPrecision 
                                                      OpDecorate %344 RelaxedPrecision 
                                                      OpDecorate %345 RelaxedPrecision 
                                                      OpDecorate %347 RelaxedPrecision 
                                                      OpDecorate %349 RelaxedPrecision 
                                                      OpDecorate %350 RelaxedPrecision 
                                                      OpDecorate %353 RelaxedPrecision 
                                                      OpDecorate %354 RelaxedPrecision 
                                                      OpDecorate %355 RelaxedPrecision 
                                                      OpDecorate %358 RelaxedPrecision 
                                                      OpDecorate %360 RelaxedPrecision 
                                                      OpDecorate %361 RelaxedPrecision 
                                                      OpDecorate %365 RelaxedPrecision 
                                                      OpDecorate %366 RelaxedPrecision 
                                                      OpDecorate %367 RelaxedPrecision 
                                                      OpDecorate %370 RelaxedPrecision 
                                                      OpDecorate %371 RelaxedPrecision 
                                                      OpDecorate %372 RelaxedPrecision 
                                                      OpDecorate %374 RelaxedPrecision 
                                                      OpDecorate %375 RelaxedPrecision 
                                                      OpDecorate %376 RelaxedPrecision 
                                                      OpDecorate %377 RelaxedPrecision 
                                                      OpDecorate %379 RelaxedPrecision 
                                                      OpDecorate %380 RelaxedPrecision 
                                                      OpDecorate %381 RelaxedPrecision 
                                                      OpDecorate %382 RelaxedPrecision 
                                                      OpDecorate %383 RelaxedPrecision 
                                                      OpDecorate %385 RelaxedPrecision 
                                                      OpDecorate %386 RelaxedPrecision 
                                                      OpDecorate %387 RelaxedPrecision 
                                                      OpDecorate %388 RelaxedPrecision 
                                                      OpDecorate %389 RelaxedPrecision 
                                                      OpDecorate %390 RelaxedPrecision 
                                                      OpDecorate %391 RelaxedPrecision 
                                                      OpDecorate %392 RelaxedPrecision 
                                                      OpDecorate %393 RelaxedPrecision 
                                                      OpDecorate %394 RelaxedPrecision 
                                                      OpDecorate %395 RelaxedPrecision 
                                                      OpDecorate %395 DescriptorSet 395 
                                                      OpDecorate %395 Binding 395 
                                                      OpDecorate %396 RelaxedPrecision 
                                                      OpDecorate %397 RelaxedPrecision 
                                                      OpDecorate %397 DescriptorSet 397 
                                                      OpDecorate %397 Binding 397 
                                                      OpDecorate %398 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD0 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD0 Location 402 
                                                      OpDecorate %403 RelaxedPrecision 
                                                      OpDecorate %404 RelaxedPrecision 
                                                      OpDecorate %405 RelaxedPrecision 
                                                      OpDecorate %406 RelaxedPrecision 
                                                      OpDecorate %409 RelaxedPrecision 
                                                      OpDecorate %410 RelaxedPrecision 
                                                      OpDecorate %411 RelaxedPrecision 
                                                      OpDecorate %412 RelaxedPrecision 
                                                      OpDecorate %414 RelaxedPrecision 
                                                      OpDecorate %415 RelaxedPrecision 
                                                      OpDecorate %416 RelaxedPrecision 
                                                      OpDecorate %417 RelaxedPrecision 
                                                      OpDecorate %418 RelaxedPrecision 
                                                      OpDecorate %419 RelaxedPrecision 
                                                      OpDecorate %423 RelaxedPrecision 
                                                      OpDecorate %423 Location 423 
                                               %2 = OpTypeVoid 
                                               %3 = OpTypeFunction %2 
                                               %6 = OpTypeFloat 32 
                                               %7 = OpTypeVector %6 3 
                                               %8 = OpTypePointer Private %7 
                                Private f32_3* %9 = OpVariable Private 
                                              %10 = OpTypePointer Input %7 
                        Input f32_3* vs_TEXCOORD2 = OpVariable Input 
                                              %14 = OpTypeVector %6 4 
                                              %15 = OpTypeInt 32 0 
                                          u32 %16 = OpConstant 16 
                                              %17 = OpTypeArray %14 %16 
                                          u32 %18 = OpConstant 4 
                                              %19 = OpTypeArray %14 %18 
                                              %20 = OpTypeStruct %7 %14 %17 %14 %14 %19 %14 %14 %14 %6 %14 %14 %6 %6 %6 
                                              %21 = OpTypePointer Uniform %20 
Uniform struct {f32_3; f32_4; f32_4[16]; f32_4; f32_4; f32_4[4]; f32_4; f32_4; f32_4; f32; f32_4; f32_4; f32; f32; f32;}* %22 = OpVariable Uniform 
                                              %23 = OpTypeInt 32 1 
                                          i32 %24 = OpConstant 0 
                                              %25 = OpTypePointer Uniform %7 
                                              %29 = OpTypePointer Private %6 
                                 Private f32* %30 = OpVariable Private 
                               Private f32_3* %36 = OpVariable Private 
                                          i32 %41 = OpConstant 1 
                                              %42 = OpTypePointer Uniform %14 
                                 Private f32* %47 = OpVariable Private 
                        Input f32_3* vs_TEXCOORD1 = OpVariable Input 
                               Private f32_3* %63 = OpVariable Private 
                                          u32 %71 = OpConstant 0 
                                          u32 %78 = OpConstant 1 
                                              %80 = OpTypeVector %6 2 
                                          f32 %83 = OpConstant 3.674022E-40 
                                        f32_2 %84 = OpConstantComposite %83 %83 
                                          i32 %91 = OpConstant 9 
                                              %92 = OpTypePointer Uniform %6 
                                          f32 %95 = OpConstant 3.674022E-40 
                                         i32 %104 = OpConstant 14 
                                         f32 %108 = OpConstant 3.674022E-40 
                                         f32 %113 = OpConstant 3.674022E-40 
                                Private f32* %119 = OpVariable Private 
                              Private f32_3* %124 = OpVariable Private 
                                         f32 %131 = OpConstant 3.674022E-40 
                                         f32 %143 = OpConstant 3.674022E-40 
                                         f32 %145 = OpConstant 3.674022E-40 
                                         i32 %155 = OpConstant 5 
                                         u32 %156 = OpConstant 2 
                                         i32 %163 = OpConstant 2 
                                         i32 %172 = OpConstant 4 
                                Private f32* %178 = OpVariable Private 
                                         u32 %189 = OpConstant 3 
                                         i32 %200 = OpConstant 3 
                                             %239 = OpTypePointer Function %7 
                                             %248 = OpTypeImage %6 Dim2D 0 0 0 1 Unknown 
                                             %249 = OpTypePointer UniformConstant %248 
        UniformConstant read_only Texture2D* %250 = OpVariable UniformConstant 
                                             %252 = OpTypeSampler 
                                             %253 = OpTypePointer UniformConstant %252 
                    UniformConstant sampler* %254 = OpVariable UniformConstant 
                                             %256 = OpTypeImage %6 Dim2D 1 0 0 1 Unknown 
                                             %257 = OpTypeSampledImage %256 
                                         i32 %292 = OpConstant 6 
                                         i32 %296 = OpConstant 7 
                                         i32 %305 = OpConstant 13 
                                         i32 %310 = OpConstant 12 
                              Private f32_3* %314 = OpVariable Private 
                                         i32 %363 = OpConstant 10 
                                         i32 %368 = OpConstant 11 
                              Private f32_3* %394 = OpVariable Private 
        UniformConstant read_only Texture2D* %395 = OpVariable UniformConstant 
                    UniformConstant sampler* %397 = OpVariable UniformConstant 
                                             %399 = OpTypeSampledImage %248 
                                             %401 = OpTypePointer Input %80 
                        Input f32_2* vs_TEXCOORD0 = OpVariable Input 
                                         i32 %407 = OpConstant 8 
                                             %422 = OpTypePointer Output %14 
                               Output f32_4* %423 = OpVariable Output 
                                             %427 = OpTypePointer Output %6 
                                          void %4 = OpFunction None %3 
                                               %5 = OpLabel 
                             Function f32_3* %240 = OpVariable Function 
                                        f32_3 %12 = OpLoad vs_TEXCOORD2 
                                        f32_3 %13 = OpFNegate %12 
                               Uniform f32_3* %26 = OpAccessChain %22 %24 
                                        f32_3 %27 = OpLoad %26 
                                        f32_3 %28 = OpFAdd %13 %27 
                                                      OpStore %9 %28 
                                        f32_3 %31 = OpLoad %9 
                                        f32_3 %32 = OpLoad %9 
                                          f32 %33 = OpDot %31 %32 
                                                      OpStore %30 %33 
                                          f32 %34 = OpLoad %30 
                                          f32 %35 = OpExtInst %1 32 %34 
                                                      OpStore %30 %35 
                                        f32_3 %37 = OpLoad %9 
                                          f32 %38 = OpLoad %30 
                                        f32_3 %39 = OpCompositeConstruct %38 %38 %38 
                                        f32_3 %40 = OpFMul %37 %39 
                               Uniform f32_4* %43 = OpAccessChain %22 %41 
                                        f32_4 %44 = OpLoad %43 
                                        f32_3 %45 = OpVectorShuffle %44 %44 0 1 2 
                                        f32_3 %46 = OpFAdd %40 %45 
                                                      OpStore %36 %46 
                                        f32_3 %48 = OpLoad %36 
                                        f32_3 %49 = OpLoad %36 
                                          f32 %50 = OpDot %48 %49 
                                                      OpStore %47 %50 
                                          f32 %51 = OpLoad %47 
                                          f32 %52 = OpExtInst %1 32 %51 
                                                      OpStore %47 %52 
                                          f32 %53 = OpLoad %47 
                                        f32_3 %54 = OpCompositeConstruct %53 %53 %53 
                                        f32_3 %55 = OpLoad %36 
                                        f32_3 %56 = OpFMul %54 %55 
                                                      OpStore %36 %56 
                                        f32_3 %58 = OpLoad vs_TEXCOORD1 
                                        f32_3 %59 = OpLoad vs_TEXCOORD1 
                                          f32 %60 = OpDot %58 %59 
                                                      OpStore %47 %60 
                                          f32 %61 = OpLoad %47 
                                          f32 %62 = OpExtInst %1 32 %61 
                                                      OpStore %47 %62 
                                          f32 %64 = OpLoad %47 
                                        f32_3 %65 = OpCompositeConstruct %64 %64 %64 
                                        f32_3 %66 = OpLoad vs_TEXCOORD1 
                                        f32_3 %67 = OpFMul %65 %66 
                                                      OpStore %63 %67 
                                        f32_3 %68 = OpLoad %63 
                                        f32_3 %69 = OpLoad %36 
                                          f32 %70 = OpDot %68 %69 
                                 Private f32* %72 = OpAccessChain %36 %71 
                                                      OpStore %72 %70 
                                        f32_3 %73 = OpLoad %63 
                               Uniform f32_4* %74 = OpAccessChain %22 %41 
                                        f32_4 %75 = OpLoad %74 
                                        f32_3 %76 = OpVectorShuffle %75 %75 0 1 2 
                                          f32 %77 = OpDot %73 %76 
                                 Private f32* %79 = OpAccessChain %36 %78 
                                                      OpStore %79 %77 
                                        f32_3 %81 = OpLoad %36 
                                        f32_2 %82 = OpVectorShuffle %81 %81 0 1 
                                        f32_2 %85 = OpExtInst %1 40 %82 %84 
                                        f32_3 %86 = OpLoad %36 
                                        f32_3 %87 = OpVectorShuffle %86 %85 3 4 2 
                                                      OpStore %36 %87 
                                 Private f32* %88 = OpAccessChain %36 %71 
                                          f32 %89 = OpLoad %88 
                                          f32 %90 = OpExtInst %1 30 %89 
                                                      OpStore %30 %90 
                                 Uniform f32* %93 = OpAccessChain %22 %91 
                                          f32 %94 = OpLoad %93 
                                          f32 %96 = OpFMul %94 %95 
                                 Private f32* %97 = OpAccessChain %36 %71 
                                                      OpStore %97 %96 
                                          f32 %98 = OpLoad %30 
                                 Private f32* %99 = OpAccessChain %36 %71 
                                         f32 %100 = OpLoad %99 
                                         f32 %101 = OpFMul %98 %100 
                                                      OpStore %30 %101 
                                         f32 %102 = OpLoad %30 
                                         f32 %103 = OpExtInst %1 29 %102 
                                                      OpStore %30 %103 
                                Uniform f32* %105 = OpAccessChain %22 %104 
                                         f32 %106 = OpLoad %105 
                                         f32 %107 = OpFNegate %106 
                                         f32 %109 = OpFMul %107 %108 
                                         f32 %110 = OpFAdd %109 %108 
                                Private f32* %111 = OpAccessChain %36 %71 
                                                      OpStore %111 %110 
                                         f32 %112 = OpLoad %30 
                                         f32 %114 = OpFMul %112 %113 
                                Private f32* %115 = OpAccessChain %36 %71 
                                         f32 %116 = OpLoad %115 
                                         f32 %117 = OpFNegate %116 
                                         f32 %118 = OpFAdd %114 %117 
                                                      OpStore %30 %118 
                                Uniform f32* %120 = OpAccessChain %22 %104 
                                         f32 %121 = OpLoad %120 
                                         f32 %122 = OpFMul %121 %108 
                                         f32 %123 = OpFAdd %122 %108 
                                                      OpStore %119 %123 
                                Private f32* %125 = OpAccessChain %36 %71 
                                         f32 %126 = OpLoad %125 
                                         f32 %127 = OpFNegate %126 
                                         f32 %128 = OpLoad %119 
                                         f32 %129 = OpFAdd %127 %128 
                                Private f32* %130 = OpAccessChain %124 %71 
                                                      OpStore %130 %129 
                                Private f32* %132 = OpAccessChain %124 %71 
                                         f32 %133 = OpLoad %132 
                                         f32 %134 = OpFDiv %131 %133 
                                Private f32* %135 = OpAccessChain %124 %71 
                                                      OpStore %135 %134 
                                         f32 %136 = OpLoad %30 
                                Private f32* %137 = OpAccessChain %124 %71 
                                         f32 %138 = OpLoad %137 
                                         f32 %139 = OpFMul %136 %138 
                                                      OpStore %30 %139 
                                         f32 %140 = OpLoad %30 
                                         f32 %141 = OpExtInst %1 43 %140 %83 %131 
                                                      OpStore %30 %141 
                                         f32 %142 = OpLoad %30 
                                         f32 %144 = OpFMul %142 %143 
                                         f32 %146 = OpFAdd %144 %145 
                                Private f32* %147 = OpAccessChain %124 %71 
                                                      OpStore %147 %146 
                                         f32 %148 = OpLoad %30 
                                         f32 %149 = OpLoad %30 
                                         f32 %150 = OpFMul %148 %149 
                                                      OpStore %30 %150 
                                         f32 %151 = OpLoad %30 
                                Private f32* %152 = OpAccessChain %124 %71 
                                         f32 %153 = OpLoad %152 
                                         f32 %154 = OpFMul %151 %153 
                                                      OpStore %30 %154 
                                Uniform f32* %157 = OpAccessChain %22 %155 %24 %156 
                                         f32 %158 = OpLoad %157 
                                Private f32* %159 = OpAccessChain %124 %71 
                                                      OpStore %159 %158 
                                Uniform f32* %160 = OpAccessChain %22 %155 %41 %156 
                                         f32 %161 = OpLoad %160 
                                Private f32* %162 = OpAccessChain %124 %78 
                                                      OpStore %162 %161 
                                Uniform f32* %164 = OpAccessChain %22 %155 %163 %156 
                                         f32 %165 = OpLoad %164 
                                Private f32* %166 = OpAccessChain %124 %156 
                                                      OpStore %166 %165 
                                       f32_3 %167 = OpLoad %9 
                                       f32_3 %168 = OpLoad %124 
                                         f32 %169 = OpDot %167 %168 
                                Private f32* %170 = OpAccessChain %9 %71 
                                                      OpStore %170 %169 
                                       f32_3 %171 = OpLoad vs_TEXCOORD2 
                              Uniform f32_4* %173 = OpAccessChain %22 %172 
                                       f32_4 %174 = OpLoad %173 
                                       f32_3 %175 = OpVectorShuffle %174 %174 0 1 2 
                                       f32_3 %176 = OpFNegate %175 
                                       f32_3 %177 = OpFAdd %171 %176 
                                                      OpStore %124 %177 
                                       f32_3 %179 = OpLoad %124 
                                       f32_3 %180 = OpLoad %124 
                                         f32 %181 = OpDot %179 %180 
                                                      OpStore %178 %181 
                                         f32 %182 = OpLoad %178 
                                         f32 %183 = OpExtInst %1 31 %182 
                                                      OpStore %178 %183 
                                Private f32* %184 = OpAccessChain %9 %71 
                                         f32 %185 = OpLoad %184 
                                         f32 %186 = OpFNegate %185 
                                         f32 %187 = OpLoad %178 
                                         f32 %188 = OpFAdd %186 %187 
                                                      OpStore %178 %188 
                                Uniform f32* %190 = OpAccessChain %22 %172 %189 
                                         f32 %191 = OpLoad %190 
                                         f32 %192 = OpLoad %178 
                                         f32 %193 = OpFMul %191 %192 
                                Private f32* %194 = OpAccessChain %9 %71 
                                         f32 %195 = OpLoad %194 
                                         f32 %196 = OpFAdd %193 %195 
                                Private f32* %197 = OpAccessChain %9 %71 
                                                      OpStore %197 %196 
                                Private f32* %198 = OpAccessChain %9 %71 
                                         f32 %199 = OpLoad %198 
                                Uniform f32* %201 = OpAccessChain %22 %200 %156 
                                         f32 %202 = OpLoad %201 
                                         f32 %203 = OpFMul %199 %202 
                                Uniform f32* %204 = OpAccessChain %22 %200 %189 
                                         f32 %205 = OpLoad %204 
                                         f32 %206 = OpFAdd %203 %205 
                                Private f32* %207 = OpAccessChain %9 %71 
                                                      OpStore %207 %206 
                                Private f32* %208 = OpAccessChain %9 %71 
                                         f32 %209 = OpLoad %208 
                                         f32 %210 = OpExtInst %1 43 %209 %83 %131 
                                Private f32* %211 = OpAccessChain %9 %71 
                                                      OpStore %211 %210 
                                       f32_3 %212 = OpLoad vs_TEXCOORD2 
                                       f32_3 %213 = OpVectorShuffle %212 %212 1 1 1 
                              Uniform f32_4* %214 = OpAccessChain %22 %163 %41 
                                       f32_4 %215 = OpLoad %214 
                                       f32_3 %216 = OpVectorShuffle %215 %215 0 1 2 
                                       f32_3 %217 = OpFMul %213 %216 
                                                      OpStore %124 %217 
                              Uniform f32_4* %218 = OpAccessChain %22 %163 %24 
                                       f32_4 %219 = OpLoad %218 
                                       f32_3 %220 = OpVectorShuffle %219 %219 0 1 2 
                                       f32_3 %221 = OpLoad vs_TEXCOORD2 
                                       f32_3 %222 = OpVectorShuffle %221 %221 0 0 0 
                                       f32_3 %223 = OpFMul %220 %222 
                                       f32_3 %224 = OpLoad %124 
                                       f32_3 %225 = OpFAdd %223 %224 
                                                      OpStore %124 %225 
                              Uniform f32_4* %226 = OpAccessChain %22 %163 %163 
                                       f32_4 %227 = OpLoad %226 
                                       f32_3 %228 = OpVectorShuffle %227 %227 0 1 2 
                                       f32_3 %229 = OpLoad vs_TEXCOORD2 
                                       f32_3 %230 = OpVectorShuffle %229 %229 2 2 2 
                                       f32_3 %231 = OpFMul %228 %230 
                                       f32_3 %232 = OpLoad %124 
                                       f32_3 %233 = OpFAdd %231 %232 
                                                      OpStore %124 %233 
                                       f32_3 %234 = OpLoad %124 
                              Uniform f32_4* %235 = OpAccessChain %22 %163 %200 
                                       f32_4 %236 = OpLoad %235 
                                       f32_3 %237 = OpVectorShuffle %236 %236 0 1 2 
                                       f32_3 %238 = OpFAdd %234 %237 
                                                      OpStore %124 %238 
                                       f32_3 %241 = OpLoad %124 
                                       f32_2 %242 = OpVectorShuffle %241 %241 0 1 
                                Private f32* %243 = OpAccessChain %124 %156 
                                         f32 %244 = OpLoad %243 
                                         f32 %245 = OpCompositeExtract %242 0 
                                         f32 %246 = OpCompositeExtract %242 1 
                                       f32_3 %247 = OpCompositeConstruct %245 %246 %244 
                                                      OpStore %240 %247 
                         read_only Texture2D %251 = OpLoad %250 
                                     sampler %255 = OpLoad %254 
                  read_only Texture2DSampled %258 = OpSampledImage %251 %255 
                                       f32_3 %259 = OpLoad %240 
                                         f32 %260 = OpCompositeExtract %259 2 
                                         f32 %261 = OpImageSampleDrefExplicitLod %258 %259 %260 Lod %6 
                                                      OpStore %178 %261 
                                Uniform f32* %262 = OpAccessChain %22 %200 %71 
                                         f32 %263 = OpLoad %262 
                                         f32 %264 = OpFNegate %263 
                                         f32 %265 = OpFAdd %264 %131 
                                Private f32* %266 = OpAccessChain %36 %71 
                                                      OpStore %266 %265 
                                         f32 %267 = OpLoad %178 
                                Private f32* %268 = OpAccessChain %36 %71 
                                         f32 %269 = OpLoad %268 
                                         f32 %270 = OpFMul %267 %269 
                                Uniform f32* %271 = OpAccessChain %22 %200 %71 
                                         f32 %272 = OpLoad %271 
                                         f32 %273 = OpFAdd %270 %272 
                                Private f32* %274 = OpAccessChain %36 %71 
                                                      OpStore %274 %273 
                                Private f32* %275 = OpAccessChain %36 %71 
                                         f32 %276 = OpLoad %275 
                                         f32 %277 = OpFNegate %276 
                                         f32 %278 = OpFAdd %277 %131 
                                                      OpStore %119 %278 
                                Private f32* %279 = OpAccessChain %9 %71 
                                         f32 %280 = OpLoad %279 
                                         f32 %281 = OpLoad %119 
                                         f32 %282 = OpFMul %280 %281 
                                Private f32* %283 = OpAccessChain %36 %71 
                                         f32 %284 = OpLoad %283 
                                         f32 %285 = OpFAdd %282 %284 
                                Private f32* %286 = OpAccessChain %36 %71 
                                                      OpStore %286 %285 
                                         f32 %287 = OpLoad %30 
                                Private f32* %288 = OpAccessChain %36 %71 
                                         f32 %289 = OpLoad %288 
                                         f32 %290 = OpFMul %287 %289 
                                Private f32* %291 = OpAccessChain %9 %71 
                                                      OpStore %291 %290 
                              Uniform f32_4* %293 = OpAccessChain %22 %292 
                                       f32_4 %294 = OpLoad %293 
                                       f32_3 %295 = OpVectorShuffle %294 %294 0 1 2 
                              Uniform f32_4* %297 = OpAccessChain %22 %296 
                                       f32_4 %298 = OpLoad %297 
                                       f32_3 %299 = OpVectorShuffle %298 %298 0 1 2 
                                       f32_3 %300 = OpFMul %295 %299 
                                                      OpStore %63 %300 
                                       f32_3 %301 = OpLoad %9 
                                       f32_3 %302 = OpVectorShuffle %301 %301 0 0 0 
                                       f32_3 %303 = OpLoad %63 
                                       f32_3 %304 = OpFMul %302 %303 
                                                      OpStore %9 %304 
                                Uniform f32* %306 = OpAccessChain %22 %305 
                                         f32 %307 = OpLoad %306 
                                         f32 %308 = OpFNegate %307 
                                         f32 %309 = OpFMul %308 %108 
                                Uniform f32* %311 = OpAccessChain %22 %310 
                                         f32 %312 = OpLoad %311 
                                         f32 %313 = OpFAdd %309 %312 
                                                      OpStore %119 %313 
                                         f32 %315 = OpLoad %119 
                                         f32 %316 = OpFNegate %315 
                                Private f32* %317 = OpAccessChain %36 %78 
                                         f32 %318 = OpLoad %317 
                                         f32 %319 = OpFAdd %316 %318 
                                Private f32* %320 = OpAccessChain %314 %71 
                                                      OpStore %320 %319 
                                Uniform f32* %321 = OpAccessChain %22 %305 
                                         f32 %322 = OpLoad %321 
                                         f32 %323 = OpFMul %322 %108 
                                Uniform f32* %324 = OpAccessChain %22 %310 
                                         f32 %325 = OpLoad %324 
                                         f32 %326 = OpFAdd %323 %325 
                                                      OpStore %47 %326 
                                         f32 %327 = OpLoad %119 
                                         f32 %328 = OpFNegate %327 
                                         f32 %329 = OpLoad %47 
                                         f32 %330 = OpFAdd %328 %329 
                                                      OpStore %119 %330 
                                         f32 %331 = OpLoad %119 
                                         f32 %332 = OpFDiv %131 %331 
                                                      OpStore %119 %332 
                                         f32 %333 = OpLoad %119 
                                Private f32* %334 = OpAccessChain %314 %71 
                                         f32 %335 = OpLoad %334 
                                         f32 %336 = OpFMul %333 %335 
                                Private f32* %337 = OpAccessChain %314 %71 
                                                      OpStore %337 %336 
                                Private f32* %338 = OpAccessChain %314 %71 
                                         f32 %339 = OpLoad %338 
                                         f32 %340 = OpExtInst %1 43 %339 %83 %131 
                                Private f32* %341 = OpAccessChain %314 %71 
                                                      OpStore %341 %340 
                                Private f32* %342 = OpAccessChain %314 %71 
                                         f32 %343 = OpLoad %342 
                                         f32 %344 = OpFMul %343 %143 
                                         f32 %345 = OpFAdd %344 %145 
                                                      OpStore %119 %345 
                                Private f32* %346 = OpAccessChain %314 %71 
                                         f32 %347 = OpLoad %346 
                                Private f32* %348 = OpAccessChain %314 %71 
                                         f32 %349 = OpLoad %348 
                                         f32 %350 = OpFMul %347 %349 
                                Private f32* %351 = OpAccessChain %314 %71 
                                                      OpStore %351 %350 
                                Private f32* %352 = OpAccessChain %314 %71 
                                         f32 %353 = OpLoad %352 
                                         f32 %354 = OpLoad %119 
                                         f32 %355 = OpFMul %353 %354 
                                Private f32* %356 = OpAccessChain %314 %71 
                                                      OpStore %356 %355 
                                Private f32* %357 = OpAccessChain %36 %71 
                                         f32 %358 = OpLoad %357 
                                Private f32* %359 = OpAccessChain %314 %71 
                                         f32 %360 = OpLoad %359 
                                         f32 %361 = OpFMul %358 %360 
                                Private f32* %362 = OpAccessChain %36 %71 
                                                      OpStore %362 %361 
                              Uniform f32_4* %364 = OpAccessChain %22 %363 
                                       f32_4 %365 = OpLoad %364 
                                       f32_3 %366 = OpVectorShuffle %365 %365 0 1 2 
                                       f32_3 %367 = OpFNegate %366 
                              Uniform f32_4* %369 = OpAccessChain %22 %368 
                                       f32_4 %370 = OpLoad %369 
                                       f32_3 %371 = OpVectorShuffle %370 %370 0 1 2 
                                       f32_3 %372 = OpFAdd %367 %371 
                                                      OpStore %314 %372 
                              Uniform f32_4* %373 = OpAccessChain %22 %368 
                                       f32_4 %374 = OpLoad %373 
                                       f32_3 %375 = OpVectorShuffle %374 %374 3 3 3 
                                       f32_3 %376 = OpLoad %314 
                                       f32_3 %377 = OpFMul %375 %376 
                              Uniform f32_4* %378 = OpAccessChain %22 %363 
                                       f32_4 %379 = OpLoad %378 
                                       f32_3 %380 = OpVectorShuffle %379 %379 0 1 2 
                                       f32_3 %381 = OpFAdd %377 %380 
                                                      OpStore %314 %381 
                                       f32_3 %382 = OpLoad %314 
                                       f32_3 %383 = OpFNegate %382 
                              Uniform f32_4* %384 = OpAccessChain %22 %363 
                                       f32_4 %385 = OpLoad %384 
                                       f32_3 %386 = OpVectorShuffle %385 %385 0 1 2 
                                       f32_3 %387 = OpFAdd %383 %386 
                                                      OpStore %63 %387 
                                       f32_3 %388 = OpLoad %36 
                                       f32_3 %389 = OpVectorShuffle %388 %388 0 0 0 
                                       f32_3 %390 = OpLoad %63 
                                       f32_3 %391 = OpFMul %389 %390 
                                       f32_3 %392 = OpLoad %314 
                                       f32_3 %393 = OpFAdd %391 %392 
                                                      OpStore %36 %393 
                         read_only Texture2D %396 = OpLoad %395 
                                     sampler %398 = OpLoad %397 
                  read_only Texture2DSampled %400 = OpSampledImage %396 %398 
                                       f32_2 %403 = OpLoad vs_TEXCOORD0 
                                       f32_4 %404 = OpImageSampleImplicitLod %400 %403 
                                       f32_3 %405 = OpVectorShuffle %404 %404 0 1 2 
                                                      OpStore %394 %405 
                                       f32_3 %406 = OpLoad %394 
                              Uniform f32_4* %408 = OpAccessChain %22 %407 
                                       f32_4 %409 = OpLoad %408 
                                       f32_3 %410 = OpVectorShuffle %409 %409 0 1 2 
                                       f32_3 %411 = OpFMul %406 %410 
                                                      OpStore %63 %411 
                                       f32_3 %412 = OpLoad %63 
                              Uniform f32_4* %413 = OpAccessChain %22 %292 
                                       f32_4 %414 = OpLoad %413 
                                       f32_3 %415 = OpVectorShuffle %414 %414 0 1 2 
                                       f32_3 %416 = OpFMul %412 %415 
                                                      OpStore %63 %416 
                                       f32_3 %417 = OpLoad %63 
                                       f32_3 %418 = OpLoad %36 
                                       f32_3 %419 = OpFMul %417 %418 
                                       f32_3 %420 = OpLoad %9 
                                       f32_3 %421 = OpFAdd %419 %420 
                                                      OpStore %9 %421 
                                       f32_3 %424 = OpLoad %9 
                                       f32_4 %425 = OpLoad %423 
                                       f32_4 %426 = OpVectorShuffle %425 %424 4 5 6 3 
                                                      OpStore %423 %426 
                                 Output f32* %428 = OpAccessChain %423 %189 
                                                      OpStore %428 %131 
                                                      OpReturn
                                                      OpFunctionEnd
"
}
SubProgram "vulkan hw_tier02 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" }
"; SPIR-V
; Version: 1.0
; Generator: Khronos Glslang Reference Front End; 6
; Bound: 160
; Schema: 0
                                                      OpCapability Shader 
                                               %1 = OpExtInstImport "GLSL.std.450" 
                                                      OpMemoryModel Logical GLSL450 
                                                      OpEntryPoint Vertex %4 "main" %11 %52 %85 %95 %110 %114 %144 %150 %153 
                                                      OpName vs_TEXCOORD2 "vs_TEXCOORD2" 
                                                      OpName vs_TEXCOORD0 "vs_TEXCOORD0" 
                                                      OpName vs_TEXCOORD1 "vs_TEXCOORD1" 
                                                      OpName vs_TEXCOORD5 "vs_TEXCOORD5" 
                                                      OpName vs_TEXCOORD6 "vs_TEXCOORD6" 
                                                      OpDecorate %11 Location 11 
                                                      OpDecorate %16 ArrayStride 16 
                                                      OpDecorate %17 ArrayStride 17 
                                                      OpDecorate %18 ArrayStride 18 
                                                      OpMemberDecorate %19 0 Offset 19 
                                                      OpMemberDecorate %19 1 Offset 19 
                                                      OpMemberDecorate %19 2 Offset 19 
                                                      OpMemberDecorate %19 3 Offset 19 
                                                      OpDecorate %19 Block 
                                                      OpDecorate %21 DescriptorSet 21 
                                                      OpDecorate %21 Binding 21 
                                                      OpDecorate vs_TEXCOORD2 Location 52 
                                                      OpMemberDecorate %83 0 BuiltIn 83 
                                                      OpMemberDecorate %83 1 BuiltIn 83 
                                                      OpMemberDecorate %83 2 BuiltIn 83 
                                                      OpDecorate %83 Block 
                                                      OpDecorate %95 Location 95 
                                                      OpDecorate vs_TEXCOORD0 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD0 Location 110 
                                                      OpDecorate %114 Location 114 
                                                      OpDecorate vs_TEXCOORD1 Location 144 
                                                      OpDecorate vs_TEXCOORD5 Location 150 
                                                      OpDecorate vs_TEXCOORD6 Location 153 
                                               %2 = OpTypeVoid 
                                               %3 = OpTypeFunction %2 
                                               %6 = OpTypeFloat 32 
                                               %7 = OpTypeVector %6 4 
                                               %8 = OpTypePointer Private %7 
                                Private f32_4* %9 = OpVariable Private 
                                              %10 = OpTypePointer Input %7 
                                 Input f32_4* %11 = OpVariable Input 
                                              %14 = OpTypeInt 32 0 
                                          u32 %15 = OpConstant 4 
                                              %16 = OpTypeArray %7 %15 
                                              %17 = OpTypeArray %7 %15 
                                              %18 = OpTypeArray %7 %15 
                                              %19 = OpTypeStruct %16 %17 %18 %7 
                                              %20 = OpTypePointer Uniform %19 
Uniform struct {f32_4[4]; f32_4[4]; f32_4[4]; f32_4;}* %21 = OpVariable Uniform 
                                              %22 = OpTypeInt 32 1 
                                          i32 %23 = OpConstant 0 
                                          i32 %24 = OpConstant 1 
                                              %25 = OpTypePointer Uniform %7 
                                          i32 %36 = OpConstant 2 
                               Private f32_4* %44 = OpVariable Private 
                                          i32 %46 = OpConstant 3 
                                              %50 = OpTypeVector %6 3 
                                              %51 = OpTypePointer Output %50 
                       Output f32_3* vs_TEXCOORD2 = OpVariable Output 
                                          u32 %81 = OpConstant 1 
                                              %82 = OpTypeArray %6 %81 
                                              %83 = OpTypeStruct %7 %6 %82 
                                              %84 = OpTypePointer Output %83 
         Output struct {f32_4; f32; f32[1];}* %85 = OpVariable Output 
                                              %93 = OpTypePointer Output %7 
                                 Input f32_4* %95 = OpVariable Input 
                                              %96 = OpTypeVector %6 2 
                                             %109 = OpTypePointer Output %96 
                       Output f32_2* vs_TEXCOORD0 = OpVariable Output 
                                             %113 = OpTypePointer Input %50 
                                Input f32_3* %114 = OpVariable Input 
                                         u32 %120 = OpConstant 0 
                                             %121 = OpTypePointer Private %6 
                                         u32 %134 = OpConstant 2 
                                Private f32* %136 = OpVariable Private 
                       Output f32_3* vs_TEXCOORD1 = OpVariable Output 
                       Output f32_4* vs_TEXCOORD5 = OpVariable Output 
                                         f32 %151 = OpConstant 3.674022E-40 
                                       f32_4 %152 = OpConstantComposite %151 %151 %151 %151 
                       Output f32_4* vs_TEXCOORD6 = OpVariable Output 
                                             %154 = OpTypePointer Output %6 
                                          void %4 = OpFunction None %3 
                                               %5 = OpLabel 
                                        f32_4 %12 = OpLoad %11 
                                        f32_4 %13 = OpVectorShuffle %12 %12 1 1 1 1 
                               Uniform f32_4* %26 = OpAccessChain %21 %23 %24 
                                        f32_4 %27 = OpLoad %26 
                                        f32_4 %28 = OpFMul %13 %27 
                                                      OpStore %9 %28 
                               Uniform f32_4* %29 = OpAccessChain %21 %23 %23 
                                        f32_4 %30 = OpLoad %29 
                                        f32_4 %31 = OpLoad %11 
                                        f32_4 %32 = OpVectorShuffle %31 %31 0 0 0 0 
                                        f32_4 %33 = OpFMul %30 %32 
                                        f32_4 %34 = OpLoad %9 
                                        f32_4 %35 = OpFAdd %33 %34 
                                                      OpStore %9 %35 
                               Uniform f32_4* %37 = OpAccessChain %21 %23 %36 
                                        f32_4 %38 = OpLoad %37 
                                        f32_4 %39 = OpLoad %11 
                                        f32_4 %40 = OpVectorShuffle %39 %39 2 2 2 2 
                                        f32_4 %41 = OpFMul %38 %40 
                                        f32_4 %42 = OpLoad %9 
                                        f32_4 %43 = OpFAdd %41 %42 
                                                      OpStore %9 %43 
                                        f32_4 %45 = OpLoad %9 
                               Uniform f32_4* %47 = OpAccessChain %21 %23 %46 
                                        f32_4 %48 = OpLoad %47 
                                        f32_4 %49 = OpFAdd %45 %48 
                                                      OpStore %44 %49 
                               Uniform f32_4* %53 = OpAccessChain %21 %23 %46 
                                        f32_4 %54 = OpLoad %53 
                                        f32_3 %55 = OpVectorShuffle %54 %54 0 1 2 
                                        f32_4 %56 = OpLoad %11 
                                        f32_3 %57 = OpVectorShuffle %56 %56 3 3 3 
                                        f32_3 %58 = OpFMul %55 %57 
                                        f32_4 %59 = OpLoad %9 
                                        f32_3 %60 = OpVectorShuffle %59 %59 0 1 2 
                                        f32_3 %61 = OpFAdd %58 %60 
                                                      OpStore vs_TEXCOORD2 %61 
                                        f32_4 %62 = OpLoad %44 
                                        f32_4 %63 = OpVectorShuffle %62 %62 1 1 1 1 
                               Uniform f32_4* %64 = OpAccessChain %21 %36 %24 
                                        f32_4 %65 = OpLoad %64 
                                        f32_4 %66 = OpFMul %63 %65 
                                                      OpStore %9 %66 
                               Uniform f32_4* %67 = OpAccessChain %21 %36 %23 
                                        f32_4 %68 = OpLoad %67 
                                        f32_4 %69 = OpLoad %44 
                                        f32_4 %70 = OpVectorShuffle %69 %69 0 0 0 0 
                                        f32_4 %71 = OpFMul %68 %70 
                                        f32_4 %72 = OpLoad %9 
                                        f32_4 %73 = OpFAdd %71 %72 
                                                      OpStore %9 %73 
                               Uniform f32_4* %74 = OpAccessChain %21 %36 %36 
                                        f32_4 %75 = OpLoad %74 
                                        f32_4 %76 = OpLoad %44 
                                        f32_4 %77 = OpVectorShuffle %76 %76 2 2 2 2 
                                        f32_4 %78 = OpFMul %75 %77 
                                        f32_4 %79 = OpLoad %9 
                                        f32_4 %80 = OpFAdd %78 %79 
                                                      OpStore %9 %80 
                               Uniform f32_4* %86 = OpAccessChain %21 %36 %46 
                                        f32_4 %87 = OpLoad %86 
                                        f32_4 %88 = OpLoad %44 
                                        f32_4 %89 = OpVectorShuffle %88 %88 3 3 3 3 
                                        f32_4 %90 = OpFMul %87 %89 
                                        f32_4 %91 = OpLoad %9 
                                        f32_4 %92 = OpFAdd %90 %91 
                                Output f32_4* %94 = OpAccessChain %85 %23 
                                                      OpStore %94 %92 
                                        f32_4 %97 = OpLoad %95 
                                        f32_2 %98 = OpVectorShuffle %97 %97 0 1 
                               Uniform f32_4* %99 = OpAccessChain %21 %46 
                                       f32_4 %100 = OpLoad %99 
                                       f32_2 %101 = OpVectorShuffle %100 %100 0 1 
                                       f32_2 %102 = OpFMul %98 %101 
                              Uniform f32_4* %103 = OpAccessChain %21 %46 
                                       f32_4 %104 = OpLoad %103 
                                       f32_2 %105 = OpVectorShuffle %104 %104 2 3 
                                       f32_2 %106 = OpFAdd %102 %105 
                                       f32_4 %107 = OpLoad %9 
                                       f32_4 %108 = OpVectorShuffle %107 %106 4 5 2 3 
                                                      OpStore %9 %108 
                                       f32_4 %111 = OpLoad %9 
                                       f32_2 %112 = OpVectorShuffle %111 %111 0 1 
                                                      OpStore vs_TEXCOORD0 %112 
                                       f32_3 %115 = OpLoad %114 
                              Uniform f32_4* %116 = OpAccessChain %21 %24 %23 
                                       f32_4 %117 = OpLoad %116 
                                       f32_3 %118 = OpVectorShuffle %117 %117 0 1 2 
                                         f32 %119 = OpDot %115 %118 
                                Private f32* %122 = OpAccessChain %9 %120 
                                                      OpStore %122 %119 
                                       f32_3 %123 = OpLoad %114 
                              Uniform f32_4* %124 = OpAccessChain %21 %24 %24 
                                       f32_4 %125 = OpLoad %124 
                                       f32_3 %126 = OpVectorShuffle %125 %125 0 1 2 
                                         f32 %127 = OpDot %123 %126 
                                Private f32* %128 = OpAccessChain %9 %81 
                                                      OpStore %128 %127 
                                       f32_3 %129 = OpLoad %114 
                              Uniform f32_4* %130 = OpAccessChain %21 %24 %36 
                                       f32_4 %131 = OpLoad %130 
                                       f32_3 %132 = OpVectorShuffle %131 %131 0 1 2 
                                         f32 %133 = OpDot %129 %132 
                                Private f32* %135 = OpAccessChain %9 %134 
                                                      OpStore %135 %133 
                                       f32_4 %137 = OpLoad %9 
                                       f32_3 %138 = OpVectorShuffle %137 %137 0 1 2 
                                       f32_4 %139 = OpLoad %9 
                                       f32_3 %140 = OpVectorShuffle %139 %139 0 1 2 
                                         f32 %141 = OpDot %138 %140 
                                                      OpStore %136 %141 
                                         f32 %142 = OpLoad %136 
                                         f32 %143 = OpExtInst %1 32 %142 
                                                      OpStore %136 %143 
                                         f32 %145 = OpLoad %136 
                                       f32_3 %146 = OpCompositeConstruct %145 %145 %145 
                                       f32_4 %147 = OpLoad %9 
                                       f32_3 %148 = OpVectorShuffle %147 %147 0 1 2 
                                       f32_3 %149 = OpFMul %146 %148 
                                                      OpStore vs_TEXCOORD1 %149 
                                                      OpStore vs_TEXCOORD5 %152 
                                                      OpStore vs_TEXCOORD6 %152 
                                 Output f32* %155 = OpAccessChain %85 %23 %81 
                                         f32 %156 = OpLoad %155 
                                         f32 %157 = OpFNegate %156 
                                 Output f32* %158 = OpAccessChain %85 %23 %81 
                                                      OpStore %158 %157 
                                                      OpReturn
                                                      OpFunctionEnd
; SPIR-V
; Version: 1.0
; Generator: Khronos Glslang Reference Front End; 6
; Bound: 430
; Schema: 0
                                                      OpCapability Shader 
                                               %1 = OpExtInstImport "GLSL.std.450" 
                                                      OpMemoryModel Logical GLSL450 
                                                      OpEntryPoint Fragment %4 "main" %11 %57 %402 %423 
                                                      OpExecutionMode %4 OriginUpperLeft 
                                                      OpName vs_TEXCOORD2 "vs_TEXCOORD2" 
                                                      OpName vs_TEXCOORD1 "vs_TEXCOORD1" 
                                                      OpName vs_TEXCOORD0 "vs_TEXCOORD0" 
                                                      OpDecorate vs_TEXCOORD2 Location 11 
                                                      OpDecorate %17 ArrayStride 17 
                                                      OpDecorate %19 ArrayStride 19 
                                                      OpMemberDecorate %20 0 Offset 20 
                                                      OpMemberDecorate %20 1 RelaxedPrecision 
                                                      OpMemberDecorate %20 1 Offset 20 
                                                      OpMemberDecorate %20 2 Offset 20 
                                                      OpMemberDecorate %20 3 RelaxedPrecision 
                                                      OpMemberDecorate %20 3 Offset 20 
                                                      OpMemberDecorate %20 4 Offset 20 
                                                      OpMemberDecorate %20 5 Offset 20 
                                                      OpMemberDecorate %20 6 RelaxedPrecision 
                                                      OpMemberDecorate %20 6 Offset 20 
                                                      OpMemberDecorate %20 7 RelaxedPrecision 
                                                      OpMemberDecorate %20 7 Offset 20 
                                                      OpMemberDecorate %20 8 RelaxedPrecision 
                                                      OpMemberDecorate %20 8 Offset 20 
                                                      OpMemberDecorate %20 9 RelaxedPrecision 
                                                      OpMemberDecorate %20 9 Offset 20 
                                                      OpMemberDecorate %20 10 RelaxedPrecision 
                                                      OpMemberDecorate %20 10 Offset 20 
                                                      OpMemberDecorate %20 11 RelaxedPrecision 
                                                      OpMemberDecorate %20 11 Offset 20 
                                                      OpMemberDecorate %20 12 RelaxedPrecision 
                                                      OpMemberDecorate %20 12 Offset 20 
                                                      OpMemberDecorate %20 13 RelaxedPrecision 
                                                      OpMemberDecorate %20 13 Offset 20 
                                                      OpMemberDecorate %20 14 RelaxedPrecision 
                                                      OpMemberDecorate %20 14 Offset 20 
                                                      OpDecorate %20 Block 
                                                      OpDecorate %22 DescriptorSet 22 
                                                      OpDecorate %22 Binding 22 
                                                      OpDecorate %36 RelaxedPrecision 
                                                      OpDecorate %44 RelaxedPrecision 
                                                      OpDecorate %45 RelaxedPrecision 
                                                      OpDecorate %47 RelaxedPrecision 
                                                      OpDecorate %48 RelaxedPrecision 
                                                      OpDecorate %49 RelaxedPrecision 
                                                      OpDecorate %50 RelaxedPrecision 
                                                      OpDecorate %51 RelaxedPrecision 
                                                      OpDecorate %52 RelaxedPrecision 
                                                      OpDecorate %53 RelaxedPrecision 
                                                      OpDecorate %54 RelaxedPrecision 
                                                      OpDecorate %55 RelaxedPrecision 
                                                      OpDecorate %56 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD1 Location 57 
                                                      OpDecorate %61 RelaxedPrecision 
                                                      OpDecorate %62 RelaxedPrecision 
                                                      OpDecorate %63 RelaxedPrecision 
                                                      OpDecorate %64 RelaxedPrecision 
                                                      OpDecorate %68 RelaxedPrecision 
                                                      OpDecorate %69 RelaxedPrecision 
                                                      OpDecorate %70 RelaxedPrecision 
                                                      OpDecorate %73 RelaxedPrecision 
                                                      OpDecorate %75 RelaxedPrecision 
                                                      OpDecorate %76 RelaxedPrecision 
                                                      OpDecorate %77 RelaxedPrecision 
                                                      OpDecorate %81 RelaxedPrecision 
                                                      OpDecorate %82 RelaxedPrecision 
                                                      OpDecorate %85 RelaxedPrecision 
                                                      OpDecorate %89 RelaxedPrecision 
                                                      OpDecorate %90 RelaxedPrecision 
                                                      OpDecorate %94 RelaxedPrecision 
                                                      OpDecorate %96 RelaxedPrecision 
                                                      OpDecorate %100 RelaxedPrecision 
                                                      OpDecorate %106 RelaxedPrecision 
                                                      OpDecorate %107 RelaxedPrecision 
                                                      OpDecorate %109 RelaxedPrecision 
                                                      OpDecorate %110 RelaxedPrecision 
                                                      OpDecorate %116 RelaxedPrecision 
                                                      OpDecorate %117 RelaxedPrecision 
                                                      OpDecorate %119 RelaxedPrecision 
                                                      OpDecorate %121 RelaxedPrecision 
                                                      OpDecorate %122 RelaxedPrecision 
                                                      OpDecorate %123 RelaxedPrecision 
                                                      OpDecorate %126 RelaxedPrecision 
                                                      OpDecorate %127 RelaxedPrecision 
                                                      OpDecorate %128 RelaxedPrecision 
                                                      OpDecorate %129 RelaxedPrecision 
                                                      OpDecorate %202 RelaxedPrecision 
                                                      OpDecorate %205 RelaxedPrecision 
                                                      OpDecorate %250 DescriptorSet 250 
                                                      OpDecorate %250 Binding 250 
                                                      OpDecorate %254 DescriptorSet 254 
                                                      OpDecorate %254 Binding 254 
                                                      OpDecorate %263 RelaxedPrecision 
                                                      OpDecorate %264 RelaxedPrecision 
                                                      OpDecorate %265 RelaxedPrecision 
                                                      OpDecorate %269 RelaxedPrecision 
                                                      OpDecorate %272 RelaxedPrecision 
                                                      OpDecorate %276 RelaxedPrecision 
                                                      OpDecorate %277 RelaxedPrecision 
                                                      OpDecorate %278 RelaxedPrecision 
                                                      OpDecorate %281 RelaxedPrecision 
                                                      OpDecorate %284 RelaxedPrecision 
                                                      OpDecorate %289 RelaxedPrecision 
                                                      OpDecorate %294 RelaxedPrecision 
                                                      OpDecorate %295 RelaxedPrecision 
                                                      OpDecorate %298 RelaxedPrecision 
                                                      OpDecorate %299 RelaxedPrecision 
                                                      OpDecorate %300 RelaxedPrecision 
                                                      OpDecorate %303 RelaxedPrecision 
                                                      OpDecorate %307 RelaxedPrecision 
                                                      OpDecorate %308 RelaxedPrecision 
                                                      OpDecorate %309 RelaxedPrecision 
                                                      OpDecorate %312 RelaxedPrecision 
                                                      OpDecorate %313 RelaxedPrecision 
                                                      OpDecorate %314 RelaxedPrecision 
                                                      OpDecorate %315 RelaxedPrecision 
                                                      OpDecorate %316 RelaxedPrecision 
                                                      OpDecorate %318 RelaxedPrecision 
                                                      OpDecorate %319 RelaxedPrecision 
                                                      OpDecorate %322 RelaxedPrecision 
                                                      OpDecorate %323 RelaxedPrecision 
                                                      OpDecorate %325 RelaxedPrecision 
                                                      OpDecorate %326 RelaxedPrecision 
                                                      OpDecorate %327 RelaxedPrecision 
                                                      OpDecorate %328 RelaxedPrecision 
                                                      OpDecorate %329 RelaxedPrecision 
                                                      OpDecorate %330 RelaxedPrecision 
                                                      OpDecorate %331 RelaxedPrecision 
                                                      OpDecorate %332 RelaxedPrecision 
                                                      OpDecorate %333 RelaxedPrecision 
                                                      OpDecorate %335 RelaxedPrecision 
                                                      OpDecorate %336 RelaxedPrecision 
                                                      OpDecorate %339 RelaxedPrecision 
                                                      OpDecorate %340 RelaxedPrecision 
                                                      OpDecorate %343 RelaxedPrecision 
                                                      OpDecorate %344 RelaxedPrecision 
                                                      OpDecorate %345 RelaxedPrecision 
                                                      OpDecorate %347 RelaxedPrecision 
                                                      OpDecorate %349 RelaxedPrecision 
                                                      OpDecorate %350 RelaxedPrecision 
                                                      OpDecorate %353 RelaxedPrecision 
                                                      OpDecorate %354 RelaxedPrecision 
                                                      OpDecorate %355 RelaxedPrecision 
                                                      OpDecorate %358 RelaxedPrecision 
                                                      OpDecorate %360 RelaxedPrecision 
                                                      OpDecorate %361 RelaxedPrecision 
                                                      OpDecorate %365 RelaxedPrecision 
                                                      OpDecorate %366 RelaxedPrecision 
                                                      OpDecorate %367 RelaxedPrecision 
                                                      OpDecorate %370 RelaxedPrecision 
                                                      OpDecorate %371 RelaxedPrecision 
                                                      OpDecorate %372 RelaxedPrecision 
                                                      OpDecorate %374 RelaxedPrecision 
                                                      OpDecorate %375 RelaxedPrecision 
                                                      OpDecorate %376 RelaxedPrecision 
                                                      OpDecorate %377 RelaxedPrecision 
                                                      OpDecorate %379 RelaxedPrecision 
                                                      OpDecorate %380 RelaxedPrecision 
                                                      OpDecorate %381 RelaxedPrecision 
                                                      OpDecorate %382 RelaxedPrecision 
                                                      OpDecorate %383 RelaxedPrecision 
                                                      OpDecorate %385 RelaxedPrecision 
                                                      OpDecorate %386 RelaxedPrecision 
                                                      OpDecorate %387 RelaxedPrecision 
                                                      OpDecorate %388 RelaxedPrecision 
                                                      OpDecorate %389 RelaxedPrecision 
                                                      OpDecorate %390 RelaxedPrecision 
                                                      OpDecorate %391 RelaxedPrecision 
                                                      OpDecorate %392 RelaxedPrecision 
                                                      OpDecorate %393 RelaxedPrecision 
                                                      OpDecorate %394 RelaxedPrecision 
                                                      OpDecorate %395 RelaxedPrecision 
                                                      OpDecorate %395 DescriptorSet 395 
                                                      OpDecorate %395 Binding 395 
                                                      OpDecorate %396 RelaxedPrecision 
                                                      OpDecorate %397 RelaxedPrecision 
                                                      OpDecorate %397 DescriptorSet 397 
                                                      OpDecorate %397 Binding 397 
                                                      OpDecorate %398 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD0 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD0 Location 402 
                                                      OpDecorate %403 RelaxedPrecision 
                                                      OpDecorate %404 RelaxedPrecision 
                                                      OpDecorate %405 RelaxedPrecision 
                                                      OpDecorate %406 RelaxedPrecision 
                                                      OpDecorate %409 RelaxedPrecision 
                                                      OpDecorate %410 RelaxedPrecision 
                                                      OpDecorate %411 RelaxedPrecision 
                                                      OpDecorate %412 RelaxedPrecision 
                                                      OpDecorate %414 RelaxedPrecision 
                                                      OpDecorate %415 RelaxedPrecision 
                                                      OpDecorate %416 RelaxedPrecision 
                                                      OpDecorate %417 RelaxedPrecision 
                                                      OpDecorate %418 RelaxedPrecision 
                                                      OpDecorate %419 RelaxedPrecision 
                                                      OpDecorate %423 RelaxedPrecision 
                                                      OpDecorate %423 Location 423 
                                               %2 = OpTypeVoid 
                                               %3 = OpTypeFunction %2 
                                               %6 = OpTypeFloat 32 
                                               %7 = OpTypeVector %6 3 
                                               %8 = OpTypePointer Private %7 
                                Private f32_3* %9 = OpVariable Private 
                                              %10 = OpTypePointer Input %7 
                        Input f32_3* vs_TEXCOORD2 = OpVariable Input 
                                              %14 = OpTypeVector %6 4 
                                              %15 = OpTypeInt 32 0 
                                          u32 %16 = OpConstant 16 
                                              %17 = OpTypeArray %14 %16 
                                          u32 %18 = OpConstant 4 
                                              %19 = OpTypeArray %14 %18 
                                              %20 = OpTypeStruct %7 %14 %17 %14 %14 %19 %14 %14 %14 %6 %14 %14 %6 %6 %6 
                                              %21 = OpTypePointer Uniform %20 
Uniform struct {f32_3; f32_4; f32_4[16]; f32_4; f32_4; f32_4[4]; f32_4; f32_4; f32_4; f32; f32_4; f32_4; f32; f32; f32;}* %22 = OpVariable Uniform 
                                              %23 = OpTypeInt 32 1 
                                          i32 %24 = OpConstant 0 
                                              %25 = OpTypePointer Uniform %7 
                                              %29 = OpTypePointer Private %6 
                                 Private f32* %30 = OpVariable Private 
                               Private f32_3* %36 = OpVariable Private 
                                          i32 %41 = OpConstant 1 
                                              %42 = OpTypePointer Uniform %14 
                                 Private f32* %47 = OpVariable Private 
                        Input f32_3* vs_TEXCOORD1 = OpVariable Input 
                               Private f32_3* %63 = OpVariable Private 
                                          u32 %71 = OpConstant 0 
                                          u32 %78 = OpConstant 1 
                                              %80 = OpTypeVector %6 2 
                                          f32 %83 = OpConstant 3.674022E-40 
                                        f32_2 %84 = OpConstantComposite %83 %83 
                                          i32 %91 = OpConstant 9 
                                              %92 = OpTypePointer Uniform %6 
                                          f32 %95 = OpConstant 3.674022E-40 
                                         i32 %104 = OpConstant 14 
                                         f32 %108 = OpConstant 3.674022E-40 
                                         f32 %113 = OpConstant 3.674022E-40 
                                Private f32* %119 = OpVariable Private 
                              Private f32_3* %124 = OpVariable Private 
                                         f32 %131 = OpConstant 3.674022E-40 
                                         f32 %143 = OpConstant 3.674022E-40 
                                         f32 %145 = OpConstant 3.674022E-40 
                                         i32 %155 = OpConstant 5 
                                         u32 %156 = OpConstant 2 
                                         i32 %163 = OpConstant 2 
                                         i32 %172 = OpConstant 4 
                                Private f32* %178 = OpVariable Private 
                                         u32 %189 = OpConstant 3 
                                         i32 %200 = OpConstant 3 
                                             %239 = OpTypePointer Function %7 
                                             %248 = OpTypeImage %6 Dim2D 0 0 0 1 Unknown 
                                             %249 = OpTypePointer UniformConstant %248 
        UniformConstant read_only Texture2D* %250 = OpVariable UniformConstant 
                                             %252 = OpTypeSampler 
                                             %253 = OpTypePointer UniformConstant %252 
                    UniformConstant sampler* %254 = OpVariable UniformConstant 
                                             %256 = OpTypeImage %6 Dim2D 1 0 0 1 Unknown 
                                             %257 = OpTypeSampledImage %256 
                                         i32 %292 = OpConstant 6 
                                         i32 %296 = OpConstant 7 
                                         i32 %305 = OpConstant 13 
                                         i32 %310 = OpConstant 12 
                              Private f32_3* %314 = OpVariable Private 
                                         i32 %363 = OpConstant 10 
                                         i32 %368 = OpConstant 11 
                              Private f32_3* %394 = OpVariable Private 
        UniformConstant read_only Texture2D* %395 = OpVariable UniformConstant 
                    UniformConstant sampler* %397 = OpVariable UniformConstant 
                                             %399 = OpTypeSampledImage %248 
                                             %401 = OpTypePointer Input %80 
                        Input f32_2* vs_TEXCOORD0 = OpVariable Input 
                                         i32 %407 = OpConstant 8 
                                             %422 = OpTypePointer Output %14 
                               Output f32_4* %423 = OpVariable Output 
                                             %427 = OpTypePointer Output %6 
                                          void %4 = OpFunction None %3 
                                               %5 = OpLabel 
                             Function f32_3* %240 = OpVariable Function 
                                        f32_3 %12 = OpLoad vs_TEXCOORD2 
                                        f32_3 %13 = OpFNegate %12 
                               Uniform f32_3* %26 = OpAccessChain %22 %24 
                                        f32_3 %27 = OpLoad %26 
                                        f32_3 %28 = OpFAdd %13 %27 
                                                      OpStore %9 %28 
                                        f32_3 %31 = OpLoad %9 
                                        f32_3 %32 = OpLoad %9 
                                          f32 %33 = OpDot %31 %32 
                                                      OpStore %30 %33 
                                          f32 %34 = OpLoad %30 
                                          f32 %35 = OpExtInst %1 32 %34 
                                                      OpStore %30 %35 
                                        f32_3 %37 = OpLoad %9 
                                          f32 %38 = OpLoad %30 
                                        f32_3 %39 = OpCompositeConstruct %38 %38 %38 
                                        f32_3 %40 = OpFMul %37 %39 
                               Uniform f32_4* %43 = OpAccessChain %22 %41 
                                        f32_4 %44 = OpLoad %43 
                                        f32_3 %45 = OpVectorShuffle %44 %44 0 1 2 
                                        f32_3 %46 = OpFAdd %40 %45 
                                                      OpStore %36 %46 
                                        f32_3 %48 = OpLoad %36 
                                        f32_3 %49 = OpLoad %36 
                                          f32 %50 = OpDot %48 %49 
                                                      OpStore %47 %50 
                                          f32 %51 = OpLoad %47 
                                          f32 %52 = OpExtInst %1 32 %51 
                                                      OpStore %47 %52 
                                          f32 %53 = OpLoad %47 
                                        f32_3 %54 = OpCompositeConstruct %53 %53 %53 
                                        f32_3 %55 = OpLoad %36 
                                        f32_3 %56 = OpFMul %54 %55 
                                                      OpStore %36 %56 
                                        f32_3 %58 = OpLoad vs_TEXCOORD1 
                                        f32_3 %59 = OpLoad vs_TEXCOORD1 
                                          f32 %60 = OpDot %58 %59 
                                                      OpStore %47 %60 
                                          f32 %61 = OpLoad %47 
                                          f32 %62 = OpExtInst %1 32 %61 
                                                      OpStore %47 %62 
                                          f32 %64 = OpLoad %47 
                                        f32_3 %65 = OpCompositeConstruct %64 %64 %64 
                                        f32_3 %66 = OpLoad vs_TEXCOORD1 
                                        f32_3 %67 = OpFMul %65 %66 
                                                      OpStore %63 %67 
                                        f32_3 %68 = OpLoad %63 
                                        f32_3 %69 = OpLoad %36 
                                          f32 %70 = OpDot %68 %69 
                                 Private f32* %72 = OpAccessChain %36 %71 
                                                      OpStore %72 %70 
                                        f32_3 %73 = OpLoad %63 
                               Uniform f32_4* %74 = OpAccessChain %22 %41 
                                        f32_4 %75 = OpLoad %74 
                                        f32_3 %76 = OpVectorShuffle %75 %75 0 1 2 
                                          f32 %77 = OpDot %73 %76 
                                 Private f32* %79 = OpAccessChain %36 %78 
                                                      OpStore %79 %77 
                                        f32_3 %81 = OpLoad %36 
                                        f32_2 %82 = OpVectorShuffle %81 %81 0 1 
                                        f32_2 %85 = OpExtInst %1 40 %82 %84 
                                        f32_3 %86 = OpLoad %36 
                                        f32_3 %87 = OpVectorShuffle %86 %85 3 4 2 
                                                      OpStore %36 %87 
                                 Private f32* %88 = OpAccessChain %36 %71 
                                          f32 %89 = OpLoad %88 
                                          f32 %90 = OpExtInst %1 30 %89 
                                                      OpStore %30 %90 
                                 Uniform f32* %93 = OpAccessChain %22 %91 
                                          f32 %94 = OpLoad %93 
                                          f32 %96 = OpFMul %94 %95 
                                 Private f32* %97 = OpAccessChain %36 %71 
                                                      OpStore %97 %96 
                                          f32 %98 = OpLoad %30 
                                 Private f32* %99 = OpAccessChain %36 %71 
                                         f32 %100 = OpLoad %99 
                                         f32 %101 = OpFMul %98 %100 
                                                      OpStore %30 %101 
                                         f32 %102 = OpLoad %30 
                                         f32 %103 = OpExtInst %1 29 %102 
                                                      OpStore %30 %103 
                                Uniform f32* %105 = OpAccessChain %22 %104 
                                         f32 %106 = OpLoad %105 
                                         f32 %107 = OpFNegate %106 
                                         f32 %109 = OpFMul %107 %108 
                                         f32 %110 = OpFAdd %109 %108 
                                Private f32* %111 = OpAccessChain %36 %71 
                                                      OpStore %111 %110 
                                         f32 %112 = OpLoad %30 
                                         f32 %114 = OpFMul %112 %113 
                                Private f32* %115 = OpAccessChain %36 %71 
                                         f32 %116 = OpLoad %115 
                                         f32 %117 = OpFNegate %116 
                                         f32 %118 = OpFAdd %114 %117 
                                                      OpStore %30 %118 
                                Uniform f32* %120 = OpAccessChain %22 %104 
                                         f32 %121 = OpLoad %120 
                                         f32 %122 = OpFMul %121 %108 
                                         f32 %123 = OpFAdd %122 %108 
                                                      OpStore %119 %123 
                                Private f32* %125 = OpAccessChain %36 %71 
                                         f32 %126 = OpLoad %125 
                                         f32 %127 = OpFNegate %126 
                                         f32 %128 = OpLoad %119 
                                         f32 %129 = OpFAdd %127 %128 
                                Private f32* %130 = OpAccessChain %124 %71 
                                                      OpStore %130 %129 
                                Private f32* %132 = OpAccessChain %124 %71 
                                         f32 %133 = OpLoad %132 
                                         f32 %134 = OpFDiv %131 %133 
                                Private f32* %135 = OpAccessChain %124 %71 
                                                      OpStore %135 %134 
                                         f32 %136 = OpLoad %30 
                                Private f32* %137 = OpAccessChain %124 %71 
                                         f32 %138 = OpLoad %137 
                                         f32 %139 = OpFMul %136 %138 
                                                      OpStore %30 %139 
                                         f32 %140 = OpLoad %30 
                                         f32 %141 = OpExtInst %1 43 %140 %83 %131 
                                                      OpStore %30 %141 
                                         f32 %142 = OpLoad %30 
                                         f32 %144 = OpFMul %142 %143 
                                         f32 %146 = OpFAdd %144 %145 
                                Private f32* %147 = OpAccessChain %124 %71 
                                                      OpStore %147 %146 
                                         f32 %148 = OpLoad %30 
                                         f32 %149 = OpLoad %30 
                                         f32 %150 = OpFMul %148 %149 
                                                      OpStore %30 %150 
                                         f32 %151 = OpLoad %30 
                                Private f32* %152 = OpAccessChain %124 %71 
                                         f32 %153 = OpLoad %152 
                                         f32 %154 = OpFMul %151 %153 
                                                      OpStore %30 %154 
                                Uniform f32* %157 = OpAccessChain %22 %155 %24 %156 
                                         f32 %158 = OpLoad %157 
                                Private f32* %159 = OpAccessChain %124 %71 
                                                      OpStore %159 %158 
                                Uniform f32* %160 = OpAccessChain %22 %155 %41 %156 
                                         f32 %161 = OpLoad %160 
                                Private f32* %162 = OpAccessChain %124 %78 
                                                      OpStore %162 %161 
                                Uniform f32* %164 = OpAccessChain %22 %155 %163 %156 
                                         f32 %165 = OpLoad %164 
                                Private f32* %166 = OpAccessChain %124 %156 
                                                      OpStore %166 %165 
                                       f32_3 %167 = OpLoad %9 
                                       f32_3 %168 = OpLoad %124 
                                         f32 %169 = OpDot %167 %168 
                                Private f32* %170 = OpAccessChain %9 %71 
                                                      OpStore %170 %169 
                                       f32_3 %171 = OpLoad vs_TEXCOORD2 
                              Uniform f32_4* %173 = OpAccessChain %22 %172 
                                       f32_4 %174 = OpLoad %173 
                                       f32_3 %175 = OpVectorShuffle %174 %174 0 1 2 
                                       f32_3 %176 = OpFNegate %175 
                                       f32_3 %177 = OpFAdd %171 %176 
                                                      OpStore %124 %177 
                                       f32_3 %179 = OpLoad %124 
                                       f32_3 %180 = OpLoad %124 
                                         f32 %181 = OpDot %179 %180 
                                                      OpStore %178 %181 
                                         f32 %182 = OpLoad %178 
                                         f32 %183 = OpExtInst %1 31 %182 
                                                      OpStore %178 %183 
                                Private f32* %184 = OpAccessChain %9 %71 
                                         f32 %185 = OpLoad %184 
                                         f32 %186 = OpFNegate %185 
                                         f32 %187 = OpLoad %178 
                                         f32 %188 = OpFAdd %186 %187 
                                                      OpStore %178 %188 
                                Uniform f32* %190 = OpAccessChain %22 %172 %189 
                                         f32 %191 = OpLoad %190 
                                         f32 %192 = OpLoad %178 
                                         f32 %193 = OpFMul %191 %192 
                                Private f32* %194 = OpAccessChain %9 %71 
                                         f32 %195 = OpLoad %194 
                                         f32 %196 = OpFAdd %193 %195 
                                Private f32* %197 = OpAccessChain %9 %71 
                                                      OpStore %197 %196 
                                Private f32* %198 = OpAccessChain %9 %71 
                                         f32 %199 = OpLoad %198 
                                Uniform f32* %201 = OpAccessChain %22 %200 %156 
                                         f32 %202 = OpLoad %201 
                                         f32 %203 = OpFMul %199 %202 
                                Uniform f32* %204 = OpAccessChain %22 %200 %189 
                                         f32 %205 = OpLoad %204 
                                         f32 %206 = OpFAdd %203 %205 
                                Private f32* %207 = OpAccessChain %9 %71 
                                                      OpStore %207 %206 
                                Private f32* %208 = OpAccessChain %9 %71 
                                         f32 %209 = OpLoad %208 
                                         f32 %210 = OpExtInst %1 43 %209 %83 %131 
                                Private f32* %211 = OpAccessChain %9 %71 
                                                      OpStore %211 %210 
                                       f32_3 %212 = OpLoad vs_TEXCOORD2 
                                       f32_3 %213 = OpVectorShuffle %212 %212 1 1 1 
                              Uniform f32_4* %214 = OpAccessChain %22 %163 %41 
                                       f32_4 %215 = OpLoad %214 
                                       f32_3 %216 = OpVectorShuffle %215 %215 0 1 2 
                                       f32_3 %217 = OpFMul %213 %216 
                                                      OpStore %124 %217 
                              Uniform f32_4* %218 = OpAccessChain %22 %163 %24 
                                       f32_4 %219 = OpLoad %218 
                                       f32_3 %220 = OpVectorShuffle %219 %219 0 1 2 
                                       f32_3 %221 = OpLoad vs_TEXCOORD2 
                                       f32_3 %222 = OpVectorShuffle %221 %221 0 0 0 
                                       f32_3 %223 = OpFMul %220 %222 
                                       f32_3 %224 = OpLoad %124 
                                       f32_3 %225 = OpFAdd %223 %224 
                                                      OpStore %124 %225 
                              Uniform f32_4* %226 = OpAccessChain %22 %163 %163 
                                       f32_4 %227 = OpLoad %226 
                                       f32_3 %228 = OpVectorShuffle %227 %227 0 1 2 
                                       f32_3 %229 = OpLoad vs_TEXCOORD2 
                                       f32_3 %230 = OpVectorShuffle %229 %229 2 2 2 
                                       f32_3 %231 = OpFMul %228 %230 
                                       f32_3 %232 = OpLoad %124 
                                       f32_3 %233 = OpFAdd %231 %232 
                                                      OpStore %124 %233 
                                       f32_3 %234 = OpLoad %124 
                              Uniform f32_4* %235 = OpAccessChain %22 %163 %200 
                                       f32_4 %236 = OpLoad %235 
                                       f32_3 %237 = OpVectorShuffle %236 %236 0 1 2 
                                       f32_3 %238 = OpFAdd %234 %237 
                                                      OpStore %124 %238 
                                       f32_3 %241 = OpLoad %124 
                                       f32_2 %242 = OpVectorShuffle %241 %241 0 1 
                                Private f32* %243 = OpAccessChain %124 %156 
                                         f32 %244 = OpLoad %243 
                                         f32 %245 = OpCompositeExtract %242 0 
                                         f32 %246 = OpCompositeExtract %242 1 
                                       f32_3 %247 = OpCompositeConstruct %245 %246 %244 
                                                      OpStore %240 %247 
                         read_only Texture2D %251 = OpLoad %250 
                                     sampler %255 = OpLoad %254 
                  read_only Texture2DSampled %258 = OpSampledImage %251 %255 
                                       f32_3 %259 = OpLoad %240 
                                         f32 %260 = OpCompositeExtract %259 2 
                                         f32 %261 = OpImageSampleDrefExplicitLod %258 %259 %260 Lod %6 
                                                      OpStore %178 %261 
                                Uniform f32* %262 = OpAccessChain %22 %200 %71 
                                         f32 %263 = OpLoad %262 
                                         f32 %264 = OpFNegate %263 
                                         f32 %265 = OpFAdd %264 %131 
                                Private f32* %266 = OpAccessChain %36 %71 
                                                      OpStore %266 %265 
                                         f32 %267 = OpLoad %178 
                                Private f32* %268 = OpAccessChain %36 %71 
                                         f32 %269 = OpLoad %268 
                                         f32 %270 = OpFMul %267 %269 
                                Uniform f32* %271 = OpAccessChain %22 %200 %71 
                                         f32 %272 = OpLoad %271 
                                         f32 %273 = OpFAdd %270 %272 
                                Private f32* %274 = OpAccessChain %36 %71 
                                                      OpStore %274 %273 
                                Private f32* %275 = OpAccessChain %36 %71 
                                         f32 %276 = OpLoad %275 
                                         f32 %277 = OpFNegate %276 
                                         f32 %278 = OpFAdd %277 %131 
                                                      OpStore %119 %278 
                                Private f32* %279 = OpAccessChain %9 %71 
                                         f32 %280 = OpLoad %279 
                                         f32 %281 = OpLoad %119 
                                         f32 %282 = OpFMul %280 %281 
                                Private f32* %283 = OpAccessChain %36 %71 
                                         f32 %284 = OpLoad %283 
                                         f32 %285 = OpFAdd %282 %284 
                                Private f32* %286 = OpAccessChain %36 %71 
                                                      OpStore %286 %285 
                                         f32 %287 = OpLoad %30 
                                Private f32* %288 = OpAccessChain %36 %71 
                                         f32 %289 = OpLoad %288 
                                         f32 %290 = OpFMul %287 %289 
                                Private f32* %291 = OpAccessChain %9 %71 
                                                      OpStore %291 %290 
                              Uniform f32_4* %293 = OpAccessChain %22 %292 
                                       f32_4 %294 = OpLoad %293 
                                       f32_3 %295 = OpVectorShuffle %294 %294 0 1 2 
                              Uniform f32_4* %297 = OpAccessChain %22 %296 
                                       f32_4 %298 = OpLoad %297 
                                       f32_3 %299 = OpVectorShuffle %298 %298 0 1 2 
                                       f32_3 %300 = OpFMul %295 %299 
                                                      OpStore %63 %300 
                                       f32_3 %301 = OpLoad %9 
                                       f32_3 %302 = OpVectorShuffle %301 %301 0 0 0 
                                       f32_3 %303 = OpLoad %63 
                                       f32_3 %304 = OpFMul %302 %303 
                                                      OpStore %9 %304 
                                Uniform f32* %306 = OpAccessChain %22 %305 
                                         f32 %307 = OpLoad %306 
                                         f32 %308 = OpFNegate %307 
                                         f32 %309 = OpFMul %308 %108 
                                Uniform f32* %311 = OpAccessChain %22 %310 
                                         f32 %312 = OpLoad %311 
                                         f32 %313 = OpFAdd %309 %312 
                                                      OpStore %119 %313 
                                         f32 %315 = OpLoad %119 
                                         f32 %316 = OpFNegate %315 
                                Private f32* %317 = OpAccessChain %36 %78 
                                         f32 %318 = OpLoad %317 
                                         f32 %319 = OpFAdd %316 %318 
                                Private f32* %320 = OpAccessChain %314 %71 
                                                      OpStore %320 %319 
                                Uniform f32* %321 = OpAccessChain %22 %305 
                                         f32 %322 = OpLoad %321 
                                         f32 %323 = OpFMul %322 %108 
                                Uniform f32* %324 = OpAccessChain %22 %310 
                                         f32 %325 = OpLoad %324 
                                         f32 %326 = OpFAdd %323 %325 
                                                      OpStore %47 %326 
                                         f32 %327 = OpLoad %119 
                                         f32 %328 = OpFNegate %327 
                                         f32 %329 = OpLoad %47 
                                         f32 %330 = OpFAdd %328 %329 
                                                      OpStore %119 %330 
                                         f32 %331 = OpLoad %119 
                                         f32 %332 = OpFDiv %131 %331 
                                                      OpStore %119 %332 
                                         f32 %333 = OpLoad %119 
                                Private f32* %334 = OpAccessChain %314 %71 
                                         f32 %335 = OpLoad %334 
                                         f32 %336 = OpFMul %333 %335 
                                Private f32* %337 = OpAccessChain %314 %71 
                                                      OpStore %337 %336 
                                Private f32* %338 = OpAccessChain %314 %71 
                                         f32 %339 = OpLoad %338 
                                         f32 %340 = OpExtInst %1 43 %339 %83 %131 
                                Private f32* %341 = OpAccessChain %314 %71 
                                                      OpStore %341 %340 
                                Private f32* %342 = OpAccessChain %314 %71 
                                         f32 %343 = OpLoad %342 
                                         f32 %344 = OpFMul %343 %143 
                                         f32 %345 = OpFAdd %344 %145 
                                                      OpStore %119 %345 
                                Private f32* %346 = OpAccessChain %314 %71 
                                         f32 %347 = OpLoad %346 
                                Private f32* %348 = OpAccessChain %314 %71 
                                         f32 %349 = OpLoad %348 
                                         f32 %350 = OpFMul %347 %349 
                                Private f32* %351 = OpAccessChain %314 %71 
                                                      OpStore %351 %350 
                                Private f32* %352 = OpAccessChain %314 %71 
                                         f32 %353 = OpLoad %352 
                                         f32 %354 = OpLoad %119 
                                         f32 %355 = OpFMul %353 %354 
                                Private f32* %356 = OpAccessChain %314 %71 
                                                      OpStore %356 %355 
                                Private f32* %357 = OpAccessChain %36 %71 
                                         f32 %358 = OpLoad %357 
                                Private f32* %359 = OpAccessChain %314 %71 
                                         f32 %360 = OpLoad %359 
                                         f32 %361 = OpFMul %358 %360 
                                Private f32* %362 = OpAccessChain %36 %71 
                                                      OpStore %362 %361 
                              Uniform f32_4* %364 = OpAccessChain %22 %363 
                                       f32_4 %365 = OpLoad %364 
                                       f32_3 %366 = OpVectorShuffle %365 %365 0 1 2 
                                       f32_3 %367 = OpFNegate %366 
                              Uniform f32_4* %369 = OpAccessChain %22 %368 
                                       f32_4 %370 = OpLoad %369 
                                       f32_3 %371 = OpVectorShuffle %370 %370 0 1 2 
                                       f32_3 %372 = OpFAdd %367 %371 
                                                      OpStore %314 %372 
                              Uniform f32_4* %373 = OpAccessChain %22 %368 
                                       f32_4 %374 = OpLoad %373 
                                       f32_3 %375 = OpVectorShuffle %374 %374 3 3 3 
                                       f32_3 %376 = OpLoad %314 
                                       f32_3 %377 = OpFMul %375 %376 
                              Uniform f32_4* %378 = OpAccessChain %22 %363 
                                       f32_4 %379 = OpLoad %378 
                                       f32_3 %380 = OpVectorShuffle %379 %379 0 1 2 
                                       f32_3 %381 = OpFAdd %377 %380 
                                                      OpStore %314 %381 
                                       f32_3 %382 = OpLoad %314 
                                       f32_3 %383 = OpFNegate %382 
                              Uniform f32_4* %384 = OpAccessChain %22 %363 
                                       f32_4 %385 = OpLoad %384 
                                       f32_3 %386 = OpVectorShuffle %385 %385 0 1 2 
                                       f32_3 %387 = OpFAdd %383 %386 
                                                      OpStore %63 %387 
                                       f32_3 %388 = OpLoad %36 
                                       f32_3 %389 = OpVectorShuffle %388 %388 0 0 0 
                                       f32_3 %390 = OpLoad %63 
                                       f32_3 %391 = OpFMul %389 %390 
                                       f32_3 %392 = OpLoad %314 
                                       f32_3 %393 = OpFAdd %391 %392 
                                                      OpStore %36 %393 
                         read_only Texture2D %396 = OpLoad %395 
                                     sampler %398 = OpLoad %397 
                  read_only Texture2DSampled %400 = OpSampledImage %396 %398 
                                       f32_2 %403 = OpLoad vs_TEXCOORD0 
                                       f32_4 %404 = OpImageSampleImplicitLod %400 %403 
                                       f32_3 %405 = OpVectorShuffle %404 %404 0 1 2 
                                                      OpStore %394 %405 
                                       f32_3 %406 = OpLoad %394 
                              Uniform f32_4* %408 = OpAccessChain %22 %407 
                                       f32_4 %409 = OpLoad %408 
                                       f32_3 %410 = OpVectorShuffle %409 %409 0 1 2 
                                       f32_3 %411 = OpFMul %406 %410 
                                                      OpStore %63 %411 
                                       f32_3 %412 = OpLoad %63 
                              Uniform f32_4* %413 = OpAccessChain %22 %292 
                                       f32_4 %414 = OpLoad %413 
                                       f32_3 %415 = OpVectorShuffle %414 %414 0 1 2 
                                       f32_3 %416 = OpFMul %412 %415 
                                                      OpStore %63 %416 
                                       f32_3 %417 = OpLoad %63 
                                       f32_3 %418 = OpLoad %36 
                                       f32_3 %419 = OpFMul %417 %418 
                                       f32_3 %420 = OpLoad %9 
                                       f32_3 %421 = OpFAdd %419 %420 
                                                      OpStore %9 %421 
                                       f32_3 %424 = OpLoad %9 
                                       f32_4 %425 = OpLoad %423 
                                       f32_4 %426 = OpVectorShuffle %425 %424 4 5 6 3 
                                                      OpStore %423 %426 
                                 Output f32* %428 = OpAccessChain %423 %189 
                                                      OpStore %428 %131 
                                                      OpReturn
                                                      OpFunctionEnd
"
}
SubProgram "gles3 hw_tier00 " {
Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "SHADOWS_SCREEN" }
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in highp vec3 in_NORMAL0;
in highp vec4 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out highp vec3 vs_TEXCOORD1;
out highp vec3 vs_TEXCOORD2;
out mediump vec3 vs_TEXCOORD3;
out highp vec4 vs_TEXCOORD5;
out highp vec4 vs_TEXCOORD6;
vec4 u_xlat0;
mediump vec4 u_xlat16_0;
vec4 u_xlat1;
mediump float u_xlat16_2;
mediump vec3 u_xlat16_3;
float u_xlat12;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    vs_TEXCOORD2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
    u_xlat0 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat0;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat0;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat0.xy;
    u_xlat0.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat12 = dot(u_xlat0.xyz, u_xlat0.xyz);
    u_xlat12 = inversesqrt(u_xlat12);
    u_xlat0.xyz = vec3(u_xlat12) * u_xlat0.xyz;
    vs_TEXCOORD1.xyz = u_xlat0.xyz;
    u_xlat16_2 = u_xlat0.y * u_xlat0.y;
    u_xlat16_2 = u_xlat0.x * u_xlat0.x + (-u_xlat16_2);
    u_xlat16_0 = u_xlat0.yzzx * u_xlat0.xyzz;
    u_xlat16_3.x = dot(unity_SHBr, u_xlat16_0);
    u_xlat16_3.y = dot(unity_SHBg, u_xlat16_0);
    u_xlat16_3.z = dot(unity_SHBb, u_xlat16_0);
    vs_TEXCOORD3.xyz = unity_SHC.xyz * vec3(u_xlat16_2) + u_xlat16_3.xyz;
    vs_TEXCOORD5 = vec4(0.0, 0.0, 0.0, 0.0);
    vs_TEXCOORD6 = vec4(0.0, 0.0, 0.0, 0.0);
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es
#ifdef GL_EXT_shader_texture_lod
#extension GL_EXT_shader_texture_lod : enable
#endif

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec3 _WorldSpaceCameraPos;
uniform 	mediump vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	vec4 hlslcc_mtx4x4unity_WorldToShadow[16];
uniform 	mediump vec4 _LightShadowData;
uniform 	vec4 unity_ShadowFadeCenterAndType;
uniform 	vec4 hlslcc_mtx4x4unity_MatrixV[4];
uniform 	mediump vec4 _LightColor0;
uniform 	mediump vec4 _SpecColor;
uniform 	mediump vec4 _Color;
uniform 	mediump float _Smoothness;
uniform 	mediump vec4 _HColor;
uniform 	mediump vec4 _SColor;
uniform 	mediump float _RampThreshold;
uniform 	mediump float _RampSmooth;
uniform 	mediump float _SpecSmooth;
UNITY_LOCATION(0) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(1) uniform highp sampler2D _ShadowMapTexture;
UNITY_LOCATION(2) uniform highp sampler2DShadow hlslcc_zcmp_ShadowMapTexture;
in mediump vec2 vs_TEXCOORD0;
in highp vec3 vs_TEXCOORD1;
in highp vec3 vs_TEXCOORD2;
in mediump vec3 vs_TEXCOORD3;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
vec4 u_xlat1;
mediump vec3 u_xlat16_1;
mediump vec3 u_xlat16_2;
vec3 u_xlat3;
mediump vec3 u_xlat16_3;
mediump vec3 u_xlat16_4;
float u_xlat5;
mediump vec3 u_xlat16_6;
mediump float u_xlat16_11;
float u_xlat15;
mediump float u_xlat16_16;
void main()
{
    u_xlat0.xyz = (-vs_TEXCOORD2.xyz) + _WorldSpaceCameraPos.xyz;
    u_xlat15 = dot(u_xlat0.xyz, u_xlat0.xyz);
    u_xlat15 = inversesqrt(u_xlat15);
    u_xlat16_1.xyz = u_xlat0.xyz * vec3(u_xlat15) + _WorldSpaceLightPos0.xyz;
    u_xlat16_16 = dot(u_xlat16_1.xyz, u_xlat16_1.xyz);
    u_xlat16_16 = inversesqrt(u_xlat16_16);
    u_xlat16_1.xyz = vec3(u_xlat16_16) * u_xlat16_1.xyz;
    u_xlat16_16 = dot(vs_TEXCOORD1.xyz, vs_TEXCOORD1.xyz);
    u_xlat16_16 = inversesqrt(u_xlat16_16);
    u_xlat16_2.xyz = vec3(u_xlat16_16) * vs_TEXCOORD1.xyz;
    u_xlat16_1.x = dot(u_xlat16_2.xyz, u_xlat16_1.xyz);
    u_xlat16_1.y = dot(u_xlat16_2.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat16_1.xy = max(u_xlat16_1.xy, vec2(0.0, 0.0));
    u_xlat15 = log2(u_xlat16_1.x);
    u_xlat16_1.x = _Smoothness * 128.0;
    u_xlat15 = u_xlat15 * u_xlat16_1.x;
    u_xlat15 = exp2(u_xlat15);
    u_xlat16_1.x = (-_SpecSmooth) * 0.5 + 0.5;
    u_xlat15 = u_xlat15 * 2.0 + (-u_xlat16_1.x);
    u_xlat16_11 = _SpecSmooth * 0.5 + 0.5;
    u_xlat3.x = (-u_xlat16_1.x) + u_xlat16_11;
    u_xlat3.x = float(1.0) / u_xlat3.x;
    u_xlat15 = u_xlat15 * u_xlat3.x;
#ifdef UNITY_ADRENO_ES3
    u_xlat15 = min(max(u_xlat15, 0.0), 1.0);
#else
    u_xlat15 = clamp(u_xlat15, 0.0, 1.0);
#endif
    u_xlat3.x = u_xlat15 * -2.0 + 3.0;
    u_xlat15 = u_xlat15 * u_xlat15;
    u_xlat15 = u_xlat15 * u_xlat3.x;
    u_xlat3.x = hlslcc_mtx4x4unity_MatrixV[0].z;
    u_xlat3.y = hlslcc_mtx4x4unity_MatrixV[1].z;
    u_xlat3.z = hlslcc_mtx4x4unity_MatrixV[2].z;
    u_xlat0.x = dot(u_xlat0.xyz, u_xlat3.xyz);
    u_xlat3.xyz = vs_TEXCOORD2.xyz + (-unity_ShadowFadeCenterAndType.xyz);
    u_xlat5 = dot(u_xlat3.xyz, u_xlat3.xyz);
    u_xlat5 = sqrt(u_xlat5);
    u_xlat5 = (-u_xlat0.x) + u_xlat5;
    u_xlat0.x = unity_ShadowFadeCenterAndType.w * u_xlat5 + u_xlat0.x;
    u_xlat0.x = u_xlat0.x * _LightShadowData.z + _LightShadowData.w;
#ifdef UNITY_ADRENO_ES3
    u_xlat0.x = min(max(u_xlat0.x, 0.0), 1.0);
#else
    u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);
#endif
    u_xlat3.xyz = vs_TEXCOORD2.yyy * hlslcc_mtx4x4unity_WorldToShadow[1].xyz;
    u_xlat3.xyz = hlslcc_mtx4x4unity_WorldToShadow[0].xyz * vs_TEXCOORD2.xxx + u_xlat3.xyz;
    u_xlat3.xyz = hlslcc_mtx4x4unity_WorldToShadow[2].xyz * vs_TEXCOORD2.zzz + u_xlat3.xyz;
    u_xlat3.xyz = u_xlat3.xyz + hlslcc_mtx4x4unity_WorldToShadow[3].xyz;
    vec3 txVec0 = vec3(u_xlat3.xy,u_xlat3.z);
    u_xlat5 = textureLod(hlslcc_zcmp_ShadowMapTexture, txVec0, 0.0);
    u_xlat16_1.x = (-_LightShadowData.x) + 1.0;
    u_xlat16_1.x = u_xlat5 * u_xlat16_1.x + _LightShadowData.x;
    u_xlat16_11 = (-u_xlat16_1.x) + 1.0;
    u_xlat16_1.x = u_xlat0.x * u_xlat16_11 + u_xlat16_1.x;
    u_xlat0.x = u_xlat15 * u_xlat16_1.x;
    u_xlat16_2.xyz = _LightColor0.xyz * _SpecColor.xyz;
    u_xlat0.xyz = u_xlat0.xxx * u_xlat16_2.xyz;
    u_xlat16_11 = (-_RampSmooth) * 0.5 + _RampThreshold;
    u_xlat16_6.x = (-u_xlat16_11) + u_xlat16_1.y;
    u_xlat16_16 = _RampSmooth * 0.5 + _RampThreshold;
    u_xlat16_11 = (-u_xlat16_11) + u_xlat16_16;
    u_xlat16_11 = float(1.0) / u_xlat16_11;
    u_xlat16_6.x = u_xlat16_11 * u_xlat16_6.x;
#ifdef UNITY_ADRENO_ES3
    u_xlat16_6.x = min(max(u_xlat16_6.x, 0.0), 1.0);
#else
    u_xlat16_6.x = clamp(u_xlat16_6.x, 0.0, 1.0);
#endif
    u_xlat16_11 = u_xlat16_6.x * -2.0 + 3.0;
    u_xlat16_6.x = u_xlat16_6.x * u_xlat16_6.x;
    u_xlat16_6.x = u_xlat16_6.x * u_xlat16_11;
    u_xlat16_1.x = u_xlat16_1.x * u_xlat16_6.x;
    u_xlat16_6.xyz = (-_HColor.xyz) + _SColor.xyz;
    u_xlat16_6.xyz = _SColor.www * u_xlat16_6.xyz + _HColor.xyz;
    u_xlat16_2.xyz = (-u_xlat16_6.xyz) + _HColor.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xxx * u_xlat16_2.xyz + u_xlat16_6.xyz;
    u_xlat16_3.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_2.xyz = u_xlat16_3.xyz * _Color.xyz;
    u_xlat16_4.xyz = u_xlat16_2.xyz * _LightColor0.xyz;
    u_xlat0.xyz = u_xlat16_4.xyz * u_xlat16_1.xyz + u_xlat0.xyz;
    u_xlat1.xyz = vs_TEXCOORD1.xyz;
    u_xlat1.w = 1.0;
    u_xlat16_4.x = dot(unity_SHAr, u_xlat1);
    u_xlat16_4.y = dot(unity_SHAg, u_xlat1);
    u_xlat16_4.z = dot(unity_SHAb, u_xlat1);
    u_xlat16_4.xyz = u_xlat16_4.xyz + vs_TEXCOORD3.xyz;
    u_xlat16_4.xyz = max(u_xlat16_4.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat3.xyz = log2(u_xlat16_4.xyz);
    u_xlat3.xyz = u_xlat3.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
    u_xlat3.xyz = exp2(u_xlat3.xyz);
    u_xlat3.xyz = u_xlat3.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
    u_xlat3.xyz = max(u_xlat3.xyz, vec3(0.0, 0.0, 0.0));
    SV_Target0.xyz = u_xlat16_2.xyz * u_xlat3.xyz + u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier01 " {
Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "SHADOWS_SCREEN" }
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in highp vec3 in_NORMAL0;
in highp vec4 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out highp vec3 vs_TEXCOORD1;
out highp vec3 vs_TEXCOORD2;
out mediump vec3 vs_TEXCOORD3;
out highp vec4 vs_TEXCOORD5;
out highp vec4 vs_TEXCOORD6;
vec4 u_xlat0;
mediump vec4 u_xlat16_0;
vec4 u_xlat1;
mediump float u_xlat16_2;
mediump vec3 u_xlat16_3;
float u_xlat12;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    vs_TEXCOORD2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
    u_xlat0 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat0;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat0;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat0.xy;
    u_xlat0.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat12 = dot(u_xlat0.xyz, u_xlat0.xyz);
    u_xlat12 = inversesqrt(u_xlat12);
    u_xlat0.xyz = vec3(u_xlat12) * u_xlat0.xyz;
    vs_TEXCOORD1.xyz = u_xlat0.xyz;
    u_xlat16_2 = u_xlat0.y * u_xlat0.y;
    u_xlat16_2 = u_xlat0.x * u_xlat0.x + (-u_xlat16_2);
    u_xlat16_0 = u_xlat0.yzzx * u_xlat0.xyzz;
    u_xlat16_3.x = dot(unity_SHBr, u_xlat16_0);
    u_xlat16_3.y = dot(unity_SHBg, u_xlat16_0);
    u_xlat16_3.z = dot(unity_SHBb, u_xlat16_0);
    vs_TEXCOORD3.xyz = unity_SHC.xyz * vec3(u_xlat16_2) + u_xlat16_3.xyz;
    vs_TEXCOORD5 = vec4(0.0, 0.0, 0.0, 0.0);
    vs_TEXCOORD6 = vec4(0.0, 0.0, 0.0, 0.0);
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es
#ifdef GL_EXT_shader_texture_lod
#extension GL_EXT_shader_texture_lod : enable
#endif

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec3 _WorldSpaceCameraPos;
uniform 	mediump vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	vec4 hlslcc_mtx4x4unity_WorldToShadow[16];
uniform 	mediump vec4 _LightShadowData;
uniform 	vec4 unity_ShadowFadeCenterAndType;
uniform 	vec4 hlslcc_mtx4x4unity_MatrixV[4];
uniform 	mediump vec4 _LightColor0;
uniform 	mediump vec4 _SpecColor;
uniform 	mediump vec4 _Color;
uniform 	mediump float _Smoothness;
uniform 	mediump vec4 _HColor;
uniform 	mediump vec4 _SColor;
uniform 	mediump float _RampThreshold;
uniform 	mediump float _RampSmooth;
uniform 	mediump float _SpecSmooth;
UNITY_LOCATION(0) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(1) uniform highp sampler2D _ShadowMapTexture;
UNITY_LOCATION(2) uniform highp sampler2DShadow hlslcc_zcmp_ShadowMapTexture;
in mediump vec2 vs_TEXCOORD0;
in highp vec3 vs_TEXCOORD1;
in highp vec3 vs_TEXCOORD2;
in mediump vec3 vs_TEXCOORD3;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
vec4 u_xlat1;
mediump vec3 u_xlat16_1;
mediump vec3 u_xlat16_2;
vec3 u_xlat3;
mediump vec3 u_xlat16_3;
mediump vec3 u_xlat16_4;
float u_xlat5;
mediump vec3 u_xlat16_6;
mediump float u_xlat16_11;
float u_xlat15;
mediump float u_xlat16_16;
void main()
{
    u_xlat0.xyz = (-vs_TEXCOORD2.xyz) + _WorldSpaceCameraPos.xyz;
    u_xlat15 = dot(u_xlat0.xyz, u_xlat0.xyz);
    u_xlat15 = inversesqrt(u_xlat15);
    u_xlat16_1.xyz = u_xlat0.xyz * vec3(u_xlat15) + _WorldSpaceLightPos0.xyz;
    u_xlat16_16 = dot(u_xlat16_1.xyz, u_xlat16_1.xyz);
    u_xlat16_16 = inversesqrt(u_xlat16_16);
    u_xlat16_1.xyz = vec3(u_xlat16_16) * u_xlat16_1.xyz;
    u_xlat16_16 = dot(vs_TEXCOORD1.xyz, vs_TEXCOORD1.xyz);
    u_xlat16_16 = inversesqrt(u_xlat16_16);
    u_xlat16_2.xyz = vec3(u_xlat16_16) * vs_TEXCOORD1.xyz;
    u_xlat16_1.x = dot(u_xlat16_2.xyz, u_xlat16_1.xyz);
    u_xlat16_1.y = dot(u_xlat16_2.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat16_1.xy = max(u_xlat16_1.xy, vec2(0.0, 0.0));
    u_xlat15 = log2(u_xlat16_1.x);
    u_xlat16_1.x = _Smoothness * 128.0;
    u_xlat15 = u_xlat15 * u_xlat16_1.x;
    u_xlat15 = exp2(u_xlat15);
    u_xlat16_1.x = (-_SpecSmooth) * 0.5 + 0.5;
    u_xlat15 = u_xlat15 * 2.0 + (-u_xlat16_1.x);
    u_xlat16_11 = _SpecSmooth * 0.5 + 0.5;
    u_xlat3.x = (-u_xlat16_1.x) + u_xlat16_11;
    u_xlat3.x = float(1.0) / u_xlat3.x;
    u_xlat15 = u_xlat15 * u_xlat3.x;
#ifdef UNITY_ADRENO_ES3
    u_xlat15 = min(max(u_xlat15, 0.0), 1.0);
#else
    u_xlat15 = clamp(u_xlat15, 0.0, 1.0);
#endif
    u_xlat3.x = u_xlat15 * -2.0 + 3.0;
    u_xlat15 = u_xlat15 * u_xlat15;
    u_xlat15 = u_xlat15 * u_xlat3.x;
    u_xlat3.x = hlslcc_mtx4x4unity_MatrixV[0].z;
    u_xlat3.y = hlslcc_mtx4x4unity_MatrixV[1].z;
    u_xlat3.z = hlslcc_mtx4x4unity_MatrixV[2].z;
    u_xlat0.x = dot(u_xlat0.xyz, u_xlat3.xyz);
    u_xlat3.xyz = vs_TEXCOORD2.xyz + (-unity_ShadowFadeCenterAndType.xyz);
    u_xlat5 = dot(u_xlat3.xyz, u_xlat3.xyz);
    u_xlat5 = sqrt(u_xlat5);
    u_xlat5 = (-u_xlat0.x) + u_xlat5;
    u_xlat0.x = unity_ShadowFadeCenterAndType.w * u_xlat5 + u_xlat0.x;
    u_xlat0.x = u_xlat0.x * _LightShadowData.z + _LightShadowData.w;
#ifdef UNITY_ADRENO_ES3
    u_xlat0.x = min(max(u_xlat0.x, 0.0), 1.0);
#else
    u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);
#endif
    u_xlat3.xyz = vs_TEXCOORD2.yyy * hlslcc_mtx4x4unity_WorldToShadow[1].xyz;
    u_xlat3.xyz = hlslcc_mtx4x4unity_WorldToShadow[0].xyz * vs_TEXCOORD2.xxx + u_xlat3.xyz;
    u_xlat3.xyz = hlslcc_mtx4x4unity_WorldToShadow[2].xyz * vs_TEXCOORD2.zzz + u_xlat3.xyz;
    u_xlat3.xyz = u_xlat3.xyz + hlslcc_mtx4x4unity_WorldToShadow[3].xyz;
    vec3 txVec0 = vec3(u_xlat3.xy,u_xlat3.z);
    u_xlat5 = textureLod(hlslcc_zcmp_ShadowMapTexture, txVec0, 0.0);
    u_xlat16_1.x = (-_LightShadowData.x) + 1.0;
    u_xlat16_1.x = u_xlat5 * u_xlat16_1.x + _LightShadowData.x;
    u_xlat16_11 = (-u_xlat16_1.x) + 1.0;
    u_xlat16_1.x = u_xlat0.x * u_xlat16_11 + u_xlat16_1.x;
    u_xlat0.x = u_xlat15 * u_xlat16_1.x;
    u_xlat16_2.xyz = _LightColor0.xyz * _SpecColor.xyz;
    u_xlat0.xyz = u_xlat0.xxx * u_xlat16_2.xyz;
    u_xlat16_11 = (-_RampSmooth) * 0.5 + _RampThreshold;
    u_xlat16_6.x = (-u_xlat16_11) + u_xlat16_1.y;
    u_xlat16_16 = _RampSmooth * 0.5 + _RampThreshold;
    u_xlat16_11 = (-u_xlat16_11) + u_xlat16_16;
    u_xlat16_11 = float(1.0) / u_xlat16_11;
    u_xlat16_6.x = u_xlat16_11 * u_xlat16_6.x;
#ifdef UNITY_ADRENO_ES3
    u_xlat16_6.x = min(max(u_xlat16_6.x, 0.0), 1.0);
#else
    u_xlat16_6.x = clamp(u_xlat16_6.x, 0.0, 1.0);
#endif
    u_xlat16_11 = u_xlat16_6.x * -2.0 + 3.0;
    u_xlat16_6.x = u_xlat16_6.x * u_xlat16_6.x;
    u_xlat16_6.x = u_xlat16_6.x * u_xlat16_11;
    u_xlat16_1.x = u_xlat16_1.x * u_xlat16_6.x;
    u_xlat16_6.xyz = (-_HColor.xyz) + _SColor.xyz;
    u_xlat16_6.xyz = _SColor.www * u_xlat16_6.xyz + _HColor.xyz;
    u_xlat16_2.xyz = (-u_xlat16_6.xyz) + _HColor.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xxx * u_xlat16_2.xyz + u_xlat16_6.xyz;
    u_xlat16_3.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_2.xyz = u_xlat16_3.xyz * _Color.xyz;
    u_xlat16_4.xyz = u_xlat16_2.xyz * _LightColor0.xyz;
    u_xlat0.xyz = u_xlat16_4.xyz * u_xlat16_1.xyz + u_xlat0.xyz;
    u_xlat1.xyz = vs_TEXCOORD1.xyz;
    u_xlat1.w = 1.0;
    u_xlat16_4.x = dot(unity_SHAr, u_xlat1);
    u_xlat16_4.y = dot(unity_SHAg, u_xlat1);
    u_xlat16_4.z = dot(unity_SHAb, u_xlat1);
    u_xlat16_4.xyz = u_xlat16_4.xyz + vs_TEXCOORD3.xyz;
    u_xlat16_4.xyz = max(u_xlat16_4.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat3.xyz = log2(u_xlat16_4.xyz);
    u_xlat3.xyz = u_xlat3.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
    u_xlat3.xyz = exp2(u_xlat3.xyz);
    u_xlat3.xyz = u_xlat3.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
    u_xlat3.xyz = max(u_xlat3.xyz, vec3(0.0, 0.0, 0.0));
    SV_Target0.xyz = u_xlat16_2.xyz * u_xlat3.xyz + u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier02 " {
Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "SHADOWS_SCREEN" }
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in highp vec3 in_NORMAL0;
in highp vec4 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out highp vec3 vs_TEXCOORD1;
out highp vec3 vs_TEXCOORD2;
out mediump vec3 vs_TEXCOORD3;
out highp vec4 vs_TEXCOORD5;
out highp vec4 vs_TEXCOORD6;
vec4 u_xlat0;
mediump vec4 u_xlat16_0;
vec4 u_xlat1;
mediump float u_xlat16_2;
mediump vec3 u_xlat16_3;
float u_xlat12;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    vs_TEXCOORD2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
    u_xlat0 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat0;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat0;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat0.xy;
    u_xlat0.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat12 = dot(u_xlat0.xyz, u_xlat0.xyz);
    u_xlat12 = inversesqrt(u_xlat12);
    u_xlat0.xyz = vec3(u_xlat12) * u_xlat0.xyz;
    vs_TEXCOORD1.xyz = u_xlat0.xyz;
    u_xlat16_2 = u_xlat0.y * u_xlat0.y;
    u_xlat16_2 = u_xlat0.x * u_xlat0.x + (-u_xlat16_2);
    u_xlat16_0 = u_xlat0.yzzx * u_xlat0.xyzz;
    u_xlat16_3.x = dot(unity_SHBr, u_xlat16_0);
    u_xlat16_3.y = dot(unity_SHBg, u_xlat16_0);
    u_xlat16_3.z = dot(unity_SHBb, u_xlat16_0);
    vs_TEXCOORD3.xyz = unity_SHC.xyz * vec3(u_xlat16_2) + u_xlat16_3.xyz;
    vs_TEXCOORD5 = vec4(0.0, 0.0, 0.0, 0.0);
    vs_TEXCOORD6 = vec4(0.0, 0.0, 0.0, 0.0);
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es
#ifdef GL_EXT_shader_texture_lod
#extension GL_EXT_shader_texture_lod : enable
#endif

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec3 _WorldSpaceCameraPos;
uniform 	mediump vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	vec4 hlslcc_mtx4x4unity_WorldToShadow[16];
uniform 	mediump vec4 _LightShadowData;
uniform 	vec4 unity_ShadowFadeCenterAndType;
uniform 	vec4 hlslcc_mtx4x4unity_MatrixV[4];
uniform 	mediump vec4 _LightColor0;
uniform 	mediump vec4 _SpecColor;
uniform 	mediump vec4 _Color;
uniform 	mediump float _Smoothness;
uniform 	mediump vec4 _HColor;
uniform 	mediump vec4 _SColor;
uniform 	mediump float _RampThreshold;
uniform 	mediump float _RampSmooth;
uniform 	mediump float _SpecSmooth;
UNITY_LOCATION(0) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(1) uniform highp sampler2D _ShadowMapTexture;
UNITY_LOCATION(2) uniform highp sampler2DShadow hlslcc_zcmp_ShadowMapTexture;
in mediump vec2 vs_TEXCOORD0;
in highp vec3 vs_TEXCOORD1;
in highp vec3 vs_TEXCOORD2;
in mediump vec3 vs_TEXCOORD3;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
vec4 u_xlat1;
mediump vec3 u_xlat16_1;
mediump vec3 u_xlat16_2;
vec3 u_xlat3;
mediump vec3 u_xlat16_3;
mediump vec3 u_xlat16_4;
float u_xlat5;
mediump vec3 u_xlat16_6;
mediump float u_xlat16_11;
float u_xlat15;
mediump float u_xlat16_16;
void main()
{
    u_xlat0.xyz = (-vs_TEXCOORD2.xyz) + _WorldSpaceCameraPos.xyz;
    u_xlat15 = dot(u_xlat0.xyz, u_xlat0.xyz);
    u_xlat15 = inversesqrt(u_xlat15);
    u_xlat16_1.xyz = u_xlat0.xyz * vec3(u_xlat15) + _WorldSpaceLightPos0.xyz;
    u_xlat16_16 = dot(u_xlat16_1.xyz, u_xlat16_1.xyz);
    u_xlat16_16 = inversesqrt(u_xlat16_16);
    u_xlat16_1.xyz = vec3(u_xlat16_16) * u_xlat16_1.xyz;
    u_xlat16_16 = dot(vs_TEXCOORD1.xyz, vs_TEXCOORD1.xyz);
    u_xlat16_16 = inversesqrt(u_xlat16_16);
    u_xlat16_2.xyz = vec3(u_xlat16_16) * vs_TEXCOORD1.xyz;
    u_xlat16_1.x = dot(u_xlat16_2.xyz, u_xlat16_1.xyz);
    u_xlat16_1.y = dot(u_xlat16_2.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat16_1.xy = max(u_xlat16_1.xy, vec2(0.0, 0.0));
    u_xlat15 = log2(u_xlat16_1.x);
    u_xlat16_1.x = _Smoothness * 128.0;
    u_xlat15 = u_xlat15 * u_xlat16_1.x;
    u_xlat15 = exp2(u_xlat15);
    u_xlat16_1.x = (-_SpecSmooth) * 0.5 + 0.5;
    u_xlat15 = u_xlat15 * 2.0 + (-u_xlat16_1.x);
    u_xlat16_11 = _SpecSmooth * 0.5 + 0.5;
    u_xlat3.x = (-u_xlat16_1.x) + u_xlat16_11;
    u_xlat3.x = float(1.0) / u_xlat3.x;
    u_xlat15 = u_xlat15 * u_xlat3.x;
#ifdef UNITY_ADRENO_ES3
    u_xlat15 = min(max(u_xlat15, 0.0), 1.0);
#else
    u_xlat15 = clamp(u_xlat15, 0.0, 1.0);
#endif
    u_xlat3.x = u_xlat15 * -2.0 + 3.0;
    u_xlat15 = u_xlat15 * u_xlat15;
    u_xlat15 = u_xlat15 * u_xlat3.x;
    u_xlat3.x = hlslcc_mtx4x4unity_MatrixV[0].z;
    u_xlat3.y = hlslcc_mtx4x4unity_MatrixV[1].z;
    u_xlat3.z = hlslcc_mtx4x4unity_MatrixV[2].z;
    u_xlat0.x = dot(u_xlat0.xyz, u_xlat3.xyz);
    u_xlat3.xyz = vs_TEXCOORD2.xyz + (-unity_ShadowFadeCenterAndType.xyz);
    u_xlat5 = dot(u_xlat3.xyz, u_xlat3.xyz);
    u_xlat5 = sqrt(u_xlat5);
    u_xlat5 = (-u_xlat0.x) + u_xlat5;
    u_xlat0.x = unity_ShadowFadeCenterAndType.w * u_xlat5 + u_xlat0.x;
    u_xlat0.x = u_xlat0.x * _LightShadowData.z + _LightShadowData.w;
#ifdef UNITY_ADRENO_ES3
    u_xlat0.x = min(max(u_xlat0.x, 0.0), 1.0);
#else
    u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);
#endif
    u_xlat3.xyz = vs_TEXCOORD2.yyy * hlslcc_mtx4x4unity_WorldToShadow[1].xyz;
    u_xlat3.xyz = hlslcc_mtx4x4unity_WorldToShadow[0].xyz * vs_TEXCOORD2.xxx + u_xlat3.xyz;
    u_xlat3.xyz = hlslcc_mtx4x4unity_WorldToShadow[2].xyz * vs_TEXCOORD2.zzz + u_xlat3.xyz;
    u_xlat3.xyz = u_xlat3.xyz + hlslcc_mtx4x4unity_WorldToShadow[3].xyz;
    vec3 txVec0 = vec3(u_xlat3.xy,u_xlat3.z);
    u_xlat5 = textureLod(hlslcc_zcmp_ShadowMapTexture, txVec0, 0.0);
    u_xlat16_1.x = (-_LightShadowData.x) + 1.0;
    u_xlat16_1.x = u_xlat5 * u_xlat16_1.x + _LightShadowData.x;
    u_xlat16_11 = (-u_xlat16_1.x) + 1.0;
    u_xlat16_1.x = u_xlat0.x * u_xlat16_11 + u_xlat16_1.x;
    u_xlat0.x = u_xlat15 * u_xlat16_1.x;
    u_xlat16_2.xyz = _LightColor0.xyz * _SpecColor.xyz;
    u_xlat0.xyz = u_xlat0.xxx * u_xlat16_2.xyz;
    u_xlat16_11 = (-_RampSmooth) * 0.5 + _RampThreshold;
    u_xlat16_6.x = (-u_xlat16_11) + u_xlat16_1.y;
    u_xlat16_16 = _RampSmooth * 0.5 + _RampThreshold;
    u_xlat16_11 = (-u_xlat16_11) + u_xlat16_16;
    u_xlat16_11 = float(1.0) / u_xlat16_11;
    u_xlat16_6.x = u_xlat16_11 * u_xlat16_6.x;
#ifdef UNITY_ADRENO_ES3
    u_xlat16_6.x = min(max(u_xlat16_6.x, 0.0), 1.0);
#else
    u_xlat16_6.x = clamp(u_xlat16_6.x, 0.0, 1.0);
#endif
    u_xlat16_11 = u_xlat16_6.x * -2.0 + 3.0;
    u_xlat16_6.x = u_xlat16_6.x * u_xlat16_6.x;
    u_xlat16_6.x = u_xlat16_6.x * u_xlat16_11;
    u_xlat16_1.x = u_xlat16_1.x * u_xlat16_6.x;
    u_xlat16_6.xyz = (-_HColor.xyz) + _SColor.xyz;
    u_xlat16_6.xyz = _SColor.www * u_xlat16_6.xyz + _HColor.xyz;
    u_xlat16_2.xyz = (-u_xlat16_6.xyz) + _HColor.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xxx * u_xlat16_2.xyz + u_xlat16_6.xyz;
    u_xlat16_3.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_2.xyz = u_xlat16_3.xyz * _Color.xyz;
    u_xlat16_4.xyz = u_xlat16_2.xyz * _LightColor0.xyz;
    u_xlat0.xyz = u_xlat16_4.xyz * u_xlat16_1.xyz + u_xlat0.xyz;
    u_xlat1.xyz = vs_TEXCOORD1.xyz;
    u_xlat1.w = 1.0;
    u_xlat16_4.x = dot(unity_SHAr, u_xlat1);
    u_xlat16_4.y = dot(unity_SHAg, u_xlat1);
    u_xlat16_4.z = dot(unity_SHAb, u_xlat1);
    u_xlat16_4.xyz = u_xlat16_4.xyz + vs_TEXCOORD3.xyz;
    u_xlat16_4.xyz = max(u_xlat16_4.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat3.xyz = log2(u_xlat16_4.xyz);
    u_xlat3.xyz = u_xlat3.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
    u_xlat3.xyz = exp2(u_xlat3.xyz);
    u_xlat3.xyz = u_xlat3.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
    u_xlat3.xyz = max(u_xlat3.xyz, vec3(0.0, 0.0, 0.0));
    SV_Target0.xyz = u_xlat16_2.xyz * u_xlat3.xyz + u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "vulkan hw_tier00 " {
Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "SHADOWS_SCREEN" }
"; SPIR-V
; Version: 1.0
; Generator: Khronos Glslang Reference Front End; 6
; Bound: 214
; Schema: 0
                                                      OpCapability Shader 
                                               %1 = OpExtInstImport "GLSL.std.450" 
                                                      OpMemoryModel Logical GLSL450 
                                                      OpEntryPoint Vertex %4 "main" %11 %53 %87 %97 %113 %117 %155 %195 %204 %207 
                                                      OpName vs_TEXCOORD2 "vs_TEXCOORD2" 
                                                      OpName vs_TEXCOORD0 "vs_TEXCOORD0" 
                                                      OpName vs_TEXCOORD1 "vs_TEXCOORD1" 
                                                      OpName vs_TEXCOORD3 "vs_TEXCOORD3" 
                                                      OpName vs_TEXCOORD5 "vs_TEXCOORD5" 
                                                      OpName vs_TEXCOORD6 "vs_TEXCOORD6" 
                                                      OpDecorate %11 Location 11 
                                                      OpDecorate %16 ArrayStride 16 
                                                      OpDecorate %17 ArrayStride 17 
                                                      OpDecorate %18 ArrayStride 18 
                                                      OpMemberDecorate %19 0 RelaxedPrecision 
                                                      OpMemberDecorate %19 0 Offset 19 
                                                      OpMemberDecorate %19 1 RelaxedPrecision 
                                                      OpMemberDecorate %19 1 Offset 19 
                                                      OpMemberDecorate %19 2 RelaxedPrecision 
                                                      OpMemberDecorate %19 2 Offset 19 
                                                      OpMemberDecorate %19 3 RelaxedPrecision 
                                                      OpMemberDecorate %19 3 Offset 19 
                                                      OpMemberDecorate %19 4 Offset 19 
                                                      OpMemberDecorate %19 5 Offset 19 
                                                      OpMemberDecorate %19 6 Offset 19 
                                                      OpMemberDecorate %19 7 Offset 19 
                                                      OpDecorate %19 Block 
                                                      OpDecorate %21 DescriptorSet 21 
                                                      OpDecorate %21 Binding 21 
                                                      OpDecorate vs_TEXCOORD2 Location 53 
                                                      OpMemberDecorate %85 0 BuiltIn 85 
                                                      OpMemberDecorate %85 1 BuiltIn 85 
                                                      OpMemberDecorate %85 2 BuiltIn 85 
                                                      OpDecorate %85 Block 
                                                      OpDecorate %97 Location 97 
                                                      OpDecorate vs_TEXCOORD0 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD0 Location 113 
                                                      OpDecorate %117 Location 117 
                                                      OpDecorate vs_TEXCOORD1 Location 155 
                                                      OpDecorate %158 RelaxedPrecision 
                                                      OpDecorate %169 RelaxedPrecision 
                                                      OpDecorate %170 RelaxedPrecision 
                                                      OpDecorate %172 RelaxedPrecision 
                                                      OpDecorate %179 RelaxedPrecision 
                                                      OpDecorate %181 RelaxedPrecision 
                                                      OpDecorate %182 RelaxedPrecision 
                                                      OpDecorate %183 RelaxedPrecision 
                                                      OpDecorate %186 RelaxedPrecision 
                                                      OpDecorate %187 RelaxedPrecision 
                                                      OpDecorate %188 RelaxedPrecision 
                                                      OpDecorate %191 RelaxedPrecision 
                                                      OpDecorate %192 RelaxedPrecision 
                                                      OpDecorate %193 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD3 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD3 Location 195 
                                                      OpDecorate %197 RelaxedPrecision 
                                                      OpDecorate %198 RelaxedPrecision 
                                                      OpDecorate %199 RelaxedPrecision 
                                                      OpDecorate %200 RelaxedPrecision 
                                                      OpDecorate %201 RelaxedPrecision 
                                                      OpDecorate %202 RelaxedPrecision 
                                                      OpDecorate %203 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD5 Location 204 
                                                      OpDecorate vs_TEXCOORD6 Location 207 
                                               %2 = OpTypeVoid 
                                               %3 = OpTypeFunction %2 
                                               %6 = OpTypeFloat 32 
                                               %7 = OpTypeVector %6 4 
                                               %8 = OpTypePointer Private %7 
                                Private f32_4* %9 = OpVariable Private 
                                              %10 = OpTypePointer Input %7 
                                 Input f32_4* %11 = OpVariable Input 
                                              %14 = OpTypeInt 32 0 
                                          u32 %15 = OpConstant 4 
                                              %16 = OpTypeArray %7 %15 
                                              %17 = OpTypeArray %7 %15 
                                              %18 = OpTypeArray %7 %15 
                                              %19 = OpTypeStruct %7 %7 %7 %7 %16 %17 %18 %7 
                                              %20 = OpTypePointer Uniform %19 
Uniform struct {f32_4; f32_4; f32_4; f32_4; f32_4[4]; f32_4[4]; f32_4[4]; f32_4;}* %21 = OpVariable Uniform 
                                              %22 = OpTypeInt 32 1 
                                          i32 %23 = OpConstant 4 
                                          i32 %24 = OpConstant 1 
                                              %25 = OpTypePointer Uniform %7 
                                          i32 %29 = OpConstant 0 
                                          i32 %37 = OpConstant 2 
                               Private f32_4* %45 = OpVariable Private 
                                          i32 %47 = OpConstant 3 
                                              %51 = OpTypeVector %6 3 
                                              %52 = OpTypePointer Output %51 
                       Output f32_3* vs_TEXCOORD2 = OpVariable Output 
                                          i32 %65 = OpConstant 6 
                                          u32 %83 = OpConstant 1 
                                              %84 = OpTypeArray %6 %83 
                                              %85 = OpTypeStruct %7 %6 %84 
                                              %86 = OpTypePointer Output %85 
         Output struct {f32_4; f32; f32[1];}* %87 = OpVariable Output 
                                              %95 = OpTypePointer Output %7 
                                 Input f32_4* %97 = OpVariable Input 
                                              %98 = OpTypeVector %6 2 
                                         i32 %101 = OpConstant 7 
                                             %112 = OpTypePointer Output %98 
                       Output f32_2* vs_TEXCOORD0 = OpVariable Output 
                                             %116 = OpTypePointer Input %51 
                                Input f32_3* %117 = OpVariable Input 
                                         i32 %119 = OpConstant 5 
                                         u32 %124 = OpConstant 0 
                                             %125 = OpTypePointer Private %6 
                                         u32 %138 = OpConstant 2 
                                Private f32* %140 = OpVariable Private 
                       Output f32_3* vs_TEXCOORD1 = OpVariable Output 
                                Private f32* %158 = OpVariable Private 
                              Private f32_4* %172 = OpVariable Private 
                                             %178 = OpTypePointer Private %51 
                              Private f32_3* %179 = OpVariable Private 
                       Output f32_3* vs_TEXCOORD3 = OpVariable Output 
                       Output f32_4* vs_TEXCOORD5 = OpVariable Output 
                                         f32 %205 = OpConstant 3.674022E-40 
                                       f32_4 %206 = OpConstantComposite %205 %205 %205 %205 
                       Output f32_4* vs_TEXCOORD6 = OpVariable Output 
                                             %208 = OpTypePointer Output %6 
                                          void %4 = OpFunction None %3 
                                               %5 = OpLabel 
                                        f32_4 %12 = OpLoad %11 
                                        f32_4 %13 = OpVectorShuffle %12 %12 1 1 1 1 
                               Uniform f32_4* %26 = OpAccessChain %21 %23 %24 
                                        f32_4 %27 = OpLoad %26 
                                        f32_4 %28 = OpFMul %13 %27 
                                                      OpStore %9 %28 
                               Uniform f32_4* %30 = OpAccessChain %21 %23 %29 
                                        f32_4 %31 = OpLoad %30 
                                        f32_4 %32 = OpLoad %11 
                                        f32_4 %33 = OpVectorShuffle %32 %32 0 0 0 0 
                                        f32_4 %34 = OpFMul %31 %33 
                                        f32_4 %35 = OpLoad %9 
                                        f32_4 %36 = OpFAdd %34 %35 
                                                      OpStore %9 %36 
                               Uniform f32_4* %38 = OpAccessChain %21 %23 %37 
                                        f32_4 %39 = OpLoad %38 
                                        f32_4 %40 = OpLoad %11 
                                        f32_4 %41 = OpVectorShuffle %40 %40 2 2 2 2 
                                        f32_4 %42 = OpFMul %39 %41 
                                        f32_4 %43 = OpLoad %9 
                                        f32_4 %44 = OpFAdd %42 %43 
                                                      OpStore %9 %44 
                                        f32_4 %46 = OpLoad %9 
                               Uniform f32_4* %48 = OpAccessChain %21 %23 %47 
                                        f32_4 %49 = OpLoad %48 
                                        f32_4 %50 = OpFAdd %46 %49 
                                                      OpStore %45 %50 
                               Uniform f32_4* %54 = OpAccessChain %21 %23 %47 
                                        f32_4 %55 = OpLoad %54 
                                        f32_3 %56 = OpVectorShuffle %55 %55 0 1 2 
                                        f32_4 %57 = OpLoad %11 
                                        f32_3 %58 = OpVectorShuffle %57 %57 3 3 3 
                                        f32_3 %59 = OpFMul %56 %58 
                                        f32_4 %60 = OpLoad %9 
                                        f32_3 %61 = OpVectorShuffle %60 %60 0 1 2 
                                        f32_3 %62 = OpFAdd %59 %61 
                                                      OpStore vs_TEXCOORD2 %62 
                                        f32_4 %63 = OpLoad %45 
                                        f32_4 %64 = OpVectorShuffle %63 %63 1 1 1 1 
                               Uniform f32_4* %66 = OpAccessChain %21 %65 %24 
                                        f32_4 %67 = OpLoad %66 
                                        f32_4 %68 = OpFMul %64 %67 
                                                      OpStore %9 %68 
                               Uniform f32_4* %69 = OpAccessChain %21 %65 %29 
                                        f32_4 %70 = OpLoad %69 
                                        f32_4 %71 = OpLoad %45 
                                        f32_4 %72 = OpVectorShuffle %71 %71 0 0 0 0 
                                        f32_4 %73 = OpFMul %70 %72 
                                        f32_4 %74 = OpLoad %9 
                                        f32_4 %75 = OpFAdd %73 %74 
                                                      OpStore %9 %75 
                               Uniform f32_4* %76 = OpAccessChain %21 %65 %37 
                                        f32_4 %77 = OpLoad %76 
                                        f32_4 %78 = OpLoad %45 
                                        f32_4 %79 = OpVectorShuffle %78 %78 2 2 2 2 
                                        f32_4 %80 = OpFMul %77 %79 
                                        f32_4 %81 = OpLoad %9 
                                        f32_4 %82 = OpFAdd %80 %81 
                                                      OpStore %9 %82 
                               Uniform f32_4* %88 = OpAccessChain %21 %65 %47 
                                        f32_4 %89 = OpLoad %88 
                                        f32_4 %90 = OpLoad %45 
                                        f32_4 %91 = OpVectorShuffle %90 %90 3 3 3 3 
                                        f32_4 %92 = OpFMul %89 %91 
                                        f32_4 %93 = OpLoad %9 
                                        f32_4 %94 = OpFAdd %92 %93 
                                Output f32_4* %96 = OpAccessChain %87 %29 
                                                      OpStore %96 %94 
                                        f32_4 %99 = OpLoad %97 
                                       f32_2 %100 = OpVectorShuffle %99 %99 0 1 
                              Uniform f32_4* %102 = OpAccessChain %21 %101 
                                       f32_4 %103 = OpLoad %102 
                                       f32_2 %104 = OpVectorShuffle %103 %103 0 1 
                                       f32_2 %105 = OpFMul %100 %104 
                              Uniform f32_4* %106 = OpAccessChain %21 %101 
                                       f32_4 %107 = OpLoad %106 
                                       f32_2 %108 = OpVectorShuffle %107 %107 2 3 
                                       f32_2 %109 = OpFAdd %105 %108 
                                       f32_4 %110 = OpLoad %9 
                                       f32_4 %111 = OpVectorShuffle %110 %109 4 5 2 3 
                                                      OpStore %9 %111 
                                       f32_4 %114 = OpLoad %9 
                                       f32_2 %115 = OpVectorShuffle %114 %114 0 1 
                                                      OpStore vs_TEXCOORD0 %115 
                                       f32_3 %118 = OpLoad %117 
                              Uniform f32_4* %120 = OpAccessChain %21 %119 %29 
                                       f32_4 %121 = OpLoad %120 
                                       f32_3 %122 = OpVectorShuffle %121 %121 0 1 2 
                                         f32 %123 = OpDot %118 %122 
                                Private f32* %126 = OpAccessChain %9 %124 
                                                      OpStore %126 %123 
                                       f32_3 %127 = OpLoad %117 
                              Uniform f32_4* %128 = OpAccessChain %21 %119 %24 
                                       f32_4 %129 = OpLoad %128 
                                       f32_3 %130 = OpVectorShuffle %129 %129 0 1 2 
                                         f32 %131 = OpDot %127 %130 
                                Private f32* %132 = OpAccessChain %9 %83 
                                                      OpStore %132 %131 
                                       f32_3 %133 = OpLoad %117 
                              Uniform f32_4* %134 = OpAccessChain %21 %119 %37 
                                       f32_4 %135 = OpLoad %134 
                                       f32_3 %136 = OpVectorShuffle %135 %135 0 1 2 
                                         f32 %137 = OpDot %133 %136 
                                Private f32* %139 = OpAccessChain %9 %138 
                                                      OpStore %139 %137 
                                       f32_4 %141 = OpLoad %9 
                                       f32_3 %142 = OpVectorShuffle %141 %141 0 1 2 
                                       f32_4 %143 = OpLoad %9 
                                       f32_3 %144 = OpVectorShuffle %143 %143 0 1 2 
                                         f32 %145 = OpDot %142 %144 
                                                      OpStore %140 %145 
                                         f32 %146 = OpLoad %140 
                                         f32 %147 = OpExtInst %1 32 %146 
                                                      OpStore %140 %147 
                                         f32 %148 = OpLoad %140 
                                       f32_3 %149 = OpCompositeConstruct %148 %148 %148 
                                       f32_4 %150 = OpLoad %9 
                                       f32_3 %151 = OpVectorShuffle %150 %150 0 1 2 
                                       f32_3 %152 = OpFMul %149 %151 
                                       f32_4 %153 = OpLoad %9 
                                       f32_4 %154 = OpVectorShuffle %153 %152 4 5 6 3 
                                                      OpStore %9 %154 
                                       f32_4 %156 = OpLoad %9 
                                       f32_3 %157 = OpVectorShuffle %156 %156 0 1 2 
                                                      OpStore vs_TEXCOORD1 %157 
                                Private f32* %159 = OpAccessChain %9 %83 
                                         f32 %160 = OpLoad %159 
                                Private f32* %161 = OpAccessChain %9 %83 
                                         f32 %162 = OpLoad %161 
                                         f32 %163 = OpFMul %160 %162 
                                                      OpStore %158 %163 
                                Private f32* %164 = OpAccessChain %9 %124 
                                         f32 %165 = OpLoad %164 
                                Private f32* %166 = OpAccessChain %9 %124 
                                         f32 %167 = OpLoad %166 
                                         f32 %168 = OpFMul %165 %167 
                                         f32 %169 = OpLoad %158 
                                         f32 %170 = OpFNegate %169 
                                         f32 %171 = OpFAdd %168 %170 
                                                      OpStore %158 %171 
                                       f32_4 %173 = OpLoad %9 
                                       f32_4 %174 = OpVectorShuffle %173 %173 1 2 2 0 
                                       f32_4 %175 = OpLoad %9 
                                       f32_4 %176 = OpVectorShuffle %175 %175 0 1 2 2 
                                       f32_4 %177 = OpFMul %174 %176 
                                                      OpStore %172 %177 
                              Uniform f32_4* %180 = OpAccessChain %21 %29 
                                       f32_4 %181 = OpLoad %180 
                                       f32_4 %182 = OpLoad %172 
                                         f32 %183 = OpDot %181 %182 
                                Private f32* %184 = OpAccessChain %179 %124 
                                                      OpStore %184 %183 
                              Uniform f32_4* %185 = OpAccessChain %21 %24 
                                       f32_4 %186 = OpLoad %185 
                                       f32_4 %187 = OpLoad %172 
                                         f32 %188 = OpDot %186 %187 
                                Private f32* %189 = OpAccessChain %179 %83 
                                                      OpStore %189 %188 
                              Uniform f32_4* %190 = OpAccessChain %21 %37 
                                       f32_4 %191 = OpLoad %190 
                                       f32_4 %192 = OpLoad %172 
                                         f32 %193 = OpDot %191 %192 
                                Private f32* %194 = OpAccessChain %179 %138 
                                                      OpStore %194 %193 
                              Uniform f32_4* %196 = OpAccessChain %21 %47 
                                       f32_4 %197 = OpLoad %196 
                                       f32_3 %198 = OpVectorShuffle %197 %197 0 1 2 
                                         f32 %199 = OpLoad %158 
                                       f32_3 %200 = OpCompositeConstruct %199 %199 %199 
                                       f32_3 %201 = OpFMul %198 %200 
                                       f32_3 %202 = OpLoad %179 
                                       f32_3 %203 = OpFAdd %201 %202 
                                                      OpStore vs_TEXCOORD3 %203 
                                                      OpStore vs_TEXCOORD5 %206 
                                                      OpStore vs_TEXCOORD6 %206 
                                 Output f32* %209 = OpAccessChain %87 %29 %83 
                                         f32 %210 = OpLoad %209 
                                         f32 %211 = OpFNegate %210 
                                 Output f32* %212 = OpAccessChain %87 %29 %83 
                                                      OpStore %212 %211 
                                                      OpReturn
                                                      OpFunctionEnd
; SPIR-V
; Version: 1.0
; Generator: Khronos Glslang Reference Front End; 6
; Bound: 483
; Schema: 0
                                                      OpCapability Shader 
                                               %1 = OpExtInstImport "GLSL.std.450" 
                                                      OpMemoryModel Logical GLSL450 
                                                      OpEntryPoint Fragment %4 "main" %11 %57 %404 %448 %472 
                                                      OpExecutionMode %4 OriginUpperLeft 
                                                      OpName vs_TEXCOORD2 "vs_TEXCOORD2" 
                                                      OpName vs_TEXCOORD1 "vs_TEXCOORD1" 
                                                      OpName vs_TEXCOORD0 "vs_TEXCOORD0" 
                                                      OpName vs_TEXCOORD3 "vs_TEXCOORD3" 
                                                      OpDecorate vs_TEXCOORD2 Location 11 
                                                      OpDecorate %17 ArrayStride 17 
                                                      OpDecorate %19 ArrayStride 19 
                                                      OpMemberDecorate %20 0 Offset 20 
                                                      OpMemberDecorate %20 1 RelaxedPrecision 
                                                      OpMemberDecorate %20 1 Offset 20 
                                                      OpMemberDecorate %20 2 RelaxedPrecision 
                                                      OpMemberDecorate %20 2 Offset 20 
                                                      OpMemberDecorate %20 3 RelaxedPrecision 
                                                      OpMemberDecorate %20 3 Offset 20 
                                                      OpMemberDecorate %20 4 RelaxedPrecision 
                                                      OpMemberDecorate %20 4 Offset 20 
                                                      OpMemberDecorate %20 5 Offset 20 
                                                      OpMemberDecorate %20 6 RelaxedPrecision 
                                                      OpMemberDecorate %20 6 Offset 20 
                                                      OpMemberDecorate %20 7 Offset 20 
                                                      OpMemberDecorate %20 8 Offset 20 
                                                      OpMemberDecorate %20 9 RelaxedPrecision 
                                                      OpMemberDecorate %20 9 Offset 20 
                                                      OpMemberDecorate %20 10 RelaxedPrecision 
                                                      OpMemberDecorate %20 10 Offset 20 
                                                      OpMemberDecorate %20 11 RelaxedPrecision 
                                                      OpMemberDecorate %20 11 Offset 20 
                                                      OpMemberDecorate %20 12 RelaxedPrecision 
                                                      OpMemberDecorate %20 12 Offset 20 
                                                      OpMemberDecorate %20 13 RelaxedPrecision 
                                                      OpMemberDecorate %20 13 Offset 20 
                                                      OpMemberDecorate %20 14 RelaxedPrecision 
                                                      OpMemberDecorate %20 14 Offset 20 
                                                      OpMemberDecorate %20 15 RelaxedPrecision 
                                                      OpMemberDecorate %20 15 Offset 20 
                                                      OpMemberDecorate %20 16 RelaxedPrecision 
                                                      OpMemberDecorate %20 16 Offset 20 
                                                      OpMemberDecorate %20 17 RelaxedPrecision 
                                                      OpMemberDecorate %20 17 Offset 20 
                                                      OpDecorate %20 Block 
                                                      OpDecorate %22 DescriptorSet 22 
                                                      OpDecorate %22 Binding 22 
                                                      OpDecorate %36 RelaxedPrecision 
                                                      OpDecorate %44 RelaxedPrecision 
                                                      OpDecorate %45 RelaxedPrecision 
                                                      OpDecorate %47 RelaxedPrecision 
                                                      OpDecorate %48 RelaxedPrecision 
                                                      OpDecorate %49 RelaxedPrecision 
                                                      OpDecorate %50 RelaxedPrecision 
                                                      OpDecorate %51 RelaxedPrecision 
                                                      OpDecorate %52 RelaxedPrecision 
                                                      OpDecorate %53 RelaxedPrecision 
                                                      OpDecorate %54 RelaxedPrecision 
                                                      OpDecorate %55 RelaxedPrecision 
                                                      OpDecorate %56 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD1 Location 57 
                                                      OpDecorate %61 RelaxedPrecision 
                                                      OpDecorate %62 RelaxedPrecision 
                                                      OpDecorate %63 RelaxedPrecision 
                                                      OpDecorate %64 RelaxedPrecision 
                                                      OpDecorate %68 RelaxedPrecision 
                                                      OpDecorate %69 RelaxedPrecision 
                                                      OpDecorate %70 RelaxedPrecision 
                                                      OpDecorate %73 RelaxedPrecision 
                                                      OpDecorate %75 RelaxedPrecision 
                                                      OpDecorate %76 RelaxedPrecision 
                                                      OpDecorate %77 RelaxedPrecision 
                                                      OpDecorate %81 RelaxedPrecision 
                                                      OpDecorate %82 RelaxedPrecision 
                                                      OpDecorate %85 RelaxedPrecision 
                                                      OpDecorate %89 RelaxedPrecision 
                                                      OpDecorate %90 RelaxedPrecision 
                                                      OpDecorate %94 RelaxedPrecision 
                                                      OpDecorate %96 RelaxedPrecision 
                                                      OpDecorate %100 RelaxedPrecision 
                                                      OpDecorate %106 RelaxedPrecision 
                                                      OpDecorate %107 RelaxedPrecision 
                                                      OpDecorate %109 RelaxedPrecision 
                                                      OpDecorate %110 RelaxedPrecision 
                                                      OpDecorate %116 RelaxedPrecision 
                                                      OpDecorate %117 RelaxedPrecision 
                                                      OpDecorate %119 RelaxedPrecision 
                                                      OpDecorate %121 RelaxedPrecision 
                                                      OpDecorate %122 RelaxedPrecision 
                                                      OpDecorate %123 RelaxedPrecision 
                                                      OpDecorate %126 RelaxedPrecision 
                                                      OpDecorate %127 RelaxedPrecision 
                                                      OpDecorate %128 RelaxedPrecision 
                                                      OpDecorate %129 RelaxedPrecision 
                                                      OpDecorate %202 RelaxedPrecision 
                                                      OpDecorate %205 RelaxedPrecision 
                                                      OpDecorate %252 DescriptorSet 252 
                                                      OpDecorate %252 Binding 252 
                                                      OpDecorate %256 DescriptorSet 256 
                                                      OpDecorate %256 Binding 256 
                                                      OpDecorate %265 RelaxedPrecision 
                                                      OpDecorate %266 RelaxedPrecision 
                                                      OpDecorate %267 RelaxedPrecision 
                                                      OpDecorate %271 RelaxedPrecision 
                                                      OpDecorate %274 RelaxedPrecision 
                                                      OpDecorate %278 RelaxedPrecision 
                                                      OpDecorate %279 RelaxedPrecision 
                                                      OpDecorate %280 RelaxedPrecision 
                                                      OpDecorate %283 RelaxedPrecision 
                                                      OpDecorate %286 RelaxedPrecision 
                                                      OpDecorate %291 RelaxedPrecision 
                                                      OpDecorate %296 RelaxedPrecision 
                                                      OpDecorate %297 RelaxedPrecision 
                                                      OpDecorate %300 RelaxedPrecision 
                                                      OpDecorate %301 RelaxedPrecision 
                                                      OpDecorate %302 RelaxedPrecision 
                                                      OpDecorate %305 RelaxedPrecision 
                                                      OpDecorate %309 RelaxedPrecision 
                                                      OpDecorate %310 RelaxedPrecision 
                                                      OpDecorate %311 RelaxedPrecision 
                                                      OpDecorate %314 RelaxedPrecision 
                                                      OpDecorate %315 RelaxedPrecision 
                                                      OpDecorate %316 RelaxedPrecision 
                                                      OpDecorate %317 RelaxedPrecision 
                                                      OpDecorate %318 RelaxedPrecision 
                                                      OpDecorate %320 RelaxedPrecision 
                                                      OpDecorate %321 RelaxedPrecision 
                                                      OpDecorate %324 RelaxedPrecision 
                                                      OpDecorate %325 RelaxedPrecision 
                                                      OpDecorate %327 RelaxedPrecision 
                                                      OpDecorate %328 RelaxedPrecision 
                                                      OpDecorate %329 RelaxedPrecision 
                                                      OpDecorate %330 RelaxedPrecision 
                                                      OpDecorate %331 RelaxedPrecision 
                                                      OpDecorate %332 RelaxedPrecision 
                                                      OpDecorate %333 RelaxedPrecision 
                                                      OpDecorate %334 RelaxedPrecision 
                                                      OpDecorate %335 RelaxedPrecision 
                                                      OpDecorate %337 RelaxedPrecision 
                                                      OpDecorate %338 RelaxedPrecision 
                                                      OpDecorate %341 RelaxedPrecision 
                                                      OpDecorate %342 RelaxedPrecision 
                                                      OpDecorate %345 RelaxedPrecision 
                                                      OpDecorate %346 RelaxedPrecision 
                                                      OpDecorate %347 RelaxedPrecision 
                                                      OpDecorate %349 RelaxedPrecision 
                                                      OpDecorate %351 RelaxedPrecision 
                                                      OpDecorate %352 RelaxedPrecision 
                                                      OpDecorate %355 RelaxedPrecision 
                                                      OpDecorate %356 RelaxedPrecision 
                                                      OpDecorate %357 RelaxedPrecision 
                                                      OpDecorate %360 RelaxedPrecision 
                                                      OpDecorate %362 RelaxedPrecision 
                                                      OpDecorate %363 RelaxedPrecision 
                                                      OpDecorate %367 RelaxedPrecision 
                                                      OpDecorate %368 RelaxedPrecision 
                                                      OpDecorate %369 RelaxedPrecision 
                                                      OpDecorate %372 RelaxedPrecision 
                                                      OpDecorate %373 RelaxedPrecision 
                                                      OpDecorate %374 RelaxedPrecision 
                                                      OpDecorate %376 RelaxedPrecision 
                                                      OpDecorate %377 RelaxedPrecision 
                                                      OpDecorate %378 RelaxedPrecision 
                                                      OpDecorate %379 RelaxedPrecision 
                                                      OpDecorate %381 RelaxedPrecision 
                                                      OpDecorate %382 RelaxedPrecision 
                                                      OpDecorate %383 RelaxedPrecision 
                                                      OpDecorate %384 RelaxedPrecision 
                                                      OpDecorate %385 RelaxedPrecision 
                                                      OpDecorate %387 RelaxedPrecision 
                                                      OpDecorate %388 RelaxedPrecision 
                                                      OpDecorate %389 RelaxedPrecision 
                                                      OpDecorate %390 RelaxedPrecision 
                                                      OpDecorate %391 RelaxedPrecision 
                                                      OpDecorate %392 RelaxedPrecision 
                                                      OpDecorate %393 RelaxedPrecision 
                                                      OpDecorate %394 RelaxedPrecision 
                                                      OpDecorate %395 RelaxedPrecision 
                                                      OpDecorate %396 RelaxedPrecision 
                                                      OpDecorate %397 RelaxedPrecision 
                                                      OpDecorate %397 DescriptorSet 397 
                                                      OpDecorate %397 Binding 397 
                                                      OpDecorate %398 RelaxedPrecision 
                                                      OpDecorate %399 RelaxedPrecision 
                                                      OpDecorate %399 DescriptorSet 399 
                                                      OpDecorate %399 Binding 399 
                                                      OpDecorate %400 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD0 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD0 Location 404 
                                                      OpDecorate %405 RelaxedPrecision 
                                                      OpDecorate %406 RelaxedPrecision 
                                                      OpDecorate %407 RelaxedPrecision 
                                                      OpDecorate %408 RelaxedPrecision 
                                                      OpDecorate %411 RelaxedPrecision 
                                                      OpDecorate %412 RelaxedPrecision 
                                                      OpDecorate %413 RelaxedPrecision 
                                                      OpDecorate %414 RelaxedPrecision 
                                                      OpDecorate %415 RelaxedPrecision 
                                                      OpDecorate %417 RelaxedPrecision 
                                                      OpDecorate %418 RelaxedPrecision 
                                                      OpDecorate %419 RelaxedPrecision 
                                                      OpDecorate %420 RelaxedPrecision 
                                                      OpDecorate %421 RelaxedPrecision 
                                                      OpDecorate %422 RelaxedPrecision 
                                                      OpDecorate %432 RelaxedPrecision 
                                                      OpDecorate %437 RelaxedPrecision 
                                                      OpDecorate %443 RelaxedPrecision 
                                                      OpDecorate %447 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD3 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD3 Location 448 
                                                      OpDecorate %449 RelaxedPrecision 
                                                      OpDecorate %450 RelaxedPrecision 
                                                      OpDecorate %451 RelaxedPrecision 
                                                      OpDecorate %453 RelaxedPrecision 
                                                      OpDecorate %454 RelaxedPrecision 
                                                      OpDecorate %455 RelaxedPrecision 
                                                      OpDecorate %472 RelaxedPrecision 
                                                      OpDecorate %472 Location 472 
                                                      OpDecorate %473 RelaxedPrecision 
                                               %2 = OpTypeVoid 
                                               %3 = OpTypeFunction %2 
                                               %6 = OpTypeFloat 32 
                                               %7 = OpTypeVector %6 3 
                                               %8 = OpTypePointer Private %7 
                                Private f32_3* %9 = OpVariable Private 
                                              %10 = OpTypePointer Input %7 
                        Input f32_3* vs_TEXCOORD2 = OpVariable Input 
                                              %14 = OpTypeVector %6 4 
                                              %15 = OpTypeInt 32 0 
                                          u32 %16 = OpConstant 16 
                                              %17 = OpTypeArray %14 %16 
                                          u32 %18 = OpConstant 4 
                                              %19 = OpTypeArray %14 %18 
                                              %20 = OpTypeStruct %7 %14 %14 %14 %14 %17 %14 %14 %19 %14 %14 %14 %6 %14 %14 %6 %6 %6 
                                              %21 = OpTypePointer Uniform %20 
Uniform struct {f32_3; f32_4; f32_4; f32_4; f32_4; f32_4[16]; f32_4; f32_4; f32_4[4]; f32_4; f32_4; f32_4; f32; f32_4; f32_4; f32; f32; f32;}* %22 = OpVariable Uniform 
                                              %23 = OpTypeInt 32 1 
                                          i32 %24 = OpConstant 0 
                                              %25 = OpTypePointer Uniform %7 
                                              %29 = OpTypePointer Private %6 
                                 Private f32* %30 = OpVariable Private 
                               Private f32_3* %36 = OpVariable Private 
                                          i32 %41 = OpConstant 1 
                                              %42 = OpTypePointer Uniform %14 
                                 Private f32* %47 = OpVariable Private 
                        Input f32_3* vs_TEXCOORD1 = OpVariable Input 
                               Private f32_3* %63 = OpVariable Private 
                                          u32 %71 = OpConstant 0 
                                          u32 %78 = OpConstant 1 
                                              %80 = OpTypeVector %6 2 
                                          f32 %83 = OpConstant 3.674022E-40 
                                        f32_2 %84 = OpConstantComposite %83 %83 
                                          i32 %91 = OpConstant 12 
                                              %92 = OpTypePointer Uniform %6 
                                          f32 %95 = OpConstant 3.674022E-40 
                                         i32 %104 = OpConstant 17 
                                         f32 %108 = OpConstant 3.674022E-40 
                                         f32 %113 = OpConstant 3.674022E-40 
                                Private f32* %119 = OpVariable Private 
                              Private f32_3* %124 = OpVariable Private 
                                         f32 %131 = OpConstant 3.674022E-40 
                                         f32 %143 = OpConstant 3.674022E-40 
                                         f32 %145 = OpConstant 3.674022E-40 
                                         i32 %155 = OpConstant 8 
                                         u32 %156 = OpConstant 2 
                                         i32 %163 = OpConstant 2 
                                         i32 %172 = OpConstant 7 
                                Private f32* %178 = OpVariable Private 
                                         u32 %189 = OpConstant 3 
                                         i32 %200 = OpConstant 6 
                                         i32 %214 = OpConstant 5 
                                         i32 %236 = OpConstant 3 
                                             %241 = OpTypePointer Function %7 
                                             %250 = OpTypeImage %6 Dim2D 0 0 0 1 Unknown 
                                             %251 = OpTypePointer UniformConstant %250 
        UniformConstant read_only Texture2D* %252 = OpVariable UniformConstant 
                                             %254 = OpTypeSampler 
                                             %255 = OpTypePointer UniformConstant %254 
                    UniformConstant sampler* %256 = OpVariable UniformConstant 
                                             %258 = OpTypeImage %6 Dim2D 1 0 0 1 Unknown 
                                             %259 = OpTypeSampledImage %258 
                                         i32 %294 = OpConstant 9 
                                         i32 %298 = OpConstant 10 
                                         i32 %307 = OpConstant 16 
                                         i32 %312 = OpConstant 15 
                              Private f32_3* %316 = OpVariable Private 
                                         i32 %365 = OpConstant 13 
                                         i32 %370 = OpConstant 14 
                              Private f32_3* %396 = OpVariable Private 
        UniformConstant read_only Texture2D* %397 = OpVariable UniformConstant 
                    UniformConstant sampler* %399 = OpVariable UniformConstant 
                                             %401 = OpTypeSampledImage %250 
                                             %403 = OpTypePointer Input %80 
                        Input f32_2* vs_TEXCOORD0 = OpVariable Input 
                                         i32 %409 = OpConstant 11 
                              Private f32_3* %414 = OpVariable Private 
                                             %425 = OpTypePointer Private %14 
                              Private f32_4* %426 = OpVariable Private 
                                         i32 %441 = OpConstant 4 
                        Input f32_3* vs_TEXCOORD3 = OpVariable Input 
                                       f32_3 %452 = OpConstantComposite %83 %83 %83 
                                         f32 %457 = OpConstant 3.674022E-40 
                                       f32_3 %458 = OpConstantComposite %457 %457 %457 
                                         f32 %463 = OpConstant 3.674022E-40 
                                       f32_3 %464 = OpConstantComposite %463 %463 %463 
                                         f32 %466 = OpConstant 3.674022E-40 
                                       f32_3 %467 = OpConstantComposite %466 %466 %466 
                                             %471 = OpTypePointer Output %14 
                               Output f32_4* %472 = OpVariable Output 
                                             %480 = OpTypePointer Output %6 
                                          void %4 = OpFunction None %3 
                                               %5 = OpLabel 
                             Function f32_3* %242 = OpVariable Function 
                                        f32_3 %12 = OpLoad vs_TEXCOORD2 
                                        f32_3 %13 = OpFNegate %12 
                               Uniform f32_3* %26 = OpAccessChain %22 %24 
                                        f32_3 %27 = OpLoad %26 
                                        f32_3 %28 = OpFAdd %13 %27 
                                                      OpStore %9 %28 
                                        f32_3 %31 = OpLoad %9 
                                        f32_3 %32 = OpLoad %9 
                                          f32 %33 = OpDot %31 %32 
                                                      OpStore %30 %33 
                                          f32 %34 = OpLoad %30 
                                          f32 %35 = OpExtInst %1 32 %34 
                                                      OpStore %30 %35 
                                        f32_3 %37 = OpLoad %9 
                                          f32 %38 = OpLoad %30 
                                        f32_3 %39 = OpCompositeConstruct %38 %38 %38 
                                        f32_3 %40 = OpFMul %37 %39 
                               Uniform f32_4* %43 = OpAccessChain %22 %41 
                                        f32_4 %44 = OpLoad %43 
                                        f32_3 %45 = OpVectorShuffle %44 %44 0 1 2 
                                        f32_3 %46 = OpFAdd %40 %45 
                                                      OpStore %36 %46 
                                        f32_3 %48 = OpLoad %36 
                                        f32_3 %49 = OpLoad %36 
                                          f32 %50 = OpDot %48 %49 
                                                      OpStore %47 %50 
                                          f32 %51 = OpLoad %47 
                                          f32 %52 = OpExtInst %1 32 %51 
                                                      OpStore %47 %52 
                                          f32 %53 = OpLoad %47 
                                        f32_3 %54 = OpCompositeConstruct %53 %53 %53 
                                        f32_3 %55 = OpLoad %36 
                                        f32_3 %56 = OpFMul %54 %55 
                                                      OpStore %36 %56 
                                        f32_3 %58 = OpLoad vs_TEXCOORD1 
                                        f32_3 %59 = OpLoad vs_TEXCOORD1 
                                          f32 %60 = OpDot %58 %59 
                                                      OpStore %47 %60 
                                          f32 %61 = OpLoad %47 
                                          f32 %62 = OpExtInst %1 32 %61 
                                                      OpStore %47 %62 
                                          f32 %64 = OpLoad %47 
                                        f32_3 %65 = OpCompositeConstruct %64 %64 %64 
                                        f32_3 %66 = OpLoad vs_TEXCOORD1 
                                        f32_3 %67 = OpFMul %65 %66 
                                                      OpStore %63 %67 
                                        f32_3 %68 = OpLoad %63 
                                        f32_3 %69 = OpLoad %36 
                                          f32 %70 = OpDot %68 %69 
                                 Private f32* %72 = OpAccessChain %36 %71 
                                                      OpStore %72 %70 
                                        f32_3 %73 = OpLoad %63 
                               Uniform f32_4* %74 = OpAccessChain %22 %41 
                                        f32_4 %75 = OpLoad %74 
                                        f32_3 %76 = OpVectorShuffle %75 %75 0 1 2 
                                          f32 %77 = OpDot %73 %76 
                                 Private f32* %79 = OpAccessChain %36 %78 
                                                      OpStore %79 %77 
                                        f32_3 %81 = OpLoad %36 
                                        f32_2 %82 = OpVectorShuffle %81 %81 0 1 
                                        f32_2 %85 = OpExtInst %1 40 %82 %84 
                                        f32_3 %86 = OpLoad %36 
                                        f32_3 %87 = OpVectorShuffle %86 %85 3 4 2 
                                                      OpStore %36 %87 
                                 Private f32* %88 = OpAccessChain %36 %71 
                                          f32 %89 = OpLoad %88 
                                          f32 %90 = OpExtInst %1 30 %89 
                                                      OpStore %30 %90 
                                 Uniform f32* %93 = OpAccessChain %22 %91 
                                          f32 %94 = OpLoad %93 
                                          f32 %96 = OpFMul %94 %95 
                                 Private f32* %97 = OpAccessChain %36 %71 
                                                      OpStore %97 %96 
                                          f32 %98 = OpLoad %30 
                                 Private f32* %99 = OpAccessChain %36 %71 
                                         f32 %100 = OpLoad %99 
                                         f32 %101 = OpFMul %98 %100 
                                                      OpStore %30 %101 
                                         f32 %102 = OpLoad %30 
                                         f32 %103 = OpExtInst %1 29 %102 
                                                      OpStore %30 %103 
                                Uniform f32* %105 = OpAccessChain %22 %104 
                                         f32 %106 = OpLoad %105 
                                         f32 %107 = OpFNegate %106 
                                         f32 %109 = OpFMul %107 %108 
                                         f32 %110 = OpFAdd %109 %108 
                                Private f32* %111 = OpAccessChain %36 %71 
                                                      OpStore %111 %110 
                                         f32 %112 = OpLoad %30 
                                         f32 %114 = OpFMul %112 %113 
                                Private f32* %115 = OpAccessChain %36 %71 
                                         f32 %116 = OpLoad %115 
                                         f32 %117 = OpFNegate %116 
                                         f32 %118 = OpFAdd %114 %117 
                                                      OpStore %30 %118 
                                Uniform f32* %120 = OpAccessChain %22 %104 
                                         f32 %121 = OpLoad %120 
                                         f32 %122 = OpFMul %121 %108 
                                         f32 %123 = OpFAdd %122 %108 
                                                      OpStore %119 %123 
                                Private f32* %125 = OpAccessChain %36 %71 
                                         f32 %126 = OpLoad %125 
                                         f32 %127 = OpFNegate %126 
                                         f32 %128 = OpLoad %119 
                                         f32 %129 = OpFAdd %127 %128 
                                Private f32* %130 = OpAccessChain %124 %71 
                                                      OpStore %130 %129 
                                Private f32* %132 = OpAccessChain %124 %71 
                                         f32 %133 = OpLoad %132 
                                         f32 %134 = OpFDiv %131 %133 
                                Private f32* %135 = OpAccessChain %124 %71 
                                                      OpStore %135 %134 
                                         f32 %136 = OpLoad %30 
                                Private f32* %137 = OpAccessChain %124 %71 
                                         f32 %138 = OpLoad %137 
                                         f32 %139 = OpFMul %136 %138 
                                                      OpStore %30 %139 
                                         f32 %140 = OpLoad %30 
                                         f32 %141 = OpExtInst %1 43 %140 %83 %131 
                                                      OpStore %30 %141 
                                         f32 %142 = OpLoad %30 
                                         f32 %144 = OpFMul %142 %143 
                                         f32 %146 = OpFAdd %144 %145 
                                Private f32* %147 = OpAccessChain %124 %71 
                                                      OpStore %147 %146 
                                         f32 %148 = OpLoad %30 
                                         f32 %149 = OpLoad %30 
                                         f32 %150 = OpFMul %148 %149 
                                                      OpStore %30 %150 
                                         f32 %151 = OpLoad %30 
                                Private f32* %152 = OpAccessChain %124 %71 
                                         f32 %153 = OpLoad %152 
                                         f32 %154 = OpFMul %151 %153 
                                                      OpStore %30 %154 
                                Uniform f32* %157 = OpAccessChain %22 %155 %24 %156 
                                         f32 %158 = OpLoad %157 
                                Private f32* %159 = OpAccessChain %124 %71 
                                                      OpStore %159 %158 
                                Uniform f32* %160 = OpAccessChain %22 %155 %41 %156 
                                         f32 %161 = OpLoad %160 
                                Private f32* %162 = OpAccessChain %124 %78 
                                                      OpStore %162 %161 
                                Uniform f32* %164 = OpAccessChain %22 %155 %163 %156 
                                         f32 %165 = OpLoad %164 
                                Private f32* %166 = OpAccessChain %124 %156 
                                                      OpStore %166 %165 
                                       f32_3 %167 = OpLoad %9 
                                       f32_3 %168 = OpLoad %124 
                                         f32 %169 = OpDot %167 %168 
                                Private f32* %170 = OpAccessChain %9 %71 
                                                      OpStore %170 %169 
                                       f32_3 %171 = OpLoad vs_TEXCOORD2 
                              Uniform f32_4* %173 = OpAccessChain %22 %172 
                                       f32_4 %174 = OpLoad %173 
                                       f32_3 %175 = OpVectorShuffle %174 %174 0 1 2 
                                       f32_3 %176 = OpFNegate %175 
                                       f32_3 %177 = OpFAdd %171 %176 
                                                      OpStore %124 %177 
                                       f32_3 %179 = OpLoad %124 
                                       f32_3 %180 = OpLoad %124 
                                         f32 %181 = OpDot %179 %180 
                                                      OpStore %178 %181 
                                         f32 %182 = OpLoad %178 
                                         f32 %183 = OpExtInst %1 31 %182 
                                                      OpStore %178 %183 
                                Private f32* %184 = OpAccessChain %9 %71 
                                         f32 %185 = OpLoad %184 
                                         f32 %186 = OpFNegate %185 
                                         f32 %187 = OpLoad %178 
                                         f32 %188 = OpFAdd %186 %187 
                                                      OpStore %178 %188 
                                Uniform f32* %190 = OpAccessChain %22 %172 %189 
                                         f32 %191 = OpLoad %190 
                                         f32 %192 = OpLoad %178 
                                         f32 %193 = OpFMul %191 %192 
                                Private f32* %194 = OpAccessChain %9 %71 
                                         f32 %195 = OpLoad %194 
                                         f32 %196 = OpFAdd %193 %195 
                                Private f32* %197 = OpAccessChain %9 %71 
                                                      OpStore %197 %196 
                                Private f32* %198 = OpAccessChain %9 %71 
                                         f32 %199 = OpLoad %198 
                                Uniform f32* %201 = OpAccessChain %22 %200 %156 
                                         f32 %202 = OpLoad %201 
                                         f32 %203 = OpFMul %199 %202 
                                Uniform f32* %204 = OpAccessChain %22 %200 %189 
                                         f32 %205 = OpLoad %204 
                                         f32 %206 = OpFAdd %203 %205 
                                Private f32* %207 = OpAccessChain %9 %71 
                                                      OpStore %207 %206 
                                Private f32* %208 = OpAccessChain %9 %71 
                                         f32 %209 = OpLoad %208 
                                         f32 %210 = OpExtInst %1 43 %209 %83 %131 
                                Private f32* %211 = OpAccessChain %9 %71 
                                                      OpStore %211 %210 
                                       f32_3 %212 = OpLoad vs_TEXCOORD2 
                                       f32_3 %213 = OpVectorShuffle %212 %212 1 1 1 
                              Uniform f32_4* %215 = OpAccessChain %22 %214 %41 
                                       f32_4 %216 = OpLoad %215 
                                       f32_3 %217 = OpVectorShuffle %216 %216 0 1 2 
                                       f32_3 %218 = OpFMul %213 %217 
                                                      OpStore %124 %218 
                              Uniform f32_4* %219 = OpAccessChain %22 %214 %24 
                                       f32_4 %220 = OpLoad %219 
                                       f32_3 %221 = OpVectorShuffle %220 %220 0 1 2 
                                       f32_3 %222 = OpLoad vs_TEXCOORD2 
                                       f32_3 %223 = OpVectorShuffle %222 %222 0 0 0 
                                       f32_3 %224 = OpFMul %221 %223 
                                       f32_3 %225 = OpLoad %124 
                                       f32_3 %226 = OpFAdd %224 %225 
                                                      OpStore %124 %226 
                              Uniform f32_4* %227 = OpAccessChain %22 %214 %163 
                                       f32_4 %228 = OpLoad %227 
                                       f32_3 %229 = OpVectorShuffle %228 %228 0 1 2 
                                       f32_3 %230 = OpLoad vs_TEXCOORD2 
                                       f32_3 %231 = OpVectorShuffle %230 %230 2 2 2 
                                       f32_3 %232 = OpFMul %229 %231 
                                       f32_3 %233 = OpLoad %124 
                                       f32_3 %234 = OpFAdd %232 %233 
                                                      OpStore %124 %234 
                                       f32_3 %235 = OpLoad %124 
                              Uniform f32_4* %237 = OpAccessChain %22 %214 %236 
                                       f32_4 %238 = OpLoad %237 
                                       f32_3 %239 = OpVectorShuffle %238 %238 0 1 2 
                                       f32_3 %240 = OpFAdd %235 %239 
                                                      OpStore %124 %240 
                                       f32_3 %243 = OpLoad %124 
                                       f32_2 %244 = OpVectorShuffle %243 %243 0 1 
                                Private f32* %245 = OpAccessChain %124 %156 
                                         f32 %246 = OpLoad %245 
                                         f32 %247 = OpCompositeExtract %244 0 
                                         f32 %248 = OpCompositeExtract %244 1 
                                       f32_3 %249 = OpCompositeConstruct %247 %248 %246 
                                                      OpStore %242 %249 
                         read_only Texture2D %253 = OpLoad %252 
                                     sampler %257 = OpLoad %256 
                  read_only Texture2DSampled %260 = OpSampledImage %253 %257 
                                       f32_3 %261 = OpLoad %242 
                                         f32 %262 = OpCompositeExtract %261 2 
                                         f32 %263 = OpImageSampleDrefExplicitLod %260 %261 %262 Lod %6 
                                                      OpStore %178 %263 
                                Uniform f32* %264 = OpAccessChain %22 %200 %71 
                                         f32 %265 = OpLoad %264 
                                         f32 %266 = OpFNegate %265 
                                         f32 %267 = OpFAdd %266 %131 
                                Private f32* %268 = OpAccessChain %36 %71 
                                                      OpStore %268 %267 
                                         f32 %269 = OpLoad %178 
                                Private f32* %270 = OpAccessChain %36 %71 
                                         f32 %271 = OpLoad %270 
                                         f32 %272 = OpFMul %269 %271 
                                Uniform f32* %273 = OpAccessChain %22 %200 %71 
                                         f32 %274 = OpLoad %273 
                                         f32 %275 = OpFAdd %272 %274 
                                Private f32* %276 = OpAccessChain %36 %71 
                                                      OpStore %276 %275 
                                Private f32* %277 = OpAccessChain %36 %71 
                                         f32 %278 = OpLoad %277 
                                         f32 %279 = OpFNegate %278 
                                         f32 %280 = OpFAdd %279 %131 
                                                      OpStore %119 %280 
                                Private f32* %281 = OpAccessChain %9 %71 
                                         f32 %282 = OpLoad %281 
                                         f32 %283 = OpLoad %119 
                                         f32 %284 = OpFMul %282 %283 
                                Private f32* %285 = OpAccessChain %36 %71 
                                         f32 %286 = OpLoad %285 
                                         f32 %287 = OpFAdd %284 %286 
                                Private f32* %288 = OpAccessChain %36 %71 
                                                      OpStore %288 %287 
                                         f32 %289 = OpLoad %30 
                                Private f32* %290 = OpAccessChain %36 %71 
                                         f32 %291 = OpLoad %290 
                                         f32 %292 = OpFMul %289 %291 
                                Private f32* %293 = OpAccessChain %9 %71 
                                                      OpStore %293 %292 
                              Uniform f32_4* %295 = OpAccessChain %22 %294 
                                       f32_4 %296 = OpLoad %295 
                                       f32_3 %297 = OpVectorShuffle %296 %296 0 1 2 
                              Uniform f32_4* %299 = OpAccessChain %22 %298 
                                       f32_4 %300 = OpLoad %299 
                                       f32_3 %301 = OpVectorShuffle %300 %300 0 1 2 
                                       f32_3 %302 = OpFMul %297 %301 
                                                      OpStore %63 %302 
                                       f32_3 %303 = OpLoad %9 
                                       f32_3 %304 = OpVectorShuffle %303 %303 0 0 0 
                                       f32_3 %305 = OpLoad %63 
                                       f32_3 %306 = OpFMul %304 %305 
                                                      OpStore %9 %306 
                                Uniform f32* %308 = OpAccessChain %22 %307 
                                         f32 %309 = OpLoad %308 
                                         f32 %310 = OpFNegate %309 
                                         f32 %311 = OpFMul %310 %108 
                                Uniform f32* %313 = OpAccessChain %22 %312 
                                         f32 %314 = OpLoad %313 
                                         f32 %315 = OpFAdd %311 %314 
                                                      OpStore %119 %315 
                                         f32 %317 = OpLoad %119 
                                         f32 %318 = OpFNegate %317 
                                Private f32* %319 = OpAccessChain %36 %78 
                                         f32 %320 = OpLoad %319 
                                         f32 %321 = OpFAdd %318 %320 
                                Private f32* %322 = OpAccessChain %316 %71 
                                                      OpStore %322 %321 
                                Uniform f32* %323 = OpAccessChain %22 %307 
                                         f32 %324 = OpLoad %323 
                                         f32 %325 = OpFMul %324 %108 
                                Uniform f32* %326 = OpAccessChain %22 %312 
                                         f32 %327 = OpLoad %326 
                                         f32 %328 = OpFAdd %325 %327 
                                                      OpStore %47 %328 
                                         f32 %329 = OpLoad %119 
                                         f32 %330 = OpFNegate %329 
                                         f32 %331 = OpLoad %47 
                                         f32 %332 = OpFAdd %330 %331 
                                                      OpStore %119 %332 
                                         f32 %333 = OpLoad %119 
                                         f32 %334 = OpFDiv %131 %333 
                                                      OpStore %119 %334 
                                         f32 %335 = OpLoad %119 
                                Private f32* %336 = OpAccessChain %316 %71 
                                         f32 %337 = OpLoad %336 
                                         f32 %338 = OpFMul %335 %337 
                                Private f32* %339 = OpAccessChain %316 %71 
                                                      OpStore %339 %338 
                                Private f32* %340 = OpAccessChain %316 %71 
                                         f32 %341 = OpLoad %340 
                                         f32 %342 = OpExtInst %1 43 %341 %83 %131 
                                Private f32* %343 = OpAccessChain %316 %71 
                                                      OpStore %343 %342 
                                Private f32* %344 = OpAccessChain %316 %71 
                                         f32 %345 = OpLoad %344 
                                         f32 %346 = OpFMul %345 %143 
                                         f32 %347 = OpFAdd %346 %145 
                                                      OpStore %119 %347 
                                Private f32* %348 = OpAccessChain %316 %71 
                                         f32 %349 = OpLoad %348 
                                Private f32* %350 = OpAccessChain %316 %71 
                                         f32 %351 = OpLoad %350 
                                         f32 %352 = OpFMul %349 %351 
                                Private f32* %353 = OpAccessChain %316 %71 
                                                      OpStore %353 %352 
                                Private f32* %354 = OpAccessChain %316 %71 
                                         f32 %355 = OpLoad %354 
                                         f32 %356 = OpLoad %119 
                                         f32 %357 = OpFMul %355 %356 
                                Private f32* %358 = OpAccessChain %316 %71 
                                                      OpStore %358 %357 
                                Private f32* %359 = OpAccessChain %36 %71 
                                         f32 %360 = OpLoad %359 
                                Private f32* %361 = OpAccessChain %316 %71 
                                         f32 %362 = OpLoad %361 
                                         f32 %363 = OpFMul %360 %362 
                                Private f32* %364 = OpAccessChain %36 %71 
                                                      OpStore %364 %363 
                              Uniform f32_4* %366 = OpAccessChain %22 %365 
                                       f32_4 %367 = OpLoad %366 
                                       f32_3 %368 = OpVectorShuffle %367 %367 0 1 2 
                                       f32_3 %369 = OpFNegate %368 
                              Uniform f32_4* %371 = OpAccessChain %22 %370 
                                       f32_4 %372 = OpLoad %371 
                                       f32_3 %373 = OpVectorShuffle %372 %372 0 1 2 
                                       f32_3 %374 = OpFAdd %369 %373 
                                                      OpStore %316 %374 
                              Uniform f32_4* %375 = OpAccessChain %22 %370 
                                       f32_4 %376 = OpLoad %375 
                                       f32_3 %377 = OpVectorShuffle %376 %376 3 3 3 
                                       f32_3 %378 = OpLoad %316 
                                       f32_3 %379 = OpFMul %377 %378 
                              Uniform f32_4* %380 = OpAccessChain %22 %365 
                                       f32_4 %381 = OpLoad %380 
                                       f32_3 %382 = OpVectorShuffle %381 %381 0 1 2 
                                       f32_3 %383 = OpFAdd %379 %382 
                                                      OpStore %316 %383 
                                       f32_3 %384 = OpLoad %316 
                                       f32_3 %385 = OpFNegate %384 
                              Uniform f32_4* %386 = OpAccessChain %22 %365 
                                       f32_4 %387 = OpLoad %386 
                                       f32_3 %388 = OpVectorShuffle %387 %387 0 1 2 
                                       f32_3 %389 = OpFAdd %385 %388 
                                                      OpStore %63 %389 
                                       f32_3 %390 = OpLoad %36 
                                       f32_3 %391 = OpVectorShuffle %390 %390 0 0 0 
                                       f32_3 %392 = OpLoad %63 
                                       f32_3 %393 = OpFMul %391 %392 
                                       f32_3 %394 = OpLoad %316 
                                       f32_3 %395 = OpFAdd %393 %394 
                                                      OpStore %36 %395 
                         read_only Texture2D %398 = OpLoad %397 
                                     sampler %400 = OpLoad %399 
                  read_only Texture2DSampled %402 = OpSampledImage %398 %400 
                                       f32_2 %405 = OpLoad vs_TEXCOORD0 
                                       f32_4 %406 = OpImageSampleImplicitLod %402 %405 
                                       f32_3 %407 = OpVectorShuffle %406 %406 0 1 2 
                                                      OpStore %396 %407 
                                       f32_3 %408 = OpLoad %396 
                              Uniform f32_4* %410 = OpAccessChain %22 %409 
                                       f32_4 %411 = OpLoad %410 
                                       f32_3 %412 = OpVectorShuffle %411 %411 0 1 2 
                                       f32_3 %413 = OpFMul %408 %412 
                                                      OpStore %63 %413 
                                       f32_3 %415 = OpLoad %63 
                              Uniform f32_4* %416 = OpAccessChain %22 %294 
                                       f32_4 %417 = OpLoad %416 
                                       f32_3 %418 = OpVectorShuffle %417 %417 0 1 2 
                                       f32_3 %419 = OpFMul %415 %418 
                                                      OpStore %414 %419 
                                       f32_3 %420 = OpLoad %414 
                                       f32_3 %421 = OpLoad %36 
                                       f32_3 %422 = OpFMul %420 %421 
                                       f32_3 %423 = OpLoad %9 
                                       f32_3 %424 = OpFAdd %422 %423 
                                                      OpStore %9 %424 
                                       f32_3 %427 = OpLoad vs_TEXCOORD1 
                                       f32_4 %428 = OpLoad %426 
                                       f32_4 %429 = OpVectorShuffle %428 %427 4 5 6 3 
                                                      OpStore %426 %429 
                                Private f32* %430 = OpAccessChain %426 %189 
                                                      OpStore %430 %131 
                              Uniform f32_4* %431 = OpAccessChain %22 %163 
                                       f32_4 %432 = OpLoad %431 
                                       f32_4 %433 = OpLoad %426 
                                         f32 %434 = OpDot %432 %433 
                                Private f32* %435 = OpAccessChain %414 %71 
                                                      OpStore %435 %434 
                              Uniform f32_4* %436 = OpAccessChain %22 %236 
                                       f32_4 %437 = OpLoad %436 
                                       f32_4 %438 = OpLoad %426 
                                         f32 %439 = OpDot %437 %438 
                                Private f32* %440 = OpAccessChain %414 %78 
                                                      OpStore %440 %439 
                              Uniform f32_4* %442 = OpAccessChain %22 %441 
                                       f32_4 %443 = OpLoad %442 
                                       f32_4 %444 = OpLoad %426 
                                         f32 %445 = OpDot %443 %444 
                                Private f32* %446 = OpAccessChain %414 %156 
                                                      OpStore %446 %445 
                                       f32_3 %447 = OpLoad %414 
                                       f32_3 %449 = OpLoad vs_TEXCOORD3 
                                       f32_3 %450 = OpFAdd %447 %449 
                                                      OpStore %414 %450 
                                       f32_3 %451 = OpLoad %414 
                                       f32_3 %453 = OpExtInst %1 40 %451 %452 
                                                      OpStore %414 %453 
                                       f32_3 %454 = OpLoad %414 
                                       f32_3 %455 = OpExtInst %1 30 %454 
                                                      OpStore %124 %455 
                                       f32_3 %456 = OpLoad %124 
                                       f32_3 %459 = OpFMul %456 %458 
                                                      OpStore %124 %459 
                                       f32_3 %460 = OpLoad %124 
                                       f32_3 %461 = OpExtInst %1 29 %460 
                                                      OpStore %124 %461 
                                       f32_3 %462 = OpLoad %124 
                                       f32_3 %465 = OpFMul %462 %464 
                                       f32_3 %468 = OpFAdd %465 %467 
                                                      OpStore %124 %468 
                                       f32_3 %469 = OpLoad %124 
                                       f32_3 %470 = OpExtInst %1 40 %469 %452 
                                                      OpStore %124 %470 
                                       f32_3 %473 = OpLoad %63 
                                       f32_3 %474 = OpLoad %124 
                                       f32_3 %475 = OpFMul %473 %474 
                                       f32_3 %476 = OpLoad %9 
                                       f32_3 %477 = OpFAdd %475 %476 
                                       f32_4 %478 = OpLoad %472 
                                       f32_4 %479 = OpVectorShuffle %478 %477 4 5 6 3 
                                                      OpStore %472 %479 
                                 Output f32* %481 = OpAccessChain %472 %189 
                                                      OpStore %481 %131 
                                                      OpReturn
                                                      OpFunctionEnd
"
}
SubProgram "vulkan hw_tier01 " {
Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "SHADOWS_SCREEN" }
"; SPIR-V
; Version: 1.0
; Generator: Khronos Glslang Reference Front End; 6
; Bound: 214
; Schema: 0
                                                      OpCapability Shader 
                                               %1 = OpExtInstImport "GLSL.std.450" 
                                                      OpMemoryModel Logical GLSL450 
                                                      OpEntryPoint Vertex %4 "main" %11 %53 %87 %97 %113 %117 %155 %195 %204 %207 
                                                      OpName vs_TEXCOORD2 "vs_TEXCOORD2" 
                                                      OpName vs_TEXCOORD0 "vs_TEXCOORD0" 
                                                      OpName vs_TEXCOORD1 "vs_TEXCOORD1" 
                                                      OpName vs_TEXCOORD3 "vs_TEXCOORD3" 
                                                      OpName vs_TEXCOORD5 "vs_TEXCOORD5" 
                                                      OpName vs_TEXCOORD6 "vs_TEXCOORD6" 
                                                      OpDecorate %11 Location 11 
                                                      OpDecorate %16 ArrayStride 16 
                                                      OpDecorate %17 ArrayStride 17 
                                                      OpDecorate %18 ArrayStride 18 
                                                      OpMemberDecorate %19 0 RelaxedPrecision 
                                                      OpMemberDecorate %19 0 Offset 19 
                                                      OpMemberDecorate %19 1 RelaxedPrecision 
                                                      OpMemberDecorate %19 1 Offset 19 
                                                      OpMemberDecorate %19 2 RelaxedPrecision 
                                                      OpMemberDecorate %19 2 Offset 19 
                                                      OpMemberDecorate %19 3 RelaxedPrecision 
                                                      OpMemberDecorate %19 3 Offset 19 
                                                      OpMemberDecorate %19 4 Offset 19 
                                                      OpMemberDecorate %19 5 Offset 19 
                                                      OpMemberDecorate %19 6 Offset 19 
                                                      OpMemberDecorate %19 7 Offset 19 
                                                      OpDecorate %19 Block 
                                                      OpDecorate %21 DescriptorSet 21 
                                                      OpDecorate %21 Binding 21 
                                                      OpDecorate vs_TEXCOORD2 Location 53 
                                                      OpMemberDecorate %85 0 BuiltIn 85 
                                                      OpMemberDecorate %85 1 BuiltIn 85 
                                                      OpMemberDecorate %85 2 BuiltIn 85 
                                                      OpDecorate %85 Block 
                                                      OpDecorate %97 Location 97 
                                                      OpDecorate vs_TEXCOORD0 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD0 Location 113 
                                                      OpDecorate %117 Location 117 
                                                      OpDecorate vs_TEXCOORD1 Location 155 
                                                      OpDecorate %158 RelaxedPrecision 
                                                      OpDecorate %169 RelaxedPrecision 
                                                      OpDecorate %170 RelaxedPrecision 
                                                      OpDecorate %172 RelaxedPrecision 
                                                      OpDecorate %179 RelaxedPrecision 
                                                      OpDecorate %181 RelaxedPrecision 
                                                      OpDecorate %182 RelaxedPrecision 
                                                      OpDecorate %183 RelaxedPrecision 
                                                      OpDecorate %186 RelaxedPrecision 
                                                      OpDecorate %187 RelaxedPrecision 
                                                      OpDecorate %188 RelaxedPrecision 
                                                      OpDecorate %191 RelaxedPrecision 
                                                      OpDecorate %192 RelaxedPrecision 
                                                      OpDecorate %193 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD3 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD3 Location 195 
                                                      OpDecorate %197 RelaxedPrecision 
                                                      OpDecorate %198 RelaxedPrecision 
                                                      OpDecorate %199 RelaxedPrecision 
                                                      OpDecorate %200 RelaxedPrecision 
                                                      OpDecorate %201 RelaxedPrecision 
                                                      OpDecorate %202 RelaxedPrecision 
                                                      OpDecorate %203 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD5 Location 204 
                                                      OpDecorate vs_TEXCOORD6 Location 207 
                                               %2 = OpTypeVoid 
                                               %3 = OpTypeFunction %2 
                                               %6 = OpTypeFloat 32 
                                               %7 = OpTypeVector %6 4 
                                               %8 = OpTypePointer Private %7 
                                Private f32_4* %9 = OpVariable Private 
                                              %10 = OpTypePointer Input %7 
                                 Input f32_4* %11 = OpVariable Input 
                                              %14 = OpTypeInt 32 0 
                                          u32 %15 = OpConstant 4 
                                              %16 = OpTypeArray %7 %15 
                                              %17 = OpTypeArray %7 %15 
                                              %18 = OpTypeArray %7 %15 
                                              %19 = OpTypeStruct %7 %7 %7 %7 %16 %17 %18 %7 
                                              %20 = OpTypePointer Uniform %19 
Uniform struct {f32_4; f32_4; f32_4; f32_4; f32_4[4]; f32_4[4]; f32_4[4]; f32_4;}* %21 = OpVariable Uniform 
                                              %22 = OpTypeInt 32 1 
                                          i32 %23 = OpConstant 4 
                                          i32 %24 = OpConstant 1 
                                              %25 = OpTypePointer Uniform %7 
                                          i32 %29 = OpConstant 0 
                                          i32 %37 = OpConstant 2 
                               Private f32_4* %45 = OpVariable Private 
                                          i32 %47 = OpConstant 3 
                                              %51 = OpTypeVector %6 3 
                                              %52 = OpTypePointer Output %51 
                       Output f32_3* vs_TEXCOORD2 = OpVariable Output 
                                          i32 %65 = OpConstant 6 
                                          u32 %83 = OpConstant 1 
                                              %84 = OpTypeArray %6 %83 
                                              %85 = OpTypeStruct %7 %6 %84 
                                              %86 = OpTypePointer Output %85 
         Output struct {f32_4; f32; f32[1];}* %87 = OpVariable Output 
                                              %95 = OpTypePointer Output %7 
                                 Input f32_4* %97 = OpVariable Input 
                                              %98 = OpTypeVector %6 2 
                                         i32 %101 = OpConstant 7 
                                             %112 = OpTypePointer Output %98 
                       Output f32_2* vs_TEXCOORD0 = OpVariable Output 
                                             %116 = OpTypePointer Input %51 
                                Input f32_3* %117 = OpVariable Input 
                                         i32 %119 = OpConstant 5 
                                         u32 %124 = OpConstant 0 
                                             %125 = OpTypePointer Private %6 
                                         u32 %138 = OpConstant 2 
                                Private f32* %140 = OpVariable Private 
                       Output f32_3* vs_TEXCOORD1 = OpVariable Output 
                                Private f32* %158 = OpVariable Private 
                              Private f32_4* %172 = OpVariable Private 
                                             %178 = OpTypePointer Private %51 
                              Private f32_3* %179 = OpVariable Private 
                       Output f32_3* vs_TEXCOORD3 = OpVariable Output 
                       Output f32_4* vs_TEXCOORD5 = OpVariable Output 
                                         f32 %205 = OpConstant 3.674022E-40 
                                       f32_4 %206 = OpConstantComposite %205 %205 %205 %205 
                       Output f32_4* vs_TEXCOORD6 = OpVariable Output 
                                             %208 = OpTypePointer Output %6 
                                          void %4 = OpFunction None %3 
                                               %5 = OpLabel 
                                        f32_4 %12 = OpLoad %11 
                                        f32_4 %13 = OpVectorShuffle %12 %12 1 1 1 1 
                               Uniform f32_4* %26 = OpAccessChain %21 %23 %24 
                                        f32_4 %27 = OpLoad %26 
                                        f32_4 %28 = OpFMul %13 %27 
                                                      OpStore %9 %28 
                               Uniform f32_4* %30 = OpAccessChain %21 %23 %29 
                                        f32_4 %31 = OpLoad %30 
                                        f32_4 %32 = OpLoad %11 
                                        f32_4 %33 = OpVectorShuffle %32 %32 0 0 0 0 
                                        f32_4 %34 = OpFMul %31 %33 
                                        f32_4 %35 = OpLoad %9 
                                        f32_4 %36 = OpFAdd %34 %35 
                                                      OpStore %9 %36 
                               Uniform f32_4* %38 = OpAccessChain %21 %23 %37 
                                        f32_4 %39 = OpLoad %38 
                                        f32_4 %40 = OpLoad %11 
                                        f32_4 %41 = OpVectorShuffle %40 %40 2 2 2 2 
                                        f32_4 %42 = OpFMul %39 %41 
                                        f32_4 %43 = OpLoad %9 
                                        f32_4 %44 = OpFAdd %42 %43 
                                                      OpStore %9 %44 
                                        f32_4 %46 = OpLoad %9 
                               Uniform f32_4* %48 = OpAccessChain %21 %23 %47 
                                        f32_4 %49 = OpLoad %48 
                                        f32_4 %50 = OpFAdd %46 %49 
                                                      OpStore %45 %50 
                               Uniform f32_4* %54 = OpAccessChain %21 %23 %47 
                                        f32_4 %55 = OpLoad %54 
                                        f32_3 %56 = OpVectorShuffle %55 %55 0 1 2 
                                        f32_4 %57 = OpLoad %11 
                                        f32_3 %58 = OpVectorShuffle %57 %57 3 3 3 
                                        f32_3 %59 = OpFMul %56 %58 
                                        f32_4 %60 = OpLoad %9 
                                        f32_3 %61 = OpVectorShuffle %60 %60 0 1 2 
                                        f32_3 %62 = OpFAdd %59 %61 
                                                      OpStore vs_TEXCOORD2 %62 
                                        f32_4 %63 = OpLoad %45 
                                        f32_4 %64 = OpVectorShuffle %63 %63 1 1 1 1 
                               Uniform f32_4* %66 = OpAccessChain %21 %65 %24 
                                        f32_4 %67 = OpLoad %66 
                                        f32_4 %68 = OpFMul %64 %67 
                                                      OpStore %9 %68 
                               Uniform f32_4* %69 = OpAccessChain %21 %65 %29 
                                        f32_4 %70 = OpLoad %69 
                                        f32_4 %71 = OpLoad %45 
                                        f32_4 %72 = OpVectorShuffle %71 %71 0 0 0 0 
                                        f32_4 %73 = OpFMul %70 %72 
                                        f32_4 %74 = OpLoad %9 
                                        f32_4 %75 = OpFAdd %73 %74 
                                                      OpStore %9 %75 
                               Uniform f32_4* %76 = OpAccessChain %21 %65 %37 
                                        f32_4 %77 = OpLoad %76 
                                        f32_4 %78 = OpLoad %45 
                                        f32_4 %79 = OpVectorShuffle %78 %78 2 2 2 2 
                                        f32_4 %80 = OpFMul %77 %79 
                                        f32_4 %81 = OpLoad %9 
                                        f32_4 %82 = OpFAdd %80 %81 
                                                      OpStore %9 %82 
                               Uniform f32_4* %88 = OpAccessChain %21 %65 %47 
                                        f32_4 %89 = OpLoad %88 
                                        f32_4 %90 = OpLoad %45 
                                        f32_4 %91 = OpVectorShuffle %90 %90 3 3 3 3 
                                        f32_4 %92 = OpFMul %89 %91 
                                        f32_4 %93 = OpLoad %9 
                                        f32_4 %94 = OpFAdd %92 %93 
                                Output f32_4* %96 = OpAccessChain %87 %29 
                                                      OpStore %96 %94 
                                        f32_4 %99 = OpLoad %97 
                                       f32_2 %100 = OpVectorShuffle %99 %99 0 1 
                              Uniform f32_4* %102 = OpAccessChain %21 %101 
                                       f32_4 %103 = OpLoad %102 
                                       f32_2 %104 = OpVectorShuffle %103 %103 0 1 
                                       f32_2 %105 = OpFMul %100 %104 
                              Uniform f32_4* %106 = OpAccessChain %21 %101 
                                       f32_4 %107 = OpLoad %106 
                                       f32_2 %108 = OpVectorShuffle %107 %107 2 3 
                                       f32_2 %109 = OpFAdd %105 %108 
                                       f32_4 %110 = OpLoad %9 
                                       f32_4 %111 = OpVectorShuffle %110 %109 4 5 2 3 
                                                      OpStore %9 %111 
                                       f32_4 %114 = OpLoad %9 
                                       f32_2 %115 = OpVectorShuffle %114 %114 0 1 
                                                      OpStore vs_TEXCOORD0 %115 
                                       f32_3 %118 = OpLoad %117 
                              Uniform f32_4* %120 = OpAccessChain %21 %119 %29 
                                       f32_4 %121 = OpLoad %120 
                                       f32_3 %122 = OpVectorShuffle %121 %121 0 1 2 
                                         f32 %123 = OpDot %118 %122 
                                Private f32* %126 = OpAccessChain %9 %124 
                                                      OpStore %126 %123 
                                       f32_3 %127 = OpLoad %117 
                              Uniform f32_4* %128 = OpAccessChain %21 %119 %24 
                                       f32_4 %129 = OpLoad %128 
                                       f32_3 %130 = OpVectorShuffle %129 %129 0 1 2 
                                         f32 %131 = OpDot %127 %130 
                                Private f32* %132 = OpAccessChain %9 %83 
                                                      OpStore %132 %131 
                                       f32_3 %133 = OpLoad %117 
                              Uniform f32_4* %134 = OpAccessChain %21 %119 %37 
                                       f32_4 %135 = OpLoad %134 
                                       f32_3 %136 = OpVectorShuffle %135 %135 0 1 2 
                                         f32 %137 = OpDot %133 %136 
                                Private f32* %139 = OpAccessChain %9 %138 
                                                      OpStore %139 %137 
                                       f32_4 %141 = OpLoad %9 
                                       f32_3 %142 = OpVectorShuffle %141 %141 0 1 2 
                                       f32_4 %143 = OpLoad %9 
                                       f32_3 %144 = OpVectorShuffle %143 %143 0 1 2 
                                         f32 %145 = OpDot %142 %144 
                                                      OpStore %140 %145 
                                         f32 %146 = OpLoad %140 
                                         f32 %147 = OpExtInst %1 32 %146 
                                                      OpStore %140 %147 
                                         f32 %148 = OpLoad %140 
                                       f32_3 %149 = OpCompositeConstruct %148 %148 %148 
                                       f32_4 %150 = OpLoad %9 
                                       f32_3 %151 = OpVectorShuffle %150 %150 0 1 2 
                                       f32_3 %152 = OpFMul %149 %151 
                                       f32_4 %153 = OpLoad %9 
                                       f32_4 %154 = OpVectorShuffle %153 %152 4 5 6 3 
                                                      OpStore %9 %154 
                                       f32_4 %156 = OpLoad %9 
                                       f32_3 %157 = OpVectorShuffle %156 %156 0 1 2 
                                                      OpStore vs_TEXCOORD1 %157 
                                Private f32* %159 = OpAccessChain %9 %83 
                                         f32 %160 = OpLoad %159 
                                Private f32* %161 = OpAccessChain %9 %83 
                                         f32 %162 = OpLoad %161 
                                         f32 %163 = OpFMul %160 %162 
                                                      OpStore %158 %163 
                                Private f32* %164 = OpAccessChain %9 %124 
                                         f32 %165 = OpLoad %164 
                                Private f32* %166 = OpAccessChain %9 %124 
                                         f32 %167 = OpLoad %166 
                                         f32 %168 = OpFMul %165 %167 
                                         f32 %169 = OpLoad %158 
                                         f32 %170 = OpFNegate %169 
                                         f32 %171 = OpFAdd %168 %170 
                                                      OpStore %158 %171 
                                       f32_4 %173 = OpLoad %9 
                                       f32_4 %174 = OpVectorShuffle %173 %173 1 2 2 0 
                                       f32_4 %175 = OpLoad %9 
                                       f32_4 %176 = OpVectorShuffle %175 %175 0 1 2 2 
                                       f32_4 %177 = OpFMul %174 %176 
                                                      OpStore %172 %177 
                              Uniform f32_4* %180 = OpAccessChain %21 %29 
                                       f32_4 %181 = OpLoad %180 
                                       f32_4 %182 = OpLoad %172 
                                         f32 %183 = OpDot %181 %182 
                                Private f32* %184 = OpAccessChain %179 %124 
                                                      OpStore %184 %183 
                              Uniform f32_4* %185 = OpAccessChain %21 %24 
                                       f32_4 %186 = OpLoad %185 
                                       f32_4 %187 = OpLoad %172 
                                         f32 %188 = OpDot %186 %187 
                                Private f32* %189 = OpAccessChain %179 %83 
                                                      OpStore %189 %188 
                              Uniform f32_4* %190 = OpAccessChain %21 %37 
                                       f32_4 %191 = OpLoad %190 
                                       f32_4 %192 = OpLoad %172 
                                         f32 %193 = OpDot %191 %192 
                                Private f32* %194 = OpAccessChain %179 %138 
                                                      OpStore %194 %193 
                              Uniform f32_4* %196 = OpAccessChain %21 %47 
                                       f32_4 %197 = OpLoad %196 
                                       f32_3 %198 = OpVectorShuffle %197 %197 0 1 2 
                                         f32 %199 = OpLoad %158 
                                       f32_3 %200 = OpCompositeConstruct %199 %199 %199 
                                       f32_3 %201 = OpFMul %198 %200 
                                       f32_3 %202 = OpLoad %179 
                                       f32_3 %203 = OpFAdd %201 %202 
                                                      OpStore vs_TEXCOORD3 %203 
                                                      OpStore vs_TEXCOORD5 %206 
                                                      OpStore vs_TEXCOORD6 %206 
                                 Output f32* %209 = OpAccessChain %87 %29 %83 
                                         f32 %210 = OpLoad %209 
                                         f32 %211 = OpFNegate %210 
                                 Output f32* %212 = OpAccessChain %87 %29 %83 
                                                      OpStore %212 %211 
                                                      OpReturn
                                                      OpFunctionEnd
; SPIR-V
; Version: 1.0
; Generator: Khronos Glslang Reference Front End; 6
; Bound: 483
; Schema: 0
                                                      OpCapability Shader 
                                               %1 = OpExtInstImport "GLSL.std.450" 
                                                      OpMemoryModel Logical GLSL450 
                                                      OpEntryPoint Fragment %4 "main" %11 %57 %404 %448 %472 
                                                      OpExecutionMode %4 OriginUpperLeft 
                                                      OpName vs_TEXCOORD2 "vs_TEXCOORD2" 
                                                      OpName vs_TEXCOORD1 "vs_TEXCOORD1" 
                                                      OpName vs_TEXCOORD0 "vs_TEXCOORD0" 
                                                      OpName vs_TEXCOORD3 "vs_TEXCOORD3" 
                                                      OpDecorate vs_TEXCOORD2 Location 11 
                                                      OpDecorate %17 ArrayStride 17 
                                                      OpDecorate %19 ArrayStride 19 
                                                      OpMemberDecorate %20 0 Offset 20 
                                                      OpMemberDecorate %20 1 RelaxedPrecision 
                                                      OpMemberDecorate %20 1 Offset 20 
                                                      OpMemberDecorate %20 2 RelaxedPrecision 
                                                      OpMemberDecorate %20 2 Offset 20 
                                                      OpMemberDecorate %20 3 RelaxedPrecision 
                                                      OpMemberDecorate %20 3 Offset 20 
                                                      OpMemberDecorate %20 4 RelaxedPrecision 
                                                      OpMemberDecorate %20 4 Offset 20 
                                                      OpMemberDecorate %20 5 Offset 20 
                                                      OpMemberDecorate %20 6 RelaxedPrecision 
                                                      OpMemberDecorate %20 6 Offset 20 
                                                      OpMemberDecorate %20 7 Offset 20 
                                                      OpMemberDecorate %20 8 Offset 20 
                                                      OpMemberDecorate %20 9 RelaxedPrecision 
                                                      OpMemberDecorate %20 9 Offset 20 
                                                      OpMemberDecorate %20 10 RelaxedPrecision 
                                                      OpMemberDecorate %20 10 Offset 20 
                                                      OpMemberDecorate %20 11 RelaxedPrecision 
                                                      OpMemberDecorate %20 11 Offset 20 
                                                      OpMemberDecorate %20 12 RelaxedPrecision 
                                                      OpMemberDecorate %20 12 Offset 20 
                                                      OpMemberDecorate %20 13 RelaxedPrecision 
                                                      OpMemberDecorate %20 13 Offset 20 
                                                      OpMemberDecorate %20 14 RelaxedPrecision 
                                                      OpMemberDecorate %20 14 Offset 20 
                                                      OpMemberDecorate %20 15 RelaxedPrecision 
                                                      OpMemberDecorate %20 15 Offset 20 
                                                      OpMemberDecorate %20 16 RelaxedPrecision 
                                                      OpMemberDecorate %20 16 Offset 20 
                                                      OpMemberDecorate %20 17 RelaxedPrecision 
                                                      OpMemberDecorate %20 17 Offset 20 
                                                      OpDecorate %20 Block 
                                                      OpDecorate %22 DescriptorSet 22 
                                                      OpDecorate %22 Binding 22 
                                                      OpDecorate %36 RelaxedPrecision 
                                                      OpDecorate %44 RelaxedPrecision 
                                                      OpDecorate %45 RelaxedPrecision 
                                                      OpDecorate %47 RelaxedPrecision 
                                                      OpDecorate %48 RelaxedPrecision 
                                                      OpDecorate %49 RelaxedPrecision 
                                                      OpDecorate %50 RelaxedPrecision 
                                                      OpDecorate %51 RelaxedPrecision 
                                                      OpDecorate %52 RelaxedPrecision 
                                                      OpDecorate %53 RelaxedPrecision 
                                                      OpDecorate %54 RelaxedPrecision 
                                                      OpDecorate %55 RelaxedPrecision 
                                                      OpDecorate %56 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD1 Location 57 
                                                      OpDecorate %61 RelaxedPrecision 
                                                      OpDecorate %62 RelaxedPrecision 
                                                      OpDecorate %63 RelaxedPrecision 
                                                      OpDecorate %64 RelaxedPrecision 
                                                      OpDecorate %68 RelaxedPrecision 
                                                      OpDecorate %69 RelaxedPrecision 
                                                      OpDecorate %70 RelaxedPrecision 
                                                      OpDecorate %73 RelaxedPrecision 
                                                      OpDecorate %75 RelaxedPrecision 
                                                      OpDecorate %76 RelaxedPrecision 
                                                      OpDecorate %77 RelaxedPrecision 
                                                      OpDecorate %81 RelaxedPrecision 
                                                      OpDecorate %82 RelaxedPrecision 
                                                      OpDecorate %85 RelaxedPrecision 
                                                      OpDecorate %89 RelaxedPrecision 
                                                      OpDecorate %90 RelaxedPrecision 
                                                      OpDecorate %94 RelaxedPrecision 
                                                      OpDecorate %96 RelaxedPrecision 
                                                      OpDecorate %100 RelaxedPrecision 
                                                      OpDecorate %106 RelaxedPrecision 
                                                      OpDecorate %107 RelaxedPrecision 
                                                      OpDecorate %109 RelaxedPrecision 
                                                      OpDecorate %110 RelaxedPrecision 
                                                      OpDecorate %116 RelaxedPrecision 
                                                      OpDecorate %117 RelaxedPrecision 
                                                      OpDecorate %119 RelaxedPrecision 
                                                      OpDecorate %121 RelaxedPrecision 
                                                      OpDecorate %122 RelaxedPrecision 
                                                      OpDecorate %123 RelaxedPrecision 
                                                      OpDecorate %126 RelaxedPrecision 
                                                      OpDecorate %127 RelaxedPrecision 
                                                      OpDecorate %128 RelaxedPrecision 
                                                      OpDecorate %129 RelaxedPrecision 
                                                      OpDecorate %202 RelaxedPrecision 
                                                      OpDecorate %205 RelaxedPrecision 
                                                      OpDecorate %252 DescriptorSet 252 
                                                      OpDecorate %252 Binding 252 
                                                      OpDecorate %256 DescriptorSet 256 
                                                      OpDecorate %256 Binding 256 
                                                      OpDecorate %265 RelaxedPrecision 
                                                      OpDecorate %266 RelaxedPrecision 
                                                      OpDecorate %267 RelaxedPrecision 
                                                      OpDecorate %271 RelaxedPrecision 
                                                      OpDecorate %274 RelaxedPrecision 
                                                      OpDecorate %278 RelaxedPrecision 
                                                      OpDecorate %279 RelaxedPrecision 
                                                      OpDecorate %280 RelaxedPrecision 
                                                      OpDecorate %283 RelaxedPrecision 
                                                      OpDecorate %286 RelaxedPrecision 
                                                      OpDecorate %291 RelaxedPrecision 
                                                      OpDecorate %296 RelaxedPrecision 
                                                      OpDecorate %297 RelaxedPrecision 
                                                      OpDecorate %300 RelaxedPrecision 
                                                      OpDecorate %301 RelaxedPrecision 
                                                      OpDecorate %302 RelaxedPrecision 
                                                      OpDecorate %305 RelaxedPrecision 
                                                      OpDecorate %309 RelaxedPrecision 
                                                      OpDecorate %310 RelaxedPrecision 
                                                      OpDecorate %311 RelaxedPrecision 
                                                      OpDecorate %314 RelaxedPrecision 
                                                      OpDecorate %315 RelaxedPrecision 
                                                      OpDecorate %316 RelaxedPrecision 
                                                      OpDecorate %317 RelaxedPrecision 
                                                      OpDecorate %318 RelaxedPrecision 
                                                      OpDecorate %320 RelaxedPrecision 
                                                      OpDecorate %321 RelaxedPrecision 
                                                      OpDecorate %324 RelaxedPrecision 
                                                      OpDecorate %325 RelaxedPrecision 
                                                      OpDecorate %327 RelaxedPrecision 
                                                      OpDecorate %328 RelaxedPrecision 
                                                      OpDecorate %329 RelaxedPrecision 
                                                      OpDecorate %330 RelaxedPrecision 
                                                      OpDecorate %331 RelaxedPrecision 
                                                      OpDecorate %332 RelaxedPrecision 
                                                      OpDecorate %333 RelaxedPrecision 
                                                      OpDecorate %334 RelaxedPrecision 
                                                      OpDecorate %335 RelaxedPrecision 
                                                      OpDecorate %337 RelaxedPrecision 
                                                      OpDecorate %338 RelaxedPrecision 
                                                      OpDecorate %341 RelaxedPrecision 
                                                      OpDecorate %342 RelaxedPrecision 
                                                      OpDecorate %345 RelaxedPrecision 
                                                      OpDecorate %346 RelaxedPrecision 
                                                      OpDecorate %347 RelaxedPrecision 
                                                      OpDecorate %349 RelaxedPrecision 
                                                      OpDecorate %351 RelaxedPrecision 
                                                      OpDecorate %352 RelaxedPrecision 
                                                      OpDecorate %355 RelaxedPrecision 
                                                      OpDecorate %356 RelaxedPrecision 
                                                      OpDecorate %357 RelaxedPrecision 
                                                      OpDecorate %360 RelaxedPrecision 
                                                      OpDecorate %362 RelaxedPrecision 
                                                      OpDecorate %363 RelaxedPrecision 
                                                      OpDecorate %367 RelaxedPrecision 
                                                      OpDecorate %368 RelaxedPrecision 
                                                      OpDecorate %369 RelaxedPrecision 
                                                      OpDecorate %372 RelaxedPrecision 
                                                      OpDecorate %373 RelaxedPrecision 
                                                      OpDecorate %374 RelaxedPrecision 
                                                      OpDecorate %376 RelaxedPrecision 
                                                      OpDecorate %377 RelaxedPrecision 
                                                      OpDecorate %378 RelaxedPrecision 
                                                      OpDecorate %379 RelaxedPrecision 
                                                      OpDecorate %381 RelaxedPrecision 
                                                      OpDecorate %382 RelaxedPrecision 
                                                      OpDecorate %383 RelaxedPrecision 
                                                      OpDecorate %384 RelaxedPrecision 
                                                      OpDecorate %385 RelaxedPrecision 
                                                      OpDecorate %387 RelaxedPrecision 
                                                      OpDecorate %388 RelaxedPrecision 
                                                      OpDecorate %389 RelaxedPrecision 
                                                      OpDecorate %390 RelaxedPrecision 
                                                      OpDecorate %391 RelaxedPrecision 
                                                      OpDecorate %392 RelaxedPrecision 
                                                      OpDecorate %393 RelaxedPrecision 
                                                      OpDecorate %394 RelaxedPrecision 
                                                      OpDecorate %395 RelaxedPrecision 
                                                      OpDecorate %396 RelaxedPrecision 
                                                      OpDecorate %397 RelaxedPrecision 
                                                      OpDecorate %397 DescriptorSet 397 
                                                      OpDecorate %397 Binding 397 
                                                      OpDecorate %398 RelaxedPrecision 
                                                      OpDecorate %399 RelaxedPrecision 
                                                      OpDecorate %399 DescriptorSet 399 
                                                      OpDecorate %399 Binding 399 
                                                      OpDecorate %400 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD0 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD0 Location 404 
                                                      OpDecorate %405 RelaxedPrecision 
                                                      OpDecorate %406 RelaxedPrecision 
                                                      OpDecorate %407 RelaxedPrecision 
                                                      OpDecorate %408 RelaxedPrecision 
                                                      OpDecorate %411 RelaxedPrecision 
                                                      OpDecorate %412 RelaxedPrecision 
                                                      OpDecorate %413 RelaxedPrecision 
                                                      OpDecorate %414 RelaxedPrecision 
                                                      OpDecorate %415 RelaxedPrecision 
                                                      OpDecorate %417 RelaxedPrecision 
                                                      OpDecorate %418 RelaxedPrecision 
                                                      OpDecorate %419 RelaxedPrecision 
                                                      OpDecorate %420 RelaxedPrecision 
                                                      OpDecorate %421 RelaxedPrecision 
                                                      OpDecorate %422 RelaxedPrecision 
                                                      OpDecorate %432 RelaxedPrecision 
                                                      OpDecorate %437 RelaxedPrecision 
                                                      OpDecorate %443 RelaxedPrecision 
                                                      OpDecorate %447 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD3 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD3 Location 448 
                                                      OpDecorate %449 RelaxedPrecision 
                                                      OpDecorate %450 RelaxedPrecision 
                                                      OpDecorate %451 RelaxedPrecision 
                                                      OpDecorate %453 RelaxedPrecision 
                                                      OpDecorate %454 RelaxedPrecision 
                                                      OpDecorate %455 RelaxedPrecision 
                                                      OpDecorate %472 RelaxedPrecision 
                                                      OpDecorate %472 Location 472 
                                                      OpDecorate %473 RelaxedPrecision 
                                               %2 = OpTypeVoid 
                                               %3 = OpTypeFunction %2 
                                               %6 = OpTypeFloat 32 
                                               %7 = OpTypeVector %6 3 
                                               %8 = OpTypePointer Private %7 
                                Private f32_3* %9 = OpVariable Private 
                                              %10 = OpTypePointer Input %7 
                        Input f32_3* vs_TEXCOORD2 = OpVariable Input 
                                              %14 = OpTypeVector %6 4 
                                              %15 = OpTypeInt 32 0 
                                          u32 %16 = OpConstant 16 
                                              %17 = OpTypeArray %14 %16 
                                          u32 %18 = OpConstant 4 
                                              %19 = OpTypeArray %14 %18 
                                              %20 = OpTypeStruct %7 %14 %14 %14 %14 %17 %14 %14 %19 %14 %14 %14 %6 %14 %14 %6 %6 %6 
                                              %21 = OpTypePointer Uniform %20 
Uniform struct {f32_3; f32_4; f32_4; f32_4; f32_4; f32_4[16]; f32_4; f32_4; f32_4[4]; f32_4; f32_4; f32_4; f32; f32_4; f32_4; f32; f32; f32;}* %22 = OpVariable Uniform 
                                              %23 = OpTypeInt 32 1 
                                          i32 %24 = OpConstant 0 
                                              %25 = OpTypePointer Uniform %7 
                                              %29 = OpTypePointer Private %6 
                                 Private f32* %30 = OpVariable Private 
                               Private f32_3* %36 = OpVariable Private 
                                          i32 %41 = OpConstant 1 
                                              %42 = OpTypePointer Uniform %14 
                                 Private f32* %47 = OpVariable Private 
                        Input f32_3* vs_TEXCOORD1 = OpVariable Input 
                               Private f32_3* %63 = OpVariable Private 
                                          u32 %71 = OpConstant 0 
                                          u32 %78 = OpConstant 1 
                                              %80 = OpTypeVector %6 2 
                                          f32 %83 = OpConstant 3.674022E-40 
                                        f32_2 %84 = OpConstantComposite %83 %83 
                                          i32 %91 = OpConstant 12 
                                              %92 = OpTypePointer Uniform %6 
                                          f32 %95 = OpConstant 3.674022E-40 
                                         i32 %104 = OpConstant 17 
                                         f32 %108 = OpConstant 3.674022E-40 
                                         f32 %113 = OpConstant 3.674022E-40 
                                Private f32* %119 = OpVariable Private 
                              Private f32_3* %124 = OpVariable Private 
                                         f32 %131 = OpConstant 3.674022E-40 
                                         f32 %143 = OpConstant 3.674022E-40 
                                         f32 %145 = OpConstant 3.674022E-40 
                                         i32 %155 = OpConstant 8 
                                         u32 %156 = OpConstant 2 
                                         i32 %163 = OpConstant 2 
                                         i32 %172 = OpConstant 7 
                                Private f32* %178 = OpVariable Private 
                                         u32 %189 = OpConstant 3 
                                         i32 %200 = OpConstant 6 
                                         i32 %214 = OpConstant 5 
                                         i32 %236 = OpConstant 3 
                                             %241 = OpTypePointer Function %7 
                                             %250 = OpTypeImage %6 Dim2D 0 0 0 1 Unknown 
                                             %251 = OpTypePointer UniformConstant %250 
        UniformConstant read_only Texture2D* %252 = OpVariable UniformConstant 
                                             %254 = OpTypeSampler 
                                             %255 = OpTypePointer UniformConstant %254 
                    UniformConstant sampler* %256 = OpVariable UniformConstant 
                                             %258 = OpTypeImage %6 Dim2D 1 0 0 1 Unknown 
                                             %259 = OpTypeSampledImage %258 
                                         i32 %294 = OpConstant 9 
                                         i32 %298 = OpConstant 10 
                                         i32 %307 = OpConstant 16 
                                         i32 %312 = OpConstant 15 
                              Private f32_3* %316 = OpVariable Private 
                                         i32 %365 = OpConstant 13 
                                         i32 %370 = OpConstant 14 
                              Private f32_3* %396 = OpVariable Private 
        UniformConstant read_only Texture2D* %397 = OpVariable UniformConstant 
                    UniformConstant sampler* %399 = OpVariable UniformConstant 
                                             %401 = OpTypeSampledImage %250 
                                             %403 = OpTypePointer Input %80 
                        Input f32_2* vs_TEXCOORD0 = OpVariable Input 
                                         i32 %409 = OpConstant 11 
                              Private f32_3* %414 = OpVariable Private 
                                             %425 = OpTypePointer Private %14 
                              Private f32_4* %426 = OpVariable Private 
                                         i32 %441 = OpConstant 4 
                        Input f32_3* vs_TEXCOORD3 = OpVariable Input 
                                       f32_3 %452 = OpConstantComposite %83 %83 %83 
                                         f32 %457 = OpConstant 3.674022E-40 
                                       f32_3 %458 = OpConstantComposite %457 %457 %457 
                                         f32 %463 = OpConstant 3.674022E-40 
                                       f32_3 %464 = OpConstantComposite %463 %463 %463 
                                         f32 %466 = OpConstant 3.674022E-40 
                                       f32_3 %467 = OpConstantComposite %466 %466 %466 
                                             %471 = OpTypePointer Output %14 
                               Output f32_4* %472 = OpVariable Output 
                                             %480 = OpTypePointer Output %6 
                                          void %4 = OpFunction None %3 
                                               %5 = OpLabel 
                             Function f32_3* %242 = OpVariable Function 
                                        f32_3 %12 = OpLoad vs_TEXCOORD2 
                                        f32_3 %13 = OpFNegate %12 
                               Uniform f32_3* %26 = OpAccessChain %22 %24 
                                        f32_3 %27 = OpLoad %26 
                                        f32_3 %28 = OpFAdd %13 %27 
                                                      OpStore %9 %28 
                                        f32_3 %31 = OpLoad %9 
                                        f32_3 %32 = OpLoad %9 
                                          f32 %33 = OpDot %31 %32 
                                                      OpStore %30 %33 
                                          f32 %34 = OpLoad %30 
                                          f32 %35 = OpExtInst %1 32 %34 
                                                      OpStore %30 %35 
                                        f32_3 %37 = OpLoad %9 
                                          f32 %38 = OpLoad %30 
                                        f32_3 %39 = OpCompositeConstruct %38 %38 %38 
                                        f32_3 %40 = OpFMul %37 %39 
                               Uniform f32_4* %43 = OpAccessChain %22 %41 
                                        f32_4 %44 = OpLoad %43 
                                        f32_3 %45 = OpVectorShuffle %44 %44 0 1 2 
                                        f32_3 %46 = OpFAdd %40 %45 
                                                      OpStore %36 %46 
                                        f32_3 %48 = OpLoad %36 
                                        f32_3 %49 = OpLoad %36 
                                          f32 %50 = OpDot %48 %49 
                                                      OpStore %47 %50 
                                          f32 %51 = OpLoad %47 
                                          f32 %52 = OpExtInst %1 32 %51 
                                                      OpStore %47 %52 
                                          f32 %53 = OpLoad %47 
                                        f32_3 %54 = OpCompositeConstruct %53 %53 %53 
                                        f32_3 %55 = OpLoad %36 
                                        f32_3 %56 = OpFMul %54 %55 
                                                      OpStore %36 %56 
                                        f32_3 %58 = OpLoad vs_TEXCOORD1 
                                        f32_3 %59 = OpLoad vs_TEXCOORD1 
                                          f32 %60 = OpDot %58 %59 
                                                      OpStore %47 %60 
                                          f32 %61 = OpLoad %47 
                                          f32 %62 = OpExtInst %1 32 %61 
                                                      OpStore %47 %62 
                                          f32 %64 = OpLoad %47 
                                        f32_3 %65 = OpCompositeConstruct %64 %64 %64 
                                        f32_3 %66 = OpLoad vs_TEXCOORD1 
                                        f32_3 %67 = OpFMul %65 %66 
                                                      OpStore %63 %67 
                                        f32_3 %68 = OpLoad %63 
                                        f32_3 %69 = OpLoad %36 
                                          f32 %70 = OpDot %68 %69 
                                 Private f32* %72 = OpAccessChain %36 %71 
                                                      OpStore %72 %70 
                                        f32_3 %73 = OpLoad %63 
                               Uniform f32_4* %74 = OpAccessChain %22 %41 
                                        f32_4 %75 = OpLoad %74 
                                        f32_3 %76 = OpVectorShuffle %75 %75 0 1 2 
                                          f32 %77 = OpDot %73 %76 
                                 Private f32* %79 = OpAccessChain %36 %78 
                                                      OpStore %79 %77 
                                        f32_3 %81 = OpLoad %36 
                                        f32_2 %82 = OpVectorShuffle %81 %81 0 1 
                                        f32_2 %85 = OpExtInst %1 40 %82 %84 
                                        f32_3 %86 = OpLoad %36 
                                        f32_3 %87 = OpVectorShuffle %86 %85 3 4 2 
                                                      OpStore %36 %87 
                                 Private f32* %88 = OpAccessChain %36 %71 
                                          f32 %89 = OpLoad %88 
                                          f32 %90 = OpExtInst %1 30 %89 
                                                      OpStore %30 %90 
                                 Uniform f32* %93 = OpAccessChain %22 %91 
                                          f32 %94 = OpLoad %93 
                                          f32 %96 = OpFMul %94 %95 
                                 Private f32* %97 = OpAccessChain %36 %71 
                                                      OpStore %97 %96 
                                          f32 %98 = OpLoad %30 
                                 Private f32* %99 = OpAccessChain %36 %71 
                                         f32 %100 = OpLoad %99 
                                         f32 %101 = OpFMul %98 %100 
                                                      OpStore %30 %101 
                                         f32 %102 = OpLoad %30 
                                         f32 %103 = OpExtInst %1 29 %102 
                                                      OpStore %30 %103 
                                Uniform f32* %105 = OpAccessChain %22 %104 
                                         f32 %106 = OpLoad %105 
                                         f32 %107 = OpFNegate %106 
                                         f32 %109 = OpFMul %107 %108 
                                         f32 %110 = OpFAdd %109 %108 
                                Private f32* %111 = OpAccessChain %36 %71 
                                                      OpStore %111 %110 
                                         f32 %112 = OpLoad %30 
                                         f32 %114 = OpFMul %112 %113 
                                Private f32* %115 = OpAccessChain %36 %71 
                                         f32 %116 = OpLoad %115 
                                         f32 %117 = OpFNegate %116 
                                         f32 %118 = OpFAdd %114 %117 
                                                      OpStore %30 %118 
                                Uniform f32* %120 = OpAccessChain %22 %104 
                                         f32 %121 = OpLoad %120 
                                         f32 %122 = OpFMul %121 %108 
                                         f32 %123 = OpFAdd %122 %108 
                                                      OpStore %119 %123 
                                Private f32* %125 = OpAccessChain %36 %71 
                                         f32 %126 = OpLoad %125 
                                         f32 %127 = OpFNegate %126 
                                         f32 %128 = OpLoad %119 
                                         f32 %129 = OpFAdd %127 %128 
                                Private f32* %130 = OpAccessChain %124 %71 
                                                      OpStore %130 %129 
                                Private f32* %132 = OpAccessChain %124 %71 
                                         f32 %133 = OpLoad %132 
                                         f32 %134 = OpFDiv %131 %133 
                                Private f32* %135 = OpAccessChain %124 %71 
                                                      OpStore %135 %134 
                                         f32 %136 = OpLoad %30 
                                Private f32* %137 = OpAccessChain %124 %71 
                                         f32 %138 = OpLoad %137 
                                         f32 %139 = OpFMul %136 %138 
                                                      OpStore %30 %139 
                                         f32 %140 = OpLoad %30 
                                         f32 %141 = OpExtInst %1 43 %140 %83 %131 
                                                      OpStore %30 %141 
                                         f32 %142 = OpLoad %30 
                                         f32 %144 = OpFMul %142 %143 
                                         f32 %146 = OpFAdd %144 %145 
                                Private f32* %147 = OpAccessChain %124 %71 
                                                      OpStore %147 %146 
                                         f32 %148 = OpLoad %30 
                                         f32 %149 = OpLoad %30 
                                         f32 %150 = OpFMul %148 %149 
                                                      OpStore %30 %150 
                                         f32 %151 = OpLoad %30 
                                Private f32* %152 = OpAccessChain %124 %71 
                                         f32 %153 = OpLoad %152 
                                         f32 %154 = OpFMul %151 %153 
                                                      OpStore %30 %154 
                                Uniform f32* %157 = OpAccessChain %22 %155 %24 %156 
                                         f32 %158 = OpLoad %157 
                                Private f32* %159 = OpAccessChain %124 %71 
                                                      OpStore %159 %158 
                                Uniform f32* %160 = OpAccessChain %22 %155 %41 %156 
                                         f32 %161 = OpLoad %160 
                                Private f32* %162 = OpAccessChain %124 %78 
                                                      OpStore %162 %161 
                                Uniform f32* %164 = OpAccessChain %22 %155 %163 %156 
                                         f32 %165 = OpLoad %164 
                                Private f32* %166 = OpAccessChain %124 %156 
                                                      OpStore %166 %165 
                                       f32_3 %167 = OpLoad %9 
                                       f32_3 %168 = OpLoad %124 
                                         f32 %169 = OpDot %167 %168 
                                Private f32* %170 = OpAccessChain %9 %71 
                                                      OpStore %170 %169 
                                       f32_3 %171 = OpLoad vs_TEXCOORD2 
                              Uniform f32_4* %173 = OpAccessChain %22 %172 
                                       f32_4 %174 = OpLoad %173 
                                       f32_3 %175 = OpVectorShuffle %174 %174 0 1 2 
                                       f32_3 %176 = OpFNegate %175 
                                       f32_3 %177 = OpFAdd %171 %176 
                                                      OpStore %124 %177 
                                       f32_3 %179 = OpLoad %124 
                                       f32_3 %180 = OpLoad %124 
                                         f32 %181 = OpDot %179 %180 
                                                      OpStore %178 %181 
                                         f32 %182 = OpLoad %178 
                                         f32 %183 = OpExtInst %1 31 %182 
                                                      OpStore %178 %183 
                                Private f32* %184 = OpAccessChain %9 %71 
                                         f32 %185 = OpLoad %184 
                                         f32 %186 = OpFNegate %185 
                                         f32 %187 = OpLoad %178 
                                         f32 %188 = OpFAdd %186 %187 
                                                      OpStore %178 %188 
                                Uniform f32* %190 = OpAccessChain %22 %172 %189 
                                         f32 %191 = OpLoad %190 
                                         f32 %192 = OpLoad %178 
                                         f32 %193 = OpFMul %191 %192 
                                Private f32* %194 = OpAccessChain %9 %71 
                                         f32 %195 = OpLoad %194 
                                         f32 %196 = OpFAdd %193 %195 
                                Private f32* %197 = OpAccessChain %9 %71 
                                                      OpStore %197 %196 
                                Private f32* %198 = OpAccessChain %9 %71 
                                         f32 %199 = OpLoad %198 
                                Uniform f32* %201 = OpAccessChain %22 %200 %156 
                                         f32 %202 = OpLoad %201 
                                         f32 %203 = OpFMul %199 %202 
                                Uniform f32* %204 = OpAccessChain %22 %200 %189 
                                         f32 %205 = OpLoad %204 
                                         f32 %206 = OpFAdd %203 %205 
                                Private f32* %207 = OpAccessChain %9 %71 
                                                      OpStore %207 %206 
                                Private f32* %208 = OpAccessChain %9 %71 
                                         f32 %209 = OpLoad %208 
                                         f32 %210 = OpExtInst %1 43 %209 %83 %131 
                                Private f32* %211 = OpAccessChain %9 %71 
                                                      OpStore %211 %210 
                                       f32_3 %212 = OpLoad vs_TEXCOORD2 
                                       f32_3 %213 = OpVectorShuffle %212 %212 1 1 1 
                              Uniform f32_4* %215 = OpAccessChain %22 %214 %41 
                                       f32_4 %216 = OpLoad %215 
                                       f32_3 %217 = OpVectorShuffle %216 %216 0 1 2 
                                       f32_3 %218 = OpFMul %213 %217 
                                                      OpStore %124 %218 
                              Uniform f32_4* %219 = OpAccessChain %22 %214 %24 
                                       f32_4 %220 = OpLoad %219 
                                       f32_3 %221 = OpVectorShuffle %220 %220 0 1 2 
                                       f32_3 %222 = OpLoad vs_TEXCOORD2 
                                       f32_3 %223 = OpVectorShuffle %222 %222 0 0 0 
                                       f32_3 %224 = OpFMul %221 %223 
                                       f32_3 %225 = OpLoad %124 
                                       f32_3 %226 = OpFAdd %224 %225 
                                                      OpStore %124 %226 
                              Uniform f32_4* %227 = OpAccessChain %22 %214 %163 
                                       f32_4 %228 = OpLoad %227 
                                       f32_3 %229 = OpVectorShuffle %228 %228 0 1 2 
                                       f32_3 %230 = OpLoad vs_TEXCOORD2 
                                       f32_3 %231 = OpVectorShuffle %230 %230 2 2 2 
                                       f32_3 %232 = OpFMul %229 %231 
                                       f32_3 %233 = OpLoad %124 
                                       f32_3 %234 = OpFAdd %232 %233 
                                                      OpStore %124 %234 
                                       f32_3 %235 = OpLoad %124 
                              Uniform f32_4* %237 = OpAccessChain %22 %214 %236 
                                       f32_4 %238 = OpLoad %237 
                                       f32_3 %239 = OpVectorShuffle %238 %238 0 1 2 
                                       f32_3 %240 = OpFAdd %235 %239 
                                                      OpStore %124 %240 
                                       f32_3 %243 = OpLoad %124 
                                       f32_2 %244 = OpVectorShuffle %243 %243 0 1 
                                Private f32* %245 = OpAccessChain %124 %156 
                                         f32 %246 = OpLoad %245 
                                         f32 %247 = OpCompositeExtract %244 0 
                                         f32 %248 = OpCompositeExtract %244 1 
                                       f32_3 %249 = OpCompositeConstruct %247 %248 %246 
                                                      OpStore %242 %249 
                         read_only Texture2D %253 = OpLoad %252 
                                     sampler %257 = OpLoad %256 
                  read_only Texture2DSampled %260 = OpSampledImage %253 %257 
                                       f32_3 %261 = OpLoad %242 
                                         f32 %262 = OpCompositeExtract %261 2 
                                         f32 %263 = OpImageSampleDrefExplicitLod %260 %261 %262 Lod %6 
                                                      OpStore %178 %263 
                                Uniform f32* %264 = OpAccessChain %22 %200 %71 
                                         f32 %265 = OpLoad %264 
                                         f32 %266 = OpFNegate %265 
                                         f32 %267 = OpFAdd %266 %131 
                                Private f32* %268 = OpAccessChain %36 %71 
                                                      OpStore %268 %267 
                                         f32 %269 = OpLoad %178 
                                Private f32* %270 = OpAccessChain %36 %71 
                                         f32 %271 = OpLoad %270 
                                         f32 %272 = OpFMul %269 %271 
                                Uniform f32* %273 = OpAccessChain %22 %200 %71 
                                         f32 %274 = OpLoad %273 
                                         f32 %275 = OpFAdd %272 %274 
                                Private f32* %276 = OpAccessChain %36 %71 
                                                      OpStore %276 %275 
                                Private f32* %277 = OpAccessChain %36 %71 
                                         f32 %278 = OpLoad %277 
                                         f32 %279 = OpFNegate %278 
                                         f32 %280 = OpFAdd %279 %131 
                                                      OpStore %119 %280 
                                Private f32* %281 = OpAccessChain %9 %71 
                                         f32 %282 = OpLoad %281 
                                         f32 %283 = OpLoad %119 
                                         f32 %284 = OpFMul %282 %283 
                                Private f32* %285 = OpAccessChain %36 %71 
                                         f32 %286 = OpLoad %285 
                                         f32 %287 = OpFAdd %284 %286 
                                Private f32* %288 = OpAccessChain %36 %71 
                                                      OpStore %288 %287 
                                         f32 %289 = OpLoad %30 
                                Private f32* %290 = OpAccessChain %36 %71 
                                         f32 %291 = OpLoad %290 
                                         f32 %292 = OpFMul %289 %291 
                                Private f32* %293 = OpAccessChain %9 %71 
                                                      OpStore %293 %292 
                              Uniform f32_4* %295 = OpAccessChain %22 %294 
                                       f32_4 %296 = OpLoad %295 
                                       f32_3 %297 = OpVectorShuffle %296 %296 0 1 2 
                              Uniform f32_4* %299 = OpAccessChain %22 %298 
                                       f32_4 %300 = OpLoad %299 
                                       f32_3 %301 = OpVectorShuffle %300 %300 0 1 2 
                                       f32_3 %302 = OpFMul %297 %301 
                                                      OpStore %63 %302 
                                       f32_3 %303 = OpLoad %9 
                                       f32_3 %304 = OpVectorShuffle %303 %303 0 0 0 
                                       f32_3 %305 = OpLoad %63 
                                       f32_3 %306 = OpFMul %304 %305 
                                                      OpStore %9 %306 
                                Uniform f32* %308 = OpAccessChain %22 %307 
                                         f32 %309 = OpLoad %308 
                                         f32 %310 = OpFNegate %309 
                                         f32 %311 = OpFMul %310 %108 
                                Uniform f32* %313 = OpAccessChain %22 %312 
                                         f32 %314 = OpLoad %313 
                                         f32 %315 = OpFAdd %311 %314 
                                                      OpStore %119 %315 
                                         f32 %317 = OpLoad %119 
                                         f32 %318 = OpFNegate %317 
                                Private f32* %319 = OpAccessChain %36 %78 
                                         f32 %320 = OpLoad %319 
                                         f32 %321 = OpFAdd %318 %320 
                                Private f32* %322 = OpAccessChain %316 %71 
                                                      OpStore %322 %321 
                                Uniform f32* %323 = OpAccessChain %22 %307 
                                         f32 %324 = OpLoad %323 
                                         f32 %325 = OpFMul %324 %108 
                                Uniform f32* %326 = OpAccessChain %22 %312 
                                         f32 %327 = OpLoad %326 
                                         f32 %328 = OpFAdd %325 %327 
                                                      OpStore %47 %328 
                                         f32 %329 = OpLoad %119 
                                         f32 %330 = OpFNegate %329 
                                         f32 %331 = OpLoad %47 
                                         f32 %332 = OpFAdd %330 %331 
                                                      OpStore %119 %332 
                                         f32 %333 = OpLoad %119 
                                         f32 %334 = OpFDiv %131 %333 
                                                      OpStore %119 %334 
                                         f32 %335 = OpLoad %119 
                                Private f32* %336 = OpAccessChain %316 %71 
                                         f32 %337 = OpLoad %336 
                                         f32 %338 = OpFMul %335 %337 
                                Private f32* %339 = OpAccessChain %316 %71 
                                                      OpStore %339 %338 
                                Private f32* %340 = OpAccessChain %316 %71 
                                         f32 %341 = OpLoad %340 
                                         f32 %342 = OpExtInst %1 43 %341 %83 %131 
                                Private f32* %343 = OpAccessChain %316 %71 
                                                      OpStore %343 %342 
                                Private f32* %344 = OpAccessChain %316 %71 
                                         f32 %345 = OpLoad %344 
                                         f32 %346 = OpFMul %345 %143 
                                         f32 %347 = OpFAdd %346 %145 
                                                      OpStore %119 %347 
                                Private f32* %348 = OpAccessChain %316 %71 
                                         f32 %349 = OpLoad %348 
                                Private f32* %350 = OpAccessChain %316 %71 
                                         f32 %351 = OpLoad %350 
                                         f32 %352 = OpFMul %349 %351 
                                Private f32* %353 = OpAccessChain %316 %71 
                                                      OpStore %353 %352 
                                Private f32* %354 = OpAccessChain %316 %71 
                                         f32 %355 = OpLoad %354 
                                         f32 %356 = OpLoad %119 
                                         f32 %357 = OpFMul %355 %356 
                                Private f32* %358 = OpAccessChain %316 %71 
                                                      OpStore %358 %357 
                                Private f32* %359 = OpAccessChain %36 %71 
                                         f32 %360 = OpLoad %359 
                                Private f32* %361 = OpAccessChain %316 %71 
                                         f32 %362 = OpLoad %361 
                                         f32 %363 = OpFMul %360 %362 
                                Private f32* %364 = OpAccessChain %36 %71 
                                                      OpStore %364 %363 
                              Uniform f32_4* %366 = OpAccessChain %22 %365 
                                       f32_4 %367 = OpLoad %366 
                                       f32_3 %368 = OpVectorShuffle %367 %367 0 1 2 
                                       f32_3 %369 = OpFNegate %368 
                              Uniform f32_4* %371 = OpAccessChain %22 %370 
                                       f32_4 %372 = OpLoad %371 
                                       f32_3 %373 = OpVectorShuffle %372 %372 0 1 2 
                                       f32_3 %374 = OpFAdd %369 %373 
                                                      OpStore %316 %374 
                              Uniform f32_4* %375 = OpAccessChain %22 %370 
                                       f32_4 %376 = OpLoad %375 
                                       f32_3 %377 = OpVectorShuffle %376 %376 3 3 3 
                                       f32_3 %378 = OpLoad %316 
                                       f32_3 %379 = OpFMul %377 %378 
                              Uniform f32_4* %380 = OpAccessChain %22 %365 
                                       f32_4 %381 = OpLoad %380 
                                       f32_3 %382 = OpVectorShuffle %381 %381 0 1 2 
                                       f32_3 %383 = OpFAdd %379 %382 
                                                      OpStore %316 %383 
                                       f32_3 %384 = OpLoad %316 
                                       f32_3 %385 = OpFNegate %384 
                              Uniform f32_4* %386 = OpAccessChain %22 %365 
                                       f32_4 %387 = OpLoad %386 
                                       f32_3 %388 = OpVectorShuffle %387 %387 0 1 2 
                                       f32_3 %389 = OpFAdd %385 %388 
                                                      OpStore %63 %389 
                                       f32_3 %390 = OpLoad %36 
                                       f32_3 %391 = OpVectorShuffle %390 %390 0 0 0 
                                       f32_3 %392 = OpLoad %63 
                                       f32_3 %393 = OpFMul %391 %392 
                                       f32_3 %394 = OpLoad %316 
                                       f32_3 %395 = OpFAdd %393 %394 
                                                      OpStore %36 %395 
                         read_only Texture2D %398 = OpLoad %397 
                                     sampler %400 = OpLoad %399 
                  read_only Texture2DSampled %402 = OpSampledImage %398 %400 
                                       f32_2 %405 = OpLoad vs_TEXCOORD0 
                                       f32_4 %406 = OpImageSampleImplicitLod %402 %405 
                                       f32_3 %407 = OpVectorShuffle %406 %406 0 1 2 
                                                      OpStore %396 %407 
                                       f32_3 %408 = OpLoad %396 
                              Uniform f32_4* %410 = OpAccessChain %22 %409 
                                       f32_4 %411 = OpLoad %410 
                                       f32_3 %412 = OpVectorShuffle %411 %411 0 1 2 
                                       f32_3 %413 = OpFMul %408 %412 
                                                      OpStore %63 %413 
                                       f32_3 %415 = OpLoad %63 
                              Uniform f32_4* %416 = OpAccessChain %22 %294 
                                       f32_4 %417 = OpLoad %416 
                                       f32_3 %418 = OpVectorShuffle %417 %417 0 1 2 
                                       f32_3 %419 = OpFMul %415 %418 
                                                      OpStore %414 %419 
                                       f32_3 %420 = OpLoad %414 
                                       f32_3 %421 = OpLoad %36 
                                       f32_3 %422 = OpFMul %420 %421 
                                       f32_3 %423 = OpLoad %9 
                                       f32_3 %424 = OpFAdd %422 %423 
                                                      OpStore %9 %424 
                                       f32_3 %427 = OpLoad vs_TEXCOORD1 
                                       f32_4 %428 = OpLoad %426 
                                       f32_4 %429 = OpVectorShuffle %428 %427 4 5 6 3 
                                                      OpStore %426 %429 
                                Private f32* %430 = OpAccessChain %426 %189 
                                                      OpStore %430 %131 
                              Uniform f32_4* %431 = OpAccessChain %22 %163 
                                       f32_4 %432 = OpLoad %431 
                                       f32_4 %433 = OpLoad %426 
                                         f32 %434 = OpDot %432 %433 
                                Private f32* %435 = OpAccessChain %414 %71 
                                                      OpStore %435 %434 
                              Uniform f32_4* %436 = OpAccessChain %22 %236 
                                       f32_4 %437 = OpLoad %436 
                                       f32_4 %438 = OpLoad %426 
                                         f32 %439 = OpDot %437 %438 
                                Private f32* %440 = OpAccessChain %414 %78 
                                                      OpStore %440 %439 
                              Uniform f32_4* %442 = OpAccessChain %22 %441 
                                       f32_4 %443 = OpLoad %442 
                                       f32_4 %444 = OpLoad %426 
                                         f32 %445 = OpDot %443 %444 
                                Private f32* %446 = OpAccessChain %414 %156 
                                                      OpStore %446 %445 
                                       f32_3 %447 = OpLoad %414 
                                       f32_3 %449 = OpLoad vs_TEXCOORD3 
                                       f32_3 %450 = OpFAdd %447 %449 
                                                      OpStore %414 %450 
                                       f32_3 %451 = OpLoad %414 
                                       f32_3 %453 = OpExtInst %1 40 %451 %452 
                                                      OpStore %414 %453 
                                       f32_3 %454 = OpLoad %414 
                                       f32_3 %455 = OpExtInst %1 30 %454 
                                                      OpStore %124 %455 
                                       f32_3 %456 = OpLoad %124 
                                       f32_3 %459 = OpFMul %456 %458 
                                                      OpStore %124 %459 
                                       f32_3 %460 = OpLoad %124 
                                       f32_3 %461 = OpExtInst %1 29 %460 
                                                      OpStore %124 %461 
                                       f32_3 %462 = OpLoad %124 
                                       f32_3 %465 = OpFMul %462 %464 
                                       f32_3 %468 = OpFAdd %465 %467 
                                                      OpStore %124 %468 
                                       f32_3 %469 = OpLoad %124 
                                       f32_3 %470 = OpExtInst %1 40 %469 %452 
                                                      OpStore %124 %470 
                                       f32_3 %473 = OpLoad %63 
                                       f32_3 %474 = OpLoad %124 
                                       f32_3 %475 = OpFMul %473 %474 
                                       f32_3 %476 = OpLoad %9 
                                       f32_3 %477 = OpFAdd %475 %476 
                                       f32_4 %478 = OpLoad %472 
                                       f32_4 %479 = OpVectorShuffle %478 %477 4 5 6 3 
                                                      OpStore %472 %479 
                                 Output f32* %481 = OpAccessChain %472 %189 
                                                      OpStore %481 %131 
                                                      OpReturn
                                                      OpFunctionEnd
"
}
SubProgram "vulkan hw_tier02 " {
Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "SHADOWS_SCREEN" }
"; SPIR-V
; Version: 1.0
; Generator: Khronos Glslang Reference Front End; 6
; Bound: 214
; Schema: 0
                                                      OpCapability Shader 
                                               %1 = OpExtInstImport "GLSL.std.450" 
                                                      OpMemoryModel Logical GLSL450 
                                                      OpEntryPoint Vertex %4 "main" %11 %53 %87 %97 %113 %117 %155 %195 %204 %207 
                                                      OpName vs_TEXCOORD2 "vs_TEXCOORD2" 
                                                      OpName vs_TEXCOORD0 "vs_TEXCOORD0" 
                                                      OpName vs_TEXCOORD1 "vs_TEXCOORD1" 
                                                      OpName vs_TEXCOORD3 "vs_TEXCOORD3" 
                                                      OpName vs_TEXCOORD5 "vs_TEXCOORD5" 
                                                      OpName vs_TEXCOORD6 "vs_TEXCOORD6" 
                                                      OpDecorate %11 Location 11 
                                                      OpDecorate %16 ArrayStride 16 
                                                      OpDecorate %17 ArrayStride 17 
                                                      OpDecorate %18 ArrayStride 18 
                                                      OpMemberDecorate %19 0 RelaxedPrecision 
                                                      OpMemberDecorate %19 0 Offset 19 
                                                      OpMemberDecorate %19 1 RelaxedPrecision 
                                                      OpMemberDecorate %19 1 Offset 19 
                                                      OpMemberDecorate %19 2 RelaxedPrecision 
                                                      OpMemberDecorate %19 2 Offset 19 
                                                      OpMemberDecorate %19 3 RelaxedPrecision 
                                                      OpMemberDecorate %19 3 Offset 19 
                                                      OpMemberDecorate %19 4 Offset 19 
                                                      OpMemberDecorate %19 5 Offset 19 
                                                      OpMemberDecorate %19 6 Offset 19 
                                                      OpMemberDecorate %19 7 Offset 19 
                                                      OpDecorate %19 Block 
                                                      OpDecorate %21 DescriptorSet 21 
                                                      OpDecorate %21 Binding 21 
                                                      OpDecorate vs_TEXCOORD2 Location 53 
                                                      OpMemberDecorate %85 0 BuiltIn 85 
                                                      OpMemberDecorate %85 1 BuiltIn 85 
                                                      OpMemberDecorate %85 2 BuiltIn 85 
                                                      OpDecorate %85 Block 
                                                      OpDecorate %97 Location 97 
                                                      OpDecorate vs_TEXCOORD0 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD0 Location 113 
                                                      OpDecorate %117 Location 117 
                                                      OpDecorate vs_TEXCOORD1 Location 155 
                                                      OpDecorate %158 RelaxedPrecision 
                                                      OpDecorate %169 RelaxedPrecision 
                                                      OpDecorate %170 RelaxedPrecision 
                                                      OpDecorate %172 RelaxedPrecision 
                                                      OpDecorate %179 RelaxedPrecision 
                                                      OpDecorate %181 RelaxedPrecision 
                                                      OpDecorate %182 RelaxedPrecision 
                                                      OpDecorate %183 RelaxedPrecision 
                                                      OpDecorate %186 RelaxedPrecision 
                                                      OpDecorate %187 RelaxedPrecision 
                                                      OpDecorate %188 RelaxedPrecision 
                                                      OpDecorate %191 RelaxedPrecision 
                                                      OpDecorate %192 RelaxedPrecision 
                                                      OpDecorate %193 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD3 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD3 Location 195 
                                                      OpDecorate %197 RelaxedPrecision 
                                                      OpDecorate %198 RelaxedPrecision 
                                                      OpDecorate %199 RelaxedPrecision 
                                                      OpDecorate %200 RelaxedPrecision 
                                                      OpDecorate %201 RelaxedPrecision 
                                                      OpDecorate %202 RelaxedPrecision 
                                                      OpDecorate %203 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD5 Location 204 
                                                      OpDecorate vs_TEXCOORD6 Location 207 
                                               %2 = OpTypeVoid 
                                               %3 = OpTypeFunction %2 
                                               %6 = OpTypeFloat 32 
                                               %7 = OpTypeVector %6 4 
                                               %8 = OpTypePointer Private %7 
                                Private f32_4* %9 = OpVariable Private 
                                              %10 = OpTypePointer Input %7 
                                 Input f32_4* %11 = OpVariable Input 
                                              %14 = OpTypeInt 32 0 
                                          u32 %15 = OpConstant 4 
                                              %16 = OpTypeArray %7 %15 
                                              %17 = OpTypeArray %7 %15 
                                              %18 = OpTypeArray %7 %15 
                                              %19 = OpTypeStruct %7 %7 %7 %7 %16 %17 %18 %7 
                                              %20 = OpTypePointer Uniform %19 
Uniform struct {f32_4; f32_4; f32_4; f32_4; f32_4[4]; f32_4[4]; f32_4[4]; f32_4;}* %21 = OpVariable Uniform 
                                              %22 = OpTypeInt 32 1 
                                          i32 %23 = OpConstant 4 
                                          i32 %24 = OpConstant 1 
                                              %25 = OpTypePointer Uniform %7 
                                          i32 %29 = OpConstant 0 
                                          i32 %37 = OpConstant 2 
                               Private f32_4* %45 = OpVariable Private 
                                          i32 %47 = OpConstant 3 
                                              %51 = OpTypeVector %6 3 
                                              %52 = OpTypePointer Output %51 
                       Output f32_3* vs_TEXCOORD2 = OpVariable Output 
                                          i32 %65 = OpConstant 6 
                                          u32 %83 = OpConstant 1 
                                              %84 = OpTypeArray %6 %83 
                                              %85 = OpTypeStruct %7 %6 %84 
                                              %86 = OpTypePointer Output %85 
         Output struct {f32_4; f32; f32[1];}* %87 = OpVariable Output 
                                              %95 = OpTypePointer Output %7 
                                 Input f32_4* %97 = OpVariable Input 
                                              %98 = OpTypeVector %6 2 
                                         i32 %101 = OpConstant 7 
                                             %112 = OpTypePointer Output %98 
                       Output f32_2* vs_TEXCOORD0 = OpVariable Output 
                                             %116 = OpTypePointer Input %51 
                                Input f32_3* %117 = OpVariable Input 
                                         i32 %119 = OpConstant 5 
                                         u32 %124 = OpConstant 0 
                                             %125 = OpTypePointer Private %6 
                                         u32 %138 = OpConstant 2 
                                Private f32* %140 = OpVariable Private 
                       Output f32_3* vs_TEXCOORD1 = OpVariable Output 
                                Private f32* %158 = OpVariable Private 
                              Private f32_4* %172 = OpVariable Private 
                                             %178 = OpTypePointer Private %51 
                              Private f32_3* %179 = OpVariable Private 
                       Output f32_3* vs_TEXCOORD3 = OpVariable Output 
                       Output f32_4* vs_TEXCOORD5 = OpVariable Output 
                                         f32 %205 = OpConstant 3.674022E-40 
                                       f32_4 %206 = OpConstantComposite %205 %205 %205 %205 
                       Output f32_4* vs_TEXCOORD6 = OpVariable Output 
                                             %208 = OpTypePointer Output %6 
                                          void %4 = OpFunction None %3 
                                               %5 = OpLabel 
                                        f32_4 %12 = OpLoad %11 
                                        f32_4 %13 = OpVectorShuffle %12 %12 1 1 1 1 
                               Uniform f32_4* %26 = OpAccessChain %21 %23 %24 
                                        f32_4 %27 = OpLoad %26 
                                        f32_4 %28 = OpFMul %13 %27 
                                                      OpStore %9 %28 
                               Uniform f32_4* %30 = OpAccessChain %21 %23 %29 
                                        f32_4 %31 = OpLoad %30 
                                        f32_4 %32 = OpLoad %11 
                                        f32_4 %33 = OpVectorShuffle %32 %32 0 0 0 0 
                                        f32_4 %34 = OpFMul %31 %33 
                                        f32_4 %35 = OpLoad %9 
                                        f32_4 %36 = OpFAdd %34 %35 
                                                      OpStore %9 %36 
                               Uniform f32_4* %38 = OpAccessChain %21 %23 %37 
                                        f32_4 %39 = OpLoad %38 
                                        f32_4 %40 = OpLoad %11 
                                        f32_4 %41 = OpVectorShuffle %40 %40 2 2 2 2 
                                        f32_4 %42 = OpFMul %39 %41 
                                        f32_4 %43 = OpLoad %9 
                                        f32_4 %44 = OpFAdd %42 %43 
                                                      OpStore %9 %44 
                                        f32_4 %46 = OpLoad %9 
                               Uniform f32_4* %48 = OpAccessChain %21 %23 %47 
                                        f32_4 %49 = OpLoad %48 
                                        f32_4 %50 = OpFAdd %46 %49 
                                                      OpStore %45 %50 
                               Uniform f32_4* %54 = OpAccessChain %21 %23 %47 
                                        f32_4 %55 = OpLoad %54 
                                        f32_3 %56 = OpVectorShuffle %55 %55 0 1 2 
                                        f32_4 %57 = OpLoad %11 
                                        f32_3 %58 = OpVectorShuffle %57 %57 3 3 3 
                                        f32_3 %59 = OpFMul %56 %58 
                                        f32_4 %60 = OpLoad %9 
                                        f32_3 %61 = OpVectorShuffle %60 %60 0 1 2 
                                        f32_3 %62 = OpFAdd %59 %61 
                                                      OpStore vs_TEXCOORD2 %62 
                                        f32_4 %63 = OpLoad %45 
                                        f32_4 %64 = OpVectorShuffle %63 %63 1 1 1 1 
                               Uniform f32_4* %66 = OpAccessChain %21 %65 %24 
                                        f32_4 %67 = OpLoad %66 
                                        f32_4 %68 = OpFMul %64 %67 
                                                      OpStore %9 %68 
                               Uniform f32_4* %69 = OpAccessChain %21 %65 %29 
                                        f32_4 %70 = OpLoad %69 
                                        f32_4 %71 = OpLoad %45 
                                        f32_4 %72 = OpVectorShuffle %71 %71 0 0 0 0 
                                        f32_4 %73 = OpFMul %70 %72 
                                        f32_4 %74 = OpLoad %9 
                                        f32_4 %75 = OpFAdd %73 %74 
                                                      OpStore %9 %75 
                               Uniform f32_4* %76 = OpAccessChain %21 %65 %37 
                                        f32_4 %77 = OpLoad %76 
                                        f32_4 %78 = OpLoad %45 
                                        f32_4 %79 = OpVectorShuffle %78 %78 2 2 2 2 
                                        f32_4 %80 = OpFMul %77 %79 
                                        f32_4 %81 = OpLoad %9 
                                        f32_4 %82 = OpFAdd %80 %81 
                                                      OpStore %9 %82 
                               Uniform f32_4* %88 = OpAccessChain %21 %65 %47 
                                        f32_4 %89 = OpLoad %88 
                                        f32_4 %90 = OpLoad %45 
                                        f32_4 %91 = OpVectorShuffle %90 %90 3 3 3 3 
                                        f32_4 %92 = OpFMul %89 %91 
                                        f32_4 %93 = OpLoad %9 
                                        f32_4 %94 = OpFAdd %92 %93 
                                Output f32_4* %96 = OpAccessChain %87 %29 
                                                      OpStore %96 %94 
                                        f32_4 %99 = OpLoad %97 
                                       f32_2 %100 = OpVectorShuffle %99 %99 0 1 
                              Uniform f32_4* %102 = OpAccessChain %21 %101 
                                       f32_4 %103 = OpLoad %102 
                                       f32_2 %104 = OpVectorShuffle %103 %103 0 1 
                                       f32_2 %105 = OpFMul %100 %104 
                              Uniform f32_4* %106 = OpAccessChain %21 %101 
                                       f32_4 %107 = OpLoad %106 
                                       f32_2 %108 = OpVectorShuffle %107 %107 2 3 
                                       f32_2 %109 = OpFAdd %105 %108 
                                       f32_4 %110 = OpLoad %9 
                                       f32_4 %111 = OpVectorShuffle %110 %109 4 5 2 3 
                                                      OpStore %9 %111 
                                       f32_4 %114 = OpLoad %9 
                                       f32_2 %115 = OpVectorShuffle %114 %114 0 1 
                                                      OpStore vs_TEXCOORD0 %115 
                                       f32_3 %118 = OpLoad %117 
                              Uniform f32_4* %120 = OpAccessChain %21 %119 %29 
                                       f32_4 %121 = OpLoad %120 
                                       f32_3 %122 = OpVectorShuffle %121 %121 0 1 2 
                                         f32 %123 = OpDot %118 %122 
                                Private f32* %126 = OpAccessChain %9 %124 
                                                      OpStore %126 %123 
                                       f32_3 %127 = OpLoad %117 
                              Uniform f32_4* %128 = OpAccessChain %21 %119 %24 
                                       f32_4 %129 = OpLoad %128 
                                       f32_3 %130 = OpVectorShuffle %129 %129 0 1 2 
                                         f32 %131 = OpDot %127 %130 
                                Private f32* %132 = OpAccessChain %9 %83 
                                                      OpStore %132 %131 
                                       f32_3 %133 = OpLoad %117 
                              Uniform f32_4* %134 = OpAccessChain %21 %119 %37 
                                       f32_4 %135 = OpLoad %134 
                                       f32_3 %136 = OpVectorShuffle %135 %135 0 1 2 
                                         f32 %137 = OpDot %133 %136 
                                Private f32* %139 = OpAccessChain %9 %138 
                                                      OpStore %139 %137 
                                       f32_4 %141 = OpLoad %9 
                                       f32_3 %142 = OpVectorShuffle %141 %141 0 1 2 
                                       f32_4 %143 = OpLoad %9 
                                       f32_3 %144 = OpVectorShuffle %143 %143 0 1 2 
                                         f32 %145 = OpDot %142 %144 
                                                      OpStore %140 %145 
                                         f32 %146 = OpLoad %140 
                                         f32 %147 = OpExtInst %1 32 %146 
                                                      OpStore %140 %147 
                                         f32 %148 = OpLoad %140 
                                       f32_3 %149 = OpCompositeConstruct %148 %148 %148 
                                       f32_4 %150 = OpLoad %9 
                                       f32_3 %151 = OpVectorShuffle %150 %150 0 1 2 
                                       f32_3 %152 = OpFMul %149 %151 
                                       f32_4 %153 = OpLoad %9 
                                       f32_4 %154 = OpVectorShuffle %153 %152 4 5 6 3 
                                                      OpStore %9 %154 
                                       f32_4 %156 = OpLoad %9 
                                       f32_3 %157 = OpVectorShuffle %156 %156 0 1 2 
                                                      OpStore vs_TEXCOORD1 %157 
                                Private f32* %159 = OpAccessChain %9 %83 
                                         f32 %160 = OpLoad %159 
                                Private f32* %161 = OpAccessChain %9 %83 
                                         f32 %162 = OpLoad %161 
                                         f32 %163 = OpFMul %160 %162 
                                                      OpStore %158 %163 
                                Private f32* %164 = OpAccessChain %9 %124 
                                         f32 %165 = OpLoad %164 
                                Private f32* %166 = OpAccessChain %9 %124 
                                         f32 %167 = OpLoad %166 
                                         f32 %168 = OpFMul %165 %167 
                                         f32 %169 = OpLoad %158 
                                         f32 %170 = OpFNegate %169 
                                         f32 %171 = OpFAdd %168 %170 
                                                      OpStore %158 %171 
                                       f32_4 %173 = OpLoad %9 
                                       f32_4 %174 = OpVectorShuffle %173 %173 1 2 2 0 
                                       f32_4 %175 = OpLoad %9 
                                       f32_4 %176 = OpVectorShuffle %175 %175 0 1 2 2 
                                       f32_4 %177 = OpFMul %174 %176 
                                                      OpStore %172 %177 
                              Uniform f32_4* %180 = OpAccessChain %21 %29 
                                       f32_4 %181 = OpLoad %180 
                                       f32_4 %182 = OpLoad %172 
                                         f32 %183 = OpDot %181 %182 
                                Private f32* %184 = OpAccessChain %179 %124 
                                                      OpStore %184 %183 
                              Uniform f32_4* %185 = OpAccessChain %21 %24 
                                       f32_4 %186 = OpLoad %185 
                                       f32_4 %187 = OpLoad %172 
                                         f32 %188 = OpDot %186 %187 
                                Private f32* %189 = OpAccessChain %179 %83 
                                                      OpStore %189 %188 
                              Uniform f32_4* %190 = OpAccessChain %21 %37 
                                       f32_4 %191 = OpLoad %190 
                                       f32_4 %192 = OpLoad %172 
                                         f32 %193 = OpDot %191 %192 
                                Private f32* %194 = OpAccessChain %179 %138 
                                                      OpStore %194 %193 
                              Uniform f32_4* %196 = OpAccessChain %21 %47 
                                       f32_4 %197 = OpLoad %196 
                                       f32_3 %198 = OpVectorShuffle %197 %197 0 1 2 
                                         f32 %199 = OpLoad %158 
                                       f32_3 %200 = OpCompositeConstruct %199 %199 %199 
                                       f32_3 %201 = OpFMul %198 %200 
                                       f32_3 %202 = OpLoad %179 
                                       f32_3 %203 = OpFAdd %201 %202 
                                                      OpStore vs_TEXCOORD3 %203 
                                                      OpStore vs_TEXCOORD5 %206 
                                                      OpStore vs_TEXCOORD6 %206 
                                 Output f32* %209 = OpAccessChain %87 %29 %83 
                                         f32 %210 = OpLoad %209 
                                         f32 %211 = OpFNegate %210 
                                 Output f32* %212 = OpAccessChain %87 %29 %83 
                                                      OpStore %212 %211 
                                                      OpReturn
                                                      OpFunctionEnd
; SPIR-V
; Version: 1.0
; Generator: Khronos Glslang Reference Front End; 6
; Bound: 483
; Schema: 0
                                                      OpCapability Shader 
                                               %1 = OpExtInstImport "GLSL.std.450" 
                                                      OpMemoryModel Logical GLSL450 
                                                      OpEntryPoint Fragment %4 "main" %11 %57 %404 %448 %472 
                                                      OpExecutionMode %4 OriginUpperLeft 
                                                      OpName vs_TEXCOORD2 "vs_TEXCOORD2" 
                                                      OpName vs_TEXCOORD1 "vs_TEXCOORD1" 
                                                      OpName vs_TEXCOORD0 "vs_TEXCOORD0" 
                                                      OpName vs_TEXCOORD3 "vs_TEXCOORD3" 
                                                      OpDecorate vs_TEXCOORD2 Location 11 
                                                      OpDecorate %17 ArrayStride 17 
                                                      OpDecorate %19 ArrayStride 19 
                                                      OpMemberDecorate %20 0 Offset 20 
                                                      OpMemberDecorate %20 1 RelaxedPrecision 
                                                      OpMemberDecorate %20 1 Offset 20 
                                                      OpMemberDecorate %20 2 RelaxedPrecision 
                                                      OpMemberDecorate %20 2 Offset 20 
                                                      OpMemberDecorate %20 3 RelaxedPrecision 
                                                      OpMemberDecorate %20 3 Offset 20 
                                                      OpMemberDecorate %20 4 RelaxedPrecision 
                                                      OpMemberDecorate %20 4 Offset 20 
                                                      OpMemberDecorate %20 5 Offset 20 
                                                      OpMemberDecorate %20 6 RelaxedPrecision 
                                                      OpMemberDecorate %20 6 Offset 20 
                                                      OpMemberDecorate %20 7 Offset 20 
                                                      OpMemberDecorate %20 8 Offset 20 
                                                      OpMemberDecorate %20 9 RelaxedPrecision 
                                                      OpMemberDecorate %20 9 Offset 20 
                                                      OpMemberDecorate %20 10 RelaxedPrecision 
                                                      OpMemberDecorate %20 10 Offset 20 
                                                      OpMemberDecorate %20 11 RelaxedPrecision 
                                                      OpMemberDecorate %20 11 Offset 20 
                                                      OpMemberDecorate %20 12 RelaxedPrecision 
                                                      OpMemberDecorate %20 12 Offset 20 
                                                      OpMemberDecorate %20 13 RelaxedPrecision 
                                                      OpMemberDecorate %20 13 Offset 20 
                                                      OpMemberDecorate %20 14 RelaxedPrecision 
                                                      OpMemberDecorate %20 14 Offset 20 
                                                      OpMemberDecorate %20 15 RelaxedPrecision 
                                                      OpMemberDecorate %20 15 Offset 20 
                                                      OpMemberDecorate %20 16 RelaxedPrecision 
                                                      OpMemberDecorate %20 16 Offset 20 
                                                      OpMemberDecorate %20 17 RelaxedPrecision 
                                                      OpMemberDecorate %20 17 Offset 20 
                                                      OpDecorate %20 Block 
                                                      OpDecorate %22 DescriptorSet 22 
                                                      OpDecorate %22 Binding 22 
                                                      OpDecorate %36 RelaxedPrecision 
                                                      OpDecorate %44 RelaxedPrecision 
                                                      OpDecorate %45 RelaxedPrecision 
                                                      OpDecorate %47 RelaxedPrecision 
                                                      OpDecorate %48 RelaxedPrecision 
                                                      OpDecorate %49 RelaxedPrecision 
                                                      OpDecorate %50 RelaxedPrecision 
                                                      OpDecorate %51 RelaxedPrecision 
                                                      OpDecorate %52 RelaxedPrecision 
                                                      OpDecorate %53 RelaxedPrecision 
                                                      OpDecorate %54 RelaxedPrecision 
                                                      OpDecorate %55 RelaxedPrecision 
                                                      OpDecorate %56 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD1 Location 57 
                                                      OpDecorate %61 RelaxedPrecision 
                                                      OpDecorate %62 RelaxedPrecision 
                                                      OpDecorate %63 RelaxedPrecision 
                                                      OpDecorate %64 RelaxedPrecision 
                                                      OpDecorate %68 RelaxedPrecision 
                                                      OpDecorate %69 RelaxedPrecision 
                                                      OpDecorate %70 RelaxedPrecision 
                                                      OpDecorate %73 RelaxedPrecision 
                                                      OpDecorate %75 RelaxedPrecision 
                                                      OpDecorate %76 RelaxedPrecision 
                                                      OpDecorate %77 RelaxedPrecision 
                                                      OpDecorate %81 RelaxedPrecision 
                                                      OpDecorate %82 RelaxedPrecision 
                                                      OpDecorate %85 RelaxedPrecision 
                                                      OpDecorate %89 RelaxedPrecision 
                                                      OpDecorate %90 RelaxedPrecision 
                                                      OpDecorate %94 RelaxedPrecision 
                                                      OpDecorate %96 RelaxedPrecision 
                                                      OpDecorate %100 RelaxedPrecision 
                                                      OpDecorate %106 RelaxedPrecision 
                                                      OpDecorate %107 RelaxedPrecision 
                                                      OpDecorate %109 RelaxedPrecision 
                                                      OpDecorate %110 RelaxedPrecision 
                                                      OpDecorate %116 RelaxedPrecision 
                                                      OpDecorate %117 RelaxedPrecision 
                                                      OpDecorate %119 RelaxedPrecision 
                                                      OpDecorate %121 RelaxedPrecision 
                                                      OpDecorate %122 RelaxedPrecision 
                                                      OpDecorate %123 RelaxedPrecision 
                                                      OpDecorate %126 RelaxedPrecision 
                                                      OpDecorate %127 RelaxedPrecision 
                                                      OpDecorate %128 RelaxedPrecision 
                                                      OpDecorate %129 RelaxedPrecision 
                                                      OpDecorate %202 RelaxedPrecision 
                                                      OpDecorate %205 RelaxedPrecision 
                                                      OpDecorate %252 DescriptorSet 252 
                                                      OpDecorate %252 Binding 252 
                                                      OpDecorate %256 DescriptorSet 256 
                                                      OpDecorate %256 Binding 256 
                                                      OpDecorate %265 RelaxedPrecision 
                                                      OpDecorate %266 RelaxedPrecision 
                                                      OpDecorate %267 RelaxedPrecision 
                                                      OpDecorate %271 RelaxedPrecision 
                                                      OpDecorate %274 RelaxedPrecision 
                                                      OpDecorate %278 RelaxedPrecision 
                                                      OpDecorate %279 RelaxedPrecision 
                                                      OpDecorate %280 RelaxedPrecision 
                                                      OpDecorate %283 RelaxedPrecision 
                                                      OpDecorate %286 RelaxedPrecision 
                                                      OpDecorate %291 RelaxedPrecision 
                                                      OpDecorate %296 RelaxedPrecision 
                                                      OpDecorate %297 RelaxedPrecision 
                                                      OpDecorate %300 RelaxedPrecision 
                                                      OpDecorate %301 RelaxedPrecision 
                                                      OpDecorate %302 RelaxedPrecision 
                                                      OpDecorate %305 RelaxedPrecision 
                                                      OpDecorate %309 RelaxedPrecision 
                                                      OpDecorate %310 RelaxedPrecision 
                                                      OpDecorate %311 RelaxedPrecision 
                                                      OpDecorate %314 RelaxedPrecision 
                                                      OpDecorate %315 RelaxedPrecision 
                                                      OpDecorate %316 RelaxedPrecision 
                                                      OpDecorate %317 RelaxedPrecision 
                                                      OpDecorate %318 RelaxedPrecision 
                                                      OpDecorate %320 RelaxedPrecision 
                                                      OpDecorate %321 RelaxedPrecision 
                                                      OpDecorate %324 RelaxedPrecision 
                                                      OpDecorate %325 RelaxedPrecision 
                                                      OpDecorate %327 RelaxedPrecision 
                                                      OpDecorate %328 RelaxedPrecision 
                                                      OpDecorate %329 RelaxedPrecision 
                                                      OpDecorate %330 RelaxedPrecision 
                                                      OpDecorate %331 RelaxedPrecision 
                                                      OpDecorate %332 RelaxedPrecision 
                                                      OpDecorate %333 RelaxedPrecision 
                                                      OpDecorate %334 RelaxedPrecision 
                                                      OpDecorate %335 RelaxedPrecision 
                                                      OpDecorate %337 RelaxedPrecision 
                                                      OpDecorate %338 RelaxedPrecision 
                                                      OpDecorate %341 RelaxedPrecision 
                                                      OpDecorate %342 RelaxedPrecision 
                                                      OpDecorate %345 RelaxedPrecision 
                                                      OpDecorate %346 RelaxedPrecision 
                                                      OpDecorate %347 RelaxedPrecision 
                                                      OpDecorate %349 RelaxedPrecision 
                                                      OpDecorate %351 RelaxedPrecision 
                                                      OpDecorate %352 RelaxedPrecision 
                                                      OpDecorate %355 RelaxedPrecision 
                                                      OpDecorate %356 RelaxedPrecision 
                                                      OpDecorate %357 RelaxedPrecision 
                                                      OpDecorate %360 RelaxedPrecision 
                                                      OpDecorate %362 RelaxedPrecision 
                                                      OpDecorate %363 RelaxedPrecision 
                                                      OpDecorate %367 RelaxedPrecision 
                                                      OpDecorate %368 RelaxedPrecision 
                                                      OpDecorate %369 RelaxedPrecision 
                                                      OpDecorate %372 RelaxedPrecision 
                                                      OpDecorate %373 RelaxedPrecision 
                                                      OpDecorate %374 RelaxedPrecision 
                                                      OpDecorate %376 RelaxedPrecision 
                                                      OpDecorate %377 RelaxedPrecision 
                                                      OpDecorate %378 RelaxedPrecision 
                                                      OpDecorate %379 RelaxedPrecision 
                                                      OpDecorate %381 RelaxedPrecision 
                                                      OpDecorate %382 RelaxedPrecision 
                                                      OpDecorate %383 RelaxedPrecision 
                                                      OpDecorate %384 RelaxedPrecision 
                                                      OpDecorate %385 RelaxedPrecision 
                                                      OpDecorate %387 RelaxedPrecision 
                                                      OpDecorate %388 RelaxedPrecision 
                                                      OpDecorate %389 RelaxedPrecision 
                                                      OpDecorate %390 RelaxedPrecision 
                                                      OpDecorate %391 RelaxedPrecision 
                                                      OpDecorate %392 RelaxedPrecision 
                                                      OpDecorate %393 RelaxedPrecision 
                                                      OpDecorate %394 RelaxedPrecision 
                                                      OpDecorate %395 RelaxedPrecision 
                                                      OpDecorate %396 RelaxedPrecision 
                                                      OpDecorate %397 RelaxedPrecision 
                                                      OpDecorate %397 DescriptorSet 397 
                                                      OpDecorate %397 Binding 397 
                                                      OpDecorate %398 RelaxedPrecision 
                                                      OpDecorate %399 RelaxedPrecision 
                                                      OpDecorate %399 DescriptorSet 399 
                                                      OpDecorate %399 Binding 399 
                                                      OpDecorate %400 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD0 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD0 Location 404 
                                                      OpDecorate %405 RelaxedPrecision 
                                                      OpDecorate %406 RelaxedPrecision 
                                                      OpDecorate %407 RelaxedPrecision 
                                                      OpDecorate %408 RelaxedPrecision 
                                                      OpDecorate %411 RelaxedPrecision 
                                                      OpDecorate %412 RelaxedPrecision 
                                                      OpDecorate %413 RelaxedPrecision 
                                                      OpDecorate %414 RelaxedPrecision 
                                                      OpDecorate %415 RelaxedPrecision 
                                                      OpDecorate %417 RelaxedPrecision 
                                                      OpDecorate %418 RelaxedPrecision 
                                                      OpDecorate %419 RelaxedPrecision 
                                                      OpDecorate %420 RelaxedPrecision 
                                                      OpDecorate %421 RelaxedPrecision 
                                                      OpDecorate %422 RelaxedPrecision 
                                                      OpDecorate %432 RelaxedPrecision 
                                                      OpDecorate %437 RelaxedPrecision 
                                                      OpDecorate %443 RelaxedPrecision 
                                                      OpDecorate %447 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD3 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD3 Location 448 
                                                      OpDecorate %449 RelaxedPrecision 
                                                      OpDecorate %450 RelaxedPrecision 
                                                      OpDecorate %451 RelaxedPrecision 
                                                      OpDecorate %453 RelaxedPrecision 
                                                      OpDecorate %454 RelaxedPrecision 
                                                      OpDecorate %455 RelaxedPrecision 
                                                      OpDecorate %472 RelaxedPrecision 
                                                      OpDecorate %472 Location 472 
                                                      OpDecorate %473 RelaxedPrecision 
                                               %2 = OpTypeVoid 
                                               %3 = OpTypeFunction %2 
                                               %6 = OpTypeFloat 32 
                                               %7 = OpTypeVector %6 3 
                                               %8 = OpTypePointer Private %7 
                                Private f32_3* %9 = OpVariable Private 
                                              %10 = OpTypePointer Input %7 
                        Input f32_3* vs_TEXCOORD2 = OpVariable Input 
                                              %14 = OpTypeVector %6 4 
                                              %15 = OpTypeInt 32 0 
                                          u32 %16 = OpConstant 16 
                                              %17 = OpTypeArray %14 %16 
                                          u32 %18 = OpConstant 4 
                                              %19 = OpTypeArray %14 %18 
                                              %20 = OpTypeStruct %7 %14 %14 %14 %14 %17 %14 %14 %19 %14 %14 %14 %6 %14 %14 %6 %6 %6 
                                              %21 = OpTypePointer Uniform %20 
Uniform struct {f32_3; f32_4; f32_4; f32_4; f32_4; f32_4[16]; f32_4; f32_4; f32_4[4]; f32_4; f32_4; f32_4; f32; f32_4; f32_4; f32; f32; f32;}* %22 = OpVariable Uniform 
                                              %23 = OpTypeInt 32 1 
                                          i32 %24 = OpConstant 0 
                                              %25 = OpTypePointer Uniform %7 
                                              %29 = OpTypePointer Private %6 
                                 Private f32* %30 = OpVariable Private 
                               Private f32_3* %36 = OpVariable Private 
                                          i32 %41 = OpConstant 1 
                                              %42 = OpTypePointer Uniform %14 
                                 Private f32* %47 = OpVariable Private 
                        Input f32_3* vs_TEXCOORD1 = OpVariable Input 
                               Private f32_3* %63 = OpVariable Private 
                                          u32 %71 = OpConstant 0 
                                          u32 %78 = OpConstant 1 
                                              %80 = OpTypeVector %6 2 
                                          f32 %83 = OpConstant 3.674022E-40 
                                        f32_2 %84 = OpConstantComposite %83 %83 
                                          i32 %91 = OpConstant 12 
                                              %92 = OpTypePointer Uniform %6 
                                          f32 %95 = OpConstant 3.674022E-40 
                                         i32 %104 = OpConstant 17 
                                         f32 %108 = OpConstant 3.674022E-40 
                                         f32 %113 = OpConstant 3.674022E-40 
                                Private f32* %119 = OpVariable Private 
                              Private f32_3* %124 = OpVariable Private 
                                         f32 %131 = OpConstant 3.674022E-40 
                                         f32 %143 = OpConstant 3.674022E-40 
                                         f32 %145 = OpConstant 3.674022E-40 
                                         i32 %155 = OpConstant 8 
                                         u32 %156 = OpConstant 2 
                                         i32 %163 = OpConstant 2 
                                         i32 %172 = OpConstant 7 
                                Private f32* %178 = OpVariable Private 
                                         u32 %189 = OpConstant 3 
                                         i32 %200 = OpConstant 6 
                                         i32 %214 = OpConstant 5 
                                         i32 %236 = OpConstant 3 
                                             %241 = OpTypePointer Function %7 
                                             %250 = OpTypeImage %6 Dim2D 0 0 0 1 Unknown 
                                             %251 = OpTypePointer UniformConstant %250 
        UniformConstant read_only Texture2D* %252 = OpVariable UniformConstant 
                                             %254 = OpTypeSampler 
                                             %255 = OpTypePointer UniformConstant %254 
                    UniformConstant sampler* %256 = OpVariable UniformConstant 
                                             %258 = OpTypeImage %6 Dim2D 1 0 0 1 Unknown 
                                             %259 = OpTypeSampledImage %258 
                                         i32 %294 = OpConstant 9 
                                         i32 %298 = OpConstant 10 
                                         i32 %307 = OpConstant 16 
                                         i32 %312 = OpConstant 15 
                              Private f32_3* %316 = OpVariable Private 
                                         i32 %365 = OpConstant 13 
                                         i32 %370 = OpConstant 14 
                              Private f32_3* %396 = OpVariable Private 
        UniformConstant read_only Texture2D* %397 = OpVariable UniformConstant 
                    UniformConstant sampler* %399 = OpVariable UniformConstant 
                                             %401 = OpTypeSampledImage %250 
                                             %403 = OpTypePointer Input %80 
                        Input f32_2* vs_TEXCOORD0 = OpVariable Input 
                                         i32 %409 = OpConstant 11 
                              Private f32_3* %414 = OpVariable Private 
                                             %425 = OpTypePointer Private %14 
                              Private f32_4* %426 = OpVariable Private 
                                         i32 %441 = OpConstant 4 
                        Input f32_3* vs_TEXCOORD3 = OpVariable Input 
                                       f32_3 %452 = OpConstantComposite %83 %83 %83 
                                         f32 %457 = OpConstant 3.674022E-40 
                                       f32_3 %458 = OpConstantComposite %457 %457 %457 
                                         f32 %463 = OpConstant 3.674022E-40 
                                       f32_3 %464 = OpConstantComposite %463 %463 %463 
                                         f32 %466 = OpConstant 3.674022E-40 
                                       f32_3 %467 = OpConstantComposite %466 %466 %466 
                                             %471 = OpTypePointer Output %14 
                               Output f32_4* %472 = OpVariable Output 
                                             %480 = OpTypePointer Output %6 
                                          void %4 = OpFunction None %3 
                                               %5 = OpLabel 
                             Function f32_3* %242 = OpVariable Function 
                                        f32_3 %12 = OpLoad vs_TEXCOORD2 
                                        f32_3 %13 = OpFNegate %12 
                               Uniform f32_3* %26 = OpAccessChain %22 %24 
                                        f32_3 %27 = OpLoad %26 
                                        f32_3 %28 = OpFAdd %13 %27 
                                                      OpStore %9 %28 
                                        f32_3 %31 = OpLoad %9 
                                        f32_3 %32 = OpLoad %9 
                                          f32 %33 = OpDot %31 %32 
                                                      OpStore %30 %33 
                                          f32 %34 = OpLoad %30 
                                          f32 %35 = OpExtInst %1 32 %34 
                                                      OpStore %30 %35 
                                        f32_3 %37 = OpLoad %9 
                                          f32 %38 = OpLoad %30 
                                        f32_3 %39 = OpCompositeConstruct %38 %38 %38 
                                        f32_3 %40 = OpFMul %37 %39 
                               Uniform f32_4* %43 = OpAccessChain %22 %41 
                                        f32_4 %44 = OpLoad %43 
                                        f32_3 %45 = OpVectorShuffle %44 %44 0 1 2 
                                        f32_3 %46 = OpFAdd %40 %45 
                                                      OpStore %36 %46 
                                        f32_3 %48 = OpLoad %36 
                                        f32_3 %49 = OpLoad %36 
                                          f32 %50 = OpDot %48 %49 
                                                      OpStore %47 %50 
                                          f32 %51 = OpLoad %47 
                                          f32 %52 = OpExtInst %1 32 %51 
                                                      OpStore %47 %52 
                                          f32 %53 = OpLoad %47 
                                        f32_3 %54 = OpCompositeConstruct %53 %53 %53 
                                        f32_3 %55 = OpLoad %36 
                                        f32_3 %56 = OpFMul %54 %55 
                                                      OpStore %36 %56 
                                        f32_3 %58 = OpLoad vs_TEXCOORD1 
                                        f32_3 %59 = OpLoad vs_TEXCOORD1 
                                          f32 %60 = OpDot %58 %59 
                                                      OpStore %47 %60 
                                          f32 %61 = OpLoad %47 
                                          f32 %62 = OpExtInst %1 32 %61 
                                                      OpStore %47 %62 
                                          f32 %64 = OpLoad %47 
                                        f32_3 %65 = OpCompositeConstruct %64 %64 %64 
                                        f32_3 %66 = OpLoad vs_TEXCOORD1 
                                        f32_3 %67 = OpFMul %65 %66 
                                                      OpStore %63 %67 
                                        f32_3 %68 = OpLoad %63 
                                        f32_3 %69 = OpLoad %36 
                                          f32 %70 = OpDot %68 %69 
                                 Private f32* %72 = OpAccessChain %36 %71 
                                                      OpStore %72 %70 
                                        f32_3 %73 = OpLoad %63 
                               Uniform f32_4* %74 = OpAccessChain %22 %41 
                                        f32_4 %75 = OpLoad %74 
                                        f32_3 %76 = OpVectorShuffle %75 %75 0 1 2 
                                          f32 %77 = OpDot %73 %76 
                                 Private f32* %79 = OpAccessChain %36 %78 
                                                      OpStore %79 %77 
                                        f32_3 %81 = OpLoad %36 
                                        f32_2 %82 = OpVectorShuffle %81 %81 0 1 
                                        f32_2 %85 = OpExtInst %1 40 %82 %84 
                                        f32_3 %86 = OpLoad %36 
                                        f32_3 %87 = OpVectorShuffle %86 %85 3 4 2 
                                                      OpStore %36 %87 
                                 Private f32* %88 = OpAccessChain %36 %71 
                                          f32 %89 = OpLoad %88 
                                          f32 %90 = OpExtInst %1 30 %89 
                                                      OpStore %30 %90 
                                 Uniform f32* %93 = OpAccessChain %22 %91 
                                          f32 %94 = OpLoad %93 
                                          f32 %96 = OpFMul %94 %95 
                                 Private f32* %97 = OpAccessChain %36 %71 
                                                      OpStore %97 %96 
                                          f32 %98 = OpLoad %30 
                                 Private f32* %99 = OpAccessChain %36 %71 
                                         f32 %100 = OpLoad %99 
                                         f32 %101 = OpFMul %98 %100 
                                                      OpStore %30 %101 
                                         f32 %102 = OpLoad %30 
                                         f32 %103 = OpExtInst %1 29 %102 
                                                      OpStore %30 %103 
                                Uniform f32* %105 = OpAccessChain %22 %104 
                                         f32 %106 = OpLoad %105 
                                         f32 %107 = OpFNegate %106 
                                         f32 %109 = OpFMul %107 %108 
                                         f32 %110 = OpFAdd %109 %108 
                                Private f32* %111 = OpAccessChain %36 %71 
                                                      OpStore %111 %110 
                                         f32 %112 = OpLoad %30 
                                         f32 %114 = OpFMul %112 %113 
                                Private f32* %115 = OpAccessChain %36 %71 
                                         f32 %116 = OpLoad %115 
                                         f32 %117 = OpFNegate %116 
                                         f32 %118 = OpFAdd %114 %117 
                                                      OpStore %30 %118 
                                Uniform f32* %120 = OpAccessChain %22 %104 
                                         f32 %121 = OpLoad %120 
                                         f32 %122 = OpFMul %121 %108 
                                         f32 %123 = OpFAdd %122 %108 
                                                      OpStore %119 %123 
                                Private f32* %125 = OpAccessChain %36 %71 
                                         f32 %126 = OpLoad %125 
                                         f32 %127 = OpFNegate %126 
                                         f32 %128 = OpLoad %119 
                                         f32 %129 = OpFAdd %127 %128 
                                Private f32* %130 = OpAccessChain %124 %71 
                                                      OpStore %130 %129 
                                Private f32* %132 = OpAccessChain %124 %71 
                                         f32 %133 = OpLoad %132 
                                         f32 %134 = OpFDiv %131 %133 
                                Private f32* %135 = OpAccessChain %124 %71 
                                                      OpStore %135 %134 
                                         f32 %136 = OpLoad %30 
                                Private f32* %137 = OpAccessChain %124 %71 
                                         f32 %138 = OpLoad %137 
                                         f32 %139 = OpFMul %136 %138 
                                                      OpStore %30 %139 
                                         f32 %140 = OpLoad %30 
                                         f32 %141 = OpExtInst %1 43 %140 %83 %131 
                                                      OpStore %30 %141 
                                         f32 %142 = OpLoad %30 
                                         f32 %144 = OpFMul %142 %143 
                                         f32 %146 = OpFAdd %144 %145 
                                Private f32* %147 = OpAccessChain %124 %71 
                                                      OpStore %147 %146 
                                         f32 %148 = OpLoad %30 
                                         f32 %149 = OpLoad %30 
                                         f32 %150 = OpFMul %148 %149 
                                                      OpStore %30 %150 
                                         f32 %151 = OpLoad %30 
                                Private f32* %152 = OpAccessChain %124 %71 
                                         f32 %153 = OpLoad %152 
                                         f32 %154 = OpFMul %151 %153 
                                                      OpStore %30 %154 
                                Uniform f32* %157 = OpAccessChain %22 %155 %24 %156 
                                         f32 %158 = OpLoad %157 
                                Private f32* %159 = OpAccessChain %124 %71 
                                                      OpStore %159 %158 
                                Uniform f32* %160 = OpAccessChain %22 %155 %41 %156 
                                         f32 %161 = OpLoad %160 
                                Private f32* %162 = OpAccessChain %124 %78 
                                                      OpStore %162 %161 
                                Uniform f32* %164 = OpAccessChain %22 %155 %163 %156 
                                         f32 %165 = OpLoad %164 
                                Private f32* %166 = OpAccessChain %124 %156 
                                                      OpStore %166 %165 
                                       f32_3 %167 = OpLoad %9 
                                       f32_3 %168 = OpLoad %124 
                                         f32 %169 = OpDot %167 %168 
                                Private f32* %170 = OpAccessChain %9 %71 
                                                      OpStore %170 %169 
                                       f32_3 %171 = OpLoad vs_TEXCOORD2 
                              Uniform f32_4* %173 = OpAccessChain %22 %172 
                                       f32_4 %174 = OpLoad %173 
                                       f32_3 %175 = OpVectorShuffle %174 %174 0 1 2 
                                       f32_3 %176 = OpFNegate %175 
                                       f32_3 %177 = OpFAdd %171 %176 
                                                      OpStore %124 %177 
                                       f32_3 %179 = OpLoad %124 
                                       f32_3 %180 = OpLoad %124 
                                         f32 %181 = OpDot %179 %180 
                                                      OpStore %178 %181 
                                         f32 %182 = OpLoad %178 
                                         f32 %183 = OpExtInst %1 31 %182 
                                                      OpStore %178 %183 
                                Private f32* %184 = OpAccessChain %9 %71 
                                         f32 %185 = OpLoad %184 
                                         f32 %186 = OpFNegate %185 
                                         f32 %187 = OpLoad %178 
                                         f32 %188 = OpFAdd %186 %187 
                                                      OpStore %178 %188 
                                Uniform f32* %190 = OpAccessChain %22 %172 %189 
                                         f32 %191 = OpLoad %190 
                                         f32 %192 = OpLoad %178 
                                         f32 %193 = OpFMul %191 %192 
                                Private f32* %194 = OpAccessChain %9 %71 
                                         f32 %195 = OpLoad %194 
                                         f32 %196 = OpFAdd %193 %195 
                                Private f32* %197 = OpAccessChain %9 %71 
                                                      OpStore %197 %196 
                                Private f32* %198 = OpAccessChain %9 %71 
                                         f32 %199 = OpLoad %198 
                                Uniform f32* %201 = OpAccessChain %22 %200 %156 
                                         f32 %202 = OpLoad %201 
                                         f32 %203 = OpFMul %199 %202 
                                Uniform f32* %204 = OpAccessChain %22 %200 %189 
                                         f32 %205 = OpLoad %204 
                                         f32 %206 = OpFAdd %203 %205 
                                Private f32* %207 = OpAccessChain %9 %71 
                                                      OpStore %207 %206 
                                Private f32* %208 = OpAccessChain %9 %71 
                                         f32 %209 = OpLoad %208 
                                         f32 %210 = OpExtInst %1 43 %209 %83 %131 
                                Private f32* %211 = OpAccessChain %9 %71 
                                                      OpStore %211 %210 
                                       f32_3 %212 = OpLoad vs_TEXCOORD2 
                                       f32_3 %213 = OpVectorShuffle %212 %212 1 1 1 
                              Uniform f32_4* %215 = OpAccessChain %22 %214 %41 
                                       f32_4 %216 = OpLoad %215 
                                       f32_3 %217 = OpVectorShuffle %216 %216 0 1 2 
                                       f32_3 %218 = OpFMul %213 %217 
                                                      OpStore %124 %218 
                              Uniform f32_4* %219 = OpAccessChain %22 %214 %24 
                                       f32_4 %220 = OpLoad %219 
                                       f32_3 %221 = OpVectorShuffle %220 %220 0 1 2 
                                       f32_3 %222 = OpLoad vs_TEXCOORD2 
                                       f32_3 %223 = OpVectorShuffle %222 %222 0 0 0 
                                       f32_3 %224 = OpFMul %221 %223 
                                       f32_3 %225 = OpLoad %124 
                                       f32_3 %226 = OpFAdd %224 %225 
                                                      OpStore %124 %226 
                              Uniform f32_4* %227 = OpAccessChain %22 %214 %163 
                                       f32_4 %228 = OpLoad %227 
                                       f32_3 %229 = OpVectorShuffle %228 %228 0 1 2 
                                       f32_3 %230 = OpLoad vs_TEXCOORD2 
                                       f32_3 %231 = OpVectorShuffle %230 %230 2 2 2 
                                       f32_3 %232 = OpFMul %229 %231 
                                       f32_3 %233 = OpLoad %124 
                                       f32_3 %234 = OpFAdd %232 %233 
                                                      OpStore %124 %234 
                                       f32_3 %235 = OpLoad %124 
                              Uniform f32_4* %237 = OpAccessChain %22 %214 %236 
                                       f32_4 %238 = OpLoad %237 
                                       f32_3 %239 = OpVectorShuffle %238 %238 0 1 2 
                                       f32_3 %240 = OpFAdd %235 %239 
                                                      OpStore %124 %240 
                                       f32_3 %243 = OpLoad %124 
                                       f32_2 %244 = OpVectorShuffle %243 %243 0 1 
                                Private f32* %245 = OpAccessChain %124 %156 
                                         f32 %246 = OpLoad %245 
                                         f32 %247 = OpCompositeExtract %244 0 
                                         f32 %248 = OpCompositeExtract %244 1 
                                       f32_3 %249 = OpCompositeConstruct %247 %248 %246 
                                                      OpStore %242 %249 
                         read_only Texture2D %253 = OpLoad %252 
                                     sampler %257 = OpLoad %256 
                  read_only Texture2DSampled %260 = OpSampledImage %253 %257 
                                       f32_3 %261 = OpLoad %242 
                                         f32 %262 = OpCompositeExtract %261 2 
                                         f32 %263 = OpImageSampleDrefExplicitLod %260 %261 %262 Lod %6 
                                                      OpStore %178 %263 
                                Uniform f32* %264 = OpAccessChain %22 %200 %71 
                                         f32 %265 = OpLoad %264 
                                         f32 %266 = OpFNegate %265 
                                         f32 %267 = OpFAdd %266 %131 
                                Private f32* %268 = OpAccessChain %36 %71 
                                                      OpStore %268 %267 
                                         f32 %269 = OpLoad %178 
                                Private f32* %270 = OpAccessChain %36 %71 
                                         f32 %271 = OpLoad %270 
                                         f32 %272 = OpFMul %269 %271 
                                Uniform f32* %273 = OpAccessChain %22 %200 %71 
                                         f32 %274 = OpLoad %273 
                                         f32 %275 = OpFAdd %272 %274 
                                Private f32* %276 = OpAccessChain %36 %71 
                                                      OpStore %276 %275 
                                Private f32* %277 = OpAccessChain %36 %71 
                                         f32 %278 = OpLoad %277 
                                         f32 %279 = OpFNegate %278 
                                         f32 %280 = OpFAdd %279 %131 
                                                      OpStore %119 %280 
                                Private f32* %281 = OpAccessChain %9 %71 
                                         f32 %282 = OpLoad %281 
                                         f32 %283 = OpLoad %119 
                                         f32 %284 = OpFMul %282 %283 
                                Private f32* %285 = OpAccessChain %36 %71 
                                         f32 %286 = OpLoad %285 
                                         f32 %287 = OpFAdd %284 %286 
                                Private f32* %288 = OpAccessChain %36 %71 
                                                      OpStore %288 %287 
                                         f32 %289 = OpLoad %30 
                                Private f32* %290 = OpAccessChain %36 %71 
                                         f32 %291 = OpLoad %290 
                                         f32 %292 = OpFMul %289 %291 
                                Private f32* %293 = OpAccessChain %9 %71 
                                                      OpStore %293 %292 
                              Uniform f32_4* %295 = OpAccessChain %22 %294 
                                       f32_4 %296 = OpLoad %295 
                                       f32_3 %297 = OpVectorShuffle %296 %296 0 1 2 
                              Uniform f32_4* %299 = OpAccessChain %22 %298 
                                       f32_4 %300 = OpLoad %299 
                                       f32_3 %301 = OpVectorShuffle %300 %300 0 1 2 
                                       f32_3 %302 = OpFMul %297 %301 
                                                      OpStore %63 %302 
                                       f32_3 %303 = OpLoad %9 
                                       f32_3 %304 = OpVectorShuffle %303 %303 0 0 0 
                                       f32_3 %305 = OpLoad %63 
                                       f32_3 %306 = OpFMul %304 %305 
                                                      OpStore %9 %306 
                                Uniform f32* %308 = OpAccessChain %22 %307 
                                         f32 %309 = OpLoad %308 
                                         f32 %310 = OpFNegate %309 
                                         f32 %311 = OpFMul %310 %108 
                                Uniform f32* %313 = OpAccessChain %22 %312 
                                         f32 %314 = OpLoad %313 
                                         f32 %315 = OpFAdd %311 %314 
                                                      OpStore %119 %315 
                                         f32 %317 = OpLoad %119 
                                         f32 %318 = OpFNegate %317 
                                Private f32* %319 = OpAccessChain %36 %78 
                                         f32 %320 = OpLoad %319 
                                         f32 %321 = OpFAdd %318 %320 
                                Private f32* %322 = OpAccessChain %316 %71 
                                                      OpStore %322 %321 
                                Uniform f32* %323 = OpAccessChain %22 %307 
                                         f32 %324 = OpLoad %323 
                                         f32 %325 = OpFMul %324 %108 
                                Uniform f32* %326 = OpAccessChain %22 %312 
                                         f32 %327 = OpLoad %326 
                                         f32 %328 = OpFAdd %325 %327 
                                                      OpStore %47 %328 
                                         f32 %329 = OpLoad %119 
                                         f32 %330 = OpFNegate %329 
                                         f32 %331 = OpLoad %47 
                                         f32 %332 = OpFAdd %330 %331 
                                                      OpStore %119 %332 
                                         f32 %333 = OpLoad %119 
                                         f32 %334 = OpFDiv %131 %333 
                                                      OpStore %119 %334 
                                         f32 %335 = OpLoad %119 
                                Private f32* %336 = OpAccessChain %316 %71 
                                         f32 %337 = OpLoad %336 
                                         f32 %338 = OpFMul %335 %337 
                                Private f32* %339 = OpAccessChain %316 %71 
                                                      OpStore %339 %338 
                                Private f32* %340 = OpAccessChain %316 %71 
                                         f32 %341 = OpLoad %340 
                                         f32 %342 = OpExtInst %1 43 %341 %83 %131 
                                Private f32* %343 = OpAccessChain %316 %71 
                                                      OpStore %343 %342 
                                Private f32* %344 = OpAccessChain %316 %71 
                                         f32 %345 = OpLoad %344 
                                         f32 %346 = OpFMul %345 %143 
                                         f32 %347 = OpFAdd %346 %145 
                                                      OpStore %119 %347 
                                Private f32* %348 = OpAccessChain %316 %71 
                                         f32 %349 = OpLoad %348 
                                Private f32* %350 = OpAccessChain %316 %71 
                                         f32 %351 = OpLoad %350 
                                         f32 %352 = OpFMul %349 %351 
                                Private f32* %353 = OpAccessChain %316 %71 
                                                      OpStore %353 %352 
                                Private f32* %354 = OpAccessChain %316 %71 
                                         f32 %355 = OpLoad %354 
                                         f32 %356 = OpLoad %119 
                                         f32 %357 = OpFMul %355 %356 
                                Private f32* %358 = OpAccessChain %316 %71 
                                                      OpStore %358 %357 
                                Private f32* %359 = OpAccessChain %36 %71 
                                         f32 %360 = OpLoad %359 
                                Private f32* %361 = OpAccessChain %316 %71 
                                         f32 %362 = OpLoad %361 
                                         f32 %363 = OpFMul %360 %362 
                                Private f32* %364 = OpAccessChain %36 %71 
                                                      OpStore %364 %363 
                              Uniform f32_4* %366 = OpAccessChain %22 %365 
                                       f32_4 %367 = OpLoad %366 
                                       f32_3 %368 = OpVectorShuffle %367 %367 0 1 2 
                                       f32_3 %369 = OpFNegate %368 
                              Uniform f32_4* %371 = OpAccessChain %22 %370 
                                       f32_4 %372 = OpLoad %371 
                                       f32_3 %373 = OpVectorShuffle %372 %372 0 1 2 
                                       f32_3 %374 = OpFAdd %369 %373 
                                                      OpStore %316 %374 
                              Uniform f32_4* %375 = OpAccessChain %22 %370 
                                       f32_4 %376 = OpLoad %375 
                                       f32_3 %377 = OpVectorShuffle %376 %376 3 3 3 
                                       f32_3 %378 = OpLoad %316 
                                       f32_3 %379 = OpFMul %377 %378 
                              Uniform f32_4* %380 = OpAccessChain %22 %365 
                                       f32_4 %381 = OpLoad %380 
                                       f32_3 %382 = OpVectorShuffle %381 %381 0 1 2 
                                       f32_3 %383 = OpFAdd %379 %382 
                                                      OpStore %316 %383 
                                       f32_3 %384 = OpLoad %316 
                                       f32_3 %385 = OpFNegate %384 
                              Uniform f32_4* %386 = OpAccessChain %22 %365 
                                       f32_4 %387 = OpLoad %386 
                                       f32_3 %388 = OpVectorShuffle %387 %387 0 1 2 
                                       f32_3 %389 = OpFAdd %385 %388 
                                                      OpStore %63 %389 
                                       f32_3 %390 = OpLoad %36 
                                       f32_3 %391 = OpVectorShuffle %390 %390 0 0 0 
                                       f32_3 %392 = OpLoad %63 
                                       f32_3 %393 = OpFMul %391 %392 
                                       f32_3 %394 = OpLoad %316 
                                       f32_3 %395 = OpFAdd %393 %394 
                                                      OpStore %36 %395 
                         read_only Texture2D %398 = OpLoad %397 
                                     sampler %400 = OpLoad %399 
                  read_only Texture2DSampled %402 = OpSampledImage %398 %400 
                                       f32_2 %405 = OpLoad vs_TEXCOORD0 
                                       f32_4 %406 = OpImageSampleImplicitLod %402 %405 
                                       f32_3 %407 = OpVectorShuffle %406 %406 0 1 2 
                                                      OpStore %396 %407 
                                       f32_3 %408 = OpLoad %396 
                              Uniform f32_4* %410 = OpAccessChain %22 %409 
                                       f32_4 %411 = OpLoad %410 
                                       f32_3 %412 = OpVectorShuffle %411 %411 0 1 2 
                                       f32_3 %413 = OpFMul %408 %412 
                                                      OpStore %63 %413 
                                       f32_3 %415 = OpLoad %63 
                              Uniform f32_4* %416 = OpAccessChain %22 %294 
                                       f32_4 %417 = OpLoad %416 
                                       f32_3 %418 = OpVectorShuffle %417 %417 0 1 2 
                                       f32_3 %419 = OpFMul %415 %418 
                                                      OpStore %414 %419 
                                       f32_3 %420 = OpLoad %414 
                                       f32_3 %421 = OpLoad %36 
                                       f32_3 %422 = OpFMul %420 %421 
                                       f32_3 %423 = OpLoad %9 
                                       f32_3 %424 = OpFAdd %422 %423 
                                                      OpStore %9 %424 
                                       f32_3 %427 = OpLoad vs_TEXCOORD1 
                                       f32_4 %428 = OpLoad %426 
                                       f32_4 %429 = OpVectorShuffle %428 %427 4 5 6 3 
                                                      OpStore %426 %429 
                                Private f32* %430 = OpAccessChain %426 %189 
                                                      OpStore %430 %131 
                              Uniform f32_4* %431 = OpAccessChain %22 %163 
                                       f32_4 %432 = OpLoad %431 
                                       f32_4 %433 = OpLoad %426 
                                         f32 %434 = OpDot %432 %433 
                                Private f32* %435 = OpAccessChain %414 %71 
                                                      OpStore %435 %434 
                              Uniform f32_4* %436 = OpAccessChain %22 %236 
                                       f32_4 %437 = OpLoad %436 
                                       f32_4 %438 = OpLoad %426 
                                         f32 %439 = OpDot %437 %438 
                                Private f32* %440 = OpAccessChain %414 %78 
                                                      OpStore %440 %439 
                              Uniform f32_4* %442 = OpAccessChain %22 %441 
                                       f32_4 %443 = OpLoad %442 
                                       f32_4 %444 = OpLoad %426 
                                         f32 %445 = OpDot %443 %444 
                                Private f32* %446 = OpAccessChain %414 %156 
                                                      OpStore %446 %445 
                                       f32_3 %447 = OpLoad %414 
                                       f32_3 %449 = OpLoad vs_TEXCOORD3 
                                       f32_3 %450 = OpFAdd %447 %449 
                                                      OpStore %414 %450 
                                       f32_3 %451 = OpLoad %414 
                                       f32_3 %453 = OpExtInst %1 40 %451 %452 
                                                      OpStore %414 %453 
                                       f32_3 %454 = OpLoad %414 
                                       f32_3 %455 = OpExtInst %1 30 %454 
                                                      OpStore %124 %455 
                                       f32_3 %456 = OpLoad %124 
                                       f32_3 %459 = OpFMul %456 %458 
                                                      OpStore %124 %459 
                                       f32_3 %460 = OpLoad %124 
                                       f32_3 %461 = OpExtInst %1 29 %460 
                                                      OpStore %124 %461 
                                       f32_3 %462 = OpLoad %124 
                                       f32_3 %465 = OpFMul %462 %464 
                                       f32_3 %468 = OpFAdd %465 %467 
                                                      OpStore %124 %468 
                                       f32_3 %469 = OpLoad %124 
                                       f32_3 %470 = OpExtInst %1 40 %469 %452 
                                                      OpStore %124 %470 
                                       f32_3 %473 = OpLoad %63 
                                       f32_3 %474 = OpLoad %124 
                                       f32_3 %475 = OpFMul %473 %474 
                                       f32_3 %476 = OpLoad %9 
                                       f32_3 %477 = OpFAdd %475 %476 
                                       f32_4 %478 = OpLoad %472 
                                       f32_4 %479 = OpVectorShuffle %478 %477 4 5 6 3 
                                                      OpStore %472 %479 
                                 Output f32* %481 = OpAccessChain %472 %189 
                                                      OpStore %481 %131 
                                                      OpReturn
                                                      OpFunctionEnd
"
}
SubProgram "gles3 hw_tier00 " {
Keywords { "DIRECTIONAL" "VERTEXLIGHT_ON" }
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in highp vec3 in_NORMAL0;
in highp vec4 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out highp vec3 vs_TEXCOORD1;
out highp vec3 vs_TEXCOORD2;
out highp vec4 vs_TEXCOORD5;
out highp vec4 vs_TEXCOORD6;
vec4 u_xlat0;
vec4 u_xlat1;
float u_xlat6;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    vs_TEXCOORD2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
    u_xlat0 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat0;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat0;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat0.xy;
    u_xlat0.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat6 = dot(u_xlat0.xyz, u_xlat0.xyz);
    u_xlat6 = inversesqrt(u_xlat6);
    vs_TEXCOORD1.xyz = vec3(u_xlat6) * u_xlat0.xyz;
    vs_TEXCOORD5 = vec4(0.0, 0.0, 0.0, 0.0);
    vs_TEXCOORD6 = vec4(0.0, 0.0, 0.0, 0.0);
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec3 _WorldSpaceCameraPos;
uniform 	mediump vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 _LightColor0;
uniform 	mediump vec4 _SpecColor;
uniform 	mediump vec4 _Color;
uniform 	mediump float _Smoothness;
uniform 	mediump vec4 _HColor;
uniform 	mediump vec4 _SColor;
uniform 	mediump float _RampThreshold;
uniform 	mediump float _RampSmooth;
uniform 	mediump float _SpecSmooth;
UNITY_LOCATION(0) uniform mediump sampler2D _MainTex;
in mediump vec2 vs_TEXCOORD0;
in highp vec3 vs_TEXCOORD1;
in highp vec3 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec4 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
float u_xlat4;
mediump vec3 u_xlat16_5;
mediump float u_xlat16_9;
float u_xlat12;
mediump float u_xlat16_13;
void main()
{
    u_xlat0.xyz = (-vs_TEXCOORD2.xyz) + _WorldSpaceCameraPos.xyz;
    u_xlat12 = dot(u_xlat0.xyz, u_xlat0.xyz);
    u_xlat12 = inversesqrt(u_xlat12);
    u_xlat16_1.xyz = u_xlat0.xyz * vec3(u_xlat12) + _WorldSpaceLightPos0.xyz;
    u_xlat16_13 = dot(u_xlat16_1.xyz, u_xlat16_1.xyz);
    u_xlat16_13 = inversesqrt(u_xlat16_13);
    u_xlat16_1.xyz = vec3(u_xlat16_13) * u_xlat16_1.xyz;
    u_xlat16_13 = dot(vs_TEXCOORD1.xyz, vs_TEXCOORD1.xyz);
    u_xlat16_13 = inversesqrt(u_xlat16_13);
    u_xlat16_2.xyz = vec3(u_xlat16_13) * vs_TEXCOORD1.xyz;
    u_xlat16_1.x = dot(u_xlat16_2.xyz, u_xlat16_1.xyz);
    u_xlat16_1.y = dot(u_xlat16_2.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat16_1.xy = max(u_xlat16_1.xy, vec2(0.0, 0.0));
    u_xlat0.x = log2(u_xlat16_1.x);
    u_xlat16_1.x = _Smoothness * 128.0;
    u_xlat0.x = u_xlat0.x * u_xlat16_1.x;
    u_xlat0.x = exp2(u_xlat0.x);
    u_xlat16_1.x = (-_SpecSmooth) * 0.5 + 0.5;
    u_xlat0.x = u_xlat0.x * 2.0 + (-u_xlat16_1.x);
    u_xlat16_9 = _SpecSmooth * 0.5 + 0.5;
    u_xlat4 = (-u_xlat16_1.x) + u_xlat16_9;
    u_xlat4 = float(1.0) / u_xlat4;
    u_xlat0.x = u_xlat4 * u_xlat0.x;
#ifdef UNITY_ADRENO_ES3
    u_xlat0.x = min(max(u_xlat0.x, 0.0), 1.0);
#else
    u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);
#endif
    u_xlat4 = u_xlat0.x * -2.0 + 3.0;
    u_xlat0.x = u_xlat0.x * u_xlat0.x;
    u_xlat0.x = u_xlat0.x * u_xlat4;
    u_xlat16_1.xzw = _LightColor0.xyz * _SpecColor.xyz;
    u_xlat0.xyz = u_xlat0.xxx * u_xlat16_1.xzw;
    u_xlat16_1.x = (-_RampSmooth) * 0.5 + _RampThreshold;
    u_xlat16_5.x = (-u_xlat16_1.x) + u_xlat16_1.y;
    u_xlat16_9 = _RampSmooth * 0.5 + _RampThreshold;
    u_xlat16_1.x = (-u_xlat16_1.x) + u_xlat16_9;
    u_xlat16_1.x = float(1.0) / u_xlat16_1.x;
    u_xlat16_1.x = u_xlat16_1.x * u_xlat16_5.x;
#ifdef UNITY_ADRENO_ES3
    u_xlat16_1.x = min(max(u_xlat16_1.x, 0.0), 1.0);
#else
    u_xlat16_1.x = clamp(u_xlat16_1.x, 0.0, 1.0);
#endif
    u_xlat16_5.x = u_xlat16_1.x * -2.0 + 3.0;
    u_xlat16_1.x = u_xlat16_1.x * u_xlat16_1.x;
    u_xlat16_1.x = u_xlat16_1.x * u_xlat16_5.x;
    u_xlat16_5.xyz = (-_HColor.xyz) + _SColor.xyz;
    u_xlat16_5.xyz = _SColor.www * u_xlat16_5.xyz + _HColor.xyz;
    u_xlat16_2.xyz = (-u_xlat16_5.xyz) + _HColor.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xxx * u_xlat16_2.xyz + u_xlat16_5.xyz;
    u_xlat16_3.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_2.xyz = u_xlat16_3.xyz * _Color.xyz;
    u_xlat16_2.xyz = u_xlat16_2.xyz * _LightColor0.xyz;
    u_xlat0.xyz = u_xlat16_2.xyz * u_xlat16_1.xyz + u_xlat0.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier01 " {
Keywords { "DIRECTIONAL" "VERTEXLIGHT_ON" }
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in highp vec3 in_NORMAL0;
in highp vec4 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out highp vec3 vs_TEXCOORD1;
out highp vec3 vs_TEXCOORD2;
out highp vec4 vs_TEXCOORD5;
out highp vec4 vs_TEXCOORD6;
vec4 u_xlat0;
vec4 u_xlat1;
float u_xlat6;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    vs_TEXCOORD2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
    u_xlat0 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat0;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat0;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat0.xy;
    u_xlat0.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat6 = dot(u_xlat0.xyz, u_xlat0.xyz);
    u_xlat6 = inversesqrt(u_xlat6);
    vs_TEXCOORD1.xyz = vec3(u_xlat6) * u_xlat0.xyz;
    vs_TEXCOORD5 = vec4(0.0, 0.0, 0.0, 0.0);
    vs_TEXCOORD6 = vec4(0.0, 0.0, 0.0, 0.0);
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec3 _WorldSpaceCameraPos;
uniform 	mediump vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 _LightColor0;
uniform 	mediump vec4 _SpecColor;
uniform 	mediump vec4 _Color;
uniform 	mediump float _Smoothness;
uniform 	mediump vec4 _HColor;
uniform 	mediump vec4 _SColor;
uniform 	mediump float _RampThreshold;
uniform 	mediump float _RampSmooth;
uniform 	mediump float _SpecSmooth;
UNITY_LOCATION(0) uniform mediump sampler2D _MainTex;
in mediump vec2 vs_TEXCOORD0;
in highp vec3 vs_TEXCOORD1;
in highp vec3 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec4 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
float u_xlat4;
mediump vec3 u_xlat16_5;
mediump float u_xlat16_9;
float u_xlat12;
mediump float u_xlat16_13;
void main()
{
    u_xlat0.xyz = (-vs_TEXCOORD2.xyz) + _WorldSpaceCameraPos.xyz;
    u_xlat12 = dot(u_xlat0.xyz, u_xlat0.xyz);
    u_xlat12 = inversesqrt(u_xlat12);
    u_xlat16_1.xyz = u_xlat0.xyz * vec3(u_xlat12) + _WorldSpaceLightPos0.xyz;
    u_xlat16_13 = dot(u_xlat16_1.xyz, u_xlat16_1.xyz);
    u_xlat16_13 = inversesqrt(u_xlat16_13);
    u_xlat16_1.xyz = vec3(u_xlat16_13) * u_xlat16_1.xyz;
    u_xlat16_13 = dot(vs_TEXCOORD1.xyz, vs_TEXCOORD1.xyz);
    u_xlat16_13 = inversesqrt(u_xlat16_13);
    u_xlat16_2.xyz = vec3(u_xlat16_13) * vs_TEXCOORD1.xyz;
    u_xlat16_1.x = dot(u_xlat16_2.xyz, u_xlat16_1.xyz);
    u_xlat16_1.y = dot(u_xlat16_2.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat16_1.xy = max(u_xlat16_1.xy, vec2(0.0, 0.0));
    u_xlat0.x = log2(u_xlat16_1.x);
    u_xlat16_1.x = _Smoothness * 128.0;
    u_xlat0.x = u_xlat0.x * u_xlat16_1.x;
    u_xlat0.x = exp2(u_xlat0.x);
    u_xlat16_1.x = (-_SpecSmooth) * 0.5 + 0.5;
    u_xlat0.x = u_xlat0.x * 2.0 + (-u_xlat16_1.x);
    u_xlat16_9 = _SpecSmooth * 0.5 + 0.5;
    u_xlat4 = (-u_xlat16_1.x) + u_xlat16_9;
    u_xlat4 = float(1.0) / u_xlat4;
    u_xlat0.x = u_xlat4 * u_xlat0.x;
#ifdef UNITY_ADRENO_ES3
    u_xlat0.x = min(max(u_xlat0.x, 0.0), 1.0);
#else
    u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);
#endif
    u_xlat4 = u_xlat0.x * -2.0 + 3.0;
    u_xlat0.x = u_xlat0.x * u_xlat0.x;
    u_xlat0.x = u_xlat0.x * u_xlat4;
    u_xlat16_1.xzw = _LightColor0.xyz * _SpecColor.xyz;
    u_xlat0.xyz = u_xlat0.xxx * u_xlat16_1.xzw;
    u_xlat16_1.x = (-_RampSmooth) * 0.5 + _RampThreshold;
    u_xlat16_5.x = (-u_xlat16_1.x) + u_xlat16_1.y;
    u_xlat16_9 = _RampSmooth * 0.5 + _RampThreshold;
    u_xlat16_1.x = (-u_xlat16_1.x) + u_xlat16_9;
    u_xlat16_1.x = float(1.0) / u_xlat16_1.x;
    u_xlat16_1.x = u_xlat16_1.x * u_xlat16_5.x;
#ifdef UNITY_ADRENO_ES3
    u_xlat16_1.x = min(max(u_xlat16_1.x, 0.0), 1.0);
#else
    u_xlat16_1.x = clamp(u_xlat16_1.x, 0.0, 1.0);
#endif
    u_xlat16_5.x = u_xlat16_1.x * -2.0 + 3.0;
    u_xlat16_1.x = u_xlat16_1.x * u_xlat16_1.x;
    u_xlat16_1.x = u_xlat16_1.x * u_xlat16_5.x;
    u_xlat16_5.xyz = (-_HColor.xyz) + _SColor.xyz;
    u_xlat16_5.xyz = _SColor.www * u_xlat16_5.xyz + _HColor.xyz;
    u_xlat16_2.xyz = (-u_xlat16_5.xyz) + _HColor.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xxx * u_xlat16_2.xyz + u_xlat16_5.xyz;
    u_xlat16_3.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_2.xyz = u_xlat16_3.xyz * _Color.xyz;
    u_xlat16_2.xyz = u_xlat16_2.xyz * _LightColor0.xyz;
    u_xlat0.xyz = u_xlat16_2.xyz * u_xlat16_1.xyz + u_xlat0.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier02 " {
Keywords { "DIRECTIONAL" "VERTEXLIGHT_ON" }
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in highp vec3 in_NORMAL0;
in highp vec4 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out highp vec3 vs_TEXCOORD1;
out highp vec3 vs_TEXCOORD2;
out highp vec4 vs_TEXCOORD5;
out highp vec4 vs_TEXCOORD6;
vec4 u_xlat0;
vec4 u_xlat1;
float u_xlat6;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    vs_TEXCOORD2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
    u_xlat0 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat0;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat0;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat0.xy;
    u_xlat0.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat6 = dot(u_xlat0.xyz, u_xlat0.xyz);
    u_xlat6 = inversesqrt(u_xlat6);
    vs_TEXCOORD1.xyz = vec3(u_xlat6) * u_xlat0.xyz;
    vs_TEXCOORD5 = vec4(0.0, 0.0, 0.0, 0.0);
    vs_TEXCOORD6 = vec4(0.0, 0.0, 0.0, 0.0);
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec3 _WorldSpaceCameraPos;
uniform 	mediump vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 _LightColor0;
uniform 	mediump vec4 _SpecColor;
uniform 	mediump vec4 _Color;
uniform 	mediump float _Smoothness;
uniform 	mediump vec4 _HColor;
uniform 	mediump vec4 _SColor;
uniform 	mediump float _RampThreshold;
uniform 	mediump float _RampSmooth;
uniform 	mediump float _SpecSmooth;
UNITY_LOCATION(0) uniform mediump sampler2D _MainTex;
in mediump vec2 vs_TEXCOORD0;
in highp vec3 vs_TEXCOORD1;
in highp vec3 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec4 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
float u_xlat4;
mediump vec3 u_xlat16_5;
mediump float u_xlat16_9;
float u_xlat12;
mediump float u_xlat16_13;
void main()
{
    u_xlat0.xyz = (-vs_TEXCOORD2.xyz) + _WorldSpaceCameraPos.xyz;
    u_xlat12 = dot(u_xlat0.xyz, u_xlat0.xyz);
    u_xlat12 = inversesqrt(u_xlat12);
    u_xlat16_1.xyz = u_xlat0.xyz * vec3(u_xlat12) + _WorldSpaceLightPos0.xyz;
    u_xlat16_13 = dot(u_xlat16_1.xyz, u_xlat16_1.xyz);
    u_xlat16_13 = inversesqrt(u_xlat16_13);
    u_xlat16_1.xyz = vec3(u_xlat16_13) * u_xlat16_1.xyz;
    u_xlat16_13 = dot(vs_TEXCOORD1.xyz, vs_TEXCOORD1.xyz);
    u_xlat16_13 = inversesqrt(u_xlat16_13);
    u_xlat16_2.xyz = vec3(u_xlat16_13) * vs_TEXCOORD1.xyz;
    u_xlat16_1.x = dot(u_xlat16_2.xyz, u_xlat16_1.xyz);
    u_xlat16_1.y = dot(u_xlat16_2.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat16_1.xy = max(u_xlat16_1.xy, vec2(0.0, 0.0));
    u_xlat0.x = log2(u_xlat16_1.x);
    u_xlat16_1.x = _Smoothness * 128.0;
    u_xlat0.x = u_xlat0.x * u_xlat16_1.x;
    u_xlat0.x = exp2(u_xlat0.x);
    u_xlat16_1.x = (-_SpecSmooth) * 0.5 + 0.5;
    u_xlat0.x = u_xlat0.x * 2.0 + (-u_xlat16_1.x);
    u_xlat16_9 = _SpecSmooth * 0.5 + 0.5;
    u_xlat4 = (-u_xlat16_1.x) + u_xlat16_9;
    u_xlat4 = float(1.0) / u_xlat4;
    u_xlat0.x = u_xlat4 * u_xlat0.x;
#ifdef UNITY_ADRENO_ES3
    u_xlat0.x = min(max(u_xlat0.x, 0.0), 1.0);
#else
    u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);
#endif
    u_xlat4 = u_xlat0.x * -2.0 + 3.0;
    u_xlat0.x = u_xlat0.x * u_xlat0.x;
    u_xlat0.x = u_xlat0.x * u_xlat4;
    u_xlat16_1.xzw = _LightColor0.xyz * _SpecColor.xyz;
    u_xlat0.xyz = u_xlat0.xxx * u_xlat16_1.xzw;
    u_xlat16_1.x = (-_RampSmooth) * 0.5 + _RampThreshold;
    u_xlat16_5.x = (-u_xlat16_1.x) + u_xlat16_1.y;
    u_xlat16_9 = _RampSmooth * 0.5 + _RampThreshold;
    u_xlat16_1.x = (-u_xlat16_1.x) + u_xlat16_9;
    u_xlat16_1.x = float(1.0) / u_xlat16_1.x;
    u_xlat16_1.x = u_xlat16_1.x * u_xlat16_5.x;
#ifdef UNITY_ADRENO_ES3
    u_xlat16_1.x = min(max(u_xlat16_1.x, 0.0), 1.0);
#else
    u_xlat16_1.x = clamp(u_xlat16_1.x, 0.0, 1.0);
#endif
    u_xlat16_5.x = u_xlat16_1.x * -2.0 + 3.0;
    u_xlat16_1.x = u_xlat16_1.x * u_xlat16_1.x;
    u_xlat16_1.x = u_xlat16_1.x * u_xlat16_5.x;
    u_xlat16_5.xyz = (-_HColor.xyz) + _SColor.xyz;
    u_xlat16_5.xyz = _SColor.www * u_xlat16_5.xyz + _HColor.xyz;
    u_xlat16_2.xyz = (-u_xlat16_5.xyz) + _HColor.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xxx * u_xlat16_2.xyz + u_xlat16_5.xyz;
    u_xlat16_3.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_2.xyz = u_xlat16_3.xyz * _Color.xyz;
    u_xlat16_2.xyz = u_xlat16_2.xyz * _LightColor0.xyz;
    u_xlat0.xyz = u_xlat16_2.xyz * u_xlat16_1.xyz + u_xlat0.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "vulkan hw_tier00 " {
Keywords { "DIRECTIONAL" "VERTEXLIGHT_ON" }
"; SPIR-V
; Version: 1.0
; Generator: Khronos Glslang Reference Front End; 6
; Bound: 160
; Schema: 0
                                                      OpCapability Shader 
                                               %1 = OpExtInstImport "GLSL.std.450" 
                                                      OpMemoryModel Logical GLSL450 
                                                      OpEntryPoint Vertex %4 "main" %11 %52 %85 %95 %110 %114 %144 %150 %153 
                                                      OpName vs_TEXCOORD2 "vs_TEXCOORD2" 
                                                      OpName vs_TEXCOORD0 "vs_TEXCOORD0" 
                                                      OpName vs_TEXCOORD1 "vs_TEXCOORD1" 
                                                      OpName vs_TEXCOORD5 "vs_TEXCOORD5" 
                                                      OpName vs_TEXCOORD6 "vs_TEXCOORD6" 
                                                      OpDecorate %11 Location 11 
                                                      OpDecorate %16 ArrayStride 16 
                                                      OpDecorate %17 ArrayStride 17 
                                                      OpDecorate %18 ArrayStride 18 
                                                      OpMemberDecorate %19 0 Offset 19 
                                                      OpMemberDecorate %19 1 Offset 19 
                                                      OpMemberDecorate %19 2 Offset 19 
                                                      OpMemberDecorate %19 3 Offset 19 
                                                      OpDecorate %19 Block 
                                                      OpDecorate %21 DescriptorSet 21 
                                                      OpDecorate %21 Binding 21 
                                                      OpDecorate vs_TEXCOORD2 Location 52 
                                                      OpMemberDecorate %83 0 BuiltIn 83 
                                                      OpMemberDecorate %83 1 BuiltIn 83 
                                                      OpMemberDecorate %83 2 BuiltIn 83 
                                                      OpDecorate %83 Block 
                                                      OpDecorate %95 Location 95 
                                                      OpDecorate vs_TEXCOORD0 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD0 Location 110 
                                                      OpDecorate %114 Location 114 
                                                      OpDecorate vs_TEXCOORD1 Location 144 
                                                      OpDecorate vs_TEXCOORD5 Location 150 
                                                      OpDecorate vs_TEXCOORD6 Location 153 
                                               %2 = OpTypeVoid 
                                               %3 = OpTypeFunction %2 
                                               %6 = OpTypeFloat 32 
                                               %7 = OpTypeVector %6 4 
                                               %8 = OpTypePointer Private %7 
                                Private f32_4* %9 = OpVariable Private 
                                              %10 = OpTypePointer Input %7 
                                 Input f32_4* %11 = OpVariable Input 
                                              %14 = OpTypeInt 32 0 
                                          u32 %15 = OpConstant 4 
                                              %16 = OpTypeArray %7 %15 
                                              %17 = OpTypeArray %7 %15 
                                              %18 = OpTypeArray %7 %15 
                                              %19 = OpTypeStruct %16 %17 %18 %7 
                                              %20 = OpTypePointer Uniform %19 
Uniform struct {f32_4[4]; f32_4[4]; f32_4[4]; f32_4;}* %21 = OpVariable Uniform 
                                              %22 = OpTypeInt 32 1 
                                          i32 %23 = OpConstant 0 
                                          i32 %24 = OpConstant 1 
                                              %25 = OpTypePointer Uniform %7 
                                          i32 %36 = OpConstant 2 
                               Private f32_4* %44 = OpVariable Private 
                                          i32 %46 = OpConstant 3 
                                              %50 = OpTypeVector %6 3 
                                              %51 = OpTypePointer Output %50 
                       Output f32_3* vs_TEXCOORD2 = OpVariable Output 
                                          u32 %81 = OpConstant 1 
                                              %82 = OpTypeArray %6 %81 
                                              %83 = OpTypeStruct %7 %6 %82 
                                              %84 = OpTypePointer Output %83 
         Output struct {f32_4; f32; f32[1];}* %85 = OpVariable Output 
                                              %93 = OpTypePointer Output %7 
                                 Input f32_4* %95 = OpVariable Input 
                                              %96 = OpTypeVector %6 2 
                                             %109 = OpTypePointer Output %96 
                       Output f32_2* vs_TEXCOORD0 = OpVariable Output 
                                             %113 = OpTypePointer Input %50 
                                Input f32_3* %114 = OpVariable Input 
                                         u32 %120 = OpConstant 0 
                                             %121 = OpTypePointer Private %6 
                                         u32 %134 = OpConstant 2 
                                Private f32* %136 = OpVariable Private 
                       Output f32_3* vs_TEXCOORD1 = OpVariable Output 
                       Output f32_4* vs_TEXCOORD5 = OpVariable Output 
                                         f32 %151 = OpConstant 3.674022E-40 
                                       f32_4 %152 = OpConstantComposite %151 %151 %151 %151 
                       Output f32_4* vs_TEXCOORD6 = OpVariable Output 
                                             %154 = OpTypePointer Output %6 
                                          void %4 = OpFunction None %3 
                                               %5 = OpLabel 
                                        f32_4 %12 = OpLoad %11 
                                        f32_4 %13 = OpVectorShuffle %12 %12 1 1 1 1 
                               Uniform f32_4* %26 = OpAccessChain %21 %23 %24 
                                        f32_4 %27 = OpLoad %26 
                                        f32_4 %28 = OpFMul %13 %27 
                                                      OpStore %9 %28 
                               Uniform f32_4* %29 = OpAccessChain %21 %23 %23 
                                        f32_4 %30 = OpLoad %29 
                                        f32_4 %31 = OpLoad %11 
                                        f32_4 %32 = OpVectorShuffle %31 %31 0 0 0 0 
                                        f32_4 %33 = OpFMul %30 %32 
                                        f32_4 %34 = OpLoad %9 
                                        f32_4 %35 = OpFAdd %33 %34 
                                                      OpStore %9 %35 
                               Uniform f32_4* %37 = OpAccessChain %21 %23 %36 
                                        f32_4 %38 = OpLoad %37 
                                        f32_4 %39 = OpLoad %11 
                                        f32_4 %40 = OpVectorShuffle %39 %39 2 2 2 2 
                                        f32_4 %41 = OpFMul %38 %40 
                                        f32_4 %42 = OpLoad %9 
                                        f32_4 %43 = OpFAdd %41 %42 
                                                      OpStore %9 %43 
                                        f32_4 %45 = OpLoad %9 
                               Uniform f32_4* %47 = OpAccessChain %21 %23 %46 
                                        f32_4 %48 = OpLoad %47 
                                        f32_4 %49 = OpFAdd %45 %48 
                                                      OpStore %44 %49 
                               Uniform f32_4* %53 = OpAccessChain %21 %23 %46 
                                        f32_4 %54 = OpLoad %53 
                                        f32_3 %55 = OpVectorShuffle %54 %54 0 1 2 
                                        f32_4 %56 = OpLoad %11 
                                        f32_3 %57 = OpVectorShuffle %56 %56 3 3 3 
                                        f32_3 %58 = OpFMul %55 %57 
                                        f32_4 %59 = OpLoad %9 
                                        f32_3 %60 = OpVectorShuffle %59 %59 0 1 2 
                                        f32_3 %61 = OpFAdd %58 %60 
                                                      OpStore vs_TEXCOORD2 %61 
                                        f32_4 %62 = OpLoad %44 
                                        f32_4 %63 = OpVectorShuffle %62 %62 1 1 1 1 
                               Uniform f32_4* %64 = OpAccessChain %21 %36 %24 
                                        f32_4 %65 = OpLoad %64 
                                        f32_4 %66 = OpFMul %63 %65 
                                                      OpStore %9 %66 
                               Uniform f32_4* %67 = OpAccessChain %21 %36 %23 
                                        f32_4 %68 = OpLoad %67 
                                        f32_4 %69 = OpLoad %44 
                                        f32_4 %70 = OpVectorShuffle %69 %69 0 0 0 0 
                                        f32_4 %71 = OpFMul %68 %70 
                                        f32_4 %72 = OpLoad %9 
                                        f32_4 %73 = OpFAdd %71 %72 
                                                      OpStore %9 %73 
                               Uniform f32_4* %74 = OpAccessChain %21 %36 %36 
                                        f32_4 %75 = OpLoad %74 
                                        f32_4 %76 = OpLoad %44 
                                        f32_4 %77 = OpVectorShuffle %76 %76 2 2 2 2 
                                        f32_4 %78 = OpFMul %75 %77 
                                        f32_4 %79 = OpLoad %9 
                                        f32_4 %80 = OpFAdd %78 %79 
                                                      OpStore %9 %80 
                               Uniform f32_4* %86 = OpAccessChain %21 %36 %46 
                                        f32_4 %87 = OpLoad %86 
                                        f32_4 %88 = OpLoad %44 
                                        f32_4 %89 = OpVectorShuffle %88 %88 3 3 3 3 
                                        f32_4 %90 = OpFMul %87 %89 
                                        f32_4 %91 = OpLoad %9 
                                        f32_4 %92 = OpFAdd %90 %91 
                                Output f32_4* %94 = OpAccessChain %85 %23 
                                                      OpStore %94 %92 
                                        f32_4 %97 = OpLoad %95 
                                        f32_2 %98 = OpVectorShuffle %97 %97 0 1 
                               Uniform f32_4* %99 = OpAccessChain %21 %46 
                                       f32_4 %100 = OpLoad %99 
                                       f32_2 %101 = OpVectorShuffle %100 %100 0 1 
                                       f32_2 %102 = OpFMul %98 %101 
                              Uniform f32_4* %103 = OpAccessChain %21 %46 
                                       f32_4 %104 = OpLoad %103 
                                       f32_2 %105 = OpVectorShuffle %104 %104 2 3 
                                       f32_2 %106 = OpFAdd %102 %105 
                                       f32_4 %107 = OpLoad %9 
                                       f32_4 %108 = OpVectorShuffle %107 %106 4 5 2 3 
                                                      OpStore %9 %108 
                                       f32_4 %111 = OpLoad %9 
                                       f32_2 %112 = OpVectorShuffle %111 %111 0 1 
                                                      OpStore vs_TEXCOORD0 %112 
                                       f32_3 %115 = OpLoad %114 
                              Uniform f32_4* %116 = OpAccessChain %21 %24 %23 
                                       f32_4 %117 = OpLoad %116 
                                       f32_3 %118 = OpVectorShuffle %117 %117 0 1 2 
                                         f32 %119 = OpDot %115 %118 
                                Private f32* %122 = OpAccessChain %9 %120 
                                                      OpStore %122 %119 
                                       f32_3 %123 = OpLoad %114 
                              Uniform f32_4* %124 = OpAccessChain %21 %24 %24 
                                       f32_4 %125 = OpLoad %124 
                                       f32_3 %126 = OpVectorShuffle %125 %125 0 1 2 
                                         f32 %127 = OpDot %123 %126 
                                Private f32* %128 = OpAccessChain %9 %81 
                                                      OpStore %128 %127 
                                       f32_3 %129 = OpLoad %114 
                              Uniform f32_4* %130 = OpAccessChain %21 %24 %36 
                                       f32_4 %131 = OpLoad %130 
                                       f32_3 %132 = OpVectorShuffle %131 %131 0 1 2 
                                         f32 %133 = OpDot %129 %132 
                                Private f32* %135 = OpAccessChain %9 %134 
                                                      OpStore %135 %133 
                                       f32_4 %137 = OpLoad %9 
                                       f32_3 %138 = OpVectorShuffle %137 %137 0 1 2 
                                       f32_4 %139 = OpLoad %9 
                                       f32_3 %140 = OpVectorShuffle %139 %139 0 1 2 
                                         f32 %141 = OpDot %138 %140 
                                                      OpStore %136 %141 
                                         f32 %142 = OpLoad %136 
                                         f32 %143 = OpExtInst %1 32 %142 
                                                      OpStore %136 %143 
                                         f32 %145 = OpLoad %136 
                                       f32_3 %146 = OpCompositeConstruct %145 %145 %145 
                                       f32_4 %147 = OpLoad %9 
                                       f32_3 %148 = OpVectorShuffle %147 %147 0 1 2 
                                       f32_3 %149 = OpFMul %146 %148 
                                                      OpStore vs_TEXCOORD1 %149 
                                                      OpStore vs_TEXCOORD5 %152 
                                                      OpStore vs_TEXCOORD6 %152 
                                 Output f32* %155 = OpAccessChain %85 %23 %81 
                                         f32 %156 = OpLoad %155 
                                         f32 %157 = OpFNegate %156 
                                 Output f32* %158 = OpAccessChain %85 %23 %81 
                                                      OpStore %158 %157 
                                                      OpReturn
                                                      OpFunctionEnd
; SPIR-V
; Version: 1.0
; Generator: Khronos Glslang Reference Front End; 6
; Bound: 323
; Schema: 0
                                                      OpCapability Shader 
                                               %1 = OpExtInstImport "GLSL.std.450" 
                                                      OpMemoryModel Logical GLSL450 
                                                      OpEntryPoint Fragment %4 "main" %11 %60 %293 %315 
                                                      OpExecutionMode %4 OriginUpperLeft 
                                                      OpName vs_TEXCOORD2 "vs_TEXCOORD2" 
                                                      OpName vs_TEXCOORD1 "vs_TEXCOORD1" 
                                                      OpName vs_TEXCOORD0 "vs_TEXCOORD0" 
                                                      OpDecorate vs_TEXCOORD2 Location 11 
                                                      OpMemberDecorate %15 0 Offset 15 
                                                      OpMemberDecorate %15 1 RelaxedPrecision 
                                                      OpMemberDecorate %15 1 Offset 15 
                                                      OpMemberDecorate %15 2 RelaxedPrecision 
                                                      OpMemberDecorate %15 2 Offset 15 
                                                      OpMemberDecorate %15 3 RelaxedPrecision 
                                                      OpMemberDecorate %15 3 Offset 15 
                                                      OpMemberDecorate %15 4 RelaxedPrecision 
                                                      OpMemberDecorate %15 4 Offset 15 
                                                      OpMemberDecorate %15 5 RelaxedPrecision 
                                                      OpMemberDecorate %15 5 Offset 15 
                                                      OpMemberDecorate %15 6 RelaxedPrecision 
                                                      OpMemberDecorate %15 6 Offset 15 
                                                      OpMemberDecorate %15 7 RelaxedPrecision 
                                                      OpMemberDecorate %15 7 Offset 15 
                                                      OpMemberDecorate %15 8 RelaxedPrecision 
                                                      OpMemberDecorate %15 8 Offset 15 
                                                      OpMemberDecorate %15 9 RelaxedPrecision 
                                                      OpMemberDecorate %15 9 Offset 15 
                                                      OpMemberDecorate %15 10 RelaxedPrecision 
                                                      OpMemberDecorate %15 10 Offset 15 
                                                      OpDecorate %15 Block 
                                                      OpDecorate %17 DescriptorSet 17 
                                                      OpDecorate %17 Binding 17 
                                                      OpDecorate %32 RelaxedPrecision 
                                                      OpDecorate %40 RelaxedPrecision 
                                                      OpDecorate %41 RelaxedPrecision 
                                                      OpDecorate %45 RelaxedPrecision 
                                                      OpDecorate %46 RelaxedPrecision 
                                                      OpDecorate %47 RelaxedPrecision 
                                                      OpDecorate %48 RelaxedPrecision 
                                                      OpDecorate %49 RelaxedPrecision 
                                                      OpDecorate %50 RelaxedPrecision 
                                                      OpDecorate %51 RelaxedPrecision 
                                                      OpDecorate %52 RelaxedPrecision 
                                                      OpDecorate %53 RelaxedPrecision 
                                                      OpDecorate %54 RelaxedPrecision 
                                                      OpDecorate %55 RelaxedPrecision 
                                                      OpDecorate %56 RelaxedPrecision 
                                                      OpDecorate %57 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD1 Location 60 
                                                      OpDecorate %64 RelaxedPrecision 
                                                      OpDecorate %65 RelaxedPrecision 
                                                      OpDecorate %66 RelaxedPrecision 
                                                      OpDecorate %67 RelaxedPrecision 
                                                      OpDecorate %71 RelaxedPrecision 
                                                      OpDecorate %72 RelaxedPrecision 
                                                      OpDecorate %73 RelaxedPrecision 
                                                      OpDecorate %74 RelaxedPrecision 
                                                      OpDecorate %78 RelaxedPrecision 
                                                      OpDecorate %80 RelaxedPrecision 
                                                      OpDecorate %81 RelaxedPrecision 
                                                      OpDecorate %82 RelaxedPrecision 
                                                      OpDecorate %86 RelaxedPrecision 
                                                      OpDecorate %87 RelaxedPrecision 
                                                      OpDecorate %90 RelaxedPrecision 
                                                      OpDecorate %94 RelaxedPrecision 
                                                      OpDecorate %95 RelaxedPrecision 
                                                      OpDecorate %100 RelaxedPrecision 
                                                      OpDecorate %102 RelaxedPrecision 
                                                      OpDecorate %107 RelaxedPrecision 
                                                      OpDecorate %116 RelaxedPrecision 
                                                      OpDecorate %117 RelaxedPrecision 
                                                      OpDecorate %119 RelaxedPrecision 
                                                      OpDecorate %120 RelaxedPrecision 
                                                      OpDecorate %127 RelaxedPrecision 
                                                      OpDecorate %128 RelaxedPrecision 
                                                      OpDecorate %131 RelaxedPrecision 
                                                      OpDecorate %133 RelaxedPrecision 
                                                      OpDecorate %134 RelaxedPrecision 
                                                      OpDecorate %135 RelaxedPrecision 
                                                      OpDecorate %138 RelaxedPrecision 
                                                      OpDecorate %139 RelaxedPrecision 
                                                      OpDecorate %140 RelaxedPrecision 
                                                      OpDecorate %141 RelaxedPrecision 
                                                      OpDecorate %173 RelaxedPrecision 
                                                      OpDecorate %174 RelaxedPrecision 
                                                      OpDecorate %177 RelaxedPrecision 
                                                      OpDecorate %178 RelaxedPrecision 
                                                      OpDecorate %179 RelaxedPrecision 
                                                      OpDecorate %184 RelaxedPrecision 
                                                      OpDecorate %185 RelaxedPrecision 
                                                      OpDecorate %189 RelaxedPrecision 
                                                      OpDecorate %190 RelaxedPrecision 
                                                      OpDecorate %191 RelaxedPrecision 
                                                      OpDecorate %194 RelaxedPrecision 
                                                      OpDecorate %195 RelaxedPrecision 
                                                      OpDecorate %197 RelaxedPrecision 
                                                      OpDecorate %199 RelaxedPrecision 
                                                      OpDecorate %200 RelaxedPrecision 
                                                      OpDecorate %202 RelaxedPrecision 
                                                      OpDecorate %203 RelaxedPrecision 
                                                      OpDecorate %206 RelaxedPrecision 
                                                      OpDecorate %207 RelaxedPrecision 
                                                      OpDecorate %209 RelaxedPrecision 
                                                      OpDecorate %210 RelaxedPrecision 
                                                      OpDecorate %212 RelaxedPrecision 
                                                      OpDecorate %213 RelaxedPrecision 
                                                      OpDecorate %214 RelaxedPrecision 
                                                      OpDecorate %215 RelaxedPrecision 
                                                      OpDecorate %218 RelaxedPrecision 
                                                      OpDecorate %219 RelaxedPrecision 
                                                      OpDecorate %222 RelaxedPrecision 
                                                      OpDecorate %224 RelaxedPrecision 
                                                      OpDecorate %225 RelaxedPrecision 
                                                      OpDecorate %228 RelaxedPrecision 
                                                      OpDecorate %229 RelaxedPrecision 
                                                      OpDecorate %232 RelaxedPrecision 
                                                      OpDecorate %233 RelaxedPrecision 
                                                      OpDecorate %234 RelaxedPrecision 
                                                      OpDecorate %237 RelaxedPrecision 
                                                      OpDecorate %239 RelaxedPrecision 
                                                      OpDecorate %240 RelaxedPrecision 
                                                      OpDecorate %243 RelaxedPrecision 
                                                      OpDecorate %245 RelaxedPrecision 
                                                      OpDecorate %246 RelaxedPrecision 
                                                      OpDecorate %250 RelaxedPrecision 
                                                      OpDecorate %251 RelaxedPrecision 
                                                      OpDecorate %252 RelaxedPrecision 
                                                      OpDecorate %255 RelaxedPrecision 
                                                      OpDecorate %256 RelaxedPrecision 
                                                      OpDecorate %257 RelaxedPrecision 
                                                      OpDecorate %259 RelaxedPrecision 
                                                      OpDecorate %260 RelaxedPrecision 
                                                      OpDecorate %261 RelaxedPrecision 
                                                      OpDecorate %262 RelaxedPrecision 
                                                      OpDecorate %264 RelaxedPrecision 
                                                      OpDecorate %265 RelaxedPrecision 
                                                      OpDecorate %266 RelaxedPrecision 
                                                      OpDecorate %267 RelaxedPrecision 
                                                      OpDecorate %268 RelaxedPrecision 
                                                      OpDecorate %270 RelaxedPrecision 
                                                      OpDecorate %271 RelaxedPrecision 
                                                      OpDecorate %272 RelaxedPrecision 
                                                      OpDecorate %273 RelaxedPrecision 
                                                      OpDecorate %274 RelaxedPrecision 
                                                      OpDecorate %275 RelaxedPrecision 
                                                      OpDecorate %276 RelaxedPrecision 
                                                      OpDecorate %277 RelaxedPrecision 
                                                      OpDecorate %278 RelaxedPrecision 
                                                      OpDecorate %281 RelaxedPrecision 
                                                      OpDecorate %284 RelaxedPrecision 
                                                      OpDecorate %284 DescriptorSet 284 
                                                      OpDecorate %284 Binding 284 
                                                      OpDecorate %285 RelaxedPrecision 
                                                      OpDecorate %288 RelaxedPrecision 
                                                      OpDecorate %288 DescriptorSet 288 
                                                      OpDecorate %288 Binding 288 
                                                      OpDecorate %289 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD0 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD0 Location 293 
                                                      OpDecorate %294 RelaxedPrecision 
                                                      OpDecorate %295 RelaxedPrecision 
                                                      OpDecorate %296 RelaxedPrecision 
                                                      OpDecorate %297 RelaxedPrecision 
                                                      OpDecorate %300 RelaxedPrecision 
                                                      OpDecorate %301 RelaxedPrecision 
                                                      OpDecorate %302 RelaxedPrecision 
                                                      OpDecorate %303 RelaxedPrecision 
                                                      OpDecorate %305 RelaxedPrecision 
                                                      OpDecorate %306 RelaxedPrecision 
                                                      OpDecorate %307 RelaxedPrecision 
                                                      OpDecorate %308 RelaxedPrecision 
                                                      OpDecorate %309 RelaxedPrecision 
                                                      OpDecorate %310 RelaxedPrecision 
                                                      OpDecorate %311 RelaxedPrecision 
                                                      OpDecorate %315 RelaxedPrecision 
                                                      OpDecorate %315 Location 315 
                                               %2 = OpTypeVoid 
                                               %3 = OpTypeFunction %2 
                                               %6 = OpTypeFloat 32 
                                               %7 = OpTypeVector %6 3 
                                               %8 = OpTypePointer Private %7 
                                Private f32_3* %9 = OpVariable Private 
                                              %10 = OpTypePointer Input %7 
                        Input f32_3* vs_TEXCOORD2 = OpVariable Input 
                                              %14 = OpTypeVector %6 4 
                                              %15 = OpTypeStruct %7 %14 %14 %14 %14 %6 %14 %14 %6 %6 %6 
                                              %16 = OpTypePointer Uniform %15 
Uniform struct {f32_3; f32_4; f32_4; f32_4; f32_4; f32; f32_4; f32_4; f32; f32; f32;}* %17 = OpVariable Uniform 
                                              %18 = OpTypeInt 32 1 
                                          i32 %19 = OpConstant 0 
                                              %20 = OpTypePointer Uniform %7 
                                              %24 = OpTypePointer Private %6 
                                 Private f32* %25 = OpVariable Private 
                                              %31 = OpTypePointer Private %14 
                               Private f32_4* %32 = OpVariable Private 
                                          i32 %37 = OpConstant 1 
                                              %38 = OpTypePointer Uniform %14 
                                 Private f32* %45 = OpVariable Private 
                        Input f32_3* vs_TEXCOORD1 = OpVariable Input 
                               Private f32_3* %66 = OpVariable Private 
                                              %75 = OpTypeInt 32 0 
                                          u32 %76 = OpConstant 0 
                                          u32 %83 = OpConstant 1 
                                              %85 = OpTypeVector %6 2 
                                          f32 %88 = OpConstant 3.674022E-40 
                                        f32_2 %89 = OpConstantComposite %88 %88 
                                          i32 %97 = OpConstant 5 
                                              %98 = OpTypePointer Uniform %6 
                                         f32 %101 = OpConstant 3.674022E-40 
                                         i32 %114 = OpConstant 10 
                                         f32 %118 = OpConstant 3.674022E-40 
                                         f32 %124 = OpConstant 3.674022E-40 
                                Private f32* %131 = OpVariable Private 
                                Private f32* %136 = OpVariable Private 
                                         f32 %142 = OpConstant 3.674022E-40 
                                         f32 %156 = OpConstant 3.674022E-40 
                                         f32 %158 = OpConstant 3.674022E-40 
                                         i32 %171 = OpConstant 2 
                                         i32 %175 = OpConstant 3 
                                         i32 %187 = OpConstant 9 
                                         i32 %192 = OpConstant 8 
                              Private f32_3* %197 = OpVariable Private 
                                         i32 %248 = OpConstant 6 
                                         i32 %253 = OpConstant 7 
                              Private f32_3* %281 = OpVariable Private 
                                             %282 = OpTypeImage %6 Dim2D 0 0 0 1 Unknown 
                                             %283 = OpTypePointer UniformConstant %282 
        UniformConstant read_only Texture2D* %284 = OpVariable UniformConstant 
                                             %286 = OpTypeSampler 
                                             %287 = OpTypePointer UniformConstant %286 
                    UniformConstant sampler* %288 = OpVariable UniformConstant 
                                             %290 = OpTypeSampledImage %282 
                                             %292 = OpTypePointer Input %85 
                        Input f32_2* vs_TEXCOORD0 = OpVariable Input 
                                         i32 %298 = OpConstant 4 
                                             %314 = OpTypePointer Output %14 
                               Output f32_4* %315 = OpVariable Output 
                                         u32 %319 = OpConstant 3 
                                             %320 = OpTypePointer Output %6 
                                          void %4 = OpFunction None %3 
                                               %5 = OpLabel 
                                        f32_3 %12 = OpLoad vs_TEXCOORD2 
                                        f32_3 %13 = OpFNegate %12 
                               Uniform f32_3* %21 = OpAccessChain %17 %19 
                                        f32_3 %22 = OpLoad %21 
                                        f32_3 %23 = OpFAdd %13 %22 
                                                      OpStore %9 %23 
                                        f32_3 %26 = OpLoad %9 
                                        f32_3 %27 = OpLoad %9 
                                          f32 %28 = OpDot %26 %27 
                                                      OpStore %25 %28 
                                          f32 %29 = OpLoad %25 
                                          f32 %30 = OpExtInst %1 32 %29 
                                                      OpStore %25 %30 
                                        f32_3 %33 = OpLoad %9 
                                          f32 %34 = OpLoad %25 
                                        f32_3 %35 = OpCompositeConstruct %34 %34 %34 
                                        f32_3 %36 = OpFMul %33 %35 
                               Uniform f32_4* %39 = OpAccessChain %17 %37 
                                        f32_4 %40 = OpLoad %39 
                                        f32_3 %41 = OpVectorShuffle %40 %40 0 1 2 
                                        f32_3 %42 = OpFAdd %36 %41 
                                        f32_4 %43 = OpLoad %32 
                                        f32_4 %44 = OpVectorShuffle %43 %42 4 5 6 3 
                                                      OpStore %32 %44 
                                        f32_4 %46 = OpLoad %32 
                                        f32_3 %47 = OpVectorShuffle %46 %46 0 1 2 
                                        f32_4 %48 = OpLoad %32 
                                        f32_3 %49 = OpVectorShuffle %48 %48 0 1 2 
                                          f32 %50 = OpDot %47 %49 
                                                      OpStore %45 %50 
                                          f32 %51 = OpLoad %45 
                                          f32 %52 = OpExtInst %1 32 %51 
                                                      OpStore %45 %52 
                                          f32 %53 = OpLoad %45 
                                        f32_3 %54 = OpCompositeConstruct %53 %53 %53 
                                        f32_4 %55 = OpLoad %32 
                                        f32_3 %56 = OpVectorShuffle %55 %55 0 1 2 
                                        f32_3 %57 = OpFMul %54 %56 
                                        f32_4 %58 = OpLoad %32 
                                        f32_4 %59 = OpVectorShuffle %58 %57 4 5 6 3 
                                                      OpStore %32 %59 
                                        f32_3 %61 = OpLoad vs_TEXCOORD1 
                                        f32_3 %62 = OpLoad vs_TEXCOORD1 
                                          f32 %63 = OpDot %61 %62 
                                                      OpStore %45 %63 
                                          f32 %64 = OpLoad %45 
                                          f32 %65 = OpExtInst %1 32 %64 
                                                      OpStore %45 %65 
                                          f32 %67 = OpLoad %45 
                                        f32_3 %68 = OpCompositeConstruct %67 %67 %67 
                                        f32_3 %69 = OpLoad vs_TEXCOORD1 
                                        f32_3 %70 = OpFMul %68 %69 
                                                      OpStore %66 %70 
                                        f32_3 %71 = OpLoad %66 
                                        f32_4 %72 = OpLoad %32 
                                        f32_3 %73 = OpVectorShuffle %72 %72 0 1 2 
                                          f32 %74 = OpDot %71 %73 
                                 Private f32* %77 = OpAccessChain %32 %76 
                                                      OpStore %77 %74 
                                        f32_3 %78 = OpLoad %66 
                               Uniform f32_4* %79 = OpAccessChain %17 %37 
                                        f32_4 %80 = OpLoad %79 
                                        f32_3 %81 = OpVectorShuffle %80 %80 0 1 2 
                                          f32 %82 = OpDot %78 %81 
                                 Private f32* %84 = OpAccessChain %32 %83 
                                                      OpStore %84 %82 
                                        f32_4 %86 = OpLoad %32 
                                        f32_2 %87 = OpVectorShuffle %86 %86 0 1 
                                        f32_2 %90 = OpExtInst %1 40 %87 %89 
                                        f32_4 %91 = OpLoad %32 
                                        f32_4 %92 = OpVectorShuffle %91 %90 4 5 2 3 
                                                      OpStore %32 %92 
                                 Private f32* %93 = OpAccessChain %32 %76 
                                          f32 %94 = OpLoad %93 
                                          f32 %95 = OpExtInst %1 30 %94 
                                 Private f32* %96 = OpAccessChain %9 %76 
                                                      OpStore %96 %95 
                                 Uniform f32* %99 = OpAccessChain %17 %97 
                                         f32 %100 = OpLoad %99 
                                         f32 %102 = OpFMul %100 %101 
                                Private f32* %103 = OpAccessChain %32 %76 
                                                      OpStore %103 %102 
                                Private f32* %104 = OpAccessChain %9 %76 
                                         f32 %105 = OpLoad %104 
                                Private f32* %106 = OpAccessChain %32 %76 
                                         f32 %107 = OpLoad %106 
                                         f32 %108 = OpFMul %105 %107 
                                Private f32* %109 = OpAccessChain %9 %76 
                                                      OpStore %109 %108 
                                Private f32* %110 = OpAccessChain %9 %76 
                                         f32 %111 = OpLoad %110 
                                         f32 %112 = OpExtInst %1 29 %111 
                                Private f32* %113 = OpAccessChain %9 %76 
                                                      OpStore %113 %112 
                                Uniform f32* %115 = OpAccessChain %17 %114 
                                         f32 %116 = OpLoad %115 
                                         f32 %117 = OpFNegate %116 
                                         f32 %119 = OpFMul %117 %118 
                                         f32 %120 = OpFAdd %119 %118 
                                Private f32* %121 = OpAccessChain %32 %76 
                                                      OpStore %121 %120 
                                Private f32* %122 = OpAccessChain %9 %76 
                                         f32 %123 = OpLoad %122 
                                         f32 %125 = OpFMul %123 %124 
                                Private f32* %126 = OpAccessChain %32 %76 
                                         f32 %127 = OpLoad %126 
                                         f32 %128 = OpFNegate %127 
                                         f32 %129 = OpFAdd %125 %128 
                                Private f32* %130 = OpAccessChain %9 %76 
                                                      OpStore %130 %129 
                                Uniform f32* %132 = OpAccessChain %17 %114 
                                         f32 %133 = OpLoad %132 
                                         f32 %134 = OpFMul %133 %118 
                                         f32 %135 = OpFAdd %134 %118 
                                                      OpStore %131 %135 
                                Private f32* %137 = OpAccessChain %32 %76 
                                         f32 %138 = OpLoad %137 
                                         f32 %139 = OpFNegate %138 
                                         f32 %140 = OpLoad %131 
                                         f32 %141 = OpFAdd %139 %140 
                                                      OpStore %136 %141 
                                         f32 %143 = OpLoad %136 
                                         f32 %144 = OpFDiv %142 %143 
                                                      OpStore %136 %144 
                                         f32 %145 = OpLoad %136 
                                Private f32* %146 = OpAccessChain %9 %76 
                                         f32 %147 = OpLoad %146 
                                         f32 %148 = OpFMul %145 %147 
                                Private f32* %149 = OpAccessChain %9 %76 
                                                      OpStore %149 %148 
                                Private f32* %150 = OpAccessChain %9 %76 
                                         f32 %151 = OpLoad %150 
                                         f32 %152 = OpExtInst %1 43 %151 %88 %142 
                                Private f32* %153 = OpAccessChain %9 %76 
                                                      OpStore %153 %152 
                                Private f32* %154 = OpAccessChain %9 %76 
                                         f32 %155 = OpLoad %154 
                                         f32 %157 = OpFMul %155 %156 
                                         f32 %159 = OpFAdd %157 %158 
                                                      OpStore %136 %159 
                                Private f32* %160 = OpAccessChain %9 %76 
                                         f32 %161 = OpLoad %160 
                                Private f32* %162 = OpAccessChain %9 %76 
                                         f32 %163 = OpLoad %162 
                                         f32 %164 = OpFMul %161 %163 
                                Private f32* %165 = OpAccessChain %9 %76 
                                                      OpStore %165 %164 
                                Private f32* %166 = OpAccessChain %9 %76 
                                         f32 %167 = OpLoad %166 
                                         f32 %168 = OpLoad %136 
                                         f32 %169 = OpFMul %167 %168 
                                Private f32* %170 = OpAccessChain %9 %76 
                                                      OpStore %170 %169 
                              Uniform f32_4* %172 = OpAccessChain %17 %171 
                                       f32_4 %173 = OpLoad %172 
                                       f32_3 %174 = OpVectorShuffle %173 %173 0 1 2 
                              Uniform f32_4* %176 = OpAccessChain %17 %175 
                                       f32_4 %177 = OpLoad %176 
                                       f32_3 %178 = OpVectorShuffle %177 %177 0 1 2 
                                       f32_3 %179 = OpFMul %174 %178 
                                       f32_4 %180 = OpLoad %32 
                                       f32_4 %181 = OpVectorShuffle %180 %179 4 1 5 6 
                                                      OpStore %32 %181 
                                       f32_3 %182 = OpLoad %9 
                                       f32_3 %183 = OpVectorShuffle %182 %182 0 0 0 
                                       f32_4 %184 = OpLoad %32 
                                       f32_3 %185 = OpVectorShuffle %184 %184 0 2 3 
                                       f32_3 %186 = OpFMul %183 %185 
                                                      OpStore %9 %186 
                                Uniform f32* %188 = OpAccessChain %17 %187 
                                         f32 %189 = OpLoad %188 
                                         f32 %190 = OpFNegate %189 
                                         f32 %191 = OpFMul %190 %118 
                                Uniform f32* %193 = OpAccessChain %17 %192 
                                         f32 %194 = OpLoad %193 
                                         f32 %195 = OpFAdd %191 %194 
                                Private f32* %196 = OpAccessChain %32 %76 
                                                      OpStore %196 %195 
                                Private f32* %198 = OpAccessChain %32 %76 
                                         f32 %199 = OpLoad %198 
                                         f32 %200 = OpFNegate %199 
                                Private f32* %201 = OpAccessChain %32 %83 
                                         f32 %202 = OpLoad %201 
                                         f32 %203 = OpFAdd %200 %202 
                                Private f32* %204 = OpAccessChain %197 %76 
                                                      OpStore %204 %203 
                                Uniform f32* %205 = OpAccessChain %17 %187 
                                         f32 %206 = OpLoad %205 
                                         f32 %207 = OpFMul %206 %118 
                                Uniform f32* %208 = OpAccessChain %17 %192 
                                         f32 %209 = OpLoad %208 
                                         f32 %210 = OpFAdd %207 %209 
                                                      OpStore %131 %210 
                                Private f32* %211 = OpAccessChain %32 %76 
                                         f32 %212 = OpLoad %211 
                                         f32 %213 = OpFNegate %212 
                                         f32 %214 = OpLoad %131 
                                         f32 %215 = OpFAdd %213 %214 
                                Private f32* %216 = OpAccessChain %32 %76 
                                                      OpStore %216 %215 
                                Private f32* %217 = OpAccessChain %32 %76 
                                         f32 %218 = OpLoad %217 
                                         f32 %219 = OpFDiv %142 %218 
                                Private f32* %220 = OpAccessChain %32 %76 
                                                      OpStore %220 %219 
                                Private f32* %221 = OpAccessChain %32 %76 
                                         f32 %222 = OpLoad %221 
                                Private f32* %223 = OpAccessChain %197 %76 
                                         f32 %224 = OpLoad %223 
                                         f32 %225 = OpFMul %222 %224 
                                Private f32* %226 = OpAccessChain %32 %76 
                                                      OpStore %226 %225 
                                Private f32* %227 = OpAccessChain %32 %76 
                                         f32 %228 = OpLoad %227 
                                         f32 %229 = OpExtInst %1 43 %228 %88 %142 
                                Private f32* %230 = OpAccessChain %32 %76 
                                                      OpStore %230 %229 
                                Private f32* %231 = OpAccessChain %32 %76 
                                         f32 %232 = OpLoad %231 
                                         f32 %233 = OpFMul %232 %156 
                                         f32 %234 = OpFAdd %233 %158 
                                Private f32* %235 = OpAccessChain %197 %76 
                                                      OpStore %235 %234 
                                Private f32* %236 = OpAccessChain %32 %76 
                                         f32 %237 = OpLoad %236 
                                Private f32* %238 = OpAccessChain %32 %76 
                                         f32 %239 = OpLoad %238 
                                         f32 %240 = OpFMul %237 %239 
                                Private f32* %241 = OpAccessChain %32 %76 
                                                      OpStore %241 %240 
                                Private f32* %242 = OpAccessChain %32 %76 
                                         f32 %243 = OpLoad %242 
                                Private f32* %244 = OpAccessChain %197 %76 
                                         f32 %245 = OpLoad %244 
                                         f32 %246 = OpFMul %243 %245 
                                Private f32* %247 = OpAccessChain %32 %76 
                                                      OpStore %247 %246 
                              Uniform f32_4* %249 = OpAccessChain %17 %248 
                                       f32_4 %250 = OpLoad %249 
                                       f32_3 %251 = OpVectorShuffle %250 %250 0 1 2 
                                       f32_3 %252 = OpFNegate %251 
                              Uniform f32_4* %254 = OpAccessChain %17 %253 
                                       f32_4 %255 = OpLoad %254 
                                       f32_3 %256 = OpVectorShuffle %255 %255 0 1 2 
                                       f32_3 %257 = OpFAdd %252 %256 
                                                      OpStore %197 %257 
                              Uniform f32_4* %258 = OpAccessChain %17 %253 
                                       f32_4 %259 = OpLoad %258 
                                       f32_3 %260 = OpVectorShuffle %259 %259 3 3 3 
                                       f32_3 %261 = OpLoad %197 
                                       f32_3 %262 = OpFMul %260 %261 
                              Uniform f32_4* %263 = OpAccessChain %17 %248 
                                       f32_4 %264 = OpLoad %263 
                                       f32_3 %265 = OpVectorShuffle %264 %264 0 1 2 
                                       f32_3 %266 = OpFAdd %262 %265 
                                                      OpStore %197 %266 
                                       f32_3 %267 = OpLoad %197 
                                       f32_3 %268 = OpFNegate %267 
                              Uniform f32_4* %269 = OpAccessChain %17 %248 
                                       f32_4 %270 = OpLoad %269 
                                       f32_3 %271 = OpVectorShuffle %270 %270 0 1 2 
                                       f32_3 %272 = OpFAdd %268 %271 
                                                      OpStore %66 %272 
                                       f32_4 %273 = OpLoad %32 
                                       f32_3 %274 = OpVectorShuffle %273 %273 0 0 0 
                                       f32_3 %275 = OpLoad %66 
                                       f32_3 %276 = OpFMul %274 %275 
                                       f32_3 %277 = OpLoad %197 
                                       f32_3 %278 = OpFAdd %276 %277 
                                       f32_4 %279 = OpLoad %32 
                                       f32_4 %280 = OpVectorShuffle %279 %278 4 5 6 3 
                                                      OpStore %32 %280 
                         read_only Texture2D %285 = OpLoad %284 
                                     sampler %289 = OpLoad %288 
                  read_only Texture2DSampled %291 = OpSampledImage %285 %289 
                                       f32_2 %294 = OpLoad vs_TEXCOORD0 
                                       f32_4 %295 = OpImageSampleImplicitLod %291 %294 
                                       f32_3 %296 = OpVectorShuffle %295 %295 0 1 2 
                                                      OpStore %281 %296 
                                       f32_3 %297 = OpLoad %281 
                              Uniform f32_4* %299 = OpAccessChain %17 %298 
                                       f32_4 %300 = OpLoad %299 
                                       f32_3 %301 = OpVectorShuffle %300 %300 0 1 2 
                                       f32_3 %302 = OpFMul %297 %301 
                                                      OpStore %66 %302 
                                       f32_3 %303 = OpLoad %66 
                              Uniform f32_4* %304 = OpAccessChain %17 %171 
                                       f32_4 %305 = OpLoad %304 
                                       f32_3 %306 = OpVectorShuffle %305 %305 0 1 2 
                                       f32_3 %307 = OpFMul %303 %306 
                                                      OpStore %66 %307 
                                       f32_3 %308 = OpLoad %66 
                                       f32_4 %309 = OpLoad %32 
                                       f32_3 %310 = OpVectorShuffle %309 %309 0 1 2 
                                       f32_3 %311 = OpFMul %308 %310 
                                       f32_3 %312 = OpLoad %9 
                                       f32_3 %313 = OpFAdd %311 %312 
                                                      OpStore %9 %313 
                                       f32_3 %316 = OpLoad %9 
                                       f32_4 %317 = OpLoad %315 
                                       f32_4 %318 = OpVectorShuffle %317 %316 4 5 6 3 
                                                      OpStore %315 %318 
                                 Output f32* %321 = OpAccessChain %315 %319 
                                                      OpStore %321 %142 
                                                      OpReturn
                                                      OpFunctionEnd
"
}
SubProgram "vulkan hw_tier01 " {
Keywords { "DIRECTIONAL" "VERTEXLIGHT_ON" }
"; SPIR-V
; Version: 1.0
; Generator: Khronos Glslang Reference Front End; 6
; Bound: 160
; Schema: 0
                                                      OpCapability Shader 
                                               %1 = OpExtInstImport "GLSL.std.450" 
                                                      OpMemoryModel Logical GLSL450 
                                                      OpEntryPoint Vertex %4 "main" %11 %52 %85 %95 %110 %114 %144 %150 %153 
                                                      OpName vs_TEXCOORD2 "vs_TEXCOORD2" 
                                                      OpName vs_TEXCOORD0 "vs_TEXCOORD0" 
                                                      OpName vs_TEXCOORD1 "vs_TEXCOORD1" 
                                                      OpName vs_TEXCOORD5 "vs_TEXCOORD5" 
                                                      OpName vs_TEXCOORD6 "vs_TEXCOORD6" 
                                                      OpDecorate %11 Location 11 
                                                      OpDecorate %16 ArrayStride 16 
                                                      OpDecorate %17 ArrayStride 17 
                                                      OpDecorate %18 ArrayStride 18 
                                                      OpMemberDecorate %19 0 Offset 19 
                                                      OpMemberDecorate %19 1 Offset 19 
                                                      OpMemberDecorate %19 2 Offset 19 
                                                      OpMemberDecorate %19 3 Offset 19 
                                                      OpDecorate %19 Block 
                                                      OpDecorate %21 DescriptorSet 21 
                                                      OpDecorate %21 Binding 21 
                                                      OpDecorate vs_TEXCOORD2 Location 52 
                                                      OpMemberDecorate %83 0 BuiltIn 83 
                                                      OpMemberDecorate %83 1 BuiltIn 83 
                                                      OpMemberDecorate %83 2 BuiltIn 83 
                                                      OpDecorate %83 Block 
                                                      OpDecorate %95 Location 95 
                                                      OpDecorate vs_TEXCOORD0 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD0 Location 110 
                                                      OpDecorate %114 Location 114 
                                                      OpDecorate vs_TEXCOORD1 Location 144 
                                                      OpDecorate vs_TEXCOORD5 Location 150 
                                                      OpDecorate vs_TEXCOORD6 Location 153 
                                               %2 = OpTypeVoid 
                                               %3 = OpTypeFunction %2 
                                               %6 = OpTypeFloat 32 
                                               %7 = OpTypeVector %6 4 
                                               %8 = OpTypePointer Private %7 
                                Private f32_4* %9 = OpVariable Private 
                                              %10 = OpTypePointer Input %7 
                                 Input f32_4* %11 = OpVariable Input 
                                              %14 = OpTypeInt 32 0 
                                          u32 %15 = OpConstant 4 
                                              %16 = OpTypeArray %7 %15 
                                              %17 = OpTypeArray %7 %15 
                                              %18 = OpTypeArray %7 %15 
                                              %19 = OpTypeStruct %16 %17 %18 %7 
                                              %20 = OpTypePointer Uniform %19 
Uniform struct {f32_4[4]; f32_4[4]; f32_4[4]; f32_4;}* %21 = OpVariable Uniform 
                                              %22 = OpTypeInt 32 1 
                                          i32 %23 = OpConstant 0 
                                          i32 %24 = OpConstant 1 
                                              %25 = OpTypePointer Uniform %7 
                                          i32 %36 = OpConstant 2 
                               Private f32_4* %44 = OpVariable Private 
                                          i32 %46 = OpConstant 3 
                                              %50 = OpTypeVector %6 3 
                                              %51 = OpTypePointer Output %50 
                       Output f32_3* vs_TEXCOORD2 = OpVariable Output 
                                          u32 %81 = OpConstant 1 
                                              %82 = OpTypeArray %6 %81 
                                              %83 = OpTypeStruct %7 %6 %82 
                                              %84 = OpTypePointer Output %83 
         Output struct {f32_4; f32; f32[1];}* %85 = OpVariable Output 
                                              %93 = OpTypePointer Output %7 
                                 Input f32_4* %95 = OpVariable Input 
                                              %96 = OpTypeVector %6 2 
                                             %109 = OpTypePointer Output %96 
                       Output f32_2* vs_TEXCOORD0 = OpVariable Output 
                                             %113 = OpTypePointer Input %50 
                                Input f32_3* %114 = OpVariable Input 
                                         u32 %120 = OpConstant 0 
                                             %121 = OpTypePointer Private %6 
                                         u32 %134 = OpConstant 2 
                                Private f32* %136 = OpVariable Private 
                       Output f32_3* vs_TEXCOORD1 = OpVariable Output 
                       Output f32_4* vs_TEXCOORD5 = OpVariable Output 
                                         f32 %151 = OpConstant 3.674022E-40 
                                       f32_4 %152 = OpConstantComposite %151 %151 %151 %151 
                       Output f32_4* vs_TEXCOORD6 = OpVariable Output 
                                             %154 = OpTypePointer Output %6 
                                          void %4 = OpFunction None %3 
                                               %5 = OpLabel 
                                        f32_4 %12 = OpLoad %11 
                                        f32_4 %13 = OpVectorShuffle %12 %12 1 1 1 1 
                               Uniform f32_4* %26 = OpAccessChain %21 %23 %24 
                                        f32_4 %27 = OpLoad %26 
                                        f32_4 %28 = OpFMul %13 %27 
                                                      OpStore %9 %28 
                               Uniform f32_4* %29 = OpAccessChain %21 %23 %23 
                                        f32_4 %30 = OpLoad %29 
                                        f32_4 %31 = OpLoad %11 
                                        f32_4 %32 = OpVectorShuffle %31 %31 0 0 0 0 
                                        f32_4 %33 = OpFMul %30 %32 
                                        f32_4 %34 = OpLoad %9 
                                        f32_4 %35 = OpFAdd %33 %34 
                                                      OpStore %9 %35 
                               Uniform f32_4* %37 = OpAccessChain %21 %23 %36 
                                        f32_4 %38 = OpLoad %37 
                                        f32_4 %39 = OpLoad %11 
                                        f32_4 %40 = OpVectorShuffle %39 %39 2 2 2 2 
                                        f32_4 %41 = OpFMul %38 %40 
                                        f32_4 %42 = OpLoad %9 
                                        f32_4 %43 = OpFAdd %41 %42 
                                                      OpStore %9 %43 
                                        f32_4 %45 = OpLoad %9 
                               Uniform f32_4* %47 = OpAccessChain %21 %23 %46 
                                        f32_4 %48 = OpLoad %47 
                                        f32_4 %49 = OpFAdd %45 %48 
                                                      OpStore %44 %49 
                               Uniform f32_4* %53 = OpAccessChain %21 %23 %46 
                                        f32_4 %54 = OpLoad %53 
                                        f32_3 %55 = OpVectorShuffle %54 %54 0 1 2 
                                        f32_4 %56 = OpLoad %11 
                                        f32_3 %57 = OpVectorShuffle %56 %56 3 3 3 
                                        f32_3 %58 = OpFMul %55 %57 
                                        f32_4 %59 = OpLoad %9 
                                        f32_3 %60 = OpVectorShuffle %59 %59 0 1 2 
                                        f32_3 %61 = OpFAdd %58 %60 
                                                      OpStore vs_TEXCOORD2 %61 
                                        f32_4 %62 = OpLoad %44 
                                        f32_4 %63 = OpVectorShuffle %62 %62 1 1 1 1 
                               Uniform f32_4* %64 = OpAccessChain %21 %36 %24 
                                        f32_4 %65 = OpLoad %64 
                                        f32_4 %66 = OpFMul %63 %65 
                                                      OpStore %9 %66 
                               Uniform f32_4* %67 = OpAccessChain %21 %36 %23 
                                        f32_4 %68 = OpLoad %67 
                                        f32_4 %69 = OpLoad %44 
                                        f32_4 %70 = OpVectorShuffle %69 %69 0 0 0 0 
                                        f32_4 %71 = OpFMul %68 %70 
                                        f32_4 %72 = OpLoad %9 
                                        f32_4 %73 = OpFAdd %71 %72 
                                                      OpStore %9 %73 
                               Uniform f32_4* %74 = OpAccessChain %21 %36 %36 
                                        f32_4 %75 = OpLoad %74 
                                        f32_4 %76 = OpLoad %44 
                                        f32_4 %77 = OpVectorShuffle %76 %76 2 2 2 2 
                                        f32_4 %78 = OpFMul %75 %77 
                                        f32_4 %79 = OpLoad %9 
                                        f32_4 %80 = OpFAdd %78 %79 
                                                      OpStore %9 %80 
                               Uniform f32_4* %86 = OpAccessChain %21 %36 %46 
                                        f32_4 %87 = OpLoad %86 
                                        f32_4 %88 = OpLoad %44 
                                        f32_4 %89 = OpVectorShuffle %88 %88 3 3 3 3 
                                        f32_4 %90 = OpFMul %87 %89 
                                        f32_4 %91 = OpLoad %9 
                                        f32_4 %92 = OpFAdd %90 %91 
                                Output f32_4* %94 = OpAccessChain %85 %23 
                                                      OpStore %94 %92 
                                        f32_4 %97 = OpLoad %95 
                                        f32_2 %98 = OpVectorShuffle %97 %97 0 1 
                               Uniform f32_4* %99 = OpAccessChain %21 %46 
                                       f32_4 %100 = OpLoad %99 
                                       f32_2 %101 = OpVectorShuffle %100 %100 0 1 
                                       f32_2 %102 = OpFMul %98 %101 
                              Uniform f32_4* %103 = OpAccessChain %21 %46 
                                       f32_4 %104 = OpLoad %103 
                                       f32_2 %105 = OpVectorShuffle %104 %104 2 3 
                                       f32_2 %106 = OpFAdd %102 %105 
                                       f32_4 %107 = OpLoad %9 
                                       f32_4 %108 = OpVectorShuffle %107 %106 4 5 2 3 
                                                      OpStore %9 %108 
                                       f32_4 %111 = OpLoad %9 
                                       f32_2 %112 = OpVectorShuffle %111 %111 0 1 
                                                      OpStore vs_TEXCOORD0 %112 
                                       f32_3 %115 = OpLoad %114 
                              Uniform f32_4* %116 = OpAccessChain %21 %24 %23 
                                       f32_4 %117 = OpLoad %116 
                                       f32_3 %118 = OpVectorShuffle %117 %117 0 1 2 
                                         f32 %119 = OpDot %115 %118 
                                Private f32* %122 = OpAccessChain %9 %120 
                                                      OpStore %122 %119 
                                       f32_3 %123 = OpLoad %114 
                              Uniform f32_4* %124 = OpAccessChain %21 %24 %24 
                                       f32_4 %125 = OpLoad %124 
                                       f32_3 %126 = OpVectorShuffle %125 %125 0 1 2 
                                         f32 %127 = OpDot %123 %126 
                                Private f32* %128 = OpAccessChain %9 %81 
                                                      OpStore %128 %127 
                                       f32_3 %129 = OpLoad %114 
                              Uniform f32_4* %130 = OpAccessChain %21 %24 %36 
                                       f32_4 %131 = OpLoad %130 
                                       f32_3 %132 = OpVectorShuffle %131 %131 0 1 2 
                                         f32 %133 = OpDot %129 %132 
                                Private f32* %135 = OpAccessChain %9 %134 
                                                      OpStore %135 %133 
                                       f32_4 %137 = OpLoad %9 
                                       f32_3 %138 = OpVectorShuffle %137 %137 0 1 2 
                                       f32_4 %139 = OpLoad %9 
                                       f32_3 %140 = OpVectorShuffle %139 %139 0 1 2 
                                         f32 %141 = OpDot %138 %140 
                                                      OpStore %136 %141 
                                         f32 %142 = OpLoad %136 
                                         f32 %143 = OpExtInst %1 32 %142 
                                                      OpStore %136 %143 
                                         f32 %145 = OpLoad %136 
                                       f32_3 %146 = OpCompositeConstruct %145 %145 %145 
                                       f32_4 %147 = OpLoad %9 
                                       f32_3 %148 = OpVectorShuffle %147 %147 0 1 2 
                                       f32_3 %149 = OpFMul %146 %148 
                                                      OpStore vs_TEXCOORD1 %149 
                                                      OpStore vs_TEXCOORD5 %152 
                                                      OpStore vs_TEXCOORD6 %152 
                                 Output f32* %155 = OpAccessChain %85 %23 %81 
                                         f32 %156 = OpLoad %155 
                                         f32 %157 = OpFNegate %156 
                                 Output f32* %158 = OpAccessChain %85 %23 %81 
                                                      OpStore %158 %157 
                                                      OpReturn
                                                      OpFunctionEnd
; SPIR-V
; Version: 1.0
; Generator: Khronos Glslang Reference Front End; 6
; Bound: 323
; Schema: 0
                                                      OpCapability Shader 
                                               %1 = OpExtInstImport "GLSL.std.450" 
                                                      OpMemoryModel Logical GLSL450 
                                                      OpEntryPoint Fragment %4 "main" %11 %60 %293 %315 
                                                      OpExecutionMode %4 OriginUpperLeft 
                                                      OpName vs_TEXCOORD2 "vs_TEXCOORD2" 
                                                      OpName vs_TEXCOORD1 "vs_TEXCOORD1" 
                                                      OpName vs_TEXCOORD0 "vs_TEXCOORD0" 
                                                      OpDecorate vs_TEXCOORD2 Location 11 
                                                      OpMemberDecorate %15 0 Offset 15 
                                                      OpMemberDecorate %15 1 RelaxedPrecision 
                                                      OpMemberDecorate %15 1 Offset 15 
                                                      OpMemberDecorate %15 2 RelaxedPrecision 
                                                      OpMemberDecorate %15 2 Offset 15 
                                                      OpMemberDecorate %15 3 RelaxedPrecision 
                                                      OpMemberDecorate %15 3 Offset 15 
                                                      OpMemberDecorate %15 4 RelaxedPrecision 
                                                      OpMemberDecorate %15 4 Offset 15 
                                                      OpMemberDecorate %15 5 RelaxedPrecision 
                                                      OpMemberDecorate %15 5 Offset 15 
                                                      OpMemberDecorate %15 6 RelaxedPrecision 
                                                      OpMemberDecorate %15 6 Offset 15 
                                                      OpMemberDecorate %15 7 RelaxedPrecision 
                                                      OpMemberDecorate %15 7 Offset 15 
                                                      OpMemberDecorate %15 8 RelaxedPrecision 
                                                      OpMemberDecorate %15 8 Offset 15 
                                                      OpMemberDecorate %15 9 RelaxedPrecision 
                                                      OpMemberDecorate %15 9 Offset 15 
                                                      OpMemberDecorate %15 10 RelaxedPrecision 
                                                      OpMemberDecorate %15 10 Offset 15 
                                                      OpDecorate %15 Block 
                                                      OpDecorate %17 DescriptorSet 17 
                                                      OpDecorate %17 Binding 17 
                                                      OpDecorate %32 RelaxedPrecision 
                                                      OpDecorate %40 RelaxedPrecision 
                                                      OpDecorate %41 RelaxedPrecision 
                                                      OpDecorate %45 RelaxedPrecision 
                                                      OpDecorate %46 RelaxedPrecision 
                                                      OpDecorate %47 RelaxedPrecision 
                                                      OpDecorate %48 RelaxedPrecision 
                                                      OpDecorate %49 RelaxedPrecision 
                                                      OpDecorate %50 RelaxedPrecision 
                                                      OpDecorate %51 RelaxedPrecision 
                                                      OpDecorate %52 RelaxedPrecision 
                                                      OpDecorate %53 RelaxedPrecision 
                                                      OpDecorate %54 RelaxedPrecision 
                                                      OpDecorate %55 RelaxedPrecision 
                                                      OpDecorate %56 RelaxedPrecision 
                                                      OpDecorate %57 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD1 Location 60 
                                                      OpDecorate %64 RelaxedPrecision 
                                                      OpDecorate %65 RelaxedPrecision 
                                                      OpDecorate %66 RelaxedPrecision 
                                                      OpDecorate %67 RelaxedPrecision 
                                                      OpDecorate %71 RelaxedPrecision 
                                                      OpDecorate %72 RelaxedPrecision 
                                                      OpDecorate %73 RelaxedPrecision 
                                                      OpDecorate %74 RelaxedPrecision 
                                                      OpDecorate %78 RelaxedPrecision 
                                                      OpDecorate %80 RelaxedPrecision 
                                                      OpDecorate %81 RelaxedPrecision 
                                                      OpDecorate %82 RelaxedPrecision 
                                                      OpDecorate %86 RelaxedPrecision 
                                                      OpDecorate %87 RelaxedPrecision 
                                                      OpDecorate %90 RelaxedPrecision 
                                                      OpDecorate %94 RelaxedPrecision 
                                                      OpDecorate %95 RelaxedPrecision 
                                                      OpDecorate %100 RelaxedPrecision 
                                                      OpDecorate %102 RelaxedPrecision 
                                                      OpDecorate %107 RelaxedPrecision 
                                                      OpDecorate %116 RelaxedPrecision 
                                                      OpDecorate %117 RelaxedPrecision 
                                                      OpDecorate %119 RelaxedPrecision 
                                                      OpDecorate %120 RelaxedPrecision 
                                                      OpDecorate %127 RelaxedPrecision 
                                                      OpDecorate %128 RelaxedPrecision 
                                                      OpDecorate %131 RelaxedPrecision 
                                                      OpDecorate %133 RelaxedPrecision 
                                                      OpDecorate %134 RelaxedPrecision 
                                                      OpDecorate %135 RelaxedPrecision 
                                                      OpDecorate %138 RelaxedPrecision 
                                                      OpDecorate %139 RelaxedPrecision 
                                                      OpDecorate %140 RelaxedPrecision 
                                                      OpDecorate %141 RelaxedPrecision 
                                                      OpDecorate %173 RelaxedPrecision 
                                                      OpDecorate %174 RelaxedPrecision 
                                                      OpDecorate %177 RelaxedPrecision 
                                                      OpDecorate %178 RelaxedPrecision 
                                                      OpDecorate %179 RelaxedPrecision 
                                                      OpDecorate %184 RelaxedPrecision 
                                                      OpDecorate %185 RelaxedPrecision 
                                                      OpDecorate %189 RelaxedPrecision 
                                                      OpDecorate %190 RelaxedPrecision 
                                                      OpDecorate %191 RelaxedPrecision 
                                                      OpDecorate %194 RelaxedPrecision 
                                                      OpDecorate %195 RelaxedPrecision 
                                                      OpDecorate %197 RelaxedPrecision 
                                                      OpDecorate %199 RelaxedPrecision 
                                                      OpDecorate %200 RelaxedPrecision 
                                                      OpDecorate %202 RelaxedPrecision 
                                                      OpDecorate %203 RelaxedPrecision 
                                                      OpDecorate %206 RelaxedPrecision 
                                                      OpDecorate %207 RelaxedPrecision 
                                                      OpDecorate %209 RelaxedPrecision 
                                                      OpDecorate %210 RelaxedPrecision 
                                                      OpDecorate %212 RelaxedPrecision 
                                                      OpDecorate %213 RelaxedPrecision 
                                                      OpDecorate %214 RelaxedPrecision 
                                                      OpDecorate %215 RelaxedPrecision 
                                                      OpDecorate %218 RelaxedPrecision 
                                                      OpDecorate %219 RelaxedPrecision 
                                                      OpDecorate %222 RelaxedPrecision 
                                                      OpDecorate %224 RelaxedPrecision 
                                                      OpDecorate %225 RelaxedPrecision 
                                                      OpDecorate %228 RelaxedPrecision 
                                                      OpDecorate %229 RelaxedPrecision 
                                                      OpDecorate %232 RelaxedPrecision 
                                                      OpDecorate %233 RelaxedPrecision 
                                                      OpDecorate %234 RelaxedPrecision 
                                                      OpDecorate %237 RelaxedPrecision 
                                                      OpDecorate %239 RelaxedPrecision 
                                                      OpDecorate %240 RelaxedPrecision 
                                                      OpDecorate %243 RelaxedPrecision 
                                                      OpDecorate %245 RelaxedPrecision 
                                                      OpDecorate %246 RelaxedPrecision 
                                                      OpDecorate %250 RelaxedPrecision 
                                                      OpDecorate %251 RelaxedPrecision 
                                                      OpDecorate %252 RelaxedPrecision 
                                                      OpDecorate %255 RelaxedPrecision 
                                                      OpDecorate %256 RelaxedPrecision 
                                                      OpDecorate %257 RelaxedPrecision 
                                                      OpDecorate %259 RelaxedPrecision 
                                                      OpDecorate %260 RelaxedPrecision 
                                                      OpDecorate %261 RelaxedPrecision 
                                                      OpDecorate %262 RelaxedPrecision 
                                                      OpDecorate %264 RelaxedPrecision 
                                                      OpDecorate %265 RelaxedPrecision 
                                                      OpDecorate %266 RelaxedPrecision 
                                                      OpDecorate %267 RelaxedPrecision 
                                                      OpDecorate %268 RelaxedPrecision 
                                                      OpDecorate %270 RelaxedPrecision 
                                                      OpDecorate %271 RelaxedPrecision 
                                                      OpDecorate %272 RelaxedPrecision 
                                                      OpDecorate %273 RelaxedPrecision 
                                                      OpDecorate %274 RelaxedPrecision 
                                                      OpDecorate %275 RelaxedPrecision 
                                                      OpDecorate %276 RelaxedPrecision 
                                                      OpDecorate %277 RelaxedPrecision 
                                                      OpDecorate %278 RelaxedPrecision 
                                                      OpDecorate %281 RelaxedPrecision 
                                                      OpDecorate %284 RelaxedPrecision 
                                                      OpDecorate %284 DescriptorSet 284 
                                                      OpDecorate %284 Binding 284 
                                                      OpDecorate %285 RelaxedPrecision 
                                                      OpDecorate %288 RelaxedPrecision 
                                                      OpDecorate %288 DescriptorSet 288 
                                                      OpDecorate %288 Binding 288 
                                                      OpDecorate %289 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD0 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD0 Location 293 
                                                      OpDecorate %294 RelaxedPrecision 
                                                      OpDecorate %295 RelaxedPrecision 
                                                      OpDecorate %296 RelaxedPrecision 
                                                      OpDecorate %297 RelaxedPrecision 
                                                      OpDecorate %300 RelaxedPrecision 
                                                      OpDecorate %301 RelaxedPrecision 
                                                      OpDecorate %302 RelaxedPrecision 
                                                      OpDecorate %303 RelaxedPrecision 
                                                      OpDecorate %305 RelaxedPrecision 
                                                      OpDecorate %306 RelaxedPrecision 
                                                      OpDecorate %307 RelaxedPrecision 
                                                      OpDecorate %308 RelaxedPrecision 
                                                      OpDecorate %309 RelaxedPrecision 
                                                      OpDecorate %310 RelaxedPrecision 
                                                      OpDecorate %311 RelaxedPrecision 
                                                      OpDecorate %315 RelaxedPrecision 
                                                      OpDecorate %315 Location 315 
                                               %2 = OpTypeVoid 
                                               %3 = OpTypeFunction %2 
                                               %6 = OpTypeFloat 32 
                                               %7 = OpTypeVector %6 3 
                                               %8 = OpTypePointer Private %7 
                                Private f32_3* %9 = OpVariable Private 
                                              %10 = OpTypePointer Input %7 
                        Input f32_3* vs_TEXCOORD2 = OpVariable Input 
                                              %14 = OpTypeVector %6 4 
                                              %15 = OpTypeStruct %7 %14 %14 %14 %14 %6 %14 %14 %6 %6 %6 
                                              %16 = OpTypePointer Uniform %15 
Uniform struct {f32_3; f32_4; f32_4; f32_4; f32_4; f32; f32_4; f32_4; f32; f32; f32;}* %17 = OpVariable Uniform 
                                              %18 = OpTypeInt 32 1 
                                          i32 %19 = OpConstant 0 
                                              %20 = OpTypePointer Uniform %7 
                                              %24 = OpTypePointer Private %6 
                                 Private f32* %25 = OpVariable Private 
                                              %31 = OpTypePointer Private %14 
                               Private f32_4* %32 = OpVariable Private 
                                          i32 %37 = OpConstant 1 
                                              %38 = OpTypePointer Uniform %14 
                                 Private f32* %45 = OpVariable Private 
                        Input f32_3* vs_TEXCOORD1 = OpVariable Input 
                               Private f32_3* %66 = OpVariable Private 
                                              %75 = OpTypeInt 32 0 
                                          u32 %76 = OpConstant 0 
                                          u32 %83 = OpConstant 1 
                                              %85 = OpTypeVector %6 2 
                                          f32 %88 = OpConstant 3.674022E-40 
                                        f32_2 %89 = OpConstantComposite %88 %88 
                                          i32 %97 = OpConstant 5 
                                              %98 = OpTypePointer Uniform %6 
                                         f32 %101 = OpConstant 3.674022E-40 
                                         i32 %114 = OpConstant 10 
                                         f32 %118 = OpConstant 3.674022E-40 
                                         f32 %124 = OpConstant 3.674022E-40 
                                Private f32* %131 = OpVariable Private 
                                Private f32* %136 = OpVariable Private 
                                         f32 %142 = OpConstant 3.674022E-40 
                                         f32 %156 = OpConstant 3.674022E-40 
                                         f32 %158 = OpConstant 3.674022E-40 
                                         i32 %171 = OpConstant 2 
                                         i32 %175 = OpConstant 3 
                                         i32 %187 = OpConstant 9 
                                         i32 %192 = OpConstant 8 
                              Private f32_3* %197 = OpVariable Private 
                                         i32 %248 = OpConstant 6 
                                         i32 %253 = OpConstant 7 
                              Private f32_3* %281 = OpVariable Private 
                                             %282 = OpTypeImage %6 Dim2D 0 0 0 1 Unknown 
                                             %283 = OpTypePointer UniformConstant %282 
        UniformConstant read_only Texture2D* %284 = OpVariable UniformConstant 
                                             %286 = OpTypeSampler 
                                             %287 = OpTypePointer UniformConstant %286 
                    UniformConstant sampler* %288 = OpVariable UniformConstant 
                                             %290 = OpTypeSampledImage %282 
                                             %292 = OpTypePointer Input %85 
                        Input f32_2* vs_TEXCOORD0 = OpVariable Input 
                                         i32 %298 = OpConstant 4 
                                             %314 = OpTypePointer Output %14 
                               Output f32_4* %315 = OpVariable Output 
                                         u32 %319 = OpConstant 3 
                                             %320 = OpTypePointer Output %6 
                                          void %4 = OpFunction None %3 
                                               %5 = OpLabel 
                                        f32_3 %12 = OpLoad vs_TEXCOORD2 
                                        f32_3 %13 = OpFNegate %12 
                               Uniform f32_3* %21 = OpAccessChain %17 %19 
                                        f32_3 %22 = OpLoad %21 
                                        f32_3 %23 = OpFAdd %13 %22 
                                                      OpStore %9 %23 
                                        f32_3 %26 = OpLoad %9 
                                        f32_3 %27 = OpLoad %9 
                                          f32 %28 = OpDot %26 %27 
                                                      OpStore %25 %28 
                                          f32 %29 = OpLoad %25 
                                          f32 %30 = OpExtInst %1 32 %29 
                                                      OpStore %25 %30 
                                        f32_3 %33 = OpLoad %9 
                                          f32 %34 = OpLoad %25 
                                        f32_3 %35 = OpCompositeConstruct %34 %34 %34 
                                        f32_3 %36 = OpFMul %33 %35 
                               Uniform f32_4* %39 = OpAccessChain %17 %37 
                                        f32_4 %40 = OpLoad %39 
                                        f32_3 %41 = OpVectorShuffle %40 %40 0 1 2 
                                        f32_3 %42 = OpFAdd %36 %41 
                                        f32_4 %43 = OpLoad %32 
                                        f32_4 %44 = OpVectorShuffle %43 %42 4 5 6 3 
                                                      OpStore %32 %44 
                                        f32_4 %46 = OpLoad %32 
                                        f32_3 %47 = OpVectorShuffle %46 %46 0 1 2 
                                        f32_4 %48 = OpLoad %32 
                                        f32_3 %49 = OpVectorShuffle %48 %48 0 1 2 
                                          f32 %50 = OpDot %47 %49 
                                                      OpStore %45 %50 
                                          f32 %51 = OpLoad %45 
                                          f32 %52 = OpExtInst %1 32 %51 
                                                      OpStore %45 %52 
                                          f32 %53 = OpLoad %45 
                                        f32_3 %54 = OpCompositeConstruct %53 %53 %53 
                                        f32_4 %55 = OpLoad %32 
                                        f32_3 %56 = OpVectorShuffle %55 %55 0 1 2 
                                        f32_3 %57 = OpFMul %54 %56 
                                        f32_4 %58 = OpLoad %32 
                                        f32_4 %59 = OpVectorShuffle %58 %57 4 5 6 3 
                                                      OpStore %32 %59 
                                        f32_3 %61 = OpLoad vs_TEXCOORD1 
                                        f32_3 %62 = OpLoad vs_TEXCOORD1 
                                          f32 %63 = OpDot %61 %62 
                                                      OpStore %45 %63 
                                          f32 %64 = OpLoad %45 
                                          f32 %65 = OpExtInst %1 32 %64 
                                                      OpStore %45 %65 
                                          f32 %67 = OpLoad %45 
                                        f32_3 %68 = OpCompositeConstruct %67 %67 %67 
                                        f32_3 %69 = OpLoad vs_TEXCOORD1 
                                        f32_3 %70 = OpFMul %68 %69 
                                                      OpStore %66 %70 
                                        f32_3 %71 = OpLoad %66 
                                        f32_4 %72 = OpLoad %32 
                                        f32_3 %73 = OpVectorShuffle %72 %72 0 1 2 
                                          f32 %74 = OpDot %71 %73 
                                 Private f32* %77 = OpAccessChain %32 %76 
                                                      OpStore %77 %74 
                                        f32_3 %78 = OpLoad %66 
                               Uniform f32_4* %79 = OpAccessChain %17 %37 
                                        f32_4 %80 = OpLoad %79 
                                        f32_3 %81 = OpVectorShuffle %80 %80 0 1 2 
                                          f32 %82 = OpDot %78 %81 
                                 Private f32* %84 = OpAccessChain %32 %83 
                                                      OpStore %84 %82 
                                        f32_4 %86 = OpLoad %32 
                                        f32_2 %87 = OpVectorShuffle %86 %86 0 1 
                                        f32_2 %90 = OpExtInst %1 40 %87 %89 
                                        f32_4 %91 = OpLoad %32 
                                        f32_4 %92 = OpVectorShuffle %91 %90 4 5 2 3 
                                                      OpStore %32 %92 
                                 Private f32* %93 = OpAccessChain %32 %76 
                                          f32 %94 = OpLoad %93 
                                          f32 %95 = OpExtInst %1 30 %94 
                                 Private f32* %96 = OpAccessChain %9 %76 
                                                      OpStore %96 %95 
                                 Uniform f32* %99 = OpAccessChain %17 %97 
                                         f32 %100 = OpLoad %99 
                                         f32 %102 = OpFMul %100 %101 
                                Private f32* %103 = OpAccessChain %32 %76 
                                                      OpStore %103 %102 
                                Private f32* %104 = OpAccessChain %9 %76 
                                         f32 %105 = OpLoad %104 
                                Private f32* %106 = OpAccessChain %32 %76 
                                         f32 %107 = OpLoad %106 
                                         f32 %108 = OpFMul %105 %107 
                                Private f32* %109 = OpAccessChain %9 %76 
                                                      OpStore %109 %108 
                                Private f32* %110 = OpAccessChain %9 %76 
                                         f32 %111 = OpLoad %110 
                                         f32 %112 = OpExtInst %1 29 %111 
                                Private f32* %113 = OpAccessChain %9 %76 
                                                      OpStore %113 %112 
                                Uniform f32* %115 = OpAccessChain %17 %114 
                                         f32 %116 = OpLoad %115 
                                         f32 %117 = OpFNegate %116 
                                         f32 %119 = OpFMul %117 %118 
                                         f32 %120 = OpFAdd %119 %118 
                                Private f32* %121 = OpAccessChain %32 %76 
                                                      OpStore %121 %120 
                                Private f32* %122 = OpAccessChain %9 %76 
                                         f32 %123 = OpLoad %122 
                                         f32 %125 = OpFMul %123 %124 
                                Private f32* %126 = OpAccessChain %32 %76 
                                         f32 %127 = OpLoad %126 
                                         f32 %128 = OpFNegate %127 
                                         f32 %129 = OpFAdd %125 %128 
                                Private f32* %130 = OpAccessChain %9 %76 
                                                      OpStore %130 %129 
                                Uniform f32* %132 = OpAccessChain %17 %114 
                                         f32 %133 = OpLoad %132 
                                         f32 %134 = OpFMul %133 %118 
                                         f32 %135 = OpFAdd %134 %118 
                                                      OpStore %131 %135 
                                Private f32* %137 = OpAccessChain %32 %76 
                                         f32 %138 = OpLoad %137 
                                         f32 %139 = OpFNegate %138 
                                         f32 %140 = OpLoad %131 
                                         f32 %141 = OpFAdd %139 %140 
                                                      OpStore %136 %141 
                                         f32 %143 = OpLoad %136 
                                         f32 %144 = OpFDiv %142 %143 
                                                      OpStore %136 %144 
                                         f32 %145 = OpLoad %136 
                                Private f32* %146 = OpAccessChain %9 %76 
                                         f32 %147 = OpLoad %146 
                                         f32 %148 = OpFMul %145 %147 
                                Private f32* %149 = OpAccessChain %9 %76 
                                                      OpStore %149 %148 
                                Private f32* %150 = OpAccessChain %9 %76 
                                         f32 %151 = OpLoad %150 
                                         f32 %152 = OpExtInst %1 43 %151 %88 %142 
                                Private f32* %153 = OpAccessChain %9 %76 
                                                      OpStore %153 %152 
                                Private f32* %154 = OpAccessChain %9 %76 
                                         f32 %155 = OpLoad %154 
                                         f32 %157 = OpFMul %155 %156 
                                         f32 %159 = OpFAdd %157 %158 
                                                      OpStore %136 %159 
                                Private f32* %160 = OpAccessChain %9 %76 
                                         f32 %161 = OpLoad %160 
                                Private f32* %162 = OpAccessChain %9 %76 
                                         f32 %163 = OpLoad %162 
                                         f32 %164 = OpFMul %161 %163 
                                Private f32* %165 = OpAccessChain %9 %76 
                                                      OpStore %165 %164 
                                Private f32* %166 = OpAccessChain %9 %76 
                                         f32 %167 = OpLoad %166 
                                         f32 %168 = OpLoad %136 
                                         f32 %169 = OpFMul %167 %168 
                                Private f32* %170 = OpAccessChain %9 %76 
                                                      OpStore %170 %169 
                              Uniform f32_4* %172 = OpAccessChain %17 %171 
                                       f32_4 %173 = OpLoad %172 
                                       f32_3 %174 = OpVectorShuffle %173 %173 0 1 2 
                              Uniform f32_4* %176 = OpAccessChain %17 %175 
                                       f32_4 %177 = OpLoad %176 
                                       f32_3 %178 = OpVectorShuffle %177 %177 0 1 2 
                                       f32_3 %179 = OpFMul %174 %178 
                                       f32_4 %180 = OpLoad %32 
                                       f32_4 %181 = OpVectorShuffle %180 %179 4 1 5 6 
                                                      OpStore %32 %181 
                                       f32_3 %182 = OpLoad %9 
                                       f32_3 %183 = OpVectorShuffle %182 %182 0 0 0 
                                       f32_4 %184 = OpLoad %32 
                                       f32_3 %185 = OpVectorShuffle %184 %184 0 2 3 
                                       f32_3 %186 = OpFMul %183 %185 
                                                      OpStore %9 %186 
                                Uniform f32* %188 = OpAccessChain %17 %187 
                                         f32 %189 = OpLoad %188 
                                         f32 %190 = OpFNegate %189 
                                         f32 %191 = OpFMul %190 %118 
                                Uniform f32* %193 = OpAccessChain %17 %192 
                                         f32 %194 = OpLoad %193 
                                         f32 %195 = OpFAdd %191 %194 
                                Private f32* %196 = OpAccessChain %32 %76 
                                                      OpStore %196 %195 
                                Private f32* %198 = OpAccessChain %32 %76 
                                         f32 %199 = OpLoad %198 
                                         f32 %200 = OpFNegate %199 
                                Private f32* %201 = OpAccessChain %32 %83 
                                         f32 %202 = OpLoad %201 
                                         f32 %203 = OpFAdd %200 %202 
                                Private f32* %204 = OpAccessChain %197 %76 
                                                      OpStore %204 %203 
                                Uniform f32* %205 = OpAccessChain %17 %187 
                                         f32 %206 = OpLoad %205 
                                         f32 %207 = OpFMul %206 %118 
                                Uniform f32* %208 = OpAccessChain %17 %192 
                                         f32 %209 = OpLoad %208 
                                         f32 %210 = OpFAdd %207 %209 
                                                      OpStore %131 %210 
                                Private f32* %211 = OpAccessChain %32 %76 
                                         f32 %212 = OpLoad %211 
                                         f32 %213 = OpFNegate %212 
                                         f32 %214 = OpLoad %131 
                                         f32 %215 = OpFAdd %213 %214 
                                Private f32* %216 = OpAccessChain %32 %76 
                                                      OpStore %216 %215 
                                Private f32* %217 = OpAccessChain %32 %76 
                                         f32 %218 = OpLoad %217 
                                         f32 %219 = OpFDiv %142 %218 
                                Private f32* %220 = OpAccessChain %32 %76 
                                                      OpStore %220 %219 
                                Private f32* %221 = OpAccessChain %32 %76 
                                         f32 %222 = OpLoad %221 
                                Private f32* %223 = OpAccessChain %197 %76 
                                         f32 %224 = OpLoad %223 
                                         f32 %225 = OpFMul %222 %224 
                                Private f32* %226 = OpAccessChain %32 %76 
                                                      OpStore %226 %225 
                                Private f32* %227 = OpAccessChain %32 %76 
                                         f32 %228 = OpLoad %227 
                                         f32 %229 = OpExtInst %1 43 %228 %88 %142 
                                Private f32* %230 = OpAccessChain %32 %76 
                                                      OpStore %230 %229 
                                Private f32* %231 = OpAccessChain %32 %76 
                                         f32 %232 = OpLoad %231 
                                         f32 %233 = OpFMul %232 %156 
                                         f32 %234 = OpFAdd %233 %158 
                                Private f32* %235 = OpAccessChain %197 %76 
                                                      OpStore %235 %234 
                                Private f32* %236 = OpAccessChain %32 %76 
                                         f32 %237 = OpLoad %236 
                                Private f32* %238 = OpAccessChain %32 %76 
                                         f32 %239 = OpLoad %238 
                                         f32 %240 = OpFMul %237 %239 
                                Private f32* %241 = OpAccessChain %32 %76 
                                                      OpStore %241 %240 
                                Private f32* %242 = OpAccessChain %32 %76 
                                         f32 %243 = OpLoad %242 
                                Private f32* %244 = OpAccessChain %197 %76 
                                         f32 %245 = OpLoad %244 
                                         f32 %246 = OpFMul %243 %245 
                                Private f32* %247 = OpAccessChain %32 %76 
                                                      OpStore %247 %246 
                              Uniform f32_4* %249 = OpAccessChain %17 %248 
                                       f32_4 %250 = OpLoad %249 
                                       f32_3 %251 = OpVectorShuffle %250 %250 0 1 2 
                                       f32_3 %252 = OpFNegate %251 
                              Uniform f32_4* %254 = OpAccessChain %17 %253 
                                       f32_4 %255 = OpLoad %254 
                                       f32_3 %256 = OpVectorShuffle %255 %255 0 1 2 
                                       f32_3 %257 = OpFAdd %252 %256 
                                                      OpStore %197 %257 
                              Uniform f32_4* %258 = OpAccessChain %17 %253 
                                       f32_4 %259 = OpLoad %258 
                                       f32_3 %260 = OpVectorShuffle %259 %259 3 3 3 
                                       f32_3 %261 = OpLoad %197 
                                       f32_3 %262 = OpFMul %260 %261 
                              Uniform f32_4* %263 = OpAccessChain %17 %248 
                                       f32_4 %264 = OpLoad %263 
                                       f32_3 %265 = OpVectorShuffle %264 %264 0 1 2 
                                       f32_3 %266 = OpFAdd %262 %265 
                                                      OpStore %197 %266 
                                       f32_3 %267 = OpLoad %197 
                                       f32_3 %268 = OpFNegate %267 
                              Uniform f32_4* %269 = OpAccessChain %17 %248 
                                       f32_4 %270 = OpLoad %269 
                                       f32_3 %271 = OpVectorShuffle %270 %270 0 1 2 
                                       f32_3 %272 = OpFAdd %268 %271 
                                                      OpStore %66 %272 
                                       f32_4 %273 = OpLoad %32 
                                       f32_3 %274 = OpVectorShuffle %273 %273 0 0 0 
                                       f32_3 %275 = OpLoad %66 
                                       f32_3 %276 = OpFMul %274 %275 
                                       f32_3 %277 = OpLoad %197 
                                       f32_3 %278 = OpFAdd %276 %277 
                                       f32_4 %279 = OpLoad %32 
                                       f32_4 %280 = OpVectorShuffle %279 %278 4 5 6 3 
                                                      OpStore %32 %280 
                         read_only Texture2D %285 = OpLoad %284 
                                     sampler %289 = OpLoad %288 
                  read_only Texture2DSampled %291 = OpSampledImage %285 %289 
                                       f32_2 %294 = OpLoad vs_TEXCOORD0 
                                       f32_4 %295 = OpImageSampleImplicitLod %291 %294 
                                       f32_3 %296 = OpVectorShuffle %295 %295 0 1 2 
                                                      OpStore %281 %296 
                                       f32_3 %297 = OpLoad %281 
                              Uniform f32_4* %299 = OpAccessChain %17 %298 
                                       f32_4 %300 = OpLoad %299 
                                       f32_3 %301 = OpVectorShuffle %300 %300 0 1 2 
                                       f32_3 %302 = OpFMul %297 %301 
                                                      OpStore %66 %302 
                                       f32_3 %303 = OpLoad %66 
                              Uniform f32_4* %304 = OpAccessChain %17 %171 
                                       f32_4 %305 = OpLoad %304 
                                       f32_3 %306 = OpVectorShuffle %305 %305 0 1 2 
                                       f32_3 %307 = OpFMul %303 %306 
                                                      OpStore %66 %307 
                                       f32_3 %308 = OpLoad %66 
                                       f32_4 %309 = OpLoad %32 
                                       f32_3 %310 = OpVectorShuffle %309 %309 0 1 2 
                                       f32_3 %311 = OpFMul %308 %310 
                                       f32_3 %312 = OpLoad %9 
                                       f32_3 %313 = OpFAdd %311 %312 
                                                      OpStore %9 %313 
                                       f32_3 %316 = OpLoad %9 
                                       f32_4 %317 = OpLoad %315 
                                       f32_4 %318 = OpVectorShuffle %317 %316 4 5 6 3 
                                                      OpStore %315 %318 
                                 Output f32* %321 = OpAccessChain %315 %319 
                                                      OpStore %321 %142 
                                                      OpReturn
                                                      OpFunctionEnd
"
}
SubProgram "vulkan hw_tier02 " {
Keywords { "DIRECTIONAL" "VERTEXLIGHT_ON" }
"; SPIR-V
; Version: 1.0
; Generator: Khronos Glslang Reference Front End; 6
; Bound: 160
; Schema: 0
                                                      OpCapability Shader 
                                               %1 = OpExtInstImport "GLSL.std.450" 
                                                      OpMemoryModel Logical GLSL450 
                                                      OpEntryPoint Vertex %4 "main" %11 %52 %85 %95 %110 %114 %144 %150 %153 
                                                      OpName vs_TEXCOORD2 "vs_TEXCOORD2" 
                                                      OpName vs_TEXCOORD0 "vs_TEXCOORD0" 
                                                      OpName vs_TEXCOORD1 "vs_TEXCOORD1" 
                                                      OpName vs_TEXCOORD5 "vs_TEXCOORD5" 
                                                      OpName vs_TEXCOORD6 "vs_TEXCOORD6" 
                                                      OpDecorate %11 Location 11 
                                                      OpDecorate %16 ArrayStride 16 
                                                      OpDecorate %17 ArrayStride 17 
                                                      OpDecorate %18 ArrayStride 18 
                                                      OpMemberDecorate %19 0 Offset 19 
                                                      OpMemberDecorate %19 1 Offset 19 
                                                      OpMemberDecorate %19 2 Offset 19 
                                                      OpMemberDecorate %19 3 Offset 19 
                                                      OpDecorate %19 Block 
                                                      OpDecorate %21 DescriptorSet 21 
                                                      OpDecorate %21 Binding 21 
                                                      OpDecorate vs_TEXCOORD2 Location 52 
                                                      OpMemberDecorate %83 0 BuiltIn 83 
                                                      OpMemberDecorate %83 1 BuiltIn 83 
                                                      OpMemberDecorate %83 2 BuiltIn 83 
                                                      OpDecorate %83 Block 
                                                      OpDecorate %95 Location 95 
                                                      OpDecorate vs_TEXCOORD0 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD0 Location 110 
                                                      OpDecorate %114 Location 114 
                                                      OpDecorate vs_TEXCOORD1 Location 144 
                                                      OpDecorate vs_TEXCOORD5 Location 150 
                                                      OpDecorate vs_TEXCOORD6 Location 153 
                                               %2 = OpTypeVoid 
                                               %3 = OpTypeFunction %2 
                                               %6 = OpTypeFloat 32 
                                               %7 = OpTypeVector %6 4 
                                               %8 = OpTypePointer Private %7 
                                Private f32_4* %9 = OpVariable Private 
                                              %10 = OpTypePointer Input %7 
                                 Input f32_4* %11 = OpVariable Input 
                                              %14 = OpTypeInt 32 0 
                                          u32 %15 = OpConstant 4 
                                              %16 = OpTypeArray %7 %15 
                                              %17 = OpTypeArray %7 %15 
                                              %18 = OpTypeArray %7 %15 
                                              %19 = OpTypeStruct %16 %17 %18 %7 
                                              %20 = OpTypePointer Uniform %19 
Uniform struct {f32_4[4]; f32_4[4]; f32_4[4]; f32_4;}* %21 = OpVariable Uniform 
                                              %22 = OpTypeInt 32 1 
                                          i32 %23 = OpConstant 0 
                                          i32 %24 = OpConstant 1 
                                              %25 = OpTypePointer Uniform %7 
                                          i32 %36 = OpConstant 2 
                               Private f32_4* %44 = OpVariable Private 
                                          i32 %46 = OpConstant 3 
                                              %50 = OpTypeVector %6 3 
                                              %51 = OpTypePointer Output %50 
                       Output f32_3* vs_TEXCOORD2 = OpVariable Output 
                                          u32 %81 = OpConstant 1 
                                              %82 = OpTypeArray %6 %81 
                                              %83 = OpTypeStruct %7 %6 %82 
                                              %84 = OpTypePointer Output %83 
         Output struct {f32_4; f32; f32[1];}* %85 = OpVariable Output 
                                              %93 = OpTypePointer Output %7 
                                 Input f32_4* %95 = OpVariable Input 
                                              %96 = OpTypeVector %6 2 
                                             %109 = OpTypePointer Output %96 
                       Output f32_2* vs_TEXCOORD0 = OpVariable Output 
                                             %113 = OpTypePointer Input %50 
                                Input f32_3* %114 = OpVariable Input 
                                         u32 %120 = OpConstant 0 
                                             %121 = OpTypePointer Private %6 
                                         u32 %134 = OpConstant 2 
                                Private f32* %136 = OpVariable Private 
                       Output f32_3* vs_TEXCOORD1 = OpVariable Output 
                       Output f32_4* vs_TEXCOORD5 = OpVariable Output 
                                         f32 %151 = OpConstant 3.674022E-40 
                                       f32_4 %152 = OpConstantComposite %151 %151 %151 %151 
                       Output f32_4* vs_TEXCOORD6 = OpVariable Output 
                                             %154 = OpTypePointer Output %6 
                                          void %4 = OpFunction None %3 
                                               %5 = OpLabel 
                                        f32_4 %12 = OpLoad %11 
                                        f32_4 %13 = OpVectorShuffle %12 %12 1 1 1 1 
                               Uniform f32_4* %26 = OpAccessChain %21 %23 %24 
                                        f32_4 %27 = OpLoad %26 
                                        f32_4 %28 = OpFMul %13 %27 
                                                      OpStore %9 %28 
                               Uniform f32_4* %29 = OpAccessChain %21 %23 %23 
                                        f32_4 %30 = OpLoad %29 
                                        f32_4 %31 = OpLoad %11 
                                        f32_4 %32 = OpVectorShuffle %31 %31 0 0 0 0 
                                        f32_4 %33 = OpFMul %30 %32 
                                        f32_4 %34 = OpLoad %9 
                                        f32_4 %35 = OpFAdd %33 %34 
                                                      OpStore %9 %35 
                               Uniform f32_4* %37 = OpAccessChain %21 %23 %36 
                                        f32_4 %38 = OpLoad %37 
                                        f32_4 %39 = OpLoad %11 
                                        f32_4 %40 = OpVectorShuffle %39 %39 2 2 2 2 
                                        f32_4 %41 = OpFMul %38 %40 
                                        f32_4 %42 = OpLoad %9 
                                        f32_4 %43 = OpFAdd %41 %42 
                                                      OpStore %9 %43 
                                        f32_4 %45 = OpLoad %9 
                               Uniform f32_4* %47 = OpAccessChain %21 %23 %46 
                                        f32_4 %48 = OpLoad %47 
                                        f32_4 %49 = OpFAdd %45 %48 
                                                      OpStore %44 %49 
                               Uniform f32_4* %53 = OpAccessChain %21 %23 %46 
                                        f32_4 %54 = OpLoad %53 
                                        f32_3 %55 = OpVectorShuffle %54 %54 0 1 2 
                                        f32_4 %56 = OpLoad %11 
                                        f32_3 %57 = OpVectorShuffle %56 %56 3 3 3 
                                        f32_3 %58 = OpFMul %55 %57 
                                        f32_4 %59 = OpLoad %9 
                                        f32_3 %60 = OpVectorShuffle %59 %59 0 1 2 
                                        f32_3 %61 = OpFAdd %58 %60 
                                                      OpStore vs_TEXCOORD2 %61 
                                        f32_4 %62 = OpLoad %44 
                                        f32_4 %63 = OpVectorShuffle %62 %62 1 1 1 1 
                               Uniform f32_4* %64 = OpAccessChain %21 %36 %24 
                                        f32_4 %65 = OpLoad %64 
                                        f32_4 %66 = OpFMul %63 %65 
                                                      OpStore %9 %66 
                               Uniform f32_4* %67 = OpAccessChain %21 %36 %23 
                                        f32_4 %68 = OpLoad %67 
                                        f32_4 %69 = OpLoad %44 
                                        f32_4 %70 = OpVectorShuffle %69 %69 0 0 0 0 
                                        f32_4 %71 = OpFMul %68 %70 
                                        f32_4 %72 = OpLoad %9 
                                        f32_4 %73 = OpFAdd %71 %72 
                                                      OpStore %9 %73 
                               Uniform f32_4* %74 = OpAccessChain %21 %36 %36 
                                        f32_4 %75 = OpLoad %74 
                                        f32_4 %76 = OpLoad %44 
                                        f32_4 %77 = OpVectorShuffle %76 %76 2 2 2 2 
                                        f32_4 %78 = OpFMul %75 %77 
                                        f32_4 %79 = OpLoad %9 
                                        f32_4 %80 = OpFAdd %78 %79 
                                                      OpStore %9 %80 
                               Uniform f32_4* %86 = OpAccessChain %21 %36 %46 
                                        f32_4 %87 = OpLoad %86 
                                        f32_4 %88 = OpLoad %44 
                                        f32_4 %89 = OpVectorShuffle %88 %88 3 3 3 3 
                                        f32_4 %90 = OpFMul %87 %89 
                                        f32_4 %91 = OpLoad %9 
                                        f32_4 %92 = OpFAdd %90 %91 
                                Output f32_4* %94 = OpAccessChain %85 %23 
                                                      OpStore %94 %92 
                                        f32_4 %97 = OpLoad %95 
                                        f32_2 %98 = OpVectorShuffle %97 %97 0 1 
                               Uniform f32_4* %99 = OpAccessChain %21 %46 
                                       f32_4 %100 = OpLoad %99 
                                       f32_2 %101 = OpVectorShuffle %100 %100 0 1 
                                       f32_2 %102 = OpFMul %98 %101 
                              Uniform f32_4* %103 = OpAccessChain %21 %46 
                                       f32_4 %104 = OpLoad %103 
                                       f32_2 %105 = OpVectorShuffle %104 %104 2 3 
                                       f32_2 %106 = OpFAdd %102 %105 
                                       f32_4 %107 = OpLoad %9 
                                       f32_4 %108 = OpVectorShuffle %107 %106 4 5 2 3 
                                                      OpStore %9 %108 
                                       f32_4 %111 = OpLoad %9 
                                       f32_2 %112 = OpVectorShuffle %111 %111 0 1 
                                                      OpStore vs_TEXCOORD0 %112 
                                       f32_3 %115 = OpLoad %114 
                              Uniform f32_4* %116 = OpAccessChain %21 %24 %23 
                                       f32_4 %117 = OpLoad %116 
                                       f32_3 %118 = OpVectorShuffle %117 %117 0 1 2 
                                         f32 %119 = OpDot %115 %118 
                                Private f32* %122 = OpAccessChain %9 %120 
                                                      OpStore %122 %119 
                                       f32_3 %123 = OpLoad %114 
                              Uniform f32_4* %124 = OpAccessChain %21 %24 %24 
                                       f32_4 %125 = OpLoad %124 
                                       f32_3 %126 = OpVectorShuffle %125 %125 0 1 2 
                                         f32 %127 = OpDot %123 %126 
                                Private f32* %128 = OpAccessChain %9 %81 
                                                      OpStore %128 %127 
                                       f32_3 %129 = OpLoad %114 
                              Uniform f32_4* %130 = OpAccessChain %21 %24 %36 
                                       f32_4 %131 = OpLoad %130 
                                       f32_3 %132 = OpVectorShuffle %131 %131 0 1 2 
                                         f32 %133 = OpDot %129 %132 
                                Private f32* %135 = OpAccessChain %9 %134 
                                                      OpStore %135 %133 
                                       f32_4 %137 = OpLoad %9 
                                       f32_3 %138 = OpVectorShuffle %137 %137 0 1 2 
                                       f32_4 %139 = OpLoad %9 
                                       f32_3 %140 = OpVectorShuffle %139 %139 0 1 2 
                                         f32 %141 = OpDot %138 %140 
                                                      OpStore %136 %141 
                                         f32 %142 = OpLoad %136 
                                         f32 %143 = OpExtInst %1 32 %142 
                                                      OpStore %136 %143 
                                         f32 %145 = OpLoad %136 
                                       f32_3 %146 = OpCompositeConstruct %145 %145 %145 
                                       f32_4 %147 = OpLoad %9 
                                       f32_3 %148 = OpVectorShuffle %147 %147 0 1 2 
                                       f32_3 %149 = OpFMul %146 %148 
                                                      OpStore vs_TEXCOORD1 %149 
                                                      OpStore vs_TEXCOORD5 %152 
                                                      OpStore vs_TEXCOORD6 %152 
                                 Output f32* %155 = OpAccessChain %85 %23 %81 
                                         f32 %156 = OpLoad %155 
                                         f32 %157 = OpFNegate %156 
                                 Output f32* %158 = OpAccessChain %85 %23 %81 
                                                      OpStore %158 %157 
                                                      OpReturn
                                                      OpFunctionEnd
; SPIR-V
; Version: 1.0
; Generator: Khronos Glslang Reference Front End; 6
; Bound: 323
; Schema: 0
                                                      OpCapability Shader 
                                               %1 = OpExtInstImport "GLSL.std.450" 
                                                      OpMemoryModel Logical GLSL450 
                                                      OpEntryPoint Fragment %4 "main" %11 %60 %293 %315 
                                                      OpExecutionMode %4 OriginUpperLeft 
                                                      OpName vs_TEXCOORD2 "vs_TEXCOORD2" 
                                                      OpName vs_TEXCOORD1 "vs_TEXCOORD1" 
                                                      OpName vs_TEXCOORD0 "vs_TEXCOORD0" 
                                                      OpDecorate vs_TEXCOORD2 Location 11 
                                                      OpMemberDecorate %15 0 Offset 15 
                                                      OpMemberDecorate %15 1 RelaxedPrecision 
                                                      OpMemberDecorate %15 1 Offset 15 
                                                      OpMemberDecorate %15 2 RelaxedPrecision 
                                                      OpMemberDecorate %15 2 Offset 15 
                                                      OpMemberDecorate %15 3 RelaxedPrecision 
                                                      OpMemberDecorate %15 3 Offset 15 
                                                      OpMemberDecorate %15 4 RelaxedPrecision 
                                                      OpMemberDecorate %15 4 Offset 15 
                                                      OpMemberDecorate %15 5 RelaxedPrecision 
                                                      OpMemberDecorate %15 5 Offset 15 
                                                      OpMemberDecorate %15 6 RelaxedPrecision 
                                                      OpMemberDecorate %15 6 Offset 15 
                                                      OpMemberDecorate %15 7 RelaxedPrecision 
                                                      OpMemberDecorate %15 7 Offset 15 
                                                      OpMemberDecorate %15 8 RelaxedPrecision 
                                                      OpMemberDecorate %15 8 Offset 15 
                                                      OpMemberDecorate %15 9 RelaxedPrecision 
                                                      OpMemberDecorate %15 9 Offset 15 
                                                      OpMemberDecorate %15 10 RelaxedPrecision 
                                                      OpMemberDecorate %15 10 Offset 15 
                                                      OpDecorate %15 Block 
                                                      OpDecorate %17 DescriptorSet 17 
                                                      OpDecorate %17 Binding 17 
                                                      OpDecorate %32 RelaxedPrecision 
                                                      OpDecorate %40 RelaxedPrecision 
                                                      OpDecorate %41 RelaxedPrecision 
                                                      OpDecorate %45 RelaxedPrecision 
                                                      OpDecorate %46 RelaxedPrecision 
                                                      OpDecorate %47 RelaxedPrecision 
                                                      OpDecorate %48 RelaxedPrecision 
                                                      OpDecorate %49 RelaxedPrecision 
                                                      OpDecorate %50 RelaxedPrecision 
                                                      OpDecorate %51 RelaxedPrecision 
                                                      OpDecorate %52 RelaxedPrecision 
                                                      OpDecorate %53 RelaxedPrecision 
                                                      OpDecorate %54 RelaxedPrecision 
                                                      OpDecorate %55 RelaxedPrecision 
                                                      OpDecorate %56 RelaxedPrecision 
                                                      OpDecorate %57 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD1 Location 60 
                                                      OpDecorate %64 RelaxedPrecision 
                                                      OpDecorate %65 RelaxedPrecision 
                                                      OpDecorate %66 RelaxedPrecision 
                                                      OpDecorate %67 RelaxedPrecision 
                                                      OpDecorate %71 RelaxedPrecision 
                                                      OpDecorate %72 RelaxedPrecision 
                                                      OpDecorate %73 RelaxedPrecision 
                                                      OpDecorate %74 RelaxedPrecision 
                                                      OpDecorate %78 RelaxedPrecision 
                                                      OpDecorate %80 RelaxedPrecision 
                                                      OpDecorate %81 RelaxedPrecision 
                                                      OpDecorate %82 RelaxedPrecision 
                                                      OpDecorate %86 RelaxedPrecision 
                                                      OpDecorate %87 RelaxedPrecision 
                                                      OpDecorate %90 RelaxedPrecision 
                                                      OpDecorate %94 RelaxedPrecision 
                                                      OpDecorate %95 RelaxedPrecision 
                                                      OpDecorate %100 RelaxedPrecision 
                                                      OpDecorate %102 RelaxedPrecision 
                                                      OpDecorate %107 RelaxedPrecision 
                                                      OpDecorate %116 RelaxedPrecision 
                                                      OpDecorate %117 RelaxedPrecision 
                                                      OpDecorate %119 RelaxedPrecision 
                                                      OpDecorate %120 RelaxedPrecision 
                                                      OpDecorate %127 RelaxedPrecision 
                                                      OpDecorate %128 RelaxedPrecision 
                                                      OpDecorate %131 RelaxedPrecision 
                                                      OpDecorate %133 RelaxedPrecision 
                                                      OpDecorate %134 RelaxedPrecision 
                                                      OpDecorate %135 RelaxedPrecision 
                                                      OpDecorate %138 RelaxedPrecision 
                                                      OpDecorate %139 RelaxedPrecision 
                                                      OpDecorate %140 RelaxedPrecision 
                                                      OpDecorate %141 RelaxedPrecision 
                                                      OpDecorate %173 RelaxedPrecision 
                                                      OpDecorate %174 RelaxedPrecision 
                                                      OpDecorate %177 RelaxedPrecision 
                                                      OpDecorate %178 RelaxedPrecision 
                                                      OpDecorate %179 RelaxedPrecision 
                                                      OpDecorate %184 RelaxedPrecision 
                                                      OpDecorate %185 RelaxedPrecision 
                                                      OpDecorate %189 RelaxedPrecision 
                                                      OpDecorate %190 RelaxedPrecision 
                                                      OpDecorate %191 RelaxedPrecision 
                                                      OpDecorate %194 RelaxedPrecision 
                                                      OpDecorate %195 RelaxedPrecision 
                                                      OpDecorate %197 RelaxedPrecision 
                                                      OpDecorate %199 RelaxedPrecision 
                                                      OpDecorate %200 RelaxedPrecision 
                                                      OpDecorate %202 RelaxedPrecision 
                                                      OpDecorate %203 RelaxedPrecision 
                                                      OpDecorate %206 RelaxedPrecision 
                                                      OpDecorate %207 RelaxedPrecision 
                                                      OpDecorate %209 RelaxedPrecision 
                                                      OpDecorate %210 RelaxedPrecision 
                                                      OpDecorate %212 RelaxedPrecision 
                                                      OpDecorate %213 RelaxedPrecision 
                                                      OpDecorate %214 RelaxedPrecision 
                                                      OpDecorate %215 RelaxedPrecision 
                                                      OpDecorate %218 RelaxedPrecision 
                                                      OpDecorate %219 RelaxedPrecision 
                                                      OpDecorate %222 RelaxedPrecision 
                                                      OpDecorate %224 RelaxedPrecision 
                                                      OpDecorate %225 RelaxedPrecision 
                                                      OpDecorate %228 RelaxedPrecision 
                                                      OpDecorate %229 RelaxedPrecision 
                                                      OpDecorate %232 RelaxedPrecision 
                                                      OpDecorate %233 RelaxedPrecision 
                                                      OpDecorate %234 RelaxedPrecision 
                                                      OpDecorate %237 RelaxedPrecision 
                                                      OpDecorate %239 RelaxedPrecision 
                                                      OpDecorate %240 RelaxedPrecision 
                                                      OpDecorate %243 RelaxedPrecision 
                                                      OpDecorate %245 RelaxedPrecision 
                                                      OpDecorate %246 RelaxedPrecision 
                                                      OpDecorate %250 RelaxedPrecision 
                                                      OpDecorate %251 RelaxedPrecision 
                                                      OpDecorate %252 RelaxedPrecision 
                                                      OpDecorate %255 RelaxedPrecision 
                                                      OpDecorate %256 RelaxedPrecision 
                                                      OpDecorate %257 RelaxedPrecision 
                                                      OpDecorate %259 RelaxedPrecision 
                                                      OpDecorate %260 RelaxedPrecision 
                                                      OpDecorate %261 RelaxedPrecision 
                                                      OpDecorate %262 RelaxedPrecision 
                                                      OpDecorate %264 RelaxedPrecision 
                                                      OpDecorate %265 RelaxedPrecision 
                                                      OpDecorate %266 RelaxedPrecision 
                                                      OpDecorate %267 RelaxedPrecision 
                                                      OpDecorate %268 RelaxedPrecision 
                                                      OpDecorate %270 RelaxedPrecision 
                                                      OpDecorate %271 RelaxedPrecision 
                                                      OpDecorate %272 RelaxedPrecision 
                                                      OpDecorate %273 RelaxedPrecision 
                                                      OpDecorate %274 RelaxedPrecision 
                                                      OpDecorate %275 RelaxedPrecision 
                                                      OpDecorate %276 RelaxedPrecision 
                                                      OpDecorate %277 RelaxedPrecision 
                                                      OpDecorate %278 RelaxedPrecision 
                                                      OpDecorate %281 RelaxedPrecision 
                                                      OpDecorate %284 RelaxedPrecision 
                                                      OpDecorate %284 DescriptorSet 284 
                                                      OpDecorate %284 Binding 284 
                                                      OpDecorate %285 RelaxedPrecision 
                                                      OpDecorate %288 RelaxedPrecision 
                                                      OpDecorate %288 DescriptorSet 288 
                                                      OpDecorate %288 Binding 288 
                                                      OpDecorate %289 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD0 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD0 Location 293 
                                                      OpDecorate %294 RelaxedPrecision 
                                                      OpDecorate %295 RelaxedPrecision 
                                                      OpDecorate %296 RelaxedPrecision 
                                                      OpDecorate %297 RelaxedPrecision 
                                                      OpDecorate %300 RelaxedPrecision 
                                                      OpDecorate %301 RelaxedPrecision 
                                                      OpDecorate %302 RelaxedPrecision 
                                                      OpDecorate %303 RelaxedPrecision 
                                                      OpDecorate %305 RelaxedPrecision 
                                                      OpDecorate %306 RelaxedPrecision 
                                                      OpDecorate %307 RelaxedPrecision 
                                                      OpDecorate %308 RelaxedPrecision 
                                                      OpDecorate %309 RelaxedPrecision 
                                                      OpDecorate %310 RelaxedPrecision 
                                                      OpDecorate %311 RelaxedPrecision 
                                                      OpDecorate %315 RelaxedPrecision 
                                                      OpDecorate %315 Location 315 
                                               %2 = OpTypeVoid 
                                               %3 = OpTypeFunction %2 
                                               %6 = OpTypeFloat 32 
                                               %7 = OpTypeVector %6 3 
                                               %8 = OpTypePointer Private %7 
                                Private f32_3* %9 = OpVariable Private 
                                              %10 = OpTypePointer Input %7 
                        Input f32_3* vs_TEXCOORD2 = OpVariable Input 
                                              %14 = OpTypeVector %6 4 
                                              %15 = OpTypeStruct %7 %14 %14 %14 %14 %6 %14 %14 %6 %6 %6 
                                              %16 = OpTypePointer Uniform %15 
Uniform struct {f32_3; f32_4; f32_4; f32_4; f32_4; f32; f32_4; f32_4; f32; f32; f32;}* %17 = OpVariable Uniform 
                                              %18 = OpTypeInt 32 1 
                                          i32 %19 = OpConstant 0 
                                              %20 = OpTypePointer Uniform %7 
                                              %24 = OpTypePointer Private %6 
                                 Private f32* %25 = OpVariable Private 
                                              %31 = OpTypePointer Private %14 
                               Private f32_4* %32 = OpVariable Private 
                                          i32 %37 = OpConstant 1 
                                              %38 = OpTypePointer Uniform %14 
                                 Private f32* %45 = OpVariable Private 
                        Input f32_3* vs_TEXCOORD1 = OpVariable Input 
                               Private f32_3* %66 = OpVariable Private 
                                              %75 = OpTypeInt 32 0 
                                          u32 %76 = OpConstant 0 
                                          u32 %83 = OpConstant 1 
                                              %85 = OpTypeVector %6 2 
                                          f32 %88 = OpConstant 3.674022E-40 
                                        f32_2 %89 = OpConstantComposite %88 %88 
                                          i32 %97 = OpConstant 5 
                                              %98 = OpTypePointer Uniform %6 
                                         f32 %101 = OpConstant 3.674022E-40 
                                         i32 %114 = OpConstant 10 
                                         f32 %118 = OpConstant 3.674022E-40 
                                         f32 %124 = OpConstant 3.674022E-40 
                                Private f32* %131 = OpVariable Private 
                                Private f32* %136 = OpVariable Private 
                                         f32 %142 = OpConstant 3.674022E-40 
                                         f32 %156 = OpConstant 3.674022E-40 
                                         f32 %158 = OpConstant 3.674022E-40 
                                         i32 %171 = OpConstant 2 
                                         i32 %175 = OpConstant 3 
                                         i32 %187 = OpConstant 9 
                                         i32 %192 = OpConstant 8 
                              Private f32_3* %197 = OpVariable Private 
                                         i32 %248 = OpConstant 6 
                                         i32 %253 = OpConstant 7 
                              Private f32_3* %281 = OpVariable Private 
                                             %282 = OpTypeImage %6 Dim2D 0 0 0 1 Unknown 
                                             %283 = OpTypePointer UniformConstant %282 
        UniformConstant read_only Texture2D* %284 = OpVariable UniformConstant 
                                             %286 = OpTypeSampler 
                                             %287 = OpTypePointer UniformConstant %286 
                    UniformConstant sampler* %288 = OpVariable UniformConstant 
                                             %290 = OpTypeSampledImage %282 
                                             %292 = OpTypePointer Input %85 
                        Input f32_2* vs_TEXCOORD0 = OpVariable Input 
                                         i32 %298 = OpConstant 4 
                                             %314 = OpTypePointer Output %14 
                               Output f32_4* %315 = OpVariable Output 
                                         u32 %319 = OpConstant 3 
                                             %320 = OpTypePointer Output %6 
                                          void %4 = OpFunction None %3 
                                               %5 = OpLabel 
                                        f32_3 %12 = OpLoad vs_TEXCOORD2 
                                        f32_3 %13 = OpFNegate %12 
                               Uniform f32_3* %21 = OpAccessChain %17 %19 
                                        f32_3 %22 = OpLoad %21 
                                        f32_3 %23 = OpFAdd %13 %22 
                                                      OpStore %9 %23 
                                        f32_3 %26 = OpLoad %9 
                                        f32_3 %27 = OpLoad %9 
                                          f32 %28 = OpDot %26 %27 
                                                      OpStore %25 %28 
                                          f32 %29 = OpLoad %25 
                                          f32 %30 = OpExtInst %1 32 %29 
                                                      OpStore %25 %30 
                                        f32_3 %33 = OpLoad %9 
                                          f32 %34 = OpLoad %25 
                                        f32_3 %35 = OpCompositeConstruct %34 %34 %34 
                                        f32_3 %36 = OpFMul %33 %35 
                               Uniform f32_4* %39 = OpAccessChain %17 %37 
                                        f32_4 %40 = OpLoad %39 
                                        f32_3 %41 = OpVectorShuffle %40 %40 0 1 2 
                                        f32_3 %42 = OpFAdd %36 %41 
                                        f32_4 %43 = OpLoad %32 
                                        f32_4 %44 = OpVectorShuffle %43 %42 4 5 6 3 
                                                      OpStore %32 %44 
                                        f32_4 %46 = OpLoad %32 
                                        f32_3 %47 = OpVectorShuffle %46 %46 0 1 2 
                                        f32_4 %48 = OpLoad %32 
                                        f32_3 %49 = OpVectorShuffle %48 %48 0 1 2 
                                          f32 %50 = OpDot %47 %49 
                                                      OpStore %45 %50 
                                          f32 %51 = OpLoad %45 
                                          f32 %52 = OpExtInst %1 32 %51 
                                                      OpStore %45 %52 
                                          f32 %53 = OpLoad %45 
                                        f32_3 %54 = OpCompositeConstruct %53 %53 %53 
                                        f32_4 %55 = OpLoad %32 
                                        f32_3 %56 = OpVectorShuffle %55 %55 0 1 2 
                                        f32_3 %57 = OpFMul %54 %56 
                                        f32_4 %58 = OpLoad %32 
                                        f32_4 %59 = OpVectorShuffle %58 %57 4 5 6 3 
                                                      OpStore %32 %59 
                                        f32_3 %61 = OpLoad vs_TEXCOORD1 
                                        f32_3 %62 = OpLoad vs_TEXCOORD1 
                                          f32 %63 = OpDot %61 %62 
                                                      OpStore %45 %63 
                                          f32 %64 = OpLoad %45 
                                          f32 %65 = OpExtInst %1 32 %64 
                                                      OpStore %45 %65 
                                          f32 %67 = OpLoad %45 
                                        f32_3 %68 = OpCompositeConstruct %67 %67 %67 
                                        f32_3 %69 = OpLoad vs_TEXCOORD1 
                                        f32_3 %70 = OpFMul %68 %69 
                                                      OpStore %66 %70 
                                        f32_3 %71 = OpLoad %66 
                                        f32_4 %72 = OpLoad %32 
                                        f32_3 %73 = OpVectorShuffle %72 %72 0 1 2 
                                          f32 %74 = OpDot %71 %73 
                                 Private f32* %77 = OpAccessChain %32 %76 
                                                      OpStore %77 %74 
                                        f32_3 %78 = OpLoad %66 
                               Uniform f32_4* %79 = OpAccessChain %17 %37 
                                        f32_4 %80 = OpLoad %79 
                                        f32_3 %81 = OpVectorShuffle %80 %80 0 1 2 
                                          f32 %82 = OpDot %78 %81 
                                 Private f32* %84 = OpAccessChain %32 %83 
                                                      OpStore %84 %82 
                                        f32_4 %86 = OpLoad %32 
                                        f32_2 %87 = OpVectorShuffle %86 %86 0 1 
                                        f32_2 %90 = OpExtInst %1 40 %87 %89 
                                        f32_4 %91 = OpLoad %32 
                                        f32_4 %92 = OpVectorShuffle %91 %90 4 5 2 3 
                                                      OpStore %32 %92 
                                 Private f32* %93 = OpAccessChain %32 %76 
                                          f32 %94 = OpLoad %93 
                                          f32 %95 = OpExtInst %1 30 %94 
                                 Private f32* %96 = OpAccessChain %9 %76 
                                                      OpStore %96 %95 
                                 Uniform f32* %99 = OpAccessChain %17 %97 
                                         f32 %100 = OpLoad %99 
                                         f32 %102 = OpFMul %100 %101 
                                Private f32* %103 = OpAccessChain %32 %76 
                                                      OpStore %103 %102 
                                Private f32* %104 = OpAccessChain %9 %76 
                                         f32 %105 = OpLoad %104 
                                Private f32* %106 = OpAccessChain %32 %76 
                                         f32 %107 = OpLoad %106 
                                         f32 %108 = OpFMul %105 %107 
                                Private f32* %109 = OpAccessChain %9 %76 
                                                      OpStore %109 %108 
                                Private f32* %110 = OpAccessChain %9 %76 
                                         f32 %111 = OpLoad %110 
                                         f32 %112 = OpExtInst %1 29 %111 
                                Private f32* %113 = OpAccessChain %9 %76 
                                                      OpStore %113 %112 
                                Uniform f32* %115 = OpAccessChain %17 %114 
                                         f32 %116 = OpLoad %115 
                                         f32 %117 = OpFNegate %116 
                                         f32 %119 = OpFMul %117 %118 
                                         f32 %120 = OpFAdd %119 %118 
                                Private f32* %121 = OpAccessChain %32 %76 
                                                      OpStore %121 %120 
                                Private f32* %122 = OpAccessChain %9 %76 
                                         f32 %123 = OpLoad %122 
                                         f32 %125 = OpFMul %123 %124 
                                Private f32* %126 = OpAccessChain %32 %76 
                                         f32 %127 = OpLoad %126 
                                         f32 %128 = OpFNegate %127 
                                         f32 %129 = OpFAdd %125 %128 
                                Private f32* %130 = OpAccessChain %9 %76 
                                                      OpStore %130 %129 
                                Uniform f32* %132 = OpAccessChain %17 %114 
                                         f32 %133 = OpLoad %132 
                                         f32 %134 = OpFMul %133 %118 
                                         f32 %135 = OpFAdd %134 %118 
                                                      OpStore %131 %135 
                                Private f32* %137 = OpAccessChain %32 %76 
                                         f32 %138 = OpLoad %137 
                                         f32 %139 = OpFNegate %138 
                                         f32 %140 = OpLoad %131 
                                         f32 %141 = OpFAdd %139 %140 
                                                      OpStore %136 %141 
                                         f32 %143 = OpLoad %136 
                                         f32 %144 = OpFDiv %142 %143 
                                                      OpStore %136 %144 
                                         f32 %145 = OpLoad %136 
                                Private f32* %146 = OpAccessChain %9 %76 
                                         f32 %147 = OpLoad %146 
                                         f32 %148 = OpFMul %145 %147 
                                Private f32* %149 = OpAccessChain %9 %76 
                                                      OpStore %149 %148 
                                Private f32* %150 = OpAccessChain %9 %76 
                                         f32 %151 = OpLoad %150 
                                         f32 %152 = OpExtInst %1 43 %151 %88 %142 
                                Private f32* %153 = OpAccessChain %9 %76 
                                                      OpStore %153 %152 
                                Private f32* %154 = OpAccessChain %9 %76 
                                         f32 %155 = OpLoad %154 
                                         f32 %157 = OpFMul %155 %156 
                                         f32 %159 = OpFAdd %157 %158 
                                                      OpStore %136 %159 
                                Private f32* %160 = OpAccessChain %9 %76 
                                         f32 %161 = OpLoad %160 
                                Private f32* %162 = OpAccessChain %9 %76 
                                         f32 %163 = OpLoad %162 
                                         f32 %164 = OpFMul %161 %163 
                                Private f32* %165 = OpAccessChain %9 %76 
                                                      OpStore %165 %164 
                                Private f32* %166 = OpAccessChain %9 %76 
                                         f32 %167 = OpLoad %166 
                                         f32 %168 = OpLoad %136 
                                         f32 %169 = OpFMul %167 %168 
                                Private f32* %170 = OpAccessChain %9 %76 
                                                      OpStore %170 %169 
                              Uniform f32_4* %172 = OpAccessChain %17 %171 
                                       f32_4 %173 = OpLoad %172 
                                       f32_3 %174 = OpVectorShuffle %173 %173 0 1 2 
                              Uniform f32_4* %176 = OpAccessChain %17 %175 
                                       f32_4 %177 = OpLoad %176 
                                       f32_3 %178 = OpVectorShuffle %177 %177 0 1 2 
                                       f32_3 %179 = OpFMul %174 %178 
                                       f32_4 %180 = OpLoad %32 
                                       f32_4 %181 = OpVectorShuffle %180 %179 4 1 5 6 
                                                      OpStore %32 %181 
                                       f32_3 %182 = OpLoad %9 
                                       f32_3 %183 = OpVectorShuffle %182 %182 0 0 0 
                                       f32_4 %184 = OpLoad %32 
                                       f32_3 %185 = OpVectorShuffle %184 %184 0 2 3 
                                       f32_3 %186 = OpFMul %183 %185 
                                                      OpStore %9 %186 
                                Uniform f32* %188 = OpAccessChain %17 %187 
                                         f32 %189 = OpLoad %188 
                                         f32 %190 = OpFNegate %189 
                                         f32 %191 = OpFMul %190 %118 
                                Uniform f32* %193 = OpAccessChain %17 %192 
                                         f32 %194 = OpLoad %193 
                                         f32 %195 = OpFAdd %191 %194 
                                Private f32* %196 = OpAccessChain %32 %76 
                                                      OpStore %196 %195 
                                Private f32* %198 = OpAccessChain %32 %76 
                                         f32 %199 = OpLoad %198 
                                         f32 %200 = OpFNegate %199 
                                Private f32* %201 = OpAccessChain %32 %83 
                                         f32 %202 = OpLoad %201 
                                         f32 %203 = OpFAdd %200 %202 
                                Private f32* %204 = OpAccessChain %197 %76 
                                                      OpStore %204 %203 
                                Uniform f32* %205 = OpAccessChain %17 %187 
                                         f32 %206 = OpLoad %205 
                                         f32 %207 = OpFMul %206 %118 
                                Uniform f32* %208 = OpAccessChain %17 %192 
                                         f32 %209 = OpLoad %208 
                                         f32 %210 = OpFAdd %207 %209 
                                                      OpStore %131 %210 
                                Private f32* %211 = OpAccessChain %32 %76 
                                         f32 %212 = OpLoad %211 
                                         f32 %213 = OpFNegate %212 
                                         f32 %214 = OpLoad %131 
                                         f32 %215 = OpFAdd %213 %214 
                                Private f32* %216 = OpAccessChain %32 %76 
                                                      OpStore %216 %215 
                                Private f32* %217 = OpAccessChain %32 %76 
                                         f32 %218 = OpLoad %217 
                                         f32 %219 = OpFDiv %142 %218 
                                Private f32* %220 = OpAccessChain %32 %76 
                                                      OpStore %220 %219 
                                Private f32* %221 = OpAccessChain %32 %76 
                                         f32 %222 = OpLoad %221 
                                Private f32* %223 = OpAccessChain %197 %76 
                                         f32 %224 = OpLoad %223 
                                         f32 %225 = OpFMul %222 %224 
                                Private f32* %226 = OpAccessChain %32 %76 
                                                      OpStore %226 %225 
                                Private f32* %227 = OpAccessChain %32 %76 
                                         f32 %228 = OpLoad %227 
                                         f32 %229 = OpExtInst %1 43 %228 %88 %142 
                                Private f32* %230 = OpAccessChain %32 %76 
                                                      OpStore %230 %229 
                                Private f32* %231 = OpAccessChain %32 %76 
                                         f32 %232 = OpLoad %231 
                                         f32 %233 = OpFMul %232 %156 
                                         f32 %234 = OpFAdd %233 %158 
                                Private f32* %235 = OpAccessChain %197 %76 
                                                      OpStore %235 %234 
                                Private f32* %236 = OpAccessChain %32 %76 
                                         f32 %237 = OpLoad %236 
                                Private f32* %238 = OpAccessChain %32 %76 
                                         f32 %239 = OpLoad %238 
                                         f32 %240 = OpFMul %237 %239 
                                Private f32* %241 = OpAccessChain %32 %76 
                                                      OpStore %241 %240 
                                Private f32* %242 = OpAccessChain %32 %76 
                                         f32 %243 = OpLoad %242 
                                Private f32* %244 = OpAccessChain %197 %76 
                                         f32 %245 = OpLoad %244 
                                         f32 %246 = OpFMul %243 %245 
                                Private f32* %247 = OpAccessChain %32 %76 
                                                      OpStore %247 %246 
                              Uniform f32_4* %249 = OpAccessChain %17 %248 
                                       f32_4 %250 = OpLoad %249 
                                       f32_3 %251 = OpVectorShuffle %250 %250 0 1 2 
                                       f32_3 %252 = OpFNegate %251 
                              Uniform f32_4* %254 = OpAccessChain %17 %253 
                                       f32_4 %255 = OpLoad %254 
                                       f32_3 %256 = OpVectorShuffle %255 %255 0 1 2 
                                       f32_3 %257 = OpFAdd %252 %256 
                                                      OpStore %197 %257 
                              Uniform f32_4* %258 = OpAccessChain %17 %253 
                                       f32_4 %259 = OpLoad %258 
                                       f32_3 %260 = OpVectorShuffle %259 %259 3 3 3 
                                       f32_3 %261 = OpLoad %197 
                                       f32_3 %262 = OpFMul %260 %261 
                              Uniform f32_4* %263 = OpAccessChain %17 %248 
                                       f32_4 %264 = OpLoad %263 
                                       f32_3 %265 = OpVectorShuffle %264 %264 0 1 2 
                                       f32_3 %266 = OpFAdd %262 %265 
                                                      OpStore %197 %266 
                                       f32_3 %267 = OpLoad %197 
                                       f32_3 %268 = OpFNegate %267 
                              Uniform f32_4* %269 = OpAccessChain %17 %248 
                                       f32_4 %270 = OpLoad %269 
                                       f32_3 %271 = OpVectorShuffle %270 %270 0 1 2 
                                       f32_3 %272 = OpFAdd %268 %271 
                                                      OpStore %66 %272 
                                       f32_4 %273 = OpLoad %32 
                                       f32_3 %274 = OpVectorShuffle %273 %273 0 0 0 
                                       f32_3 %275 = OpLoad %66 
                                       f32_3 %276 = OpFMul %274 %275 
                                       f32_3 %277 = OpLoad %197 
                                       f32_3 %278 = OpFAdd %276 %277 
                                       f32_4 %279 = OpLoad %32 
                                       f32_4 %280 = OpVectorShuffle %279 %278 4 5 6 3 
                                                      OpStore %32 %280 
                         read_only Texture2D %285 = OpLoad %284 
                                     sampler %289 = OpLoad %288 
                  read_only Texture2DSampled %291 = OpSampledImage %285 %289 
                                       f32_2 %294 = OpLoad vs_TEXCOORD0 
                                       f32_4 %295 = OpImageSampleImplicitLod %291 %294 
                                       f32_3 %296 = OpVectorShuffle %295 %295 0 1 2 
                                                      OpStore %281 %296 
                                       f32_3 %297 = OpLoad %281 
                              Uniform f32_4* %299 = OpAccessChain %17 %298 
                                       f32_4 %300 = OpLoad %299 
                                       f32_3 %301 = OpVectorShuffle %300 %300 0 1 2 
                                       f32_3 %302 = OpFMul %297 %301 
                                                      OpStore %66 %302 
                                       f32_3 %303 = OpLoad %66 
                              Uniform f32_4* %304 = OpAccessChain %17 %171 
                                       f32_4 %305 = OpLoad %304 
                                       f32_3 %306 = OpVectorShuffle %305 %305 0 1 2 
                                       f32_3 %307 = OpFMul %303 %306 
                                                      OpStore %66 %307 
                                       f32_3 %308 = OpLoad %66 
                                       f32_4 %309 = OpLoad %32 
                                       f32_3 %310 = OpVectorShuffle %309 %309 0 1 2 
                                       f32_3 %311 = OpFMul %308 %310 
                                       f32_3 %312 = OpLoad %9 
                                       f32_3 %313 = OpFAdd %311 %312 
                                                      OpStore %9 %313 
                                       f32_3 %316 = OpLoad %9 
                                       f32_4 %317 = OpLoad %315 
                                       f32_4 %318 = OpVectorShuffle %317 %316 4 5 6 3 
                                                      OpStore %315 %318 
                                 Output f32* %321 = OpAccessChain %315 %319 
                                                      OpStore %321 %142 
                                                      OpReturn
                                                      OpFunctionEnd
"
}
SubProgram "gles3 hw_tier00 " {
Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "VERTEXLIGHT_ON" }
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 unity_4LightPosX0;
uniform 	vec4 unity_4LightPosY0;
uniform 	vec4 unity_4LightPosZ0;
uniform 	mediump vec4 unity_4LightAtten0;
uniform 	mediump vec4 unity_LightColor[8];
uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in highp vec3 in_NORMAL0;
in highp vec4 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out highp vec3 vs_TEXCOORD1;
out highp vec3 vs_TEXCOORD2;
out mediump vec3 vs_TEXCOORD3;
out highp vec4 vs_TEXCOORD5;
out highp vec4 vs_TEXCOORD6;
vec4 u_xlat0;
vec4 u_xlat1;
mediump vec4 u_xlat16_1;
vec4 u_xlat2;
vec4 u_xlat3;
vec4 u_xlat4;
mediump vec3 u_xlat16_5;
mediump vec3 u_xlat16_6;
float u_xlat21;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
    u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy;
    u_xlat1.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat1.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat1.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat21 = dot(u_xlat1.xyz, u_xlat1.xyz);
    u_xlat21 = inversesqrt(u_xlat21);
    u_xlat1.xyz = vec3(u_xlat21) * u_xlat1.xyz;
    vs_TEXCOORD1.xyz = u_xlat1.xyz;
    vs_TEXCOORD2.xyz = u_xlat0.xyz;
    u_xlat2 = (-u_xlat0.xxxx) + unity_4LightPosX0;
    u_xlat3 = (-u_xlat0.yyyy) + unity_4LightPosY0;
    u_xlat0 = (-u_xlat0.zzzz) + unity_4LightPosZ0;
    u_xlat4 = u_xlat1.yyyy * u_xlat3;
    u_xlat3 = u_xlat3 * u_xlat3;
    u_xlat3 = u_xlat2 * u_xlat2 + u_xlat3;
    u_xlat2 = u_xlat2 * u_xlat1.xxxx + u_xlat4;
    u_xlat2 = u_xlat0 * u_xlat1.zzzz + u_xlat2;
    u_xlat0 = u_xlat0 * u_xlat0 + u_xlat3;
    u_xlat0 = max(u_xlat0, vec4(9.99999997e-07, 9.99999997e-07, 9.99999997e-07, 9.99999997e-07));
    u_xlat3 = inversesqrt(u_xlat0);
    u_xlat0 = u_xlat0 * unity_4LightAtten0 + vec4(1.0, 1.0, 1.0, 1.0);
    u_xlat0 = vec4(1.0, 1.0, 1.0, 1.0) / u_xlat0;
    u_xlat2 = u_xlat2 * u_xlat3;
    u_xlat2 = max(u_xlat2, vec4(0.0, 0.0, 0.0, 0.0));
    u_xlat0 = u_xlat0 * u_xlat2;
    u_xlat2.xyz = u_xlat0.yyy * unity_LightColor[1].xyz;
    u_xlat2.xyz = unity_LightColor[0].xyz * u_xlat0.xxx + u_xlat2.xyz;
    u_xlat0.xyz = unity_LightColor[2].xyz * u_xlat0.zzz + u_xlat2.xyz;
    u_xlat0.xyz = unity_LightColor[3].xyz * u_xlat0.www + u_xlat0.xyz;
    u_xlat2.xyz = u_xlat0.xyz * vec3(0.305306017, 0.305306017, 0.305306017) + vec3(0.682171106, 0.682171106, 0.682171106);
    u_xlat2.xyz = u_xlat0.xyz * u_xlat2.xyz + vec3(0.0125228781, 0.0125228781, 0.0125228781);
    u_xlat16_5.x = u_xlat1.y * u_xlat1.y;
    u_xlat16_5.x = u_xlat1.x * u_xlat1.x + (-u_xlat16_5.x);
    u_xlat16_1 = u_xlat1.yzzx * u_xlat1.xyzz;
    u_xlat16_6.x = dot(unity_SHBr, u_xlat16_1);
    u_xlat16_6.y = dot(unity_SHBg, u_xlat16_1);
    u_xlat16_6.z = dot(unity_SHBb, u_xlat16_1);
    u_xlat16_5.xyz = unity_SHC.xyz * u_xlat16_5.xxx + u_xlat16_6.xyz;
    vs_TEXCOORD3.xyz = u_xlat0.xyz * u_xlat2.xyz + u_xlat16_5.xyz;
    vs_TEXCOORD5 = vec4(0.0, 0.0, 0.0, 0.0);
    vs_TEXCOORD6 = vec4(0.0, 0.0, 0.0, 0.0);
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec3 _WorldSpaceCameraPos;
uniform 	mediump vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 _LightColor0;
uniform 	mediump vec4 _SpecColor;
uniform 	mediump vec4 _Color;
uniform 	mediump float _Smoothness;
uniform 	mediump vec4 _HColor;
uniform 	mediump vec4 _SColor;
uniform 	mediump float _RampThreshold;
uniform 	mediump float _RampSmooth;
uniform 	mediump float _SpecSmooth;
UNITY_LOCATION(0) uniform mediump sampler2D _MainTex;
in mediump vec2 vs_TEXCOORD0;
in highp vec3 vs_TEXCOORD1;
in highp vec3 vs_TEXCOORD2;
in mediump vec3 vs_TEXCOORD3;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
vec4 u_xlat1;
mediump vec4 u_xlat16_1;
mediump vec3 u_xlat16_2;
vec3 u_xlat3;
mediump vec3 u_xlat16_3;
mediump vec3 u_xlat16_4;
float u_xlat5;
mediump vec3 u_xlat16_6;
mediump float u_xlat16_11;
float u_xlat15;
mediump float u_xlat16_16;
void main()
{
    u_xlat0.xyz = (-vs_TEXCOORD2.xyz) + _WorldSpaceCameraPos.xyz;
    u_xlat15 = dot(u_xlat0.xyz, u_xlat0.xyz);
    u_xlat15 = inversesqrt(u_xlat15);
    u_xlat16_1.xyz = u_xlat0.xyz * vec3(u_xlat15) + _WorldSpaceLightPos0.xyz;
    u_xlat16_16 = dot(u_xlat16_1.xyz, u_xlat16_1.xyz);
    u_xlat16_16 = inversesqrt(u_xlat16_16);
    u_xlat16_1.xyz = vec3(u_xlat16_16) * u_xlat16_1.xyz;
    u_xlat16_16 = dot(vs_TEXCOORD1.xyz, vs_TEXCOORD1.xyz);
    u_xlat16_16 = inversesqrt(u_xlat16_16);
    u_xlat16_2.xyz = vec3(u_xlat16_16) * vs_TEXCOORD1.xyz;
    u_xlat16_1.x = dot(u_xlat16_2.xyz, u_xlat16_1.xyz);
    u_xlat16_1.y = dot(u_xlat16_2.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat16_1.xy = max(u_xlat16_1.xy, vec2(0.0, 0.0));
    u_xlat0.x = log2(u_xlat16_1.x);
    u_xlat16_1.x = _Smoothness * 128.0;
    u_xlat0.x = u_xlat0.x * u_xlat16_1.x;
    u_xlat0.x = exp2(u_xlat0.x);
    u_xlat16_1.x = (-_SpecSmooth) * 0.5 + 0.5;
    u_xlat0.x = u_xlat0.x * 2.0 + (-u_xlat16_1.x);
    u_xlat16_11 = _SpecSmooth * 0.5 + 0.5;
    u_xlat5 = (-u_xlat16_1.x) + u_xlat16_11;
    u_xlat5 = float(1.0) / u_xlat5;
    u_xlat0.x = u_xlat5 * u_xlat0.x;
#ifdef UNITY_ADRENO_ES3
    u_xlat0.x = min(max(u_xlat0.x, 0.0), 1.0);
#else
    u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);
#endif
    u_xlat5 = u_xlat0.x * -2.0 + 3.0;
    u_xlat0.x = u_xlat0.x * u_xlat0.x;
    u_xlat0.x = u_xlat0.x * u_xlat5;
    u_xlat16_1.xzw = _LightColor0.xyz * _SpecColor.xyz;
    u_xlat0.xyz = u_xlat0.xxx * u_xlat16_1.xzw;
    u_xlat16_1.x = (-_RampSmooth) * 0.5 + _RampThreshold;
    u_xlat16_6.x = (-u_xlat16_1.x) + u_xlat16_1.y;
    u_xlat16_11 = _RampSmooth * 0.5 + _RampThreshold;
    u_xlat16_1.x = (-u_xlat16_1.x) + u_xlat16_11;
    u_xlat16_1.x = float(1.0) / u_xlat16_1.x;
    u_xlat16_1.x = u_xlat16_1.x * u_xlat16_6.x;
#ifdef UNITY_ADRENO_ES3
    u_xlat16_1.x = min(max(u_xlat16_1.x, 0.0), 1.0);
#else
    u_xlat16_1.x = clamp(u_xlat16_1.x, 0.0, 1.0);
#endif
    u_xlat16_6.x = u_xlat16_1.x * -2.0 + 3.0;
    u_xlat16_1.x = u_xlat16_1.x * u_xlat16_1.x;
    u_xlat16_1.x = u_xlat16_1.x * u_xlat16_6.x;
    u_xlat16_6.xyz = (-_HColor.xyz) + _SColor.xyz;
    u_xlat16_6.xyz = _SColor.www * u_xlat16_6.xyz + _HColor.xyz;
    u_xlat16_2.xyz = (-u_xlat16_6.xyz) + _HColor.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xxx * u_xlat16_2.xyz + u_xlat16_6.xyz;
    u_xlat16_3.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_2.xyz = u_xlat16_3.xyz * _Color.xyz;
    u_xlat16_4.xyz = u_xlat16_2.xyz * _LightColor0.xyz;
    u_xlat0.xyz = u_xlat16_4.xyz * u_xlat16_1.xyz + u_xlat0.xyz;
    u_xlat1.xyz = vs_TEXCOORD1.xyz;
    u_xlat1.w = 1.0;
    u_xlat16_4.x = dot(unity_SHAr, u_xlat1);
    u_xlat16_4.y = dot(unity_SHAg, u_xlat1);
    u_xlat16_4.z = dot(unity_SHAb, u_xlat1);
    u_xlat16_4.xyz = u_xlat16_4.xyz + vs_TEXCOORD3.xyz;
    u_xlat16_4.xyz = max(u_xlat16_4.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat3.xyz = log2(u_xlat16_4.xyz);
    u_xlat3.xyz = u_xlat3.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
    u_xlat3.xyz = exp2(u_xlat3.xyz);
    u_xlat3.xyz = u_xlat3.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
    u_xlat3.xyz = max(u_xlat3.xyz, vec3(0.0, 0.0, 0.0));
    SV_Target0.xyz = u_xlat16_2.xyz * u_xlat3.xyz + u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier01 " {
Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "VERTEXLIGHT_ON" }
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 unity_4LightPosX0;
uniform 	vec4 unity_4LightPosY0;
uniform 	vec4 unity_4LightPosZ0;
uniform 	mediump vec4 unity_4LightAtten0;
uniform 	mediump vec4 unity_LightColor[8];
uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in highp vec3 in_NORMAL0;
in highp vec4 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out highp vec3 vs_TEXCOORD1;
out highp vec3 vs_TEXCOORD2;
out mediump vec3 vs_TEXCOORD3;
out highp vec4 vs_TEXCOORD5;
out highp vec4 vs_TEXCOORD6;
vec4 u_xlat0;
vec4 u_xlat1;
mediump vec4 u_xlat16_1;
vec4 u_xlat2;
vec4 u_xlat3;
vec4 u_xlat4;
mediump vec3 u_xlat16_5;
mediump vec3 u_xlat16_6;
float u_xlat21;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
    u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy;
    u_xlat1.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat1.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat1.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat21 = dot(u_xlat1.xyz, u_xlat1.xyz);
    u_xlat21 = inversesqrt(u_xlat21);
    u_xlat1.xyz = vec3(u_xlat21) * u_xlat1.xyz;
    vs_TEXCOORD1.xyz = u_xlat1.xyz;
    vs_TEXCOORD2.xyz = u_xlat0.xyz;
    u_xlat2 = (-u_xlat0.xxxx) + unity_4LightPosX0;
    u_xlat3 = (-u_xlat0.yyyy) + unity_4LightPosY0;
    u_xlat0 = (-u_xlat0.zzzz) + unity_4LightPosZ0;
    u_xlat4 = u_xlat1.yyyy * u_xlat3;
    u_xlat3 = u_xlat3 * u_xlat3;
    u_xlat3 = u_xlat2 * u_xlat2 + u_xlat3;
    u_xlat2 = u_xlat2 * u_xlat1.xxxx + u_xlat4;
    u_xlat2 = u_xlat0 * u_xlat1.zzzz + u_xlat2;
    u_xlat0 = u_xlat0 * u_xlat0 + u_xlat3;
    u_xlat0 = max(u_xlat0, vec4(9.99999997e-07, 9.99999997e-07, 9.99999997e-07, 9.99999997e-07));
    u_xlat3 = inversesqrt(u_xlat0);
    u_xlat0 = u_xlat0 * unity_4LightAtten0 + vec4(1.0, 1.0, 1.0, 1.0);
    u_xlat0 = vec4(1.0, 1.0, 1.0, 1.0) / u_xlat0;
    u_xlat2 = u_xlat2 * u_xlat3;
    u_xlat2 = max(u_xlat2, vec4(0.0, 0.0, 0.0, 0.0));
    u_xlat0 = u_xlat0 * u_xlat2;
    u_xlat2.xyz = u_xlat0.yyy * unity_LightColor[1].xyz;
    u_xlat2.xyz = unity_LightColor[0].xyz * u_xlat0.xxx + u_xlat2.xyz;
    u_xlat0.xyz = unity_LightColor[2].xyz * u_xlat0.zzz + u_xlat2.xyz;
    u_xlat0.xyz = unity_LightColor[3].xyz * u_xlat0.www + u_xlat0.xyz;
    u_xlat2.xyz = u_xlat0.xyz * vec3(0.305306017, 0.305306017, 0.305306017) + vec3(0.682171106, 0.682171106, 0.682171106);
    u_xlat2.xyz = u_xlat0.xyz * u_xlat2.xyz + vec3(0.0125228781, 0.0125228781, 0.0125228781);
    u_xlat16_5.x = u_xlat1.y * u_xlat1.y;
    u_xlat16_5.x = u_xlat1.x * u_xlat1.x + (-u_xlat16_5.x);
    u_xlat16_1 = u_xlat1.yzzx * u_xlat1.xyzz;
    u_xlat16_6.x = dot(unity_SHBr, u_xlat16_1);
    u_xlat16_6.y = dot(unity_SHBg, u_xlat16_1);
    u_xlat16_6.z = dot(unity_SHBb, u_xlat16_1);
    u_xlat16_5.xyz = unity_SHC.xyz * u_xlat16_5.xxx + u_xlat16_6.xyz;
    vs_TEXCOORD3.xyz = u_xlat0.xyz * u_xlat2.xyz + u_xlat16_5.xyz;
    vs_TEXCOORD5 = vec4(0.0, 0.0, 0.0, 0.0);
    vs_TEXCOORD6 = vec4(0.0, 0.0, 0.0, 0.0);
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec3 _WorldSpaceCameraPos;
uniform 	mediump vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 _LightColor0;
uniform 	mediump vec4 _SpecColor;
uniform 	mediump vec4 _Color;
uniform 	mediump float _Smoothness;
uniform 	mediump vec4 _HColor;
uniform 	mediump vec4 _SColor;
uniform 	mediump float _RampThreshold;
uniform 	mediump float _RampSmooth;
uniform 	mediump float _SpecSmooth;
UNITY_LOCATION(0) uniform mediump sampler2D _MainTex;
in mediump vec2 vs_TEXCOORD0;
in highp vec3 vs_TEXCOORD1;
in highp vec3 vs_TEXCOORD2;
in mediump vec3 vs_TEXCOORD3;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
vec4 u_xlat1;
mediump vec4 u_xlat16_1;
mediump vec3 u_xlat16_2;
vec3 u_xlat3;
mediump vec3 u_xlat16_3;
mediump vec3 u_xlat16_4;
float u_xlat5;
mediump vec3 u_xlat16_6;
mediump float u_xlat16_11;
float u_xlat15;
mediump float u_xlat16_16;
void main()
{
    u_xlat0.xyz = (-vs_TEXCOORD2.xyz) + _WorldSpaceCameraPos.xyz;
    u_xlat15 = dot(u_xlat0.xyz, u_xlat0.xyz);
    u_xlat15 = inversesqrt(u_xlat15);
    u_xlat16_1.xyz = u_xlat0.xyz * vec3(u_xlat15) + _WorldSpaceLightPos0.xyz;
    u_xlat16_16 = dot(u_xlat16_1.xyz, u_xlat16_1.xyz);
    u_xlat16_16 = inversesqrt(u_xlat16_16);
    u_xlat16_1.xyz = vec3(u_xlat16_16) * u_xlat16_1.xyz;
    u_xlat16_16 = dot(vs_TEXCOORD1.xyz, vs_TEXCOORD1.xyz);
    u_xlat16_16 = inversesqrt(u_xlat16_16);
    u_xlat16_2.xyz = vec3(u_xlat16_16) * vs_TEXCOORD1.xyz;
    u_xlat16_1.x = dot(u_xlat16_2.xyz, u_xlat16_1.xyz);
    u_xlat16_1.y = dot(u_xlat16_2.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat16_1.xy = max(u_xlat16_1.xy, vec2(0.0, 0.0));
    u_xlat0.x = log2(u_xlat16_1.x);
    u_xlat16_1.x = _Smoothness * 128.0;
    u_xlat0.x = u_xlat0.x * u_xlat16_1.x;
    u_xlat0.x = exp2(u_xlat0.x);
    u_xlat16_1.x = (-_SpecSmooth) * 0.5 + 0.5;
    u_xlat0.x = u_xlat0.x * 2.0 + (-u_xlat16_1.x);
    u_xlat16_11 = _SpecSmooth * 0.5 + 0.5;
    u_xlat5 = (-u_xlat16_1.x) + u_xlat16_11;
    u_xlat5 = float(1.0) / u_xlat5;
    u_xlat0.x = u_xlat5 * u_xlat0.x;
#ifdef UNITY_ADRENO_ES3
    u_xlat0.x = min(max(u_xlat0.x, 0.0), 1.0);
#else
    u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);
#endif
    u_xlat5 = u_xlat0.x * -2.0 + 3.0;
    u_xlat0.x = u_xlat0.x * u_xlat0.x;
    u_xlat0.x = u_xlat0.x * u_xlat5;
    u_xlat16_1.xzw = _LightColor0.xyz * _SpecColor.xyz;
    u_xlat0.xyz = u_xlat0.xxx * u_xlat16_1.xzw;
    u_xlat16_1.x = (-_RampSmooth) * 0.5 + _RampThreshold;
    u_xlat16_6.x = (-u_xlat16_1.x) + u_xlat16_1.y;
    u_xlat16_11 = _RampSmooth * 0.5 + _RampThreshold;
    u_xlat16_1.x = (-u_xlat16_1.x) + u_xlat16_11;
    u_xlat16_1.x = float(1.0) / u_xlat16_1.x;
    u_xlat16_1.x = u_xlat16_1.x * u_xlat16_6.x;
#ifdef UNITY_ADRENO_ES3
    u_xlat16_1.x = min(max(u_xlat16_1.x, 0.0), 1.0);
#else
    u_xlat16_1.x = clamp(u_xlat16_1.x, 0.0, 1.0);
#endif
    u_xlat16_6.x = u_xlat16_1.x * -2.0 + 3.0;
    u_xlat16_1.x = u_xlat16_1.x * u_xlat16_1.x;
    u_xlat16_1.x = u_xlat16_1.x * u_xlat16_6.x;
    u_xlat16_6.xyz = (-_HColor.xyz) + _SColor.xyz;
    u_xlat16_6.xyz = _SColor.www * u_xlat16_6.xyz + _HColor.xyz;
    u_xlat16_2.xyz = (-u_xlat16_6.xyz) + _HColor.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xxx * u_xlat16_2.xyz + u_xlat16_6.xyz;
    u_xlat16_3.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_2.xyz = u_xlat16_3.xyz * _Color.xyz;
    u_xlat16_4.xyz = u_xlat16_2.xyz * _LightColor0.xyz;
    u_xlat0.xyz = u_xlat16_4.xyz * u_xlat16_1.xyz + u_xlat0.xyz;
    u_xlat1.xyz = vs_TEXCOORD1.xyz;
    u_xlat1.w = 1.0;
    u_xlat16_4.x = dot(unity_SHAr, u_xlat1);
    u_xlat16_4.y = dot(unity_SHAg, u_xlat1);
    u_xlat16_4.z = dot(unity_SHAb, u_xlat1);
    u_xlat16_4.xyz = u_xlat16_4.xyz + vs_TEXCOORD3.xyz;
    u_xlat16_4.xyz = max(u_xlat16_4.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat3.xyz = log2(u_xlat16_4.xyz);
    u_xlat3.xyz = u_xlat3.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
    u_xlat3.xyz = exp2(u_xlat3.xyz);
    u_xlat3.xyz = u_xlat3.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
    u_xlat3.xyz = max(u_xlat3.xyz, vec3(0.0, 0.0, 0.0));
    SV_Target0.xyz = u_xlat16_2.xyz * u_xlat3.xyz + u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier02 " {
Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "VERTEXLIGHT_ON" }
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 unity_4LightPosX0;
uniform 	vec4 unity_4LightPosY0;
uniform 	vec4 unity_4LightPosZ0;
uniform 	mediump vec4 unity_4LightAtten0;
uniform 	mediump vec4 unity_LightColor[8];
uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in highp vec3 in_NORMAL0;
in highp vec4 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out highp vec3 vs_TEXCOORD1;
out highp vec3 vs_TEXCOORD2;
out mediump vec3 vs_TEXCOORD3;
out highp vec4 vs_TEXCOORD5;
out highp vec4 vs_TEXCOORD6;
vec4 u_xlat0;
vec4 u_xlat1;
mediump vec4 u_xlat16_1;
vec4 u_xlat2;
vec4 u_xlat3;
vec4 u_xlat4;
mediump vec3 u_xlat16_5;
mediump vec3 u_xlat16_6;
float u_xlat21;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
    u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy;
    u_xlat1.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat1.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat1.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat21 = dot(u_xlat1.xyz, u_xlat1.xyz);
    u_xlat21 = inversesqrt(u_xlat21);
    u_xlat1.xyz = vec3(u_xlat21) * u_xlat1.xyz;
    vs_TEXCOORD1.xyz = u_xlat1.xyz;
    vs_TEXCOORD2.xyz = u_xlat0.xyz;
    u_xlat2 = (-u_xlat0.xxxx) + unity_4LightPosX0;
    u_xlat3 = (-u_xlat0.yyyy) + unity_4LightPosY0;
    u_xlat0 = (-u_xlat0.zzzz) + unity_4LightPosZ0;
    u_xlat4 = u_xlat1.yyyy * u_xlat3;
    u_xlat3 = u_xlat3 * u_xlat3;
    u_xlat3 = u_xlat2 * u_xlat2 + u_xlat3;
    u_xlat2 = u_xlat2 * u_xlat1.xxxx + u_xlat4;
    u_xlat2 = u_xlat0 * u_xlat1.zzzz + u_xlat2;
    u_xlat0 = u_xlat0 * u_xlat0 + u_xlat3;
    u_xlat0 = max(u_xlat0, vec4(9.99999997e-07, 9.99999997e-07, 9.99999997e-07, 9.99999997e-07));
    u_xlat3 = inversesqrt(u_xlat0);
    u_xlat0 = u_xlat0 * unity_4LightAtten0 + vec4(1.0, 1.0, 1.0, 1.0);
    u_xlat0 = vec4(1.0, 1.0, 1.0, 1.0) / u_xlat0;
    u_xlat2 = u_xlat2 * u_xlat3;
    u_xlat2 = max(u_xlat2, vec4(0.0, 0.0, 0.0, 0.0));
    u_xlat0 = u_xlat0 * u_xlat2;
    u_xlat2.xyz = u_xlat0.yyy * unity_LightColor[1].xyz;
    u_xlat2.xyz = unity_LightColor[0].xyz * u_xlat0.xxx + u_xlat2.xyz;
    u_xlat0.xyz = unity_LightColor[2].xyz * u_xlat0.zzz + u_xlat2.xyz;
    u_xlat0.xyz = unity_LightColor[3].xyz * u_xlat0.www + u_xlat0.xyz;
    u_xlat2.xyz = u_xlat0.xyz * vec3(0.305306017, 0.305306017, 0.305306017) + vec3(0.682171106, 0.682171106, 0.682171106);
    u_xlat2.xyz = u_xlat0.xyz * u_xlat2.xyz + vec3(0.0125228781, 0.0125228781, 0.0125228781);
    u_xlat16_5.x = u_xlat1.y * u_xlat1.y;
    u_xlat16_5.x = u_xlat1.x * u_xlat1.x + (-u_xlat16_5.x);
    u_xlat16_1 = u_xlat1.yzzx * u_xlat1.xyzz;
    u_xlat16_6.x = dot(unity_SHBr, u_xlat16_1);
    u_xlat16_6.y = dot(unity_SHBg, u_xlat16_1);
    u_xlat16_6.z = dot(unity_SHBb, u_xlat16_1);
    u_xlat16_5.xyz = unity_SHC.xyz * u_xlat16_5.xxx + u_xlat16_6.xyz;
    vs_TEXCOORD3.xyz = u_xlat0.xyz * u_xlat2.xyz + u_xlat16_5.xyz;
    vs_TEXCOORD5 = vec4(0.0, 0.0, 0.0, 0.0);
    vs_TEXCOORD6 = vec4(0.0, 0.0, 0.0, 0.0);
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec3 _WorldSpaceCameraPos;
uniform 	mediump vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	mediump vec4 _LightColor0;
uniform 	mediump vec4 _SpecColor;
uniform 	mediump vec4 _Color;
uniform 	mediump float _Smoothness;
uniform 	mediump vec4 _HColor;
uniform 	mediump vec4 _SColor;
uniform 	mediump float _RampThreshold;
uniform 	mediump float _RampSmooth;
uniform 	mediump float _SpecSmooth;
UNITY_LOCATION(0) uniform mediump sampler2D _MainTex;
in mediump vec2 vs_TEXCOORD0;
in highp vec3 vs_TEXCOORD1;
in highp vec3 vs_TEXCOORD2;
in mediump vec3 vs_TEXCOORD3;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
vec4 u_xlat1;
mediump vec4 u_xlat16_1;
mediump vec3 u_xlat16_2;
vec3 u_xlat3;
mediump vec3 u_xlat16_3;
mediump vec3 u_xlat16_4;
float u_xlat5;
mediump vec3 u_xlat16_6;
mediump float u_xlat16_11;
float u_xlat15;
mediump float u_xlat16_16;
void main()
{
    u_xlat0.xyz = (-vs_TEXCOORD2.xyz) + _WorldSpaceCameraPos.xyz;
    u_xlat15 = dot(u_xlat0.xyz, u_xlat0.xyz);
    u_xlat15 = inversesqrt(u_xlat15);
    u_xlat16_1.xyz = u_xlat0.xyz * vec3(u_xlat15) + _WorldSpaceLightPos0.xyz;
    u_xlat16_16 = dot(u_xlat16_1.xyz, u_xlat16_1.xyz);
    u_xlat16_16 = inversesqrt(u_xlat16_16);
    u_xlat16_1.xyz = vec3(u_xlat16_16) * u_xlat16_1.xyz;
    u_xlat16_16 = dot(vs_TEXCOORD1.xyz, vs_TEXCOORD1.xyz);
    u_xlat16_16 = inversesqrt(u_xlat16_16);
    u_xlat16_2.xyz = vec3(u_xlat16_16) * vs_TEXCOORD1.xyz;
    u_xlat16_1.x = dot(u_xlat16_2.xyz, u_xlat16_1.xyz);
    u_xlat16_1.y = dot(u_xlat16_2.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat16_1.xy = max(u_xlat16_1.xy, vec2(0.0, 0.0));
    u_xlat0.x = log2(u_xlat16_1.x);
    u_xlat16_1.x = _Smoothness * 128.0;
    u_xlat0.x = u_xlat0.x * u_xlat16_1.x;
    u_xlat0.x = exp2(u_xlat0.x);
    u_xlat16_1.x = (-_SpecSmooth) * 0.5 + 0.5;
    u_xlat0.x = u_xlat0.x * 2.0 + (-u_xlat16_1.x);
    u_xlat16_11 = _SpecSmooth * 0.5 + 0.5;
    u_xlat5 = (-u_xlat16_1.x) + u_xlat16_11;
    u_xlat5 = float(1.0) / u_xlat5;
    u_xlat0.x = u_xlat5 * u_xlat0.x;
#ifdef UNITY_ADRENO_ES3
    u_xlat0.x = min(max(u_xlat0.x, 0.0), 1.0);
#else
    u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);
#endif
    u_xlat5 = u_xlat0.x * -2.0 + 3.0;
    u_xlat0.x = u_xlat0.x * u_xlat0.x;
    u_xlat0.x = u_xlat0.x * u_xlat5;
    u_xlat16_1.xzw = _LightColor0.xyz * _SpecColor.xyz;
    u_xlat0.xyz = u_xlat0.xxx * u_xlat16_1.xzw;
    u_xlat16_1.x = (-_RampSmooth) * 0.5 + _RampThreshold;
    u_xlat16_6.x = (-u_xlat16_1.x) + u_xlat16_1.y;
    u_xlat16_11 = _RampSmooth * 0.5 + _RampThreshold;
    u_xlat16_1.x = (-u_xlat16_1.x) + u_xlat16_11;
    u_xlat16_1.x = float(1.0) / u_xlat16_1.x;
    u_xlat16_1.x = u_xlat16_1.x * u_xlat16_6.x;
#ifdef UNITY_ADRENO_ES3
    u_xlat16_1.x = min(max(u_xlat16_1.x, 0.0), 1.0);
#else
    u_xlat16_1.x = clamp(u_xlat16_1.x, 0.0, 1.0);
#endif
    u_xlat16_6.x = u_xlat16_1.x * -2.0 + 3.0;
    u_xlat16_1.x = u_xlat16_1.x * u_xlat16_1.x;
    u_xlat16_1.x = u_xlat16_1.x * u_xlat16_6.x;
    u_xlat16_6.xyz = (-_HColor.xyz) + _SColor.xyz;
    u_xlat16_6.xyz = _SColor.www * u_xlat16_6.xyz + _HColor.xyz;
    u_xlat16_2.xyz = (-u_xlat16_6.xyz) + _HColor.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xxx * u_xlat16_2.xyz + u_xlat16_6.xyz;
    u_xlat16_3.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_2.xyz = u_xlat16_3.xyz * _Color.xyz;
    u_xlat16_4.xyz = u_xlat16_2.xyz * _LightColor0.xyz;
    u_xlat0.xyz = u_xlat16_4.xyz * u_xlat16_1.xyz + u_xlat0.xyz;
    u_xlat1.xyz = vs_TEXCOORD1.xyz;
    u_xlat1.w = 1.0;
    u_xlat16_4.x = dot(unity_SHAr, u_xlat1);
    u_xlat16_4.y = dot(unity_SHAg, u_xlat1);
    u_xlat16_4.z = dot(unity_SHAb, u_xlat1);
    u_xlat16_4.xyz = u_xlat16_4.xyz + vs_TEXCOORD3.xyz;
    u_xlat16_4.xyz = max(u_xlat16_4.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat3.xyz = log2(u_xlat16_4.xyz);
    u_xlat3.xyz = u_xlat3.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
    u_xlat3.xyz = exp2(u_xlat3.xyz);
    u_xlat3.xyz = u_xlat3.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
    u_xlat3.xyz = max(u_xlat3.xyz, vec3(0.0, 0.0, 0.0));
    SV_Target0.xyz = u_xlat16_2.xyz * u_xlat3.xyz + u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "vulkan hw_tier00 " {
Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "VERTEXLIGHT_ON" }
"; SPIR-V
; Version: 1.0
; Generator: Khronos Glslang Reference Front End; 6
; Bound: 369
; Schema: 0
                                                      OpCapability Shader 
                                               %1 = OpExtInstImport "GLSL.std.450" 
                                                      OpMemoryModel Logical GLSL450 
                                                      OpEntryPoint Vertex %4 "main" %11 %90 %100 %116 %120 %159 %162 %353 %361 %362 
                                                      OpName vs_TEXCOORD0 "vs_TEXCOORD0" 
                                                      OpName vs_TEXCOORD1 "vs_TEXCOORD1" 
                                                      OpName vs_TEXCOORD2 "vs_TEXCOORD2" 
                                                      OpName vs_TEXCOORD3 "vs_TEXCOORD3" 
                                                      OpName vs_TEXCOORD5 "vs_TEXCOORD5" 
                                                      OpName vs_TEXCOORD6 "vs_TEXCOORD6" 
                                                      OpDecorate %11 Location 11 
                                                      OpDecorate %16 ArrayStride 16 
                                                      OpDecorate %18 ArrayStride 18 
                                                      OpDecorate %19 ArrayStride 19 
                                                      OpDecorate %20 ArrayStride 20 
                                                      OpMemberDecorate %21 0 Offset 21 
                                                      OpMemberDecorate %21 1 Offset 21 
                                                      OpMemberDecorate %21 2 Offset 21 
                                                      OpMemberDecorate %21 3 RelaxedPrecision 
                                                      OpMemberDecorate %21 3 Offset 21 
                                                      OpMemberDecorate %21 4 RelaxedPrecision 
                                                      OpMemberDecorate %21 4 Offset 21 
                                                      OpMemberDecorate %21 5 RelaxedPrecision 
                                                      OpMemberDecorate %21 5 Offset 21 
                                                      OpMemberDecorate %21 6 RelaxedPrecision 
                                                      OpMemberDecorate %21 6 Offset 21 
                                                      OpMemberDecorate %21 7 RelaxedPrecision 
                                                      OpMemberDecorate %21 7 Offset 21 
                                                      OpMemberDecorate %21 8 RelaxedPrecision 
                                                      OpMemberDecorate %21 8 Offset 21 
                                                      OpMemberDecorate %21 9 Offset 21 
                                                      OpMemberDecorate %21 10 Offset 21 
                                                      OpMemberDecorate %21 11 Offset 21 
                                                      OpMemberDecorate %21 12 Offset 21 
                                                      OpDecorate %21 Block 
                                                      OpDecorate %23 DescriptorSet 23 
                                                      OpDecorate %23 Binding 23 
                                                      OpMemberDecorate %88 0 BuiltIn 88 
                                                      OpMemberDecorate %88 1 BuiltIn 88 
                                                      OpMemberDecorate %88 2 BuiltIn 88 
                                                      OpDecorate %88 Block 
                                                      OpDecorate %100 Location 100 
                                                      OpDecorate vs_TEXCOORD0 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD0 Location 116 
                                                      OpDecorate %120 Location 120 
                                                      OpDecorate vs_TEXCOORD1 Location 159 
                                                      OpDecorate vs_TEXCOORD2 Location 162 
                                                      OpDecorate %222 RelaxedPrecision 
                                                      OpDecorate %243 RelaxedPrecision 
                                                      OpDecorate %244 RelaxedPrecision 
                                                      OpDecorate %249 RelaxedPrecision 
                                                      OpDecorate %250 RelaxedPrecision 
                                                      OpDecorate %260 RelaxedPrecision 
                                                      OpDecorate %261 RelaxedPrecision 
                                                      OpDecorate %271 RelaxedPrecision 
                                                      OpDecorate %272 RelaxedPrecision 
                                                      OpDecorate %302 RelaxedPrecision 
                                                      OpDecorate %315 RelaxedPrecision 
                                                      OpDecorate %316 RelaxedPrecision 
                                                      OpDecorate %319 RelaxedPrecision 
                                                      OpDecorate %325 RelaxedPrecision 
                                                      OpDecorate %328 RelaxedPrecision 
                                                      OpDecorate %329 RelaxedPrecision 
                                                      OpDecorate %330 RelaxedPrecision 
                                                      OpDecorate %334 RelaxedPrecision 
                                                      OpDecorate %335 RelaxedPrecision 
                                                      OpDecorate %336 RelaxedPrecision 
                                                      OpDecorate %340 RelaxedPrecision 
                                                      OpDecorate %341 RelaxedPrecision 
                                                      OpDecorate %342 RelaxedPrecision 
                                                      OpDecorate %346 RelaxedPrecision 
                                                      OpDecorate %347 RelaxedPrecision 
                                                      OpDecorate %348 RelaxedPrecision 
                                                      OpDecorate %349 RelaxedPrecision 
                                                      OpDecorate %350 RelaxedPrecision 
                                                      OpDecorate %351 RelaxedPrecision 
                                                      OpDecorate %352 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD3 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD3 Location 353 
                                                      OpDecorate %359 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD5 Location 361 
                                                      OpDecorate vs_TEXCOORD6 Location 362 
                                               %2 = OpTypeVoid 
                                               %3 = OpTypeFunction %2 
                                               %6 = OpTypeFloat 32 
                                               %7 = OpTypeVector %6 4 
                                               %8 = OpTypePointer Private %7 
                                Private f32_4* %9 = OpVariable Private 
                                              %10 = OpTypePointer Input %7 
                                 Input f32_4* %11 = OpVariable Input 
                                              %14 = OpTypeInt 32 0 
                                          u32 %15 = OpConstant 8 
                                              %16 = OpTypeArray %7 %15 
                                          u32 %17 = OpConstant 4 
                                              %18 = OpTypeArray %7 %17 
                                              %19 = OpTypeArray %7 %17 
                                              %20 = OpTypeArray %7 %17 
                                              %21 = OpTypeStruct %7 %7 %7 %7 %16 %7 %7 %7 %7 %18 %19 %20 %7 
                                              %22 = OpTypePointer Uniform %21 
Uniform struct {f32_4; f32_4; f32_4; f32_4; f32_4[8]; f32_4; f32_4; f32_4; f32_4; f32_4[4]; f32_4[4]; f32_4[4]; f32_4;}* %23 = OpVariable Uniform 
                                              %24 = OpTypeInt 32 1 
                                          i32 %25 = OpConstant 9 
                                          i32 %26 = OpConstant 1 
                                              %27 = OpTypePointer Uniform %7 
                                          i32 %31 = OpConstant 0 
                                          i32 %39 = OpConstant 2 
                               Private f32_4* %47 = OpVariable Private 
                                          i32 %49 = OpConstant 3 
                                              %53 = OpTypeVector %6 3 
                               Private f32_4* %65 = OpVariable Private 
                                          i32 %68 = OpConstant 11 
                                          u32 %86 = OpConstant 1 
                                              %87 = OpTypeArray %6 %86 
                                              %88 = OpTypeStruct %7 %6 %87 
                                              %89 = OpTypePointer Output %88 
         Output struct {f32_4; f32; f32[1];}* %90 = OpVariable Output 
                                              %98 = OpTypePointer Output %7 
                                Input f32_4* %100 = OpVariable Input 
                                             %101 = OpTypeVector %6 2 
                                         i32 %104 = OpConstant 12 
                                             %115 = OpTypePointer Output %101 
                       Output f32_2* vs_TEXCOORD0 = OpVariable Output 
                                             %119 = OpTypePointer Input %53 
                                Input f32_3* %120 = OpVariable Input 
                                         i32 %122 = OpConstant 10 
                                         u32 %127 = OpConstant 0 
                                             %128 = OpTypePointer Private %6 
                                         u32 %141 = OpConstant 2 
                                Private f32* %143 = OpVariable Private 
                                             %158 = OpTypePointer Output %53 
                       Output f32_3* vs_TEXCOORD1 = OpVariable Output 
                       Output f32_3* vs_TEXCOORD2 = OpVariable Output 
                              Private f32_4* %171 = OpVariable Private 
                              Private f32_4* %184 = OpVariable Private 
                                         f32 %215 = OpConstant 3.674022E-40 
                                       f32_4 %216 = OpConstantComposite %215 %215 %215 %215 
                                         f32 %224 = OpConstant 3.674022E-40 
                                       f32_4 %225 = OpConstantComposite %224 %224 %224 %224 
                                         f32 %233 = OpConstant 3.674022E-40 
                                       f32_4 %234 = OpConstantComposite %233 %233 %233 %233 
                                         i32 %241 = OpConstant 4 
                                         f32 %283 = OpConstant 3.674022E-40 
                                       f32_3 %284 = OpConstantComposite %283 %283 %283 
                                         f32 %286 = OpConstant 3.674022E-40 
                                       f32_3 %287 = OpConstantComposite %286 %286 %286 
                                         f32 %296 = OpConstant 3.674022E-40 
                                       f32_3 %297 = OpConstantComposite %296 %296 %296 
                                             %301 = OpTypePointer Private %53 
                              Private f32_3* %302 = OpVariable Private 
                              Private f32_4* %319 = OpVariable Private 
                              Private f32_3* %325 = OpVariable Private 
                                         i32 %326 = OpConstant 5 
                                         i32 %332 = OpConstant 6 
                                         i32 %338 = OpConstant 7 
                                         i32 %344 = OpConstant 8 
                       Output f32_3* vs_TEXCOORD3 = OpVariable Output 
                       Output f32_4* vs_TEXCOORD5 = OpVariable Output 
                       Output f32_4* vs_TEXCOORD6 = OpVariable Output 
                                             %363 = OpTypePointer Output %6 
                                          void %4 = OpFunction None %3 
                                               %5 = OpLabel 
                                        f32_4 %12 = OpLoad %11 
                                        f32_4 %13 = OpVectorShuffle %12 %12 1 1 1 1 
                               Uniform f32_4* %28 = OpAccessChain %23 %25 %26 
                                        f32_4 %29 = OpLoad %28 
                                        f32_4 %30 = OpFMul %13 %29 
                                                      OpStore %9 %30 
                               Uniform f32_4* %32 = OpAccessChain %23 %25 %31 
                                        f32_4 %33 = OpLoad %32 
                                        f32_4 %34 = OpLoad %11 
                                        f32_4 %35 = OpVectorShuffle %34 %34 0 0 0 0 
                                        f32_4 %36 = OpFMul %33 %35 
                                        f32_4 %37 = OpLoad %9 
                                        f32_4 %38 = OpFAdd %36 %37 
                                                      OpStore %9 %38 
                               Uniform f32_4* %40 = OpAccessChain %23 %25 %39 
                                        f32_4 %41 = OpLoad %40 
                                        f32_4 %42 = OpLoad %11 
                                        f32_4 %43 = OpVectorShuffle %42 %42 2 2 2 2 
                                        f32_4 %44 = OpFMul %41 %43 
                                        f32_4 %45 = OpLoad %9 
                                        f32_4 %46 = OpFAdd %44 %45 
                                                      OpStore %9 %46 
                                        f32_4 %48 = OpLoad %9 
                               Uniform f32_4* %50 = OpAccessChain %23 %25 %49 
                                        f32_4 %51 = OpLoad %50 
                                        f32_4 %52 = OpFAdd %48 %51 
                                                      OpStore %47 %52 
                               Uniform f32_4* %54 = OpAccessChain %23 %25 %49 
                                        f32_4 %55 = OpLoad %54 
                                        f32_3 %56 = OpVectorShuffle %55 %55 0 1 2 
                                        f32_4 %57 = OpLoad %11 
                                        f32_3 %58 = OpVectorShuffle %57 %57 3 3 3 
                                        f32_3 %59 = OpFMul %56 %58 
                                        f32_4 %60 = OpLoad %9 
                                        f32_3 %61 = OpVectorShuffle %60 %60 0 1 2 
                                        f32_3 %62 = OpFAdd %59 %61 
                                        f32_4 %63 = OpLoad %9 
                                        f32_4 %64 = OpVectorShuffle %63 %62 4 5 6 3 
                                                      OpStore %9 %64 
                                        f32_4 %66 = OpLoad %47 
                                        f32_4 %67 = OpVectorShuffle %66 %66 1 1 1 1 
                               Uniform f32_4* %69 = OpAccessChain %23 %68 %26 
                                        f32_4 %70 = OpLoad %69 
                                        f32_4 %71 = OpFMul %67 %70 
                                                      OpStore %65 %71 
                               Uniform f32_4* %72 = OpAccessChain %23 %68 %31 
                                        f32_4 %73 = OpLoad %72 
                                        f32_4 %74 = OpLoad %47 
                                        f32_4 %75 = OpVectorShuffle %74 %74 0 0 0 0 
                                        f32_4 %76 = OpFMul %73 %75 
                                        f32_4 %77 = OpLoad %65 
                                        f32_4 %78 = OpFAdd %76 %77 
                                                      OpStore %65 %78 
                               Uniform f32_4* %79 = OpAccessChain %23 %68 %39 
                                        f32_4 %80 = OpLoad %79 
                                        f32_4 %81 = OpLoad %47 
                                        f32_4 %82 = OpVectorShuffle %81 %81 2 2 2 2 
                                        f32_4 %83 = OpFMul %80 %82 
                                        f32_4 %84 = OpLoad %65 
                                        f32_4 %85 = OpFAdd %83 %84 
                                                      OpStore %65 %85 
                               Uniform f32_4* %91 = OpAccessChain %23 %68 %49 
                                        f32_4 %92 = OpLoad %91 
                                        f32_4 %93 = OpLoad %47 
                                        f32_4 %94 = OpVectorShuffle %93 %93 3 3 3 3 
                                        f32_4 %95 = OpFMul %92 %94 
                                        f32_4 %96 = OpLoad %65 
                                        f32_4 %97 = OpFAdd %95 %96 
                                Output f32_4* %99 = OpAccessChain %90 %31 
                                                      OpStore %99 %97 
                                       f32_4 %102 = OpLoad %100 
                                       f32_2 %103 = OpVectorShuffle %102 %102 0 1 
                              Uniform f32_4* %105 = OpAccessChain %23 %104 
                                       f32_4 %106 = OpLoad %105 
                                       f32_2 %107 = OpVectorShuffle %106 %106 0 1 
                                       f32_2 %108 = OpFMul %103 %107 
                              Uniform f32_4* %109 = OpAccessChain %23 %104 
                                       f32_4 %110 = OpLoad %109 
                                       f32_2 %111 = OpVectorShuffle %110 %110 2 3 
                                       f32_2 %112 = OpFAdd %108 %111 
                                       f32_4 %113 = OpLoad %47 
                                       f32_4 %114 = OpVectorShuffle %113 %112 4 5 2 3 
                                                      OpStore %47 %114 
                                       f32_4 %117 = OpLoad %47 
                                       f32_2 %118 = OpVectorShuffle %117 %117 0 1 
                                                      OpStore vs_TEXCOORD0 %118 
                                       f32_3 %121 = OpLoad %120 
                              Uniform f32_4* %123 = OpAccessChain %23 %122 %31 
                                       f32_4 %124 = OpLoad %123 
                                       f32_3 %125 = OpVectorShuffle %124 %124 0 1 2 
                                         f32 %126 = OpDot %121 %125 
                                Private f32* %129 = OpAccessChain %47 %127 
                                                      OpStore %129 %126 
                                       f32_3 %130 = OpLoad %120 
                              Uniform f32_4* %131 = OpAccessChain %23 %122 %26 
                                       f32_4 %132 = OpLoad %131 
                                       f32_3 %133 = OpVectorShuffle %132 %132 0 1 2 
                                         f32 %134 = OpDot %130 %133 
                                Private f32* %135 = OpAccessChain %47 %86 
                                                      OpStore %135 %134 
                                       f32_3 %136 = OpLoad %120 
                              Uniform f32_4* %137 = OpAccessChain %23 %122 %39 
                                       f32_4 %138 = OpLoad %137 
                                       f32_3 %139 = OpVectorShuffle %138 %138 0 1 2 
                                         f32 %140 = OpDot %136 %139 
                                Private f32* %142 = OpAccessChain %47 %141 
                                                      OpStore %142 %140 
                                       f32_4 %144 = OpLoad %47 
                                       f32_3 %145 = OpVectorShuffle %144 %144 0 1 2 
                                       f32_4 %146 = OpLoad %47 
                                       f32_3 %147 = OpVectorShuffle %146 %146 0 1 2 
                                         f32 %148 = OpDot %145 %147 
                                                      OpStore %143 %148 
                                         f32 %149 = OpLoad %143 
                                         f32 %150 = OpExtInst %1 32 %149 
                                                      OpStore %143 %150 
                                         f32 %151 = OpLoad %143 
                                       f32_3 %152 = OpCompositeConstruct %151 %151 %151 
                                       f32_4 %153 = OpLoad %47 
                                       f32_3 %154 = OpVectorShuffle %153 %153 0 1 2 
                                       f32_3 %155 = OpFMul %152 %154 
                                       f32_4 %156 = OpLoad %47 
                                       f32_4 %157 = OpVectorShuffle %156 %155 4 5 6 3 
                                                      OpStore %47 %157 
                                       f32_4 %160 = OpLoad %47 
                                       f32_3 %161 = OpVectorShuffle %160 %160 0 1 2 
                                                      OpStore vs_TEXCOORD1 %161 
                                       f32_4 %163 = OpLoad %9 
                                       f32_3 %164 = OpVectorShuffle %163 %163 0 1 2 
                                                      OpStore vs_TEXCOORD2 %164 
                                       f32_4 %165 = OpLoad %9 
                                       f32_4 %166 = OpVectorShuffle %165 %165 0 0 0 0 
                                       f32_4 %167 = OpFNegate %166 
                              Uniform f32_4* %168 = OpAccessChain %23 %31 
                                       f32_4 %169 = OpLoad %168 
                                       f32_4 %170 = OpFAdd %167 %169 
                                                      OpStore %65 %170 
                                       f32_4 %172 = OpLoad %9 
                                       f32_4 %173 = OpVectorShuffle %172 %172 1 1 1 1 
                                       f32_4 %174 = OpFNegate %173 
                              Uniform f32_4* %175 = OpAccessChain %23 %26 
                                       f32_4 %176 = OpLoad %175 
                                       f32_4 %177 = OpFAdd %174 %176 
                                                      OpStore %171 %177 
                                       f32_4 %178 = OpLoad %9 
                                       f32_4 %179 = OpVectorShuffle %178 %178 2 2 2 2 
                                       f32_4 %180 = OpFNegate %179 
                              Uniform f32_4* %181 = OpAccessChain %23 %39 
                                       f32_4 %182 = OpLoad %181 
                                       f32_4 %183 = OpFAdd %180 %182 
                                                      OpStore %9 %183 
                                       f32_4 %185 = OpLoad %47 
                                       f32_4 %186 = OpVectorShuffle %185 %185 1 1 1 1 
                                       f32_4 %187 = OpLoad %171 
                                       f32_4 %188 = OpFMul %186 %187 
                                                      OpStore %184 %188 
                                       f32_4 %189 = OpLoad %171 
                                       f32_4 %190 = OpLoad %171 
                                       f32_4 %191 = OpFMul %189 %190 
                                                      OpStore %171 %191 
                                       f32_4 %192 = OpLoad %65 
                                       f32_4 %193 = OpLoad %65 
                                       f32_4 %194 = OpFMul %192 %193 
                                       f32_4 %195 = OpLoad %171 
                                       f32_4 %196 = OpFAdd %194 %195 
                                                      OpStore %171 %196 
                                       f32_4 %197 = OpLoad %65 
                                       f32_4 %198 = OpLoad %47 
                                       f32_4 %199 = OpVectorShuffle %198 %198 0 0 0 0 
                                       f32_4 %200 = OpFMul %197 %199 
                                       f32_4 %201 = OpLoad %184 
                                       f32_4 %202 = OpFAdd %200 %201 
                                                      OpStore %65 %202 
                                       f32_4 %203 = OpLoad %9 
                                       f32_4 %204 = OpLoad %47 
                                       f32_4 %205 = OpVectorShuffle %204 %204 2 2 2 2 
                                       f32_4 %206 = OpFMul %203 %205 
                                       f32_4 %207 = OpLoad %65 
                                       f32_4 %208 = OpFAdd %206 %207 
                                                      OpStore %65 %208 
                                       f32_4 %209 = OpLoad %9 
                                       f32_4 %210 = OpLoad %9 
                                       f32_4 %211 = OpFMul %209 %210 
                                       f32_4 %212 = OpLoad %171 
                                       f32_4 %213 = OpFAdd %211 %212 
                                                      OpStore %9 %213 
                                       f32_4 %214 = OpLoad %9 
                                       f32_4 %217 = OpExtInst %1 40 %214 %216 
                                                      OpStore %9 %217 
                                       f32_4 %218 = OpLoad %9 
                                       f32_4 %219 = OpExtInst %1 32 %218 
                                                      OpStore %171 %219 
                                       f32_4 %220 = OpLoad %9 
                              Uniform f32_4* %221 = OpAccessChain %23 %49 
                                       f32_4 %222 = OpLoad %221 
                                       f32_4 %223 = OpFMul %220 %222 
                                       f32_4 %226 = OpFAdd %223 %225 
                                                      OpStore %9 %226 
                                       f32_4 %227 = OpLoad %9 
                                       f32_4 %228 = OpFDiv %225 %227 
                                                      OpStore %9 %228 
                                       f32_4 %229 = OpLoad %65 
                                       f32_4 %230 = OpLoad %171 
                                       f32_4 %231 = OpFMul %229 %230 
                                                      OpStore %65 %231 
                                       f32_4 %232 = OpLoad %65 
                                       f32_4 %235 = OpExtInst %1 40 %232 %234 
                                                      OpStore %65 %235 
                                       f32_4 %236 = OpLoad %9 
                                       f32_4 %237 = OpLoad %65 
                                       f32_4 %238 = OpFMul %236 %237 
                                                      OpStore %9 %238 
                                       f32_4 %239 = OpLoad %9 
                                       f32_3 %240 = OpVectorShuffle %239 %239 1 1 1 
                              Uniform f32_4* %242 = OpAccessChain %23 %241 %26 
                                       f32_4 %243 = OpLoad %242 
                                       f32_3 %244 = OpVectorShuffle %243 %243 0 1 2 
                                       f32_3 %245 = OpFMul %240 %244 
                                       f32_4 %246 = OpLoad %65 
                                       f32_4 %247 = OpVectorShuffle %246 %245 4 5 6 3 
                                                      OpStore %65 %247 
                              Uniform f32_4* %248 = OpAccessChain %23 %241 %31 
                                       f32_4 %249 = OpLoad %248 
                                       f32_3 %250 = OpVectorShuffle %249 %249 0 1 2 
                                       f32_4 %251 = OpLoad %9 
                                       f32_3 %252 = OpVectorShuffle %251 %251 0 0 0 
                                       f32_3 %253 = OpFMul %250 %252 
                                       f32_4 %254 = OpLoad %65 
                                       f32_3 %255 = OpVectorShuffle %254 %254 0 1 2 
                                       f32_3 %256 = OpFAdd %253 %255 
                                       f32_4 %257 = OpLoad %65 
                                       f32_4 %258 = OpVectorShuffle %257 %256 4 5 6 3 
                                                      OpStore %65 %258 
                              Uniform f32_4* %259 = OpAccessChain %23 %241 %39 
                                       f32_4 %260 = OpLoad %259 
                                       f32_3 %261 = OpVectorShuffle %260 %260 0 1 2 
                                       f32_4 %262 = OpLoad %9 
                                       f32_3 %263 = OpVectorShuffle %262 %262 2 2 2 
                                       f32_3 %264 = OpFMul %261 %263 
                                       f32_4 %265 = OpLoad %65 
                                       f32_3 %266 = OpVectorShuffle %265 %265 0 1 2 
                                       f32_3 %267 = OpFAdd %264 %266 
                                       f32_4 %268 = OpLoad %9 
                                       f32_4 %269 = OpVectorShuffle %268 %267 4 5 6 3 
                                                      OpStore %9 %269 
                              Uniform f32_4* %270 = OpAccessChain %23 %241 %49 
                                       f32_4 %271 = OpLoad %270 
                                       f32_3 %272 = OpVectorShuffle %271 %271 0 1 2 
                                       f32_4 %273 = OpLoad %9 
                                       f32_3 %274 = OpVectorShuffle %273 %273 3 3 3 
                                       f32_3 %275 = OpFMul %272 %274 
                                       f32_4 %276 = OpLoad %9 
                                       f32_3 %277 = OpVectorShuffle %276 %276 0 1 2 
                                       f32_3 %278 = OpFAdd %275 %277 
                                       f32_4 %279 = OpLoad %9 
                                       f32_4 %280 = OpVectorShuffle %279 %278 4 5 6 3 
                                                      OpStore %9 %280 
                                       f32_4 %281 = OpLoad %9 
                                       f32_3 %282 = OpVectorShuffle %281 %281 0 1 2 
                                       f32_3 %285 = OpFMul %282 %284 
                                       f32_3 %288 = OpFAdd %285 %287 
                                       f32_4 %289 = OpLoad %65 
                                       f32_4 %290 = OpVectorShuffle %289 %288 4 5 6 3 
                                                      OpStore %65 %290 
                                       f32_4 %291 = OpLoad %9 
                                       f32_3 %292 = OpVectorShuffle %291 %291 0 1 2 
                                       f32_4 %293 = OpLoad %65 
                                       f32_3 %294 = OpVectorShuffle %293 %293 0 1 2 
                                       f32_3 %295 = OpFMul %292 %294 
                                       f32_3 %298 = OpFAdd %295 %297 
                                       f32_4 %299 = OpLoad %65 
                                       f32_4 %300 = OpVectorShuffle %299 %298 4 5 6 3 
                                                      OpStore %65 %300 
                                Private f32* %303 = OpAccessChain %47 %86 
                                         f32 %304 = OpLoad %303 
                                Private f32* %305 = OpAccessChain %47 %86 
                                         f32 %306 = OpLoad %305 
                                         f32 %307 = OpFMul %304 %306 
                                Private f32* %308 = OpAccessChain %302 %127 
                                                      OpStore %308 %307 
                                Private f32* %309 = OpAccessChain %47 %127 
                                         f32 %310 = OpLoad %309 
                                Private f32* %311 = OpAccessChain %47 %127 
                                         f32 %312 = OpLoad %311 
                                         f32 %313 = OpFMul %310 %312 
                                Private f32* %314 = OpAccessChain %302 %127 
                                         f32 %315 = OpLoad %314 
                                         f32 %316 = OpFNegate %315 
                                         f32 %317 = OpFAdd %313 %316 
                                Private f32* %318 = OpAccessChain %302 %127 
                                                      OpStore %318 %317 
                                       f32_4 %320 = OpLoad %47 
                                       f32_4 %321 = OpVectorShuffle %320 %320 1 2 2 0 
                                       f32_4 %322 = OpLoad %47 
                                       f32_4 %323 = OpVectorShuffle %322 %322 0 1 2 2 
                                       f32_4 %324 = OpFMul %321 %323 
                                                      OpStore %319 %324 
                              Uniform f32_4* %327 = OpAccessChain %23 %326 
                                       f32_4 %328 = OpLoad %327 
                                       f32_4 %329 = OpLoad %319 
                                         f32 %330 = OpDot %328 %329 
                                Private f32* %331 = OpAccessChain %325 %127 
                                                      OpStore %331 %330 
                              Uniform f32_4* %333 = OpAccessChain %23 %332 
                                       f32_4 %334 = OpLoad %333 
                                       f32_4 %335 = OpLoad %319 
                                         f32 %336 = OpDot %334 %335 
                                Private f32* %337 = OpAccessChain %325 %86 
                                                      OpStore %337 %336 
                              Uniform f32_4* %339 = OpAccessChain %23 %338 
                                       f32_4 %340 = OpLoad %339 
                                       f32_4 %341 = OpLoad %319 
                                         f32 %342 = OpDot %340 %341 
                                Private f32* %343 = OpAccessChain %325 %141 
                                                      OpStore %343 %342 
                              Uniform f32_4* %345 = OpAccessChain %23 %344 
                                       f32_4 %346 = OpLoad %345 
                                       f32_3 %347 = OpVectorShuffle %346 %346 0 1 2 
                                       f32_3 %348 = OpLoad %302 
                                       f32_3 %349 = OpVectorShuffle %348 %348 0 0 0 
                                       f32_3 %350 = OpFMul %347 %349 
                                       f32_3 %351 = OpLoad %325 
                                       f32_3 %352 = OpFAdd %350 %351 
                                                      OpStore %302 %352 
                                       f32_4 %354 = OpLoad %9 
                                       f32_3 %355 = OpVectorShuffle %354 %354 0 1 2 
                                       f32_4 %356 = OpLoad %65 
                                       f32_3 %357 = OpVectorShuffle %356 %356 0 1 2 
                                       f32_3 %358 = OpFMul %355 %357 
                                       f32_3 %359 = OpLoad %302 
                                       f32_3 %360 = OpFAdd %358 %359 
                                                      OpStore vs_TEXCOORD3 %360 
                                                      OpStore vs_TEXCOORD5 %234 
                                                      OpStore vs_TEXCOORD6 %234 
                                 Output f32* %364 = OpAccessChain %90 %31 %86 
                                         f32 %365 = OpLoad %364 
                                         f32 %366 = OpFNegate %365 
                                 Output f32* %367 = OpAccessChain %90 %31 %86 
                                                      OpStore %367 %366 
                                                      OpReturn
                                                      OpFunctionEnd
; SPIR-V
; Version: 1.0
; Generator: Khronos Glslang Reference Front End; 6
; Bound: 377
; Schema: 0
                                                      OpCapability Shader 
                                               %1 = OpExtInstImport "GLSL.std.450" 
                                                      OpMemoryModel Logical GLSL450 
                                                      OpEntryPoint Fragment %4 "main" %11 %60 %293 %341 %366 
                                                      OpExecutionMode %4 OriginUpperLeft 
                                                      OpName vs_TEXCOORD2 "vs_TEXCOORD2" 
                                                      OpName vs_TEXCOORD1 "vs_TEXCOORD1" 
                                                      OpName vs_TEXCOORD0 "vs_TEXCOORD0" 
                                                      OpName vs_TEXCOORD3 "vs_TEXCOORD3" 
                                                      OpDecorate vs_TEXCOORD2 Location 11 
                                                      OpMemberDecorate %15 0 Offset 15 
                                                      OpMemberDecorate %15 1 RelaxedPrecision 
                                                      OpMemberDecorate %15 1 Offset 15 
                                                      OpMemberDecorate %15 2 RelaxedPrecision 
                                                      OpMemberDecorate %15 2 Offset 15 
                                                      OpMemberDecorate %15 3 RelaxedPrecision 
                                                      OpMemberDecorate %15 3 Offset 15 
                                                      OpMemberDecorate %15 4 RelaxedPrecision 
                                                      OpMemberDecorate %15 4 Offset 15 
                                                      OpMemberDecorate %15 5 RelaxedPrecision 
                                                      OpMemberDecorate %15 5 Offset 15 
                                                      OpMemberDecorate %15 6 RelaxedPrecision 
                                                      OpMemberDecorate %15 6 Offset 15 
                                                      OpMemberDecorate %15 7 RelaxedPrecision 
                                                      OpMemberDecorate %15 7 Offset 15 
                                                      OpMemberDecorate %15 8 RelaxedPrecision 
                                                      OpMemberDecorate %15 8 Offset 15 
                                                      OpMemberDecorate %15 9 RelaxedPrecision 
                                                      OpMemberDecorate %15 9 Offset 15 
                                                      OpMemberDecorate %15 10 RelaxedPrecision 
                                                      OpMemberDecorate %15 10 Offset 15 
                                                      OpMemberDecorate %15 11 RelaxedPrecision 
                                                      OpMemberDecorate %15 11 Offset 15 
                                                      OpMemberDecorate %15 12 RelaxedPrecision 
                                                      OpMemberDecorate %15 12 Offset 15 
                                                      OpMemberDecorate %15 13 RelaxedPrecision 
                                                      OpMemberDecorate %15 13 Offset 15 
                                                      OpDecorate %15 Block 
                                                      OpDecorate %17 DescriptorSet 17 
                                                      OpDecorate %17 Binding 17 
                                                      OpDecorate %32 RelaxedPrecision 
                                                      OpDecorate %40 RelaxedPrecision 
                                                      OpDecorate %41 RelaxedPrecision 
                                                      OpDecorate %45 RelaxedPrecision 
                                                      OpDecorate %46 RelaxedPrecision 
                                                      OpDecorate %47 RelaxedPrecision 
                                                      OpDecorate %48 RelaxedPrecision 
                                                      OpDecorate %49 RelaxedPrecision 
                                                      OpDecorate %50 RelaxedPrecision 
                                                      OpDecorate %51 RelaxedPrecision 
                                                      OpDecorate %52 RelaxedPrecision 
                                                      OpDecorate %53 RelaxedPrecision 
                                                      OpDecorate %54 RelaxedPrecision 
                                                      OpDecorate %55 RelaxedPrecision 
                                                      OpDecorate %56 RelaxedPrecision 
                                                      OpDecorate %57 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD1 Location 60 
                                                      OpDecorate %64 RelaxedPrecision 
                                                      OpDecorate %65 RelaxedPrecision 
                                                      OpDecorate %66 RelaxedPrecision 
                                                      OpDecorate %67 RelaxedPrecision 
                                                      OpDecorate %71 RelaxedPrecision 
                                                      OpDecorate %72 RelaxedPrecision 
                                                      OpDecorate %73 RelaxedPrecision 
                                                      OpDecorate %74 RelaxedPrecision 
                                                      OpDecorate %78 RelaxedPrecision 
                                                      OpDecorate %80 RelaxedPrecision 
                                                      OpDecorate %81 RelaxedPrecision 
                                                      OpDecorate %82 RelaxedPrecision 
                                                      OpDecorate %86 RelaxedPrecision 
                                                      OpDecorate %87 RelaxedPrecision 
                                                      OpDecorate %90 RelaxedPrecision 
                                                      OpDecorate %94 RelaxedPrecision 
                                                      OpDecorate %95 RelaxedPrecision 
                                                      OpDecorate %100 RelaxedPrecision 
                                                      OpDecorate %102 RelaxedPrecision 
                                                      OpDecorate %107 RelaxedPrecision 
                                                      OpDecorate %116 RelaxedPrecision 
                                                      OpDecorate %117 RelaxedPrecision 
                                                      OpDecorate %119 RelaxedPrecision 
                                                      OpDecorate %120 RelaxedPrecision 
                                                      OpDecorate %127 RelaxedPrecision 
                                                      OpDecorate %128 RelaxedPrecision 
                                                      OpDecorate %131 RelaxedPrecision 
                                                      OpDecorate %133 RelaxedPrecision 
                                                      OpDecorate %134 RelaxedPrecision 
                                                      OpDecorate %135 RelaxedPrecision 
                                                      OpDecorate %138 RelaxedPrecision 
                                                      OpDecorate %139 RelaxedPrecision 
                                                      OpDecorate %140 RelaxedPrecision 
                                                      OpDecorate %141 RelaxedPrecision 
                                                      OpDecorate %173 RelaxedPrecision 
                                                      OpDecorate %174 RelaxedPrecision 
                                                      OpDecorate %177 RelaxedPrecision 
                                                      OpDecorate %178 RelaxedPrecision 
                                                      OpDecorate %179 RelaxedPrecision 
                                                      OpDecorate %184 RelaxedPrecision 
                                                      OpDecorate %185 RelaxedPrecision 
                                                      OpDecorate %189 RelaxedPrecision 
                                                      OpDecorate %190 RelaxedPrecision 
                                                      OpDecorate %191 RelaxedPrecision 
                                                      OpDecorate %194 RelaxedPrecision 
                                                      OpDecorate %195 RelaxedPrecision 
                                                      OpDecorate %197 RelaxedPrecision 
                                                      OpDecorate %199 RelaxedPrecision 
                                                      OpDecorate %200 RelaxedPrecision 
                                                      OpDecorate %202 RelaxedPrecision 
                                                      OpDecorate %203 RelaxedPrecision 
                                                      OpDecorate %206 RelaxedPrecision 
                                                      OpDecorate %207 RelaxedPrecision 
                                                      OpDecorate %209 RelaxedPrecision 
                                                      OpDecorate %210 RelaxedPrecision 
                                                      OpDecorate %212 RelaxedPrecision 
                                                      OpDecorate %213 RelaxedPrecision 
                                                      OpDecorate %214 RelaxedPrecision 
                                                      OpDecorate %215 RelaxedPrecision 
                                                      OpDecorate %218 RelaxedPrecision 
                                                      OpDecorate %219 RelaxedPrecision 
                                                      OpDecorate %222 RelaxedPrecision 
                                                      OpDecorate %224 RelaxedPrecision 
                                                      OpDecorate %225 RelaxedPrecision 
                                                      OpDecorate %228 RelaxedPrecision 
                                                      OpDecorate %229 RelaxedPrecision 
                                                      OpDecorate %232 RelaxedPrecision 
                                                      OpDecorate %233 RelaxedPrecision 
                                                      OpDecorate %234 RelaxedPrecision 
                                                      OpDecorate %237 RelaxedPrecision 
                                                      OpDecorate %239 RelaxedPrecision 
                                                      OpDecorate %240 RelaxedPrecision 
                                                      OpDecorate %243 RelaxedPrecision 
                                                      OpDecorate %245 RelaxedPrecision 
                                                      OpDecorate %246 RelaxedPrecision 
                                                      OpDecorate %250 RelaxedPrecision 
                                                      OpDecorate %251 RelaxedPrecision 
                                                      OpDecorate %252 RelaxedPrecision 
                                                      OpDecorate %255 RelaxedPrecision 
                                                      OpDecorate %256 RelaxedPrecision 
                                                      OpDecorate %257 RelaxedPrecision 
                                                      OpDecorate %259 RelaxedPrecision 
                                                      OpDecorate %260 RelaxedPrecision 
                                                      OpDecorate %261 RelaxedPrecision 
                                                      OpDecorate %262 RelaxedPrecision 
                                                      OpDecorate %264 RelaxedPrecision 
                                                      OpDecorate %265 RelaxedPrecision 
                                                      OpDecorate %266 RelaxedPrecision 
                                                      OpDecorate %267 RelaxedPrecision 
                                                      OpDecorate %268 RelaxedPrecision 
                                                      OpDecorate %270 RelaxedPrecision 
                                                      OpDecorate %271 RelaxedPrecision 
                                                      OpDecorate %272 RelaxedPrecision 
                                                      OpDecorate %273 RelaxedPrecision 
                                                      OpDecorate %274 RelaxedPrecision 
                                                      OpDecorate %275 RelaxedPrecision 
                                                      OpDecorate %276 RelaxedPrecision 
                                                      OpDecorate %277 RelaxedPrecision 
                                                      OpDecorate %278 RelaxedPrecision 
                                                      OpDecorate %281 RelaxedPrecision 
                                                      OpDecorate %284 RelaxedPrecision 
                                                      OpDecorate %284 DescriptorSet 284 
                                                      OpDecorate %284 Binding 284 
                                                      OpDecorate %285 RelaxedPrecision 
                                                      OpDecorate %288 RelaxedPrecision 
                                                      OpDecorate %288 DescriptorSet 288 
                                                      OpDecorate %288 Binding 288 
                                                      OpDecorate %289 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD0 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD0 Location 293 
                                                      OpDecorate %294 RelaxedPrecision 
                                                      OpDecorate %295 RelaxedPrecision 
                                                      OpDecorate %296 RelaxedPrecision 
                                                      OpDecorate %297 RelaxedPrecision 
                                                      OpDecorate %300 RelaxedPrecision 
                                                      OpDecorate %301 RelaxedPrecision 
                                                      OpDecorate %302 RelaxedPrecision 
                                                      OpDecorate %303 RelaxedPrecision 
                                                      OpDecorate %304 RelaxedPrecision 
                                                      OpDecorate %306 RelaxedPrecision 
                                                      OpDecorate %307 RelaxedPrecision 
                                                      OpDecorate %308 RelaxedPrecision 
                                                      OpDecorate %309 RelaxedPrecision 
                                                      OpDecorate %310 RelaxedPrecision 
                                                      OpDecorate %311 RelaxedPrecision 
                                                      OpDecorate %312 RelaxedPrecision 
                                                      OpDecorate %323 RelaxedPrecision 
                                                      OpDecorate %329 RelaxedPrecision 
                                                      OpDecorate %335 RelaxedPrecision 
                                                      OpDecorate %340 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD3 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD3 Location 341 
                                                      OpDecorate %342 RelaxedPrecision 
                                                      OpDecorate %343 RelaxedPrecision 
                                                      OpDecorate %344 RelaxedPrecision 
                                                      OpDecorate %346 RelaxedPrecision 
                                                      OpDecorate %348 RelaxedPrecision 
                                                      OpDecorate %349 RelaxedPrecision 
                                                      OpDecorate %366 RelaxedPrecision 
                                                      OpDecorate %366 Location 366 
                                                      OpDecorate %367 RelaxedPrecision 
                                               %2 = OpTypeVoid 
                                               %3 = OpTypeFunction %2 
                                               %6 = OpTypeFloat 32 
                                               %7 = OpTypeVector %6 3 
                                               %8 = OpTypePointer Private %7 
                                Private f32_3* %9 = OpVariable Private 
                                              %10 = OpTypePointer Input %7 
                        Input f32_3* vs_TEXCOORD2 = OpVariable Input 
                                              %14 = OpTypeVector %6 4 
                                              %15 = OpTypeStruct %7 %14 %14 %14 %14 %14 %14 %14 %6 %14 %14 %6 %6 %6 
                                              %16 = OpTypePointer Uniform %15 
Uniform struct {f32_3; f32_4; f32_4; f32_4; f32_4; f32_4; f32_4; f32_4; f32; f32_4; f32_4; f32; f32; f32;}* %17 = OpVariable Uniform 
                                              %18 = OpTypeInt 32 1 
                                          i32 %19 = OpConstant 0 
                                              %20 = OpTypePointer Uniform %7 
                                              %24 = OpTypePointer Private %6 
                                 Private f32* %25 = OpVariable Private 
                                              %31 = OpTypePointer Private %14 
                               Private f32_4* %32 = OpVariable Private 
                                          i32 %37 = OpConstant 1 
                                              %38 = OpTypePointer Uniform %14 
                                 Private f32* %45 = OpVariable Private 
                        Input f32_3* vs_TEXCOORD1 = OpVariable Input 
                               Private f32_3* %66 = OpVariable Private 
                                              %75 = OpTypeInt 32 0 
                                          u32 %76 = OpConstant 0 
                                          u32 %83 = OpConstant 1 
                                              %85 = OpTypeVector %6 2 
                                          f32 %88 = OpConstant 3.674022E-40 
                                        f32_2 %89 = OpConstantComposite %88 %88 
                                          i32 %97 = OpConstant 8 
                                              %98 = OpTypePointer Uniform %6 
                                         f32 %101 = OpConstant 3.674022E-40 
                                         i32 %114 = OpConstant 13 
                                         f32 %118 = OpConstant 3.674022E-40 
                                         f32 %124 = OpConstant 3.674022E-40 
                                Private f32* %131 = OpVariable Private 
                                Private f32* %136 = OpVariable Private 
                                         f32 %142 = OpConstant 3.674022E-40 
                                         f32 %156 = OpConstant 3.674022E-40 
                                         f32 %158 = OpConstant 3.674022E-40 
                                         i32 %171 = OpConstant 5 
                                         i32 %175 = OpConstant 6 
                                         i32 %187 = OpConstant 12 
                                         i32 %192 = OpConstant 11 
                              Private f32_3* %197 = OpVariable Private 
                                         i32 %248 = OpConstant 9 
                                         i32 %253 = OpConstant 10 
                              Private f32_3* %281 = OpVariable Private 
                                             %282 = OpTypeImage %6 Dim2D 0 0 0 1 Unknown 
                                             %283 = OpTypePointer UniformConstant %282 
        UniformConstant read_only Texture2D* %284 = OpVariable UniformConstant 
                                             %286 = OpTypeSampler 
                                             %287 = OpTypePointer UniformConstant %286 
                    UniformConstant sampler* %288 = OpVariable UniformConstant 
                                             %290 = OpTypeSampledImage %282 
                                             %292 = OpTypePointer Input %85 
                        Input f32_2* vs_TEXCOORD0 = OpVariable Input 
                                         i32 %298 = OpConstant 7 
                              Private f32_3* %303 = OpVariable Private 
                              Private f32_4* %315 = OpVariable Private 
                                         u32 %319 = OpConstant 3 
                                         i32 %321 = OpConstant 2 
                                         i32 %327 = OpConstant 3 
                                         i32 %333 = OpConstant 4 
                                         u32 %338 = OpConstant 2 
                        Input f32_3* vs_TEXCOORD3 = OpVariable Input 
                                       f32_3 %345 = OpConstantComposite %88 %88 %88 
                              Private f32_3* %347 = OpVariable Private 
                                         f32 %351 = OpConstant 3.674022E-40 
                                       f32_3 %352 = OpConstantComposite %351 %351 %351 
                                         f32 %357 = OpConstant 3.674022E-40 
                                       f32_3 %358 = OpConstantComposite %357 %357 %357 
                                         f32 %360 = OpConstant 3.674022E-40 
                                       f32_3 %361 = OpConstantComposite %360 %360 %360 
                                             %365 = OpTypePointer Output %14 
                               Output f32_4* %366 = OpVariable Output 
                                             %374 = OpTypePointer Output %6 
                                          void %4 = OpFunction None %3 
                                               %5 = OpLabel 
                                        f32_3 %12 = OpLoad vs_TEXCOORD2 
                                        f32_3 %13 = OpFNegate %12 
                               Uniform f32_3* %21 = OpAccessChain %17 %19 
                                        f32_3 %22 = OpLoad %21 
                                        f32_3 %23 = OpFAdd %13 %22 
                                                      OpStore %9 %23 
                                        f32_3 %26 = OpLoad %9 
                                        f32_3 %27 = OpLoad %9 
                                          f32 %28 = OpDot %26 %27 
                                                      OpStore %25 %28 
                                          f32 %29 = OpLoad %25 
                                          f32 %30 = OpExtInst %1 32 %29 
                                                      OpStore %25 %30 
                                        f32_3 %33 = OpLoad %9 
                                          f32 %34 = OpLoad %25 
                                        f32_3 %35 = OpCompositeConstruct %34 %34 %34 
                                        f32_3 %36 = OpFMul %33 %35 
                               Uniform f32_4* %39 = OpAccessChain %17 %37 
                                        f32_4 %40 = OpLoad %39 
                                        f32_3 %41 = OpVectorShuffle %40 %40 0 1 2 
                                        f32_3 %42 = OpFAdd %36 %41 
                                        f32_4 %43 = OpLoad %32 
                                        f32_4 %44 = OpVectorShuffle %43 %42 4 5 6 3 
                                                      OpStore %32 %44 
                                        f32_4 %46 = OpLoad %32 
                                        f32_3 %47 = OpVectorShuffle %46 %46 0 1 2 
                                        f32_4 %48 = OpLoad %32 
                                        f32_3 %49 = OpVectorShuffle %48 %48 0 1 2 
                                          f32 %50 = OpDot %47 %49 
                                                      OpStore %45 %50 
                                          f32 %51 = OpLoad %45 
                                          f32 %52 = OpExtInst %1 32 %51 
                                                      OpStore %45 %52 
                                          f32 %53 = OpLoad %45 
                                        f32_3 %54 = OpCompositeConstruct %53 %53 %53 
                                        f32_4 %55 = OpLoad %32 
                                        f32_3 %56 = OpVectorShuffle %55 %55 0 1 2 
                                        f32_3 %57 = OpFMul %54 %56 
                                        f32_4 %58 = OpLoad %32 
                                        f32_4 %59 = OpVectorShuffle %58 %57 4 5 6 3 
                                                      OpStore %32 %59 
                                        f32_3 %61 = OpLoad vs_TEXCOORD1 
                                        f32_3 %62 = OpLoad vs_TEXCOORD1 
                                          f32 %63 = OpDot %61 %62 
                                                      OpStore %45 %63 
                                          f32 %64 = OpLoad %45 
                                          f32 %65 = OpExtInst %1 32 %64 
                                                      OpStore %45 %65 
                                          f32 %67 = OpLoad %45 
                                        f32_3 %68 = OpCompositeConstruct %67 %67 %67 
                                        f32_3 %69 = OpLoad vs_TEXCOORD1 
                                        f32_3 %70 = OpFMul %68 %69 
                                                      OpStore %66 %70 
                                        f32_3 %71 = OpLoad %66 
                                        f32_4 %72 = OpLoad %32 
                                        f32_3 %73 = OpVectorShuffle %72 %72 0 1 2 
                                          f32 %74 = OpDot %71 %73 
                                 Private f32* %77 = OpAccessChain %32 %76 
                                                      OpStore %77 %74 
                                        f32_3 %78 = OpLoad %66 
                               Uniform f32_4* %79 = OpAccessChain %17 %37 
                                        f32_4 %80 = OpLoad %79 
                                        f32_3 %81 = OpVectorShuffle %80 %80 0 1 2 
                                          f32 %82 = OpDot %78 %81 
                                 Private f32* %84 = OpAccessChain %32 %83 
                                                      OpStore %84 %82 
                                        f32_4 %86 = OpLoad %32 
                                        f32_2 %87 = OpVectorShuffle %86 %86 0 1 
                                        f32_2 %90 = OpExtInst %1 40 %87 %89 
                                        f32_4 %91 = OpLoad %32 
                                        f32_4 %92 = OpVectorShuffle %91 %90 4 5 2 3 
                                                      OpStore %32 %92 
                                 Private f32* %93 = OpAccessChain %32 %76 
                                          f32 %94 = OpLoad %93 
                                          f32 %95 = OpExtInst %1 30 %94 
                                 Private f32* %96 = OpAccessChain %9 %76 
                                                      OpStore %96 %95 
                                 Uniform f32* %99 = OpAccessChain %17 %97 
                                         f32 %100 = OpLoad %99 
                                         f32 %102 = OpFMul %100 %101 
                                Private f32* %103 = OpAccessChain %32 %76 
                                                      OpStore %103 %102 
                                Private f32* %104 = OpAccessChain %9 %76 
                                         f32 %105 = OpLoad %104 
                                Private f32* %106 = OpAccessChain %32 %76 
                                         f32 %107 = OpLoad %106 
                                         f32 %108 = OpFMul %105 %107 
                                Private f32* %109 = OpAccessChain %9 %76 
                                                      OpStore %109 %108 
                                Private f32* %110 = OpAccessChain %9 %76 
                                         f32 %111 = OpLoad %110 
                                         f32 %112 = OpExtInst %1 29 %111 
                                Private f32* %113 = OpAccessChain %9 %76 
                                                      OpStore %113 %112 
                                Uniform f32* %115 = OpAccessChain %17 %114 
                                         f32 %116 = OpLoad %115 
                                         f32 %117 = OpFNegate %116 
                                         f32 %119 = OpFMul %117 %118 
                                         f32 %120 = OpFAdd %119 %118 
                                Private f32* %121 = OpAccessChain %32 %76 
                                                      OpStore %121 %120 
                                Private f32* %122 = OpAccessChain %9 %76 
                                         f32 %123 = OpLoad %122 
                                         f32 %125 = OpFMul %123 %124 
                                Private f32* %126 = OpAccessChain %32 %76 
                                         f32 %127 = OpLoad %126 
                                         f32 %128 = OpFNegate %127 
                                         f32 %129 = OpFAdd %125 %128 
                                Private f32* %130 = OpAccessChain %9 %76 
                                                      OpStore %130 %129 
                                Uniform f32* %132 = OpAccessChain %17 %114 
                                         f32 %133 = OpLoad %132 
                                         f32 %134 = OpFMul %133 %118 
                                         f32 %135 = OpFAdd %134 %118 
                                                      OpStore %131 %135 
                                Private f32* %137 = OpAccessChain %32 %76 
                                         f32 %138 = OpLoad %137 
                                         f32 %139 = OpFNegate %138 
                                         f32 %140 = OpLoad %131 
                                         f32 %141 = OpFAdd %139 %140 
                                                      OpStore %136 %141 
                                         f32 %143 = OpLoad %136 
                                         f32 %144 = OpFDiv %142 %143 
                                                      OpStore %136 %144 
                                         f32 %145 = OpLoad %136 
                                Private f32* %146 = OpAccessChain %9 %76 
                                         f32 %147 = OpLoad %146 
                                         f32 %148 = OpFMul %145 %147 
                                Private f32* %149 = OpAccessChain %9 %76 
                                                      OpStore %149 %148 
                                Private f32* %150 = OpAccessChain %9 %76 
                                         f32 %151 = OpLoad %150 
                                         f32 %152 = OpExtInst %1 43 %151 %88 %142 
                                Private f32* %153 = OpAccessChain %9 %76 
                                                      OpStore %153 %152 
                                Private f32* %154 = OpAccessChain %9 %76 
                                         f32 %155 = OpLoad %154 
                                         f32 %157 = OpFMul %155 %156 
                                         f32 %159 = OpFAdd %157 %158 
                                                      OpStore %136 %159 
                                Private f32* %160 = OpAccessChain %9 %76 
                                         f32 %161 = OpLoad %160 
                                Private f32* %162 = OpAccessChain %9 %76 
                                         f32 %163 = OpLoad %162 
                                         f32 %164 = OpFMul %161 %163 
                                Private f32* %165 = OpAccessChain %9 %76 
                                                      OpStore %165 %164 
                                Private f32* %166 = OpAccessChain %9 %76 
                                         f32 %167 = OpLoad %166 
                                         f32 %168 = OpLoad %136 
                                         f32 %169 = OpFMul %167 %168 
                                Private f32* %170 = OpAccessChain %9 %76 
                                                      OpStore %170 %169 
                              Uniform f32_4* %172 = OpAccessChain %17 %171 
                                       f32_4 %173 = OpLoad %172 
                                       f32_3 %174 = OpVectorShuffle %173 %173 0 1 2 
                              Uniform f32_4* %176 = OpAccessChain %17 %175 
                                       f32_4 %177 = OpLoad %176 
                                       f32_3 %178 = OpVectorShuffle %177 %177 0 1 2 
                                       f32_3 %179 = OpFMul %174 %178 
                                       f32_4 %180 = OpLoad %32 
                                       f32_4 %181 = OpVectorShuffle %180 %179 4 1 5 6 
                                                      OpStore %32 %181 
                                       f32_3 %182 = OpLoad %9 
                                       f32_3 %183 = OpVectorShuffle %182 %182 0 0 0 
                                       f32_4 %184 = OpLoad %32 
                                       f32_3 %185 = OpVectorShuffle %184 %184 0 2 3 
                                       f32_3 %186 = OpFMul %183 %185 
                                                      OpStore %9 %186 
                                Uniform f32* %188 = OpAccessChain %17 %187 
                                         f32 %189 = OpLoad %188 
                                         f32 %190 = OpFNegate %189 
                                         f32 %191 = OpFMul %190 %118 
                                Uniform f32* %193 = OpAccessChain %17 %192 
                                         f32 %194 = OpLoad %193 
                                         f32 %195 = OpFAdd %191 %194 
                                Private f32* %196 = OpAccessChain %32 %76 
                                                      OpStore %196 %195 
                                Private f32* %198 = OpAccessChain %32 %76 
                                         f32 %199 = OpLoad %198 
                                         f32 %200 = OpFNegate %199 
                                Private f32* %201 = OpAccessChain %32 %83 
                                         f32 %202 = OpLoad %201 
                                         f32 %203 = OpFAdd %200 %202 
                                Private f32* %204 = OpAccessChain %197 %76 
                                                      OpStore %204 %203 
                                Uniform f32* %205 = OpAccessChain %17 %187 
                                         f32 %206 = OpLoad %205 
                                         f32 %207 = OpFMul %206 %118 
                                Uniform f32* %208 = OpAccessChain %17 %192 
                                         f32 %209 = OpLoad %208 
                                         f32 %210 = OpFAdd %207 %209 
                                                      OpStore %131 %210 
                                Private f32* %211 = OpAccessChain %32 %76 
                                         f32 %212 = OpLoad %211 
                                         f32 %213 = OpFNegate %212 
                                         f32 %214 = OpLoad %131 
                                         f32 %215 = OpFAdd %213 %214 
                                Private f32* %216 = OpAccessChain %32 %76 
                                                      OpStore %216 %215 
                                Private f32* %217 = OpAccessChain %32 %76 
                                         f32 %218 = OpLoad %217 
                                         f32 %219 = OpFDiv %142 %218 
                                Private f32* %220 = OpAccessChain %32 %76 
                                                      OpStore %220 %219 
                                Private f32* %221 = OpAccessChain %32 %76 
                                         f32 %222 = OpLoad %221 
                                Private f32* %223 = OpAccessChain %197 %76 
                                         f32 %224 = OpLoad %223 
                                         f32 %225 = OpFMul %222 %224 
                                Private f32* %226 = OpAccessChain %32 %76 
                                                      OpStore %226 %225 
                                Private f32* %227 = OpAccessChain %32 %76 
                                         f32 %228 = OpLoad %227 
                                         f32 %229 = OpExtInst %1 43 %228 %88 %142 
                                Private f32* %230 = OpAccessChain %32 %76 
                                                      OpStore %230 %229 
                                Private f32* %231 = OpAccessChain %32 %76 
                                         f32 %232 = OpLoad %231 
                                         f32 %233 = OpFMul %232 %156 
                                         f32 %234 = OpFAdd %233 %158 
                                Private f32* %235 = OpAccessChain %197 %76 
                                                      OpStore %235 %234 
                                Private f32* %236 = OpAccessChain %32 %76 
                                         f32 %237 = OpLoad %236 
                                Private f32* %238 = OpAccessChain %32 %76 
                                         f32 %239 = OpLoad %238 
                                         f32 %240 = OpFMul %237 %239 
                                Private f32* %241 = OpAccessChain %32 %76 
                                                      OpStore %241 %240 
                                Private f32* %242 = OpAccessChain %32 %76 
                                         f32 %243 = OpLoad %242 
                                Private f32* %244 = OpAccessChain %197 %76 
                                         f32 %245 = OpLoad %244 
                                         f32 %246 = OpFMul %243 %245 
                                Private f32* %247 = OpAccessChain %32 %76 
                                                      OpStore %247 %246 
                              Uniform f32_4* %249 = OpAccessChain %17 %248 
                                       f32_4 %250 = OpLoad %249 
                                       f32_3 %251 = OpVectorShuffle %250 %250 0 1 2 
                                       f32_3 %252 = OpFNegate %251 
                              Uniform f32_4* %254 = OpAccessChain %17 %253 
                                       f32_4 %255 = OpLoad %254 
                                       f32_3 %256 = OpVectorShuffle %255 %255 0 1 2 
                                       f32_3 %257 = OpFAdd %252 %256 
                                                      OpStore %197 %257 
                              Uniform f32_4* %258 = OpAccessChain %17 %253 
                                       f32_4 %259 = OpLoad %258 
                                       f32_3 %260 = OpVectorShuffle %259 %259 3 3 3 
                                       f32_3 %261 = OpLoad %197 
                                       f32_3 %262 = OpFMul %260 %261 
                              Uniform f32_4* %263 = OpAccessChain %17 %248 
                                       f32_4 %264 = OpLoad %263 
                                       f32_3 %265 = OpVectorShuffle %264 %264 0 1 2 
                                       f32_3 %266 = OpFAdd %262 %265 
                                                      OpStore %197 %266 
                                       f32_3 %267 = OpLoad %197 
                                       f32_3 %268 = OpFNegate %267 
                              Uniform f32_4* %269 = OpAccessChain %17 %248 
                                       f32_4 %270 = OpLoad %269 
                                       f32_3 %271 = OpVectorShuffle %270 %270 0 1 2 
                                       f32_3 %272 = OpFAdd %268 %271 
                                                      OpStore %66 %272 
                                       f32_4 %273 = OpLoad %32 
                                       f32_3 %274 = OpVectorShuffle %273 %273 0 0 0 
                                       f32_3 %275 = OpLoad %66 
                                       f32_3 %276 = OpFMul %274 %275 
                                       f32_3 %277 = OpLoad %197 
                                       f32_3 %278 = OpFAdd %276 %277 
                                       f32_4 %279 = OpLoad %32 
                                       f32_4 %280 = OpVectorShuffle %279 %278 4 5 6 3 
                                                      OpStore %32 %280 
                         read_only Texture2D %285 = OpLoad %284 
                                     sampler %289 = OpLoad %288 
                  read_only Texture2DSampled %291 = OpSampledImage %285 %289 
                                       f32_2 %294 = OpLoad vs_TEXCOORD0 
                                       f32_4 %295 = OpImageSampleImplicitLod %291 %294 
                                       f32_3 %296 = OpVectorShuffle %295 %295 0 1 2 
                                                      OpStore %281 %296 
                                       f32_3 %297 = OpLoad %281 
                              Uniform f32_4* %299 = OpAccessChain %17 %298 
                                       f32_4 %300 = OpLoad %299 
                                       f32_3 %301 = OpVectorShuffle %300 %300 0 1 2 
                                       f32_3 %302 = OpFMul %297 %301 
                                                      OpStore %66 %302 
                                       f32_3 %304 = OpLoad %66 
                              Uniform f32_4* %305 = OpAccessChain %17 %171 
                                       f32_4 %306 = OpLoad %305 
                                       f32_3 %307 = OpVectorShuffle %306 %306 0 1 2 
                                       f32_3 %308 = OpFMul %304 %307 
                                                      OpStore %303 %308 
                                       f32_3 %309 = OpLoad %303 
                                       f32_4 %310 = OpLoad %32 
                                       f32_3 %311 = OpVectorShuffle %310 %310 0 1 2 
                                       f32_3 %312 = OpFMul %309 %311 
                                       f32_3 %313 = OpLoad %9 
                                       f32_3 %314 = OpFAdd %312 %313 
                                                      OpStore %9 %314 
                                       f32_3 %316 = OpLoad vs_TEXCOORD1 
                                       f32_4 %317 = OpLoad %315 
                                       f32_4 %318 = OpVectorShuffle %317 %316 4 5 6 3 
                                                      OpStore %315 %318 
                                Private f32* %320 = OpAccessChain %315 %319 
                                                      OpStore %320 %142 
                              Uniform f32_4* %322 = OpAccessChain %17 %321 
                                       f32_4 %323 = OpLoad %322 
                                       f32_4 %324 = OpLoad %315 
                                         f32 %325 = OpDot %323 %324 
                                Private f32* %326 = OpAccessChain %303 %76 
                                                      OpStore %326 %325 
                              Uniform f32_4* %328 = OpAccessChain %17 %327 
                                       f32_4 %329 = OpLoad %328 
                                       f32_4 %330 = OpLoad %315 
                                         f32 %331 = OpDot %329 %330 
                                Private f32* %332 = OpAccessChain %303 %83 
                                                      OpStore %332 %331 
                              Uniform f32_4* %334 = OpAccessChain %17 %333 
                                       f32_4 %335 = OpLoad %334 
                                       f32_4 %336 = OpLoad %315 
                                         f32 %337 = OpDot %335 %336 
                                Private f32* %339 = OpAccessChain %303 %338 
                                                      OpStore %339 %337 
                                       f32_3 %340 = OpLoad %303 
                                       f32_3 %342 = OpLoad vs_TEXCOORD3 
                                       f32_3 %343 = OpFAdd %340 %342 
                                                      OpStore %303 %343 
                                       f32_3 %344 = OpLoad %303 
                                       f32_3 %346 = OpExtInst %1 40 %344 %345 
                                                      OpStore %303 %346 
                                       f32_3 %348 = OpLoad %303 
                                       f32_3 %349 = OpExtInst %1 30 %348 
                                                      OpStore %347 %349 
                                       f32_3 %350 = OpLoad %347 
                                       f32_3 %353 = OpFMul %350 %352 
                                                      OpStore %347 %353 
                                       f32_3 %354 = OpLoad %347 
                                       f32_3 %355 = OpExtInst %1 29 %354 
                                                      OpStore %347 %355 
                                       f32_3 %356 = OpLoad %347 
                                       f32_3 %359 = OpFMul %356 %358 
                                       f32_3 %362 = OpFAdd %359 %361 
                                                      OpStore %347 %362 
                                       f32_3 %363 = OpLoad %347 
                                       f32_3 %364 = OpExtInst %1 40 %363 %345 
                                                      OpStore %347 %364 
                                       f32_3 %367 = OpLoad %66 
                                       f32_3 %368 = OpLoad %347 
                                       f32_3 %369 = OpFMul %367 %368 
                                       f32_3 %370 = OpLoad %9 
                                       f32_3 %371 = OpFAdd %369 %370 
                                       f32_4 %372 = OpLoad %366 
                                       f32_4 %373 = OpVectorShuffle %372 %371 4 5 6 3 
                                                      OpStore %366 %373 
                                 Output f32* %375 = OpAccessChain %366 %319 
                                                      OpStore %375 %142 
                                                      OpReturn
                                                      OpFunctionEnd
"
}
SubProgram "vulkan hw_tier01 " {
Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "VERTEXLIGHT_ON" }
"; SPIR-V
; Version: 1.0
; Generator: Khronos Glslang Reference Front End; 6
; Bound: 369
; Schema: 0
                                                      OpCapability Shader 
                                               %1 = OpExtInstImport "GLSL.std.450" 
                                                      OpMemoryModel Logical GLSL450 
                                                      OpEntryPoint Vertex %4 "main" %11 %90 %100 %116 %120 %159 %162 %353 %361 %362 
                                                      OpName vs_TEXCOORD0 "vs_TEXCOORD0" 
                                                      OpName vs_TEXCOORD1 "vs_TEXCOORD1" 
                                                      OpName vs_TEXCOORD2 "vs_TEXCOORD2" 
                                                      OpName vs_TEXCOORD3 "vs_TEXCOORD3" 
                                                      OpName vs_TEXCOORD5 "vs_TEXCOORD5" 
                                                      OpName vs_TEXCOORD6 "vs_TEXCOORD6" 
                                                      OpDecorate %11 Location 11 
                                                      OpDecorate %16 ArrayStride 16 
                                                      OpDecorate %18 ArrayStride 18 
                                                      OpDecorate %19 ArrayStride 19 
                                                      OpDecorate %20 ArrayStride 20 
                                                      OpMemberDecorate %21 0 Offset 21 
                                                      OpMemberDecorate %21 1 Offset 21 
                                                      OpMemberDecorate %21 2 Offset 21 
                                                      OpMemberDecorate %21 3 RelaxedPrecision 
                                                      OpMemberDecorate %21 3 Offset 21 
                                                      OpMemberDecorate %21 4 RelaxedPrecision 
                                                      OpMemberDecorate %21 4 Offset 21 
                                                      OpMemberDecorate %21 5 RelaxedPrecision 
                                                      OpMemberDecorate %21 5 Offset 21 
                                                      OpMemberDecorate %21 6 RelaxedPrecision 
                                                      OpMemberDecorate %21 6 Offset 21 
                                                      OpMemberDecorate %21 7 RelaxedPrecision 
                                                      OpMemberDecorate %21 7 Offset 21 
                                                      OpMemberDecorate %21 8 RelaxedPrecision 
                                                      OpMemberDecorate %21 8 Offset 21 
                                                      OpMemberDecorate %21 9 Offset 21 
                                                      OpMemberDecorate %21 10 Offset 21 
                                                      OpMemberDecorate %21 11 Offset 21 
                                                      OpMemberDecorate %21 12 Offset 21 
                                                      OpDecorate %21 Block 
                                                      OpDecorate %23 DescriptorSet 23 
                                                      OpDecorate %23 Binding 23 
                                                      OpMemberDecorate %88 0 BuiltIn 88 
                                                      OpMemberDecorate %88 1 BuiltIn 88 
                                                      OpMemberDecorate %88 2 BuiltIn 88 
                                                      OpDecorate %88 Block 
                                                      OpDecorate %100 Location 100 
                                                      OpDecorate vs_TEXCOORD0 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD0 Location 116 
                                                      OpDecorate %120 Location 120 
                                                      OpDecorate vs_TEXCOORD1 Location 159 
                                                      OpDecorate vs_TEXCOORD2 Location 162 
                                                      OpDecorate %222 RelaxedPrecision 
                                                      OpDecorate %243 RelaxedPrecision 
                                                      OpDecorate %244 RelaxedPrecision 
                                                      OpDecorate %249 RelaxedPrecision 
                                                      OpDecorate %250 RelaxedPrecision 
                                                      OpDecorate %260 RelaxedPrecision 
                                                      OpDecorate %261 RelaxedPrecision 
                                                      OpDecorate %271 RelaxedPrecision 
                                                      OpDecorate %272 RelaxedPrecision 
                                                      OpDecorate %302 RelaxedPrecision 
                                                      OpDecorate %315 RelaxedPrecision 
                                                      OpDecorate %316 RelaxedPrecision 
                                                      OpDecorate %319 RelaxedPrecision 
                                                      OpDecorate %325 RelaxedPrecision 
                                                      OpDecorate %328 RelaxedPrecision 
                                                      OpDecorate %329 RelaxedPrecision 
                                                      OpDecorate %330 RelaxedPrecision 
                                                      OpDecorate %334 RelaxedPrecision 
                                                      OpDecorate %335 RelaxedPrecision 
                                                      OpDecorate %336 RelaxedPrecision 
                                                      OpDecorate %340 RelaxedPrecision 
                                                      OpDecorate %341 RelaxedPrecision 
                                                      OpDecorate %342 RelaxedPrecision 
                                                      OpDecorate %346 RelaxedPrecision 
                                                      OpDecorate %347 RelaxedPrecision 
                                                      OpDecorate %348 RelaxedPrecision 
                                                      OpDecorate %349 RelaxedPrecision 
                                                      OpDecorate %350 RelaxedPrecision 
                                                      OpDecorate %351 RelaxedPrecision 
                                                      OpDecorate %352 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD3 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD3 Location 353 
                                                      OpDecorate %359 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD5 Location 361 
                                                      OpDecorate vs_TEXCOORD6 Location 362 
                                               %2 = OpTypeVoid 
                                               %3 = OpTypeFunction %2 
                                               %6 = OpTypeFloat 32 
                                               %7 = OpTypeVector %6 4 
                                               %8 = OpTypePointer Private %7 
                                Private f32_4* %9 = OpVariable Private 
                                              %10 = OpTypePointer Input %7 
                                 Input f32_4* %11 = OpVariable Input 
                                              %14 = OpTypeInt 32 0 
                                          u32 %15 = OpConstant 8 
                                              %16 = OpTypeArray %7 %15 
                                          u32 %17 = OpConstant 4 
                                              %18 = OpTypeArray %7 %17 
                                              %19 = OpTypeArray %7 %17 
                                              %20 = OpTypeArray %7 %17 
                                              %21 = OpTypeStruct %7 %7 %7 %7 %16 %7 %7 %7 %7 %18 %19 %20 %7 
                                              %22 = OpTypePointer Uniform %21 
Uniform struct {f32_4; f32_4; f32_4; f32_4; f32_4[8]; f32_4; f32_4; f32_4; f32_4; f32_4[4]; f32_4[4]; f32_4[4]; f32_4;}* %23 = OpVariable Uniform 
                                              %24 = OpTypeInt 32 1 
                                          i32 %25 = OpConstant 9 
                                          i32 %26 = OpConstant 1 
                                              %27 = OpTypePointer Uniform %7 
                                          i32 %31 = OpConstant 0 
                                          i32 %39 = OpConstant 2 
                               Private f32_4* %47 = OpVariable Private 
                                          i32 %49 = OpConstant 3 
                                              %53 = OpTypeVector %6 3 
                               Private f32_4* %65 = OpVariable Private 
                                          i32 %68 = OpConstant 11 
                                          u32 %86 = OpConstant 1 
                                              %87 = OpTypeArray %6 %86 
                                              %88 = OpTypeStruct %7 %6 %87 
                                              %89 = OpTypePointer Output %88 
         Output struct {f32_4; f32; f32[1];}* %90 = OpVariable Output 
                                              %98 = OpTypePointer Output %7 
                                Input f32_4* %100 = OpVariable Input 
                                             %101 = OpTypeVector %6 2 
                                         i32 %104 = OpConstant 12 
                                             %115 = OpTypePointer Output %101 
                       Output f32_2* vs_TEXCOORD0 = OpVariable Output 
                                             %119 = OpTypePointer Input %53 
                                Input f32_3* %120 = OpVariable Input 
                                         i32 %122 = OpConstant 10 
                                         u32 %127 = OpConstant 0 
                                             %128 = OpTypePointer Private %6 
                                         u32 %141 = OpConstant 2 
                                Private f32* %143 = OpVariable Private 
                                             %158 = OpTypePointer Output %53 
                       Output f32_3* vs_TEXCOORD1 = OpVariable Output 
                       Output f32_3* vs_TEXCOORD2 = OpVariable Output 
                              Private f32_4* %171 = OpVariable Private 
                              Private f32_4* %184 = OpVariable Private 
                                         f32 %215 = OpConstant 3.674022E-40 
                                       f32_4 %216 = OpConstantComposite %215 %215 %215 %215 
                                         f32 %224 = OpConstant 3.674022E-40 
                                       f32_4 %225 = OpConstantComposite %224 %224 %224 %224 
                                         f32 %233 = OpConstant 3.674022E-40 
                                       f32_4 %234 = OpConstantComposite %233 %233 %233 %233 
                                         i32 %241 = OpConstant 4 
                                         f32 %283 = OpConstant 3.674022E-40 
                                       f32_3 %284 = OpConstantComposite %283 %283 %283 
                                         f32 %286 = OpConstant 3.674022E-40 
                                       f32_3 %287 = OpConstantComposite %286 %286 %286 
                                         f32 %296 = OpConstant 3.674022E-40 
                                       f32_3 %297 = OpConstantComposite %296 %296 %296 
                                             %301 = OpTypePointer Private %53 
                              Private f32_3* %302 = OpVariable Private 
                              Private f32_4* %319 = OpVariable Private 
                              Private f32_3* %325 = OpVariable Private 
                                         i32 %326 = OpConstant 5 
                                         i32 %332 = OpConstant 6 
                                         i32 %338 = OpConstant 7 
                                         i32 %344 = OpConstant 8 
                       Output f32_3* vs_TEXCOORD3 = OpVariable Output 
                       Output f32_4* vs_TEXCOORD5 = OpVariable Output 
                       Output f32_4* vs_TEXCOORD6 = OpVariable Output 
                                             %363 = OpTypePointer Output %6 
                                          void %4 = OpFunction None %3 
                                               %5 = OpLabel 
                                        f32_4 %12 = OpLoad %11 
                                        f32_4 %13 = OpVectorShuffle %12 %12 1 1 1 1 
                               Uniform f32_4* %28 = OpAccessChain %23 %25 %26 
                                        f32_4 %29 = OpLoad %28 
                                        f32_4 %30 = OpFMul %13 %29 
                                                      OpStore %9 %30 
                               Uniform f32_4* %32 = OpAccessChain %23 %25 %31 
                                        f32_4 %33 = OpLoad %32 
                                        f32_4 %34 = OpLoad %11 
                                        f32_4 %35 = OpVectorShuffle %34 %34 0 0 0 0 
                                        f32_4 %36 = OpFMul %33 %35 
                                        f32_4 %37 = OpLoad %9 
                                        f32_4 %38 = OpFAdd %36 %37 
                                                      OpStore %9 %38 
                               Uniform f32_4* %40 = OpAccessChain %23 %25 %39 
                                        f32_4 %41 = OpLoad %40 
                                        f32_4 %42 = OpLoad %11 
                                        f32_4 %43 = OpVectorShuffle %42 %42 2 2 2 2 
                                        f32_4 %44 = OpFMul %41 %43 
                                        f32_4 %45 = OpLoad %9 
                                        f32_4 %46 = OpFAdd %44 %45 
                                                      OpStore %9 %46 
                                        f32_4 %48 = OpLoad %9 
                               Uniform f32_4* %50 = OpAccessChain %23 %25 %49 
                                        f32_4 %51 = OpLoad %50 
                                        f32_4 %52 = OpFAdd %48 %51 
                                                      OpStore %47 %52 
                               Uniform f32_4* %54 = OpAccessChain %23 %25 %49 
                                        f32_4 %55 = OpLoad %54 
                                        f32_3 %56 = OpVectorShuffle %55 %55 0 1 2 
                                        f32_4 %57 = OpLoad %11 
                                        f32_3 %58 = OpVectorShuffle %57 %57 3 3 3 
                                        f32_3 %59 = OpFMul %56 %58 
                                        f32_4 %60 = OpLoad %9 
                                        f32_3 %61 = OpVectorShuffle %60 %60 0 1 2 
                                        f32_3 %62 = OpFAdd %59 %61 
                                        f32_4 %63 = OpLoad %9 
                                        f32_4 %64 = OpVectorShuffle %63 %62 4 5 6 3 
                                                      OpStore %9 %64 
                                        f32_4 %66 = OpLoad %47 
                                        f32_4 %67 = OpVectorShuffle %66 %66 1 1 1 1 
                               Uniform f32_4* %69 = OpAccessChain %23 %68 %26 
                                        f32_4 %70 = OpLoad %69 
                                        f32_4 %71 = OpFMul %67 %70 
                                                      OpStore %65 %71 
                               Uniform f32_4* %72 = OpAccessChain %23 %68 %31 
                                        f32_4 %73 = OpLoad %72 
                                        f32_4 %74 = OpLoad %47 
                                        f32_4 %75 = OpVectorShuffle %74 %74 0 0 0 0 
                                        f32_4 %76 = OpFMul %73 %75 
                                        f32_4 %77 = OpLoad %65 
                                        f32_4 %78 = OpFAdd %76 %77 
                                                      OpStore %65 %78 
                               Uniform f32_4* %79 = OpAccessChain %23 %68 %39 
                                        f32_4 %80 = OpLoad %79 
                                        f32_4 %81 = OpLoad %47 
                                        f32_4 %82 = OpVectorShuffle %81 %81 2 2 2 2 
                                        f32_4 %83 = OpFMul %80 %82 
                                        f32_4 %84 = OpLoad %65 
                                        f32_4 %85 = OpFAdd %83 %84 
                                                      OpStore %65 %85 
                               Uniform f32_4* %91 = OpAccessChain %23 %68 %49 
                                        f32_4 %92 = OpLoad %91 
                                        f32_4 %93 = OpLoad %47 
                                        f32_4 %94 = OpVectorShuffle %93 %93 3 3 3 3 
                                        f32_4 %95 = OpFMul %92 %94 
                                        f32_4 %96 = OpLoad %65 
                                        f32_4 %97 = OpFAdd %95 %96 
                                Output f32_4* %99 = OpAccessChain %90 %31 
                                                      OpStore %99 %97 
                                       f32_4 %102 = OpLoad %100 
                                       f32_2 %103 = OpVectorShuffle %102 %102 0 1 
                              Uniform f32_4* %105 = OpAccessChain %23 %104 
                                       f32_4 %106 = OpLoad %105 
                                       f32_2 %107 = OpVectorShuffle %106 %106 0 1 
                                       f32_2 %108 = OpFMul %103 %107 
                              Uniform f32_4* %109 = OpAccessChain %23 %104 
                                       f32_4 %110 = OpLoad %109 
                                       f32_2 %111 = OpVectorShuffle %110 %110 2 3 
                                       f32_2 %112 = OpFAdd %108 %111 
                                       f32_4 %113 = OpLoad %47 
                                       f32_4 %114 = OpVectorShuffle %113 %112 4 5 2 3 
                                                      OpStore %47 %114 
                                       f32_4 %117 = OpLoad %47 
                                       f32_2 %118 = OpVectorShuffle %117 %117 0 1 
                                                      OpStore vs_TEXCOORD0 %118 
                                       f32_3 %121 = OpLoad %120 
                              Uniform f32_4* %123 = OpAccessChain %23 %122 %31 
                                       f32_4 %124 = OpLoad %123 
                                       f32_3 %125 = OpVectorShuffle %124 %124 0 1 2 
                                         f32 %126 = OpDot %121 %125 
                                Private f32* %129 = OpAccessChain %47 %127 
                                                      OpStore %129 %126 
                                       f32_3 %130 = OpLoad %120 
                              Uniform f32_4* %131 = OpAccessChain %23 %122 %26 
                                       f32_4 %132 = OpLoad %131 
                                       f32_3 %133 = OpVectorShuffle %132 %132 0 1 2 
                                         f32 %134 = OpDot %130 %133 
                                Private f32* %135 = OpAccessChain %47 %86 
                                                      OpStore %135 %134 
                                       f32_3 %136 = OpLoad %120 
                              Uniform f32_4* %137 = OpAccessChain %23 %122 %39 
                                       f32_4 %138 = OpLoad %137 
                                       f32_3 %139 = OpVectorShuffle %138 %138 0 1 2 
                                         f32 %140 = OpDot %136 %139 
                                Private f32* %142 = OpAccessChain %47 %141 
                                                      OpStore %142 %140 
                                       f32_4 %144 = OpLoad %47 
                                       f32_3 %145 = OpVectorShuffle %144 %144 0 1 2 
                                       f32_4 %146 = OpLoad %47 
                                       f32_3 %147 = OpVectorShuffle %146 %146 0 1 2 
                                         f32 %148 = OpDot %145 %147 
                                                      OpStore %143 %148 
                                         f32 %149 = OpLoad %143 
                                         f32 %150 = OpExtInst %1 32 %149 
                                                      OpStore %143 %150 
                                         f32 %151 = OpLoad %143 
                                       f32_3 %152 = OpCompositeConstruct %151 %151 %151 
                                       f32_4 %153 = OpLoad %47 
                                       f32_3 %154 = OpVectorShuffle %153 %153 0 1 2 
                                       f32_3 %155 = OpFMul %152 %154 
                                       f32_4 %156 = OpLoad %47 
                                       f32_4 %157 = OpVectorShuffle %156 %155 4 5 6 3 
                                                      OpStore %47 %157 
                                       f32_4 %160 = OpLoad %47 
                                       f32_3 %161 = OpVectorShuffle %160 %160 0 1 2 
                                                      OpStore vs_TEXCOORD1 %161 
                                       f32_4 %163 = OpLoad %9 
                                       f32_3 %164 = OpVectorShuffle %163 %163 0 1 2 
                                                      OpStore vs_TEXCOORD2 %164 
                                       f32_4 %165 = OpLoad %9 
                                       f32_4 %166 = OpVectorShuffle %165 %165 0 0 0 0 
                                       f32_4 %167 = OpFNegate %166 
                              Uniform f32_4* %168 = OpAccessChain %23 %31 
                                       f32_4 %169 = OpLoad %168 
                                       f32_4 %170 = OpFAdd %167 %169 
                                                      OpStore %65 %170 
                                       f32_4 %172 = OpLoad %9 
                                       f32_4 %173 = OpVectorShuffle %172 %172 1 1 1 1 
                                       f32_4 %174 = OpFNegate %173 
                              Uniform f32_4* %175 = OpAccessChain %23 %26 
                                       f32_4 %176 = OpLoad %175 
                                       f32_4 %177 = OpFAdd %174 %176 
                                                      OpStore %171 %177 
                                       f32_4 %178 = OpLoad %9 
                                       f32_4 %179 = OpVectorShuffle %178 %178 2 2 2 2 
                                       f32_4 %180 = OpFNegate %179 
                              Uniform f32_4* %181 = OpAccessChain %23 %39 
                                       f32_4 %182 = OpLoad %181 
                                       f32_4 %183 = OpFAdd %180 %182 
                                                      OpStore %9 %183 
                                       f32_4 %185 = OpLoad %47 
                                       f32_4 %186 = OpVectorShuffle %185 %185 1 1 1 1 
                                       f32_4 %187 = OpLoad %171 
                                       f32_4 %188 = OpFMul %186 %187 
                                                      OpStore %184 %188 
                                       f32_4 %189 = OpLoad %171 
                                       f32_4 %190 = OpLoad %171 
                                       f32_4 %191 = OpFMul %189 %190 
                                                      OpStore %171 %191 
                                       f32_4 %192 = OpLoad %65 
                                       f32_4 %193 = OpLoad %65 
                                       f32_4 %194 = OpFMul %192 %193 
                                       f32_4 %195 = OpLoad %171 
                                       f32_4 %196 = OpFAdd %194 %195 
                                                      OpStore %171 %196 
                                       f32_4 %197 = OpLoad %65 
                                       f32_4 %198 = OpLoad %47 
                                       f32_4 %199 = OpVectorShuffle %198 %198 0 0 0 0 
                                       f32_4 %200 = OpFMul %197 %199 
                                       f32_4 %201 = OpLoad %184 
                                       f32_4 %202 = OpFAdd %200 %201 
                                                      OpStore %65 %202 
                                       f32_4 %203 = OpLoad %9 
                                       f32_4 %204 = OpLoad %47 
                                       f32_4 %205 = OpVectorShuffle %204 %204 2 2 2 2 
                                       f32_4 %206 = OpFMul %203 %205 
                                       f32_4 %207 = OpLoad %65 
                                       f32_4 %208 = OpFAdd %206 %207 
                                                      OpStore %65 %208 
                                       f32_4 %209 = OpLoad %9 
                                       f32_4 %210 = OpLoad %9 
                                       f32_4 %211 = OpFMul %209 %210 
                                       f32_4 %212 = OpLoad %171 
                                       f32_4 %213 = OpFAdd %211 %212 
                                                      OpStore %9 %213 
                                       f32_4 %214 = OpLoad %9 
                                       f32_4 %217 = OpExtInst %1 40 %214 %216 
                                                      OpStore %9 %217 
                                       f32_4 %218 = OpLoad %9 
                                       f32_4 %219 = OpExtInst %1 32 %218 
                                                      OpStore %171 %219 
                                       f32_4 %220 = OpLoad %9 
                              Uniform f32_4* %221 = OpAccessChain %23 %49 
                                       f32_4 %222 = OpLoad %221 
                                       f32_4 %223 = OpFMul %220 %222 
                                       f32_4 %226 = OpFAdd %223 %225 
                                                      OpStore %9 %226 
                                       f32_4 %227 = OpLoad %9 
                                       f32_4 %228 = OpFDiv %225 %227 
                                                      OpStore %9 %228 
                                       f32_4 %229 = OpLoad %65 
                                       f32_4 %230 = OpLoad %171 
                                       f32_4 %231 = OpFMul %229 %230 
                                                      OpStore %65 %231 
                                       f32_4 %232 = OpLoad %65 
                                       f32_4 %235 = OpExtInst %1 40 %232 %234 
                                                      OpStore %65 %235 
                                       f32_4 %236 = OpLoad %9 
                                       f32_4 %237 = OpLoad %65 
                                       f32_4 %238 = OpFMul %236 %237 
                                                      OpStore %9 %238 
                                       f32_4 %239 = OpLoad %9 
                                       f32_3 %240 = OpVectorShuffle %239 %239 1 1 1 
                              Uniform f32_4* %242 = OpAccessChain %23 %241 %26 
                                       f32_4 %243 = OpLoad %242 
                                       f32_3 %244 = OpVectorShuffle %243 %243 0 1 2 
                                       f32_3 %245 = OpFMul %240 %244 
                                       f32_4 %246 = OpLoad %65 
                                       f32_4 %247 = OpVectorShuffle %246 %245 4 5 6 3 
                                                      OpStore %65 %247 
                              Uniform f32_4* %248 = OpAccessChain %23 %241 %31 
                                       f32_4 %249 = OpLoad %248 
                                       f32_3 %250 = OpVectorShuffle %249 %249 0 1 2 
                                       f32_4 %251 = OpLoad %9 
                                       f32_3 %252 = OpVectorShuffle %251 %251 0 0 0 
                                       f32_3 %253 = OpFMul %250 %252 
                                       f32_4 %254 = OpLoad %65 
                                       f32_3 %255 = OpVectorShuffle %254 %254 0 1 2 
                                       f32_3 %256 = OpFAdd %253 %255 
                                       f32_4 %257 = OpLoad %65 
                                       f32_4 %258 = OpVectorShuffle %257 %256 4 5 6 3 
                                                      OpStore %65 %258 
                              Uniform f32_4* %259 = OpAccessChain %23 %241 %39 
                                       f32_4 %260 = OpLoad %259 
                                       f32_3 %261 = OpVectorShuffle %260 %260 0 1 2 
                                       f32_4 %262 = OpLoad %9 
                                       f32_3 %263 = OpVectorShuffle %262 %262 2 2 2 
                                       f32_3 %264 = OpFMul %261 %263 
                                       f32_4 %265 = OpLoad %65 
                                       f32_3 %266 = OpVectorShuffle %265 %265 0 1 2 
                                       f32_3 %267 = OpFAdd %264 %266 
                                       f32_4 %268 = OpLoad %9 
                                       f32_4 %269 = OpVectorShuffle %268 %267 4 5 6 3 
                                                      OpStore %9 %269 
                              Uniform f32_4* %270 = OpAccessChain %23 %241 %49 
                                       f32_4 %271 = OpLoad %270 
                                       f32_3 %272 = OpVectorShuffle %271 %271 0 1 2 
                                       f32_4 %273 = OpLoad %9 
                                       f32_3 %274 = OpVectorShuffle %273 %273 3 3 3 
                                       f32_3 %275 = OpFMul %272 %274 
                                       f32_4 %276 = OpLoad %9 
                                       f32_3 %277 = OpVectorShuffle %276 %276 0 1 2 
                                       f32_3 %278 = OpFAdd %275 %277 
                                       f32_4 %279 = OpLoad %9 
                                       f32_4 %280 = OpVectorShuffle %279 %278 4 5 6 3 
                                                      OpStore %9 %280 
                                       f32_4 %281 = OpLoad %9 
                                       f32_3 %282 = OpVectorShuffle %281 %281 0 1 2 
                                       f32_3 %285 = OpFMul %282 %284 
                                       f32_3 %288 = OpFAdd %285 %287 
                                       f32_4 %289 = OpLoad %65 
                                       f32_4 %290 = OpVectorShuffle %289 %288 4 5 6 3 
                                                      OpStore %65 %290 
                                       f32_4 %291 = OpLoad %9 
                                       f32_3 %292 = OpVectorShuffle %291 %291 0 1 2 
                                       f32_4 %293 = OpLoad %65 
                                       f32_3 %294 = OpVectorShuffle %293 %293 0 1 2 
                                       f32_3 %295 = OpFMul %292 %294 
                                       f32_3 %298 = OpFAdd %295 %297 
                                       f32_4 %299 = OpLoad %65 
                                       f32_4 %300 = OpVectorShuffle %299 %298 4 5 6 3 
                                                      OpStore %65 %300 
                                Private f32* %303 = OpAccessChain %47 %86 
                                         f32 %304 = OpLoad %303 
                                Private f32* %305 = OpAccessChain %47 %86 
                                         f32 %306 = OpLoad %305 
                                         f32 %307 = OpFMul %304 %306 
                                Private f32* %308 = OpAccessChain %302 %127 
                                                      OpStore %308 %307 
                                Private f32* %309 = OpAccessChain %47 %127 
                                         f32 %310 = OpLoad %309 
                                Private f32* %311 = OpAccessChain %47 %127 
                                         f32 %312 = OpLoad %311 
                                         f32 %313 = OpFMul %310 %312 
                                Private f32* %314 = OpAccessChain %302 %127 
                                         f32 %315 = OpLoad %314 
                                         f32 %316 = OpFNegate %315 
                                         f32 %317 = OpFAdd %313 %316 
                                Private f32* %318 = OpAccessChain %302 %127 
                                                      OpStore %318 %317 
                                       f32_4 %320 = OpLoad %47 
                                       f32_4 %321 = OpVectorShuffle %320 %320 1 2 2 0 
                                       f32_4 %322 = OpLoad %47 
                                       f32_4 %323 = OpVectorShuffle %322 %322 0 1 2 2 
                                       f32_4 %324 = OpFMul %321 %323 
                                                      OpStore %319 %324 
                              Uniform f32_4* %327 = OpAccessChain %23 %326 
                                       f32_4 %328 = OpLoad %327 
                                       f32_4 %329 = OpLoad %319 
                                         f32 %330 = OpDot %328 %329 
                                Private f32* %331 = OpAccessChain %325 %127 
                                                      OpStore %331 %330 
                              Uniform f32_4* %333 = OpAccessChain %23 %332 
                                       f32_4 %334 = OpLoad %333 
                                       f32_4 %335 = OpLoad %319 
                                         f32 %336 = OpDot %334 %335 
                                Private f32* %337 = OpAccessChain %325 %86 
                                                      OpStore %337 %336 
                              Uniform f32_4* %339 = OpAccessChain %23 %338 
                                       f32_4 %340 = OpLoad %339 
                                       f32_4 %341 = OpLoad %319 
                                         f32 %342 = OpDot %340 %341 
                                Private f32* %343 = OpAccessChain %325 %141 
                                                      OpStore %343 %342 
                              Uniform f32_4* %345 = OpAccessChain %23 %344 
                                       f32_4 %346 = OpLoad %345 
                                       f32_3 %347 = OpVectorShuffle %346 %346 0 1 2 
                                       f32_3 %348 = OpLoad %302 
                                       f32_3 %349 = OpVectorShuffle %348 %348 0 0 0 
                                       f32_3 %350 = OpFMul %347 %349 
                                       f32_3 %351 = OpLoad %325 
                                       f32_3 %352 = OpFAdd %350 %351 
                                                      OpStore %302 %352 
                                       f32_4 %354 = OpLoad %9 
                                       f32_3 %355 = OpVectorShuffle %354 %354 0 1 2 
                                       f32_4 %356 = OpLoad %65 
                                       f32_3 %357 = OpVectorShuffle %356 %356 0 1 2 
                                       f32_3 %358 = OpFMul %355 %357 
                                       f32_3 %359 = OpLoad %302 
                                       f32_3 %360 = OpFAdd %358 %359 
                                                      OpStore vs_TEXCOORD3 %360 
                                                      OpStore vs_TEXCOORD5 %234 
                                                      OpStore vs_TEXCOORD6 %234 
                                 Output f32* %364 = OpAccessChain %90 %31 %86 
                                         f32 %365 = OpLoad %364 
                                         f32 %366 = OpFNegate %365 
                                 Output f32* %367 = OpAccessChain %90 %31 %86 
                                                      OpStore %367 %366 
                                                      OpReturn
                                                      OpFunctionEnd
; SPIR-V
; Version: 1.0
; Generator: Khronos Glslang Reference Front End; 6
; Bound: 377
; Schema: 0
                                                      OpCapability Shader 
                                               %1 = OpExtInstImport "GLSL.std.450" 
                                                      OpMemoryModel Logical GLSL450 
                                                      OpEntryPoint Fragment %4 "main" %11 %60 %293 %341 %366 
                                                      OpExecutionMode %4 OriginUpperLeft 
                                                      OpName vs_TEXCOORD2 "vs_TEXCOORD2" 
                                                      OpName vs_TEXCOORD1 "vs_TEXCOORD1" 
                                                      OpName vs_TEXCOORD0 "vs_TEXCOORD0" 
                                                      OpName vs_TEXCOORD3 "vs_TEXCOORD3" 
                                                      OpDecorate vs_TEXCOORD2 Location 11 
                                                      OpMemberDecorate %15 0 Offset 15 
                                                      OpMemberDecorate %15 1 RelaxedPrecision 
                                                      OpMemberDecorate %15 1 Offset 15 
                                                      OpMemberDecorate %15 2 RelaxedPrecision 
                                                      OpMemberDecorate %15 2 Offset 15 
                                                      OpMemberDecorate %15 3 RelaxedPrecision 
                                                      OpMemberDecorate %15 3 Offset 15 
                                                      OpMemberDecorate %15 4 RelaxedPrecision 
                                                      OpMemberDecorate %15 4 Offset 15 
                                                      OpMemberDecorate %15 5 RelaxedPrecision 
                                                      OpMemberDecorate %15 5 Offset 15 
                                                      OpMemberDecorate %15 6 RelaxedPrecision 
                                                      OpMemberDecorate %15 6 Offset 15 
                                                      OpMemberDecorate %15 7 RelaxedPrecision 
                                                      OpMemberDecorate %15 7 Offset 15 
                                                      OpMemberDecorate %15 8 RelaxedPrecision 
                                                      OpMemberDecorate %15 8 Offset 15 
                                                      OpMemberDecorate %15 9 RelaxedPrecision 
                                                      OpMemberDecorate %15 9 Offset 15 
                                                      OpMemberDecorate %15 10 RelaxedPrecision 
                                                      OpMemberDecorate %15 10 Offset 15 
                                                      OpMemberDecorate %15 11 RelaxedPrecision 
                                                      OpMemberDecorate %15 11 Offset 15 
                                                      OpMemberDecorate %15 12 RelaxedPrecision 
                                                      OpMemberDecorate %15 12 Offset 15 
                                                      OpMemberDecorate %15 13 RelaxedPrecision 
                                                      OpMemberDecorate %15 13 Offset 15 
                                                      OpDecorate %15 Block 
                                                      OpDecorate %17 DescriptorSet 17 
                                                      OpDecorate %17 Binding 17 
                                                      OpDecorate %32 RelaxedPrecision 
                                                      OpDecorate %40 RelaxedPrecision 
                                                      OpDecorate %41 RelaxedPrecision 
                                                      OpDecorate %45 RelaxedPrecision 
                                                      OpDecorate %46 RelaxedPrecision 
                                                      OpDecorate %47 RelaxedPrecision 
                                                      OpDecorate %48 RelaxedPrecision 
                                                      OpDecorate %49 RelaxedPrecision 
                                                      OpDecorate %50 RelaxedPrecision 
                                                      OpDecorate %51 RelaxedPrecision 
                                                      OpDecorate %52 RelaxedPrecision 
                                                      OpDecorate %53 RelaxedPrecision 
                                                      OpDecorate %54 RelaxedPrecision 
                                                      OpDecorate %55 RelaxedPrecision 
                                                      OpDecorate %56 RelaxedPrecision 
                                                      OpDecorate %57 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD1 Location 60 
                                                      OpDecorate %64 RelaxedPrecision 
                                                      OpDecorate %65 RelaxedPrecision 
                                                      OpDecorate %66 RelaxedPrecision 
                                                      OpDecorate %67 RelaxedPrecision 
                                                      OpDecorate %71 RelaxedPrecision 
                                                      OpDecorate %72 RelaxedPrecision 
                                                      OpDecorate %73 RelaxedPrecision 
                                                      OpDecorate %74 RelaxedPrecision 
                                                      OpDecorate %78 RelaxedPrecision 
                                                      OpDecorate %80 RelaxedPrecision 
                                                      OpDecorate %81 RelaxedPrecision 
                                                      OpDecorate %82 RelaxedPrecision 
                                                      OpDecorate %86 RelaxedPrecision 
                                                      OpDecorate %87 RelaxedPrecision 
                                                      OpDecorate %90 RelaxedPrecision 
                                                      OpDecorate %94 RelaxedPrecision 
                                                      OpDecorate %95 RelaxedPrecision 
                                                      OpDecorate %100 RelaxedPrecision 
                                                      OpDecorate %102 RelaxedPrecision 
                                                      OpDecorate %107 RelaxedPrecision 
                                                      OpDecorate %116 RelaxedPrecision 
                                                      OpDecorate %117 RelaxedPrecision 
                                                      OpDecorate %119 RelaxedPrecision 
                                                      OpDecorate %120 RelaxedPrecision 
                                                      OpDecorate %127 RelaxedPrecision 
                                                      OpDecorate %128 RelaxedPrecision 
                                                      OpDecorate %131 RelaxedPrecision 
                                                      OpDecorate %133 RelaxedPrecision 
                                                      OpDecorate %134 RelaxedPrecision 
                                                      OpDecorate %135 RelaxedPrecision 
                                                      OpDecorate %138 RelaxedPrecision 
                                                      OpDecorate %139 RelaxedPrecision 
                                                      OpDecorate %140 RelaxedPrecision 
                                                      OpDecorate %141 RelaxedPrecision 
                                                      OpDecorate %173 RelaxedPrecision 
                                                      OpDecorate %174 RelaxedPrecision 
                                                      OpDecorate %177 RelaxedPrecision 
                                                      OpDecorate %178 RelaxedPrecision 
                                                      OpDecorate %179 RelaxedPrecision 
                                                      OpDecorate %184 RelaxedPrecision 
                                                      OpDecorate %185 RelaxedPrecision 
                                                      OpDecorate %189 RelaxedPrecision 
                                                      OpDecorate %190 RelaxedPrecision 
                                                      OpDecorate %191 RelaxedPrecision 
                                                      OpDecorate %194 RelaxedPrecision 
                                                      OpDecorate %195 RelaxedPrecision 
                                                      OpDecorate %197 RelaxedPrecision 
                                                      OpDecorate %199 RelaxedPrecision 
                                                      OpDecorate %200 RelaxedPrecision 
                                                      OpDecorate %202 RelaxedPrecision 
                                                      OpDecorate %203 RelaxedPrecision 
                                                      OpDecorate %206 RelaxedPrecision 
                                                      OpDecorate %207 RelaxedPrecision 
                                                      OpDecorate %209 RelaxedPrecision 
                                                      OpDecorate %210 RelaxedPrecision 
                                                      OpDecorate %212 RelaxedPrecision 
                                                      OpDecorate %213 RelaxedPrecision 
                                                      OpDecorate %214 RelaxedPrecision 
                                                      OpDecorate %215 RelaxedPrecision 
                                                      OpDecorate %218 RelaxedPrecision 
                                                      OpDecorate %219 RelaxedPrecision 
                                                      OpDecorate %222 RelaxedPrecision 
                                                      OpDecorate %224 RelaxedPrecision 
                                                      OpDecorate %225 RelaxedPrecision 
                                                      OpDecorate %228 RelaxedPrecision 
                                                      OpDecorate %229 RelaxedPrecision 
                                                      OpDecorate %232 RelaxedPrecision 
                                                      OpDecorate %233 RelaxedPrecision 
                                                      OpDecorate %234 RelaxedPrecision 
                                                      OpDecorate %237 RelaxedPrecision 
                                                      OpDecorate %239 RelaxedPrecision 
                                                      OpDecorate %240 RelaxedPrecision 
                                                      OpDecorate %243 RelaxedPrecision 
                                                      OpDecorate %245 RelaxedPrecision 
                                                      OpDecorate %246 RelaxedPrecision 
                                                      OpDecorate %250 RelaxedPrecision 
                                                      OpDecorate %251 RelaxedPrecision 
                                                      OpDecorate %252 RelaxedPrecision 
                                                      OpDecorate %255 RelaxedPrecision 
                                                      OpDecorate %256 RelaxedPrecision 
                                                      OpDecorate %257 RelaxedPrecision 
                                                      OpDecorate %259 RelaxedPrecision 
                                                      OpDecorate %260 RelaxedPrecision 
                                                      OpDecorate %261 RelaxedPrecision 
                                                      OpDecorate %262 RelaxedPrecision 
                                                      OpDecorate %264 RelaxedPrecision 
                                                      OpDecorate %265 RelaxedPrecision 
                                                      OpDecorate %266 RelaxedPrecision 
                                                      OpDecorate %267 RelaxedPrecision 
                                                      OpDecorate %268 RelaxedPrecision 
                                                      OpDecorate %270 RelaxedPrecision 
                                                      OpDecorate %271 RelaxedPrecision 
                                                      OpDecorate %272 RelaxedPrecision 
                                                      OpDecorate %273 RelaxedPrecision 
                                                      OpDecorate %274 RelaxedPrecision 
                                                      OpDecorate %275 RelaxedPrecision 
                                                      OpDecorate %276 RelaxedPrecision 
                                                      OpDecorate %277 RelaxedPrecision 
                                                      OpDecorate %278 RelaxedPrecision 
                                                      OpDecorate %281 RelaxedPrecision 
                                                      OpDecorate %284 RelaxedPrecision 
                                                      OpDecorate %284 DescriptorSet 284 
                                                      OpDecorate %284 Binding 284 
                                                      OpDecorate %285 RelaxedPrecision 
                                                      OpDecorate %288 RelaxedPrecision 
                                                      OpDecorate %288 DescriptorSet 288 
                                                      OpDecorate %288 Binding 288 
                                                      OpDecorate %289 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD0 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD0 Location 293 
                                                      OpDecorate %294 RelaxedPrecision 
                                                      OpDecorate %295 RelaxedPrecision 
                                                      OpDecorate %296 RelaxedPrecision 
                                                      OpDecorate %297 RelaxedPrecision 
                                                      OpDecorate %300 RelaxedPrecision 
                                                      OpDecorate %301 RelaxedPrecision 
                                                      OpDecorate %302 RelaxedPrecision 
                                                      OpDecorate %303 RelaxedPrecision 
                                                      OpDecorate %304 RelaxedPrecision 
                                                      OpDecorate %306 RelaxedPrecision 
                                                      OpDecorate %307 RelaxedPrecision 
                                                      OpDecorate %308 RelaxedPrecision 
                                                      OpDecorate %309 RelaxedPrecision 
                                                      OpDecorate %310 RelaxedPrecision 
                                                      OpDecorate %311 RelaxedPrecision 
                                                      OpDecorate %312 RelaxedPrecision 
                                                      OpDecorate %323 RelaxedPrecision 
                                                      OpDecorate %329 RelaxedPrecision 
                                                      OpDecorate %335 RelaxedPrecision 
                                                      OpDecorate %340 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD3 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD3 Location 341 
                                                      OpDecorate %342 RelaxedPrecision 
                                                      OpDecorate %343 RelaxedPrecision 
                                                      OpDecorate %344 RelaxedPrecision 
                                                      OpDecorate %346 RelaxedPrecision 
                                                      OpDecorate %348 RelaxedPrecision 
                                                      OpDecorate %349 RelaxedPrecision 
                                                      OpDecorate %366 RelaxedPrecision 
                                                      OpDecorate %366 Location 366 
                                                      OpDecorate %367 RelaxedPrecision 
                                               %2 = OpTypeVoid 
                                               %3 = OpTypeFunction %2 
                                               %6 = OpTypeFloat 32 
                                               %7 = OpTypeVector %6 3 
                                               %8 = OpTypePointer Private %7 
                                Private f32_3* %9 = OpVariable Private 
                                              %10 = OpTypePointer Input %7 
                        Input f32_3* vs_TEXCOORD2 = OpVariable Input 
                                              %14 = OpTypeVector %6 4 
                                              %15 = OpTypeStruct %7 %14 %14 %14 %14 %14 %14 %14 %6 %14 %14 %6 %6 %6 
                                              %16 = OpTypePointer Uniform %15 
Uniform struct {f32_3; f32_4; f32_4; f32_4; f32_4; f32_4; f32_4; f32_4; f32; f32_4; f32_4; f32; f32; f32;}* %17 = OpVariable Uniform 
                                              %18 = OpTypeInt 32 1 
                                          i32 %19 = OpConstant 0 
                                              %20 = OpTypePointer Uniform %7 
                                              %24 = OpTypePointer Private %6 
                                 Private f32* %25 = OpVariable Private 
                                              %31 = OpTypePointer Private %14 
                               Private f32_4* %32 = OpVariable Private 
                                          i32 %37 = OpConstant 1 
                                              %38 = OpTypePointer Uniform %14 
                                 Private f32* %45 = OpVariable Private 
                        Input f32_3* vs_TEXCOORD1 = OpVariable Input 
                               Private f32_3* %66 = OpVariable Private 
                                              %75 = OpTypeInt 32 0 
                                          u32 %76 = OpConstant 0 
                                          u32 %83 = OpConstant 1 
                                              %85 = OpTypeVector %6 2 
                                          f32 %88 = OpConstant 3.674022E-40 
                                        f32_2 %89 = OpConstantComposite %88 %88 
                                          i32 %97 = OpConstant 8 
                                              %98 = OpTypePointer Uniform %6 
                                         f32 %101 = OpConstant 3.674022E-40 
                                         i32 %114 = OpConstant 13 
                                         f32 %118 = OpConstant 3.674022E-40 
                                         f32 %124 = OpConstant 3.674022E-40 
                                Private f32* %131 = OpVariable Private 
                                Private f32* %136 = OpVariable Private 
                                         f32 %142 = OpConstant 3.674022E-40 
                                         f32 %156 = OpConstant 3.674022E-40 
                                         f32 %158 = OpConstant 3.674022E-40 
                                         i32 %171 = OpConstant 5 
                                         i32 %175 = OpConstant 6 
                                         i32 %187 = OpConstant 12 
                                         i32 %192 = OpConstant 11 
                              Private f32_3* %197 = OpVariable Private 
                                         i32 %248 = OpConstant 9 
                                         i32 %253 = OpConstant 10 
                              Private f32_3* %281 = OpVariable Private 
                                             %282 = OpTypeImage %6 Dim2D 0 0 0 1 Unknown 
                                             %283 = OpTypePointer UniformConstant %282 
        UniformConstant read_only Texture2D* %284 = OpVariable UniformConstant 
                                             %286 = OpTypeSampler 
                                             %287 = OpTypePointer UniformConstant %286 
                    UniformConstant sampler* %288 = OpVariable UniformConstant 
                                             %290 = OpTypeSampledImage %282 
                                             %292 = OpTypePointer Input %85 
                        Input f32_2* vs_TEXCOORD0 = OpVariable Input 
                                         i32 %298 = OpConstant 7 
                              Private f32_3* %303 = OpVariable Private 
                              Private f32_4* %315 = OpVariable Private 
                                         u32 %319 = OpConstant 3 
                                         i32 %321 = OpConstant 2 
                                         i32 %327 = OpConstant 3 
                                         i32 %333 = OpConstant 4 
                                         u32 %338 = OpConstant 2 
                        Input f32_3* vs_TEXCOORD3 = OpVariable Input 
                                       f32_3 %345 = OpConstantComposite %88 %88 %88 
                              Private f32_3* %347 = OpVariable Private 
                                         f32 %351 = OpConstant 3.674022E-40 
                                       f32_3 %352 = OpConstantComposite %351 %351 %351 
                                         f32 %357 = OpConstant 3.674022E-40 
                                       f32_3 %358 = OpConstantComposite %357 %357 %357 
                                         f32 %360 = OpConstant 3.674022E-40 
                                       f32_3 %361 = OpConstantComposite %360 %360 %360 
                                             %365 = OpTypePointer Output %14 
                               Output f32_4* %366 = OpVariable Output 
                                             %374 = OpTypePointer Output %6 
                                          void %4 = OpFunction None %3 
                                               %5 = OpLabel 
                                        f32_3 %12 = OpLoad vs_TEXCOORD2 
                                        f32_3 %13 = OpFNegate %12 
                               Uniform f32_3* %21 = OpAccessChain %17 %19 
                                        f32_3 %22 = OpLoad %21 
                                        f32_3 %23 = OpFAdd %13 %22 
                                                      OpStore %9 %23 
                                        f32_3 %26 = OpLoad %9 
                                        f32_3 %27 = OpLoad %9 
                                          f32 %28 = OpDot %26 %27 
                                                      OpStore %25 %28 
                                          f32 %29 = OpLoad %25 
                                          f32 %30 = OpExtInst %1 32 %29 
                                                      OpStore %25 %30 
                                        f32_3 %33 = OpLoad %9 
                                          f32 %34 = OpLoad %25 
                                        f32_3 %35 = OpCompositeConstruct %34 %34 %34 
                                        f32_3 %36 = OpFMul %33 %35 
                               Uniform f32_4* %39 = OpAccessChain %17 %37 
                                        f32_4 %40 = OpLoad %39 
                                        f32_3 %41 = OpVectorShuffle %40 %40 0 1 2 
                                        f32_3 %42 = OpFAdd %36 %41 
                                        f32_4 %43 = OpLoad %32 
                                        f32_4 %44 = OpVectorShuffle %43 %42 4 5 6 3 
                                                      OpStore %32 %44 
                                        f32_4 %46 = OpLoad %32 
                                        f32_3 %47 = OpVectorShuffle %46 %46 0 1 2 
                                        f32_4 %48 = OpLoad %32 
                                        f32_3 %49 = OpVectorShuffle %48 %48 0 1 2 
                                          f32 %50 = OpDot %47 %49 
                                                      OpStore %45 %50 
                                          f32 %51 = OpLoad %45 
                                          f32 %52 = OpExtInst %1 32 %51 
                                                      OpStore %45 %52 
                                          f32 %53 = OpLoad %45 
                                        f32_3 %54 = OpCompositeConstruct %53 %53 %53 
                                        f32_4 %55 = OpLoad %32 
                                        f32_3 %56 = OpVectorShuffle %55 %55 0 1 2 
                                        f32_3 %57 = OpFMul %54 %56 
                                        f32_4 %58 = OpLoad %32 
                                        f32_4 %59 = OpVectorShuffle %58 %57 4 5 6 3 
                                                      OpStore %32 %59 
                                        f32_3 %61 = OpLoad vs_TEXCOORD1 
                                        f32_3 %62 = OpLoad vs_TEXCOORD1 
                                          f32 %63 = OpDot %61 %62 
                                                      OpStore %45 %63 
                                          f32 %64 = OpLoad %45 
                                          f32 %65 = OpExtInst %1 32 %64 
                                                      OpStore %45 %65 
                                          f32 %67 = OpLoad %45 
                                        f32_3 %68 = OpCompositeConstruct %67 %67 %67 
                                        f32_3 %69 = OpLoad vs_TEXCOORD1 
                                        f32_3 %70 = OpFMul %68 %69 
                                                      OpStore %66 %70 
                                        f32_3 %71 = OpLoad %66 
                                        f32_4 %72 = OpLoad %32 
                                        f32_3 %73 = OpVectorShuffle %72 %72 0 1 2 
                                          f32 %74 = OpDot %71 %73 
                                 Private f32* %77 = OpAccessChain %32 %76 
                                                      OpStore %77 %74 
                                        f32_3 %78 = OpLoad %66 
                               Uniform f32_4* %79 = OpAccessChain %17 %37 
                                        f32_4 %80 = OpLoad %79 
                                        f32_3 %81 = OpVectorShuffle %80 %80 0 1 2 
                                          f32 %82 = OpDot %78 %81 
                                 Private f32* %84 = OpAccessChain %32 %83 
                                                      OpStore %84 %82 
                                        f32_4 %86 = OpLoad %32 
                                        f32_2 %87 = OpVectorShuffle %86 %86 0 1 
                                        f32_2 %90 = OpExtInst %1 40 %87 %89 
                                        f32_4 %91 = OpLoad %32 
                                        f32_4 %92 = OpVectorShuffle %91 %90 4 5 2 3 
                                                      OpStore %32 %92 
                                 Private f32* %93 = OpAccessChain %32 %76 
                                          f32 %94 = OpLoad %93 
                                          f32 %95 = OpExtInst %1 30 %94 
                                 Private f32* %96 = OpAccessChain %9 %76 
                                                      OpStore %96 %95 
                                 Uniform f32* %99 = OpAccessChain %17 %97 
                                         f32 %100 = OpLoad %99 
                                         f32 %102 = OpFMul %100 %101 
                                Private f32* %103 = OpAccessChain %32 %76 
                                                      OpStore %103 %102 
                                Private f32* %104 = OpAccessChain %9 %76 
                                         f32 %105 = OpLoad %104 
                                Private f32* %106 = OpAccessChain %32 %76 
                                         f32 %107 = OpLoad %106 
                                         f32 %108 = OpFMul %105 %107 
                                Private f32* %109 = OpAccessChain %9 %76 
                                                      OpStore %109 %108 
                                Private f32* %110 = OpAccessChain %9 %76 
                                         f32 %111 = OpLoad %110 
                                         f32 %112 = OpExtInst %1 29 %111 
                                Private f32* %113 = OpAccessChain %9 %76 
                                                      OpStore %113 %112 
                                Uniform f32* %115 = OpAccessChain %17 %114 
                                         f32 %116 = OpLoad %115 
                                         f32 %117 = OpFNegate %116 
                                         f32 %119 = OpFMul %117 %118 
                                         f32 %120 = OpFAdd %119 %118 
                                Private f32* %121 = OpAccessChain %32 %76 
                                                      OpStore %121 %120 
                                Private f32* %122 = OpAccessChain %9 %76 
                                         f32 %123 = OpLoad %122 
                                         f32 %125 = OpFMul %123 %124 
                                Private f32* %126 = OpAccessChain %32 %76 
                                         f32 %127 = OpLoad %126 
                                         f32 %128 = OpFNegate %127 
                                         f32 %129 = OpFAdd %125 %128 
                                Private f32* %130 = OpAccessChain %9 %76 
                                                      OpStore %130 %129 
                                Uniform f32* %132 = OpAccessChain %17 %114 
                                         f32 %133 = OpLoad %132 
                                         f32 %134 = OpFMul %133 %118 
                                         f32 %135 = OpFAdd %134 %118 
                                                      OpStore %131 %135 
                                Private f32* %137 = OpAccessChain %32 %76 
                                         f32 %138 = OpLoad %137 
                                         f32 %139 = OpFNegate %138 
                                         f32 %140 = OpLoad %131 
                                         f32 %141 = OpFAdd %139 %140 
                                                      OpStore %136 %141 
                                         f32 %143 = OpLoad %136 
                                         f32 %144 = OpFDiv %142 %143 
                                                      OpStore %136 %144 
                                         f32 %145 = OpLoad %136 
                                Private f32* %146 = OpAccessChain %9 %76 
                                         f32 %147 = OpLoad %146 
                                         f32 %148 = OpFMul %145 %147 
                                Private f32* %149 = OpAccessChain %9 %76 
                                                      OpStore %149 %148 
                                Private f32* %150 = OpAccessChain %9 %76 
                                         f32 %151 = OpLoad %150 
                                         f32 %152 = OpExtInst %1 43 %151 %88 %142 
                                Private f32* %153 = OpAccessChain %9 %76 
                                                      OpStore %153 %152 
                                Private f32* %154 = OpAccessChain %9 %76 
                                         f32 %155 = OpLoad %154 
                                         f32 %157 = OpFMul %155 %156 
                                         f32 %159 = OpFAdd %157 %158 
                                                      OpStore %136 %159 
                                Private f32* %160 = OpAccessChain %9 %76 
                                         f32 %161 = OpLoad %160 
                                Private f32* %162 = OpAccessChain %9 %76 
                                         f32 %163 = OpLoad %162 
                                         f32 %164 = OpFMul %161 %163 
                                Private f32* %165 = OpAccessChain %9 %76 
                                                      OpStore %165 %164 
                                Private f32* %166 = OpAccessChain %9 %76 
                                         f32 %167 = OpLoad %166 
                                         f32 %168 = OpLoad %136 
                                         f32 %169 = OpFMul %167 %168 
                                Private f32* %170 = OpAccessChain %9 %76 
                                                      OpStore %170 %169 
                              Uniform f32_4* %172 = OpAccessChain %17 %171 
                                       f32_4 %173 = OpLoad %172 
                                       f32_3 %174 = OpVectorShuffle %173 %173 0 1 2 
                              Uniform f32_4* %176 = OpAccessChain %17 %175 
                                       f32_4 %177 = OpLoad %176 
                                       f32_3 %178 = OpVectorShuffle %177 %177 0 1 2 
                                       f32_3 %179 = OpFMul %174 %178 
                                       f32_4 %180 = OpLoad %32 
                                       f32_4 %181 = OpVectorShuffle %180 %179 4 1 5 6 
                                                      OpStore %32 %181 
                                       f32_3 %182 = OpLoad %9 
                                       f32_3 %183 = OpVectorShuffle %182 %182 0 0 0 
                                       f32_4 %184 = OpLoad %32 
                                       f32_3 %185 = OpVectorShuffle %184 %184 0 2 3 
                                       f32_3 %186 = OpFMul %183 %185 
                                                      OpStore %9 %186 
                                Uniform f32* %188 = OpAccessChain %17 %187 
                                         f32 %189 = OpLoad %188 
                                         f32 %190 = OpFNegate %189 
                                         f32 %191 = OpFMul %190 %118 
                                Uniform f32* %193 = OpAccessChain %17 %192 
                                         f32 %194 = OpLoad %193 
                                         f32 %195 = OpFAdd %191 %194 
                                Private f32* %196 = OpAccessChain %32 %76 
                                                      OpStore %196 %195 
                                Private f32* %198 = OpAccessChain %32 %76 
                                         f32 %199 = OpLoad %198 
                                         f32 %200 = OpFNegate %199 
                                Private f32* %201 = OpAccessChain %32 %83 
                                         f32 %202 = OpLoad %201 
                                         f32 %203 = OpFAdd %200 %202 
                                Private f32* %204 = OpAccessChain %197 %76 
                                                      OpStore %204 %203 
                                Uniform f32* %205 = OpAccessChain %17 %187 
                                         f32 %206 = OpLoad %205 
                                         f32 %207 = OpFMul %206 %118 
                                Uniform f32* %208 = OpAccessChain %17 %192 
                                         f32 %209 = OpLoad %208 
                                         f32 %210 = OpFAdd %207 %209 
                                                      OpStore %131 %210 
                                Private f32* %211 = OpAccessChain %32 %76 
                                         f32 %212 = OpLoad %211 
                                         f32 %213 = OpFNegate %212 
                                         f32 %214 = OpLoad %131 
                                         f32 %215 = OpFAdd %213 %214 
                                Private f32* %216 = OpAccessChain %32 %76 
                                                      OpStore %216 %215 
                                Private f32* %217 = OpAccessChain %32 %76 
                                         f32 %218 = OpLoad %217 
                                         f32 %219 = OpFDiv %142 %218 
                                Private f32* %220 = OpAccessChain %32 %76 
                                                      OpStore %220 %219 
                                Private f32* %221 = OpAccessChain %32 %76 
                                         f32 %222 = OpLoad %221 
                                Private f32* %223 = OpAccessChain %197 %76 
                                         f32 %224 = OpLoad %223 
                                         f32 %225 = OpFMul %222 %224 
                                Private f32* %226 = OpAccessChain %32 %76 
                                                      OpStore %226 %225 
                                Private f32* %227 = OpAccessChain %32 %76 
                                         f32 %228 = OpLoad %227 
                                         f32 %229 = OpExtInst %1 43 %228 %88 %142 
                                Private f32* %230 = OpAccessChain %32 %76 
                                                      OpStore %230 %229 
                                Private f32* %231 = OpAccessChain %32 %76 
                                         f32 %232 = OpLoad %231 
                                         f32 %233 = OpFMul %232 %156 
                                         f32 %234 = OpFAdd %233 %158 
                                Private f32* %235 = OpAccessChain %197 %76 
                                                      OpStore %235 %234 
                                Private f32* %236 = OpAccessChain %32 %76 
                                         f32 %237 = OpLoad %236 
                                Private f32* %238 = OpAccessChain %32 %76 
                                         f32 %239 = OpLoad %238 
                                         f32 %240 = OpFMul %237 %239 
                                Private f32* %241 = OpAccessChain %32 %76 
                                                      OpStore %241 %240 
                                Private f32* %242 = OpAccessChain %32 %76 
                                         f32 %243 = OpLoad %242 
                                Private f32* %244 = OpAccessChain %197 %76 
                                         f32 %245 = OpLoad %244 
                                         f32 %246 = OpFMul %243 %245 
                                Private f32* %247 = OpAccessChain %32 %76 
                                                      OpStore %247 %246 
                              Uniform f32_4* %249 = OpAccessChain %17 %248 
                                       f32_4 %250 = OpLoad %249 
                                       f32_3 %251 = OpVectorShuffle %250 %250 0 1 2 
                                       f32_3 %252 = OpFNegate %251 
                              Uniform f32_4* %254 = OpAccessChain %17 %253 
                                       f32_4 %255 = OpLoad %254 
                                       f32_3 %256 = OpVectorShuffle %255 %255 0 1 2 
                                       f32_3 %257 = OpFAdd %252 %256 
                                                      OpStore %197 %257 
                              Uniform f32_4* %258 = OpAccessChain %17 %253 
                                       f32_4 %259 = OpLoad %258 
                                       f32_3 %260 = OpVectorShuffle %259 %259 3 3 3 
                                       f32_3 %261 = OpLoad %197 
                                       f32_3 %262 = OpFMul %260 %261 
                              Uniform f32_4* %263 = OpAccessChain %17 %248 
                                       f32_4 %264 = OpLoad %263 
                                       f32_3 %265 = OpVectorShuffle %264 %264 0 1 2 
                                       f32_3 %266 = OpFAdd %262 %265 
                                                      OpStore %197 %266 
                                       f32_3 %267 = OpLoad %197 
                                       f32_3 %268 = OpFNegate %267 
                              Uniform f32_4* %269 = OpAccessChain %17 %248 
                                       f32_4 %270 = OpLoad %269 
                                       f32_3 %271 = OpVectorShuffle %270 %270 0 1 2 
                                       f32_3 %272 = OpFAdd %268 %271 
                                                      OpStore %66 %272 
                                       f32_4 %273 = OpLoad %32 
                                       f32_3 %274 = OpVectorShuffle %273 %273 0 0 0 
                                       f32_3 %275 = OpLoad %66 
                                       f32_3 %276 = OpFMul %274 %275 
                                       f32_3 %277 = OpLoad %197 
                                       f32_3 %278 = OpFAdd %276 %277 
                                       f32_4 %279 = OpLoad %32 
                                       f32_4 %280 = OpVectorShuffle %279 %278 4 5 6 3 
                                                      OpStore %32 %280 
                         read_only Texture2D %285 = OpLoad %284 
                                     sampler %289 = OpLoad %288 
                  read_only Texture2DSampled %291 = OpSampledImage %285 %289 
                                       f32_2 %294 = OpLoad vs_TEXCOORD0 
                                       f32_4 %295 = OpImageSampleImplicitLod %291 %294 
                                       f32_3 %296 = OpVectorShuffle %295 %295 0 1 2 
                                                      OpStore %281 %296 
                                       f32_3 %297 = OpLoad %281 
                              Uniform f32_4* %299 = OpAccessChain %17 %298 
                                       f32_4 %300 = OpLoad %299 
                                       f32_3 %301 = OpVectorShuffle %300 %300 0 1 2 
                                       f32_3 %302 = OpFMul %297 %301 
                                                      OpStore %66 %302 
                                       f32_3 %304 = OpLoad %66 
                              Uniform f32_4* %305 = OpAccessChain %17 %171 
                                       f32_4 %306 = OpLoad %305 
                                       f32_3 %307 = OpVectorShuffle %306 %306 0 1 2 
                                       f32_3 %308 = OpFMul %304 %307 
                                                      OpStore %303 %308 
                                       f32_3 %309 = OpLoad %303 
                                       f32_4 %310 = OpLoad %32 
                                       f32_3 %311 = OpVectorShuffle %310 %310 0 1 2 
                                       f32_3 %312 = OpFMul %309 %311 
                                       f32_3 %313 = OpLoad %9 
                                       f32_3 %314 = OpFAdd %312 %313 
                                                      OpStore %9 %314 
                                       f32_3 %316 = OpLoad vs_TEXCOORD1 
                                       f32_4 %317 = OpLoad %315 
                                       f32_4 %318 = OpVectorShuffle %317 %316 4 5 6 3 
                                                      OpStore %315 %318 
                                Private f32* %320 = OpAccessChain %315 %319 
                                                      OpStore %320 %142 
                              Uniform f32_4* %322 = OpAccessChain %17 %321 
                                       f32_4 %323 = OpLoad %322 
                                       f32_4 %324 = OpLoad %315 
                                         f32 %325 = OpDot %323 %324 
                                Private f32* %326 = OpAccessChain %303 %76 
                                                      OpStore %326 %325 
                              Uniform f32_4* %328 = OpAccessChain %17 %327 
                                       f32_4 %329 = OpLoad %328 
                                       f32_4 %330 = OpLoad %315 
                                         f32 %331 = OpDot %329 %330 
                                Private f32* %332 = OpAccessChain %303 %83 
                                                      OpStore %332 %331 
                              Uniform f32_4* %334 = OpAccessChain %17 %333 
                                       f32_4 %335 = OpLoad %334 
                                       f32_4 %336 = OpLoad %315 
                                         f32 %337 = OpDot %335 %336 
                                Private f32* %339 = OpAccessChain %303 %338 
                                                      OpStore %339 %337 
                                       f32_3 %340 = OpLoad %303 
                                       f32_3 %342 = OpLoad vs_TEXCOORD3 
                                       f32_3 %343 = OpFAdd %340 %342 
                                                      OpStore %303 %343 
                                       f32_3 %344 = OpLoad %303 
                                       f32_3 %346 = OpExtInst %1 40 %344 %345 
                                                      OpStore %303 %346 
                                       f32_3 %348 = OpLoad %303 
                                       f32_3 %349 = OpExtInst %1 30 %348 
                                                      OpStore %347 %349 
                                       f32_3 %350 = OpLoad %347 
                                       f32_3 %353 = OpFMul %350 %352 
                                                      OpStore %347 %353 
                                       f32_3 %354 = OpLoad %347 
                                       f32_3 %355 = OpExtInst %1 29 %354 
                                                      OpStore %347 %355 
                                       f32_3 %356 = OpLoad %347 
                                       f32_3 %359 = OpFMul %356 %358 
                                       f32_3 %362 = OpFAdd %359 %361 
                                                      OpStore %347 %362 
                                       f32_3 %363 = OpLoad %347 
                                       f32_3 %364 = OpExtInst %1 40 %363 %345 
                                                      OpStore %347 %364 
                                       f32_3 %367 = OpLoad %66 
                                       f32_3 %368 = OpLoad %347 
                                       f32_3 %369 = OpFMul %367 %368 
                                       f32_3 %370 = OpLoad %9 
                                       f32_3 %371 = OpFAdd %369 %370 
                                       f32_4 %372 = OpLoad %366 
                                       f32_4 %373 = OpVectorShuffle %372 %371 4 5 6 3 
                                                      OpStore %366 %373 
                                 Output f32* %375 = OpAccessChain %366 %319 
                                                      OpStore %375 %142 
                                                      OpReturn
                                                      OpFunctionEnd
"
}
SubProgram "vulkan hw_tier02 " {
Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "VERTEXLIGHT_ON" }
"; SPIR-V
; Version: 1.0
; Generator: Khronos Glslang Reference Front End; 6
; Bound: 369
; Schema: 0
                                                      OpCapability Shader 
                                               %1 = OpExtInstImport "GLSL.std.450" 
                                                      OpMemoryModel Logical GLSL450 
                                                      OpEntryPoint Vertex %4 "main" %11 %90 %100 %116 %120 %159 %162 %353 %361 %362 
                                                      OpName vs_TEXCOORD0 "vs_TEXCOORD0" 
                                                      OpName vs_TEXCOORD1 "vs_TEXCOORD1" 
                                                      OpName vs_TEXCOORD2 "vs_TEXCOORD2" 
                                                      OpName vs_TEXCOORD3 "vs_TEXCOORD3" 
                                                      OpName vs_TEXCOORD5 "vs_TEXCOORD5" 
                                                      OpName vs_TEXCOORD6 "vs_TEXCOORD6" 
                                                      OpDecorate %11 Location 11 
                                                      OpDecorate %16 ArrayStride 16 
                                                      OpDecorate %18 ArrayStride 18 
                                                      OpDecorate %19 ArrayStride 19 
                                                      OpDecorate %20 ArrayStride 20 
                                                      OpMemberDecorate %21 0 Offset 21 
                                                      OpMemberDecorate %21 1 Offset 21 
                                                      OpMemberDecorate %21 2 Offset 21 
                                                      OpMemberDecorate %21 3 RelaxedPrecision 
                                                      OpMemberDecorate %21 3 Offset 21 
                                                      OpMemberDecorate %21 4 RelaxedPrecision 
                                                      OpMemberDecorate %21 4 Offset 21 
                                                      OpMemberDecorate %21 5 RelaxedPrecision 
                                                      OpMemberDecorate %21 5 Offset 21 
                                                      OpMemberDecorate %21 6 RelaxedPrecision 
                                                      OpMemberDecorate %21 6 Offset 21 
                                                      OpMemberDecorate %21 7 RelaxedPrecision 
                                                      OpMemberDecorate %21 7 Offset 21 
                                                      OpMemberDecorate %21 8 RelaxedPrecision 
                                                      OpMemberDecorate %21 8 Offset 21 
                                                      OpMemberDecorate %21 9 Offset 21 
                                                      OpMemberDecorate %21 10 Offset 21 
                                                      OpMemberDecorate %21 11 Offset 21 
                                                      OpMemberDecorate %21 12 Offset 21 
                                                      OpDecorate %21 Block 
                                                      OpDecorate %23 DescriptorSet 23 
                                                      OpDecorate %23 Binding 23 
                                                      OpMemberDecorate %88 0 BuiltIn 88 
                                                      OpMemberDecorate %88 1 BuiltIn 88 
                                                      OpMemberDecorate %88 2 BuiltIn 88 
                                                      OpDecorate %88 Block 
                                                      OpDecorate %100 Location 100 
                                                      OpDecorate vs_TEXCOORD0 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD0 Location 116 
                                                      OpDecorate %120 Location 120 
                                                      OpDecorate vs_TEXCOORD1 Location 159 
                                                      OpDecorate vs_TEXCOORD2 Location 162 
                                                      OpDecorate %222 RelaxedPrecision 
                                                      OpDecorate %243 RelaxedPrecision 
                                                      OpDecorate %244 RelaxedPrecision 
                                                      OpDecorate %249 RelaxedPrecision 
                                                      OpDecorate %250 RelaxedPrecision 
                                                      OpDecorate %260 RelaxedPrecision 
                                                      OpDecorate %261 RelaxedPrecision 
                                                      OpDecorate %271 RelaxedPrecision 
                                                      OpDecorate %272 RelaxedPrecision 
                                                      OpDecorate %302 RelaxedPrecision 
                                                      OpDecorate %315 RelaxedPrecision 
                                                      OpDecorate %316 RelaxedPrecision 
                                                      OpDecorate %319 RelaxedPrecision 
                                                      OpDecorate %325 RelaxedPrecision 
                                                      OpDecorate %328 RelaxedPrecision 
                                                      OpDecorate %329 RelaxedPrecision 
                                                      OpDecorate %330 RelaxedPrecision 
                                                      OpDecorate %334 RelaxedPrecision 
                                                      OpDecorate %335 RelaxedPrecision 
                                                      OpDecorate %336 RelaxedPrecision 
                                                      OpDecorate %340 RelaxedPrecision 
                                                      OpDecorate %341 RelaxedPrecision 
                                                      OpDecorate %342 RelaxedPrecision 
                                                      OpDecorate %346 RelaxedPrecision 
                                                      OpDecorate %347 RelaxedPrecision 
                                                      OpDecorate %348 RelaxedPrecision 
                                                      OpDecorate %349 RelaxedPrecision 
                                                      OpDecorate %350 RelaxedPrecision 
                                                      OpDecorate %351 RelaxedPrecision 
                                                      OpDecorate %352 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD3 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD3 Location 353 
                                                      OpDecorate %359 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD5 Location 361 
                                                      OpDecorate vs_TEXCOORD6 Location 362 
                                               %2 = OpTypeVoid 
                                               %3 = OpTypeFunction %2 
                                               %6 = OpTypeFloat 32 
                                               %7 = OpTypeVector %6 4 
                                               %8 = OpTypePointer Private %7 
                                Private f32_4* %9 = OpVariable Private 
                                              %10 = OpTypePointer Input %7 
                                 Input f32_4* %11 = OpVariable Input 
                                              %14 = OpTypeInt 32 0 
                                          u32 %15 = OpConstant 8 
                                              %16 = OpTypeArray %7 %15 
                                          u32 %17 = OpConstant 4 
                                              %18 = OpTypeArray %7 %17 
                                              %19 = OpTypeArray %7 %17 
                                              %20 = OpTypeArray %7 %17 
                                              %21 = OpTypeStruct %7 %7 %7 %7 %16 %7 %7 %7 %7 %18 %19 %20 %7 
                                              %22 = OpTypePointer Uniform %21 
Uniform struct {f32_4; f32_4; f32_4; f32_4; f32_4[8]; f32_4; f32_4; f32_4; f32_4; f32_4[4]; f32_4[4]; f32_4[4]; f32_4;}* %23 = OpVariable Uniform 
                                              %24 = OpTypeInt 32 1 
                                          i32 %25 = OpConstant 9 
                                          i32 %26 = OpConstant 1 
                                              %27 = OpTypePointer Uniform %7 
                                          i32 %31 = OpConstant 0 
                                          i32 %39 = OpConstant 2 
                               Private f32_4* %47 = OpVariable Private 
                                          i32 %49 = OpConstant 3 
                                              %53 = OpTypeVector %6 3 
                               Private f32_4* %65 = OpVariable Private 
                                          i32 %68 = OpConstant 11 
                                          u32 %86 = OpConstant 1 
                                              %87 = OpTypeArray %6 %86 
                                              %88 = OpTypeStruct %7 %6 %87 
                                              %89 = OpTypePointer Output %88 
         Output struct {f32_4; f32; f32[1];}* %90 = OpVariable Output 
                                              %98 = OpTypePointer Output %7 
                                Input f32_4* %100 = OpVariable Input 
                                             %101 = OpTypeVector %6 2 
                                         i32 %104 = OpConstant 12 
                                             %115 = OpTypePointer Output %101 
                       Output f32_2* vs_TEXCOORD0 = OpVariable Output 
                                             %119 = OpTypePointer Input %53 
                                Input f32_3* %120 = OpVariable Input 
                                         i32 %122 = OpConstant 10 
                                         u32 %127 = OpConstant 0 
                                             %128 = OpTypePointer Private %6 
                                         u32 %141 = OpConstant 2 
                                Private f32* %143 = OpVariable Private 
                                             %158 = OpTypePointer Output %53 
                       Output f32_3* vs_TEXCOORD1 = OpVariable Output 
                       Output f32_3* vs_TEXCOORD2 = OpVariable Output 
                              Private f32_4* %171 = OpVariable Private 
                              Private f32_4* %184 = OpVariable Private 
                                         f32 %215 = OpConstant 3.674022E-40 
                                       f32_4 %216 = OpConstantComposite %215 %215 %215 %215 
                                         f32 %224 = OpConstant 3.674022E-40 
                                       f32_4 %225 = OpConstantComposite %224 %224 %224 %224 
                                         f32 %233 = OpConstant 3.674022E-40 
                                       f32_4 %234 = OpConstantComposite %233 %233 %233 %233 
                                         i32 %241 = OpConstant 4 
                                         f32 %283 = OpConstant 3.674022E-40 
                                       f32_3 %284 = OpConstantComposite %283 %283 %283 
                                         f32 %286 = OpConstant 3.674022E-40 
                                       f32_3 %287 = OpConstantComposite %286 %286 %286 
                                         f32 %296 = OpConstant 3.674022E-40 
                                       f32_3 %297 = OpConstantComposite %296 %296 %296 
                                             %301 = OpTypePointer Private %53 
                              Private f32_3* %302 = OpVariable Private 
                              Private f32_4* %319 = OpVariable Private 
                              Private f32_3* %325 = OpVariable Private 
                                         i32 %326 = OpConstant 5 
                                         i32 %332 = OpConstant 6 
                                         i32 %338 = OpConstant 7 
                                         i32 %344 = OpConstant 8 
                       Output f32_3* vs_TEXCOORD3 = OpVariable Output 
                       Output f32_4* vs_TEXCOORD5 = OpVariable Output 
                       Output f32_4* vs_TEXCOORD6 = OpVariable Output 
                                             %363 = OpTypePointer Output %6 
                                          void %4 = OpFunction None %3 
                                               %5 = OpLabel 
                                        f32_4 %12 = OpLoad %11 
                                        f32_4 %13 = OpVectorShuffle %12 %12 1 1 1 1 
                               Uniform f32_4* %28 = OpAccessChain %23 %25 %26 
                                        f32_4 %29 = OpLoad %28 
                                        f32_4 %30 = OpFMul %13 %29 
                                                      OpStore %9 %30 
                               Uniform f32_4* %32 = OpAccessChain %23 %25 %31 
                                        f32_4 %33 = OpLoad %32 
                                        f32_4 %34 = OpLoad %11 
                                        f32_4 %35 = OpVectorShuffle %34 %34 0 0 0 0 
                                        f32_4 %36 = OpFMul %33 %35 
                                        f32_4 %37 = OpLoad %9 
                                        f32_4 %38 = OpFAdd %36 %37 
                                                      OpStore %9 %38 
                               Uniform f32_4* %40 = OpAccessChain %23 %25 %39 
                                        f32_4 %41 = OpLoad %40 
                                        f32_4 %42 = OpLoad %11 
                                        f32_4 %43 = OpVectorShuffle %42 %42 2 2 2 2 
                                        f32_4 %44 = OpFMul %41 %43 
                                        f32_4 %45 = OpLoad %9 
                                        f32_4 %46 = OpFAdd %44 %45 
                                                      OpStore %9 %46 
                                        f32_4 %48 = OpLoad %9 
                               Uniform f32_4* %50 = OpAccessChain %23 %25 %49 
                                        f32_4 %51 = OpLoad %50 
                                        f32_4 %52 = OpFAdd %48 %51 
                                                      OpStore %47 %52 
                               Uniform f32_4* %54 = OpAccessChain %23 %25 %49 
                                        f32_4 %55 = OpLoad %54 
                                        f32_3 %56 = OpVectorShuffle %55 %55 0 1 2 
                                        f32_4 %57 = OpLoad %11 
                                        f32_3 %58 = OpVectorShuffle %57 %57 3 3 3 
                                        f32_3 %59 = OpFMul %56 %58 
                                        f32_4 %60 = OpLoad %9 
                                        f32_3 %61 = OpVectorShuffle %60 %60 0 1 2 
                                        f32_3 %62 = OpFAdd %59 %61 
                                        f32_4 %63 = OpLoad %9 
                                        f32_4 %64 = OpVectorShuffle %63 %62 4 5 6 3 
                                                      OpStore %9 %64 
                                        f32_4 %66 = OpLoad %47 
                                        f32_4 %67 = OpVectorShuffle %66 %66 1 1 1 1 
                               Uniform f32_4* %69 = OpAccessChain %23 %68 %26 
                                        f32_4 %70 = OpLoad %69 
                                        f32_4 %71 = OpFMul %67 %70 
                                                      OpStore %65 %71 
                               Uniform f32_4* %72 = OpAccessChain %23 %68 %31 
                                        f32_4 %73 = OpLoad %72 
                                        f32_4 %74 = OpLoad %47 
                                        f32_4 %75 = OpVectorShuffle %74 %74 0 0 0 0 
                                        f32_4 %76 = OpFMul %73 %75 
                                        f32_4 %77 = OpLoad %65 
                                        f32_4 %78 = OpFAdd %76 %77 
                                                      OpStore %65 %78 
                               Uniform f32_4* %79 = OpAccessChain %23 %68 %39 
                                        f32_4 %80 = OpLoad %79 
                                        f32_4 %81 = OpLoad %47 
                                        f32_4 %82 = OpVectorShuffle %81 %81 2 2 2 2 
                                        f32_4 %83 = OpFMul %80 %82 
                                        f32_4 %84 = OpLoad %65 
                                        f32_4 %85 = OpFAdd %83 %84 
                                                      OpStore %65 %85 
                               Uniform f32_4* %91 = OpAccessChain %23 %68 %49 
                                        f32_4 %92 = OpLoad %91 
                                        f32_4 %93 = OpLoad %47 
                                        f32_4 %94 = OpVectorShuffle %93 %93 3 3 3 3 
                                        f32_4 %95 = OpFMul %92 %94 
                                        f32_4 %96 = OpLoad %65 
                                        f32_4 %97 = OpFAdd %95 %96 
                                Output f32_4* %99 = OpAccessChain %90 %31 
                                                      OpStore %99 %97 
                                       f32_4 %102 = OpLoad %100 
                                       f32_2 %103 = OpVectorShuffle %102 %102 0 1 
                              Uniform f32_4* %105 = OpAccessChain %23 %104 
                                       f32_4 %106 = OpLoad %105 
                                       f32_2 %107 = OpVectorShuffle %106 %106 0 1 
                                       f32_2 %108 = OpFMul %103 %107 
                              Uniform f32_4* %109 = OpAccessChain %23 %104 
                                       f32_4 %110 = OpLoad %109 
                                       f32_2 %111 = OpVectorShuffle %110 %110 2 3 
                                       f32_2 %112 = OpFAdd %108 %111 
                                       f32_4 %113 = OpLoad %47 
                                       f32_4 %114 = OpVectorShuffle %113 %112 4 5 2 3 
                                                      OpStore %47 %114 
                                       f32_4 %117 = OpLoad %47 
                                       f32_2 %118 = OpVectorShuffle %117 %117 0 1 
                                                      OpStore vs_TEXCOORD0 %118 
                                       f32_3 %121 = OpLoad %120 
                              Uniform f32_4* %123 = OpAccessChain %23 %122 %31 
                                       f32_4 %124 = OpLoad %123 
                                       f32_3 %125 = OpVectorShuffle %124 %124 0 1 2 
                                         f32 %126 = OpDot %121 %125 
                                Private f32* %129 = OpAccessChain %47 %127 
                                                      OpStore %129 %126 
                                       f32_3 %130 = OpLoad %120 
                              Uniform f32_4* %131 = OpAccessChain %23 %122 %26 
                                       f32_4 %132 = OpLoad %131 
                                       f32_3 %133 = OpVectorShuffle %132 %132 0 1 2 
                                         f32 %134 = OpDot %130 %133 
                                Private f32* %135 = OpAccessChain %47 %86 
                                                      OpStore %135 %134 
                                       f32_3 %136 = OpLoad %120 
                              Uniform f32_4* %137 = OpAccessChain %23 %122 %39 
                                       f32_4 %138 = OpLoad %137 
                                       f32_3 %139 = OpVectorShuffle %138 %138 0 1 2 
                                         f32 %140 = OpDot %136 %139 
                                Private f32* %142 = OpAccessChain %47 %141 
                                                      OpStore %142 %140 
                                       f32_4 %144 = OpLoad %47 
                                       f32_3 %145 = OpVectorShuffle %144 %144 0 1 2 
                                       f32_4 %146 = OpLoad %47 
                                       f32_3 %147 = OpVectorShuffle %146 %146 0 1 2 
                                         f32 %148 = OpDot %145 %147 
                                                      OpStore %143 %148 
                                         f32 %149 = OpLoad %143 
                                         f32 %150 = OpExtInst %1 32 %149 
                                                      OpStore %143 %150 
                                         f32 %151 = OpLoad %143 
                                       f32_3 %152 = OpCompositeConstruct %151 %151 %151 
                                       f32_4 %153 = OpLoad %47 
                                       f32_3 %154 = OpVectorShuffle %153 %153 0 1 2 
                                       f32_3 %155 = OpFMul %152 %154 
                                       f32_4 %156 = OpLoad %47 
                                       f32_4 %157 = OpVectorShuffle %156 %155 4 5 6 3 
                                                      OpStore %47 %157 
                                       f32_4 %160 = OpLoad %47 
                                       f32_3 %161 = OpVectorShuffle %160 %160 0 1 2 
                                                      OpStore vs_TEXCOORD1 %161 
                                       f32_4 %163 = OpLoad %9 
                                       f32_3 %164 = OpVectorShuffle %163 %163 0 1 2 
                                                      OpStore vs_TEXCOORD2 %164 
                                       f32_4 %165 = OpLoad %9 
                                       f32_4 %166 = OpVectorShuffle %165 %165 0 0 0 0 
                                       f32_4 %167 = OpFNegate %166 
                              Uniform f32_4* %168 = OpAccessChain %23 %31 
                                       f32_4 %169 = OpLoad %168 
                                       f32_4 %170 = OpFAdd %167 %169 
                                                      OpStore %65 %170 
                                       f32_4 %172 = OpLoad %9 
                                       f32_4 %173 = OpVectorShuffle %172 %172 1 1 1 1 
                                       f32_4 %174 = OpFNegate %173 
                              Uniform f32_4* %175 = OpAccessChain %23 %26 
                                       f32_4 %176 = OpLoad %175 
                                       f32_4 %177 = OpFAdd %174 %176 
                                                      OpStore %171 %177 
                                       f32_4 %178 = OpLoad %9 
                                       f32_4 %179 = OpVectorShuffle %178 %178 2 2 2 2 
                                       f32_4 %180 = OpFNegate %179 
                              Uniform f32_4* %181 = OpAccessChain %23 %39 
                                       f32_4 %182 = OpLoad %181 
                                       f32_4 %183 = OpFAdd %180 %182 
                                                      OpStore %9 %183 
                                       f32_4 %185 = OpLoad %47 
                                       f32_4 %186 = OpVectorShuffle %185 %185 1 1 1 1 
                                       f32_4 %187 = OpLoad %171 
                                       f32_4 %188 = OpFMul %186 %187 
                                                      OpStore %184 %188 
                                       f32_4 %189 = OpLoad %171 
                                       f32_4 %190 = OpLoad %171 
                                       f32_4 %191 = OpFMul %189 %190 
                                                      OpStore %171 %191 
                                       f32_4 %192 = OpLoad %65 
                                       f32_4 %193 = OpLoad %65 
                                       f32_4 %194 = OpFMul %192 %193 
                                       f32_4 %195 = OpLoad %171 
                                       f32_4 %196 = OpFAdd %194 %195 
                                                      OpStore %171 %196 
                                       f32_4 %197 = OpLoad %65 
                                       f32_4 %198 = OpLoad %47 
                                       f32_4 %199 = OpVectorShuffle %198 %198 0 0 0 0 
                                       f32_4 %200 = OpFMul %197 %199 
                                       f32_4 %201 = OpLoad %184 
                                       f32_4 %202 = OpFAdd %200 %201 
                                                      OpStore %65 %202 
                                       f32_4 %203 = OpLoad %9 
                                       f32_4 %204 = OpLoad %47 
                                       f32_4 %205 = OpVectorShuffle %204 %204 2 2 2 2 
                                       f32_4 %206 = OpFMul %203 %205 
                                       f32_4 %207 = OpLoad %65 
                                       f32_4 %208 = OpFAdd %206 %207 
                                                      OpStore %65 %208 
                                       f32_4 %209 = OpLoad %9 
                                       f32_4 %210 = OpLoad %9 
                                       f32_4 %211 = OpFMul %209 %210 
                                       f32_4 %212 = OpLoad %171 
                                       f32_4 %213 = OpFAdd %211 %212 
                                                      OpStore %9 %213 
                                       f32_4 %214 = OpLoad %9 
                                       f32_4 %217 = OpExtInst %1 40 %214 %216 
                                                      OpStore %9 %217 
                                       f32_4 %218 = OpLoad %9 
                                       f32_4 %219 = OpExtInst %1 32 %218 
                                                      OpStore %171 %219 
                                       f32_4 %220 = OpLoad %9 
                              Uniform f32_4* %221 = OpAccessChain %23 %49 
                                       f32_4 %222 = OpLoad %221 
                                       f32_4 %223 = OpFMul %220 %222 
                                       f32_4 %226 = OpFAdd %223 %225 
                                                      OpStore %9 %226 
                                       f32_4 %227 = OpLoad %9 
                                       f32_4 %228 = OpFDiv %225 %227 
                                                      OpStore %9 %228 
                                       f32_4 %229 = OpLoad %65 
                                       f32_4 %230 = OpLoad %171 
                                       f32_4 %231 = OpFMul %229 %230 
                                                      OpStore %65 %231 
                                       f32_4 %232 = OpLoad %65 
                                       f32_4 %235 = OpExtInst %1 40 %232 %234 
                                                      OpStore %65 %235 
                                       f32_4 %236 = OpLoad %9 
                                       f32_4 %237 = OpLoad %65 
                                       f32_4 %238 = OpFMul %236 %237 
                                                      OpStore %9 %238 
                                       f32_4 %239 = OpLoad %9 
                                       f32_3 %240 = OpVectorShuffle %239 %239 1 1 1 
                              Uniform f32_4* %242 = OpAccessChain %23 %241 %26 
                                       f32_4 %243 = OpLoad %242 
                                       f32_3 %244 = OpVectorShuffle %243 %243 0 1 2 
                                       f32_3 %245 = OpFMul %240 %244 
                                       f32_4 %246 = OpLoad %65 
                                       f32_4 %247 = OpVectorShuffle %246 %245 4 5 6 3 
                                                      OpStore %65 %247 
                              Uniform f32_4* %248 = OpAccessChain %23 %241 %31 
                                       f32_4 %249 = OpLoad %248 
                                       f32_3 %250 = OpVectorShuffle %249 %249 0 1 2 
                                       f32_4 %251 = OpLoad %9 
                                       f32_3 %252 = OpVectorShuffle %251 %251 0 0 0 
                                       f32_3 %253 = OpFMul %250 %252 
                                       f32_4 %254 = OpLoad %65 
                                       f32_3 %255 = OpVectorShuffle %254 %254 0 1 2 
                                       f32_3 %256 = OpFAdd %253 %255 
                                       f32_4 %257 = OpLoad %65 
                                       f32_4 %258 = OpVectorShuffle %257 %256 4 5 6 3 
                                                      OpStore %65 %258 
                              Uniform f32_4* %259 = OpAccessChain %23 %241 %39 
                                       f32_4 %260 = OpLoad %259 
                                       f32_3 %261 = OpVectorShuffle %260 %260 0 1 2 
                                       f32_4 %262 = OpLoad %9 
                                       f32_3 %263 = OpVectorShuffle %262 %262 2 2 2 
                                       f32_3 %264 = OpFMul %261 %263 
                                       f32_4 %265 = OpLoad %65 
                                       f32_3 %266 = OpVectorShuffle %265 %265 0 1 2 
                                       f32_3 %267 = OpFAdd %264 %266 
                                       f32_4 %268 = OpLoad %9 
                                       f32_4 %269 = OpVectorShuffle %268 %267 4 5 6 3 
                                                      OpStore %9 %269 
                              Uniform f32_4* %270 = OpAccessChain %23 %241 %49 
                                       f32_4 %271 = OpLoad %270 
                                       f32_3 %272 = OpVectorShuffle %271 %271 0 1 2 
                                       f32_4 %273 = OpLoad %9 
                                       f32_3 %274 = OpVectorShuffle %273 %273 3 3 3 
                                       f32_3 %275 = OpFMul %272 %274 
                                       f32_4 %276 = OpLoad %9 
                                       f32_3 %277 = OpVectorShuffle %276 %276 0 1 2 
                                       f32_3 %278 = OpFAdd %275 %277 
                                       f32_4 %279 = OpLoad %9 
                                       f32_4 %280 = OpVectorShuffle %279 %278 4 5 6 3 
                                                      OpStore %9 %280 
                                       f32_4 %281 = OpLoad %9 
                                       f32_3 %282 = OpVectorShuffle %281 %281 0 1 2 
                                       f32_3 %285 = OpFMul %282 %284 
                                       f32_3 %288 = OpFAdd %285 %287 
                                       f32_4 %289 = OpLoad %65 
                                       f32_4 %290 = OpVectorShuffle %289 %288 4 5 6 3 
                                                      OpStore %65 %290 
                                       f32_4 %291 = OpLoad %9 
                                       f32_3 %292 = OpVectorShuffle %291 %291 0 1 2 
                                       f32_4 %293 = OpLoad %65 
                                       f32_3 %294 = OpVectorShuffle %293 %293 0 1 2 
                                       f32_3 %295 = OpFMul %292 %294 
                                       f32_3 %298 = OpFAdd %295 %297 
                                       f32_4 %299 = OpLoad %65 
                                       f32_4 %300 = OpVectorShuffle %299 %298 4 5 6 3 
                                                      OpStore %65 %300 
                                Private f32* %303 = OpAccessChain %47 %86 
                                         f32 %304 = OpLoad %303 
                                Private f32* %305 = OpAccessChain %47 %86 
                                         f32 %306 = OpLoad %305 
                                         f32 %307 = OpFMul %304 %306 
                                Private f32* %308 = OpAccessChain %302 %127 
                                                      OpStore %308 %307 
                                Private f32* %309 = OpAccessChain %47 %127 
                                         f32 %310 = OpLoad %309 
                                Private f32* %311 = OpAccessChain %47 %127 
                                         f32 %312 = OpLoad %311 
                                         f32 %313 = OpFMul %310 %312 
                                Private f32* %314 = OpAccessChain %302 %127 
                                         f32 %315 = OpLoad %314 
                                         f32 %316 = OpFNegate %315 
                                         f32 %317 = OpFAdd %313 %316 
                                Private f32* %318 = OpAccessChain %302 %127 
                                                      OpStore %318 %317 
                                       f32_4 %320 = OpLoad %47 
                                       f32_4 %321 = OpVectorShuffle %320 %320 1 2 2 0 
                                       f32_4 %322 = OpLoad %47 
                                       f32_4 %323 = OpVectorShuffle %322 %322 0 1 2 2 
                                       f32_4 %324 = OpFMul %321 %323 
                                                      OpStore %319 %324 
                              Uniform f32_4* %327 = OpAccessChain %23 %326 
                                       f32_4 %328 = OpLoad %327 
                                       f32_4 %329 = OpLoad %319 
                                         f32 %330 = OpDot %328 %329 
                                Private f32* %331 = OpAccessChain %325 %127 
                                                      OpStore %331 %330 
                              Uniform f32_4* %333 = OpAccessChain %23 %332 
                                       f32_4 %334 = OpLoad %333 
                                       f32_4 %335 = OpLoad %319 
                                         f32 %336 = OpDot %334 %335 
                                Private f32* %337 = OpAccessChain %325 %86 
                                                      OpStore %337 %336 
                              Uniform f32_4* %339 = OpAccessChain %23 %338 
                                       f32_4 %340 = OpLoad %339 
                                       f32_4 %341 = OpLoad %319 
                                         f32 %342 = OpDot %340 %341 
                                Private f32* %343 = OpAccessChain %325 %141 
                                                      OpStore %343 %342 
                              Uniform f32_4* %345 = OpAccessChain %23 %344 
                                       f32_4 %346 = OpLoad %345 
                                       f32_3 %347 = OpVectorShuffle %346 %346 0 1 2 
                                       f32_3 %348 = OpLoad %302 
                                       f32_3 %349 = OpVectorShuffle %348 %348 0 0 0 
                                       f32_3 %350 = OpFMul %347 %349 
                                       f32_3 %351 = OpLoad %325 
                                       f32_3 %352 = OpFAdd %350 %351 
                                                      OpStore %302 %352 
                                       f32_4 %354 = OpLoad %9 
                                       f32_3 %355 = OpVectorShuffle %354 %354 0 1 2 
                                       f32_4 %356 = OpLoad %65 
                                       f32_3 %357 = OpVectorShuffle %356 %356 0 1 2 
                                       f32_3 %358 = OpFMul %355 %357 
                                       f32_3 %359 = OpLoad %302 
                                       f32_3 %360 = OpFAdd %358 %359 
                                                      OpStore vs_TEXCOORD3 %360 
                                                      OpStore vs_TEXCOORD5 %234 
                                                      OpStore vs_TEXCOORD6 %234 
                                 Output f32* %364 = OpAccessChain %90 %31 %86 
                                         f32 %365 = OpLoad %364 
                                         f32 %366 = OpFNegate %365 
                                 Output f32* %367 = OpAccessChain %90 %31 %86 
                                                      OpStore %367 %366 
                                                      OpReturn
                                                      OpFunctionEnd
; SPIR-V
; Version: 1.0
; Generator: Khronos Glslang Reference Front End; 6
; Bound: 377
; Schema: 0
                                                      OpCapability Shader 
                                               %1 = OpExtInstImport "GLSL.std.450" 
                                                      OpMemoryModel Logical GLSL450 
                                                      OpEntryPoint Fragment %4 "main" %11 %60 %293 %341 %366 
                                                      OpExecutionMode %4 OriginUpperLeft 
                                                      OpName vs_TEXCOORD2 "vs_TEXCOORD2" 
                                                      OpName vs_TEXCOORD1 "vs_TEXCOORD1" 
                                                      OpName vs_TEXCOORD0 "vs_TEXCOORD0" 
                                                      OpName vs_TEXCOORD3 "vs_TEXCOORD3" 
                                                      OpDecorate vs_TEXCOORD2 Location 11 
                                                      OpMemberDecorate %15 0 Offset 15 
                                                      OpMemberDecorate %15 1 RelaxedPrecision 
                                                      OpMemberDecorate %15 1 Offset 15 
                                                      OpMemberDecorate %15 2 RelaxedPrecision 
                                                      OpMemberDecorate %15 2 Offset 15 
                                                      OpMemberDecorate %15 3 RelaxedPrecision 
                                                      OpMemberDecorate %15 3 Offset 15 
                                                      OpMemberDecorate %15 4 RelaxedPrecision 
                                                      OpMemberDecorate %15 4 Offset 15 
                                                      OpMemberDecorate %15 5 RelaxedPrecision 
                                                      OpMemberDecorate %15 5 Offset 15 
                                                      OpMemberDecorate %15 6 RelaxedPrecision 
                                                      OpMemberDecorate %15 6 Offset 15 
                                                      OpMemberDecorate %15 7 RelaxedPrecision 
                                                      OpMemberDecorate %15 7 Offset 15 
                                                      OpMemberDecorate %15 8 RelaxedPrecision 
                                                      OpMemberDecorate %15 8 Offset 15 
                                                      OpMemberDecorate %15 9 RelaxedPrecision 
                                                      OpMemberDecorate %15 9 Offset 15 
                                                      OpMemberDecorate %15 10 RelaxedPrecision 
                                                      OpMemberDecorate %15 10 Offset 15 
                                                      OpMemberDecorate %15 11 RelaxedPrecision 
                                                      OpMemberDecorate %15 11 Offset 15 
                                                      OpMemberDecorate %15 12 RelaxedPrecision 
                                                      OpMemberDecorate %15 12 Offset 15 
                                                      OpMemberDecorate %15 13 RelaxedPrecision 
                                                      OpMemberDecorate %15 13 Offset 15 
                                                      OpDecorate %15 Block 
                                                      OpDecorate %17 DescriptorSet 17 
                                                      OpDecorate %17 Binding 17 
                                                      OpDecorate %32 RelaxedPrecision 
                                                      OpDecorate %40 RelaxedPrecision 
                                                      OpDecorate %41 RelaxedPrecision 
                                                      OpDecorate %45 RelaxedPrecision 
                                                      OpDecorate %46 RelaxedPrecision 
                                                      OpDecorate %47 RelaxedPrecision 
                                                      OpDecorate %48 RelaxedPrecision 
                                                      OpDecorate %49 RelaxedPrecision 
                                                      OpDecorate %50 RelaxedPrecision 
                                                      OpDecorate %51 RelaxedPrecision 
                                                      OpDecorate %52 RelaxedPrecision 
                                                      OpDecorate %53 RelaxedPrecision 
                                                      OpDecorate %54 RelaxedPrecision 
                                                      OpDecorate %55 RelaxedPrecision 
                                                      OpDecorate %56 RelaxedPrecision 
                                                      OpDecorate %57 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD1 Location 60 
                                                      OpDecorate %64 RelaxedPrecision 
                                                      OpDecorate %65 RelaxedPrecision 
                                                      OpDecorate %66 RelaxedPrecision 
                                                      OpDecorate %67 RelaxedPrecision 
                                                      OpDecorate %71 RelaxedPrecision 
                                                      OpDecorate %72 RelaxedPrecision 
                                                      OpDecorate %73 RelaxedPrecision 
                                                      OpDecorate %74 RelaxedPrecision 
                                                      OpDecorate %78 RelaxedPrecision 
                                                      OpDecorate %80 RelaxedPrecision 
                                                      OpDecorate %81 RelaxedPrecision 
                                                      OpDecorate %82 RelaxedPrecision 
                                                      OpDecorate %86 RelaxedPrecision 
                                                      OpDecorate %87 RelaxedPrecision 
                                                      OpDecorate %90 RelaxedPrecision 
                                                      OpDecorate %94 RelaxedPrecision 
                                                      OpDecorate %95 RelaxedPrecision 
                                                      OpDecorate %100 RelaxedPrecision 
                                                      OpDecorate %102 RelaxedPrecision 
                                                      OpDecorate %107 RelaxedPrecision 
                                                      OpDecorate %116 RelaxedPrecision 
                                                      OpDecorate %117 RelaxedPrecision 
                                                      OpDecorate %119 RelaxedPrecision 
                                                      OpDecorate %120 RelaxedPrecision 
                                                      OpDecorate %127 RelaxedPrecision 
                                                      OpDecorate %128 RelaxedPrecision 
                                                      OpDecorate %131 RelaxedPrecision 
                                                      OpDecorate %133 RelaxedPrecision 
                                                      OpDecorate %134 RelaxedPrecision 
                                                      OpDecorate %135 RelaxedPrecision 
                                                      OpDecorate %138 RelaxedPrecision 
                                                      OpDecorate %139 RelaxedPrecision 
                                                      OpDecorate %140 RelaxedPrecision 
                                                      OpDecorate %141 RelaxedPrecision 
                                                      OpDecorate %173 RelaxedPrecision 
                                                      OpDecorate %174 RelaxedPrecision 
                                                      OpDecorate %177 RelaxedPrecision 
                                                      OpDecorate %178 RelaxedPrecision 
                                                      OpDecorate %179 RelaxedPrecision 
                                                      OpDecorate %184 RelaxedPrecision 
                                                      OpDecorate %185 RelaxedPrecision 
                                                      OpDecorate %189 RelaxedPrecision 
                                                      OpDecorate %190 RelaxedPrecision 
                                                      OpDecorate %191 RelaxedPrecision 
                                                      OpDecorate %194 RelaxedPrecision 
                                                      OpDecorate %195 RelaxedPrecision 
                                                      OpDecorate %197 RelaxedPrecision 
                                                      OpDecorate %199 RelaxedPrecision 
                                                      OpDecorate %200 RelaxedPrecision 
                                                      OpDecorate %202 RelaxedPrecision 
                                                      OpDecorate %203 RelaxedPrecision 
                                                      OpDecorate %206 RelaxedPrecision 
                                                      OpDecorate %207 RelaxedPrecision 
                                                      OpDecorate %209 RelaxedPrecision 
                                                      OpDecorate %210 RelaxedPrecision 
                                                      OpDecorate %212 RelaxedPrecision 
                                                      OpDecorate %213 RelaxedPrecision 
                                                      OpDecorate %214 RelaxedPrecision 
                                                      OpDecorate %215 RelaxedPrecision 
                                                      OpDecorate %218 RelaxedPrecision 
                                                      OpDecorate %219 RelaxedPrecision 
                                                      OpDecorate %222 RelaxedPrecision 
                                                      OpDecorate %224 RelaxedPrecision 
                                                      OpDecorate %225 RelaxedPrecision 
                                                      OpDecorate %228 RelaxedPrecision 
                                                      OpDecorate %229 RelaxedPrecision 
                                                      OpDecorate %232 RelaxedPrecision 
                                                      OpDecorate %233 RelaxedPrecision 
                                                      OpDecorate %234 RelaxedPrecision 
                                                      OpDecorate %237 RelaxedPrecision 
                                                      OpDecorate %239 RelaxedPrecision 
                                                      OpDecorate %240 RelaxedPrecision 
                                                      OpDecorate %243 RelaxedPrecision 
                                                      OpDecorate %245 RelaxedPrecision 
                                                      OpDecorate %246 RelaxedPrecision 
                                                      OpDecorate %250 RelaxedPrecision 
                                                      OpDecorate %251 RelaxedPrecision 
                                                      OpDecorate %252 RelaxedPrecision 
                                                      OpDecorate %255 RelaxedPrecision 
                                                      OpDecorate %256 RelaxedPrecision 
                                                      OpDecorate %257 RelaxedPrecision 
                                                      OpDecorate %259 RelaxedPrecision 
                                                      OpDecorate %260 RelaxedPrecision 
                                                      OpDecorate %261 RelaxedPrecision 
                                                      OpDecorate %262 RelaxedPrecision 
                                                      OpDecorate %264 RelaxedPrecision 
                                                      OpDecorate %265 RelaxedPrecision 
                                                      OpDecorate %266 RelaxedPrecision 
                                                      OpDecorate %267 RelaxedPrecision 
                                                      OpDecorate %268 RelaxedPrecision 
                                                      OpDecorate %270 RelaxedPrecision 
                                                      OpDecorate %271 RelaxedPrecision 
                                                      OpDecorate %272 RelaxedPrecision 
                                                      OpDecorate %273 RelaxedPrecision 
                                                      OpDecorate %274 RelaxedPrecision 
                                                      OpDecorate %275 RelaxedPrecision 
                                                      OpDecorate %276 RelaxedPrecision 
                                                      OpDecorate %277 RelaxedPrecision 
                                                      OpDecorate %278 RelaxedPrecision 
                                                      OpDecorate %281 RelaxedPrecision 
                                                      OpDecorate %284 RelaxedPrecision 
                                                      OpDecorate %284 DescriptorSet 284 
                                                      OpDecorate %284 Binding 284 
                                                      OpDecorate %285 RelaxedPrecision 
                                                      OpDecorate %288 RelaxedPrecision 
                                                      OpDecorate %288 DescriptorSet 288 
                                                      OpDecorate %288 Binding 288 
                                                      OpDecorate %289 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD0 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD0 Location 293 
                                                      OpDecorate %294 RelaxedPrecision 
                                                      OpDecorate %295 RelaxedPrecision 
                                                      OpDecorate %296 RelaxedPrecision 
                                                      OpDecorate %297 RelaxedPrecision 
                                                      OpDecorate %300 RelaxedPrecision 
                                                      OpDecorate %301 RelaxedPrecision 
                                                      OpDecorate %302 RelaxedPrecision 
                                                      OpDecorate %303 RelaxedPrecision 
                                                      OpDecorate %304 RelaxedPrecision 
                                                      OpDecorate %306 RelaxedPrecision 
                                                      OpDecorate %307 RelaxedPrecision 
                                                      OpDecorate %308 RelaxedPrecision 
                                                      OpDecorate %309 RelaxedPrecision 
                                                      OpDecorate %310 RelaxedPrecision 
                                                      OpDecorate %311 RelaxedPrecision 
                                                      OpDecorate %312 RelaxedPrecision 
                                                      OpDecorate %323 RelaxedPrecision 
                                                      OpDecorate %329 RelaxedPrecision 
                                                      OpDecorate %335 RelaxedPrecision 
                                                      OpDecorate %340 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD3 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD3 Location 341 
                                                      OpDecorate %342 RelaxedPrecision 
                                                      OpDecorate %343 RelaxedPrecision 
                                                      OpDecorate %344 RelaxedPrecision 
                                                      OpDecorate %346 RelaxedPrecision 
                                                      OpDecorate %348 RelaxedPrecision 
                                                      OpDecorate %349 RelaxedPrecision 
                                                      OpDecorate %366 RelaxedPrecision 
                                                      OpDecorate %366 Location 366 
                                                      OpDecorate %367 RelaxedPrecision 
                                               %2 = OpTypeVoid 
                                               %3 = OpTypeFunction %2 
                                               %6 = OpTypeFloat 32 
                                               %7 = OpTypeVector %6 3 
                                               %8 = OpTypePointer Private %7 
                                Private f32_3* %9 = OpVariable Private 
                                              %10 = OpTypePointer Input %7 
                        Input f32_3* vs_TEXCOORD2 = OpVariable Input 
                                              %14 = OpTypeVector %6 4 
                                              %15 = OpTypeStruct %7 %14 %14 %14 %14 %14 %14 %14 %6 %14 %14 %6 %6 %6 
                                              %16 = OpTypePointer Uniform %15 
Uniform struct {f32_3; f32_4; f32_4; f32_4; f32_4; f32_4; f32_4; f32_4; f32; f32_4; f32_4; f32; f32; f32;}* %17 = OpVariable Uniform 
                                              %18 = OpTypeInt 32 1 
                                          i32 %19 = OpConstant 0 
                                              %20 = OpTypePointer Uniform %7 
                                              %24 = OpTypePointer Private %6 
                                 Private f32* %25 = OpVariable Private 
                                              %31 = OpTypePointer Private %14 
                               Private f32_4* %32 = OpVariable Private 
                                          i32 %37 = OpConstant 1 
                                              %38 = OpTypePointer Uniform %14 
                                 Private f32* %45 = OpVariable Private 
                        Input f32_3* vs_TEXCOORD1 = OpVariable Input 
                               Private f32_3* %66 = OpVariable Private 
                                              %75 = OpTypeInt 32 0 
                                          u32 %76 = OpConstant 0 
                                          u32 %83 = OpConstant 1 
                                              %85 = OpTypeVector %6 2 
                                          f32 %88 = OpConstant 3.674022E-40 
                                        f32_2 %89 = OpConstantComposite %88 %88 
                                          i32 %97 = OpConstant 8 
                                              %98 = OpTypePointer Uniform %6 
                                         f32 %101 = OpConstant 3.674022E-40 
                                         i32 %114 = OpConstant 13 
                                         f32 %118 = OpConstant 3.674022E-40 
                                         f32 %124 = OpConstant 3.674022E-40 
                                Private f32* %131 = OpVariable Private 
                                Private f32* %136 = OpVariable Private 
                                         f32 %142 = OpConstant 3.674022E-40 
                                         f32 %156 = OpConstant 3.674022E-40 
                                         f32 %158 = OpConstant 3.674022E-40 
                                         i32 %171 = OpConstant 5 
                                         i32 %175 = OpConstant 6 
                                         i32 %187 = OpConstant 12 
                                         i32 %192 = OpConstant 11 
                              Private f32_3* %197 = OpVariable Private 
                                         i32 %248 = OpConstant 9 
                                         i32 %253 = OpConstant 10 
                              Private f32_3* %281 = OpVariable Private 
                                             %282 = OpTypeImage %6 Dim2D 0 0 0 1 Unknown 
                                             %283 = OpTypePointer UniformConstant %282 
        UniformConstant read_only Texture2D* %284 = OpVariable UniformConstant 
                                             %286 = OpTypeSampler 
                                             %287 = OpTypePointer UniformConstant %286 
                    UniformConstant sampler* %288 = OpVariable UniformConstant 
                                             %290 = OpTypeSampledImage %282 
                                             %292 = OpTypePointer Input %85 
                        Input f32_2* vs_TEXCOORD0 = OpVariable Input 
                                         i32 %298 = OpConstant 7 
                              Private f32_3* %303 = OpVariable Private 
                              Private f32_4* %315 = OpVariable Private 
                                         u32 %319 = OpConstant 3 
                                         i32 %321 = OpConstant 2 
                                         i32 %327 = OpConstant 3 
                                         i32 %333 = OpConstant 4 
                                         u32 %338 = OpConstant 2 
                        Input f32_3* vs_TEXCOORD3 = OpVariable Input 
                                       f32_3 %345 = OpConstantComposite %88 %88 %88 
                              Private f32_3* %347 = OpVariable Private 
                                         f32 %351 = OpConstant 3.674022E-40 
                                       f32_3 %352 = OpConstantComposite %351 %351 %351 
                                         f32 %357 = OpConstant 3.674022E-40 
                                       f32_3 %358 = OpConstantComposite %357 %357 %357 
                                         f32 %360 = OpConstant 3.674022E-40 
                                       f32_3 %361 = OpConstantComposite %360 %360 %360 
                                             %365 = OpTypePointer Output %14 
                               Output f32_4* %366 = OpVariable Output 
                                             %374 = OpTypePointer Output %6 
                                          void %4 = OpFunction None %3 
                                               %5 = OpLabel 
                                        f32_3 %12 = OpLoad vs_TEXCOORD2 
                                        f32_3 %13 = OpFNegate %12 
                               Uniform f32_3* %21 = OpAccessChain %17 %19 
                                        f32_3 %22 = OpLoad %21 
                                        f32_3 %23 = OpFAdd %13 %22 
                                                      OpStore %9 %23 
                                        f32_3 %26 = OpLoad %9 
                                        f32_3 %27 = OpLoad %9 
                                          f32 %28 = OpDot %26 %27 
                                                      OpStore %25 %28 
                                          f32 %29 = OpLoad %25 
                                          f32 %30 = OpExtInst %1 32 %29 
                                                      OpStore %25 %30 
                                        f32_3 %33 = OpLoad %9 
                                          f32 %34 = OpLoad %25 
                                        f32_3 %35 = OpCompositeConstruct %34 %34 %34 
                                        f32_3 %36 = OpFMul %33 %35 
                               Uniform f32_4* %39 = OpAccessChain %17 %37 
                                        f32_4 %40 = OpLoad %39 
                                        f32_3 %41 = OpVectorShuffle %40 %40 0 1 2 
                                        f32_3 %42 = OpFAdd %36 %41 
                                        f32_4 %43 = OpLoad %32 
                                        f32_4 %44 = OpVectorShuffle %43 %42 4 5 6 3 
                                                      OpStore %32 %44 
                                        f32_4 %46 = OpLoad %32 
                                        f32_3 %47 = OpVectorShuffle %46 %46 0 1 2 
                                        f32_4 %48 = OpLoad %32 
                                        f32_3 %49 = OpVectorShuffle %48 %48 0 1 2 
                                          f32 %50 = OpDot %47 %49 
                                                      OpStore %45 %50 
                                          f32 %51 = OpLoad %45 
                                          f32 %52 = OpExtInst %1 32 %51 
                                                      OpStore %45 %52 
                                          f32 %53 = OpLoad %45 
                                        f32_3 %54 = OpCompositeConstruct %53 %53 %53 
                                        f32_4 %55 = OpLoad %32 
                                        f32_3 %56 = OpVectorShuffle %55 %55 0 1 2 
                                        f32_3 %57 = OpFMul %54 %56 
                                        f32_4 %58 = OpLoad %32 
                                        f32_4 %59 = OpVectorShuffle %58 %57 4 5 6 3 
                                                      OpStore %32 %59 
                                        f32_3 %61 = OpLoad vs_TEXCOORD1 
                                        f32_3 %62 = OpLoad vs_TEXCOORD1 
                                          f32 %63 = OpDot %61 %62 
                                                      OpStore %45 %63 
                                          f32 %64 = OpLoad %45 
                                          f32 %65 = OpExtInst %1 32 %64 
                                                      OpStore %45 %65 
                                          f32 %67 = OpLoad %45 
                                        f32_3 %68 = OpCompositeConstruct %67 %67 %67 
                                        f32_3 %69 = OpLoad vs_TEXCOORD1 
                                        f32_3 %70 = OpFMul %68 %69 
                                                      OpStore %66 %70 
                                        f32_3 %71 = OpLoad %66 
                                        f32_4 %72 = OpLoad %32 
                                        f32_3 %73 = OpVectorShuffle %72 %72 0 1 2 
                                          f32 %74 = OpDot %71 %73 
                                 Private f32* %77 = OpAccessChain %32 %76 
                                                      OpStore %77 %74 
                                        f32_3 %78 = OpLoad %66 
                               Uniform f32_4* %79 = OpAccessChain %17 %37 
                                        f32_4 %80 = OpLoad %79 
                                        f32_3 %81 = OpVectorShuffle %80 %80 0 1 2 
                                          f32 %82 = OpDot %78 %81 
                                 Private f32* %84 = OpAccessChain %32 %83 
                                                      OpStore %84 %82 
                                        f32_4 %86 = OpLoad %32 
                                        f32_2 %87 = OpVectorShuffle %86 %86 0 1 
                                        f32_2 %90 = OpExtInst %1 40 %87 %89 
                                        f32_4 %91 = OpLoad %32 
                                        f32_4 %92 = OpVectorShuffle %91 %90 4 5 2 3 
                                                      OpStore %32 %92 
                                 Private f32* %93 = OpAccessChain %32 %76 
                                          f32 %94 = OpLoad %93 
                                          f32 %95 = OpExtInst %1 30 %94 
                                 Private f32* %96 = OpAccessChain %9 %76 
                                                      OpStore %96 %95 
                                 Uniform f32* %99 = OpAccessChain %17 %97 
                                         f32 %100 = OpLoad %99 
                                         f32 %102 = OpFMul %100 %101 
                                Private f32* %103 = OpAccessChain %32 %76 
                                                      OpStore %103 %102 
                                Private f32* %104 = OpAccessChain %9 %76 
                                         f32 %105 = OpLoad %104 
                                Private f32* %106 = OpAccessChain %32 %76 
                                         f32 %107 = OpLoad %106 
                                         f32 %108 = OpFMul %105 %107 
                                Private f32* %109 = OpAccessChain %9 %76 
                                                      OpStore %109 %108 
                                Private f32* %110 = OpAccessChain %9 %76 
                                         f32 %111 = OpLoad %110 
                                         f32 %112 = OpExtInst %1 29 %111 
                                Private f32* %113 = OpAccessChain %9 %76 
                                                      OpStore %113 %112 
                                Uniform f32* %115 = OpAccessChain %17 %114 
                                         f32 %116 = OpLoad %115 
                                         f32 %117 = OpFNegate %116 
                                         f32 %119 = OpFMul %117 %118 
                                         f32 %120 = OpFAdd %119 %118 
                                Private f32* %121 = OpAccessChain %32 %76 
                                                      OpStore %121 %120 
                                Private f32* %122 = OpAccessChain %9 %76 
                                         f32 %123 = OpLoad %122 
                                         f32 %125 = OpFMul %123 %124 
                                Private f32* %126 = OpAccessChain %32 %76 
                                         f32 %127 = OpLoad %126 
                                         f32 %128 = OpFNegate %127 
                                         f32 %129 = OpFAdd %125 %128 
                                Private f32* %130 = OpAccessChain %9 %76 
                                                      OpStore %130 %129 
                                Uniform f32* %132 = OpAccessChain %17 %114 
                                         f32 %133 = OpLoad %132 
                                         f32 %134 = OpFMul %133 %118 
                                         f32 %135 = OpFAdd %134 %118 
                                                      OpStore %131 %135 
                                Private f32* %137 = OpAccessChain %32 %76 
                                         f32 %138 = OpLoad %137 
                                         f32 %139 = OpFNegate %138 
                                         f32 %140 = OpLoad %131 
                                         f32 %141 = OpFAdd %139 %140 
                                                      OpStore %136 %141 
                                         f32 %143 = OpLoad %136 
                                         f32 %144 = OpFDiv %142 %143 
                                                      OpStore %136 %144 
                                         f32 %145 = OpLoad %136 
                                Private f32* %146 = OpAccessChain %9 %76 
                                         f32 %147 = OpLoad %146 
                                         f32 %148 = OpFMul %145 %147 
                                Private f32* %149 = OpAccessChain %9 %76 
                                                      OpStore %149 %148 
                                Private f32* %150 = OpAccessChain %9 %76 
                                         f32 %151 = OpLoad %150 
                                         f32 %152 = OpExtInst %1 43 %151 %88 %142 
                                Private f32* %153 = OpAccessChain %9 %76 
                                                      OpStore %153 %152 
                                Private f32* %154 = OpAccessChain %9 %76 
                                         f32 %155 = OpLoad %154 
                                         f32 %157 = OpFMul %155 %156 
                                         f32 %159 = OpFAdd %157 %158 
                                                      OpStore %136 %159 
                                Private f32* %160 = OpAccessChain %9 %76 
                                         f32 %161 = OpLoad %160 
                                Private f32* %162 = OpAccessChain %9 %76 
                                         f32 %163 = OpLoad %162 
                                         f32 %164 = OpFMul %161 %163 
                                Private f32* %165 = OpAccessChain %9 %76 
                                                      OpStore %165 %164 
                                Private f32* %166 = OpAccessChain %9 %76 
                                         f32 %167 = OpLoad %166 
                                         f32 %168 = OpLoad %136 
                                         f32 %169 = OpFMul %167 %168 
                                Private f32* %170 = OpAccessChain %9 %76 
                                                      OpStore %170 %169 
                              Uniform f32_4* %172 = OpAccessChain %17 %171 
                                       f32_4 %173 = OpLoad %172 
                                       f32_3 %174 = OpVectorShuffle %173 %173 0 1 2 
                              Uniform f32_4* %176 = OpAccessChain %17 %175 
                                       f32_4 %177 = OpLoad %176 
                                       f32_3 %178 = OpVectorShuffle %177 %177 0 1 2 
                                       f32_3 %179 = OpFMul %174 %178 
                                       f32_4 %180 = OpLoad %32 
                                       f32_4 %181 = OpVectorShuffle %180 %179 4 1 5 6 
                                                      OpStore %32 %181 
                                       f32_3 %182 = OpLoad %9 
                                       f32_3 %183 = OpVectorShuffle %182 %182 0 0 0 
                                       f32_4 %184 = OpLoad %32 
                                       f32_3 %185 = OpVectorShuffle %184 %184 0 2 3 
                                       f32_3 %186 = OpFMul %183 %185 
                                                      OpStore %9 %186 
                                Uniform f32* %188 = OpAccessChain %17 %187 
                                         f32 %189 = OpLoad %188 
                                         f32 %190 = OpFNegate %189 
                                         f32 %191 = OpFMul %190 %118 
                                Uniform f32* %193 = OpAccessChain %17 %192 
                                         f32 %194 = OpLoad %193 
                                         f32 %195 = OpFAdd %191 %194 
                                Private f32* %196 = OpAccessChain %32 %76 
                                                      OpStore %196 %195 
                                Private f32* %198 = OpAccessChain %32 %76 
                                         f32 %199 = OpLoad %198 
                                         f32 %200 = OpFNegate %199 
                                Private f32* %201 = OpAccessChain %32 %83 
                                         f32 %202 = OpLoad %201 
                                         f32 %203 = OpFAdd %200 %202 
                                Private f32* %204 = OpAccessChain %197 %76 
                                                      OpStore %204 %203 
                                Uniform f32* %205 = OpAccessChain %17 %187 
                                         f32 %206 = OpLoad %205 
                                         f32 %207 = OpFMul %206 %118 
                                Uniform f32* %208 = OpAccessChain %17 %192 
                                         f32 %209 = OpLoad %208 
                                         f32 %210 = OpFAdd %207 %209 
                                                      OpStore %131 %210 
                                Private f32* %211 = OpAccessChain %32 %76 
                                         f32 %212 = OpLoad %211 
                                         f32 %213 = OpFNegate %212 
                                         f32 %214 = OpLoad %131 
                                         f32 %215 = OpFAdd %213 %214 
                                Private f32* %216 = OpAccessChain %32 %76 
                                                      OpStore %216 %215 
                                Private f32* %217 = OpAccessChain %32 %76 
                                         f32 %218 = OpLoad %217 
                                         f32 %219 = OpFDiv %142 %218 
                                Private f32* %220 = OpAccessChain %32 %76 
                                                      OpStore %220 %219 
                                Private f32* %221 = OpAccessChain %32 %76 
                                         f32 %222 = OpLoad %221 
                                Private f32* %223 = OpAccessChain %197 %76 
                                         f32 %224 = OpLoad %223 
                                         f32 %225 = OpFMul %222 %224 
                                Private f32* %226 = OpAccessChain %32 %76 
                                                      OpStore %226 %225 
                                Private f32* %227 = OpAccessChain %32 %76 
                                         f32 %228 = OpLoad %227 
                                         f32 %229 = OpExtInst %1 43 %228 %88 %142 
                                Private f32* %230 = OpAccessChain %32 %76 
                                                      OpStore %230 %229 
                                Private f32* %231 = OpAccessChain %32 %76 
                                         f32 %232 = OpLoad %231 
                                         f32 %233 = OpFMul %232 %156 
                                         f32 %234 = OpFAdd %233 %158 
                                Private f32* %235 = OpAccessChain %197 %76 
                                                      OpStore %235 %234 
                                Private f32* %236 = OpAccessChain %32 %76 
                                         f32 %237 = OpLoad %236 
                                Private f32* %238 = OpAccessChain %32 %76 
                                         f32 %239 = OpLoad %238 
                                         f32 %240 = OpFMul %237 %239 
                                Private f32* %241 = OpAccessChain %32 %76 
                                                      OpStore %241 %240 
                                Private f32* %242 = OpAccessChain %32 %76 
                                         f32 %243 = OpLoad %242 
                                Private f32* %244 = OpAccessChain %197 %76 
                                         f32 %245 = OpLoad %244 
                                         f32 %246 = OpFMul %243 %245 
                                Private f32* %247 = OpAccessChain %32 %76 
                                                      OpStore %247 %246 
                              Uniform f32_4* %249 = OpAccessChain %17 %248 
                                       f32_4 %250 = OpLoad %249 
                                       f32_3 %251 = OpVectorShuffle %250 %250 0 1 2 
                                       f32_3 %252 = OpFNegate %251 
                              Uniform f32_4* %254 = OpAccessChain %17 %253 
                                       f32_4 %255 = OpLoad %254 
                                       f32_3 %256 = OpVectorShuffle %255 %255 0 1 2 
                                       f32_3 %257 = OpFAdd %252 %256 
                                                      OpStore %197 %257 
                              Uniform f32_4* %258 = OpAccessChain %17 %253 
                                       f32_4 %259 = OpLoad %258 
                                       f32_3 %260 = OpVectorShuffle %259 %259 3 3 3 
                                       f32_3 %261 = OpLoad %197 
                                       f32_3 %262 = OpFMul %260 %261 
                              Uniform f32_4* %263 = OpAccessChain %17 %248 
                                       f32_4 %264 = OpLoad %263 
                                       f32_3 %265 = OpVectorShuffle %264 %264 0 1 2 
                                       f32_3 %266 = OpFAdd %262 %265 
                                                      OpStore %197 %266 
                                       f32_3 %267 = OpLoad %197 
                                       f32_3 %268 = OpFNegate %267 
                              Uniform f32_4* %269 = OpAccessChain %17 %248 
                                       f32_4 %270 = OpLoad %269 
                                       f32_3 %271 = OpVectorShuffle %270 %270 0 1 2 
                                       f32_3 %272 = OpFAdd %268 %271 
                                                      OpStore %66 %272 
                                       f32_4 %273 = OpLoad %32 
                                       f32_3 %274 = OpVectorShuffle %273 %273 0 0 0 
                                       f32_3 %275 = OpLoad %66 
                                       f32_3 %276 = OpFMul %274 %275 
                                       f32_3 %277 = OpLoad %197 
                                       f32_3 %278 = OpFAdd %276 %277 
                                       f32_4 %279 = OpLoad %32 
                                       f32_4 %280 = OpVectorShuffle %279 %278 4 5 6 3 
                                                      OpStore %32 %280 
                         read_only Texture2D %285 = OpLoad %284 
                                     sampler %289 = OpLoad %288 
                  read_only Texture2DSampled %291 = OpSampledImage %285 %289 
                                       f32_2 %294 = OpLoad vs_TEXCOORD0 
                                       f32_4 %295 = OpImageSampleImplicitLod %291 %294 
                                       f32_3 %296 = OpVectorShuffle %295 %295 0 1 2 
                                                      OpStore %281 %296 
                                       f32_3 %297 = OpLoad %281 
                              Uniform f32_4* %299 = OpAccessChain %17 %298 
                                       f32_4 %300 = OpLoad %299 
                                       f32_3 %301 = OpVectorShuffle %300 %300 0 1 2 
                                       f32_3 %302 = OpFMul %297 %301 
                                                      OpStore %66 %302 
                                       f32_3 %304 = OpLoad %66 
                              Uniform f32_4* %305 = OpAccessChain %17 %171 
                                       f32_4 %306 = OpLoad %305 
                                       f32_3 %307 = OpVectorShuffle %306 %306 0 1 2 
                                       f32_3 %308 = OpFMul %304 %307 
                                                      OpStore %303 %308 
                                       f32_3 %309 = OpLoad %303 
                                       f32_4 %310 = OpLoad %32 
                                       f32_3 %311 = OpVectorShuffle %310 %310 0 1 2 
                                       f32_3 %312 = OpFMul %309 %311 
                                       f32_3 %313 = OpLoad %9 
                                       f32_3 %314 = OpFAdd %312 %313 
                                                      OpStore %9 %314 
                                       f32_3 %316 = OpLoad vs_TEXCOORD1 
                                       f32_4 %317 = OpLoad %315 
                                       f32_4 %318 = OpVectorShuffle %317 %316 4 5 6 3 
                                                      OpStore %315 %318 
                                Private f32* %320 = OpAccessChain %315 %319 
                                                      OpStore %320 %142 
                              Uniform f32_4* %322 = OpAccessChain %17 %321 
                                       f32_4 %323 = OpLoad %322 
                                       f32_4 %324 = OpLoad %315 
                                         f32 %325 = OpDot %323 %324 
                                Private f32* %326 = OpAccessChain %303 %76 
                                                      OpStore %326 %325 
                              Uniform f32_4* %328 = OpAccessChain %17 %327 
                                       f32_4 %329 = OpLoad %328 
                                       f32_4 %330 = OpLoad %315 
                                         f32 %331 = OpDot %329 %330 
                                Private f32* %332 = OpAccessChain %303 %83 
                                                      OpStore %332 %331 
                              Uniform f32_4* %334 = OpAccessChain %17 %333 
                                       f32_4 %335 = OpLoad %334 
                                       f32_4 %336 = OpLoad %315 
                                         f32 %337 = OpDot %335 %336 
                                Private f32* %339 = OpAccessChain %303 %338 
                                                      OpStore %339 %337 
                                       f32_3 %340 = OpLoad %303 
                                       f32_3 %342 = OpLoad vs_TEXCOORD3 
                                       f32_3 %343 = OpFAdd %340 %342 
                                                      OpStore %303 %343 
                                       f32_3 %344 = OpLoad %303 
                                       f32_3 %346 = OpExtInst %1 40 %344 %345 
                                                      OpStore %303 %346 
                                       f32_3 %348 = OpLoad %303 
                                       f32_3 %349 = OpExtInst %1 30 %348 
                                                      OpStore %347 %349 
                                       f32_3 %350 = OpLoad %347 
                                       f32_3 %353 = OpFMul %350 %352 
                                                      OpStore %347 %353 
                                       f32_3 %354 = OpLoad %347 
                                       f32_3 %355 = OpExtInst %1 29 %354 
                                                      OpStore %347 %355 
                                       f32_3 %356 = OpLoad %347 
                                       f32_3 %359 = OpFMul %356 %358 
                                       f32_3 %362 = OpFAdd %359 %361 
                                                      OpStore %347 %362 
                                       f32_3 %363 = OpLoad %347 
                                       f32_3 %364 = OpExtInst %1 40 %363 %345 
                                                      OpStore %347 %364 
                                       f32_3 %367 = OpLoad %66 
                                       f32_3 %368 = OpLoad %347 
                                       f32_3 %369 = OpFMul %367 %368 
                                       f32_3 %370 = OpLoad %9 
                                       f32_3 %371 = OpFAdd %369 %370 
                                       f32_4 %372 = OpLoad %366 
                                       f32_4 %373 = OpVectorShuffle %372 %371 4 5 6 3 
                                                      OpStore %366 %373 
                                 Output f32* %375 = OpAccessChain %366 %319 
                                                      OpStore %375 %142 
                                                      OpReturn
                                                      OpFunctionEnd
"
}
SubProgram "gles3 hw_tier00 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "VERTEXLIGHT_ON" }
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in highp vec3 in_NORMAL0;
in highp vec4 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out highp vec3 vs_TEXCOORD1;
out highp vec3 vs_TEXCOORD2;
out highp vec4 vs_TEXCOORD5;
out highp vec4 vs_TEXCOORD6;
vec4 u_xlat0;
vec4 u_xlat1;
float u_xlat6;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    vs_TEXCOORD2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
    u_xlat0 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat0;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat0;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat0.xy;
    u_xlat0.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat6 = dot(u_xlat0.xyz, u_xlat0.xyz);
    u_xlat6 = inversesqrt(u_xlat6);
    vs_TEXCOORD1.xyz = vec3(u_xlat6) * u_xlat0.xyz;
    vs_TEXCOORD5 = vec4(0.0, 0.0, 0.0, 0.0);
    vs_TEXCOORD6 = vec4(0.0, 0.0, 0.0, 0.0);
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es
#ifdef GL_EXT_shader_texture_lod
#extension GL_EXT_shader_texture_lod : enable
#endif

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec3 _WorldSpaceCameraPos;
uniform 	mediump vec4 _WorldSpaceLightPos0;
uniform 	vec4 hlslcc_mtx4x4unity_WorldToShadow[16];
uniform 	mediump vec4 _LightShadowData;
uniform 	vec4 unity_ShadowFadeCenterAndType;
uniform 	vec4 hlslcc_mtx4x4unity_MatrixV[4];
uniform 	mediump vec4 _LightColor0;
uniform 	mediump vec4 _SpecColor;
uniform 	mediump vec4 _Color;
uniform 	mediump float _Smoothness;
uniform 	mediump vec4 _HColor;
uniform 	mediump vec4 _SColor;
uniform 	mediump float _RampThreshold;
uniform 	mediump float _RampSmooth;
uniform 	mediump float _SpecSmooth;
UNITY_LOCATION(0) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(1) uniform highp sampler2D _ShadowMapTexture;
UNITY_LOCATION(2) uniform highp sampler2DShadow hlslcc_zcmp_ShadowMapTexture;
in mediump vec2 vs_TEXCOORD0;
in highp vec3 vs_TEXCOORD1;
in highp vec3 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_1;
mediump vec3 u_xlat16_2;
vec3 u_xlat3;
mediump vec3 u_xlat16_3;
float u_xlat4;
mediump vec3 u_xlat16_5;
mediump float u_xlat16_9;
float u_xlat12;
mediump float u_xlat16_13;
void main()
{
    u_xlat0.xyz = (-vs_TEXCOORD2.xyz) + _WorldSpaceCameraPos.xyz;
    u_xlat12 = dot(u_xlat0.xyz, u_xlat0.xyz);
    u_xlat12 = inversesqrt(u_xlat12);
    u_xlat16_1.xyz = u_xlat0.xyz * vec3(u_xlat12) + _WorldSpaceLightPos0.xyz;
    u_xlat16_13 = dot(u_xlat16_1.xyz, u_xlat16_1.xyz);
    u_xlat16_13 = inversesqrt(u_xlat16_13);
    u_xlat16_1.xyz = vec3(u_xlat16_13) * u_xlat16_1.xyz;
    u_xlat16_13 = dot(vs_TEXCOORD1.xyz, vs_TEXCOORD1.xyz);
    u_xlat16_13 = inversesqrt(u_xlat16_13);
    u_xlat16_2.xyz = vec3(u_xlat16_13) * vs_TEXCOORD1.xyz;
    u_xlat16_1.x = dot(u_xlat16_2.xyz, u_xlat16_1.xyz);
    u_xlat16_1.y = dot(u_xlat16_2.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat16_1.xy = max(u_xlat16_1.xy, vec2(0.0, 0.0));
    u_xlat12 = log2(u_xlat16_1.x);
    u_xlat16_1.x = _Smoothness * 128.0;
    u_xlat12 = u_xlat12 * u_xlat16_1.x;
    u_xlat12 = exp2(u_xlat12);
    u_xlat16_1.x = (-_SpecSmooth) * 0.5 + 0.5;
    u_xlat12 = u_xlat12 * 2.0 + (-u_xlat16_1.x);
    u_xlat16_9 = _SpecSmooth * 0.5 + 0.5;
    u_xlat3.x = (-u_xlat16_1.x) + u_xlat16_9;
    u_xlat3.x = float(1.0) / u_xlat3.x;
    u_xlat12 = u_xlat12 * u_xlat3.x;
#ifdef UNITY_ADRENO_ES3
    u_xlat12 = min(max(u_xlat12, 0.0), 1.0);
#else
    u_xlat12 = clamp(u_xlat12, 0.0, 1.0);
#endif
    u_xlat3.x = u_xlat12 * -2.0 + 3.0;
    u_xlat12 = u_xlat12 * u_xlat12;
    u_xlat12 = u_xlat12 * u_xlat3.x;
    u_xlat3.x = hlslcc_mtx4x4unity_MatrixV[0].z;
    u_xlat3.y = hlslcc_mtx4x4unity_MatrixV[1].z;
    u_xlat3.z = hlslcc_mtx4x4unity_MatrixV[2].z;
    u_xlat0.x = dot(u_xlat0.xyz, u_xlat3.xyz);
    u_xlat3.xyz = vs_TEXCOORD2.xyz + (-unity_ShadowFadeCenterAndType.xyz);
    u_xlat4 = dot(u_xlat3.xyz, u_xlat3.xyz);
    u_xlat4 = sqrt(u_xlat4);
    u_xlat4 = (-u_xlat0.x) + u_xlat4;
    u_xlat0.x = unity_ShadowFadeCenterAndType.w * u_xlat4 + u_xlat0.x;
    u_xlat0.x = u_xlat0.x * _LightShadowData.z + _LightShadowData.w;
#ifdef UNITY_ADRENO_ES3
    u_xlat0.x = min(max(u_xlat0.x, 0.0), 1.0);
#else
    u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);
#endif
    u_xlat3.xyz = vs_TEXCOORD2.yyy * hlslcc_mtx4x4unity_WorldToShadow[1].xyz;
    u_xlat3.xyz = hlslcc_mtx4x4unity_WorldToShadow[0].xyz * vs_TEXCOORD2.xxx + u_xlat3.xyz;
    u_xlat3.xyz = hlslcc_mtx4x4unity_WorldToShadow[2].xyz * vs_TEXCOORD2.zzz + u_xlat3.xyz;
    u_xlat3.xyz = u_xlat3.xyz + hlslcc_mtx4x4unity_WorldToShadow[3].xyz;
    vec3 txVec0 = vec3(u_xlat3.xy,u_xlat3.z);
    u_xlat4 = textureLod(hlslcc_zcmp_ShadowMapTexture, txVec0, 0.0);
    u_xlat16_1.x = (-_LightShadowData.x) + 1.0;
    u_xlat16_1.x = u_xlat4 * u_xlat16_1.x + _LightShadowData.x;
    u_xlat16_9 = (-u_xlat16_1.x) + 1.0;
    u_xlat16_1.x = u_xlat0.x * u_xlat16_9 + u_xlat16_1.x;
    u_xlat0.x = u_xlat12 * u_xlat16_1.x;
    u_xlat16_2.xyz = _LightColor0.xyz * _SpecColor.xyz;
    u_xlat0.xyz = u_xlat0.xxx * u_xlat16_2.xyz;
    u_xlat16_9 = (-_RampSmooth) * 0.5 + _RampThreshold;
    u_xlat16_5.x = (-u_xlat16_9) + u_xlat16_1.y;
    u_xlat16_13 = _RampSmooth * 0.5 + _RampThreshold;
    u_xlat16_9 = (-u_xlat16_9) + u_xlat16_13;
    u_xlat16_9 = float(1.0) / u_xlat16_9;
    u_xlat16_5.x = u_xlat16_9 * u_xlat16_5.x;
#ifdef UNITY_ADRENO_ES3
    u_xlat16_5.x = min(max(u_xlat16_5.x, 0.0), 1.0);
#else
    u_xlat16_5.x = clamp(u_xlat16_5.x, 0.0, 1.0);
#endif
    u_xlat16_9 = u_xlat16_5.x * -2.0 + 3.0;
    u_xlat16_5.x = u_xlat16_5.x * u_xlat16_5.x;
    u_xlat16_5.x = u_xlat16_5.x * u_xlat16_9;
    u_xlat16_1.x = u_xlat16_1.x * u_xlat16_5.x;
    u_xlat16_5.xyz = (-_HColor.xyz) + _SColor.xyz;
    u_xlat16_5.xyz = _SColor.www * u_xlat16_5.xyz + _HColor.xyz;
    u_xlat16_2.xyz = (-u_xlat16_5.xyz) + _HColor.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xxx * u_xlat16_2.xyz + u_xlat16_5.xyz;
    u_xlat16_3.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_2.xyz = u_xlat16_3.xyz * _Color.xyz;
    u_xlat16_2.xyz = u_xlat16_2.xyz * _LightColor0.xyz;
    u_xlat0.xyz = u_xlat16_2.xyz * u_xlat16_1.xyz + u_xlat0.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier01 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "VERTEXLIGHT_ON" }
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in highp vec3 in_NORMAL0;
in highp vec4 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out highp vec3 vs_TEXCOORD1;
out highp vec3 vs_TEXCOORD2;
out highp vec4 vs_TEXCOORD5;
out highp vec4 vs_TEXCOORD6;
vec4 u_xlat0;
vec4 u_xlat1;
float u_xlat6;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    vs_TEXCOORD2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
    u_xlat0 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat0;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat0;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat0.xy;
    u_xlat0.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat6 = dot(u_xlat0.xyz, u_xlat0.xyz);
    u_xlat6 = inversesqrt(u_xlat6);
    vs_TEXCOORD1.xyz = vec3(u_xlat6) * u_xlat0.xyz;
    vs_TEXCOORD5 = vec4(0.0, 0.0, 0.0, 0.0);
    vs_TEXCOORD6 = vec4(0.0, 0.0, 0.0, 0.0);
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es
#ifdef GL_EXT_shader_texture_lod
#extension GL_EXT_shader_texture_lod : enable
#endif

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec3 _WorldSpaceCameraPos;
uniform 	mediump vec4 _WorldSpaceLightPos0;
uniform 	vec4 hlslcc_mtx4x4unity_WorldToShadow[16];
uniform 	mediump vec4 _LightShadowData;
uniform 	vec4 unity_ShadowFadeCenterAndType;
uniform 	vec4 hlslcc_mtx4x4unity_MatrixV[4];
uniform 	mediump vec4 _LightColor0;
uniform 	mediump vec4 _SpecColor;
uniform 	mediump vec4 _Color;
uniform 	mediump float _Smoothness;
uniform 	mediump vec4 _HColor;
uniform 	mediump vec4 _SColor;
uniform 	mediump float _RampThreshold;
uniform 	mediump float _RampSmooth;
uniform 	mediump float _SpecSmooth;
UNITY_LOCATION(0) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(1) uniform highp sampler2D _ShadowMapTexture;
UNITY_LOCATION(2) uniform highp sampler2DShadow hlslcc_zcmp_ShadowMapTexture;
in mediump vec2 vs_TEXCOORD0;
in highp vec3 vs_TEXCOORD1;
in highp vec3 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_1;
mediump vec3 u_xlat16_2;
vec3 u_xlat3;
mediump vec3 u_xlat16_3;
float u_xlat4;
mediump vec3 u_xlat16_5;
mediump float u_xlat16_9;
float u_xlat12;
mediump float u_xlat16_13;
void main()
{
    u_xlat0.xyz = (-vs_TEXCOORD2.xyz) + _WorldSpaceCameraPos.xyz;
    u_xlat12 = dot(u_xlat0.xyz, u_xlat0.xyz);
    u_xlat12 = inversesqrt(u_xlat12);
    u_xlat16_1.xyz = u_xlat0.xyz * vec3(u_xlat12) + _WorldSpaceLightPos0.xyz;
    u_xlat16_13 = dot(u_xlat16_1.xyz, u_xlat16_1.xyz);
    u_xlat16_13 = inversesqrt(u_xlat16_13);
    u_xlat16_1.xyz = vec3(u_xlat16_13) * u_xlat16_1.xyz;
    u_xlat16_13 = dot(vs_TEXCOORD1.xyz, vs_TEXCOORD1.xyz);
    u_xlat16_13 = inversesqrt(u_xlat16_13);
    u_xlat16_2.xyz = vec3(u_xlat16_13) * vs_TEXCOORD1.xyz;
    u_xlat16_1.x = dot(u_xlat16_2.xyz, u_xlat16_1.xyz);
    u_xlat16_1.y = dot(u_xlat16_2.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat16_1.xy = max(u_xlat16_1.xy, vec2(0.0, 0.0));
    u_xlat12 = log2(u_xlat16_1.x);
    u_xlat16_1.x = _Smoothness * 128.0;
    u_xlat12 = u_xlat12 * u_xlat16_1.x;
    u_xlat12 = exp2(u_xlat12);
    u_xlat16_1.x = (-_SpecSmooth) * 0.5 + 0.5;
    u_xlat12 = u_xlat12 * 2.0 + (-u_xlat16_1.x);
    u_xlat16_9 = _SpecSmooth * 0.5 + 0.5;
    u_xlat3.x = (-u_xlat16_1.x) + u_xlat16_9;
    u_xlat3.x = float(1.0) / u_xlat3.x;
    u_xlat12 = u_xlat12 * u_xlat3.x;
#ifdef UNITY_ADRENO_ES3
    u_xlat12 = min(max(u_xlat12, 0.0), 1.0);
#else
    u_xlat12 = clamp(u_xlat12, 0.0, 1.0);
#endif
    u_xlat3.x = u_xlat12 * -2.0 + 3.0;
    u_xlat12 = u_xlat12 * u_xlat12;
    u_xlat12 = u_xlat12 * u_xlat3.x;
    u_xlat3.x = hlslcc_mtx4x4unity_MatrixV[0].z;
    u_xlat3.y = hlslcc_mtx4x4unity_MatrixV[1].z;
    u_xlat3.z = hlslcc_mtx4x4unity_MatrixV[2].z;
    u_xlat0.x = dot(u_xlat0.xyz, u_xlat3.xyz);
    u_xlat3.xyz = vs_TEXCOORD2.xyz + (-unity_ShadowFadeCenterAndType.xyz);
    u_xlat4 = dot(u_xlat3.xyz, u_xlat3.xyz);
    u_xlat4 = sqrt(u_xlat4);
    u_xlat4 = (-u_xlat0.x) + u_xlat4;
    u_xlat0.x = unity_ShadowFadeCenterAndType.w * u_xlat4 + u_xlat0.x;
    u_xlat0.x = u_xlat0.x * _LightShadowData.z + _LightShadowData.w;
#ifdef UNITY_ADRENO_ES3
    u_xlat0.x = min(max(u_xlat0.x, 0.0), 1.0);
#else
    u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);
#endif
    u_xlat3.xyz = vs_TEXCOORD2.yyy * hlslcc_mtx4x4unity_WorldToShadow[1].xyz;
    u_xlat3.xyz = hlslcc_mtx4x4unity_WorldToShadow[0].xyz * vs_TEXCOORD2.xxx + u_xlat3.xyz;
    u_xlat3.xyz = hlslcc_mtx4x4unity_WorldToShadow[2].xyz * vs_TEXCOORD2.zzz + u_xlat3.xyz;
    u_xlat3.xyz = u_xlat3.xyz + hlslcc_mtx4x4unity_WorldToShadow[3].xyz;
    vec3 txVec0 = vec3(u_xlat3.xy,u_xlat3.z);
    u_xlat4 = textureLod(hlslcc_zcmp_ShadowMapTexture, txVec0, 0.0);
    u_xlat16_1.x = (-_LightShadowData.x) + 1.0;
    u_xlat16_1.x = u_xlat4 * u_xlat16_1.x + _LightShadowData.x;
    u_xlat16_9 = (-u_xlat16_1.x) + 1.0;
    u_xlat16_1.x = u_xlat0.x * u_xlat16_9 + u_xlat16_1.x;
    u_xlat0.x = u_xlat12 * u_xlat16_1.x;
    u_xlat16_2.xyz = _LightColor0.xyz * _SpecColor.xyz;
    u_xlat0.xyz = u_xlat0.xxx * u_xlat16_2.xyz;
    u_xlat16_9 = (-_RampSmooth) * 0.5 + _RampThreshold;
    u_xlat16_5.x = (-u_xlat16_9) + u_xlat16_1.y;
    u_xlat16_13 = _RampSmooth * 0.5 + _RampThreshold;
    u_xlat16_9 = (-u_xlat16_9) + u_xlat16_13;
    u_xlat16_9 = float(1.0) / u_xlat16_9;
    u_xlat16_5.x = u_xlat16_9 * u_xlat16_5.x;
#ifdef UNITY_ADRENO_ES3
    u_xlat16_5.x = min(max(u_xlat16_5.x, 0.0), 1.0);
#else
    u_xlat16_5.x = clamp(u_xlat16_5.x, 0.0, 1.0);
#endif
    u_xlat16_9 = u_xlat16_5.x * -2.0 + 3.0;
    u_xlat16_5.x = u_xlat16_5.x * u_xlat16_5.x;
    u_xlat16_5.x = u_xlat16_5.x * u_xlat16_9;
    u_xlat16_1.x = u_xlat16_1.x * u_xlat16_5.x;
    u_xlat16_5.xyz = (-_HColor.xyz) + _SColor.xyz;
    u_xlat16_5.xyz = _SColor.www * u_xlat16_5.xyz + _HColor.xyz;
    u_xlat16_2.xyz = (-u_xlat16_5.xyz) + _HColor.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xxx * u_xlat16_2.xyz + u_xlat16_5.xyz;
    u_xlat16_3.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_2.xyz = u_xlat16_3.xyz * _Color.xyz;
    u_xlat16_2.xyz = u_xlat16_2.xyz * _LightColor0.xyz;
    u_xlat0.xyz = u_xlat16_2.xyz * u_xlat16_1.xyz + u_xlat0.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier02 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "VERTEXLIGHT_ON" }
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in highp vec3 in_NORMAL0;
in highp vec4 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out highp vec3 vs_TEXCOORD1;
out highp vec3 vs_TEXCOORD2;
out highp vec4 vs_TEXCOORD5;
out highp vec4 vs_TEXCOORD6;
vec4 u_xlat0;
vec4 u_xlat1;
float u_xlat6;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    vs_TEXCOORD2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
    u_xlat0 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat0;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat0;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat0.xy;
    u_xlat0.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat6 = dot(u_xlat0.xyz, u_xlat0.xyz);
    u_xlat6 = inversesqrt(u_xlat6);
    vs_TEXCOORD1.xyz = vec3(u_xlat6) * u_xlat0.xyz;
    vs_TEXCOORD5 = vec4(0.0, 0.0, 0.0, 0.0);
    vs_TEXCOORD6 = vec4(0.0, 0.0, 0.0, 0.0);
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es
#ifdef GL_EXT_shader_texture_lod
#extension GL_EXT_shader_texture_lod : enable
#endif

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec3 _WorldSpaceCameraPos;
uniform 	mediump vec4 _WorldSpaceLightPos0;
uniform 	vec4 hlslcc_mtx4x4unity_WorldToShadow[16];
uniform 	mediump vec4 _LightShadowData;
uniform 	vec4 unity_ShadowFadeCenterAndType;
uniform 	vec4 hlslcc_mtx4x4unity_MatrixV[4];
uniform 	mediump vec4 _LightColor0;
uniform 	mediump vec4 _SpecColor;
uniform 	mediump vec4 _Color;
uniform 	mediump float _Smoothness;
uniform 	mediump vec4 _HColor;
uniform 	mediump vec4 _SColor;
uniform 	mediump float _RampThreshold;
uniform 	mediump float _RampSmooth;
uniform 	mediump float _SpecSmooth;
UNITY_LOCATION(0) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(1) uniform highp sampler2D _ShadowMapTexture;
UNITY_LOCATION(2) uniform highp sampler2DShadow hlslcc_zcmp_ShadowMapTexture;
in mediump vec2 vs_TEXCOORD0;
in highp vec3 vs_TEXCOORD1;
in highp vec3 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec3 u_xlat16_1;
mediump vec3 u_xlat16_2;
vec3 u_xlat3;
mediump vec3 u_xlat16_3;
float u_xlat4;
mediump vec3 u_xlat16_5;
mediump float u_xlat16_9;
float u_xlat12;
mediump float u_xlat16_13;
void main()
{
    u_xlat0.xyz = (-vs_TEXCOORD2.xyz) + _WorldSpaceCameraPos.xyz;
    u_xlat12 = dot(u_xlat0.xyz, u_xlat0.xyz);
    u_xlat12 = inversesqrt(u_xlat12);
    u_xlat16_1.xyz = u_xlat0.xyz * vec3(u_xlat12) + _WorldSpaceLightPos0.xyz;
    u_xlat16_13 = dot(u_xlat16_1.xyz, u_xlat16_1.xyz);
    u_xlat16_13 = inversesqrt(u_xlat16_13);
    u_xlat16_1.xyz = vec3(u_xlat16_13) * u_xlat16_1.xyz;
    u_xlat16_13 = dot(vs_TEXCOORD1.xyz, vs_TEXCOORD1.xyz);
    u_xlat16_13 = inversesqrt(u_xlat16_13);
    u_xlat16_2.xyz = vec3(u_xlat16_13) * vs_TEXCOORD1.xyz;
    u_xlat16_1.x = dot(u_xlat16_2.xyz, u_xlat16_1.xyz);
    u_xlat16_1.y = dot(u_xlat16_2.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat16_1.xy = max(u_xlat16_1.xy, vec2(0.0, 0.0));
    u_xlat12 = log2(u_xlat16_1.x);
    u_xlat16_1.x = _Smoothness * 128.0;
    u_xlat12 = u_xlat12 * u_xlat16_1.x;
    u_xlat12 = exp2(u_xlat12);
    u_xlat16_1.x = (-_SpecSmooth) * 0.5 + 0.5;
    u_xlat12 = u_xlat12 * 2.0 + (-u_xlat16_1.x);
    u_xlat16_9 = _SpecSmooth * 0.5 + 0.5;
    u_xlat3.x = (-u_xlat16_1.x) + u_xlat16_9;
    u_xlat3.x = float(1.0) / u_xlat3.x;
    u_xlat12 = u_xlat12 * u_xlat3.x;
#ifdef UNITY_ADRENO_ES3
    u_xlat12 = min(max(u_xlat12, 0.0), 1.0);
#else
    u_xlat12 = clamp(u_xlat12, 0.0, 1.0);
#endif
    u_xlat3.x = u_xlat12 * -2.0 + 3.0;
    u_xlat12 = u_xlat12 * u_xlat12;
    u_xlat12 = u_xlat12 * u_xlat3.x;
    u_xlat3.x = hlslcc_mtx4x4unity_MatrixV[0].z;
    u_xlat3.y = hlslcc_mtx4x4unity_MatrixV[1].z;
    u_xlat3.z = hlslcc_mtx4x4unity_MatrixV[2].z;
    u_xlat0.x = dot(u_xlat0.xyz, u_xlat3.xyz);
    u_xlat3.xyz = vs_TEXCOORD2.xyz + (-unity_ShadowFadeCenterAndType.xyz);
    u_xlat4 = dot(u_xlat3.xyz, u_xlat3.xyz);
    u_xlat4 = sqrt(u_xlat4);
    u_xlat4 = (-u_xlat0.x) + u_xlat4;
    u_xlat0.x = unity_ShadowFadeCenterAndType.w * u_xlat4 + u_xlat0.x;
    u_xlat0.x = u_xlat0.x * _LightShadowData.z + _LightShadowData.w;
#ifdef UNITY_ADRENO_ES3
    u_xlat0.x = min(max(u_xlat0.x, 0.0), 1.0);
#else
    u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);
#endif
    u_xlat3.xyz = vs_TEXCOORD2.yyy * hlslcc_mtx4x4unity_WorldToShadow[1].xyz;
    u_xlat3.xyz = hlslcc_mtx4x4unity_WorldToShadow[0].xyz * vs_TEXCOORD2.xxx + u_xlat3.xyz;
    u_xlat3.xyz = hlslcc_mtx4x4unity_WorldToShadow[2].xyz * vs_TEXCOORD2.zzz + u_xlat3.xyz;
    u_xlat3.xyz = u_xlat3.xyz + hlslcc_mtx4x4unity_WorldToShadow[3].xyz;
    vec3 txVec0 = vec3(u_xlat3.xy,u_xlat3.z);
    u_xlat4 = textureLod(hlslcc_zcmp_ShadowMapTexture, txVec0, 0.0);
    u_xlat16_1.x = (-_LightShadowData.x) + 1.0;
    u_xlat16_1.x = u_xlat4 * u_xlat16_1.x + _LightShadowData.x;
    u_xlat16_9 = (-u_xlat16_1.x) + 1.0;
    u_xlat16_1.x = u_xlat0.x * u_xlat16_9 + u_xlat16_1.x;
    u_xlat0.x = u_xlat12 * u_xlat16_1.x;
    u_xlat16_2.xyz = _LightColor0.xyz * _SpecColor.xyz;
    u_xlat0.xyz = u_xlat0.xxx * u_xlat16_2.xyz;
    u_xlat16_9 = (-_RampSmooth) * 0.5 + _RampThreshold;
    u_xlat16_5.x = (-u_xlat16_9) + u_xlat16_1.y;
    u_xlat16_13 = _RampSmooth * 0.5 + _RampThreshold;
    u_xlat16_9 = (-u_xlat16_9) + u_xlat16_13;
    u_xlat16_9 = float(1.0) / u_xlat16_9;
    u_xlat16_5.x = u_xlat16_9 * u_xlat16_5.x;
#ifdef UNITY_ADRENO_ES3
    u_xlat16_5.x = min(max(u_xlat16_5.x, 0.0), 1.0);
#else
    u_xlat16_5.x = clamp(u_xlat16_5.x, 0.0, 1.0);
#endif
    u_xlat16_9 = u_xlat16_5.x * -2.0 + 3.0;
    u_xlat16_5.x = u_xlat16_5.x * u_xlat16_5.x;
    u_xlat16_5.x = u_xlat16_5.x * u_xlat16_9;
    u_xlat16_1.x = u_xlat16_1.x * u_xlat16_5.x;
    u_xlat16_5.xyz = (-_HColor.xyz) + _SColor.xyz;
    u_xlat16_5.xyz = _SColor.www * u_xlat16_5.xyz + _HColor.xyz;
    u_xlat16_2.xyz = (-u_xlat16_5.xyz) + _HColor.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xxx * u_xlat16_2.xyz + u_xlat16_5.xyz;
    u_xlat16_3.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_2.xyz = u_xlat16_3.xyz * _Color.xyz;
    u_xlat16_2.xyz = u_xlat16_2.xyz * _LightColor0.xyz;
    u_xlat0.xyz = u_xlat16_2.xyz * u_xlat16_1.xyz + u_xlat0.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "vulkan hw_tier00 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "VERTEXLIGHT_ON" }
"; SPIR-V
; Version: 1.0
; Generator: Khronos Glslang Reference Front End; 6
; Bound: 160
; Schema: 0
                                                      OpCapability Shader 
                                               %1 = OpExtInstImport "GLSL.std.450" 
                                                      OpMemoryModel Logical GLSL450 
                                                      OpEntryPoint Vertex %4 "main" %11 %52 %85 %95 %110 %114 %144 %150 %153 
                                                      OpName vs_TEXCOORD2 "vs_TEXCOORD2" 
                                                      OpName vs_TEXCOORD0 "vs_TEXCOORD0" 
                                                      OpName vs_TEXCOORD1 "vs_TEXCOORD1" 
                                                      OpName vs_TEXCOORD5 "vs_TEXCOORD5" 
                                                      OpName vs_TEXCOORD6 "vs_TEXCOORD6" 
                                                      OpDecorate %11 Location 11 
                                                      OpDecorate %16 ArrayStride 16 
                                                      OpDecorate %17 ArrayStride 17 
                                                      OpDecorate %18 ArrayStride 18 
                                                      OpMemberDecorate %19 0 Offset 19 
                                                      OpMemberDecorate %19 1 Offset 19 
                                                      OpMemberDecorate %19 2 Offset 19 
                                                      OpMemberDecorate %19 3 Offset 19 
                                                      OpDecorate %19 Block 
                                                      OpDecorate %21 DescriptorSet 21 
                                                      OpDecorate %21 Binding 21 
                                                      OpDecorate vs_TEXCOORD2 Location 52 
                                                      OpMemberDecorate %83 0 BuiltIn 83 
                                                      OpMemberDecorate %83 1 BuiltIn 83 
                                                      OpMemberDecorate %83 2 BuiltIn 83 
                                                      OpDecorate %83 Block 
                                                      OpDecorate %95 Location 95 
                                                      OpDecorate vs_TEXCOORD0 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD0 Location 110 
                                                      OpDecorate %114 Location 114 
                                                      OpDecorate vs_TEXCOORD1 Location 144 
                                                      OpDecorate vs_TEXCOORD5 Location 150 
                                                      OpDecorate vs_TEXCOORD6 Location 153 
                                               %2 = OpTypeVoid 
                                               %3 = OpTypeFunction %2 
                                               %6 = OpTypeFloat 32 
                                               %7 = OpTypeVector %6 4 
                                               %8 = OpTypePointer Private %7 
                                Private f32_4* %9 = OpVariable Private 
                                              %10 = OpTypePointer Input %7 
                                 Input f32_4* %11 = OpVariable Input 
                                              %14 = OpTypeInt 32 0 
                                          u32 %15 = OpConstant 4 
                                              %16 = OpTypeArray %7 %15 
                                              %17 = OpTypeArray %7 %15 
                                              %18 = OpTypeArray %7 %15 
                                              %19 = OpTypeStruct %16 %17 %18 %7 
                                              %20 = OpTypePointer Uniform %19 
Uniform struct {f32_4[4]; f32_4[4]; f32_4[4]; f32_4;}* %21 = OpVariable Uniform 
                                              %22 = OpTypeInt 32 1 
                                          i32 %23 = OpConstant 0 
                                          i32 %24 = OpConstant 1 
                                              %25 = OpTypePointer Uniform %7 
                                          i32 %36 = OpConstant 2 
                               Private f32_4* %44 = OpVariable Private 
                                          i32 %46 = OpConstant 3 
                                              %50 = OpTypeVector %6 3 
                                              %51 = OpTypePointer Output %50 
                       Output f32_3* vs_TEXCOORD2 = OpVariable Output 
                                          u32 %81 = OpConstant 1 
                                              %82 = OpTypeArray %6 %81 
                                              %83 = OpTypeStruct %7 %6 %82 
                                              %84 = OpTypePointer Output %83 
         Output struct {f32_4; f32; f32[1];}* %85 = OpVariable Output 
                                              %93 = OpTypePointer Output %7 
                                 Input f32_4* %95 = OpVariable Input 
                                              %96 = OpTypeVector %6 2 
                                             %109 = OpTypePointer Output %96 
                       Output f32_2* vs_TEXCOORD0 = OpVariable Output 
                                             %113 = OpTypePointer Input %50 
                                Input f32_3* %114 = OpVariable Input 
                                         u32 %120 = OpConstant 0 
                                             %121 = OpTypePointer Private %6 
                                         u32 %134 = OpConstant 2 
                                Private f32* %136 = OpVariable Private 
                       Output f32_3* vs_TEXCOORD1 = OpVariable Output 
                       Output f32_4* vs_TEXCOORD5 = OpVariable Output 
                                         f32 %151 = OpConstant 3.674022E-40 
                                       f32_4 %152 = OpConstantComposite %151 %151 %151 %151 
                       Output f32_4* vs_TEXCOORD6 = OpVariable Output 
                                             %154 = OpTypePointer Output %6 
                                          void %4 = OpFunction None %3 
                                               %5 = OpLabel 
                                        f32_4 %12 = OpLoad %11 
                                        f32_4 %13 = OpVectorShuffle %12 %12 1 1 1 1 
                               Uniform f32_4* %26 = OpAccessChain %21 %23 %24 
                                        f32_4 %27 = OpLoad %26 
                                        f32_4 %28 = OpFMul %13 %27 
                                                      OpStore %9 %28 
                               Uniform f32_4* %29 = OpAccessChain %21 %23 %23 
                                        f32_4 %30 = OpLoad %29 
                                        f32_4 %31 = OpLoad %11 
                                        f32_4 %32 = OpVectorShuffle %31 %31 0 0 0 0 
                                        f32_4 %33 = OpFMul %30 %32 
                                        f32_4 %34 = OpLoad %9 
                                        f32_4 %35 = OpFAdd %33 %34 
                                                      OpStore %9 %35 
                               Uniform f32_4* %37 = OpAccessChain %21 %23 %36 
                                        f32_4 %38 = OpLoad %37 
                                        f32_4 %39 = OpLoad %11 
                                        f32_4 %40 = OpVectorShuffle %39 %39 2 2 2 2 
                                        f32_4 %41 = OpFMul %38 %40 
                                        f32_4 %42 = OpLoad %9 
                                        f32_4 %43 = OpFAdd %41 %42 
                                                      OpStore %9 %43 
                                        f32_4 %45 = OpLoad %9 
                               Uniform f32_4* %47 = OpAccessChain %21 %23 %46 
                                        f32_4 %48 = OpLoad %47 
                                        f32_4 %49 = OpFAdd %45 %48 
                                                      OpStore %44 %49 
                               Uniform f32_4* %53 = OpAccessChain %21 %23 %46 
                                        f32_4 %54 = OpLoad %53 
                                        f32_3 %55 = OpVectorShuffle %54 %54 0 1 2 
                                        f32_4 %56 = OpLoad %11 
                                        f32_3 %57 = OpVectorShuffle %56 %56 3 3 3 
                                        f32_3 %58 = OpFMul %55 %57 
                                        f32_4 %59 = OpLoad %9 
                                        f32_3 %60 = OpVectorShuffle %59 %59 0 1 2 
                                        f32_3 %61 = OpFAdd %58 %60 
                                                      OpStore vs_TEXCOORD2 %61 
                                        f32_4 %62 = OpLoad %44 
                                        f32_4 %63 = OpVectorShuffle %62 %62 1 1 1 1 
                               Uniform f32_4* %64 = OpAccessChain %21 %36 %24 
                                        f32_4 %65 = OpLoad %64 
                                        f32_4 %66 = OpFMul %63 %65 
                                                      OpStore %9 %66 
                               Uniform f32_4* %67 = OpAccessChain %21 %36 %23 
                                        f32_4 %68 = OpLoad %67 
                                        f32_4 %69 = OpLoad %44 
                                        f32_4 %70 = OpVectorShuffle %69 %69 0 0 0 0 
                                        f32_4 %71 = OpFMul %68 %70 
                                        f32_4 %72 = OpLoad %9 
                                        f32_4 %73 = OpFAdd %71 %72 
                                                      OpStore %9 %73 
                               Uniform f32_4* %74 = OpAccessChain %21 %36 %36 
                                        f32_4 %75 = OpLoad %74 
                                        f32_4 %76 = OpLoad %44 
                                        f32_4 %77 = OpVectorShuffle %76 %76 2 2 2 2 
                                        f32_4 %78 = OpFMul %75 %77 
                                        f32_4 %79 = OpLoad %9 
                                        f32_4 %80 = OpFAdd %78 %79 
                                                      OpStore %9 %80 
                               Uniform f32_4* %86 = OpAccessChain %21 %36 %46 
                                        f32_4 %87 = OpLoad %86 
                                        f32_4 %88 = OpLoad %44 
                                        f32_4 %89 = OpVectorShuffle %88 %88 3 3 3 3 
                                        f32_4 %90 = OpFMul %87 %89 
                                        f32_4 %91 = OpLoad %9 
                                        f32_4 %92 = OpFAdd %90 %91 
                                Output f32_4* %94 = OpAccessChain %85 %23 
                                                      OpStore %94 %92 
                                        f32_4 %97 = OpLoad %95 
                                        f32_2 %98 = OpVectorShuffle %97 %97 0 1 
                               Uniform f32_4* %99 = OpAccessChain %21 %46 
                                       f32_4 %100 = OpLoad %99 
                                       f32_2 %101 = OpVectorShuffle %100 %100 0 1 
                                       f32_2 %102 = OpFMul %98 %101 
                              Uniform f32_4* %103 = OpAccessChain %21 %46 
                                       f32_4 %104 = OpLoad %103 
                                       f32_2 %105 = OpVectorShuffle %104 %104 2 3 
                                       f32_2 %106 = OpFAdd %102 %105 
                                       f32_4 %107 = OpLoad %9 
                                       f32_4 %108 = OpVectorShuffle %107 %106 4 5 2 3 
                                                      OpStore %9 %108 
                                       f32_4 %111 = OpLoad %9 
                                       f32_2 %112 = OpVectorShuffle %111 %111 0 1 
                                                      OpStore vs_TEXCOORD0 %112 
                                       f32_3 %115 = OpLoad %114 
                              Uniform f32_4* %116 = OpAccessChain %21 %24 %23 
                                       f32_4 %117 = OpLoad %116 
                                       f32_3 %118 = OpVectorShuffle %117 %117 0 1 2 
                                         f32 %119 = OpDot %115 %118 
                                Private f32* %122 = OpAccessChain %9 %120 
                                                      OpStore %122 %119 
                                       f32_3 %123 = OpLoad %114 
                              Uniform f32_4* %124 = OpAccessChain %21 %24 %24 
                                       f32_4 %125 = OpLoad %124 
                                       f32_3 %126 = OpVectorShuffle %125 %125 0 1 2 
                                         f32 %127 = OpDot %123 %126 
                                Private f32* %128 = OpAccessChain %9 %81 
                                                      OpStore %128 %127 
                                       f32_3 %129 = OpLoad %114 
                              Uniform f32_4* %130 = OpAccessChain %21 %24 %36 
                                       f32_4 %131 = OpLoad %130 
                                       f32_3 %132 = OpVectorShuffle %131 %131 0 1 2 
                                         f32 %133 = OpDot %129 %132 
                                Private f32* %135 = OpAccessChain %9 %134 
                                                      OpStore %135 %133 
                                       f32_4 %137 = OpLoad %9 
                                       f32_3 %138 = OpVectorShuffle %137 %137 0 1 2 
                                       f32_4 %139 = OpLoad %9 
                                       f32_3 %140 = OpVectorShuffle %139 %139 0 1 2 
                                         f32 %141 = OpDot %138 %140 
                                                      OpStore %136 %141 
                                         f32 %142 = OpLoad %136 
                                         f32 %143 = OpExtInst %1 32 %142 
                                                      OpStore %136 %143 
                                         f32 %145 = OpLoad %136 
                                       f32_3 %146 = OpCompositeConstruct %145 %145 %145 
                                       f32_4 %147 = OpLoad %9 
                                       f32_3 %148 = OpVectorShuffle %147 %147 0 1 2 
                                       f32_3 %149 = OpFMul %146 %148 
                                                      OpStore vs_TEXCOORD1 %149 
                                                      OpStore vs_TEXCOORD5 %152 
                                                      OpStore vs_TEXCOORD6 %152 
                                 Output f32* %155 = OpAccessChain %85 %23 %81 
                                         f32 %156 = OpLoad %155 
                                         f32 %157 = OpFNegate %156 
                                 Output f32* %158 = OpAccessChain %85 %23 %81 
                                                      OpStore %158 %157 
                                                      OpReturn
                                                      OpFunctionEnd
; SPIR-V
; Version: 1.0
; Generator: Khronos Glslang Reference Front End; 6
; Bound: 430
; Schema: 0
                                                      OpCapability Shader 
                                               %1 = OpExtInstImport "GLSL.std.450" 
                                                      OpMemoryModel Logical GLSL450 
                                                      OpEntryPoint Fragment %4 "main" %11 %57 %402 %423 
                                                      OpExecutionMode %4 OriginUpperLeft 
                                                      OpName vs_TEXCOORD2 "vs_TEXCOORD2" 
                                                      OpName vs_TEXCOORD1 "vs_TEXCOORD1" 
                                                      OpName vs_TEXCOORD0 "vs_TEXCOORD0" 
                                                      OpDecorate vs_TEXCOORD2 Location 11 
                                                      OpDecorate %17 ArrayStride 17 
                                                      OpDecorate %19 ArrayStride 19 
                                                      OpMemberDecorate %20 0 Offset 20 
                                                      OpMemberDecorate %20 1 RelaxedPrecision 
                                                      OpMemberDecorate %20 1 Offset 20 
                                                      OpMemberDecorate %20 2 Offset 20 
                                                      OpMemberDecorate %20 3 RelaxedPrecision 
                                                      OpMemberDecorate %20 3 Offset 20 
                                                      OpMemberDecorate %20 4 Offset 20 
                                                      OpMemberDecorate %20 5 Offset 20 
                                                      OpMemberDecorate %20 6 RelaxedPrecision 
                                                      OpMemberDecorate %20 6 Offset 20 
                                                      OpMemberDecorate %20 7 RelaxedPrecision 
                                                      OpMemberDecorate %20 7 Offset 20 
                                                      OpMemberDecorate %20 8 RelaxedPrecision 
                                                      OpMemberDecorate %20 8 Offset 20 
                                                      OpMemberDecorate %20 9 RelaxedPrecision 
                                                      OpMemberDecorate %20 9 Offset 20 
                                                      OpMemberDecorate %20 10 RelaxedPrecision 
                                                      OpMemberDecorate %20 10 Offset 20 
                                                      OpMemberDecorate %20 11 RelaxedPrecision 
                                                      OpMemberDecorate %20 11 Offset 20 
                                                      OpMemberDecorate %20 12 RelaxedPrecision 
                                                      OpMemberDecorate %20 12 Offset 20 
                                                      OpMemberDecorate %20 13 RelaxedPrecision 
                                                      OpMemberDecorate %20 13 Offset 20 
                                                      OpMemberDecorate %20 14 RelaxedPrecision 
                                                      OpMemberDecorate %20 14 Offset 20 
                                                      OpDecorate %20 Block 
                                                      OpDecorate %22 DescriptorSet 22 
                                                      OpDecorate %22 Binding 22 
                                                      OpDecorate %36 RelaxedPrecision 
                                                      OpDecorate %44 RelaxedPrecision 
                                                      OpDecorate %45 RelaxedPrecision 
                                                      OpDecorate %47 RelaxedPrecision 
                                                      OpDecorate %48 RelaxedPrecision 
                                                      OpDecorate %49 RelaxedPrecision 
                                                      OpDecorate %50 RelaxedPrecision 
                                                      OpDecorate %51 RelaxedPrecision 
                                                      OpDecorate %52 RelaxedPrecision 
                                                      OpDecorate %53 RelaxedPrecision 
                                                      OpDecorate %54 RelaxedPrecision 
                                                      OpDecorate %55 RelaxedPrecision 
                                                      OpDecorate %56 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD1 Location 57 
                                                      OpDecorate %61 RelaxedPrecision 
                                                      OpDecorate %62 RelaxedPrecision 
                                                      OpDecorate %63 RelaxedPrecision 
                                                      OpDecorate %64 RelaxedPrecision 
                                                      OpDecorate %68 RelaxedPrecision 
                                                      OpDecorate %69 RelaxedPrecision 
                                                      OpDecorate %70 RelaxedPrecision 
                                                      OpDecorate %73 RelaxedPrecision 
                                                      OpDecorate %75 RelaxedPrecision 
                                                      OpDecorate %76 RelaxedPrecision 
                                                      OpDecorate %77 RelaxedPrecision 
                                                      OpDecorate %81 RelaxedPrecision 
                                                      OpDecorate %82 RelaxedPrecision 
                                                      OpDecorate %85 RelaxedPrecision 
                                                      OpDecorate %89 RelaxedPrecision 
                                                      OpDecorate %90 RelaxedPrecision 
                                                      OpDecorate %94 RelaxedPrecision 
                                                      OpDecorate %96 RelaxedPrecision 
                                                      OpDecorate %100 RelaxedPrecision 
                                                      OpDecorate %106 RelaxedPrecision 
                                                      OpDecorate %107 RelaxedPrecision 
                                                      OpDecorate %109 RelaxedPrecision 
                                                      OpDecorate %110 RelaxedPrecision 
                                                      OpDecorate %116 RelaxedPrecision 
                                                      OpDecorate %117 RelaxedPrecision 
                                                      OpDecorate %119 RelaxedPrecision 
                                                      OpDecorate %121 RelaxedPrecision 
                                                      OpDecorate %122 RelaxedPrecision 
                                                      OpDecorate %123 RelaxedPrecision 
                                                      OpDecorate %126 RelaxedPrecision 
                                                      OpDecorate %127 RelaxedPrecision 
                                                      OpDecorate %128 RelaxedPrecision 
                                                      OpDecorate %129 RelaxedPrecision 
                                                      OpDecorate %202 RelaxedPrecision 
                                                      OpDecorate %205 RelaxedPrecision 
                                                      OpDecorate %250 DescriptorSet 250 
                                                      OpDecorate %250 Binding 250 
                                                      OpDecorate %254 DescriptorSet 254 
                                                      OpDecorate %254 Binding 254 
                                                      OpDecorate %263 RelaxedPrecision 
                                                      OpDecorate %264 RelaxedPrecision 
                                                      OpDecorate %265 RelaxedPrecision 
                                                      OpDecorate %269 RelaxedPrecision 
                                                      OpDecorate %272 RelaxedPrecision 
                                                      OpDecorate %276 RelaxedPrecision 
                                                      OpDecorate %277 RelaxedPrecision 
                                                      OpDecorate %278 RelaxedPrecision 
                                                      OpDecorate %281 RelaxedPrecision 
                                                      OpDecorate %284 RelaxedPrecision 
                                                      OpDecorate %289 RelaxedPrecision 
                                                      OpDecorate %294 RelaxedPrecision 
                                                      OpDecorate %295 RelaxedPrecision 
                                                      OpDecorate %298 RelaxedPrecision 
                                                      OpDecorate %299 RelaxedPrecision 
                                                      OpDecorate %300 RelaxedPrecision 
                                                      OpDecorate %303 RelaxedPrecision 
                                                      OpDecorate %307 RelaxedPrecision 
                                                      OpDecorate %308 RelaxedPrecision 
                                                      OpDecorate %309 RelaxedPrecision 
                                                      OpDecorate %312 RelaxedPrecision 
                                                      OpDecorate %313 RelaxedPrecision 
                                                      OpDecorate %314 RelaxedPrecision 
                                                      OpDecorate %315 RelaxedPrecision 
                                                      OpDecorate %316 RelaxedPrecision 
                                                      OpDecorate %318 RelaxedPrecision 
                                                      OpDecorate %319 RelaxedPrecision 
                                                      OpDecorate %322 RelaxedPrecision 
                                                      OpDecorate %323 RelaxedPrecision 
                                                      OpDecorate %325 RelaxedPrecision 
                                                      OpDecorate %326 RelaxedPrecision 
                                                      OpDecorate %327 RelaxedPrecision 
                                                      OpDecorate %328 RelaxedPrecision 
                                                      OpDecorate %329 RelaxedPrecision 
                                                      OpDecorate %330 RelaxedPrecision 
                                                      OpDecorate %331 RelaxedPrecision 
                                                      OpDecorate %332 RelaxedPrecision 
                                                      OpDecorate %333 RelaxedPrecision 
                                                      OpDecorate %335 RelaxedPrecision 
                                                      OpDecorate %336 RelaxedPrecision 
                                                      OpDecorate %339 RelaxedPrecision 
                                                      OpDecorate %340 RelaxedPrecision 
                                                      OpDecorate %343 RelaxedPrecision 
                                                      OpDecorate %344 RelaxedPrecision 
                                                      OpDecorate %345 RelaxedPrecision 
                                                      OpDecorate %347 RelaxedPrecision 
                                                      OpDecorate %349 RelaxedPrecision 
                                                      OpDecorate %350 RelaxedPrecision 
                                                      OpDecorate %353 RelaxedPrecision 
                                                      OpDecorate %354 RelaxedPrecision 
                                                      OpDecorate %355 RelaxedPrecision 
                                                      OpDecorate %358 RelaxedPrecision 
                                                      OpDecorate %360 RelaxedPrecision 
                                                      OpDecorate %361 RelaxedPrecision 
                                                      OpDecorate %365 RelaxedPrecision 
                                                      OpDecorate %366 RelaxedPrecision 
                                                      OpDecorate %367 RelaxedPrecision 
                                                      OpDecorate %370 RelaxedPrecision 
                                                      OpDecorate %371 RelaxedPrecision 
                                                      OpDecorate %372 RelaxedPrecision 
                                                      OpDecorate %374 RelaxedPrecision 
                                                      OpDecorate %375 RelaxedPrecision 
                                                      OpDecorate %376 RelaxedPrecision 
                                                      OpDecorate %377 RelaxedPrecision 
                                                      OpDecorate %379 RelaxedPrecision 
                                                      OpDecorate %380 RelaxedPrecision 
                                                      OpDecorate %381 RelaxedPrecision 
                                                      OpDecorate %382 RelaxedPrecision 
                                                      OpDecorate %383 RelaxedPrecision 
                                                      OpDecorate %385 RelaxedPrecision 
                                                      OpDecorate %386 RelaxedPrecision 
                                                      OpDecorate %387 RelaxedPrecision 
                                                      OpDecorate %388 RelaxedPrecision 
                                                      OpDecorate %389 RelaxedPrecision 
                                                      OpDecorate %390 RelaxedPrecision 
                                                      OpDecorate %391 RelaxedPrecision 
                                                      OpDecorate %392 RelaxedPrecision 
                                                      OpDecorate %393 RelaxedPrecision 
                                                      OpDecorate %394 RelaxedPrecision 
                                                      OpDecorate %395 RelaxedPrecision 
                                                      OpDecorate %395 DescriptorSet 395 
                                                      OpDecorate %395 Binding 395 
                                                      OpDecorate %396 RelaxedPrecision 
                                                      OpDecorate %397 RelaxedPrecision 
                                                      OpDecorate %397 DescriptorSet 397 
                                                      OpDecorate %397 Binding 397 
                                                      OpDecorate %398 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD0 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD0 Location 402 
                                                      OpDecorate %403 RelaxedPrecision 
                                                      OpDecorate %404 RelaxedPrecision 
                                                      OpDecorate %405 RelaxedPrecision 
                                                      OpDecorate %406 RelaxedPrecision 
                                                      OpDecorate %409 RelaxedPrecision 
                                                      OpDecorate %410 RelaxedPrecision 
                                                      OpDecorate %411 RelaxedPrecision 
                                                      OpDecorate %412 RelaxedPrecision 
                                                      OpDecorate %414 RelaxedPrecision 
                                                      OpDecorate %415 RelaxedPrecision 
                                                      OpDecorate %416 RelaxedPrecision 
                                                      OpDecorate %417 RelaxedPrecision 
                                                      OpDecorate %418 RelaxedPrecision 
                                                      OpDecorate %419 RelaxedPrecision 
                                                      OpDecorate %423 RelaxedPrecision 
                                                      OpDecorate %423 Location 423 
                                               %2 = OpTypeVoid 
                                               %3 = OpTypeFunction %2 
                                               %6 = OpTypeFloat 32 
                                               %7 = OpTypeVector %6 3 
                                               %8 = OpTypePointer Private %7 
                                Private f32_3* %9 = OpVariable Private 
                                              %10 = OpTypePointer Input %7 
                        Input f32_3* vs_TEXCOORD2 = OpVariable Input 
                                              %14 = OpTypeVector %6 4 
                                              %15 = OpTypeInt 32 0 
                                          u32 %16 = OpConstant 16 
                                              %17 = OpTypeArray %14 %16 
                                          u32 %18 = OpConstant 4 
                                              %19 = OpTypeArray %14 %18 
                                              %20 = OpTypeStruct %7 %14 %17 %14 %14 %19 %14 %14 %14 %6 %14 %14 %6 %6 %6 
                                              %21 = OpTypePointer Uniform %20 
Uniform struct {f32_3; f32_4; f32_4[16]; f32_4; f32_4; f32_4[4]; f32_4; f32_4; f32_4; f32; f32_4; f32_4; f32; f32; f32;}* %22 = OpVariable Uniform 
                                              %23 = OpTypeInt 32 1 
                                          i32 %24 = OpConstant 0 
                                              %25 = OpTypePointer Uniform %7 
                                              %29 = OpTypePointer Private %6 
                                 Private f32* %30 = OpVariable Private 
                               Private f32_3* %36 = OpVariable Private 
                                          i32 %41 = OpConstant 1 
                                              %42 = OpTypePointer Uniform %14 
                                 Private f32* %47 = OpVariable Private 
                        Input f32_3* vs_TEXCOORD1 = OpVariable Input 
                               Private f32_3* %63 = OpVariable Private 
                                          u32 %71 = OpConstant 0 
                                          u32 %78 = OpConstant 1 
                                              %80 = OpTypeVector %6 2 
                                          f32 %83 = OpConstant 3.674022E-40 
                                        f32_2 %84 = OpConstantComposite %83 %83 
                                          i32 %91 = OpConstant 9 
                                              %92 = OpTypePointer Uniform %6 
                                          f32 %95 = OpConstant 3.674022E-40 
                                         i32 %104 = OpConstant 14 
                                         f32 %108 = OpConstant 3.674022E-40 
                                         f32 %113 = OpConstant 3.674022E-40 
                                Private f32* %119 = OpVariable Private 
                              Private f32_3* %124 = OpVariable Private 
                                         f32 %131 = OpConstant 3.674022E-40 
                                         f32 %143 = OpConstant 3.674022E-40 
                                         f32 %145 = OpConstant 3.674022E-40 
                                         i32 %155 = OpConstant 5 
                                         u32 %156 = OpConstant 2 
                                         i32 %163 = OpConstant 2 
                                         i32 %172 = OpConstant 4 
                                Private f32* %178 = OpVariable Private 
                                         u32 %189 = OpConstant 3 
                                         i32 %200 = OpConstant 3 
                                             %239 = OpTypePointer Function %7 
                                             %248 = OpTypeImage %6 Dim2D 0 0 0 1 Unknown 
                                             %249 = OpTypePointer UniformConstant %248 
        UniformConstant read_only Texture2D* %250 = OpVariable UniformConstant 
                                             %252 = OpTypeSampler 
                                             %253 = OpTypePointer UniformConstant %252 
                    UniformConstant sampler* %254 = OpVariable UniformConstant 
                                             %256 = OpTypeImage %6 Dim2D 1 0 0 1 Unknown 
                                             %257 = OpTypeSampledImage %256 
                                         i32 %292 = OpConstant 6 
                                         i32 %296 = OpConstant 7 
                                         i32 %305 = OpConstant 13 
                                         i32 %310 = OpConstant 12 
                              Private f32_3* %314 = OpVariable Private 
                                         i32 %363 = OpConstant 10 
                                         i32 %368 = OpConstant 11 
                              Private f32_3* %394 = OpVariable Private 
        UniformConstant read_only Texture2D* %395 = OpVariable UniformConstant 
                    UniformConstant sampler* %397 = OpVariable UniformConstant 
                                             %399 = OpTypeSampledImage %248 
                                             %401 = OpTypePointer Input %80 
                        Input f32_2* vs_TEXCOORD0 = OpVariable Input 
                                         i32 %407 = OpConstant 8 
                                             %422 = OpTypePointer Output %14 
                               Output f32_4* %423 = OpVariable Output 
                                             %427 = OpTypePointer Output %6 
                                          void %4 = OpFunction None %3 
                                               %5 = OpLabel 
                             Function f32_3* %240 = OpVariable Function 
                                        f32_3 %12 = OpLoad vs_TEXCOORD2 
                                        f32_3 %13 = OpFNegate %12 
                               Uniform f32_3* %26 = OpAccessChain %22 %24 
                                        f32_3 %27 = OpLoad %26 
                                        f32_3 %28 = OpFAdd %13 %27 
                                                      OpStore %9 %28 
                                        f32_3 %31 = OpLoad %9 
                                        f32_3 %32 = OpLoad %9 
                                          f32 %33 = OpDot %31 %32 
                                                      OpStore %30 %33 
                                          f32 %34 = OpLoad %30 
                                          f32 %35 = OpExtInst %1 32 %34 
                                                      OpStore %30 %35 
                                        f32_3 %37 = OpLoad %9 
                                          f32 %38 = OpLoad %30 
                                        f32_3 %39 = OpCompositeConstruct %38 %38 %38 
                                        f32_3 %40 = OpFMul %37 %39 
                               Uniform f32_4* %43 = OpAccessChain %22 %41 
                                        f32_4 %44 = OpLoad %43 
                                        f32_3 %45 = OpVectorShuffle %44 %44 0 1 2 
                                        f32_3 %46 = OpFAdd %40 %45 
                                                      OpStore %36 %46 
                                        f32_3 %48 = OpLoad %36 
                                        f32_3 %49 = OpLoad %36 
                                          f32 %50 = OpDot %48 %49 
                                                      OpStore %47 %50 
                                          f32 %51 = OpLoad %47 
                                          f32 %52 = OpExtInst %1 32 %51 
                                                      OpStore %47 %52 
                                          f32 %53 = OpLoad %47 
                                        f32_3 %54 = OpCompositeConstruct %53 %53 %53 
                                        f32_3 %55 = OpLoad %36 
                                        f32_3 %56 = OpFMul %54 %55 
                                                      OpStore %36 %56 
                                        f32_3 %58 = OpLoad vs_TEXCOORD1 
                                        f32_3 %59 = OpLoad vs_TEXCOORD1 
                                          f32 %60 = OpDot %58 %59 
                                                      OpStore %47 %60 
                                          f32 %61 = OpLoad %47 
                                          f32 %62 = OpExtInst %1 32 %61 
                                                      OpStore %47 %62 
                                          f32 %64 = OpLoad %47 
                                        f32_3 %65 = OpCompositeConstruct %64 %64 %64 
                                        f32_3 %66 = OpLoad vs_TEXCOORD1 
                                        f32_3 %67 = OpFMul %65 %66 
                                                      OpStore %63 %67 
                                        f32_3 %68 = OpLoad %63 
                                        f32_3 %69 = OpLoad %36 
                                          f32 %70 = OpDot %68 %69 
                                 Private f32* %72 = OpAccessChain %36 %71 
                                                      OpStore %72 %70 
                                        f32_3 %73 = OpLoad %63 
                               Uniform f32_4* %74 = OpAccessChain %22 %41 
                                        f32_4 %75 = OpLoad %74 
                                        f32_3 %76 = OpVectorShuffle %75 %75 0 1 2 
                                          f32 %77 = OpDot %73 %76 
                                 Private f32* %79 = OpAccessChain %36 %78 
                                                      OpStore %79 %77 
                                        f32_3 %81 = OpLoad %36 
                                        f32_2 %82 = OpVectorShuffle %81 %81 0 1 
                                        f32_2 %85 = OpExtInst %1 40 %82 %84 
                                        f32_3 %86 = OpLoad %36 
                                        f32_3 %87 = OpVectorShuffle %86 %85 3 4 2 
                                                      OpStore %36 %87 
                                 Private f32* %88 = OpAccessChain %36 %71 
                                          f32 %89 = OpLoad %88 
                                          f32 %90 = OpExtInst %1 30 %89 
                                                      OpStore %30 %90 
                                 Uniform f32* %93 = OpAccessChain %22 %91 
                                          f32 %94 = OpLoad %93 
                                          f32 %96 = OpFMul %94 %95 
                                 Private f32* %97 = OpAccessChain %36 %71 
                                                      OpStore %97 %96 
                                          f32 %98 = OpLoad %30 
                                 Private f32* %99 = OpAccessChain %36 %71 
                                         f32 %100 = OpLoad %99 
                                         f32 %101 = OpFMul %98 %100 
                                                      OpStore %30 %101 
                                         f32 %102 = OpLoad %30 
                                         f32 %103 = OpExtInst %1 29 %102 
                                                      OpStore %30 %103 
                                Uniform f32* %105 = OpAccessChain %22 %104 
                                         f32 %106 = OpLoad %105 
                                         f32 %107 = OpFNegate %106 
                                         f32 %109 = OpFMul %107 %108 
                                         f32 %110 = OpFAdd %109 %108 
                                Private f32* %111 = OpAccessChain %36 %71 
                                                      OpStore %111 %110 
                                         f32 %112 = OpLoad %30 
                                         f32 %114 = OpFMul %112 %113 
                                Private f32* %115 = OpAccessChain %36 %71 
                                         f32 %116 = OpLoad %115 
                                         f32 %117 = OpFNegate %116 
                                         f32 %118 = OpFAdd %114 %117 
                                                      OpStore %30 %118 
                                Uniform f32* %120 = OpAccessChain %22 %104 
                                         f32 %121 = OpLoad %120 
                                         f32 %122 = OpFMul %121 %108 
                                         f32 %123 = OpFAdd %122 %108 
                                                      OpStore %119 %123 
                                Private f32* %125 = OpAccessChain %36 %71 
                                         f32 %126 = OpLoad %125 
                                         f32 %127 = OpFNegate %126 
                                         f32 %128 = OpLoad %119 
                                         f32 %129 = OpFAdd %127 %128 
                                Private f32* %130 = OpAccessChain %124 %71 
                                                      OpStore %130 %129 
                                Private f32* %132 = OpAccessChain %124 %71 
                                         f32 %133 = OpLoad %132 
                                         f32 %134 = OpFDiv %131 %133 
                                Private f32* %135 = OpAccessChain %124 %71 
                                                      OpStore %135 %134 
                                         f32 %136 = OpLoad %30 
                                Private f32* %137 = OpAccessChain %124 %71 
                                         f32 %138 = OpLoad %137 
                                         f32 %139 = OpFMul %136 %138 
                                                      OpStore %30 %139 
                                         f32 %140 = OpLoad %30 
                                         f32 %141 = OpExtInst %1 43 %140 %83 %131 
                                                      OpStore %30 %141 
                                         f32 %142 = OpLoad %30 
                                         f32 %144 = OpFMul %142 %143 
                                         f32 %146 = OpFAdd %144 %145 
                                Private f32* %147 = OpAccessChain %124 %71 
                                                      OpStore %147 %146 
                                         f32 %148 = OpLoad %30 
                                         f32 %149 = OpLoad %30 
                                         f32 %150 = OpFMul %148 %149 
                                                      OpStore %30 %150 
                                         f32 %151 = OpLoad %30 
                                Private f32* %152 = OpAccessChain %124 %71 
                                         f32 %153 = OpLoad %152 
                                         f32 %154 = OpFMul %151 %153 
                                                      OpStore %30 %154 
                                Uniform f32* %157 = OpAccessChain %22 %155 %24 %156 
                                         f32 %158 = OpLoad %157 
                                Private f32* %159 = OpAccessChain %124 %71 
                                                      OpStore %159 %158 
                                Uniform f32* %160 = OpAccessChain %22 %155 %41 %156 
                                         f32 %161 = OpLoad %160 
                                Private f32* %162 = OpAccessChain %124 %78 
                                                      OpStore %162 %161 
                                Uniform f32* %164 = OpAccessChain %22 %155 %163 %156 
                                         f32 %165 = OpLoad %164 
                                Private f32* %166 = OpAccessChain %124 %156 
                                                      OpStore %166 %165 
                                       f32_3 %167 = OpLoad %9 
                                       f32_3 %168 = OpLoad %124 
                                         f32 %169 = OpDot %167 %168 
                                Private f32* %170 = OpAccessChain %9 %71 
                                                      OpStore %170 %169 
                                       f32_3 %171 = OpLoad vs_TEXCOORD2 
                              Uniform f32_4* %173 = OpAccessChain %22 %172 
                                       f32_4 %174 = OpLoad %173 
                                       f32_3 %175 = OpVectorShuffle %174 %174 0 1 2 
                                       f32_3 %176 = OpFNegate %175 
                                       f32_3 %177 = OpFAdd %171 %176 
                                                      OpStore %124 %177 
                                       f32_3 %179 = OpLoad %124 
                                       f32_3 %180 = OpLoad %124 
                                         f32 %181 = OpDot %179 %180 
                                                      OpStore %178 %181 
                                         f32 %182 = OpLoad %178 
                                         f32 %183 = OpExtInst %1 31 %182 
                                                      OpStore %178 %183 
                                Private f32* %184 = OpAccessChain %9 %71 
                                         f32 %185 = OpLoad %184 
                                         f32 %186 = OpFNegate %185 
                                         f32 %187 = OpLoad %178 
                                         f32 %188 = OpFAdd %186 %187 
                                                      OpStore %178 %188 
                                Uniform f32* %190 = OpAccessChain %22 %172 %189 
                                         f32 %191 = OpLoad %190 
                                         f32 %192 = OpLoad %178 
                                         f32 %193 = OpFMul %191 %192 
                                Private f32* %194 = OpAccessChain %9 %71 
                                         f32 %195 = OpLoad %194 
                                         f32 %196 = OpFAdd %193 %195 
                                Private f32* %197 = OpAccessChain %9 %71 
                                                      OpStore %197 %196 
                                Private f32* %198 = OpAccessChain %9 %71 
                                         f32 %199 = OpLoad %198 
                                Uniform f32* %201 = OpAccessChain %22 %200 %156 
                                         f32 %202 = OpLoad %201 
                                         f32 %203 = OpFMul %199 %202 
                                Uniform f32* %204 = OpAccessChain %22 %200 %189 
                                         f32 %205 = OpLoad %204 
                                         f32 %206 = OpFAdd %203 %205 
                                Private f32* %207 = OpAccessChain %9 %71 
                                                      OpStore %207 %206 
                                Private f32* %208 = OpAccessChain %9 %71 
                                         f32 %209 = OpLoad %208 
                                         f32 %210 = OpExtInst %1 43 %209 %83 %131 
                                Private f32* %211 = OpAccessChain %9 %71 
                                                      OpStore %211 %210 
                                       f32_3 %212 = OpLoad vs_TEXCOORD2 
                                       f32_3 %213 = OpVectorShuffle %212 %212 1 1 1 
                              Uniform f32_4* %214 = OpAccessChain %22 %163 %41 
                                       f32_4 %215 = OpLoad %214 
                                       f32_3 %216 = OpVectorShuffle %215 %215 0 1 2 
                                       f32_3 %217 = OpFMul %213 %216 
                                                      OpStore %124 %217 
                              Uniform f32_4* %218 = OpAccessChain %22 %163 %24 
                                       f32_4 %219 = OpLoad %218 
                                       f32_3 %220 = OpVectorShuffle %219 %219 0 1 2 
                                       f32_3 %221 = OpLoad vs_TEXCOORD2 
                                       f32_3 %222 = OpVectorShuffle %221 %221 0 0 0 
                                       f32_3 %223 = OpFMul %220 %222 
                                       f32_3 %224 = OpLoad %124 
                                       f32_3 %225 = OpFAdd %223 %224 
                                                      OpStore %124 %225 
                              Uniform f32_4* %226 = OpAccessChain %22 %163 %163 
                                       f32_4 %227 = OpLoad %226 
                                       f32_3 %228 = OpVectorShuffle %227 %227 0 1 2 
                                       f32_3 %229 = OpLoad vs_TEXCOORD2 
                                       f32_3 %230 = OpVectorShuffle %229 %229 2 2 2 
                                       f32_3 %231 = OpFMul %228 %230 
                                       f32_3 %232 = OpLoad %124 
                                       f32_3 %233 = OpFAdd %231 %232 
                                                      OpStore %124 %233 
                                       f32_3 %234 = OpLoad %124 
                              Uniform f32_4* %235 = OpAccessChain %22 %163 %200 
                                       f32_4 %236 = OpLoad %235 
                                       f32_3 %237 = OpVectorShuffle %236 %236 0 1 2 
                                       f32_3 %238 = OpFAdd %234 %237 
                                                      OpStore %124 %238 
                                       f32_3 %241 = OpLoad %124 
                                       f32_2 %242 = OpVectorShuffle %241 %241 0 1 
                                Private f32* %243 = OpAccessChain %124 %156 
                                         f32 %244 = OpLoad %243 
                                         f32 %245 = OpCompositeExtract %242 0 
                                         f32 %246 = OpCompositeExtract %242 1 
                                       f32_3 %247 = OpCompositeConstruct %245 %246 %244 
                                                      OpStore %240 %247 
                         read_only Texture2D %251 = OpLoad %250 
                                     sampler %255 = OpLoad %254 
                  read_only Texture2DSampled %258 = OpSampledImage %251 %255 
                                       f32_3 %259 = OpLoad %240 
                                         f32 %260 = OpCompositeExtract %259 2 
                                         f32 %261 = OpImageSampleDrefExplicitLod %258 %259 %260 Lod %6 
                                                      OpStore %178 %261 
                                Uniform f32* %262 = OpAccessChain %22 %200 %71 
                                         f32 %263 = OpLoad %262 
                                         f32 %264 = OpFNegate %263 
                                         f32 %265 = OpFAdd %264 %131 
                                Private f32* %266 = OpAccessChain %36 %71 
                                                      OpStore %266 %265 
                                         f32 %267 = OpLoad %178 
                                Private f32* %268 = OpAccessChain %36 %71 
                                         f32 %269 = OpLoad %268 
                                         f32 %270 = OpFMul %267 %269 
                                Uniform f32* %271 = OpAccessChain %22 %200 %71 
                                         f32 %272 = OpLoad %271 
                                         f32 %273 = OpFAdd %270 %272 
                                Private f32* %274 = OpAccessChain %36 %71 
                                                      OpStore %274 %273 
                                Private f32* %275 = OpAccessChain %36 %71 
                                         f32 %276 = OpLoad %275 
                                         f32 %277 = OpFNegate %276 
                                         f32 %278 = OpFAdd %277 %131 
                                                      OpStore %119 %278 
                                Private f32* %279 = OpAccessChain %9 %71 
                                         f32 %280 = OpLoad %279 
                                         f32 %281 = OpLoad %119 
                                         f32 %282 = OpFMul %280 %281 
                                Private f32* %283 = OpAccessChain %36 %71 
                                         f32 %284 = OpLoad %283 
                                         f32 %285 = OpFAdd %282 %284 
                                Private f32* %286 = OpAccessChain %36 %71 
                                                      OpStore %286 %285 
                                         f32 %287 = OpLoad %30 
                                Private f32* %288 = OpAccessChain %36 %71 
                                         f32 %289 = OpLoad %288 
                                         f32 %290 = OpFMul %287 %289 
                                Private f32* %291 = OpAccessChain %9 %71 
                                                      OpStore %291 %290 
                              Uniform f32_4* %293 = OpAccessChain %22 %292 
                                       f32_4 %294 = OpLoad %293 
                                       f32_3 %295 = OpVectorShuffle %294 %294 0 1 2 
                              Uniform f32_4* %297 = OpAccessChain %22 %296 
                                       f32_4 %298 = OpLoad %297 
                                       f32_3 %299 = OpVectorShuffle %298 %298 0 1 2 
                                       f32_3 %300 = OpFMul %295 %299 
                                                      OpStore %63 %300 
                                       f32_3 %301 = OpLoad %9 
                                       f32_3 %302 = OpVectorShuffle %301 %301 0 0 0 
                                       f32_3 %303 = OpLoad %63 
                                       f32_3 %304 = OpFMul %302 %303 
                                                      OpStore %9 %304 
                                Uniform f32* %306 = OpAccessChain %22 %305 
                                         f32 %307 = OpLoad %306 
                                         f32 %308 = OpFNegate %307 
                                         f32 %309 = OpFMul %308 %108 
                                Uniform f32* %311 = OpAccessChain %22 %310 
                                         f32 %312 = OpLoad %311 
                                         f32 %313 = OpFAdd %309 %312 
                                                      OpStore %119 %313 
                                         f32 %315 = OpLoad %119 
                                         f32 %316 = OpFNegate %315 
                                Private f32* %317 = OpAccessChain %36 %78 
                                         f32 %318 = OpLoad %317 
                                         f32 %319 = OpFAdd %316 %318 
                                Private f32* %320 = OpAccessChain %314 %71 
                                                      OpStore %320 %319 
                                Uniform f32* %321 = OpAccessChain %22 %305 
                                         f32 %322 = OpLoad %321 
                                         f32 %323 = OpFMul %322 %108 
                                Uniform f32* %324 = OpAccessChain %22 %310 
                                         f32 %325 = OpLoad %324 
                                         f32 %326 = OpFAdd %323 %325 
                                                      OpStore %47 %326 
                                         f32 %327 = OpLoad %119 
                                         f32 %328 = OpFNegate %327 
                                         f32 %329 = OpLoad %47 
                                         f32 %330 = OpFAdd %328 %329 
                                                      OpStore %119 %330 
                                         f32 %331 = OpLoad %119 
                                         f32 %332 = OpFDiv %131 %331 
                                                      OpStore %119 %332 
                                         f32 %333 = OpLoad %119 
                                Private f32* %334 = OpAccessChain %314 %71 
                                         f32 %335 = OpLoad %334 
                                         f32 %336 = OpFMul %333 %335 
                                Private f32* %337 = OpAccessChain %314 %71 
                                                      OpStore %337 %336 
                                Private f32* %338 = OpAccessChain %314 %71 
                                         f32 %339 = OpLoad %338 
                                         f32 %340 = OpExtInst %1 43 %339 %83 %131 
                                Private f32* %341 = OpAccessChain %314 %71 
                                                      OpStore %341 %340 
                                Private f32* %342 = OpAccessChain %314 %71 
                                         f32 %343 = OpLoad %342 
                                         f32 %344 = OpFMul %343 %143 
                                         f32 %345 = OpFAdd %344 %145 
                                                      OpStore %119 %345 
                                Private f32* %346 = OpAccessChain %314 %71 
                                         f32 %347 = OpLoad %346 
                                Private f32* %348 = OpAccessChain %314 %71 
                                         f32 %349 = OpLoad %348 
                                         f32 %350 = OpFMul %347 %349 
                                Private f32* %351 = OpAccessChain %314 %71 
                                                      OpStore %351 %350 
                                Private f32* %352 = OpAccessChain %314 %71 
                                         f32 %353 = OpLoad %352 
                                         f32 %354 = OpLoad %119 
                                         f32 %355 = OpFMul %353 %354 
                                Private f32* %356 = OpAccessChain %314 %71 
                                                      OpStore %356 %355 
                                Private f32* %357 = OpAccessChain %36 %71 
                                         f32 %358 = OpLoad %357 
                                Private f32* %359 = OpAccessChain %314 %71 
                                         f32 %360 = OpLoad %359 
                                         f32 %361 = OpFMul %358 %360 
                                Private f32* %362 = OpAccessChain %36 %71 
                                                      OpStore %362 %361 
                              Uniform f32_4* %364 = OpAccessChain %22 %363 
                                       f32_4 %365 = OpLoad %364 
                                       f32_3 %366 = OpVectorShuffle %365 %365 0 1 2 
                                       f32_3 %367 = OpFNegate %366 
                              Uniform f32_4* %369 = OpAccessChain %22 %368 
                                       f32_4 %370 = OpLoad %369 
                                       f32_3 %371 = OpVectorShuffle %370 %370 0 1 2 
                                       f32_3 %372 = OpFAdd %367 %371 
                                                      OpStore %314 %372 
                              Uniform f32_4* %373 = OpAccessChain %22 %368 
                                       f32_4 %374 = OpLoad %373 
                                       f32_3 %375 = OpVectorShuffle %374 %374 3 3 3 
                                       f32_3 %376 = OpLoad %314 
                                       f32_3 %377 = OpFMul %375 %376 
                              Uniform f32_4* %378 = OpAccessChain %22 %363 
                                       f32_4 %379 = OpLoad %378 
                                       f32_3 %380 = OpVectorShuffle %379 %379 0 1 2 
                                       f32_3 %381 = OpFAdd %377 %380 
                                                      OpStore %314 %381 
                                       f32_3 %382 = OpLoad %314 
                                       f32_3 %383 = OpFNegate %382 
                              Uniform f32_4* %384 = OpAccessChain %22 %363 
                                       f32_4 %385 = OpLoad %384 
                                       f32_3 %386 = OpVectorShuffle %385 %385 0 1 2 
                                       f32_3 %387 = OpFAdd %383 %386 
                                                      OpStore %63 %387 
                                       f32_3 %388 = OpLoad %36 
                                       f32_3 %389 = OpVectorShuffle %388 %388 0 0 0 
                                       f32_3 %390 = OpLoad %63 
                                       f32_3 %391 = OpFMul %389 %390 
                                       f32_3 %392 = OpLoad %314 
                                       f32_3 %393 = OpFAdd %391 %392 
                                                      OpStore %36 %393 
                         read_only Texture2D %396 = OpLoad %395 
                                     sampler %398 = OpLoad %397 
                  read_only Texture2DSampled %400 = OpSampledImage %396 %398 
                                       f32_2 %403 = OpLoad vs_TEXCOORD0 
                                       f32_4 %404 = OpImageSampleImplicitLod %400 %403 
                                       f32_3 %405 = OpVectorShuffle %404 %404 0 1 2 
                                                      OpStore %394 %405 
                                       f32_3 %406 = OpLoad %394 
                              Uniform f32_4* %408 = OpAccessChain %22 %407 
                                       f32_4 %409 = OpLoad %408 
                                       f32_3 %410 = OpVectorShuffle %409 %409 0 1 2 
                                       f32_3 %411 = OpFMul %406 %410 
                                                      OpStore %63 %411 
                                       f32_3 %412 = OpLoad %63 
                              Uniform f32_4* %413 = OpAccessChain %22 %292 
                                       f32_4 %414 = OpLoad %413 
                                       f32_3 %415 = OpVectorShuffle %414 %414 0 1 2 
                                       f32_3 %416 = OpFMul %412 %415 
                                                      OpStore %63 %416 
                                       f32_3 %417 = OpLoad %63 
                                       f32_3 %418 = OpLoad %36 
                                       f32_3 %419 = OpFMul %417 %418 
                                       f32_3 %420 = OpLoad %9 
                                       f32_3 %421 = OpFAdd %419 %420 
                                                      OpStore %9 %421 
                                       f32_3 %424 = OpLoad %9 
                                       f32_4 %425 = OpLoad %423 
                                       f32_4 %426 = OpVectorShuffle %425 %424 4 5 6 3 
                                                      OpStore %423 %426 
                                 Output f32* %428 = OpAccessChain %423 %189 
                                                      OpStore %428 %131 
                                                      OpReturn
                                                      OpFunctionEnd
"
}
SubProgram "vulkan hw_tier01 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "VERTEXLIGHT_ON" }
"; SPIR-V
; Version: 1.0
; Generator: Khronos Glslang Reference Front End; 6
; Bound: 160
; Schema: 0
                                                      OpCapability Shader 
                                               %1 = OpExtInstImport "GLSL.std.450" 
                                                      OpMemoryModel Logical GLSL450 
                                                      OpEntryPoint Vertex %4 "main" %11 %52 %85 %95 %110 %114 %144 %150 %153 
                                                      OpName vs_TEXCOORD2 "vs_TEXCOORD2" 
                                                      OpName vs_TEXCOORD0 "vs_TEXCOORD0" 
                                                      OpName vs_TEXCOORD1 "vs_TEXCOORD1" 
                                                      OpName vs_TEXCOORD5 "vs_TEXCOORD5" 
                                                      OpName vs_TEXCOORD6 "vs_TEXCOORD6" 
                                                      OpDecorate %11 Location 11 
                                                      OpDecorate %16 ArrayStride 16 
                                                      OpDecorate %17 ArrayStride 17 
                                                      OpDecorate %18 ArrayStride 18 
                                                      OpMemberDecorate %19 0 Offset 19 
                                                      OpMemberDecorate %19 1 Offset 19 
                                                      OpMemberDecorate %19 2 Offset 19 
                                                      OpMemberDecorate %19 3 Offset 19 
                                                      OpDecorate %19 Block 
                                                      OpDecorate %21 DescriptorSet 21 
                                                      OpDecorate %21 Binding 21 
                                                      OpDecorate vs_TEXCOORD2 Location 52 
                                                      OpMemberDecorate %83 0 BuiltIn 83 
                                                      OpMemberDecorate %83 1 BuiltIn 83 
                                                      OpMemberDecorate %83 2 BuiltIn 83 
                                                      OpDecorate %83 Block 
                                                      OpDecorate %95 Location 95 
                                                      OpDecorate vs_TEXCOORD0 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD0 Location 110 
                                                      OpDecorate %114 Location 114 
                                                      OpDecorate vs_TEXCOORD1 Location 144 
                                                      OpDecorate vs_TEXCOORD5 Location 150 
                                                      OpDecorate vs_TEXCOORD6 Location 153 
                                               %2 = OpTypeVoid 
                                               %3 = OpTypeFunction %2 
                                               %6 = OpTypeFloat 32 
                                               %7 = OpTypeVector %6 4 
                                               %8 = OpTypePointer Private %7 
                                Private f32_4* %9 = OpVariable Private 
                                              %10 = OpTypePointer Input %7 
                                 Input f32_4* %11 = OpVariable Input 
                                              %14 = OpTypeInt 32 0 
                                          u32 %15 = OpConstant 4 
                                              %16 = OpTypeArray %7 %15 
                                              %17 = OpTypeArray %7 %15 
                                              %18 = OpTypeArray %7 %15 
                                              %19 = OpTypeStruct %16 %17 %18 %7 
                                              %20 = OpTypePointer Uniform %19 
Uniform struct {f32_4[4]; f32_4[4]; f32_4[4]; f32_4;}* %21 = OpVariable Uniform 
                                              %22 = OpTypeInt 32 1 
                                          i32 %23 = OpConstant 0 
                                          i32 %24 = OpConstant 1 
                                              %25 = OpTypePointer Uniform %7 
                                          i32 %36 = OpConstant 2 
                               Private f32_4* %44 = OpVariable Private 
                                          i32 %46 = OpConstant 3 
                                              %50 = OpTypeVector %6 3 
                                              %51 = OpTypePointer Output %50 
                       Output f32_3* vs_TEXCOORD2 = OpVariable Output 
                                          u32 %81 = OpConstant 1 
                                              %82 = OpTypeArray %6 %81 
                                              %83 = OpTypeStruct %7 %6 %82 
                                              %84 = OpTypePointer Output %83 
         Output struct {f32_4; f32; f32[1];}* %85 = OpVariable Output 
                                              %93 = OpTypePointer Output %7 
                                 Input f32_4* %95 = OpVariable Input 
                                              %96 = OpTypeVector %6 2 
                                             %109 = OpTypePointer Output %96 
                       Output f32_2* vs_TEXCOORD0 = OpVariable Output 
                                             %113 = OpTypePointer Input %50 
                                Input f32_3* %114 = OpVariable Input 
                                         u32 %120 = OpConstant 0 
                                             %121 = OpTypePointer Private %6 
                                         u32 %134 = OpConstant 2 
                                Private f32* %136 = OpVariable Private 
                       Output f32_3* vs_TEXCOORD1 = OpVariable Output 
                       Output f32_4* vs_TEXCOORD5 = OpVariable Output 
                                         f32 %151 = OpConstant 3.674022E-40 
                                       f32_4 %152 = OpConstantComposite %151 %151 %151 %151 
                       Output f32_4* vs_TEXCOORD6 = OpVariable Output 
                                             %154 = OpTypePointer Output %6 
                                          void %4 = OpFunction None %3 
                                               %5 = OpLabel 
                                        f32_4 %12 = OpLoad %11 
                                        f32_4 %13 = OpVectorShuffle %12 %12 1 1 1 1 
                               Uniform f32_4* %26 = OpAccessChain %21 %23 %24 
                                        f32_4 %27 = OpLoad %26 
                                        f32_4 %28 = OpFMul %13 %27 
                                                      OpStore %9 %28 
                               Uniform f32_4* %29 = OpAccessChain %21 %23 %23 
                                        f32_4 %30 = OpLoad %29 
                                        f32_4 %31 = OpLoad %11 
                                        f32_4 %32 = OpVectorShuffle %31 %31 0 0 0 0 
                                        f32_4 %33 = OpFMul %30 %32 
                                        f32_4 %34 = OpLoad %9 
                                        f32_4 %35 = OpFAdd %33 %34 
                                                      OpStore %9 %35 
                               Uniform f32_4* %37 = OpAccessChain %21 %23 %36 
                                        f32_4 %38 = OpLoad %37 
                                        f32_4 %39 = OpLoad %11 
                                        f32_4 %40 = OpVectorShuffle %39 %39 2 2 2 2 
                                        f32_4 %41 = OpFMul %38 %40 
                                        f32_4 %42 = OpLoad %9 
                                        f32_4 %43 = OpFAdd %41 %42 
                                                      OpStore %9 %43 
                                        f32_4 %45 = OpLoad %9 
                               Uniform f32_4* %47 = OpAccessChain %21 %23 %46 
                                        f32_4 %48 = OpLoad %47 
                                        f32_4 %49 = OpFAdd %45 %48 
                                                      OpStore %44 %49 
                               Uniform f32_4* %53 = OpAccessChain %21 %23 %46 
                                        f32_4 %54 = OpLoad %53 
                                        f32_3 %55 = OpVectorShuffle %54 %54 0 1 2 
                                        f32_4 %56 = OpLoad %11 
                                        f32_3 %57 = OpVectorShuffle %56 %56 3 3 3 
                                        f32_3 %58 = OpFMul %55 %57 
                                        f32_4 %59 = OpLoad %9 
                                        f32_3 %60 = OpVectorShuffle %59 %59 0 1 2 
                                        f32_3 %61 = OpFAdd %58 %60 
                                                      OpStore vs_TEXCOORD2 %61 
                                        f32_4 %62 = OpLoad %44 
                                        f32_4 %63 = OpVectorShuffle %62 %62 1 1 1 1 
                               Uniform f32_4* %64 = OpAccessChain %21 %36 %24 
                                        f32_4 %65 = OpLoad %64 
                                        f32_4 %66 = OpFMul %63 %65 
                                                      OpStore %9 %66 
                               Uniform f32_4* %67 = OpAccessChain %21 %36 %23 
                                        f32_4 %68 = OpLoad %67 
                                        f32_4 %69 = OpLoad %44 
                                        f32_4 %70 = OpVectorShuffle %69 %69 0 0 0 0 
                                        f32_4 %71 = OpFMul %68 %70 
                                        f32_4 %72 = OpLoad %9 
                                        f32_4 %73 = OpFAdd %71 %72 
                                                      OpStore %9 %73 
                               Uniform f32_4* %74 = OpAccessChain %21 %36 %36 
                                        f32_4 %75 = OpLoad %74 
                                        f32_4 %76 = OpLoad %44 
                                        f32_4 %77 = OpVectorShuffle %76 %76 2 2 2 2 
                                        f32_4 %78 = OpFMul %75 %77 
                                        f32_4 %79 = OpLoad %9 
                                        f32_4 %80 = OpFAdd %78 %79 
                                                      OpStore %9 %80 
                               Uniform f32_4* %86 = OpAccessChain %21 %36 %46 
                                        f32_4 %87 = OpLoad %86 
                                        f32_4 %88 = OpLoad %44 
                                        f32_4 %89 = OpVectorShuffle %88 %88 3 3 3 3 
                                        f32_4 %90 = OpFMul %87 %89 
                                        f32_4 %91 = OpLoad %9 
                                        f32_4 %92 = OpFAdd %90 %91 
                                Output f32_4* %94 = OpAccessChain %85 %23 
                                                      OpStore %94 %92 
                                        f32_4 %97 = OpLoad %95 
                                        f32_2 %98 = OpVectorShuffle %97 %97 0 1 
                               Uniform f32_4* %99 = OpAccessChain %21 %46 
                                       f32_4 %100 = OpLoad %99 
                                       f32_2 %101 = OpVectorShuffle %100 %100 0 1 
                                       f32_2 %102 = OpFMul %98 %101 
                              Uniform f32_4* %103 = OpAccessChain %21 %46 
                                       f32_4 %104 = OpLoad %103 
                                       f32_2 %105 = OpVectorShuffle %104 %104 2 3 
                                       f32_2 %106 = OpFAdd %102 %105 
                                       f32_4 %107 = OpLoad %9 
                                       f32_4 %108 = OpVectorShuffle %107 %106 4 5 2 3 
                                                      OpStore %9 %108 
                                       f32_4 %111 = OpLoad %9 
                                       f32_2 %112 = OpVectorShuffle %111 %111 0 1 
                                                      OpStore vs_TEXCOORD0 %112 
                                       f32_3 %115 = OpLoad %114 
                              Uniform f32_4* %116 = OpAccessChain %21 %24 %23 
                                       f32_4 %117 = OpLoad %116 
                                       f32_3 %118 = OpVectorShuffle %117 %117 0 1 2 
                                         f32 %119 = OpDot %115 %118 
                                Private f32* %122 = OpAccessChain %9 %120 
                                                      OpStore %122 %119 
                                       f32_3 %123 = OpLoad %114 
                              Uniform f32_4* %124 = OpAccessChain %21 %24 %24 
                                       f32_4 %125 = OpLoad %124 
                                       f32_3 %126 = OpVectorShuffle %125 %125 0 1 2 
                                         f32 %127 = OpDot %123 %126 
                                Private f32* %128 = OpAccessChain %9 %81 
                                                      OpStore %128 %127 
                                       f32_3 %129 = OpLoad %114 
                              Uniform f32_4* %130 = OpAccessChain %21 %24 %36 
                                       f32_4 %131 = OpLoad %130 
                                       f32_3 %132 = OpVectorShuffle %131 %131 0 1 2 
                                         f32 %133 = OpDot %129 %132 
                                Private f32* %135 = OpAccessChain %9 %134 
                                                      OpStore %135 %133 
                                       f32_4 %137 = OpLoad %9 
                                       f32_3 %138 = OpVectorShuffle %137 %137 0 1 2 
                                       f32_4 %139 = OpLoad %9 
                                       f32_3 %140 = OpVectorShuffle %139 %139 0 1 2 
                                         f32 %141 = OpDot %138 %140 
                                                      OpStore %136 %141 
                                         f32 %142 = OpLoad %136 
                                         f32 %143 = OpExtInst %1 32 %142 
                                                      OpStore %136 %143 
                                         f32 %145 = OpLoad %136 
                                       f32_3 %146 = OpCompositeConstruct %145 %145 %145 
                                       f32_4 %147 = OpLoad %9 
                                       f32_3 %148 = OpVectorShuffle %147 %147 0 1 2 
                                       f32_3 %149 = OpFMul %146 %148 
                                                      OpStore vs_TEXCOORD1 %149 
                                                      OpStore vs_TEXCOORD5 %152 
                                                      OpStore vs_TEXCOORD6 %152 
                                 Output f32* %155 = OpAccessChain %85 %23 %81 
                                         f32 %156 = OpLoad %155 
                                         f32 %157 = OpFNegate %156 
                                 Output f32* %158 = OpAccessChain %85 %23 %81 
                                                      OpStore %158 %157 
                                                      OpReturn
                                                      OpFunctionEnd
; SPIR-V
; Version: 1.0
; Generator: Khronos Glslang Reference Front End; 6
; Bound: 430
; Schema: 0
                                                      OpCapability Shader 
                                               %1 = OpExtInstImport "GLSL.std.450" 
                                                      OpMemoryModel Logical GLSL450 
                                                      OpEntryPoint Fragment %4 "main" %11 %57 %402 %423 
                                                      OpExecutionMode %4 OriginUpperLeft 
                                                      OpName vs_TEXCOORD2 "vs_TEXCOORD2" 
                                                      OpName vs_TEXCOORD1 "vs_TEXCOORD1" 
                                                      OpName vs_TEXCOORD0 "vs_TEXCOORD0" 
                                                      OpDecorate vs_TEXCOORD2 Location 11 
                                                      OpDecorate %17 ArrayStride 17 
                                                      OpDecorate %19 ArrayStride 19 
                                                      OpMemberDecorate %20 0 Offset 20 
                                                      OpMemberDecorate %20 1 RelaxedPrecision 
                                                      OpMemberDecorate %20 1 Offset 20 
                                                      OpMemberDecorate %20 2 Offset 20 
                                                      OpMemberDecorate %20 3 RelaxedPrecision 
                                                      OpMemberDecorate %20 3 Offset 20 
                                                      OpMemberDecorate %20 4 Offset 20 
                                                      OpMemberDecorate %20 5 Offset 20 
                                                      OpMemberDecorate %20 6 RelaxedPrecision 
                                                      OpMemberDecorate %20 6 Offset 20 
                                                      OpMemberDecorate %20 7 RelaxedPrecision 
                                                      OpMemberDecorate %20 7 Offset 20 
                                                      OpMemberDecorate %20 8 RelaxedPrecision 
                                                      OpMemberDecorate %20 8 Offset 20 
                                                      OpMemberDecorate %20 9 RelaxedPrecision 
                                                      OpMemberDecorate %20 9 Offset 20 
                                                      OpMemberDecorate %20 10 RelaxedPrecision 
                                                      OpMemberDecorate %20 10 Offset 20 
                                                      OpMemberDecorate %20 11 RelaxedPrecision 
                                                      OpMemberDecorate %20 11 Offset 20 
                                                      OpMemberDecorate %20 12 RelaxedPrecision 
                                                      OpMemberDecorate %20 12 Offset 20 
                                                      OpMemberDecorate %20 13 RelaxedPrecision 
                                                      OpMemberDecorate %20 13 Offset 20 
                                                      OpMemberDecorate %20 14 RelaxedPrecision 
                                                      OpMemberDecorate %20 14 Offset 20 
                                                      OpDecorate %20 Block 
                                                      OpDecorate %22 DescriptorSet 22 
                                                      OpDecorate %22 Binding 22 
                                                      OpDecorate %36 RelaxedPrecision 
                                                      OpDecorate %44 RelaxedPrecision 
                                                      OpDecorate %45 RelaxedPrecision 
                                                      OpDecorate %47 RelaxedPrecision 
                                                      OpDecorate %48 RelaxedPrecision 
                                                      OpDecorate %49 RelaxedPrecision 
                                                      OpDecorate %50 RelaxedPrecision 
                                                      OpDecorate %51 RelaxedPrecision 
                                                      OpDecorate %52 RelaxedPrecision 
                                                      OpDecorate %53 RelaxedPrecision 
                                                      OpDecorate %54 RelaxedPrecision 
                                                      OpDecorate %55 RelaxedPrecision 
                                                      OpDecorate %56 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD1 Location 57 
                                                      OpDecorate %61 RelaxedPrecision 
                                                      OpDecorate %62 RelaxedPrecision 
                                                      OpDecorate %63 RelaxedPrecision 
                                                      OpDecorate %64 RelaxedPrecision 
                                                      OpDecorate %68 RelaxedPrecision 
                                                      OpDecorate %69 RelaxedPrecision 
                                                      OpDecorate %70 RelaxedPrecision 
                                                      OpDecorate %73 RelaxedPrecision 
                                                      OpDecorate %75 RelaxedPrecision 
                                                      OpDecorate %76 RelaxedPrecision 
                                                      OpDecorate %77 RelaxedPrecision 
                                                      OpDecorate %81 RelaxedPrecision 
                                                      OpDecorate %82 RelaxedPrecision 
                                                      OpDecorate %85 RelaxedPrecision 
                                                      OpDecorate %89 RelaxedPrecision 
                                                      OpDecorate %90 RelaxedPrecision 
                                                      OpDecorate %94 RelaxedPrecision 
                                                      OpDecorate %96 RelaxedPrecision 
                                                      OpDecorate %100 RelaxedPrecision 
                                                      OpDecorate %106 RelaxedPrecision 
                                                      OpDecorate %107 RelaxedPrecision 
                                                      OpDecorate %109 RelaxedPrecision 
                                                      OpDecorate %110 RelaxedPrecision 
                                                      OpDecorate %116 RelaxedPrecision 
                                                      OpDecorate %117 RelaxedPrecision 
                                                      OpDecorate %119 RelaxedPrecision 
                                                      OpDecorate %121 RelaxedPrecision 
                                                      OpDecorate %122 RelaxedPrecision 
                                                      OpDecorate %123 RelaxedPrecision 
                                                      OpDecorate %126 RelaxedPrecision 
                                                      OpDecorate %127 RelaxedPrecision 
                                                      OpDecorate %128 RelaxedPrecision 
                                                      OpDecorate %129 RelaxedPrecision 
                                                      OpDecorate %202 RelaxedPrecision 
                                                      OpDecorate %205 RelaxedPrecision 
                                                      OpDecorate %250 DescriptorSet 250 
                                                      OpDecorate %250 Binding 250 
                                                      OpDecorate %254 DescriptorSet 254 
                                                      OpDecorate %254 Binding 254 
                                                      OpDecorate %263 RelaxedPrecision 
                                                      OpDecorate %264 RelaxedPrecision 
                                                      OpDecorate %265 RelaxedPrecision 
                                                      OpDecorate %269 RelaxedPrecision 
                                                      OpDecorate %272 RelaxedPrecision 
                                                      OpDecorate %276 RelaxedPrecision 
                                                      OpDecorate %277 RelaxedPrecision 
                                                      OpDecorate %278 RelaxedPrecision 
                                                      OpDecorate %281 RelaxedPrecision 
                                                      OpDecorate %284 RelaxedPrecision 
                                                      OpDecorate %289 RelaxedPrecision 
                                                      OpDecorate %294 RelaxedPrecision 
                                                      OpDecorate %295 RelaxedPrecision 
                                                      OpDecorate %298 RelaxedPrecision 
                                                      OpDecorate %299 RelaxedPrecision 
                                                      OpDecorate %300 RelaxedPrecision 
                                                      OpDecorate %303 RelaxedPrecision 
                                                      OpDecorate %307 RelaxedPrecision 
                                                      OpDecorate %308 RelaxedPrecision 
                                                      OpDecorate %309 RelaxedPrecision 
                                                      OpDecorate %312 RelaxedPrecision 
                                                      OpDecorate %313 RelaxedPrecision 
                                                      OpDecorate %314 RelaxedPrecision 
                                                      OpDecorate %315 RelaxedPrecision 
                                                      OpDecorate %316 RelaxedPrecision 
                                                      OpDecorate %318 RelaxedPrecision 
                                                      OpDecorate %319 RelaxedPrecision 
                                                      OpDecorate %322 RelaxedPrecision 
                                                      OpDecorate %323 RelaxedPrecision 
                                                      OpDecorate %325 RelaxedPrecision 
                                                      OpDecorate %326 RelaxedPrecision 
                                                      OpDecorate %327 RelaxedPrecision 
                                                      OpDecorate %328 RelaxedPrecision 
                                                      OpDecorate %329 RelaxedPrecision 
                                                      OpDecorate %330 RelaxedPrecision 
                                                      OpDecorate %331 RelaxedPrecision 
                                                      OpDecorate %332 RelaxedPrecision 
                                                      OpDecorate %333 RelaxedPrecision 
                                                      OpDecorate %335 RelaxedPrecision 
                                                      OpDecorate %336 RelaxedPrecision 
                                                      OpDecorate %339 RelaxedPrecision 
                                                      OpDecorate %340 RelaxedPrecision 
                                                      OpDecorate %343 RelaxedPrecision 
                                                      OpDecorate %344 RelaxedPrecision 
                                                      OpDecorate %345 RelaxedPrecision 
                                                      OpDecorate %347 RelaxedPrecision 
                                                      OpDecorate %349 RelaxedPrecision 
                                                      OpDecorate %350 RelaxedPrecision 
                                                      OpDecorate %353 RelaxedPrecision 
                                                      OpDecorate %354 RelaxedPrecision 
                                                      OpDecorate %355 RelaxedPrecision 
                                                      OpDecorate %358 RelaxedPrecision 
                                                      OpDecorate %360 RelaxedPrecision 
                                                      OpDecorate %361 RelaxedPrecision 
                                                      OpDecorate %365 RelaxedPrecision 
                                                      OpDecorate %366 RelaxedPrecision 
                                                      OpDecorate %367 RelaxedPrecision 
                                                      OpDecorate %370 RelaxedPrecision 
                                                      OpDecorate %371 RelaxedPrecision 
                                                      OpDecorate %372 RelaxedPrecision 
                                                      OpDecorate %374 RelaxedPrecision 
                                                      OpDecorate %375 RelaxedPrecision 
                                                      OpDecorate %376 RelaxedPrecision 
                                                      OpDecorate %377 RelaxedPrecision 
                                                      OpDecorate %379 RelaxedPrecision 
                                                      OpDecorate %380 RelaxedPrecision 
                                                      OpDecorate %381 RelaxedPrecision 
                                                      OpDecorate %382 RelaxedPrecision 
                                                      OpDecorate %383 RelaxedPrecision 
                                                      OpDecorate %385 RelaxedPrecision 
                                                      OpDecorate %386 RelaxedPrecision 
                                                      OpDecorate %387 RelaxedPrecision 
                                                      OpDecorate %388 RelaxedPrecision 
                                                      OpDecorate %389 RelaxedPrecision 
                                                      OpDecorate %390 RelaxedPrecision 
                                                      OpDecorate %391 RelaxedPrecision 
                                                      OpDecorate %392 RelaxedPrecision 
                                                      OpDecorate %393 RelaxedPrecision 
                                                      OpDecorate %394 RelaxedPrecision 
                                                      OpDecorate %395 RelaxedPrecision 
                                                      OpDecorate %395 DescriptorSet 395 
                                                      OpDecorate %395 Binding 395 
                                                      OpDecorate %396 RelaxedPrecision 
                                                      OpDecorate %397 RelaxedPrecision 
                                                      OpDecorate %397 DescriptorSet 397 
                                                      OpDecorate %397 Binding 397 
                                                      OpDecorate %398 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD0 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD0 Location 402 
                                                      OpDecorate %403 RelaxedPrecision 
                                                      OpDecorate %404 RelaxedPrecision 
                                                      OpDecorate %405 RelaxedPrecision 
                                                      OpDecorate %406 RelaxedPrecision 
                                                      OpDecorate %409 RelaxedPrecision 
                                                      OpDecorate %410 RelaxedPrecision 
                                                      OpDecorate %411 RelaxedPrecision 
                                                      OpDecorate %412 RelaxedPrecision 
                                                      OpDecorate %414 RelaxedPrecision 
                                                      OpDecorate %415 RelaxedPrecision 
                                                      OpDecorate %416 RelaxedPrecision 
                                                      OpDecorate %417 RelaxedPrecision 
                                                      OpDecorate %418 RelaxedPrecision 
                                                      OpDecorate %419 RelaxedPrecision 
                                                      OpDecorate %423 RelaxedPrecision 
                                                      OpDecorate %423 Location 423 
                                               %2 = OpTypeVoid 
                                               %3 = OpTypeFunction %2 
                                               %6 = OpTypeFloat 32 
                                               %7 = OpTypeVector %6 3 
                                               %8 = OpTypePointer Private %7 
                                Private f32_3* %9 = OpVariable Private 
                                              %10 = OpTypePointer Input %7 
                        Input f32_3* vs_TEXCOORD2 = OpVariable Input 
                                              %14 = OpTypeVector %6 4 
                                              %15 = OpTypeInt 32 0 
                                          u32 %16 = OpConstant 16 
                                              %17 = OpTypeArray %14 %16 
                                          u32 %18 = OpConstant 4 
                                              %19 = OpTypeArray %14 %18 
                                              %20 = OpTypeStruct %7 %14 %17 %14 %14 %19 %14 %14 %14 %6 %14 %14 %6 %6 %6 
                                              %21 = OpTypePointer Uniform %20 
Uniform struct {f32_3; f32_4; f32_4[16]; f32_4; f32_4; f32_4[4]; f32_4; f32_4; f32_4; f32; f32_4; f32_4; f32; f32; f32;}* %22 = OpVariable Uniform 
                                              %23 = OpTypeInt 32 1 
                                          i32 %24 = OpConstant 0 
                                              %25 = OpTypePointer Uniform %7 
                                              %29 = OpTypePointer Private %6 
                                 Private f32* %30 = OpVariable Private 
                               Private f32_3* %36 = OpVariable Private 
                                          i32 %41 = OpConstant 1 
                                              %42 = OpTypePointer Uniform %14 
                                 Private f32* %47 = OpVariable Private 
                        Input f32_3* vs_TEXCOORD1 = OpVariable Input 
                               Private f32_3* %63 = OpVariable Private 
                                          u32 %71 = OpConstant 0 
                                          u32 %78 = OpConstant 1 
                                              %80 = OpTypeVector %6 2 
                                          f32 %83 = OpConstant 3.674022E-40 
                                        f32_2 %84 = OpConstantComposite %83 %83 
                                          i32 %91 = OpConstant 9 
                                              %92 = OpTypePointer Uniform %6 
                                          f32 %95 = OpConstant 3.674022E-40 
                                         i32 %104 = OpConstant 14 
                                         f32 %108 = OpConstant 3.674022E-40 
                                         f32 %113 = OpConstant 3.674022E-40 
                                Private f32* %119 = OpVariable Private 
                              Private f32_3* %124 = OpVariable Private 
                                         f32 %131 = OpConstant 3.674022E-40 
                                         f32 %143 = OpConstant 3.674022E-40 
                                         f32 %145 = OpConstant 3.674022E-40 
                                         i32 %155 = OpConstant 5 
                                         u32 %156 = OpConstant 2 
                                         i32 %163 = OpConstant 2 
                                         i32 %172 = OpConstant 4 
                                Private f32* %178 = OpVariable Private 
                                         u32 %189 = OpConstant 3 
                                         i32 %200 = OpConstant 3 
                                             %239 = OpTypePointer Function %7 
                                             %248 = OpTypeImage %6 Dim2D 0 0 0 1 Unknown 
                                             %249 = OpTypePointer UniformConstant %248 
        UniformConstant read_only Texture2D* %250 = OpVariable UniformConstant 
                                             %252 = OpTypeSampler 
                                             %253 = OpTypePointer UniformConstant %252 
                    UniformConstant sampler* %254 = OpVariable UniformConstant 
                                             %256 = OpTypeImage %6 Dim2D 1 0 0 1 Unknown 
                                             %257 = OpTypeSampledImage %256 
                                         i32 %292 = OpConstant 6 
                                         i32 %296 = OpConstant 7 
                                         i32 %305 = OpConstant 13 
                                         i32 %310 = OpConstant 12 
                              Private f32_3* %314 = OpVariable Private 
                                         i32 %363 = OpConstant 10 
                                         i32 %368 = OpConstant 11 
                              Private f32_3* %394 = OpVariable Private 
        UniformConstant read_only Texture2D* %395 = OpVariable UniformConstant 
                    UniformConstant sampler* %397 = OpVariable UniformConstant 
                                             %399 = OpTypeSampledImage %248 
                                             %401 = OpTypePointer Input %80 
                        Input f32_2* vs_TEXCOORD0 = OpVariable Input 
                                         i32 %407 = OpConstant 8 
                                             %422 = OpTypePointer Output %14 
                               Output f32_4* %423 = OpVariable Output 
                                             %427 = OpTypePointer Output %6 
                                          void %4 = OpFunction None %3 
                                               %5 = OpLabel 
                             Function f32_3* %240 = OpVariable Function 
                                        f32_3 %12 = OpLoad vs_TEXCOORD2 
                                        f32_3 %13 = OpFNegate %12 
                               Uniform f32_3* %26 = OpAccessChain %22 %24 
                                        f32_3 %27 = OpLoad %26 
                                        f32_3 %28 = OpFAdd %13 %27 
                                                      OpStore %9 %28 
                                        f32_3 %31 = OpLoad %9 
                                        f32_3 %32 = OpLoad %9 
                                          f32 %33 = OpDot %31 %32 
                                                      OpStore %30 %33 
                                          f32 %34 = OpLoad %30 
                                          f32 %35 = OpExtInst %1 32 %34 
                                                      OpStore %30 %35 
                                        f32_3 %37 = OpLoad %9 
                                          f32 %38 = OpLoad %30 
                                        f32_3 %39 = OpCompositeConstruct %38 %38 %38 
                                        f32_3 %40 = OpFMul %37 %39 
                               Uniform f32_4* %43 = OpAccessChain %22 %41 
                                        f32_4 %44 = OpLoad %43 
                                        f32_3 %45 = OpVectorShuffle %44 %44 0 1 2 
                                        f32_3 %46 = OpFAdd %40 %45 
                                                      OpStore %36 %46 
                                        f32_3 %48 = OpLoad %36 
                                        f32_3 %49 = OpLoad %36 
                                          f32 %50 = OpDot %48 %49 
                                                      OpStore %47 %50 
                                          f32 %51 = OpLoad %47 
                                          f32 %52 = OpExtInst %1 32 %51 
                                                      OpStore %47 %52 
                                          f32 %53 = OpLoad %47 
                                        f32_3 %54 = OpCompositeConstruct %53 %53 %53 
                                        f32_3 %55 = OpLoad %36 
                                        f32_3 %56 = OpFMul %54 %55 
                                                      OpStore %36 %56 
                                        f32_3 %58 = OpLoad vs_TEXCOORD1 
                                        f32_3 %59 = OpLoad vs_TEXCOORD1 
                                          f32 %60 = OpDot %58 %59 
                                                      OpStore %47 %60 
                                          f32 %61 = OpLoad %47 
                                          f32 %62 = OpExtInst %1 32 %61 
                                                      OpStore %47 %62 
                                          f32 %64 = OpLoad %47 
                                        f32_3 %65 = OpCompositeConstruct %64 %64 %64 
                                        f32_3 %66 = OpLoad vs_TEXCOORD1 
                                        f32_3 %67 = OpFMul %65 %66 
                                                      OpStore %63 %67 
                                        f32_3 %68 = OpLoad %63 
                                        f32_3 %69 = OpLoad %36 
                                          f32 %70 = OpDot %68 %69 
                                 Private f32* %72 = OpAccessChain %36 %71 
                                                      OpStore %72 %70 
                                        f32_3 %73 = OpLoad %63 
                               Uniform f32_4* %74 = OpAccessChain %22 %41 
                                        f32_4 %75 = OpLoad %74 
                                        f32_3 %76 = OpVectorShuffle %75 %75 0 1 2 
                                          f32 %77 = OpDot %73 %76 
                                 Private f32* %79 = OpAccessChain %36 %78 
                                                      OpStore %79 %77 
                                        f32_3 %81 = OpLoad %36 
                                        f32_2 %82 = OpVectorShuffle %81 %81 0 1 
                                        f32_2 %85 = OpExtInst %1 40 %82 %84 
                                        f32_3 %86 = OpLoad %36 
                                        f32_3 %87 = OpVectorShuffle %86 %85 3 4 2 
                                                      OpStore %36 %87 
                                 Private f32* %88 = OpAccessChain %36 %71 
                                          f32 %89 = OpLoad %88 
                                          f32 %90 = OpExtInst %1 30 %89 
                                                      OpStore %30 %90 
                                 Uniform f32* %93 = OpAccessChain %22 %91 
                                          f32 %94 = OpLoad %93 
                                          f32 %96 = OpFMul %94 %95 
                                 Private f32* %97 = OpAccessChain %36 %71 
                                                      OpStore %97 %96 
                                          f32 %98 = OpLoad %30 
                                 Private f32* %99 = OpAccessChain %36 %71 
                                         f32 %100 = OpLoad %99 
                                         f32 %101 = OpFMul %98 %100 
                                                      OpStore %30 %101 
                                         f32 %102 = OpLoad %30 
                                         f32 %103 = OpExtInst %1 29 %102 
                                                      OpStore %30 %103 
                                Uniform f32* %105 = OpAccessChain %22 %104 
                                         f32 %106 = OpLoad %105 
                                         f32 %107 = OpFNegate %106 
                                         f32 %109 = OpFMul %107 %108 
                                         f32 %110 = OpFAdd %109 %108 
                                Private f32* %111 = OpAccessChain %36 %71 
                                                      OpStore %111 %110 
                                         f32 %112 = OpLoad %30 
                                         f32 %114 = OpFMul %112 %113 
                                Private f32* %115 = OpAccessChain %36 %71 
                                         f32 %116 = OpLoad %115 
                                         f32 %117 = OpFNegate %116 
                                         f32 %118 = OpFAdd %114 %117 
                                                      OpStore %30 %118 
                                Uniform f32* %120 = OpAccessChain %22 %104 
                                         f32 %121 = OpLoad %120 
                                         f32 %122 = OpFMul %121 %108 
                                         f32 %123 = OpFAdd %122 %108 
                                                      OpStore %119 %123 
                                Private f32* %125 = OpAccessChain %36 %71 
                                         f32 %126 = OpLoad %125 
                                         f32 %127 = OpFNegate %126 
                                         f32 %128 = OpLoad %119 
                                         f32 %129 = OpFAdd %127 %128 
                                Private f32* %130 = OpAccessChain %124 %71 
                                                      OpStore %130 %129 
                                Private f32* %132 = OpAccessChain %124 %71 
                                         f32 %133 = OpLoad %132 
                                         f32 %134 = OpFDiv %131 %133 
                                Private f32* %135 = OpAccessChain %124 %71 
                                                      OpStore %135 %134 
                                         f32 %136 = OpLoad %30 
                                Private f32* %137 = OpAccessChain %124 %71 
                                         f32 %138 = OpLoad %137 
                                         f32 %139 = OpFMul %136 %138 
                                                      OpStore %30 %139 
                                         f32 %140 = OpLoad %30 
                                         f32 %141 = OpExtInst %1 43 %140 %83 %131 
                                                      OpStore %30 %141 
                                         f32 %142 = OpLoad %30 
                                         f32 %144 = OpFMul %142 %143 
                                         f32 %146 = OpFAdd %144 %145 
                                Private f32* %147 = OpAccessChain %124 %71 
                                                      OpStore %147 %146 
                                         f32 %148 = OpLoad %30 
                                         f32 %149 = OpLoad %30 
                                         f32 %150 = OpFMul %148 %149 
                                                      OpStore %30 %150 
                                         f32 %151 = OpLoad %30 
                                Private f32* %152 = OpAccessChain %124 %71 
                                         f32 %153 = OpLoad %152 
                                         f32 %154 = OpFMul %151 %153 
                                                      OpStore %30 %154 
                                Uniform f32* %157 = OpAccessChain %22 %155 %24 %156 
                                         f32 %158 = OpLoad %157 
                                Private f32* %159 = OpAccessChain %124 %71 
                                                      OpStore %159 %158 
                                Uniform f32* %160 = OpAccessChain %22 %155 %41 %156 
                                         f32 %161 = OpLoad %160 
                                Private f32* %162 = OpAccessChain %124 %78 
                                                      OpStore %162 %161 
                                Uniform f32* %164 = OpAccessChain %22 %155 %163 %156 
                                         f32 %165 = OpLoad %164 
                                Private f32* %166 = OpAccessChain %124 %156 
                                                      OpStore %166 %165 
                                       f32_3 %167 = OpLoad %9 
                                       f32_3 %168 = OpLoad %124 
                                         f32 %169 = OpDot %167 %168 
                                Private f32* %170 = OpAccessChain %9 %71 
                                                      OpStore %170 %169 
                                       f32_3 %171 = OpLoad vs_TEXCOORD2 
                              Uniform f32_4* %173 = OpAccessChain %22 %172 
                                       f32_4 %174 = OpLoad %173 
                                       f32_3 %175 = OpVectorShuffle %174 %174 0 1 2 
                                       f32_3 %176 = OpFNegate %175 
                                       f32_3 %177 = OpFAdd %171 %176 
                                                      OpStore %124 %177 
                                       f32_3 %179 = OpLoad %124 
                                       f32_3 %180 = OpLoad %124 
                                         f32 %181 = OpDot %179 %180 
                                                      OpStore %178 %181 
                                         f32 %182 = OpLoad %178 
                                         f32 %183 = OpExtInst %1 31 %182 
                                                      OpStore %178 %183 
                                Private f32* %184 = OpAccessChain %9 %71 
                                         f32 %185 = OpLoad %184 
                                         f32 %186 = OpFNegate %185 
                                         f32 %187 = OpLoad %178 
                                         f32 %188 = OpFAdd %186 %187 
                                                      OpStore %178 %188 
                                Uniform f32* %190 = OpAccessChain %22 %172 %189 
                                         f32 %191 = OpLoad %190 
                                         f32 %192 = OpLoad %178 
                                         f32 %193 = OpFMul %191 %192 
                                Private f32* %194 = OpAccessChain %9 %71 
                                         f32 %195 = OpLoad %194 
                                         f32 %196 = OpFAdd %193 %195 
                                Private f32* %197 = OpAccessChain %9 %71 
                                                      OpStore %197 %196 
                                Private f32* %198 = OpAccessChain %9 %71 
                                         f32 %199 = OpLoad %198 
                                Uniform f32* %201 = OpAccessChain %22 %200 %156 
                                         f32 %202 = OpLoad %201 
                                         f32 %203 = OpFMul %199 %202 
                                Uniform f32* %204 = OpAccessChain %22 %200 %189 
                                         f32 %205 = OpLoad %204 
                                         f32 %206 = OpFAdd %203 %205 
                                Private f32* %207 = OpAccessChain %9 %71 
                                                      OpStore %207 %206 
                                Private f32* %208 = OpAccessChain %9 %71 
                                         f32 %209 = OpLoad %208 
                                         f32 %210 = OpExtInst %1 43 %209 %83 %131 
                                Private f32* %211 = OpAccessChain %9 %71 
                                                      OpStore %211 %210 
                                       f32_3 %212 = OpLoad vs_TEXCOORD2 
                                       f32_3 %213 = OpVectorShuffle %212 %212 1 1 1 
                              Uniform f32_4* %214 = OpAccessChain %22 %163 %41 
                                       f32_4 %215 = OpLoad %214 
                                       f32_3 %216 = OpVectorShuffle %215 %215 0 1 2 
                                       f32_3 %217 = OpFMul %213 %216 
                                                      OpStore %124 %217 
                              Uniform f32_4* %218 = OpAccessChain %22 %163 %24 
                                       f32_4 %219 = OpLoad %218 
                                       f32_3 %220 = OpVectorShuffle %219 %219 0 1 2 
                                       f32_3 %221 = OpLoad vs_TEXCOORD2 
                                       f32_3 %222 = OpVectorShuffle %221 %221 0 0 0 
                                       f32_3 %223 = OpFMul %220 %222 
                                       f32_3 %224 = OpLoad %124 
                                       f32_3 %225 = OpFAdd %223 %224 
                                                      OpStore %124 %225 
                              Uniform f32_4* %226 = OpAccessChain %22 %163 %163 
                                       f32_4 %227 = OpLoad %226 
                                       f32_3 %228 = OpVectorShuffle %227 %227 0 1 2 
                                       f32_3 %229 = OpLoad vs_TEXCOORD2 
                                       f32_3 %230 = OpVectorShuffle %229 %229 2 2 2 
                                       f32_3 %231 = OpFMul %228 %230 
                                       f32_3 %232 = OpLoad %124 
                                       f32_3 %233 = OpFAdd %231 %232 
                                                      OpStore %124 %233 
                                       f32_3 %234 = OpLoad %124 
                              Uniform f32_4* %235 = OpAccessChain %22 %163 %200 
                                       f32_4 %236 = OpLoad %235 
                                       f32_3 %237 = OpVectorShuffle %236 %236 0 1 2 
                                       f32_3 %238 = OpFAdd %234 %237 
                                                      OpStore %124 %238 
                                       f32_3 %241 = OpLoad %124 
                                       f32_2 %242 = OpVectorShuffle %241 %241 0 1 
                                Private f32* %243 = OpAccessChain %124 %156 
                                         f32 %244 = OpLoad %243 
                                         f32 %245 = OpCompositeExtract %242 0 
                                         f32 %246 = OpCompositeExtract %242 1 
                                       f32_3 %247 = OpCompositeConstruct %245 %246 %244 
                                                      OpStore %240 %247 
                         read_only Texture2D %251 = OpLoad %250 
                                     sampler %255 = OpLoad %254 
                  read_only Texture2DSampled %258 = OpSampledImage %251 %255 
                                       f32_3 %259 = OpLoad %240 
                                         f32 %260 = OpCompositeExtract %259 2 
                                         f32 %261 = OpImageSampleDrefExplicitLod %258 %259 %260 Lod %6 
                                                      OpStore %178 %261 
                                Uniform f32* %262 = OpAccessChain %22 %200 %71 
                                         f32 %263 = OpLoad %262 
                                         f32 %264 = OpFNegate %263 
                                         f32 %265 = OpFAdd %264 %131 
                                Private f32* %266 = OpAccessChain %36 %71 
                                                      OpStore %266 %265 
                                         f32 %267 = OpLoad %178 
                                Private f32* %268 = OpAccessChain %36 %71 
                                         f32 %269 = OpLoad %268 
                                         f32 %270 = OpFMul %267 %269 
                                Uniform f32* %271 = OpAccessChain %22 %200 %71 
                                         f32 %272 = OpLoad %271 
                                         f32 %273 = OpFAdd %270 %272 
                                Private f32* %274 = OpAccessChain %36 %71 
                                                      OpStore %274 %273 
                                Private f32* %275 = OpAccessChain %36 %71 
                                         f32 %276 = OpLoad %275 
                                         f32 %277 = OpFNegate %276 
                                         f32 %278 = OpFAdd %277 %131 
                                                      OpStore %119 %278 
                                Private f32* %279 = OpAccessChain %9 %71 
                                         f32 %280 = OpLoad %279 
                                         f32 %281 = OpLoad %119 
                                         f32 %282 = OpFMul %280 %281 
                                Private f32* %283 = OpAccessChain %36 %71 
                                         f32 %284 = OpLoad %283 
                                         f32 %285 = OpFAdd %282 %284 
                                Private f32* %286 = OpAccessChain %36 %71 
                                                      OpStore %286 %285 
                                         f32 %287 = OpLoad %30 
                                Private f32* %288 = OpAccessChain %36 %71 
                                         f32 %289 = OpLoad %288 
                                         f32 %290 = OpFMul %287 %289 
                                Private f32* %291 = OpAccessChain %9 %71 
                                                      OpStore %291 %290 
                              Uniform f32_4* %293 = OpAccessChain %22 %292 
                                       f32_4 %294 = OpLoad %293 
                                       f32_3 %295 = OpVectorShuffle %294 %294 0 1 2 
                              Uniform f32_4* %297 = OpAccessChain %22 %296 
                                       f32_4 %298 = OpLoad %297 
                                       f32_3 %299 = OpVectorShuffle %298 %298 0 1 2 
                                       f32_3 %300 = OpFMul %295 %299 
                                                      OpStore %63 %300 
                                       f32_3 %301 = OpLoad %9 
                                       f32_3 %302 = OpVectorShuffle %301 %301 0 0 0 
                                       f32_3 %303 = OpLoad %63 
                                       f32_3 %304 = OpFMul %302 %303 
                                                      OpStore %9 %304 
                                Uniform f32* %306 = OpAccessChain %22 %305 
                                         f32 %307 = OpLoad %306 
                                         f32 %308 = OpFNegate %307 
                                         f32 %309 = OpFMul %308 %108 
                                Uniform f32* %311 = OpAccessChain %22 %310 
                                         f32 %312 = OpLoad %311 
                                         f32 %313 = OpFAdd %309 %312 
                                                      OpStore %119 %313 
                                         f32 %315 = OpLoad %119 
                                         f32 %316 = OpFNegate %315 
                                Private f32* %317 = OpAccessChain %36 %78 
                                         f32 %318 = OpLoad %317 
                                         f32 %319 = OpFAdd %316 %318 
                                Private f32* %320 = OpAccessChain %314 %71 
                                                      OpStore %320 %319 
                                Uniform f32* %321 = OpAccessChain %22 %305 
                                         f32 %322 = OpLoad %321 
                                         f32 %323 = OpFMul %322 %108 
                                Uniform f32* %324 = OpAccessChain %22 %310 
                                         f32 %325 = OpLoad %324 
                                         f32 %326 = OpFAdd %323 %325 
                                                      OpStore %47 %326 
                                         f32 %327 = OpLoad %119 
                                         f32 %328 = OpFNegate %327 
                                         f32 %329 = OpLoad %47 
                                         f32 %330 = OpFAdd %328 %329 
                                                      OpStore %119 %330 
                                         f32 %331 = OpLoad %119 
                                         f32 %332 = OpFDiv %131 %331 
                                                      OpStore %119 %332 
                                         f32 %333 = OpLoad %119 
                                Private f32* %334 = OpAccessChain %314 %71 
                                         f32 %335 = OpLoad %334 
                                         f32 %336 = OpFMul %333 %335 
                                Private f32* %337 = OpAccessChain %314 %71 
                                                      OpStore %337 %336 
                                Private f32* %338 = OpAccessChain %314 %71 
                                         f32 %339 = OpLoad %338 
                                         f32 %340 = OpExtInst %1 43 %339 %83 %131 
                                Private f32* %341 = OpAccessChain %314 %71 
                                                      OpStore %341 %340 
                                Private f32* %342 = OpAccessChain %314 %71 
                                         f32 %343 = OpLoad %342 
                                         f32 %344 = OpFMul %343 %143 
                                         f32 %345 = OpFAdd %344 %145 
                                                      OpStore %119 %345 
                                Private f32* %346 = OpAccessChain %314 %71 
                                         f32 %347 = OpLoad %346 
                                Private f32* %348 = OpAccessChain %314 %71 
                                         f32 %349 = OpLoad %348 
                                         f32 %350 = OpFMul %347 %349 
                                Private f32* %351 = OpAccessChain %314 %71 
                                                      OpStore %351 %350 
                                Private f32* %352 = OpAccessChain %314 %71 
                                         f32 %353 = OpLoad %352 
                                         f32 %354 = OpLoad %119 
                                         f32 %355 = OpFMul %353 %354 
                                Private f32* %356 = OpAccessChain %314 %71 
                                                      OpStore %356 %355 
                                Private f32* %357 = OpAccessChain %36 %71 
                                         f32 %358 = OpLoad %357 
                                Private f32* %359 = OpAccessChain %314 %71 
                                         f32 %360 = OpLoad %359 
                                         f32 %361 = OpFMul %358 %360 
                                Private f32* %362 = OpAccessChain %36 %71 
                                                      OpStore %362 %361 
                              Uniform f32_4* %364 = OpAccessChain %22 %363 
                                       f32_4 %365 = OpLoad %364 
                                       f32_3 %366 = OpVectorShuffle %365 %365 0 1 2 
                                       f32_3 %367 = OpFNegate %366 
                              Uniform f32_4* %369 = OpAccessChain %22 %368 
                                       f32_4 %370 = OpLoad %369 
                                       f32_3 %371 = OpVectorShuffle %370 %370 0 1 2 
                                       f32_3 %372 = OpFAdd %367 %371 
                                                      OpStore %314 %372 
                              Uniform f32_4* %373 = OpAccessChain %22 %368 
                                       f32_4 %374 = OpLoad %373 
                                       f32_3 %375 = OpVectorShuffle %374 %374 3 3 3 
                                       f32_3 %376 = OpLoad %314 
                                       f32_3 %377 = OpFMul %375 %376 
                              Uniform f32_4* %378 = OpAccessChain %22 %363 
                                       f32_4 %379 = OpLoad %378 
                                       f32_3 %380 = OpVectorShuffle %379 %379 0 1 2 
                                       f32_3 %381 = OpFAdd %377 %380 
                                                      OpStore %314 %381 
                                       f32_3 %382 = OpLoad %314 
                                       f32_3 %383 = OpFNegate %382 
                              Uniform f32_4* %384 = OpAccessChain %22 %363 
                                       f32_4 %385 = OpLoad %384 
                                       f32_3 %386 = OpVectorShuffle %385 %385 0 1 2 
                                       f32_3 %387 = OpFAdd %383 %386 
                                                      OpStore %63 %387 
                                       f32_3 %388 = OpLoad %36 
                                       f32_3 %389 = OpVectorShuffle %388 %388 0 0 0 
                                       f32_3 %390 = OpLoad %63 
                                       f32_3 %391 = OpFMul %389 %390 
                                       f32_3 %392 = OpLoad %314 
                                       f32_3 %393 = OpFAdd %391 %392 
                                                      OpStore %36 %393 
                         read_only Texture2D %396 = OpLoad %395 
                                     sampler %398 = OpLoad %397 
                  read_only Texture2DSampled %400 = OpSampledImage %396 %398 
                                       f32_2 %403 = OpLoad vs_TEXCOORD0 
                                       f32_4 %404 = OpImageSampleImplicitLod %400 %403 
                                       f32_3 %405 = OpVectorShuffle %404 %404 0 1 2 
                                                      OpStore %394 %405 
                                       f32_3 %406 = OpLoad %394 
                              Uniform f32_4* %408 = OpAccessChain %22 %407 
                                       f32_4 %409 = OpLoad %408 
                                       f32_3 %410 = OpVectorShuffle %409 %409 0 1 2 
                                       f32_3 %411 = OpFMul %406 %410 
                                                      OpStore %63 %411 
                                       f32_3 %412 = OpLoad %63 
                              Uniform f32_4* %413 = OpAccessChain %22 %292 
                                       f32_4 %414 = OpLoad %413 
                                       f32_3 %415 = OpVectorShuffle %414 %414 0 1 2 
                                       f32_3 %416 = OpFMul %412 %415 
                                                      OpStore %63 %416 
                                       f32_3 %417 = OpLoad %63 
                                       f32_3 %418 = OpLoad %36 
                                       f32_3 %419 = OpFMul %417 %418 
                                       f32_3 %420 = OpLoad %9 
                                       f32_3 %421 = OpFAdd %419 %420 
                                                      OpStore %9 %421 
                                       f32_3 %424 = OpLoad %9 
                                       f32_4 %425 = OpLoad %423 
                                       f32_4 %426 = OpVectorShuffle %425 %424 4 5 6 3 
                                                      OpStore %423 %426 
                                 Output f32* %428 = OpAccessChain %423 %189 
                                                      OpStore %428 %131 
                                                      OpReturn
                                                      OpFunctionEnd
"
}
SubProgram "vulkan hw_tier02 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" "VERTEXLIGHT_ON" }
"; SPIR-V
; Version: 1.0
; Generator: Khronos Glslang Reference Front End; 6
; Bound: 160
; Schema: 0
                                                      OpCapability Shader 
                                               %1 = OpExtInstImport "GLSL.std.450" 
                                                      OpMemoryModel Logical GLSL450 
                                                      OpEntryPoint Vertex %4 "main" %11 %52 %85 %95 %110 %114 %144 %150 %153 
                                                      OpName vs_TEXCOORD2 "vs_TEXCOORD2" 
                                                      OpName vs_TEXCOORD0 "vs_TEXCOORD0" 
                                                      OpName vs_TEXCOORD1 "vs_TEXCOORD1" 
                                                      OpName vs_TEXCOORD5 "vs_TEXCOORD5" 
                                                      OpName vs_TEXCOORD6 "vs_TEXCOORD6" 
                                                      OpDecorate %11 Location 11 
                                                      OpDecorate %16 ArrayStride 16 
                                                      OpDecorate %17 ArrayStride 17 
                                                      OpDecorate %18 ArrayStride 18 
                                                      OpMemberDecorate %19 0 Offset 19 
                                                      OpMemberDecorate %19 1 Offset 19 
                                                      OpMemberDecorate %19 2 Offset 19 
                                                      OpMemberDecorate %19 3 Offset 19 
                                                      OpDecorate %19 Block 
                                                      OpDecorate %21 DescriptorSet 21 
                                                      OpDecorate %21 Binding 21 
                                                      OpDecorate vs_TEXCOORD2 Location 52 
                                                      OpMemberDecorate %83 0 BuiltIn 83 
                                                      OpMemberDecorate %83 1 BuiltIn 83 
                                                      OpMemberDecorate %83 2 BuiltIn 83 
                                                      OpDecorate %83 Block 
                                                      OpDecorate %95 Location 95 
                                                      OpDecorate vs_TEXCOORD0 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD0 Location 110 
                                                      OpDecorate %114 Location 114 
                                                      OpDecorate vs_TEXCOORD1 Location 144 
                                                      OpDecorate vs_TEXCOORD5 Location 150 
                                                      OpDecorate vs_TEXCOORD6 Location 153 
                                               %2 = OpTypeVoid 
                                               %3 = OpTypeFunction %2 
                                               %6 = OpTypeFloat 32 
                                               %7 = OpTypeVector %6 4 
                                               %8 = OpTypePointer Private %7 
                                Private f32_4* %9 = OpVariable Private 
                                              %10 = OpTypePointer Input %7 
                                 Input f32_4* %11 = OpVariable Input 
                                              %14 = OpTypeInt 32 0 
                                          u32 %15 = OpConstant 4 
                                              %16 = OpTypeArray %7 %15 
                                              %17 = OpTypeArray %7 %15 
                                              %18 = OpTypeArray %7 %15 
                                              %19 = OpTypeStruct %16 %17 %18 %7 
                                              %20 = OpTypePointer Uniform %19 
Uniform struct {f32_4[4]; f32_4[4]; f32_4[4]; f32_4;}* %21 = OpVariable Uniform 
                                              %22 = OpTypeInt 32 1 
                                          i32 %23 = OpConstant 0 
                                          i32 %24 = OpConstant 1 
                                              %25 = OpTypePointer Uniform %7 
                                          i32 %36 = OpConstant 2 
                               Private f32_4* %44 = OpVariable Private 
                                          i32 %46 = OpConstant 3 
                                              %50 = OpTypeVector %6 3 
                                              %51 = OpTypePointer Output %50 
                       Output f32_3* vs_TEXCOORD2 = OpVariable Output 
                                          u32 %81 = OpConstant 1 
                                              %82 = OpTypeArray %6 %81 
                                              %83 = OpTypeStruct %7 %6 %82 
                                              %84 = OpTypePointer Output %83 
         Output struct {f32_4; f32; f32[1];}* %85 = OpVariable Output 
                                              %93 = OpTypePointer Output %7 
                                 Input f32_4* %95 = OpVariable Input 
                                              %96 = OpTypeVector %6 2 
                                             %109 = OpTypePointer Output %96 
                       Output f32_2* vs_TEXCOORD0 = OpVariable Output 
                                             %113 = OpTypePointer Input %50 
                                Input f32_3* %114 = OpVariable Input 
                                         u32 %120 = OpConstant 0 
                                             %121 = OpTypePointer Private %6 
                                         u32 %134 = OpConstant 2 
                                Private f32* %136 = OpVariable Private 
                       Output f32_3* vs_TEXCOORD1 = OpVariable Output 
                       Output f32_4* vs_TEXCOORD5 = OpVariable Output 
                                         f32 %151 = OpConstant 3.674022E-40 
                                       f32_4 %152 = OpConstantComposite %151 %151 %151 %151 
                       Output f32_4* vs_TEXCOORD6 = OpVariable Output 
                                             %154 = OpTypePointer Output %6 
                                          void %4 = OpFunction None %3 
                                               %5 = OpLabel 
                                        f32_4 %12 = OpLoad %11 
                                        f32_4 %13 = OpVectorShuffle %12 %12 1 1 1 1 
                               Uniform f32_4* %26 = OpAccessChain %21 %23 %24 
                                        f32_4 %27 = OpLoad %26 
                                        f32_4 %28 = OpFMul %13 %27 
                                                      OpStore %9 %28 
                               Uniform f32_4* %29 = OpAccessChain %21 %23 %23 
                                        f32_4 %30 = OpLoad %29 
                                        f32_4 %31 = OpLoad %11 
                                        f32_4 %32 = OpVectorShuffle %31 %31 0 0 0 0 
                                        f32_4 %33 = OpFMul %30 %32 
                                        f32_4 %34 = OpLoad %9 
                                        f32_4 %35 = OpFAdd %33 %34 
                                                      OpStore %9 %35 
                               Uniform f32_4* %37 = OpAccessChain %21 %23 %36 
                                        f32_4 %38 = OpLoad %37 
                                        f32_4 %39 = OpLoad %11 
                                        f32_4 %40 = OpVectorShuffle %39 %39 2 2 2 2 
                                        f32_4 %41 = OpFMul %38 %40 
                                        f32_4 %42 = OpLoad %9 
                                        f32_4 %43 = OpFAdd %41 %42 
                                                      OpStore %9 %43 
                                        f32_4 %45 = OpLoad %9 
                               Uniform f32_4* %47 = OpAccessChain %21 %23 %46 
                                        f32_4 %48 = OpLoad %47 
                                        f32_4 %49 = OpFAdd %45 %48 
                                                      OpStore %44 %49 
                               Uniform f32_4* %53 = OpAccessChain %21 %23 %46 
                                        f32_4 %54 = OpLoad %53 
                                        f32_3 %55 = OpVectorShuffle %54 %54 0 1 2 
                                        f32_4 %56 = OpLoad %11 
                                        f32_3 %57 = OpVectorShuffle %56 %56 3 3 3 
                                        f32_3 %58 = OpFMul %55 %57 
                                        f32_4 %59 = OpLoad %9 
                                        f32_3 %60 = OpVectorShuffle %59 %59 0 1 2 
                                        f32_3 %61 = OpFAdd %58 %60 
                                                      OpStore vs_TEXCOORD2 %61 
                                        f32_4 %62 = OpLoad %44 
                                        f32_4 %63 = OpVectorShuffle %62 %62 1 1 1 1 
                               Uniform f32_4* %64 = OpAccessChain %21 %36 %24 
                                        f32_4 %65 = OpLoad %64 
                                        f32_4 %66 = OpFMul %63 %65 
                                                      OpStore %9 %66 
                               Uniform f32_4* %67 = OpAccessChain %21 %36 %23 
                                        f32_4 %68 = OpLoad %67 
                                        f32_4 %69 = OpLoad %44 
                                        f32_4 %70 = OpVectorShuffle %69 %69 0 0 0 0 
                                        f32_4 %71 = OpFMul %68 %70 
                                        f32_4 %72 = OpLoad %9 
                                        f32_4 %73 = OpFAdd %71 %72 
                                                      OpStore %9 %73 
                               Uniform f32_4* %74 = OpAccessChain %21 %36 %36 
                                        f32_4 %75 = OpLoad %74 
                                        f32_4 %76 = OpLoad %44 
                                        f32_4 %77 = OpVectorShuffle %76 %76 2 2 2 2 
                                        f32_4 %78 = OpFMul %75 %77 
                                        f32_4 %79 = OpLoad %9 
                                        f32_4 %80 = OpFAdd %78 %79 
                                                      OpStore %9 %80 
                               Uniform f32_4* %86 = OpAccessChain %21 %36 %46 
                                        f32_4 %87 = OpLoad %86 
                                        f32_4 %88 = OpLoad %44 
                                        f32_4 %89 = OpVectorShuffle %88 %88 3 3 3 3 
                                        f32_4 %90 = OpFMul %87 %89 
                                        f32_4 %91 = OpLoad %9 
                                        f32_4 %92 = OpFAdd %90 %91 
                                Output f32_4* %94 = OpAccessChain %85 %23 
                                                      OpStore %94 %92 
                                        f32_4 %97 = OpLoad %95 
                                        f32_2 %98 = OpVectorShuffle %97 %97 0 1 
                               Uniform f32_4* %99 = OpAccessChain %21 %46 
                                       f32_4 %100 = OpLoad %99 
                                       f32_2 %101 = OpVectorShuffle %100 %100 0 1 
                                       f32_2 %102 = OpFMul %98 %101 
                              Uniform f32_4* %103 = OpAccessChain %21 %46 
                                       f32_4 %104 = OpLoad %103 
                                       f32_2 %105 = OpVectorShuffle %104 %104 2 3 
                                       f32_2 %106 = OpFAdd %102 %105 
                                       f32_4 %107 = OpLoad %9 
                                       f32_4 %108 = OpVectorShuffle %107 %106 4 5 2 3 
                                                      OpStore %9 %108 
                                       f32_4 %111 = OpLoad %9 
                                       f32_2 %112 = OpVectorShuffle %111 %111 0 1 
                                                      OpStore vs_TEXCOORD0 %112 
                                       f32_3 %115 = OpLoad %114 
                              Uniform f32_4* %116 = OpAccessChain %21 %24 %23 
                                       f32_4 %117 = OpLoad %116 
                                       f32_3 %118 = OpVectorShuffle %117 %117 0 1 2 
                                         f32 %119 = OpDot %115 %118 
                                Private f32* %122 = OpAccessChain %9 %120 
                                                      OpStore %122 %119 
                                       f32_3 %123 = OpLoad %114 
                              Uniform f32_4* %124 = OpAccessChain %21 %24 %24 
                                       f32_4 %125 = OpLoad %124 
                                       f32_3 %126 = OpVectorShuffle %125 %125 0 1 2 
                                         f32 %127 = OpDot %123 %126 
                                Private f32* %128 = OpAccessChain %9 %81 
                                                      OpStore %128 %127 
                                       f32_3 %129 = OpLoad %114 
                              Uniform f32_4* %130 = OpAccessChain %21 %24 %36 
                                       f32_4 %131 = OpLoad %130 
                                       f32_3 %132 = OpVectorShuffle %131 %131 0 1 2 
                                         f32 %133 = OpDot %129 %132 
                                Private f32* %135 = OpAccessChain %9 %134 
                                                      OpStore %135 %133 
                                       f32_4 %137 = OpLoad %9 
                                       f32_3 %138 = OpVectorShuffle %137 %137 0 1 2 
                                       f32_4 %139 = OpLoad %9 
                                       f32_3 %140 = OpVectorShuffle %139 %139 0 1 2 
                                         f32 %141 = OpDot %138 %140 
                                                      OpStore %136 %141 
                                         f32 %142 = OpLoad %136 
                                         f32 %143 = OpExtInst %1 32 %142 
                                                      OpStore %136 %143 
                                         f32 %145 = OpLoad %136 
                                       f32_3 %146 = OpCompositeConstruct %145 %145 %145 
                                       f32_4 %147 = OpLoad %9 
                                       f32_3 %148 = OpVectorShuffle %147 %147 0 1 2 
                                       f32_3 %149 = OpFMul %146 %148 
                                                      OpStore vs_TEXCOORD1 %149 
                                                      OpStore vs_TEXCOORD5 %152 
                                                      OpStore vs_TEXCOORD6 %152 
                                 Output f32* %155 = OpAccessChain %85 %23 %81 
                                         f32 %156 = OpLoad %155 
                                         f32 %157 = OpFNegate %156 
                                 Output f32* %158 = OpAccessChain %85 %23 %81 
                                                      OpStore %158 %157 
                                                      OpReturn
                                                      OpFunctionEnd
; SPIR-V
; Version: 1.0
; Generator: Khronos Glslang Reference Front End; 6
; Bound: 430
; Schema: 0
                                                      OpCapability Shader 
                                               %1 = OpExtInstImport "GLSL.std.450" 
                                                      OpMemoryModel Logical GLSL450 
                                                      OpEntryPoint Fragment %4 "main" %11 %57 %402 %423 
                                                      OpExecutionMode %4 OriginUpperLeft 
                                                      OpName vs_TEXCOORD2 "vs_TEXCOORD2" 
                                                      OpName vs_TEXCOORD1 "vs_TEXCOORD1" 
                                                      OpName vs_TEXCOORD0 "vs_TEXCOORD0" 
                                                      OpDecorate vs_TEXCOORD2 Location 11 
                                                      OpDecorate %17 ArrayStride 17 
                                                      OpDecorate %19 ArrayStride 19 
                                                      OpMemberDecorate %20 0 Offset 20 
                                                      OpMemberDecorate %20 1 RelaxedPrecision 
                                                      OpMemberDecorate %20 1 Offset 20 
                                                      OpMemberDecorate %20 2 Offset 20 
                                                      OpMemberDecorate %20 3 RelaxedPrecision 
                                                      OpMemberDecorate %20 3 Offset 20 
                                                      OpMemberDecorate %20 4 Offset 20 
                                                      OpMemberDecorate %20 5 Offset 20 
                                                      OpMemberDecorate %20 6 RelaxedPrecision 
                                                      OpMemberDecorate %20 6 Offset 20 
                                                      OpMemberDecorate %20 7 RelaxedPrecision 
                                                      OpMemberDecorate %20 7 Offset 20 
                                                      OpMemberDecorate %20 8 RelaxedPrecision 
                                                      OpMemberDecorate %20 8 Offset 20 
                                                      OpMemberDecorate %20 9 RelaxedPrecision 
                                                      OpMemberDecorate %20 9 Offset 20 
                                                      OpMemberDecorate %20 10 RelaxedPrecision 
                                                      OpMemberDecorate %20 10 Offset 20 
                                                      OpMemberDecorate %20 11 RelaxedPrecision 
                                                      OpMemberDecorate %20 11 Offset 20 
                                                      OpMemberDecorate %20 12 RelaxedPrecision 
                                                      OpMemberDecorate %20 12 Offset 20 
                                                      OpMemberDecorate %20 13 RelaxedPrecision 
                                                      OpMemberDecorate %20 13 Offset 20 
                                                      OpMemberDecorate %20 14 RelaxedPrecision 
                                                      OpMemberDecorate %20 14 Offset 20 
                                                      OpDecorate %20 Block 
                                                      OpDecorate %22 DescriptorSet 22 
                                                      OpDecorate %22 Binding 22 
                                                      OpDecorate %36 RelaxedPrecision 
                                                      OpDecorate %44 RelaxedPrecision 
                                                      OpDecorate %45 RelaxedPrecision 
                                                      OpDecorate %47 RelaxedPrecision 
                                                      OpDecorate %48 RelaxedPrecision 
                                                      OpDecorate %49 RelaxedPrecision 
                                                      OpDecorate %50 RelaxedPrecision 
                                                      OpDecorate %51 RelaxedPrecision 
                                                      OpDecorate %52 RelaxedPrecision 
                                                      OpDecorate %53 RelaxedPrecision 
                                                      OpDecorate %54 RelaxedPrecision 
                                                      OpDecorate %55 RelaxedPrecision 
                                                      OpDecorate %56 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD1 Location 57 
                                                      OpDecorate %61 RelaxedPrecision 
                                                      OpDecorate %62 RelaxedPrecision 
                                                      OpDecorate %63 RelaxedPrecision 
                                                      OpDecorate %64 RelaxedPrecision 
                                                      OpDecorate %68 RelaxedPrecision 
                                                      OpDecorate %69 RelaxedPrecision 
                                                      OpDecorate %70 RelaxedPrecision 
                                                      OpDecorate %73 RelaxedPrecision 
                                                      OpDecorate %75 RelaxedPrecision 
                                                      OpDecorate %76 RelaxedPrecision 
                                                      OpDecorate %77 RelaxedPrecision 
                                                      OpDecorate %81 RelaxedPrecision 
                                                      OpDecorate %82 RelaxedPrecision 
                                                      OpDecorate %85 RelaxedPrecision 
                                                      OpDecorate %89 RelaxedPrecision 
                                                      OpDecorate %90 RelaxedPrecision 
                                                      OpDecorate %94 RelaxedPrecision 
                                                      OpDecorate %96 RelaxedPrecision 
                                                      OpDecorate %100 RelaxedPrecision 
                                                      OpDecorate %106 RelaxedPrecision 
                                                      OpDecorate %107 RelaxedPrecision 
                                                      OpDecorate %109 RelaxedPrecision 
                                                      OpDecorate %110 RelaxedPrecision 
                                                      OpDecorate %116 RelaxedPrecision 
                                                      OpDecorate %117 RelaxedPrecision 
                                                      OpDecorate %119 RelaxedPrecision 
                                                      OpDecorate %121 RelaxedPrecision 
                                                      OpDecorate %122 RelaxedPrecision 
                                                      OpDecorate %123 RelaxedPrecision 
                                                      OpDecorate %126 RelaxedPrecision 
                                                      OpDecorate %127 RelaxedPrecision 
                                                      OpDecorate %128 RelaxedPrecision 
                                                      OpDecorate %129 RelaxedPrecision 
                                                      OpDecorate %202 RelaxedPrecision 
                                                      OpDecorate %205 RelaxedPrecision 
                                                      OpDecorate %250 DescriptorSet 250 
                                                      OpDecorate %250 Binding 250 
                                                      OpDecorate %254 DescriptorSet 254 
                                                      OpDecorate %254 Binding 254 
                                                      OpDecorate %263 RelaxedPrecision 
                                                      OpDecorate %264 RelaxedPrecision 
                                                      OpDecorate %265 RelaxedPrecision 
                                                      OpDecorate %269 RelaxedPrecision 
                                                      OpDecorate %272 RelaxedPrecision 
                                                      OpDecorate %276 RelaxedPrecision 
                                                      OpDecorate %277 RelaxedPrecision 
                                                      OpDecorate %278 RelaxedPrecision 
                                                      OpDecorate %281 RelaxedPrecision 
                                                      OpDecorate %284 RelaxedPrecision 
                                                      OpDecorate %289 RelaxedPrecision 
                                                      OpDecorate %294 RelaxedPrecision 
                                                      OpDecorate %295 RelaxedPrecision 
                                                      OpDecorate %298 RelaxedPrecision 
                                                      OpDecorate %299 RelaxedPrecision 
                                                      OpDecorate %300 RelaxedPrecision 
                                                      OpDecorate %303 RelaxedPrecision 
                                                      OpDecorate %307 RelaxedPrecision 
                                                      OpDecorate %308 RelaxedPrecision 
                                                      OpDecorate %309 RelaxedPrecision 
                                                      OpDecorate %312 RelaxedPrecision 
                                                      OpDecorate %313 RelaxedPrecision 
                                                      OpDecorate %314 RelaxedPrecision 
                                                      OpDecorate %315 RelaxedPrecision 
                                                      OpDecorate %316 RelaxedPrecision 
                                                      OpDecorate %318 RelaxedPrecision 
                                                      OpDecorate %319 RelaxedPrecision 
                                                      OpDecorate %322 RelaxedPrecision 
                                                      OpDecorate %323 RelaxedPrecision 
                                                      OpDecorate %325 RelaxedPrecision 
                                                      OpDecorate %326 RelaxedPrecision 
                                                      OpDecorate %327 RelaxedPrecision 
                                                      OpDecorate %328 RelaxedPrecision 
                                                      OpDecorate %329 RelaxedPrecision 
                                                      OpDecorate %330 RelaxedPrecision 
                                                      OpDecorate %331 RelaxedPrecision 
                                                      OpDecorate %332 RelaxedPrecision 
                                                      OpDecorate %333 RelaxedPrecision 
                                                      OpDecorate %335 RelaxedPrecision 
                                                      OpDecorate %336 RelaxedPrecision 
                                                      OpDecorate %339 RelaxedPrecision 
                                                      OpDecorate %340 RelaxedPrecision 
                                                      OpDecorate %343 RelaxedPrecision 
                                                      OpDecorate %344 RelaxedPrecision 
                                                      OpDecorate %345 RelaxedPrecision 
                                                      OpDecorate %347 RelaxedPrecision 
                                                      OpDecorate %349 RelaxedPrecision 
                                                      OpDecorate %350 RelaxedPrecision 
                                                      OpDecorate %353 RelaxedPrecision 
                                                      OpDecorate %354 RelaxedPrecision 
                                                      OpDecorate %355 RelaxedPrecision 
                                                      OpDecorate %358 RelaxedPrecision 
                                                      OpDecorate %360 RelaxedPrecision 
                                                      OpDecorate %361 RelaxedPrecision 
                                                      OpDecorate %365 RelaxedPrecision 
                                                      OpDecorate %366 RelaxedPrecision 
                                                      OpDecorate %367 RelaxedPrecision 
                                                      OpDecorate %370 RelaxedPrecision 
                                                      OpDecorate %371 RelaxedPrecision 
                                                      OpDecorate %372 RelaxedPrecision 
                                                      OpDecorate %374 RelaxedPrecision 
                                                      OpDecorate %375 RelaxedPrecision 
                                                      OpDecorate %376 RelaxedPrecision 
                                                      OpDecorate %377 RelaxedPrecision 
                                                      OpDecorate %379 RelaxedPrecision 
                                                      OpDecorate %380 RelaxedPrecision 
                                                      OpDecorate %381 RelaxedPrecision 
                                                      OpDecorate %382 RelaxedPrecision 
                                                      OpDecorate %383 RelaxedPrecision 
                                                      OpDecorate %385 RelaxedPrecision 
                                                      OpDecorate %386 RelaxedPrecision 
                                                      OpDecorate %387 RelaxedPrecision 
                                                      OpDecorate %388 RelaxedPrecision 
                                                      OpDecorate %389 RelaxedPrecision 
                                                      OpDecorate %390 RelaxedPrecision 
                                                      OpDecorate %391 RelaxedPrecision 
                                                      OpDecorate %392 RelaxedPrecision 
                                                      OpDecorate %393 RelaxedPrecision 
                                                      OpDecorate %394 RelaxedPrecision 
                                                      OpDecorate %395 RelaxedPrecision 
                                                      OpDecorate %395 DescriptorSet 395 
                                                      OpDecorate %395 Binding 395 
                                                      OpDecorate %396 RelaxedPrecision 
                                                      OpDecorate %397 RelaxedPrecision 
                                                      OpDecorate %397 DescriptorSet 397 
                                                      OpDecorate %397 Binding 397 
                                                      OpDecorate %398 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD0 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD0 Location 402 
                                                      OpDecorate %403 RelaxedPrecision 
                                                      OpDecorate %404 RelaxedPrecision 
                                                      OpDecorate %405 RelaxedPrecision 
                                                      OpDecorate %406 RelaxedPrecision 
                                                      OpDecorate %409 RelaxedPrecision 
                                                      OpDecorate %410 RelaxedPrecision 
                                                      OpDecorate %411 RelaxedPrecision 
                                                      OpDecorate %412 RelaxedPrecision 
                                                      OpDecorate %414 RelaxedPrecision 
                                                      OpDecorate %415 RelaxedPrecision 
                                                      OpDecorate %416 RelaxedPrecision 
                                                      OpDecorate %417 RelaxedPrecision 
                                                      OpDecorate %418 RelaxedPrecision 
                                                      OpDecorate %419 RelaxedPrecision 
                                                      OpDecorate %423 RelaxedPrecision 
                                                      OpDecorate %423 Location 423 
                                               %2 = OpTypeVoid 
                                               %3 = OpTypeFunction %2 
                                               %6 = OpTypeFloat 32 
                                               %7 = OpTypeVector %6 3 
                                               %8 = OpTypePointer Private %7 
                                Private f32_3* %9 = OpVariable Private 
                                              %10 = OpTypePointer Input %7 
                        Input f32_3* vs_TEXCOORD2 = OpVariable Input 
                                              %14 = OpTypeVector %6 4 
                                              %15 = OpTypeInt 32 0 
                                          u32 %16 = OpConstant 16 
                                              %17 = OpTypeArray %14 %16 
                                          u32 %18 = OpConstant 4 
                                              %19 = OpTypeArray %14 %18 
                                              %20 = OpTypeStruct %7 %14 %17 %14 %14 %19 %14 %14 %14 %6 %14 %14 %6 %6 %6 
                                              %21 = OpTypePointer Uniform %20 
Uniform struct {f32_3; f32_4; f32_4[16]; f32_4; f32_4; f32_4[4]; f32_4; f32_4; f32_4; f32; f32_4; f32_4; f32; f32; f32;}* %22 = OpVariable Uniform 
                                              %23 = OpTypeInt 32 1 
                                          i32 %24 = OpConstant 0 
                                              %25 = OpTypePointer Uniform %7 
                                              %29 = OpTypePointer Private %6 
                                 Private f32* %30 = OpVariable Private 
                               Private f32_3* %36 = OpVariable Private 
                                          i32 %41 = OpConstant 1 
                                              %42 = OpTypePointer Uniform %14 
                                 Private f32* %47 = OpVariable Private 
                        Input f32_3* vs_TEXCOORD1 = OpVariable Input 
                               Private f32_3* %63 = OpVariable Private 
                                          u32 %71 = OpConstant 0 
                                          u32 %78 = OpConstant 1 
                                              %80 = OpTypeVector %6 2 
                                          f32 %83 = OpConstant 3.674022E-40 
                                        f32_2 %84 = OpConstantComposite %83 %83 
                                          i32 %91 = OpConstant 9 
                                              %92 = OpTypePointer Uniform %6 
                                          f32 %95 = OpConstant 3.674022E-40 
                                         i32 %104 = OpConstant 14 
                                         f32 %108 = OpConstant 3.674022E-40 
                                         f32 %113 = OpConstant 3.674022E-40 
                                Private f32* %119 = OpVariable Private 
                              Private f32_3* %124 = OpVariable Private 
                                         f32 %131 = OpConstant 3.674022E-40 
                                         f32 %143 = OpConstant 3.674022E-40 
                                         f32 %145 = OpConstant 3.674022E-40 
                                         i32 %155 = OpConstant 5 
                                         u32 %156 = OpConstant 2 
                                         i32 %163 = OpConstant 2 
                                         i32 %172 = OpConstant 4 
                                Private f32* %178 = OpVariable Private 
                                         u32 %189 = OpConstant 3 
                                         i32 %200 = OpConstant 3 
                                             %239 = OpTypePointer Function %7 
                                             %248 = OpTypeImage %6 Dim2D 0 0 0 1 Unknown 
                                             %249 = OpTypePointer UniformConstant %248 
        UniformConstant read_only Texture2D* %250 = OpVariable UniformConstant 
                                             %252 = OpTypeSampler 
                                             %253 = OpTypePointer UniformConstant %252 
                    UniformConstant sampler* %254 = OpVariable UniformConstant 
                                             %256 = OpTypeImage %6 Dim2D 1 0 0 1 Unknown 
                                             %257 = OpTypeSampledImage %256 
                                         i32 %292 = OpConstant 6 
                                         i32 %296 = OpConstant 7 
                                         i32 %305 = OpConstant 13 
                                         i32 %310 = OpConstant 12 
                              Private f32_3* %314 = OpVariable Private 
                                         i32 %363 = OpConstant 10 
                                         i32 %368 = OpConstant 11 
                              Private f32_3* %394 = OpVariable Private 
        UniformConstant read_only Texture2D* %395 = OpVariable UniformConstant 
                    UniformConstant sampler* %397 = OpVariable UniformConstant 
                                             %399 = OpTypeSampledImage %248 
                                             %401 = OpTypePointer Input %80 
                        Input f32_2* vs_TEXCOORD0 = OpVariable Input 
                                         i32 %407 = OpConstant 8 
                                             %422 = OpTypePointer Output %14 
                               Output f32_4* %423 = OpVariable Output 
                                             %427 = OpTypePointer Output %6 
                                          void %4 = OpFunction None %3 
                                               %5 = OpLabel 
                             Function f32_3* %240 = OpVariable Function 
                                        f32_3 %12 = OpLoad vs_TEXCOORD2 
                                        f32_3 %13 = OpFNegate %12 
                               Uniform f32_3* %26 = OpAccessChain %22 %24 
                                        f32_3 %27 = OpLoad %26 
                                        f32_3 %28 = OpFAdd %13 %27 
                                                      OpStore %9 %28 
                                        f32_3 %31 = OpLoad %9 
                                        f32_3 %32 = OpLoad %9 
                                          f32 %33 = OpDot %31 %32 
                                                      OpStore %30 %33 
                                          f32 %34 = OpLoad %30 
                                          f32 %35 = OpExtInst %1 32 %34 
                                                      OpStore %30 %35 
                                        f32_3 %37 = OpLoad %9 
                                          f32 %38 = OpLoad %30 
                                        f32_3 %39 = OpCompositeConstruct %38 %38 %38 
                                        f32_3 %40 = OpFMul %37 %39 
                               Uniform f32_4* %43 = OpAccessChain %22 %41 
                                        f32_4 %44 = OpLoad %43 
                                        f32_3 %45 = OpVectorShuffle %44 %44 0 1 2 
                                        f32_3 %46 = OpFAdd %40 %45 
                                                      OpStore %36 %46 
                                        f32_3 %48 = OpLoad %36 
                                        f32_3 %49 = OpLoad %36 
                                          f32 %50 = OpDot %48 %49 
                                                      OpStore %47 %50 
                                          f32 %51 = OpLoad %47 
                                          f32 %52 = OpExtInst %1 32 %51 
                                                      OpStore %47 %52 
                                          f32 %53 = OpLoad %47 
                                        f32_3 %54 = OpCompositeConstruct %53 %53 %53 
                                        f32_3 %55 = OpLoad %36 
                                        f32_3 %56 = OpFMul %54 %55 
                                                      OpStore %36 %56 
                                        f32_3 %58 = OpLoad vs_TEXCOORD1 
                                        f32_3 %59 = OpLoad vs_TEXCOORD1 
                                          f32 %60 = OpDot %58 %59 
                                                      OpStore %47 %60 
                                          f32 %61 = OpLoad %47 
                                          f32 %62 = OpExtInst %1 32 %61 
                                                      OpStore %47 %62 
                                          f32 %64 = OpLoad %47 
                                        f32_3 %65 = OpCompositeConstruct %64 %64 %64 
                                        f32_3 %66 = OpLoad vs_TEXCOORD1 
                                        f32_3 %67 = OpFMul %65 %66 
                                                      OpStore %63 %67 
                                        f32_3 %68 = OpLoad %63 
                                        f32_3 %69 = OpLoad %36 
                                          f32 %70 = OpDot %68 %69 
                                 Private f32* %72 = OpAccessChain %36 %71 
                                                      OpStore %72 %70 
                                        f32_3 %73 = OpLoad %63 
                               Uniform f32_4* %74 = OpAccessChain %22 %41 
                                        f32_4 %75 = OpLoad %74 
                                        f32_3 %76 = OpVectorShuffle %75 %75 0 1 2 
                                          f32 %77 = OpDot %73 %76 
                                 Private f32* %79 = OpAccessChain %36 %78 
                                                      OpStore %79 %77 
                                        f32_3 %81 = OpLoad %36 
                                        f32_2 %82 = OpVectorShuffle %81 %81 0 1 
                                        f32_2 %85 = OpExtInst %1 40 %82 %84 
                                        f32_3 %86 = OpLoad %36 
                                        f32_3 %87 = OpVectorShuffle %86 %85 3 4 2 
                                                      OpStore %36 %87 
                                 Private f32* %88 = OpAccessChain %36 %71 
                                          f32 %89 = OpLoad %88 
                                          f32 %90 = OpExtInst %1 30 %89 
                                                      OpStore %30 %90 
                                 Uniform f32* %93 = OpAccessChain %22 %91 
                                          f32 %94 = OpLoad %93 
                                          f32 %96 = OpFMul %94 %95 
                                 Private f32* %97 = OpAccessChain %36 %71 
                                                      OpStore %97 %96 
                                          f32 %98 = OpLoad %30 
                                 Private f32* %99 = OpAccessChain %36 %71 
                                         f32 %100 = OpLoad %99 
                                         f32 %101 = OpFMul %98 %100 
                                                      OpStore %30 %101 
                                         f32 %102 = OpLoad %30 
                                         f32 %103 = OpExtInst %1 29 %102 
                                                      OpStore %30 %103 
                                Uniform f32* %105 = OpAccessChain %22 %104 
                                         f32 %106 = OpLoad %105 
                                         f32 %107 = OpFNegate %106 
                                         f32 %109 = OpFMul %107 %108 
                                         f32 %110 = OpFAdd %109 %108 
                                Private f32* %111 = OpAccessChain %36 %71 
                                                      OpStore %111 %110 
                                         f32 %112 = OpLoad %30 
                                         f32 %114 = OpFMul %112 %113 
                                Private f32* %115 = OpAccessChain %36 %71 
                                         f32 %116 = OpLoad %115 
                                         f32 %117 = OpFNegate %116 
                                         f32 %118 = OpFAdd %114 %117 
                                                      OpStore %30 %118 
                                Uniform f32* %120 = OpAccessChain %22 %104 
                                         f32 %121 = OpLoad %120 
                                         f32 %122 = OpFMul %121 %108 
                                         f32 %123 = OpFAdd %122 %108 
                                                      OpStore %119 %123 
                                Private f32* %125 = OpAccessChain %36 %71 
                                         f32 %126 = OpLoad %125 
                                         f32 %127 = OpFNegate %126 
                                         f32 %128 = OpLoad %119 
                                         f32 %129 = OpFAdd %127 %128 
                                Private f32* %130 = OpAccessChain %124 %71 
                                                      OpStore %130 %129 
                                Private f32* %132 = OpAccessChain %124 %71 
                                         f32 %133 = OpLoad %132 
                                         f32 %134 = OpFDiv %131 %133 
                                Private f32* %135 = OpAccessChain %124 %71 
                                                      OpStore %135 %134 
                                         f32 %136 = OpLoad %30 
                                Private f32* %137 = OpAccessChain %124 %71 
                                         f32 %138 = OpLoad %137 
                                         f32 %139 = OpFMul %136 %138 
                                                      OpStore %30 %139 
                                         f32 %140 = OpLoad %30 
                                         f32 %141 = OpExtInst %1 43 %140 %83 %131 
                                                      OpStore %30 %141 
                                         f32 %142 = OpLoad %30 
                                         f32 %144 = OpFMul %142 %143 
                                         f32 %146 = OpFAdd %144 %145 
                                Private f32* %147 = OpAccessChain %124 %71 
                                                      OpStore %147 %146 
                                         f32 %148 = OpLoad %30 
                                         f32 %149 = OpLoad %30 
                                         f32 %150 = OpFMul %148 %149 
                                                      OpStore %30 %150 
                                         f32 %151 = OpLoad %30 
                                Private f32* %152 = OpAccessChain %124 %71 
                                         f32 %153 = OpLoad %152 
                                         f32 %154 = OpFMul %151 %153 
                                                      OpStore %30 %154 
                                Uniform f32* %157 = OpAccessChain %22 %155 %24 %156 
                                         f32 %158 = OpLoad %157 
                                Private f32* %159 = OpAccessChain %124 %71 
                                                      OpStore %159 %158 
                                Uniform f32* %160 = OpAccessChain %22 %155 %41 %156 
                                         f32 %161 = OpLoad %160 
                                Private f32* %162 = OpAccessChain %124 %78 
                                                      OpStore %162 %161 
                                Uniform f32* %164 = OpAccessChain %22 %155 %163 %156 
                                         f32 %165 = OpLoad %164 
                                Private f32* %166 = OpAccessChain %124 %156 
                                                      OpStore %166 %165 
                                       f32_3 %167 = OpLoad %9 
                                       f32_3 %168 = OpLoad %124 
                                         f32 %169 = OpDot %167 %168 
                                Private f32* %170 = OpAccessChain %9 %71 
                                                      OpStore %170 %169 
                                       f32_3 %171 = OpLoad vs_TEXCOORD2 
                              Uniform f32_4* %173 = OpAccessChain %22 %172 
                                       f32_4 %174 = OpLoad %173 
                                       f32_3 %175 = OpVectorShuffle %174 %174 0 1 2 
                                       f32_3 %176 = OpFNegate %175 
                                       f32_3 %177 = OpFAdd %171 %176 
                                                      OpStore %124 %177 
                                       f32_3 %179 = OpLoad %124 
                                       f32_3 %180 = OpLoad %124 
                                         f32 %181 = OpDot %179 %180 
                                                      OpStore %178 %181 
                                         f32 %182 = OpLoad %178 
                                         f32 %183 = OpExtInst %1 31 %182 
                                                      OpStore %178 %183 
                                Private f32* %184 = OpAccessChain %9 %71 
                                         f32 %185 = OpLoad %184 
                                         f32 %186 = OpFNegate %185 
                                         f32 %187 = OpLoad %178 
                                         f32 %188 = OpFAdd %186 %187 
                                                      OpStore %178 %188 
                                Uniform f32* %190 = OpAccessChain %22 %172 %189 
                                         f32 %191 = OpLoad %190 
                                         f32 %192 = OpLoad %178 
                                         f32 %193 = OpFMul %191 %192 
                                Private f32* %194 = OpAccessChain %9 %71 
                                         f32 %195 = OpLoad %194 
                                         f32 %196 = OpFAdd %193 %195 
                                Private f32* %197 = OpAccessChain %9 %71 
                                                      OpStore %197 %196 
                                Private f32* %198 = OpAccessChain %9 %71 
                                         f32 %199 = OpLoad %198 
                                Uniform f32* %201 = OpAccessChain %22 %200 %156 
                                         f32 %202 = OpLoad %201 
                                         f32 %203 = OpFMul %199 %202 
                                Uniform f32* %204 = OpAccessChain %22 %200 %189 
                                         f32 %205 = OpLoad %204 
                                         f32 %206 = OpFAdd %203 %205 
                                Private f32* %207 = OpAccessChain %9 %71 
                                                      OpStore %207 %206 
                                Private f32* %208 = OpAccessChain %9 %71 
                                         f32 %209 = OpLoad %208 
                                         f32 %210 = OpExtInst %1 43 %209 %83 %131 
                                Private f32* %211 = OpAccessChain %9 %71 
                                                      OpStore %211 %210 
                                       f32_3 %212 = OpLoad vs_TEXCOORD2 
                                       f32_3 %213 = OpVectorShuffle %212 %212 1 1 1 
                              Uniform f32_4* %214 = OpAccessChain %22 %163 %41 
                                       f32_4 %215 = OpLoad %214 
                                       f32_3 %216 = OpVectorShuffle %215 %215 0 1 2 
                                       f32_3 %217 = OpFMul %213 %216 
                                                      OpStore %124 %217 
                              Uniform f32_4* %218 = OpAccessChain %22 %163 %24 
                                       f32_4 %219 = OpLoad %218 
                                       f32_3 %220 = OpVectorShuffle %219 %219 0 1 2 
                                       f32_3 %221 = OpLoad vs_TEXCOORD2 
                                       f32_3 %222 = OpVectorShuffle %221 %221 0 0 0 
                                       f32_3 %223 = OpFMul %220 %222 
                                       f32_3 %224 = OpLoad %124 
                                       f32_3 %225 = OpFAdd %223 %224 
                                                      OpStore %124 %225 
                              Uniform f32_4* %226 = OpAccessChain %22 %163 %163 
                                       f32_4 %227 = OpLoad %226 
                                       f32_3 %228 = OpVectorShuffle %227 %227 0 1 2 
                                       f32_3 %229 = OpLoad vs_TEXCOORD2 
                                       f32_3 %230 = OpVectorShuffle %229 %229 2 2 2 
                                       f32_3 %231 = OpFMul %228 %230 
                                       f32_3 %232 = OpLoad %124 
                                       f32_3 %233 = OpFAdd %231 %232 
                                                      OpStore %124 %233 
                                       f32_3 %234 = OpLoad %124 
                              Uniform f32_4* %235 = OpAccessChain %22 %163 %200 
                                       f32_4 %236 = OpLoad %235 
                                       f32_3 %237 = OpVectorShuffle %236 %236 0 1 2 
                                       f32_3 %238 = OpFAdd %234 %237 
                                                      OpStore %124 %238 
                                       f32_3 %241 = OpLoad %124 
                                       f32_2 %242 = OpVectorShuffle %241 %241 0 1 
                                Private f32* %243 = OpAccessChain %124 %156 
                                         f32 %244 = OpLoad %243 
                                         f32 %245 = OpCompositeExtract %242 0 
                                         f32 %246 = OpCompositeExtract %242 1 
                                       f32_3 %247 = OpCompositeConstruct %245 %246 %244 
                                                      OpStore %240 %247 
                         read_only Texture2D %251 = OpLoad %250 
                                     sampler %255 = OpLoad %254 
                  read_only Texture2DSampled %258 = OpSampledImage %251 %255 
                                       f32_3 %259 = OpLoad %240 
                                         f32 %260 = OpCompositeExtract %259 2 
                                         f32 %261 = OpImageSampleDrefExplicitLod %258 %259 %260 Lod %6 
                                                      OpStore %178 %261 
                                Uniform f32* %262 = OpAccessChain %22 %200 %71 
                                         f32 %263 = OpLoad %262 
                                         f32 %264 = OpFNegate %263 
                                         f32 %265 = OpFAdd %264 %131 
                                Private f32* %266 = OpAccessChain %36 %71 
                                                      OpStore %266 %265 
                                         f32 %267 = OpLoad %178 
                                Private f32* %268 = OpAccessChain %36 %71 
                                         f32 %269 = OpLoad %268 
                                         f32 %270 = OpFMul %267 %269 
                                Uniform f32* %271 = OpAccessChain %22 %200 %71 
                                         f32 %272 = OpLoad %271 
                                         f32 %273 = OpFAdd %270 %272 
                                Private f32* %274 = OpAccessChain %36 %71 
                                                      OpStore %274 %273 
                                Private f32* %275 = OpAccessChain %36 %71 
                                         f32 %276 = OpLoad %275 
                                         f32 %277 = OpFNegate %276 
                                         f32 %278 = OpFAdd %277 %131 
                                                      OpStore %119 %278 
                                Private f32* %279 = OpAccessChain %9 %71 
                                         f32 %280 = OpLoad %279 
                                         f32 %281 = OpLoad %119 
                                         f32 %282 = OpFMul %280 %281 
                                Private f32* %283 = OpAccessChain %36 %71 
                                         f32 %284 = OpLoad %283 
                                         f32 %285 = OpFAdd %282 %284 
                                Private f32* %286 = OpAccessChain %36 %71 
                                                      OpStore %286 %285 
                                         f32 %287 = OpLoad %30 
                                Private f32* %288 = OpAccessChain %36 %71 
                                         f32 %289 = OpLoad %288 
                                         f32 %290 = OpFMul %287 %289 
                                Private f32* %291 = OpAccessChain %9 %71 
                                                      OpStore %291 %290 
                              Uniform f32_4* %293 = OpAccessChain %22 %292 
                                       f32_4 %294 = OpLoad %293 
                                       f32_3 %295 = OpVectorShuffle %294 %294 0 1 2 
                              Uniform f32_4* %297 = OpAccessChain %22 %296 
                                       f32_4 %298 = OpLoad %297 
                                       f32_3 %299 = OpVectorShuffle %298 %298 0 1 2 
                                       f32_3 %300 = OpFMul %295 %299 
                                                      OpStore %63 %300 
                                       f32_3 %301 = OpLoad %9 
                                       f32_3 %302 = OpVectorShuffle %301 %301 0 0 0 
                                       f32_3 %303 = OpLoad %63 
                                       f32_3 %304 = OpFMul %302 %303 
                                                      OpStore %9 %304 
                                Uniform f32* %306 = OpAccessChain %22 %305 
                                         f32 %307 = OpLoad %306 
                                         f32 %308 = OpFNegate %307 
                                         f32 %309 = OpFMul %308 %108 
                                Uniform f32* %311 = OpAccessChain %22 %310 
                                         f32 %312 = OpLoad %311 
                                         f32 %313 = OpFAdd %309 %312 
                                                      OpStore %119 %313 
                                         f32 %315 = OpLoad %119 
                                         f32 %316 = OpFNegate %315 
                                Private f32* %317 = OpAccessChain %36 %78 
                                         f32 %318 = OpLoad %317 
                                         f32 %319 = OpFAdd %316 %318 
                                Private f32* %320 = OpAccessChain %314 %71 
                                                      OpStore %320 %319 
                                Uniform f32* %321 = OpAccessChain %22 %305 
                                         f32 %322 = OpLoad %321 
                                         f32 %323 = OpFMul %322 %108 
                                Uniform f32* %324 = OpAccessChain %22 %310 
                                         f32 %325 = OpLoad %324 
                                         f32 %326 = OpFAdd %323 %325 
                                                      OpStore %47 %326 
                                         f32 %327 = OpLoad %119 
                                         f32 %328 = OpFNegate %327 
                                         f32 %329 = OpLoad %47 
                                         f32 %330 = OpFAdd %328 %329 
                                                      OpStore %119 %330 
                                         f32 %331 = OpLoad %119 
                                         f32 %332 = OpFDiv %131 %331 
                                                      OpStore %119 %332 
                                         f32 %333 = OpLoad %119 
                                Private f32* %334 = OpAccessChain %314 %71 
                                         f32 %335 = OpLoad %334 
                                         f32 %336 = OpFMul %333 %335 
                                Private f32* %337 = OpAccessChain %314 %71 
                                                      OpStore %337 %336 
                                Private f32* %338 = OpAccessChain %314 %71 
                                         f32 %339 = OpLoad %338 
                                         f32 %340 = OpExtInst %1 43 %339 %83 %131 
                                Private f32* %341 = OpAccessChain %314 %71 
                                                      OpStore %341 %340 
                                Private f32* %342 = OpAccessChain %314 %71 
                                         f32 %343 = OpLoad %342 
                                         f32 %344 = OpFMul %343 %143 
                                         f32 %345 = OpFAdd %344 %145 
                                                      OpStore %119 %345 
                                Private f32* %346 = OpAccessChain %314 %71 
                                         f32 %347 = OpLoad %346 
                                Private f32* %348 = OpAccessChain %314 %71 
                                         f32 %349 = OpLoad %348 
                                         f32 %350 = OpFMul %347 %349 
                                Private f32* %351 = OpAccessChain %314 %71 
                                                      OpStore %351 %350 
                                Private f32* %352 = OpAccessChain %314 %71 
                                         f32 %353 = OpLoad %352 
                                         f32 %354 = OpLoad %119 
                                         f32 %355 = OpFMul %353 %354 
                                Private f32* %356 = OpAccessChain %314 %71 
                                                      OpStore %356 %355 
                                Private f32* %357 = OpAccessChain %36 %71 
                                         f32 %358 = OpLoad %357 
                                Private f32* %359 = OpAccessChain %314 %71 
                                         f32 %360 = OpLoad %359 
                                         f32 %361 = OpFMul %358 %360 
                                Private f32* %362 = OpAccessChain %36 %71 
                                                      OpStore %362 %361 
                              Uniform f32_4* %364 = OpAccessChain %22 %363 
                                       f32_4 %365 = OpLoad %364 
                                       f32_3 %366 = OpVectorShuffle %365 %365 0 1 2 
                                       f32_3 %367 = OpFNegate %366 
                              Uniform f32_4* %369 = OpAccessChain %22 %368 
                                       f32_4 %370 = OpLoad %369 
                                       f32_3 %371 = OpVectorShuffle %370 %370 0 1 2 
                                       f32_3 %372 = OpFAdd %367 %371 
                                                      OpStore %314 %372 
                              Uniform f32_4* %373 = OpAccessChain %22 %368 
                                       f32_4 %374 = OpLoad %373 
                                       f32_3 %375 = OpVectorShuffle %374 %374 3 3 3 
                                       f32_3 %376 = OpLoad %314 
                                       f32_3 %377 = OpFMul %375 %376 
                              Uniform f32_4* %378 = OpAccessChain %22 %363 
                                       f32_4 %379 = OpLoad %378 
                                       f32_3 %380 = OpVectorShuffle %379 %379 0 1 2 
                                       f32_3 %381 = OpFAdd %377 %380 
                                                      OpStore %314 %381 
                                       f32_3 %382 = OpLoad %314 
                                       f32_3 %383 = OpFNegate %382 
                              Uniform f32_4* %384 = OpAccessChain %22 %363 
                                       f32_4 %385 = OpLoad %384 
                                       f32_3 %386 = OpVectorShuffle %385 %385 0 1 2 
                                       f32_3 %387 = OpFAdd %383 %386 
                                                      OpStore %63 %387 
                                       f32_3 %388 = OpLoad %36 
                                       f32_3 %389 = OpVectorShuffle %388 %388 0 0 0 
                                       f32_3 %390 = OpLoad %63 
                                       f32_3 %391 = OpFMul %389 %390 
                                       f32_3 %392 = OpLoad %314 
                                       f32_3 %393 = OpFAdd %391 %392 
                                                      OpStore %36 %393 
                         read_only Texture2D %396 = OpLoad %395 
                                     sampler %398 = OpLoad %397 
                  read_only Texture2DSampled %400 = OpSampledImage %396 %398 
                                       f32_2 %403 = OpLoad vs_TEXCOORD0 
                                       f32_4 %404 = OpImageSampleImplicitLod %400 %403 
                                       f32_3 %405 = OpVectorShuffle %404 %404 0 1 2 
                                                      OpStore %394 %405 
                                       f32_3 %406 = OpLoad %394 
                              Uniform f32_4* %408 = OpAccessChain %22 %407 
                                       f32_4 %409 = OpLoad %408 
                                       f32_3 %410 = OpVectorShuffle %409 %409 0 1 2 
                                       f32_3 %411 = OpFMul %406 %410 
                                                      OpStore %63 %411 
                                       f32_3 %412 = OpLoad %63 
                              Uniform f32_4* %413 = OpAccessChain %22 %292 
                                       f32_4 %414 = OpLoad %413 
                                       f32_3 %415 = OpVectorShuffle %414 %414 0 1 2 
                                       f32_3 %416 = OpFMul %412 %415 
                                                      OpStore %63 %416 
                                       f32_3 %417 = OpLoad %63 
                                       f32_3 %418 = OpLoad %36 
                                       f32_3 %419 = OpFMul %417 %418 
                                       f32_3 %420 = OpLoad %9 
                                       f32_3 %421 = OpFAdd %419 %420 
                                                      OpStore %9 %421 
                                       f32_3 %424 = OpLoad %9 
                                       f32_4 %425 = OpLoad %423 
                                       f32_4 %426 = OpVectorShuffle %425 %424 4 5 6 3 
                                                      OpStore %423 %426 
                                 Output f32* %428 = OpAccessChain %423 %189 
                                                      OpStore %428 %131 
                                                      OpReturn
                                                      OpFunctionEnd
"
}
SubProgram "gles3 hw_tier00 " {
Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "SHADOWS_SCREEN" "VERTEXLIGHT_ON" }
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 unity_4LightPosX0;
uniform 	vec4 unity_4LightPosY0;
uniform 	vec4 unity_4LightPosZ0;
uniform 	mediump vec4 unity_4LightAtten0;
uniform 	mediump vec4 unity_LightColor[8];
uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in highp vec3 in_NORMAL0;
in highp vec4 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out highp vec3 vs_TEXCOORD1;
out highp vec3 vs_TEXCOORD2;
out mediump vec3 vs_TEXCOORD3;
out highp vec4 vs_TEXCOORD5;
out highp vec4 vs_TEXCOORD6;
vec4 u_xlat0;
vec4 u_xlat1;
mediump vec4 u_xlat16_1;
vec4 u_xlat2;
vec4 u_xlat3;
vec4 u_xlat4;
mediump vec3 u_xlat16_5;
mediump vec3 u_xlat16_6;
float u_xlat21;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
    u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy;
    u_xlat1.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat1.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat1.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat21 = dot(u_xlat1.xyz, u_xlat1.xyz);
    u_xlat21 = inversesqrt(u_xlat21);
    u_xlat1.xyz = vec3(u_xlat21) * u_xlat1.xyz;
    vs_TEXCOORD1.xyz = u_xlat1.xyz;
    vs_TEXCOORD2.xyz = u_xlat0.xyz;
    u_xlat2 = (-u_xlat0.xxxx) + unity_4LightPosX0;
    u_xlat3 = (-u_xlat0.yyyy) + unity_4LightPosY0;
    u_xlat0 = (-u_xlat0.zzzz) + unity_4LightPosZ0;
    u_xlat4 = u_xlat1.yyyy * u_xlat3;
    u_xlat3 = u_xlat3 * u_xlat3;
    u_xlat3 = u_xlat2 * u_xlat2 + u_xlat3;
    u_xlat2 = u_xlat2 * u_xlat1.xxxx + u_xlat4;
    u_xlat2 = u_xlat0 * u_xlat1.zzzz + u_xlat2;
    u_xlat0 = u_xlat0 * u_xlat0 + u_xlat3;
    u_xlat0 = max(u_xlat0, vec4(9.99999997e-07, 9.99999997e-07, 9.99999997e-07, 9.99999997e-07));
    u_xlat3 = inversesqrt(u_xlat0);
    u_xlat0 = u_xlat0 * unity_4LightAtten0 + vec4(1.0, 1.0, 1.0, 1.0);
    u_xlat0 = vec4(1.0, 1.0, 1.0, 1.0) / u_xlat0;
    u_xlat2 = u_xlat2 * u_xlat3;
    u_xlat2 = max(u_xlat2, vec4(0.0, 0.0, 0.0, 0.0));
    u_xlat0 = u_xlat0 * u_xlat2;
    u_xlat2.xyz = u_xlat0.yyy * unity_LightColor[1].xyz;
    u_xlat2.xyz = unity_LightColor[0].xyz * u_xlat0.xxx + u_xlat2.xyz;
    u_xlat0.xyz = unity_LightColor[2].xyz * u_xlat0.zzz + u_xlat2.xyz;
    u_xlat0.xyz = unity_LightColor[3].xyz * u_xlat0.www + u_xlat0.xyz;
    u_xlat2.xyz = u_xlat0.xyz * vec3(0.305306017, 0.305306017, 0.305306017) + vec3(0.682171106, 0.682171106, 0.682171106);
    u_xlat2.xyz = u_xlat0.xyz * u_xlat2.xyz + vec3(0.0125228781, 0.0125228781, 0.0125228781);
    u_xlat16_5.x = u_xlat1.y * u_xlat1.y;
    u_xlat16_5.x = u_xlat1.x * u_xlat1.x + (-u_xlat16_5.x);
    u_xlat16_1 = u_xlat1.yzzx * u_xlat1.xyzz;
    u_xlat16_6.x = dot(unity_SHBr, u_xlat16_1);
    u_xlat16_6.y = dot(unity_SHBg, u_xlat16_1);
    u_xlat16_6.z = dot(unity_SHBb, u_xlat16_1);
    u_xlat16_5.xyz = unity_SHC.xyz * u_xlat16_5.xxx + u_xlat16_6.xyz;
    vs_TEXCOORD3.xyz = u_xlat0.xyz * u_xlat2.xyz + u_xlat16_5.xyz;
    vs_TEXCOORD5 = vec4(0.0, 0.0, 0.0, 0.0);
    vs_TEXCOORD6 = vec4(0.0, 0.0, 0.0, 0.0);
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es
#ifdef GL_EXT_shader_texture_lod
#extension GL_EXT_shader_texture_lod : enable
#endif

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec3 _WorldSpaceCameraPos;
uniform 	mediump vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	vec4 hlslcc_mtx4x4unity_WorldToShadow[16];
uniform 	mediump vec4 _LightShadowData;
uniform 	vec4 unity_ShadowFadeCenterAndType;
uniform 	vec4 hlslcc_mtx4x4unity_MatrixV[4];
uniform 	mediump vec4 _LightColor0;
uniform 	mediump vec4 _SpecColor;
uniform 	mediump vec4 _Color;
uniform 	mediump float _Smoothness;
uniform 	mediump vec4 _HColor;
uniform 	mediump vec4 _SColor;
uniform 	mediump float _RampThreshold;
uniform 	mediump float _RampSmooth;
uniform 	mediump float _SpecSmooth;
UNITY_LOCATION(0) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(1) uniform highp sampler2D _ShadowMapTexture;
UNITY_LOCATION(2) uniform highp sampler2DShadow hlslcc_zcmp_ShadowMapTexture;
in mediump vec2 vs_TEXCOORD0;
in highp vec3 vs_TEXCOORD1;
in highp vec3 vs_TEXCOORD2;
in mediump vec3 vs_TEXCOORD3;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
vec4 u_xlat1;
mediump vec3 u_xlat16_1;
mediump vec3 u_xlat16_2;
vec3 u_xlat3;
mediump vec3 u_xlat16_3;
mediump vec3 u_xlat16_4;
float u_xlat5;
mediump vec3 u_xlat16_6;
mediump float u_xlat16_11;
float u_xlat15;
mediump float u_xlat16_16;
void main()
{
    u_xlat0.xyz = (-vs_TEXCOORD2.xyz) + _WorldSpaceCameraPos.xyz;
    u_xlat15 = dot(u_xlat0.xyz, u_xlat0.xyz);
    u_xlat15 = inversesqrt(u_xlat15);
    u_xlat16_1.xyz = u_xlat0.xyz * vec3(u_xlat15) + _WorldSpaceLightPos0.xyz;
    u_xlat16_16 = dot(u_xlat16_1.xyz, u_xlat16_1.xyz);
    u_xlat16_16 = inversesqrt(u_xlat16_16);
    u_xlat16_1.xyz = vec3(u_xlat16_16) * u_xlat16_1.xyz;
    u_xlat16_16 = dot(vs_TEXCOORD1.xyz, vs_TEXCOORD1.xyz);
    u_xlat16_16 = inversesqrt(u_xlat16_16);
    u_xlat16_2.xyz = vec3(u_xlat16_16) * vs_TEXCOORD1.xyz;
    u_xlat16_1.x = dot(u_xlat16_2.xyz, u_xlat16_1.xyz);
    u_xlat16_1.y = dot(u_xlat16_2.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat16_1.xy = max(u_xlat16_1.xy, vec2(0.0, 0.0));
    u_xlat15 = log2(u_xlat16_1.x);
    u_xlat16_1.x = _Smoothness * 128.0;
    u_xlat15 = u_xlat15 * u_xlat16_1.x;
    u_xlat15 = exp2(u_xlat15);
    u_xlat16_1.x = (-_SpecSmooth) * 0.5 + 0.5;
    u_xlat15 = u_xlat15 * 2.0 + (-u_xlat16_1.x);
    u_xlat16_11 = _SpecSmooth * 0.5 + 0.5;
    u_xlat3.x = (-u_xlat16_1.x) + u_xlat16_11;
    u_xlat3.x = float(1.0) / u_xlat3.x;
    u_xlat15 = u_xlat15 * u_xlat3.x;
#ifdef UNITY_ADRENO_ES3
    u_xlat15 = min(max(u_xlat15, 0.0), 1.0);
#else
    u_xlat15 = clamp(u_xlat15, 0.0, 1.0);
#endif
    u_xlat3.x = u_xlat15 * -2.0 + 3.0;
    u_xlat15 = u_xlat15 * u_xlat15;
    u_xlat15 = u_xlat15 * u_xlat3.x;
    u_xlat3.x = hlslcc_mtx4x4unity_MatrixV[0].z;
    u_xlat3.y = hlslcc_mtx4x4unity_MatrixV[1].z;
    u_xlat3.z = hlslcc_mtx4x4unity_MatrixV[2].z;
    u_xlat0.x = dot(u_xlat0.xyz, u_xlat3.xyz);
    u_xlat3.xyz = vs_TEXCOORD2.xyz + (-unity_ShadowFadeCenterAndType.xyz);
    u_xlat5 = dot(u_xlat3.xyz, u_xlat3.xyz);
    u_xlat5 = sqrt(u_xlat5);
    u_xlat5 = (-u_xlat0.x) + u_xlat5;
    u_xlat0.x = unity_ShadowFadeCenterAndType.w * u_xlat5 + u_xlat0.x;
    u_xlat0.x = u_xlat0.x * _LightShadowData.z + _LightShadowData.w;
#ifdef UNITY_ADRENO_ES3
    u_xlat0.x = min(max(u_xlat0.x, 0.0), 1.0);
#else
    u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);
#endif
    u_xlat3.xyz = vs_TEXCOORD2.yyy * hlslcc_mtx4x4unity_WorldToShadow[1].xyz;
    u_xlat3.xyz = hlslcc_mtx4x4unity_WorldToShadow[0].xyz * vs_TEXCOORD2.xxx + u_xlat3.xyz;
    u_xlat3.xyz = hlslcc_mtx4x4unity_WorldToShadow[2].xyz * vs_TEXCOORD2.zzz + u_xlat3.xyz;
    u_xlat3.xyz = u_xlat3.xyz + hlslcc_mtx4x4unity_WorldToShadow[3].xyz;
    vec3 txVec0 = vec3(u_xlat3.xy,u_xlat3.z);
    u_xlat5 = textureLod(hlslcc_zcmp_ShadowMapTexture, txVec0, 0.0);
    u_xlat16_1.x = (-_LightShadowData.x) + 1.0;
    u_xlat16_1.x = u_xlat5 * u_xlat16_1.x + _LightShadowData.x;
    u_xlat16_11 = (-u_xlat16_1.x) + 1.0;
    u_xlat16_1.x = u_xlat0.x * u_xlat16_11 + u_xlat16_1.x;
    u_xlat0.x = u_xlat15 * u_xlat16_1.x;
    u_xlat16_2.xyz = _LightColor0.xyz * _SpecColor.xyz;
    u_xlat0.xyz = u_xlat0.xxx * u_xlat16_2.xyz;
    u_xlat16_11 = (-_RampSmooth) * 0.5 + _RampThreshold;
    u_xlat16_6.x = (-u_xlat16_11) + u_xlat16_1.y;
    u_xlat16_16 = _RampSmooth * 0.5 + _RampThreshold;
    u_xlat16_11 = (-u_xlat16_11) + u_xlat16_16;
    u_xlat16_11 = float(1.0) / u_xlat16_11;
    u_xlat16_6.x = u_xlat16_11 * u_xlat16_6.x;
#ifdef UNITY_ADRENO_ES3
    u_xlat16_6.x = min(max(u_xlat16_6.x, 0.0), 1.0);
#else
    u_xlat16_6.x = clamp(u_xlat16_6.x, 0.0, 1.0);
#endif
    u_xlat16_11 = u_xlat16_6.x * -2.0 + 3.0;
    u_xlat16_6.x = u_xlat16_6.x * u_xlat16_6.x;
    u_xlat16_6.x = u_xlat16_6.x * u_xlat16_11;
    u_xlat16_1.x = u_xlat16_1.x * u_xlat16_6.x;
    u_xlat16_6.xyz = (-_HColor.xyz) + _SColor.xyz;
    u_xlat16_6.xyz = _SColor.www * u_xlat16_6.xyz + _HColor.xyz;
    u_xlat16_2.xyz = (-u_xlat16_6.xyz) + _HColor.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xxx * u_xlat16_2.xyz + u_xlat16_6.xyz;
    u_xlat16_3.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_2.xyz = u_xlat16_3.xyz * _Color.xyz;
    u_xlat16_4.xyz = u_xlat16_2.xyz * _LightColor0.xyz;
    u_xlat0.xyz = u_xlat16_4.xyz * u_xlat16_1.xyz + u_xlat0.xyz;
    u_xlat1.xyz = vs_TEXCOORD1.xyz;
    u_xlat1.w = 1.0;
    u_xlat16_4.x = dot(unity_SHAr, u_xlat1);
    u_xlat16_4.y = dot(unity_SHAg, u_xlat1);
    u_xlat16_4.z = dot(unity_SHAb, u_xlat1);
    u_xlat16_4.xyz = u_xlat16_4.xyz + vs_TEXCOORD3.xyz;
    u_xlat16_4.xyz = max(u_xlat16_4.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat3.xyz = log2(u_xlat16_4.xyz);
    u_xlat3.xyz = u_xlat3.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
    u_xlat3.xyz = exp2(u_xlat3.xyz);
    u_xlat3.xyz = u_xlat3.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
    u_xlat3.xyz = max(u_xlat3.xyz, vec3(0.0, 0.0, 0.0));
    SV_Target0.xyz = u_xlat16_2.xyz * u_xlat3.xyz + u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier01 " {
Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "SHADOWS_SCREEN" "VERTEXLIGHT_ON" }
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 unity_4LightPosX0;
uniform 	vec4 unity_4LightPosY0;
uniform 	vec4 unity_4LightPosZ0;
uniform 	mediump vec4 unity_4LightAtten0;
uniform 	mediump vec4 unity_LightColor[8];
uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in highp vec3 in_NORMAL0;
in highp vec4 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out highp vec3 vs_TEXCOORD1;
out highp vec3 vs_TEXCOORD2;
out mediump vec3 vs_TEXCOORD3;
out highp vec4 vs_TEXCOORD5;
out highp vec4 vs_TEXCOORD6;
vec4 u_xlat0;
vec4 u_xlat1;
mediump vec4 u_xlat16_1;
vec4 u_xlat2;
vec4 u_xlat3;
vec4 u_xlat4;
mediump vec3 u_xlat16_5;
mediump vec3 u_xlat16_6;
float u_xlat21;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
    u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy;
    u_xlat1.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat1.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat1.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat21 = dot(u_xlat1.xyz, u_xlat1.xyz);
    u_xlat21 = inversesqrt(u_xlat21);
    u_xlat1.xyz = vec3(u_xlat21) * u_xlat1.xyz;
    vs_TEXCOORD1.xyz = u_xlat1.xyz;
    vs_TEXCOORD2.xyz = u_xlat0.xyz;
    u_xlat2 = (-u_xlat0.xxxx) + unity_4LightPosX0;
    u_xlat3 = (-u_xlat0.yyyy) + unity_4LightPosY0;
    u_xlat0 = (-u_xlat0.zzzz) + unity_4LightPosZ0;
    u_xlat4 = u_xlat1.yyyy * u_xlat3;
    u_xlat3 = u_xlat3 * u_xlat3;
    u_xlat3 = u_xlat2 * u_xlat2 + u_xlat3;
    u_xlat2 = u_xlat2 * u_xlat1.xxxx + u_xlat4;
    u_xlat2 = u_xlat0 * u_xlat1.zzzz + u_xlat2;
    u_xlat0 = u_xlat0 * u_xlat0 + u_xlat3;
    u_xlat0 = max(u_xlat0, vec4(9.99999997e-07, 9.99999997e-07, 9.99999997e-07, 9.99999997e-07));
    u_xlat3 = inversesqrt(u_xlat0);
    u_xlat0 = u_xlat0 * unity_4LightAtten0 + vec4(1.0, 1.0, 1.0, 1.0);
    u_xlat0 = vec4(1.0, 1.0, 1.0, 1.0) / u_xlat0;
    u_xlat2 = u_xlat2 * u_xlat3;
    u_xlat2 = max(u_xlat2, vec4(0.0, 0.0, 0.0, 0.0));
    u_xlat0 = u_xlat0 * u_xlat2;
    u_xlat2.xyz = u_xlat0.yyy * unity_LightColor[1].xyz;
    u_xlat2.xyz = unity_LightColor[0].xyz * u_xlat0.xxx + u_xlat2.xyz;
    u_xlat0.xyz = unity_LightColor[2].xyz * u_xlat0.zzz + u_xlat2.xyz;
    u_xlat0.xyz = unity_LightColor[3].xyz * u_xlat0.www + u_xlat0.xyz;
    u_xlat2.xyz = u_xlat0.xyz * vec3(0.305306017, 0.305306017, 0.305306017) + vec3(0.682171106, 0.682171106, 0.682171106);
    u_xlat2.xyz = u_xlat0.xyz * u_xlat2.xyz + vec3(0.0125228781, 0.0125228781, 0.0125228781);
    u_xlat16_5.x = u_xlat1.y * u_xlat1.y;
    u_xlat16_5.x = u_xlat1.x * u_xlat1.x + (-u_xlat16_5.x);
    u_xlat16_1 = u_xlat1.yzzx * u_xlat1.xyzz;
    u_xlat16_6.x = dot(unity_SHBr, u_xlat16_1);
    u_xlat16_6.y = dot(unity_SHBg, u_xlat16_1);
    u_xlat16_6.z = dot(unity_SHBb, u_xlat16_1);
    u_xlat16_5.xyz = unity_SHC.xyz * u_xlat16_5.xxx + u_xlat16_6.xyz;
    vs_TEXCOORD3.xyz = u_xlat0.xyz * u_xlat2.xyz + u_xlat16_5.xyz;
    vs_TEXCOORD5 = vec4(0.0, 0.0, 0.0, 0.0);
    vs_TEXCOORD6 = vec4(0.0, 0.0, 0.0, 0.0);
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es
#ifdef GL_EXT_shader_texture_lod
#extension GL_EXT_shader_texture_lod : enable
#endif

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec3 _WorldSpaceCameraPos;
uniform 	mediump vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	vec4 hlslcc_mtx4x4unity_WorldToShadow[16];
uniform 	mediump vec4 _LightShadowData;
uniform 	vec4 unity_ShadowFadeCenterAndType;
uniform 	vec4 hlslcc_mtx4x4unity_MatrixV[4];
uniform 	mediump vec4 _LightColor0;
uniform 	mediump vec4 _SpecColor;
uniform 	mediump vec4 _Color;
uniform 	mediump float _Smoothness;
uniform 	mediump vec4 _HColor;
uniform 	mediump vec4 _SColor;
uniform 	mediump float _RampThreshold;
uniform 	mediump float _RampSmooth;
uniform 	mediump float _SpecSmooth;
UNITY_LOCATION(0) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(1) uniform highp sampler2D _ShadowMapTexture;
UNITY_LOCATION(2) uniform highp sampler2DShadow hlslcc_zcmp_ShadowMapTexture;
in mediump vec2 vs_TEXCOORD0;
in highp vec3 vs_TEXCOORD1;
in highp vec3 vs_TEXCOORD2;
in mediump vec3 vs_TEXCOORD3;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
vec4 u_xlat1;
mediump vec3 u_xlat16_1;
mediump vec3 u_xlat16_2;
vec3 u_xlat3;
mediump vec3 u_xlat16_3;
mediump vec3 u_xlat16_4;
float u_xlat5;
mediump vec3 u_xlat16_6;
mediump float u_xlat16_11;
float u_xlat15;
mediump float u_xlat16_16;
void main()
{
    u_xlat0.xyz = (-vs_TEXCOORD2.xyz) + _WorldSpaceCameraPos.xyz;
    u_xlat15 = dot(u_xlat0.xyz, u_xlat0.xyz);
    u_xlat15 = inversesqrt(u_xlat15);
    u_xlat16_1.xyz = u_xlat0.xyz * vec3(u_xlat15) + _WorldSpaceLightPos0.xyz;
    u_xlat16_16 = dot(u_xlat16_1.xyz, u_xlat16_1.xyz);
    u_xlat16_16 = inversesqrt(u_xlat16_16);
    u_xlat16_1.xyz = vec3(u_xlat16_16) * u_xlat16_1.xyz;
    u_xlat16_16 = dot(vs_TEXCOORD1.xyz, vs_TEXCOORD1.xyz);
    u_xlat16_16 = inversesqrt(u_xlat16_16);
    u_xlat16_2.xyz = vec3(u_xlat16_16) * vs_TEXCOORD1.xyz;
    u_xlat16_1.x = dot(u_xlat16_2.xyz, u_xlat16_1.xyz);
    u_xlat16_1.y = dot(u_xlat16_2.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat16_1.xy = max(u_xlat16_1.xy, vec2(0.0, 0.0));
    u_xlat15 = log2(u_xlat16_1.x);
    u_xlat16_1.x = _Smoothness * 128.0;
    u_xlat15 = u_xlat15 * u_xlat16_1.x;
    u_xlat15 = exp2(u_xlat15);
    u_xlat16_1.x = (-_SpecSmooth) * 0.5 + 0.5;
    u_xlat15 = u_xlat15 * 2.0 + (-u_xlat16_1.x);
    u_xlat16_11 = _SpecSmooth * 0.5 + 0.5;
    u_xlat3.x = (-u_xlat16_1.x) + u_xlat16_11;
    u_xlat3.x = float(1.0) / u_xlat3.x;
    u_xlat15 = u_xlat15 * u_xlat3.x;
#ifdef UNITY_ADRENO_ES3
    u_xlat15 = min(max(u_xlat15, 0.0), 1.0);
#else
    u_xlat15 = clamp(u_xlat15, 0.0, 1.0);
#endif
    u_xlat3.x = u_xlat15 * -2.0 + 3.0;
    u_xlat15 = u_xlat15 * u_xlat15;
    u_xlat15 = u_xlat15 * u_xlat3.x;
    u_xlat3.x = hlslcc_mtx4x4unity_MatrixV[0].z;
    u_xlat3.y = hlslcc_mtx4x4unity_MatrixV[1].z;
    u_xlat3.z = hlslcc_mtx4x4unity_MatrixV[2].z;
    u_xlat0.x = dot(u_xlat0.xyz, u_xlat3.xyz);
    u_xlat3.xyz = vs_TEXCOORD2.xyz + (-unity_ShadowFadeCenterAndType.xyz);
    u_xlat5 = dot(u_xlat3.xyz, u_xlat3.xyz);
    u_xlat5 = sqrt(u_xlat5);
    u_xlat5 = (-u_xlat0.x) + u_xlat5;
    u_xlat0.x = unity_ShadowFadeCenterAndType.w * u_xlat5 + u_xlat0.x;
    u_xlat0.x = u_xlat0.x * _LightShadowData.z + _LightShadowData.w;
#ifdef UNITY_ADRENO_ES3
    u_xlat0.x = min(max(u_xlat0.x, 0.0), 1.0);
#else
    u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);
#endif
    u_xlat3.xyz = vs_TEXCOORD2.yyy * hlslcc_mtx4x4unity_WorldToShadow[1].xyz;
    u_xlat3.xyz = hlslcc_mtx4x4unity_WorldToShadow[0].xyz * vs_TEXCOORD2.xxx + u_xlat3.xyz;
    u_xlat3.xyz = hlslcc_mtx4x4unity_WorldToShadow[2].xyz * vs_TEXCOORD2.zzz + u_xlat3.xyz;
    u_xlat3.xyz = u_xlat3.xyz + hlslcc_mtx4x4unity_WorldToShadow[3].xyz;
    vec3 txVec0 = vec3(u_xlat3.xy,u_xlat3.z);
    u_xlat5 = textureLod(hlslcc_zcmp_ShadowMapTexture, txVec0, 0.0);
    u_xlat16_1.x = (-_LightShadowData.x) + 1.0;
    u_xlat16_1.x = u_xlat5 * u_xlat16_1.x + _LightShadowData.x;
    u_xlat16_11 = (-u_xlat16_1.x) + 1.0;
    u_xlat16_1.x = u_xlat0.x * u_xlat16_11 + u_xlat16_1.x;
    u_xlat0.x = u_xlat15 * u_xlat16_1.x;
    u_xlat16_2.xyz = _LightColor0.xyz * _SpecColor.xyz;
    u_xlat0.xyz = u_xlat0.xxx * u_xlat16_2.xyz;
    u_xlat16_11 = (-_RampSmooth) * 0.5 + _RampThreshold;
    u_xlat16_6.x = (-u_xlat16_11) + u_xlat16_1.y;
    u_xlat16_16 = _RampSmooth * 0.5 + _RampThreshold;
    u_xlat16_11 = (-u_xlat16_11) + u_xlat16_16;
    u_xlat16_11 = float(1.0) / u_xlat16_11;
    u_xlat16_6.x = u_xlat16_11 * u_xlat16_6.x;
#ifdef UNITY_ADRENO_ES3
    u_xlat16_6.x = min(max(u_xlat16_6.x, 0.0), 1.0);
#else
    u_xlat16_6.x = clamp(u_xlat16_6.x, 0.0, 1.0);
#endif
    u_xlat16_11 = u_xlat16_6.x * -2.0 + 3.0;
    u_xlat16_6.x = u_xlat16_6.x * u_xlat16_6.x;
    u_xlat16_6.x = u_xlat16_6.x * u_xlat16_11;
    u_xlat16_1.x = u_xlat16_1.x * u_xlat16_6.x;
    u_xlat16_6.xyz = (-_HColor.xyz) + _SColor.xyz;
    u_xlat16_6.xyz = _SColor.www * u_xlat16_6.xyz + _HColor.xyz;
    u_xlat16_2.xyz = (-u_xlat16_6.xyz) + _HColor.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xxx * u_xlat16_2.xyz + u_xlat16_6.xyz;
    u_xlat16_3.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_2.xyz = u_xlat16_3.xyz * _Color.xyz;
    u_xlat16_4.xyz = u_xlat16_2.xyz * _LightColor0.xyz;
    u_xlat0.xyz = u_xlat16_4.xyz * u_xlat16_1.xyz + u_xlat0.xyz;
    u_xlat1.xyz = vs_TEXCOORD1.xyz;
    u_xlat1.w = 1.0;
    u_xlat16_4.x = dot(unity_SHAr, u_xlat1);
    u_xlat16_4.y = dot(unity_SHAg, u_xlat1);
    u_xlat16_4.z = dot(unity_SHAb, u_xlat1);
    u_xlat16_4.xyz = u_xlat16_4.xyz + vs_TEXCOORD3.xyz;
    u_xlat16_4.xyz = max(u_xlat16_4.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat3.xyz = log2(u_xlat16_4.xyz);
    u_xlat3.xyz = u_xlat3.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
    u_xlat3.xyz = exp2(u_xlat3.xyz);
    u_xlat3.xyz = u_xlat3.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
    u_xlat3.xyz = max(u_xlat3.xyz, vec3(0.0, 0.0, 0.0));
    SV_Target0.xyz = u_xlat16_2.xyz * u_xlat3.xyz + u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier02 " {
Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "SHADOWS_SCREEN" "VERTEXLIGHT_ON" }
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 unity_4LightPosX0;
uniform 	vec4 unity_4LightPosY0;
uniform 	vec4 unity_4LightPosZ0;
uniform 	mediump vec4 unity_4LightAtten0;
uniform 	mediump vec4 unity_LightColor[8];
uniform 	mediump vec4 unity_SHBr;
uniform 	mediump vec4 unity_SHBg;
uniform 	mediump vec4 unity_SHBb;
uniform 	mediump vec4 unity_SHC;
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in highp vec3 in_NORMAL0;
in highp vec4 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out highp vec3 vs_TEXCOORD1;
out highp vec3 vs_TEXCOORD2;
out mediump vec3 vs_TEXCOORD3;
out highp vec4 vs_TEXCOORD5;
out highp vec4 vs_TEXCOORD6;
vec4 u_xlat0;
vec4 u_xlat1;
mediump vec4 u_xlat16_1;
vec4 u_xlat2;
vec4 u_xlat3;
vec4 u_xlat4;
mediump vec3 u_xlat16_5;
mediump vec3 u_xlat16_6;
float u_xlat21;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat0.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
    u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy;
    u_xlat1.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat1.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat1.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat21 = dot(u_xlat1.xyz, u_xlat1.xyz);
    u_xlat21 = inversesqrt(u_xlat21);
    u_xlat1.xyz = vec3(u_xlat21) * u_xlat1.xyz;
    vs_TEXCOORD1.xyz = u_xlat1.xyz;
    vs_TEXCOORD2.xyz = u_xlat0.xyz;
    u_xlat2 = (-u_xlat0.xxxx) + unity_4LightPosX0;
    u_xlat3 = (-u_xlat0.yyyy) + unity_4LightPosY0;
    u_xlat0 = (-u_xlat0.zzzz) + unity_4LightPosZ0;
    u_xlat4 = u_xlat1.yyyy * u_xlat3;
    u_xlat3 = u_xlat3 * u_xlat3;
    u_xlat3 = u_xlat2 * u_xlat2 + u_xlat3;
    u_xlat2 = u_xlat2 * u_xlat1.xxxx + u_xlat4;
    u_xlat2 = u_xlat0 * u_xlat1.zzzz + u_xlat2;
    u_xlat0 = u_xlat0 * u_xlat0 + u_xlat3;
    u_xlat0 = max(u_xlat0, vec4(9.99999997e-07, 9.99999997e-07, 9.99999997e-07, 9.99999997e-07));
    u_xlat3 = inversesqrt(u_xlat0);
    u_xlat0 = u_xlat0 * unity_4LightAtten0 + vec4(1.0, 1.0, 1.0, 1.0);
    u_xlat0 = vec4(1.0, 1.0, 1.0, 1.0) / u_xlat0;
    u_xlat2 = u_xlat2 * u_xlat3;
    u_xlat2 = max(u_xlat2, vec4(0.0, 0.0, 0.0, 0.0));
    u_xlat0 = u_xlat0 * u_xlat2;
    u_xlat2.xyz = u_xlat0.yyy * unity_LightColor[1].xyz;
    u_xlat2.xyz = unity_LightColor[0].xyz * u_xlat0.xxx + u_xlat2.xyz;
    u_xlat0.xyz = unity_LightColor[2].xyz * u_xlat0.zzz + u_xlat2.xyz;
    u_xlat0.xyz = unity_LightColor[3].xyz * u_xlat0.www + u_xlat0.xyz;
    u_xlat2.xyz = u_xlat0.xyz * vec3(0.305306017, 0.305306017, 0.305306017) + vec3(0.682171106, 0.682171106, 0.682171106);
    u_xlat2.xyz = u_xlat0.xyz * u_xlat2.xyz + vec3(0.0125228781, 0.0125228781, 0.0125228781);
    u_xlat16_5.x = u_xlat1.y * u_xlat1.y;
    u_xlat16_5.x = u_xlat1.x * u_xlat1.x + (-u_xlat16_5.x);
    u_xlat16_1 = u_xlat1.yzzx * u_xlat1.xyzz;
    u_xlat16_6.x = dot(unity_SHBr, u_xlat16_1);
    u_xlat16_6.y = dot(unity_SHBg, u_xlat16_1);
    u_xlat16_6.z = dot(unity_SHBb, u_xlat16_1);
    u_xlat16_5.xyz = unity_SHC.xyz * u_xlat16_5.xxx + u_xlat16_6.xyz;
    vs_TEXCOORD3.xyz = u_xlat0.xyz * u_xlat2.xyz + u_xlat16_5.xyz;
    vs_TEXCOORD5 = vec4(0.0, 0.0, 0.0, 0.0);
    vs_TEXCOORD6 = vec4(0.0, 0.0, 0.0, 0.0);
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es
#ifdef GL_EXT_shader_texture_lod
#extension GL_EXT_shader_texture_lod : enable
#endif

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec3 _WorldSpaceCameraPos;
uniform 	mediump vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 unity_SHAr;
uniform 	mediump vec4 unity_SHAg;
uniform 	mediump vec4 unity_SHAb;
uniform 	vec4 hlslcc_mtx4x4unity_WorldToShadow[16];
uniform 	mediump vec4 _LightShadowData;
uniform 	vec4 unity_ShadowFadeCenterAndType;
uniform 	vec4 hlslcc_mtx4x4unity_MatrixV[4];
uniform 	mediump vec4 _LightColor0;
uniform 	mediump vec4 _SpecColor;
uniform 	mediump vec4 _Color;
uniform 	mediump float _Smoothness;
uniform 	mediump vec4 _HColor;
uniform 	mediump vec4 _SColor;
uniform 	mediump float _RampThreshold;
uniform 	mediump float _RampSmooth;
uniform 	mediump float _SpecSmooth;
UNITY_LOCATION(0) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(1) uniform highp sampler2D _ShadowMapTexture;
UNITY_LOCATION(2) uniform highp sampler2DShadow hlslcc_zcmp_ShadowMapTexture;
in mediump vec2 vs_TEXCOORD0;
in highp vec3 vs_TEXCOORD1;
in highp vec3 vs_TEXCOORD2;
in mediump vec3 vs_TEXCOORD3;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
vec4 u_xlat1;
mediump vec3 u_xlat16_1;
mediump vec3 u_xlat16_2;
vec3 u_xlat3;
mediump vec3 u_xlat16_3;
mediump vec3 u_xlat16_4;
float u_xlat5;
mediump vec3 u_xlat16_6;
mediump float u_xlat16_11;
float u_xlat15;
mediump float u_xlat16_16;
void main()
{
    u_xlat0.xyz = (-vs_TEXCOORD2.xyz) + _WorldSpaceCameraPos.xyz;
    u_xlat15 = dot(u_xlat0.xyz, u_xlat0.xyz);
    u_xlat15 = inversesqrt(u_xlat15);
    u_xlat16_1.xyz = u_xlat0.xyz * vec3(u_xlat15) + _WorldSpaceLightPos0.xyz;
    u_xlat16_16 = dot(u_xlat16_1.xyz, u_xlat16_1.xyz);
    u_xlat16_16 = inversesqrt(u_xlat16_16);
    u_xlat16_1.xyz = vec3(u_xlat16_16) * u_xlat16_1.xyz;
    u_xlat16_16 = dot(vs_TEXCOORD1.xyz, vs_TEXCOORD1.xyz);
    u_xlat16_16 = inversesqrt(u_xlat16_16);
    u_xlat16_2.xyz = vec3(u_xlat16_16) * vs_TEXCOORD1.xyz;
    u_xlat16_1.x = dot(u_xlat16_2.xyz, u_xlat16_1.xyz);
    u_xlat16_1.y = dot(u_xlat16_2.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat16_1.xy = max(u_xlat16_1.xy, vec2(0.0, 0.0));
    u_xlat15 = log2(u_xlat16_1.x);
    u_xlat16_1.x = _Smoothness * 128.0;
    u_xlat15 = u_xlat15 * u_xlat16_1.x;
    u_xlat15 = exp2(u_xlat15);
    u_xlat16_1.x = (-_SpecSmooth) * 0.5 + 0.5;
    u_xlat15 = u_xlat15 * 2.0 + (-u_xlat16_1.x);
    u_xlat16_11 = _SpecSmooth * 0.5 + 0.5;
    u_xlat3.x = (-u_xlat16_1.x) + u_xlat16_11;
    u_xlat3.x = float(1.0) / u_xlat3.x;
    u_xlat15 = u_xlat15 * u_xlat3.x;
#ifdef UNITY_ADRENO_ES3
    u_xlat15 = min(max(u_xlat15, 0.0), 1.0);
#else
    u_xlat15 = clamp(u_xlat15, 0.0, 1.0);
#endif
    u_xlat3.x = u_xlat15 * -2.0 + 3.0;
    u_xlat15 = u_xlat15 * u_xlat15;
    u_xlat15 = u_xlat15 * u_xlat3.x;
    u_xlat3.x = hlslcc_mtx4x4unity_MatrixV[0].z;
    u_xlat3.y = hlslcc_mtx4x4unity_MatrixV[1].z;
    u_xlat3.z = hlslcc_mtx4x4unity_MatrixV[2].z;
    u_xlat0.x = dot(u_xlat0.xyz, u_xlat3.xyz);
    u_xlat3.xyz = vs_TEXCOORD2.xyz + (-unity_ShadowFadeCenterAndType.xyz);
    u_xlat5 = dot(u_xlat3.xyz, u_xlat3.xyz);
    u_xlat5 = sqrt(u_xlat5);
    u_xlat5 = (-u_xlat0.x) + u_xlat5;
    u_xlat0.x = unity_ShadowFadeCenterAndType.w * u_xlat5 + u_xlat0.x;
    u_xlat0.x = u_xlat0.x * _LightShadowData.z + _LightShadowData.w;
#ifdef UNITY_ADRENO_ES3
    u_xlat0.x = min(max(u_xlat0.x, 0.0), 1.0);
#else
    u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);
#endif
    u_xlat3.xyz = vs_TEXCOORD2.yyy * hlslcc_mtx4x4unity_WorldToShadow[1].xyz;
    u_xlat3.xyz = hlslcc_mtx4x4unity_WorldToShadow[0].xyz * vs_TEXCOORD2.xxx + u_xlat3.xyz;
    u_xlat3.xyz = hlslcc_mtx4x4unity_WorldToShadow[2].xyz * vs_TEXCOORD2.zzz + u_xlat3.xyz;
    u_xlat3.xyz = u_xlat3.xyz + hlslcc_mtx4x4unity_WorldToShadow[3].xyz;
    vec3 txVec0 = vec3(u_xlat3.xy,u_xlat3.z);
    u_xlat5 = textureLod(hlslcc_zcmp_ShadowMapTexture, txVec0, 0.0);
    u_xlat16_1.x = (-_LightShadowData.x) + 1.0;
    u_xlat16_1.x = u_xlat5 * u_xlat16_1.x + _LightShadowData.x;
    u_xlat16_11 = (-u_xlat16_1.x) + 1.0;
    u_xlat16_1.x = u_xlat0.x * u_xlat16_11 + u_xlat16_1.x;
    u_xlat0.x = u_xlat15 * u_xlat16_1.x;
    u_xlat16_2.xyz = _LightColor0.xyz * _SpecColor.xyz;
    u_xlat0.xyz = u_xlat0.xxx * u_xlat16_2.xyz;
    u_xlat16_11 = (-_RampSmooth) * 0.5 + _RampThreshold;
    u_xlat16_6.x = (-u_xlat16_11) + u_xlat16_1.y;
    u_xlat16_16 = _RampSmooth * 0.5 + _RampThreshold;
    u_xlat16_11 = (-u_xlat16_11) + u_xlat16_16;
    u_xlat16_11 = float(1.0) / u_xlat16_11;
    u_xlat16_6.x = u_xlat16_11 * u_xlat16_6.x;
#ifdef UNITY_ADRENO_ES3
    u_xlat16_6.x = min(max(u_xlat16_6.x, 0.0), 1.0);
#else
    u_xlat16_6.x = clamp(u_xlat16_6.x, 0.0, 1.0);
#endif
    u_xlat16_11 = u_xlat16_6.x * -2.0 + 3.0;
    u_xlat16_6.x = u_xlat16_6.x * u_xlat16_6.x;
    u_xlat16_6.x = u_xlat16_6.x * u_xlat16_11;
    u_xlat16_1.x = u_xlat16_1.x * u_xlat16_6.x;
    u_xlat16_6.xyz = (-_HColor.xyz) + _SColor.xyz;
    u_xlat16_6.xyz = _SColor.www * u_xlat16_6.xyz + _HColor.xyz;
    u_xlat16_2.xyz = (-u_xlat16_6.xyz) + _HColor.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xxx * u_xlat16_2.xyz + u_xlat16_6.xyz;
    u_xlat16_3.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_2.xyz = u_xlat16_3.xyz * _Color.xyz;
    u_xlat16_4.xyz = u_xlat16_2.xyz * _LightColor0.xyz;
    u_xlat0.xyz = u_xlat16_4.xyz * u_xlat16_1.xyz + u_xlat0.xyz;
    u_xlat1.xyz = vs_TEXCOORD1.xyz;
    u_xlat1.w = 1.0;
    u_xlat16_4.x = dot(unity_SHAr, u_xlat1);
    u_xlat16_4.y = dot(unity_SHAg, u_xlat1);
    u_xlat16_4.z = dot(unity_SHAb, u_xlat1);
    u_xlat16_4.xyz = u_xlat16_4.xyz + vs_TEXCOORD3.xyz;
    u_xlat16_4.xyz = max(u_xlat16_4.xyz, vec3(0.0, 0.0, 0.0));
    u_xlat3.xyz = log2(u_xlat16_4.xyz);
    u_xlat3.xyz = u_xlat3.xyz * vec3(0.416666657, 0.416666657, 0.416666657);
    u_xlat3.xyz = exp2(u_xlat3.xyz);
    u_xlat3.xyz = u_xlat3.xyz * vec3(1.05499995, 1.05499995, 1.05499995) + vec3(-0.0549999997, -0.0549999997, -0.0549999997);
    u_xlat3.xyz = max(u_xlat3.xyz, vec3(0.0, 0.0, 0.0));
    SV_Target0.xyz = u_xlat16_2.xyz * u_xlat3.xyz + u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "vulkan hw_tier00 " {
Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "SHADOWS_SCREEN" "VERTEXLIGHT_ON" }
"; SPIR-V
; Version: 1.0
; Generator: Khronos Glslang Reference Front End; 6
; Bound: 369
; Schema: 0
                                                      OpCapability Shader 
                                               %1 = OpExtInstImport "GLSL.std.450" 
                                                      OpMemoryModel Logical GLSL450 
                                                      OpEntryPoint Vertex %4 "main" %11 %90 %100 %116 %120 %159 %162 %353 %361 %362 
                                                      OpName vs_TEXCOORD0 "vs_TEXCOORD0" 
                                                      OpName vs_TEXCOORD1 "vs_TEXCOORD1" 
                                                      OpName vs_TEXCOORD2 "vs_TEXCOORD2" 
                                                      OpName vs_TEXCOORD3 "vs_TEXCOORD3" 
                                                      OpName vs_TEXCOORD5 "vs_TEXCOORD5" 
                                                      OpName vs_TEXCOORD6 "vs_TEXCOORD6" 
                                                      OpDecorate %11 Location 11 
                                                      OpDecorate %16 ArrayStride 16 
                                                      OpDecorate %18 ArrayStride 18 
                                                      OpDecorate %19 ArrayStride 19 
                                                      OpDecorate %20 ArrayStride 20 
                                                      OpMemberDecorate %21 0 Offset 21 
                                                      OpMemberDecorate %21 1 Offset 21 
                                                      OpMemberDecorate %21 2 Offset 21 
                                                      OpMemberDecorate %21 3 RelaxedPrecision 
                                                      OpMemberDecorate %21 3 Offset 21 
                                                      OpMemberDecorate %21 4 RelaxedPrecision 
                                                      OpMemberDecorate %21 4 Offset 21 
                                                      OpMemberDecorate %21 5 RelaxedPrecision 
                                                      OpMemberDecorate %21 5 Offset 21 
                                                      OpMemberDecorate %21 6 RelaxedPrecision 
                                                      OpMemberDecorate %21 6 Offset 21 
                                                      OpMemberDecorate %21 7 RelaxedPrecision 
                                                      OpMemberDecorate %21 7 Offset 21 
                                                      OpMemberDecorate %21 8 RelaxedPrecision 
                                                      OpMemberDecorate %21 8 Offset 21 
                                                      OpMemberDecorate %21 9 Offset 21 
                                                      OpMemberDecorate %21 10 Offset 21 
                                                      OpMemberDecorate %21 11 Offset 21 
                                                      OpMemberDecorate %21 12 Offset 21 
                                                      OpDecorate %21 Block 
                                                      OpDecorate %23 DescriptorSet 23 
                                                      OpDecorate %23 Binding 23 
                                                      OpMemberDecorate %88 0 BuiltIn 88 
                                                      OpMemberDecorate %88 1 BuiltIn 88 
                                                      OpMemberDecorate %88 2 BuiltIn 88 
                                                      OpDecorate %88 Block 
                                                      OpDecorate %100 Location 100 
                                                      OpDecorate vs_TEXCOORD0 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD0 Location 116 
                                                      OpDecorate %120 Location 120 
                                                      OpDecorate vs_TEXCOORD1 Location 159 
                                                      OpDecorate vs_TEXCOORD2 Location 162 
                                                      OpDecorate %222 RelaxedPrecision 
                                                      OpDecorate %243 RelaxedPrecision 
                                                      OpDecorate %244 RelaxedPrecision 
                                                      OpDecorate %249 RelaxedPrecision 
                                                      OpDecorate %250 RelaxedPrecision 
                                                      OpDecorate %260 RelaxedPrecision 
                                                      OpDecorate %261 RelaxedPrecision 
                                                      OpDecorate %271 RelaxedPrecision 
                                                      OpDecorate %272 RelaxedPrecision 
                                                      OpDecorate %302 RelaxedPrecision 
                                                      OpDecorate %315 RelaxedPrecision 
                                                      OpDecorate %316 RelaxedPrecision 
                                                      OpDecorate %319 RelaxedPrecision 
                                                      OpDecorate %325 RelaxedPrecision 
                                                      OpDecorate %328 RelaxedPrecision 
                                                      OpDecorate %329 RelaxedPrecision 
                                                      OpDecorate %330 RelaxedPrecision 
                                                      OpDecorate %334 RelaxedPrecision 
                                                      OpDecorate %335 RelaxedPrecision 
                                                      OpDecorate %336 RelaxedPrecision 
                                                      OpDecorate %340 RelaxedPrecision 
                                                      OpDecorate %341 RelaxedPrecision 
                                                      OpDecorate %342 RelaxedPrecision 
                                                      OpDecorate %346 RelaxedPrecision 
                                                      OpDecorate %347 RelaxedPrecision 
                                                      OpDecorate %348 RelaxedPrecision 
                                                      OpDecorate %349 RelaxedPrecision 
                                                      OpDecorate %350 RelaxedPrecision 
                                                      OpDecorate %351 RelaxedPrecision 
                                                      OpDecorate %352 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD3 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD3 Location 353 
                                                      OpDecorate %359 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD5 Location 361 
                                                      OpDecorate vs_TEXCOORD6 Location 362 
                                               %2 = OpTypeVoid 
                                               %3 = OpTypeFunction %2 
                                               %6 = OpTypeFloat 32 
                                               %7 = OpTypeVector %6 4 
                                               %8 = OpTypePointer Private %7 
                                Private f32_4* %9 = OpVariable Private 
                                              %10 = OpTypePointer Input %7 
                                 Input f32_4* %11 = OpVariable Input 
                                              %14 = OpTypeInt 32 0 
                                          u32 %15 = OpConstant 8 
                                              %16 = OpTypeArray %7 %15 
                                          u32 %17 = OpConstant 4 
                                              %18 = OpTypeArray %7 %17 
                                              %19 = OpTypeArray %7 %17 
                                              %20 = OpTypeArray %7 %17 
                                              %21 = OpTypeStruct %7 %7 %7 %7 %16 %7 %7 %7 %7 %18 %19 %20 %7 
                                              %22 = OpTypePointer Uniform %21 
Uniform struct {f32_4; f32_4; f32_4; f32_4; f32_4[8]; f32_4; f32_4; f32_4; f32_4; f32_4[4]; f32_4[4]; f32_4[4]; f32_4;}* %23 = OpVariable Uniform 
                                              %24 = OpTypeInt 32 1 
                                          i32 %25 = OpConstant 9 
                                          i32 %26 = OpConstant 1 
                                              %27 = OpTypePointer Uniform %7 
                                          i32 %31 = OpConstant 0 
                                          i32 %39 = OpConstant 2 
                               Private f32_4* %47 = OpVariable Private 
                                          i32 %49 = OpConstant 3 
                                              %53 = OpTypeVector %6 3 
                               Private f32_4* %65 = OpVariable Private 
                                          i32 %68 = OpConstant 11 
                                          u32 %86 = OpConstant 1 
                                              %87 = OpTypeArray %6 %86 
                                              %88 = OpTypeStruct %7 %6 %87 
                                              %89 = OpTypePointer Output %88 
         Output struct {f32_4; f32; f32[1];}* %90 = OpVariable Output 
                                              %98 = OpTypePointer Output %7 
                                Input f32_4* %100 = OpVariable Input 
                                             %101 = OpTypeVector %6 2 
                                         i32 %104 = OpConstant 12 
                                             %115 = OpTypePointer Output %101 
                       Output f32_2* vs_TEXCOORD0 = OpVariable Output 
                                             %119 = OpTypePointer Input %53 
                                Input f32_3* %120 = OpVariable Input 
                                         i32 %122 = OpConstant 10 
                                         u32 %127 = OpConstant 0 
                                             %128 = OpTypePointer Private %6 
                                         u32 %141 = OpConstant 2 
                                Private f32* %143 = OpVariable Private 
                                             %158 = OpTypePointer Output %53 
                       Output f32_3* vs_TEXCOORD1 = OpVariable Output 
                       Output f32_3* vs_TEXCOORD2 = OpVariable Output 
                              Private f32_4* %171 = OpVariable Private 
                              Private f32_4* %184 = OpVariable Private 
                                         f32 %215 = OpConstant 3.674022E-40 
                                       f32_4 %216 = OpConstantComposite %215 %215 %215 %215 
                                         f32 %224 = OpConstant 3.674022E-40 
                                       f32_4 %225 = OpConstantComposite %224 %224 %224 %224 
                                         f32 %233 = OpConstant 3.674022E-40 
                                       f32_4 %234 = OpConstantComposite %233 %233 %233 %233 
                                         i32 %241 = OpConstant 4 
                                         f32 %283 = OpConstant 3.674022E-40 
                                       f32_3 %284 = OpConstantComposite %283 %283 %283 
                                         f32 %286 = OpConstant 3.674022E-40 
                                       f32_3 %287 = OpConstantComposite %286 %286 %286 
                                         f32 %296 = OpConstant 3.674022E-40 
                                       f32_3 %297 = OpConstantComposite %296 %296 %296 
                                             %301 = OpTypePointer Private %53 
                              Private f32_3* %302 = OpVariable Private 
                              Private f32_4* %319 = OpVariable Private 
                              Private f32_3* %325 = OpVariable Private 
                                         i32 %326 = OpConstant 5 
                                         i32 %332 = OpConstant 6 
                                         i32 %338 = OpConstant 7 
                                         i32 %344 = OpConstant 8 
                       Output f32_3* vs_TEXCOORD3 = OpVariable Output 
                       Output f32_4* vs_TEXCOORD5 = OpVariable Output 
                       Output f32_4* vs_TEXCOORD6 = OpVariable Output 
                                             %363 = OpTypePointer Output %6 
                                          void %4 = OpFunction None %3 
                                               %5 = OpLabel 
                                        f32_4 %12 = OpLoad %11 
                                        f32_4 %13 = OpVectorShuffle %12 %12 1 1 1 1 
                               Uniform f32_4* %28 = OpAccessChain %23 %25 %26 
                                        f32_4 %29 = OpLoad %28 
                                        f32_4 %30 = OpFMul %13 %29 
                                                      OpStore %9 %30 
                               Uniform f32_4* %32 = OpAccessChain %23 %25 %31 
                                        f32_4 %33 = OpLoad %32 
                                        f32_4 %34 = OpLoad %11 
                                        f32_4 %35 = OpVectorShuffle %34 %34 0 0 0 0 
                                        f32_4 %36 = OpFMul %33 %35 
                                        f32_4 %37 = OpLoad %9 
                                        f32_4 %38 = OpFAdd %36 %37 
                                                      OpStore %9 %38 
                               Uniform f32_4* %40 = OpAccessChain %23 %25 %39 
                                        f32_4 %41 = OpLoad %40 
                                        f32_4 %42 = OpLoad %11 
                                        f32_4 %43 = OpVectorShuffle %42 %42 2 2 2 2 
                                        f32_4 %44 = OpFMul %41 %43 
                                        f32_4 %45 = OpLoad %9 
                                        f32_4 %46 = OpFAdd %44 %45 
                                                      OpStore %9 %46 
                                        f32_4 %48 = OpLoad %9 
                               Uniform f32_4* %50 = OpAccessChain %23 %25 %49 
                                        f32_4 %51 = OpLoad %50 
                                        f32_4 %52 = OpFAdd %48 %51 
                                                      OpStore %47 %52 
                               Uniform f32_4* %54 = OpAccessChain %23 %25 %49 
                                        f32_4 %55 = OpLoad %54 
                                        f32_3 %56 = OpVectorShuffle %55 %55 0 1 2 
                                        f32_4 %57 = OpLoad %11 
                                        f32_3 %58 = OpVectorShuffle %57 %57 3 3 3 
                                        f32_3 %59 = OpFMul %56 %58 
                                        f32_4 %60 = OpLoad %9 
                                        f32_3 %61 = OpVectorShuffle %60 %60 0 1 2 
                                        f32_3 %62 = OpFAdd %59 %61 
                                        f32_4 %63 = OpLoad %9 
                                        f32_4 %64 = OpVectorShuffle %63 %62 4 5 6 3 
                                                      OpStore %9 %64 
                                        f32_4 %66 = OpLoad %47 
                                        f32_4 %67 = OpVectorShuffle %66 %66 1 1 1 1 
                               Uniform f32_4* %69 = OpAccessChain %23 %68 %26 
                                        f32_4 %70 = OpLoad %69 
                                        f32_4 %71 = OpFMul %67 %70 
                                                      OpStore %65 %71 
                               Uniform f32_4* %72 = OpAccessChain %23 %68 %31 
                                        f32_4 %73 = OpLoad %72 
                                        f32_4 %74 = OpLoad %47 
                                        f32_4 %75 = OpVectorShuffle %74 %74 0 0 0 0 
                                        f32_4 %76 = OpFMul %73 %75 
                                        f32_4 %77 = OpLoad %65 
                                        f32_4 %78 = OpFAdd %76 %77 
                                                      OpStore %65 %78 
                               Uniform f32_4* %79 = OpAccessChain %23 %68 %39 
                                        f32_4 %80 = OpLoad %79 
                                        f32_4 %81 = OpLoad %47 
                                        f32_4 %82 = OpVectorShuffle %81 %81 2 2 2 2 
                                        f32_4 %83 = OpFMul %80 %82 
                                        f32_4 %84 = OpLoad %65 
                                        f32_4 %85 = OpFAdd %83 %84 
                                                      OpStore %65 %85 
                               Uniform f32_4* %91 = OpAccessChain %23 %68 %49 
                                        f32_4 %92 = OpLoad %91 
                                        f32_4 %93 = OpLoad %47 
                                        f32_4 %94 = OpVectorShuffle %93 %93 3 3 3 3 
                                        f32_4 %95 = OpFMul %92 %94 
                                        f32_4 %96 = OpLoad %65 
                                        f32_4 %97 = OpFAdd %95 %96 
                                Output f32_4* %99 = OpAccessChain %90 %31 
                                                      OpStore %99 %97 
                                       f32_4 %102 = OpLoad %100 
                                       f32_2 %103 = OpVectorShuffle %102 %102 0 1 
                              Uniform f32_4* %105 = OpAccessChain %23 %104 
                                       f32_4 %106 = OpLoad %105 
                                       f32_2 %107 = OpVectorShuffle %106 %106 0 1 
                                       f32_2 %108 = OpFMul %103 %107 
                              Uniform f32_4* %109 = OpAccessChain %23 %104 
                                       f32_4 %110 = OpLoad %109 
                                       f32_2 %111 = OpVectorShuffle %110 %110 2 3 
                                       f32_2 %112 = OpFAdd %108 %111 
                                       f32_4 %113 = OpLoad %47 
                                       f32_4 %114 = OpVectorShuffle %113 %112 4 5 2 3 
                                                      OpStore %47 %114 
                                       f32_4 %117 = OpLoad %47 
                                       f32_2 %118 = OpVectorShuffle %117 %117 0 1 
                                                      OpStore vs_TEXCOORD0 %118 
                                       f32_3 %121 = OpLoad %120 
                              Uniform f32_4* %123 = OpAccessChain %23 %122 %31 
                                       f32_4 %124 = OpLoad %123 
                                       f32_3 %125 = OpVectorShuffle %124 %124 0 1 2 
                                         f32 %126 = OpDot %121 %125 
                                Private f32* %129 = OpAccessChain %47 %127 
                                                      OpStore %129 %126 
                                       f32_3 %130 = OpLoad %120 
                              Uniform f32_4* %131 = OpAccessChain %23 %122 %26 
                                       f32_4 %132 = OpLoad %131 
                                       f32_3 %133 = OpVectorShuffle %132 %132 0 1 2 
                                         f32 %134 = OpDot %130 %133 
                                Private f32* %135 = OpAccessChain %47 %86 
                                                      OpStore %135 %134 
                                       f32_3 %136 = OpLoad %120 
                              Uniform f32_4* %137 = OpAccessChain %23 %122 %39 
                                       f32_4 %138 = OpLoad %137 
                                       f32_3 %139 = OpVectorShuffle %138 %138 0 1 2 
                                         f32 %140 = OpDot %136 %139 
                                Private f32* %142 = OpAccessChain %47 %141 
                                                      OpStore %142 %140 
                                       f32_4 %144 = OpLoad %47 
                                       f32_3 %145 = OpVectorShuffle %144 %144 0 1 2 
                                       f32_4 %146 = OpLoad %47 
                                       f32_3 %147 = OpVectorShuffle %146 %146 0 1 2 
                                         f32 %148 = OpDot %145 %147 
                                                      OpStore %143 %148 
                                         f32 %149 = OpLoad %143 
                                         f32 %150 = OpExtInst %1 32 %149 
                                                      OpStore %143 %150 
                                         f32 %151 = OpLoad %143 
                                       f32_3 %152 = OpCompositeConstruct %151 %151 %151 
                                       f32_4 %153 = OpLoad %47 
                                       f32_3 %154 = OpVectorShuffle %153 %153 0 1 2 
                                       f32_3 %155 = OpFMul %152 %154 
                                       f32_4 %156 = OpLoad %47 
                                       f32_4 %157 = OpVectorShuffle %156 %155 4 5 6 3 
                                                      OpStore %47 %157 
                                       f32_4 %160 = OpLoad %47 
                                       f32_3 %161 = OpVectorShuffle %160 %160 0 1 2 
                                                      OpStore vs_TEXCOORD1 %161 
                                       f32_4 %163 = OpLoad %9 
                                       f32_3 %164 = OpVectorShuffle %163 %163 0 1 2 
                                                      OpStore vs_TEXCOORD2 %164 
                                       f32_4 %165 = OpLoad %9 
                                       f32_4 %166 = OpVectorShuffle %165 %165 0 0 0 0 
                                       f32_4 %167 = OpFNegate %166 
                              Uniform f32_4* %168 = OpAccessChain %23 %31 
                                       f32_4 %169 = OpLoad %168 
                                       f32_4 %170 = OpFAdd %167 %169 
                                                      OpStore %65 %170 
                                       f32_4 %172 = OpLoad %9 
                                       f32_4 %173 = OpVectorShuffle %172 %172 1 1 1 1 
                                       f32_4 %174 = OpFNegate %173 
                              Uniform f32_4* %175 = OpAccessChain %23 %26 
                                       f32_4 %176 = OpLoad %175 
                                       f32_4 %177 = OpFAdd %174 %176 
                                                      OpStore %171 %177 
                                       f32_4 %178 = OpLoad %9 
                                       f32_4 %179 = OpVectorShuffle %178 %178 2 2 2 2 
                                       f32_4 %180 = OpFNegate %179 
                              Uniform f32_4* %181 = OpAccessChain %23 %39 
                                       f32_4 %182 = OpLoad %181 
                                       f32_4 %183 = OpFAdd %180 %182 
                                                      OpStore %9 %183 
                                       f32_4 %185 = OpLoad %47 
                                       f32_4 %186 = OpVectorShuffle %185 %185 1 1 1 1 
                                       f32_4 %187 = OpLoad %171 
                                       f32_4 %188 = OpFMul %186 %187 
                                                      OpStore %184 %188 
                                       f32_4 %189 = OpLoad %171 
                                       f32_4 %190 = OpLoad %171 
                                       f32_4 %191 = OpFMul %189 %190 
                                                      OpStore %171 %191 
                                       f32_4 %192 = OpLoad %65 
                                       f32_4 %193 = OpLoad %65 
                                       f32_4 %194 = OpFMul %192 %193 
                                       f32_4 %195 = OpLoad %171 
                                       f32_4 %196 = OpFAdd %194 %195 
                                                      OpStore %171 %196 
                                       f32_4 %197 = OpLoad %65 
                                       f32_4 %198 = OpLoad %47 
                                       f32_4 %199 = OpVectorShuffle %198 %198 0 0 0 0 
                                       f32_4 %200 = OpFMul %197 %199 
                                       f32_4 %201 = OpLoad %184 
                                       f32_4 %202 = OpFAdd %200 %201 
                                                      OpStore %65 %202 
                                       f32_4 %203 = OpLoad %9 
                                       f32_4 %204 = OpLoad %47 
                                       f32_4 %205 = OpVectorShuffle %204 %204 2 2 2 2 
                                       f32_4 %206 = OpFMul %203 %205 
                                       f32_4 %207 = OpLoad %65 
                                       f32_4 %208 = OpFAdd %206 %207 
                                                      OpStore %65 %208 
                                       f32_4 %209 = OpLoad %9 
                                       f32_4 %210 = OpLoad %9 
                                       f32_4 %211 = OpFMul %209 %210 
                                       f32_4 %212 = OpLoad %171 
                                       f32_4 %213 = OpFAdd %211 %212 
                                                      OpStore %9 %213 
                                       f32_4 %214 = OpLoad %9 
                                       f32_4 %217 = OpExtInst %1 40 %214 %216 
                                                      OpStore %9 %217 
                                       f32_4 %218 = OpLoad %9 
                                       f32_4 %219 = OpExtInst %1 32 %218 
                                                      OpStore %171 %219 
                                       f32_4 %220 = OpLoad %9 
                              Uniform f32_4* %221 = OpAccessChain %23 %49 
                                       f32_4 %222 = OpLoad %221 
                                       f32_4 %223 = OpFMul %220 %222 
                                       f32_4 %226 = OpFAdd %223 %225 
                                                      OpStore %9 %226 
                                       f32_4 %227 = OpLoad %9 
                                       f32_4 %228 = OpFDiv %225 %227 
                                                      OpStore %9 %228 
                                       f32_4 %229 = OpLoad %65 
                                       f32_4 %230 = OpLoad %171 
                                       f32_4 %231 = OpFMul %229 %230 
                                                      OpStore %65 %231 
                                       f32_4 %232 = OpLoad %65 
                                       f32_4 %235 = OpExtInst %1 40 %232 %234 
                                                      OpStore %65 %235 
                                       f32_4 %236 = OpLoad %9 
                                       f32_4 %237 = OpLoad %65 
                                       f32_4 %238 = OpFMul %236 %237 
                                                      OpStore %9 %238 
                                       f32_4 %239 = OpLoad %9 
                                       f32_3 %240 = OpVectorShuffle %239 %239 1 1 1 
                              Uniform f32_4* %242 = OpAccessChain %23 %241 %26 
                                       f32_4 %243 = OpLoad %242 
                                       f32_3 %244 = OpVectorShuffle %243 %243 0 1 2 
                                       f32_3 %245 = OpFMul %240 %244 
                                       f32_4 %246 = OpLoad %65 
                                       f32_4 %247 = OpVectorShuffle %246 %245 4 5 6 3 
                                                      OpStore %65 %247 
                              Uniform f32_4* %248 = OpAccessChain %23 %241 %31 
                                       f32_4 %249 = OpLoad %248 
                                       f32_3 %250 = OpVectorShuffle %249 %249 0 1 2 
                                       f32_4 %251 = OpLoad %9 
                                       f32_3 %252 = OpVectorShuffle %251 %251 0 0 0 
                                       f32_3 %253 = OpFMul %250 %252 
                                       f32_4 %254 = OpLoad %65 
                                       f32_3 %255 = OpVectorShuffle %254 %254 0 1 2 
                                       f32_3 %256 = OpFAdd %253 %255 
                                       f32_4 %257 = OpLoad %65 
                                       f32_4 %258 = OpVectorShuffle %257 %256 4 5 6 3 
                                                      OpStore %65 %258 
                              Uniform f32_4* %259 = OpAccessChain %23 %241 %39 
                                       f32_4 %260 = OpLoad %259 
                                       f32_3 %261 = OpVectorShuffle %260 %260 0 1 2 
                                       f32_4 %262 = OpLoad %9 
                                       f32_3 %263 = OpVectorShuffle %262 %262 2 2 2 
                                       f32_3 %264 = OpFMul %261 %263 
                                       f32_4 %265 = OpLoad %65 
                                       f32_3 %266 = OpVectorShuffle %265 %265 0 1 2 
                                       f32_3 %267 = OpFAdd %264 %266 
                                       f32_4 %268 = OpLoad %9 
                                       f32_4 %269 = OpVectorShuffle %268 %267 4 5 6 3 
                                                      OpStore %9 %269 
                              Uniform f32_4* %270 = OpAccessChain %23 %241 %49 
                                       f32_4 %271 = OpLoad %270 
                                       f32_3 %272 = OpVectorShuffle %271 %271 0 1 2 
                                       f32_4 %273 = OpLoad %9 
                                       f32_3 %274 = OpVectorShuffle %273 %273 3 3 3 
                                       f32_3 %275 = OpFMul %272 %274 
                                       f32_4 %276 = OpLoad %9 
                                       f32_3 %277 = OpVectorShuffle %276 %276 0 1 2 
                                       f32_3 %278 = OpFAdd %275 %277 
                                       f32_4 %279 = OpLoad %9 
                                       f32_4 %280 = OpVectorShuffle %279 %278 4 5 6 3 
                                                      OpStore %9 %280 
                                       f32_4 %281 = OpLoad %9 
                                       f32_3 %282 = OpVectorShuffle %281 %281 0 1 2 
                                       f32_3 %285 = OpFMul %282 %284 
                                       f32_3 %288 = OpFAdd %285 %287 
                                       f32_4 %289 = OpLoad %65 
                                       f32_4 %290 = OpVectorShuffle %289 %288 4 5 6 3 
                                                      OpStore %65 %290 
                                       f32_4 %291 = OpLoad %9 
                                       f32_3 %292 = OpVectorShuffle %291 %291 0 1 2 
                                       f32_4 %293 = OpLoad %65 
                                       f32_3 %294 = OpVectorShuffle %293 %293 0 1 2 
                                       f32_3 %295 = OpFMul %292 %294 
                                       f32_3 %298 = OpFAdd %295 %297 
                                       f32_4 %299 = OpLoad %65 
                                       f32_4 %300 = OpVectorShuffle %299 %298 4 5 6 3 
                                                      OpStore %65 %300 
                                Private f32* %303 = OpAccessChain %47 %86 
                                         f32 %304 = OpLoad %303 
                                Private f32* %305 = OpAccessChain %47 %86 
                                         f32 %306 = OpLoad %305 
                                         f32 %307 = OpFMul %304 %306 
                                Private f32* %308 = OpAccessChain %302 %127 
                                                      OpStore %308 %307 
                                Private f32* %309 = OpAccessChain %47 %127 
                                         f32 %310 = OpLoad %309 
                                Private f32* %311 = OpAccessChain %47 %127 
                                         f32 %312 = OpLoad %311 
                                         f32 %313 = OpFMul %310 %312 
                                Private f32* %314 = OpAccessChain %302 %127 
                                         f32 %315 = OpLoad %314 
                                         f32 %316 = OpFNegate %315 
                                         f32 %317 = OpFAdd %313 %316 
                                Private f32* %318 = OpAccessChain %302 %127 
                                                      OpStore %318 %317 
                                       f32_4 %320 = OpLoad %47 
                                       f32_4 %321 = OpVectorShuffle %320 %320 1 2 2 0 
                                       f32_4 %322 = OpLoad %47 
                                       f32_4 %323 = OpVectorShuffle %322 %322 0 1 2 2 
                                       f32_4 %324 = OpFMul %321 %323 
                                                      OpStore %319 %324 
                              Uniform f32_4* %327 = OpAccessChain %23 %326 
                                       f32_4 %328 = OpLoad %327 
                                       f32_4 %329 = OpLoad %319 
                                         f32 %330 = OpDot %328 %329 
                                Private f32* %331 = OpAccessChain %325 %127 
                                                      OpStore %331 %330 
                              Uniform f32_4* %333 = OpAccessChain %23 %332 
                                       f32_4 %334 = OpLoad %333 
                                       f32_4 %335 = OpLoad %319 
                                         f32 %336 = OpDot %334 %335 
                                Private f32* %337 = OpAccessChain %325 %86 
                                                      OpStore %337 %336 
                              Uniform f32_4* %339 = OpAccessChain %23 %338 
                                       f32_4 %340 = OpLoad %339 
                                       f32_4 %341 = OpLoad %319 
                                         f32 %342 = OpDot %340 %341 
                                Private f32* %343 = OpAccessChain %325 %141 
                                                      OpStore %343 %342 
                              Uniform f32_4* %345 = OpAccessChain %23 %344 
                                       f32_4 %346 = OpLoad %345 
                                       f32_3 %347 = OpVectorShuffle %346 %346 0 1 2 
                                       f32_3 %348 = OpLoad %302 
                                       f32_3 %349 = OpVectorShuffle %348 %348 0 0 0 
                                       f32_3 %350 = OpFMul %347 %349 
                                       f32_3 %351 = OpLoad %325 
                                       f32_3 %352 = OpFAdd %350 %351 
                                                      OpStore %302 %352 
                                       f32_4 %354 = OpLoad %9 
                                       f32_3 %355 = OpVectorShuffle %354 %354 0 1 2 
                                       f32_4 %356 = OpLoad %65 
                                       f32_3 %357 = OpVectorShuffle %356 %356 0 1 2 
                                       f32_3 %358 = OpFMul %355 %357 
                                       f32_3 %359 = OpLoad %302 
                                       f32_3 %360 = OpFAdd %358 %359 
                                                      OpStore vs_TEXCOORD3 %360 
                                                      OpStore vs_TEXCOORD5 %234 
                                                      OpStore vs_TEXCOORD6 %234 
                                 Output f32* %364 = OpAccessChain %90 %31 %86 
                                         f32 %365 = OpLoad %364 
                                         f32 %366 = OpFNegate %365 
                                 Output f32* %367 = OpAccessChain %90 %31 %86 
                                                      OpStore %367 %366 
                                                      OpReturn
                                                      OpFunctionEnd
; SPIR-V
; Version: 1.0
; Generator: Khronos Glslang Reference Front End; 6
; Bound: 483
; Schema: 0
                                                      OpCapability Shader 
                                               %1 = OpExtInstImport "GLSL.std.450" 
                                                      OpMemoryModel Logical GLSL450 
                                                      OpEntryPoint Fragment %4 "main" %11 %57 %404 %448 %472 
                                                      OpExecutionMode %4 OriginUpperLeft 
                                                      OpName vs_TEXCOORD2 "vs_TEXCOORD2" 
                                                      OpName vs_TEXCOORD1 "vs_TEXCOORD1" 
                                                      OpName vs_TEXCOORD0 "vs_TEXCOORD0" 
                                                      OpName vs_TEXCOORD3 "vs_TEXCOORD3" 
                                                      OpDecorate vs_TEXCOORD2 Location 11 
                                                      OpDecorate %17 ArrayStride 17 
                                                      OpDecorate %19 ArrayStride 19 
                                                      OpMemberDecorate %20 0 Offset 20 
                                                      OpMemberDecorate %20 1 RelaxedPrecision 
                                                      OpMemberDecorate %20 1 Offset 20 
                                                      OpMemberDecorate %20 2 RelaxedPrecision 
                                                      OpMemberDecorate %20 2 Offset 20 
                                                      OpMemberDecorate %20 3 RelaxedPrecision 
                                                      OpMemberDecorate %20 3 Offset 20 
                                                      OpMemberDecorate %20 4 RelaxedPrecision 
                                                      OpMemberDecorate %20 4 Offset 20 
                                                      OpMemberDecorate %20 5 Offset 20 
                                                      OpMemberDecorate %20 6 RelaxedPrecision 
                                                      OpMemberDecorate %20 6 Offset 20 
                                                      OpMemberDecorate %20 7 Offset 20 
                                                      OpMemberDecorate %20 8 Offset 20 
                                                      OpMemberDecorate %20 9 RelaxedPrecision 
                                                      OpMemberDecorate %20 9 Offset 20 
                                                      OpMemberDecorate %20 10 RelaxedPrecision 
                                                      OpMemberDecorate %20 10 Offset 20 
                                                      OpMemberDecorate %20 11 RelaxedPrecision 
                                                      OpMemberDecorate %20 11 Offset 20 
                                                      OpMemberDecorate %20 12 RelaxedPrecision 
                                                      OpMemberDecorate %20 12 Offset 20 
                                                      OpMemberDecorate %20 13 RelaxedPrecision 
                                                      OpMemberDecorate %20 13 Offset 20 
                                                      OpMemberDecorate %20 14 RelaxedPrecision 
                                                      OpMemberDecorate %20 14 Offset 20 
                                                      OpMemberDecorate %20 15 RelaxedPrecision 
                                                      OpMemberDecorate %20 15 Offset 20 
                                                      OpMemberDecorate %20 16 RelaxedPrecision 
                                                      OpMemberDecorate %20 16 Offset 20 
                                                      OpMemberDecorate %20 17 RelaxedPrecision 
                                                      OpMemberDecorate %20 17 Offset 20 
                                                      OpDecorate %20 Block 
                                                      OpDecorate %22 DescriptorSet 22 
                                                      OpDecorate %22 Binding 22 
                                                      OpDecorate %36 RelaxedPrecision 
                                                      OpDecorate %44 RelaxedPrecision 
                                                      OpDecorate %45 RelaxedPrecision 
                                                      OpDecorate %47 RelaxedPrecision 
                                                      OpDecorate %48 RelaxedPrecision 
                                                      OpDecorate %49 RelaxedPrecision 
                                                      OpDecorate %50 RelaxedPrecision 
                                                      OpDecorate %51 RelaxedPrecision 
                                                      OpDecorate %52 RelaxedPrecision 
                                                      OpDecorate %53 RelaxedPrecision 
                                                      OpDecorate %54 RelaxedPrecision 
                                                      OpDecorate %55 RelaxedPrecision 
                                                      OpDecorate %56 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD1 Location 57 
                                                      OpDecorate %61 RelaxedPrecision 
                                                      OpDecorate %62 RelaxedPrecision 
                                                      OpDecorate %63 RelaxedPrecision 
                                                      OpDecorate %64 RelaxedPrecision 
                                                      OpDecorate %68 RelaxedPrecision 
                                                      OpDecorate %69 RelaxedPrecision 
                                                      OpDecorate %70 RelaxedPrecision 
                                                      OpDecorate %73 RelaxedPrecision 
                                                      OpDecorate %75 RelaxedPrecision 
                                                      OpDecorate %76 RelaxedPrecision 
                                                      OpDecorate %77 RelaxedPrecision 
                                                      OpDecorate %81 RelaxedPrecision 
                                                      OpDecorate %82 RelaxedPrecision 
                                                      OpDecorate %85 RelaxedPrecision 
                                                      OpDecorate %89 RelaxedPrecision 
                                                      OpDecorate %90 RelaxedPrecision 
                                                      OpDecorate %94 RelaxedPrecision 
                                                      OpDecorate %96 RelaxedPrecision 
                                                      OpDecorate %100 RelaxedPrecision 
                                                      OpDecorate %106 RelaxedPrecision 
                                                      OpDecorate %107 RelaxedPrecision 
                                                      OpDecorate %109 RelaxedPrecision 
                                                      OpDecorate %110 RelaxedPrecision 
                                                      OpDecorate %116 RelaxedPrecision 
                                                      OpDecorate %117 RelaxedPrecision 
                                                      OpDecorate %119 RelaxedPrecision 
                                                      OpDecorate %121 RelaxedPrecision 
                                                      OpDecorate %122 RelaxedPrecision 
                                                      OpDecorate %123 RelaxedPrecision 
                                                      OpDecorate %126 RelaxedPrecision 
                                                      OpDecorate %127 RelaxedPrecision 
                                                      OpDecorate %128 RelaxedPrecision 
                                                      OpDecorate %129 RelaxedPrecision 
                                                      OpDecorate %202 RelaxedPrecision 
                                                      OpDecorate %205 RelaxedPrecision 
                                                      OpDecorate %252 DescriptorSet 252 
                                                      OpDecorate %252 Binding 252 
                                                      OpDecorate %256 DescriptorSet 256 
                                                      OpDecorate %256 Binding 256 
                                                      OpDecorate %265 RelaxedPrecision 
                                                      OpDecorate %266 RelaxedPrecision 
                                                      OpDecorate %267 RelaxedPrecision 
                                                      OpDecorate %271 RelaxedPrecision 
                                                      OpDecorate %274 RelaxedPrecision 
                                                      OpDecorate %278 RelaxedPrecision 
                                                      OpDecorate %279 RelaxedPrecision 
                                                      OpDecorate %280 RelaxedPrecision 
                                                      OpDecorate %283 RelaxedPrecision 
                                                      OpDecorate %286 RelaxedPrecision 
                                                      OpDecorate %291 RelaxedPrecision 
                                                      OpDecorate %296 RelaxedPrecision 
                                                      OpDecorate %297 RelaxedPrecision 
                                                      OpDecorate %300 RelaxedPrecision 
                                                      OpDecorate %301 RelaxedPrecision 
                                                      OpDecorate %302 RelaxedPrecision 
                                                      OpDecorate %305 RelaxedPrecision 
                                                      OpDecorate %309 RelaxedPrecision 
                                                      OpDecorate %310 RelaxedPrecision 
                                                      OpDecorate %311 RelaxedPrecision 
                                                      OpDecorate %314 RelaxedPrecision 
                                                      OpDecorate %315 RelaxedPrecision 
                                                      OpDecorate %316 RelaxedPrecision 
                                                      OpDecorate %317 RelaxedPrecision 
                                                      OpDecorate %318 RelaxedPrecision 
                                                      OpDecorate %320 RelaxedPrecision 
                                                      OpDecorate %321 RelaxedPrecision 
                                                      OpDecorate %324 RelaxedPrecision 
                                                      OpDecorate %325 RelaxedPrecision 
                                                      OpDecorate %327 RelaxedPrecision 
                                                      OpDecorate %328 RelaxedPrecision 
                                                      OpDecorate %329 RelaxedPrecision 
                                                      OpDecorate %330 RelaxedPrecision 
                                                      OpDecorate %331 RelaxedPrecision 
                                                      OpDecorate %332 RelaxedPrecision 
                                                      OpDecorate %333 RelaxedPrecision 
                                                      OpDecorate %334 RelaxedPrecision 
                                                      OpDecorate %335 RelaxedPrecision 
                                                      OpDecorate %337 RelaxedPrecision 
                                                      OpDecorate %338 RelaxedPrecision 
                                                      OpDecorate %341 RelaxedPrecision 
                                                      OpDecorate %342 RelaxedPrecision 
                                                      OpDecorate %345 RelaxedPrecision 
                                                      OpDecorate %346 RelaxedPrecision 
                                                      OpDecorate %347 RelaxedPrecision 
                                                      OpDecorate %349 RelaxedPrecision 
                                                      OpDecorate %351 RelaxedPrecision 
                                                      OpDecorate %352 RelaxedPrecision 
                                                      OpDecorate %355 RelaxedPrecision 
                                                      OpDecorate %356 RelaxedPrecision 
                                                      OpDecorate %357 RelaxedPrecision 
                                                      OpDecorate %360 RelaxedPrecision 
                                                      OpDecorate %362 RelaxedPrecision 
                                                      OpDecorate %363 RelaxedPrecision 
                                                      OpDecorate %367 RelaxedPrecision 
                                                      OpDecorate %368 RelaxedPrecision 
                                                      OpDecorate %369 RelaxedPrecision 
                                                      OpDecorate %372 RelaxedPrecision 
                                                      OpDecorate %373 RelaxedPrecision 
                                                      OpDecorate %374 RelaxedPrecision 
                                                      OpDecorate %376 RelaxedPrecision 
                                                      OpDecorate %377 RelaxedPrecision 
                                                      OpDecorate %378 RelaxedPrecision 
                                                      OpDecorate %379 RelaxedPrecision 
                                                      OpDecorate %381 RelaxedPrecision 
                                                      OpDecorate %382 RelaxedPrecision 
                                                      OpDecorate %383 RelaxedPrecision 
                                                      OpDecorate %384 RelaxedPrecision 
                                                      OpDecorate %385 RelaxedPrecision 
                                                      OpDecorate %387 RelaxedPrecision 
                                                      OpDecorate %388 RelaxedPrecision 
                                                      OpDecorate %389 RelaxedPrecision 
                                                      OpDecorate %390 RelaxedPrecision 
                                                      OpDecorate %391 RelaxedPrecision 
                                                      OpDecorate %392 RelaxedPrecision 
                                                      OpDecorate %393 RelaxedPrecision 
                                                      OpDecorate %394 RelaxedPrecision 
                                                      OpDecorate %395 RelaxedPrecision 
                                                      OpDecorate %396 RelaxedPrecision 
                                                      OpDecorate %397 RelaxedPrecision 
                                                      OpDecorate %397 DescriptorSet 397 
                                                      OpDecorate %397 Binding 397 
                                                      OpDecorate %398 RelaxedPrecision 
                                                      OpDecorate %399 RelaxedPrecision 
                                                      OpDecorate %399 DescriptorSet 399 
                                                      OpDecorate %399 Binding 399 
                                                      OpDecorate %400 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD0 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD0 Location 404 
                                                      OpDecorate %405 RelaxedPrecision 
                                                      OpDecorate %406 RelaxedPrecision 
                                                      OpDecorate %407 RelaxedPrecision 
                                                      OpDecorate %408 RelaxedPrecision 
                                                      OpDecorate %411 RelaxedPrecision 
                                                      OpDecorate %412 RelaxedPrecision 
                                                      OpDecorate %413 RelaxedPrecision 
                                                      OpDecorate %414 RelaxedPrecision 
                                                      OpDecorate %415 RelaxedPrecision 
                                                      OpDecorate %417 RelaxedPrecision 
                                                      OpDecorate %418 RelaxedPrecision 
                                                      OpDecorate %419 RelaxedPrecision 
                                                      OpDecorate %420 RelaxedPrecision 
                                                      OpDecorate %421 RelaxedPrecision 
                                                      OpDecorate %422 RelaxedPrecision 
                                                      OpDecorate %432 RelaxedPrecision 
                                                      OpDecorate %437 RelaxedPrecision 
                                                      OpDecorate %443 RelaxedPrecision 
                                                      OpDecorate %447 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD3 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD3 Location 448 
                                                      OpDecorate %449 RelaxedPrecision 
                                                      OpDecorate %450 RelaxedPrecision 
                                                      OpDecorate %451 RelaxedPrecision 
                                                      OpDecorate %453 RelaxedPrecision 
                                                      OpDecorate %454 RelaxedPrecision 
                                                      OpDecorate %455 RelaxedPrecision 
                                                      OpDecorate %472 RelaxedPrecision 
                                                      OpDecorate %472 Location 472 
                                                      OpDecorate %473 RelaxedPrecision 
                                               %2 = OpTypeVoid 
                                               %3 = OpTypeFunction %2 
                                               %6 = OpTypeFloat 32 
                                               %7 = OpTypeVector %6 3 
                                               %8 = OpTypePointer Private %7 
                                Private f32_3* %9 = OpVariable Private 
                                              %10 = OpTypePointer Input %7 
                        Input f32_3* vs_TEXCOORD2 = OpVariable Input 
                                              %14 = OpTypeVector %6 4 
                                              %15 = OpTypeInt 32 0 
                                          u32 %16 = OpConstant 16 
                                              %17 = OpTypeArray %14 %16 
                                          u32 %18 = OpConstant 4 
                                              %19 = OpTypeArray %14 %18 
                                              %20 = OpTypeStruct %7 %14 %14 %14 %14 %17 %14 %14 %19 %14 %14 %14 %6 %14 %14 %6 %6 %6 
                                              %21 = OpTypePointer Uniform %20 
Uniform struct {f32_3; f32_4; f32_4; f32_4; f32_4; f32_4[16]; f32_4; f32_4; f32_4[4]; f32_4; f32_4; f32_4; f32; f32_4; f32_4; f32; f32; f32;}* %22 = OpVariable Uniform 
                                              %23 = OpTypeInt 32 1 
                                          i32 %24 = OpConstant 0 
                                              %25 = OpTypePointer Uniform %7 
                                              %29 = OpTypePointer Private %6 
                                 Private f32* %30 = OpVariable Private 
                               Private f32_3* %36 = OpVariable Private 
                                          i32 %41 = OpConstant 1 
                                              %42 = OpTypePointer Uniform %14 
                                 Private f32* %47 = OpVariable Private 
                        Input f32_3* vs_TEXCOORD1 = OpVariable Input 
                               Private f32_3* %63 = OpVariable Private 
                                          u32 %71 = OpConstant 0 
                                          u32 %78 = OpConstant 1 
                                              %80 = OpTypeVector %6 2 
                                          f32 %83 = OpConstant 3.674022E-40 
                                        f32_2 %84 = OpConstantComposite %83 %83 
                                          i32 %91 = OpConstant 12 
                                              %92 = OpTypePointer Uniform %6 
                                          f32 %95 = OpConstant 3.674022E-40 
                                         i32 %104 = OpConstant 17 
                                         f32 %108 = OpConstant 3.674022E-40 
                                         f32 %113 = OpConstant 3.674022E-40 
                                Private f32* %119 = OpVariable Private 
                              Private f32_3* %124 = OpVariable Private 
                                         f32 %131 = OpConstant 3.674022E-40 
                                         f32 %143 = OpConstant 3.674022E-40 
                                         f32 %145 = OpConstant 3.674022E-40 
                                         i32 %155 = OpConstant 8 
                                         u32 %156 = OpConstant 2 
                                         i32 %163 = OpConstant 2 
                                         i32 %172 = OpConstant 7 
                                Private f32* %178 = OpVariable Private 
                                         u32 %189 = OpConstant 3 
                                         i32 %200 = OpConstant 6 
                                         i32 %214 = OpConstant 5 
                                         i32 %236 = OpConstant 3 
                                             %241 = OpTypePointer Function %7 
                                             %250 = OpTypeImage %6 Dim2D 0 0 0 1 Unknown 
                                             %251 = OpTypePointer UniformConstant %250 
        UniformConstant read_only Texture2D* %252 = OpVariable UniformConstant 
                                             %254 = OpTypeSampler 
                                             %255 = OpTypePointer UniformConstant %254 
                    UniformConstant sampler* %256 = OpVariable UniformConstant 
                                             %258 = OpTypeImage %6 Dim2D 1 0 0 1 Unknown 
                                             %259 = OpTypeSampledImage %258 
                                         i32 %294 = OpConstant 9 
                                         i32 %298 = OpConstant 10 
                                         i32 %307 = OpConstant 16 
                                         i32 %312 = OpConstant 15 
                              Private f32_3* %316 = OpVariable Private 
                                         i32 %365 = OpConstant 13 
                                         i32 %370 = OpConstant 14 
                              Private f32_3* %396 = OpVariable Private 
        UniformConstant read_only Texture2D* %397 = OpVariable UniformConstant 
                    UniformConstant sampler* %399 = OpVariable UniformConstant 
                                             %401 = OpTypeSampledImage %250 
                                             %403 = OpTypePointer Input %80 
                        Input f32_2* vs_TEXCOORD0 = OpVariable Input 
                                         i32 %409 = OpConstant 11 
                              Private f32_3* %414 = OpVariable Private 
                                             %425 = OpTypePointer Private %14 
                              Private f32_4* %426 = OpVariable Private 
                                         i32 %441 = OpConstant 4 
                        Input f32_3* vs_TEXCOORD3 = OpVariable Input 
                                       f32_3 %452 = OpConstantComposite %83 %83 %83 
                                         f32 %457 = OpConstant 3.674022E-40 
                                       f32_3 %458 = OpConstantComposite %457 %457 %457 
                                         f32 %463 = OpConstant 3.674022E-40 
                                       f32_3 %464 = OpConstantComposite %463 %463 %463 
                                         f32 %466 = OpConstant 3.674022E-40 
                                       f32_3 %467 = OpConstantComposite %466 %466 %466 
                                             %471 = OpTypePointer Output %14 
                               Output f32_4* %472 = OpVariable Output 
                                             %480 = OpTypePointer Output %6 
                                          void %4 = OpFunction None %3 
                                               %5 = OpLabel 
                             Function f32_3* %242 = OpVariable Function 
                                        f32_3 %12 = OpLoad vs_TEXCOORD2 
                                        f32_3 %13 = OpFNegate %12 
                               Uniform f32_3* %26 = OpAccessChain %22 %24 
                                        f32_3 %27 = OpLoad %26 
                                        f32_3 %28 = OpFAdd %13 %27 
                                                      OpStore %9 %28 
                                        f32_3 %31 = OpLoad %9 
                                        f32_3 %32 = OpLoad %9 
                                          f32 %33 = OpDot %31 %32 
                                                      OpStore %30 %33 
                                          f32 %34 = OpLoad %30 
                                          f32 %35 = OpExtInst %1 32 %34 
                                                      OpStore %30 %35 
                                        f32_3 %37 = OpLoad %9 
                                          f32 %38 = OpLoad %30 
                                        f32_3 %39 = OpCompositeConstruct %38 %38 %38 
                                        f32_3 %40 = OpFMul %37 %39 
                               Uniform f32_4* %43 = OpAccessChain %22 %41 
                                        f32_4 %44 = OpLoad %43 
                                        f32_3 %45 = OpVectorShuffle %44 %44 0 1 2 
                                        f32_3 %46 = OpFAdd %40 %45 
                                                      OpStore %36 %46 
                                        f32_3 %48 = OpLoad %36 
                                        f32_3 %49 = OpLoad %36 
                                          f32 %50 = OpDot %48 %49 
                                                      OpStore %47 %50 
                                          f32 %51 = OpLoad %47 
                                          f32 %52 = OpExtInst %1 32 %51 
                                                      OpStore %47 %52 
                                          f32 %53 = OpLoad %47 
                                        f32_3 %54 = OpCompositeConstruct %53 %53 %53 
                                        f32_3 %55 = OpLoad %36 
                                        f32_3 %56 = OpFMul %54 %55 
                                                      OpStore %36 %56 
                                        f32_3 %58 = OpLoad vs_TEXCOORD1 
                                        f32_3 %59 = OpLoad vs_TEXCOORD1 
                                          f32 %60 = OpDot %58 %59 
                                                      OpStore %47 %60 
                                          f32 %61 = OpLoad %47 
                                          f32 %62 = OpExtInst %1 32 %61 
                                                      OpStore %47 %62 
                                          f32 %64 = OpLoad %47 
                                        f32_3 %65 = OpCompositeConstruct %64 %64 %64 
                                        f32_3 %66 = OpLoad vs_TEXCOORD1 
                                        f32_3 %67 = OpFMul %65 %66 
                                                      OpStore %63 %67 
                                        f32_3 %68 = OpLoad %63 
                                        f32_3 %69 = OpLoad %36 
                                          f32 %70 = OpDot %68 %69 
                                 Private f32* %72 = OpAccessChain %36 %71 
                                                      OpStore %72 %70 
                                        f32_3 %73 = OpLoad %63 
                               Uniform f32_4* %74 = OpAccessChain %22 %41 
                                        f32_4 %75 = OpLoad %74 
                                        f32_3 %76 = OpVectorShuffle %75 %75 0 1 2 
                                          f32 %77 = OpDot %73 %76 
                                 Private f32* %79 = OpAccessChain %36 %78 
                                                      OpStore %79 %77 
                                        f32_3 %81 = OpLoad %36 
                                        f32_2 %82 = OpVectorShuffle %81 %81 0 1 
                                        f32_2 %85 = OpExtInst %1 40 %82 %84 
                                        f32_3 %86 = OpLoad %36 
                                        f32_3 %87 = OpVectorShuffle %86 %85 3 4 2 
                                                      OpStore %36 %87 
                                 Private f32* %88 = OpAccessChain %36 %71 
                                          f32 %89 = OpLoad %88 
                                          f32 %90 = OpExtInst %1 30 %89 
                                                      OpStore %30 %90 
                                 Uniform f32* %93 = OpAccessChain %22 %91 
                                          f32 %94 = OpLoad %93 
                                          f32 %96 = OpFMul %94 %95 
                                 Private f32* %97 = OpAccessChain %36 %71 
                                                      OpStore %97 %96 
                                          f32 %98 = OpLoad %30 
                                 Private f32* %99 = OpAccessChain %36 %71 
                                         f32 %100 = OpLoad %99 
                                         f32 %101 = OpFMul %98 %100 
                                                      OpStore %30 %101 
                                         f32 %102 = OpLoad %30 
                                         f32 %103 = OpExtInst %1 29 %102 
                                                      OpStore %30 %103 
                                Uniform f32* %105 = OpAccessChain %22 %104 
                                         f32 %106 = OpLoad %105 
                                         f32 %107 = OpFNegate %106 
                                         f32 %109 = OpFMul %107 %108 
                                         f32 %110 = OpFAdd %109 %108 
                                Private f32* %111 = OpAccessChain %36 %71 
                                                      OpStore %111 %110 
                                         f32 %112 = OpLoad %30 
                                         f32 %114 = OpFMul %112 %113 
                                Private f32* %115 = OpAccessChain %36 %71 
                                         f32 %116 = OpLoad %115 
                                         f32 %117 = OpFNegate %116 
                                         f32 %118 = OpFAdd %114 %117 
                                                      OpStore %30 %118 
                                Uniform f32* %120 = OpAccessChain %22 %104 
                                         f32 %121 = OpLoad %120 
                                         f32 %122 = OpFMul %121 %108 
                                         f32 %123 = OpFAdd %122 %108 
                                                      OpStore %119 %123 
                                Private f32* %125 = OpAccessChain %36 %71 
                                         f32 %126 = OpLoad %125 
                                         f32 %127 = OpFNegate %126 
                                         f32 %128 = OpLoad %119 
                                         f32 %129 = OpFAdd %127 %128 
                                Private f32* %130 = OpAccessChain %124 %71 
                                                      OpStore %130 %129 
                                Private f32* %132 = OpAccessChain %124 %71 
                                         f32 %133 = OpLoad %132 
                                         f32 %134 = OpFDiv %131 %133 
                                Private f32* %135 = OpAccessChain %124 %71 
                                                      OpStore %135 %134 
                                         f32 %136 = OpLoad %30 
                                Private f32* %137 = OpAccessChain %124 %71 
                                         f32 %138 = OpLoad %137 
                                         f32 %139 = OpFMul %136 %138 
                                                      OpStore %30 %139 
                                         f32 %140 = OpLoad %30 
                                         f32 %141 = OpExtInst %1 43 %140 %83 %131 
                                                      OpStore %30 %141 
                                         f32 %142 = OpLoad %30 
                                         f32 %144 = OpFMul %142 %143 
                                         f32 %146 = OpFAdd %144 %145 
                                Private f32* %147 = OpAccessChain %124 %71 
                                                      OpStore %147 %146 
                                         f32 %148 = OpLoad %30 
                                         f32 %149 = OpLoad %30 
                                         f32 %150 = OpFMul %148 %149 
                                                      OpStore %30 %150 
                                         f32 %151 = OpLoad %30 
                                Private f32* %152 = OpAccessChain %124 %71 
                                         f32 %153 = OpLoad %152 
                                         f32 %154 = OpFMul %151 %153 
                                                      OpStore %30 %154 
                                Uniform f32* %157 = OpAccessChain %22 %155 %24 %156 
                                         f32 %158 = OpLoad %157 
                                Private f32* %159 = OpAccessChain %124 %71 
                                                      OpStore %159 %158 
                                Uniform f32* %160 = OpAccessChain %22 %155 %41 %156 
                                         f32 %161 = OpLoad %160 
                                Private f32* %162 = OpAccessChain %124 %78 
                                                      OpStore %162 %161 
                                Uniform f32* %164 = OpAccessChain %22 %155 %163 %156 
                                         f32 %165 = OpLoad %164 
                                Private f32* %166 = OpAccessChain %124 %156 
                                                      OpStore %166 %165 
                                       f32_3 %167 = OpLoad %9 
                                       f32_3 %168 = OpLoad %124 
                                         f32 %169 = OpDot %167 %168 
                                Private f32* %170 = OpAccessChain %9 %71 
                                                      OpStore %170 %169 
                                       f32_3 %171 = OpLoad vs_TEXCOORD2 
                              Uniform f32_4* %173 = OpAccessChain %22 %172 
                                       f32_4 %174 = OpLoad %173 
                                       f32_3 %175 = OpVectorShuffle %174 %174 0 1 2 
                                       f32_3 %176 = OpFNegate %175 
                                       f32_3 %177 = OpFAdd %171 %176 
                                                      OpStore %124 %177 
                                       f32_3 %179 = OpLoad %124 
                                       f32_3 %180 = OpLoad %124 
                                         f32 %181 = OpDot %179 %180 
                                                      OpStore %178 %181 
                                         f32 %182 = OpLoad %178 
                                         f32 %183 = OpExtInst %1 31 %182 
                                                      OpStore %178 %183 
                                Private f32* %184 = OpAccessChain %9 %71 
                                         f32 %185 = OpLoad %184 
                                         f32 %186 = OpFNegate %185 
                                         f32 %187 = OpLoad %178 
                                         f32 %188 = OpFAdd %186 %187 
                                                      OpStore %178 %188 
                                Uniform f32* %190 = OpAccessChain %22 %172 %189 
                                         f32 %191 = OpLoad %190 
                                         f32 %192 = OpLoad %178 
                                         f32 %193 = OpFMul %191 %192 
                                Private f32* %194 = OpAccessChain %9 %71 
                                         f32 %195 = OpLoad %194 
                                         f32 %196 = OpFAdd %193 %195 
                                Private f32* %197 = OpAccessChain %9 %71 
                                                      OpStore %197 %196 
                                Private f32* %198 = OpAccessChain %9 %71 
                                         f32 %199 = OpLoad %198 
                                Uniform f32* %201 = OpAccessChain %22 %200 %156 
                                         f32 %202 = OpLoad %201 
                                         f32 %203 = OpFMul %199 %202 
                                Uniform f32* %204 = OpAccessChain %22 %200 %189 
                                         f32 %205 = OpLoad %204 
                                         f32 %206 = OpFAdd %203 %205 
                                Private f32* %207 = OpAccessChain %9 %71 
                                                      OpStore %207 %206 
                                Private f32* %208 = OpAccessChain %9 %71 
                                         f32 %209 = OpLoad %208 
                                         f32 %210 = OpExtInst %1 43 %209 %83 %131 
                                Private f32* %211 = OpAccessChain %9 %71 
                                                      OpStore %211 %210 
                                       f32_3 %212 = OpLoad vs_TEXCOORD2 
                                       f32_3 %213 = OpVectorShuffle %212 %212 1 1 1 
                              Uniform f32_4* %215 = OpAccessChain %22 %214 %41 
                                       f32_4 %216 = OpLoad %215 
                                       f32_3 %217 = OpVectorShuffle %216 %216 0 1 2 
                                       f32_3 %218 = OpFMul %213 %217 
                                                      OpStore %124 %218 
                              Uniform f32_4* %219 = OpAccessChain %22 %214 %24 
                                       f32_4 %220 = OpLoad %219 
                                       f32_3 %221 = OpVectorShuffle %220 %220 0 1 2 
                                       f32_3 %222 = OpLoad vs_TEXCOORD2 
                                       f32_3 %223 = OpVectorShuffle %222 %222 0 0 0 
                                       f32_3 %224 = OpFMul %221 %223 
                                       f32_3 %225 = OpLoad %124 
                                       f32_3 %226 = OpFAdd %224 %225 
                                                      OpStore %124 %226 
                              Uniform f32_4* %227 = OpAccessChain %22 %214 %163 
                                       f32_4 %228 = OpLoad %227 
                                       f32_3 %229 = OpVectorShuffle %228 %228 0 1 2 
                                       f32_3 %230 = OpLoad vs_TEXCOORD2 
                                       f32_3 %231 = OpVectorShuffle %230 %230 2 2 2 
                                       f32_3 %232 = OpFMul %229 %231 
                                       f32_3 %233 = OpLoad %124 
                                       f32_3 %234 = OpFAdd %232 %233 
                                                      OpStore %124 %234 
                                       f32_3 %235 = OpLoad %124 
                              Uniform f32_4* %237 = OpAccessChain %22 %214 %236 
                                       f32_4 %238 = OpLoad %237 
                                       f32_3 %239 = OpVectorShuffle %238 %238 0 1 2 
                                       f32_3 %240 = OpFAdd %235 %239 
                                                      OpStore %124 %240 
                                       f32_3 %243 = OpLoad %124 
                                       f32_2 %244 = OpVectorShuffle %243 %243 0 1 
                                Private f32* %245 = OpAccessChain %124 %156 
                                         f32 %246 = OpLoad %245 
                                         f32 %247 = OpCompositeExtract %244 0 
                                         f32 %248 = OpCompositeExtract %244 1 
                                       f32_3 %249 = OpCompositeConstruct %247 %248 %246 
                                                      OpStore %242 %249 
                         read_only Texture2D %253 = OpLoad %252 
                                     sampler %257 = OpLoad %256 
                  read_only Texture2DSampled %260 = OpSampledImage %253 %257 
                                       f32_3 %261 = OpLoad %242 
                                         f32 %262 = OpCompositeExtract %261 2 
                                         f32 %263 = OpImageSampleDrefExplicitLod %260 %261 %262 Lod %6 
                                                      OpStore %178 %263 
                                Uniform f32* %264 = OpAccessChain %22 %200 %71 
                                         f32 %265 = OpLoad %264 
                                         f32 %266 = OpFNegate %265 
                                         f32 %267 = OpFAdd %266 %131 
                                Private f32* %268 = OpAccessChain %36 %71 
                                                      OpStore %268 %267 
                                         f32 %269 = OpLoad %178 
                                Private f32* %270 = OpAccessChain %36 %71 
                                         f32 %271 = OpLoad %270 
                                         f32 %272 = OpFMul %269 %271 
                                Uniform f32* %273 = OpAccessChain %22 %200 %71 
                                         f32 %274 = OpLoad %273 
                                         f32 %275 = OpFAdd %272 %274 
                                Private f32* %276 = OpAccessChain %36 %71 
                                                      OpStore %276 %275 
                                Private f32* %277 = OpAccessChain %36 %71 
                                         f32 %278 = OpLoad %277 
                                         f32 %279 = OpFNegate %278 
                                         f32 %280 = OpFAdd %279 %131 
                                                      OpStore %119 %280 
                                Private f32* %281 = OpAccessChain %9 %71 
                                         f32 %282 = OpLoad %281 
                                         f32 %283 = OpLoad %119 
                                         f32 %284 = OpFMul %282 %283 
                                Private f32* %285 = OpAccessChain %36 %71 
                                         f32 %286 = OpLoad %285 
                                         f32 %287 = OpFAdd %284 %286 
                                Private f32* %288 = OpAccessChain %36 %71 
                                                      OpStore %288 %287 
                                         f32 %289 = OpLoad %30 
                                Private f32* %290 = OpAccessChain %36 %71 
                                         f32 %291 = OpLoad %290 
                                         f32 %292 = OpFMul %289 %291 
                                Private f32* %293 = OpAccessChain %9 %71 
                                                      OpStore %293 %292 
                              Uniform f32_4* %295 = OpAccessChain %22 %294 
                                       f32_4 %296 = OpLoad %295 
                                       f32_3 %297 = OpVectorShuffle %296 %296 0 1 2 
                              Uniform f32_4* %299 = OpAccessChain %22 %298 
                                       f32_4 %300 = OpLoad %299 
                                       f32_3 %301 = OpVectorShuffle %300 %300 0 1 2 
                                       f32_3 %302 = OpFMul %297 %301 
                                                      OpStore %63 %302 
                                       f32_3 %303 = OpLoad %9 
                                       f32_3 %304 = OpVectorShuffle %303 %303 0 0 0 
                                       f32_3 %305 = OpLoad %63 
                                       f32_3 %306 = OpFMul %304 %305 
                                                      OpStore %9 %306 
                                Uniform f32* %308 = OpAccessChain %22 %307 
                                         f32 %309 = OpLoad %308 
                                         f32 %310 = OpFNegate %309 
                                         f32 %311 = OpFMul %310 %108 
                                Uniform f32* %313 = OpAccessChain %22 %312 
                                         f32 %314 = OpLoad %313 
                                         f32 %315 = OpFAdd %311 %314 
                                                      OpStore %119 %315 
                                         f32 %317 = OpLoad %119 
                                         f32 %318 = OpFNegate %317 
                                Private f32* %319 = OpAccessChain %36 %78 
                                         f32 %320 = OpLoad %319 
                                         f32 %321 = OpFAdd %318 %320 
                                Private f32* %322 = OpAccessChain %316 %71 
                                                      OpStore %322 %321 
                                Uniform f32* %323 = OpAccessChain %22 %307 
                                         f32 %324 = OpLoad %323 
                                         f32 %325 = OpFMul %324 %108 
                                Uniform f32* %326 = OpAccessChain %22 %312 
                                         f32 %327 = OpLoad %326 
                                         f32 %328 = OpFAdd %325 %327 
                                                      OpStore %47 %328 
                                         f32 %329 = OpLoad %119 
                                         f32 %330 = OpFNegate %329 
                                         f32 %331 = OpLoad %47 
                                         f32 %332 = OpFAdd %330 %331 
                                                      OpStore %119 %332 
                                         f32 %333 = OpLoad %119 
                                         f32 %334 = OpFDiv %131 %333 
                                                      OpStore %119 %334 
                                         f32 %335 = OpLoad %119 
                                Private f32* %336 = OpAccessChain %316 %71 
                                         f32 %337 = OpLoad %336 
                                         f32 %338 = OpFMul %335 %337 
                                Private f32* %339 = OpAccessChain %316 %71 
                                                      OpStore %339 %338 
                                Private f32* %340 = OpAccessChain %316 %71 
                                         f32 %341 = OpLoad %340 
                                         f32 %342 = OpExtInst %1 43 %341 %83 %131 
                                Private f32* %343 = OpAccessChain %316 %71 
                                                      OpStore %343 %342 
                                Private f32* %344 = OpAccessChain %316 %71 
                                         f32 %345 = OpLoad %344 
                                         f32 %346 = OpFMul %345 %143 
                                         f32 %347 = OpFAdd %346 %145 
                                                      OpStore %119 %347 
                                Private f32* %348 = OpAccessChain %316 %71 
                                         f32 %349 = OpLoad %348 
                                Private f32* %350 = OpAccessChain %316 %71 
                                         f32 %351 = OpLoad %350 
                                         f32 %352 = OpFMul %349 %351 
                                Private f32* %353 = OpAccessChain %316 %71 
                                                      OpStore %353 %352 
                                Private f32* %354 = OpAccessChain %316 %71 
                                         f32 %355 = OpLoad %354 
                                         f32 %356 = OpLoad %119 
                                         f32 %357 = OpFMul %355 %356 
                                Private f32* %358 = OpAccessChain %316 %71 
                                                      OpStore %358 %357 
                                Private f32* %359 = OpAccessChain %36 %71 
                                         f32 %360 = OpLoad %359 
                                Private f32* %361 = OpAccessChain %316 %71 
                                         f32 %362 = OpLoad %361 
                                         f32 %363 = OpFMul %360 %362 
                                Private f32* %364 = OpAccessChain %36 %71 
                                                      OpStore %364 %363 
                              Uniform f32_4* %366 = OpAccessChain %22 %365 
                                       f32_4 %367 = OpLoad %366 
                                       f32_3 %368 = OpVectorShuffle %367 %367 0 1 2 
                                       f32_3 %369 = OpFNegate %368 
                              Uniform f32_4* %371 = OpAccessChain %22 %370 
                                       f32_4 %372 = OpLoad %371 
                                       f32_3 %373 = OpVectorShuffle %372 %372 0 1 2 
                                       f32_3 %374 = OpFAdd %369 %373 
                                                      OpStore %316 %374 
                              Uniform f32_4* %375 = OpAccessChain %22 %370 
                                       f32_4 %376 = OpLoad %375 
                                       f32_3 %377 = OpVectorShuffle %376 %376 3 3 3 
                                       f32_3 %378 = OpLoad %316 
                                       f32_3 %379 = OpFMul %377 %378 
                              Uniform f32_4* %380 = OpAccessChain %22 %365 
                                       f32_4 %381 = OpLoad %380 
                                       f32_3 %382 = OpVectorShuffle %381 %381 0 1 2 
                                       f32_3 %383 = OpFAdd %379 %382 
                                                      OpStore %316 %383 
                                       f32_3 %384 = OpLoad %316 
                                       f32_3 %385 = OpFNegate %384 
                              Uniform f32_4* %386 = OpAccessChain %22 %365 
                                       f32_4 %387 = OpLoad %386 
                                       f32_3 %388 = OpVectorShuffle %387 %387 0 1 2 
                                       f32_3 %389 = OpFAdd %385 %388 
                                                      OpStore %63 %389 
                                       f32_3 %390 = OpLoad %36 
                                       f32_3 %391 = OpVectorShuffle %390 %390 0 0 0 
                                       f32_3 %392 = OpLoad %63 
                                       f32_3 %393 = OpFMul %391 %392 
                                       f32_3 %394 = OpLoad %316 
                                       f32_3 %395 = OpFAdd %393 %394 
                                                      OpStore %36 %395 
                         read_only Texture2D %398 = OpLoad %397 
                                     sampler %400 = OpLoad %399 
                  read_only Texture2DSampled %402 = OpSampledImage %398 %400 
                                       f32_2 %405 = OpLoad vs_TEXCOORD0 
                                       f32_4 %406 = OpImageSampleImplicitLod %402 %405 
                                       f32_3 %407 = OpVectorShuffle %406 %406 0 1 2 
                                                      OpStore %396 %407 
                                       f32_3 %408 = OpLoad %396 
                              Uniform f32_4* %410 = OpAccessChain %22 %409 
                                       f32_4 %411 = OpLoad %410 
                                       f32_3 %412 = OpVectorShuffle %411 %411 0 1 2 
                                       f32_3 %413 = OpFMul %408 %412 
                                                      OpStore %63 %413 
                                       f32_3 %415 = OpLoad %63 
                              Uniform f32_4* %416 = OpAccessChain %22 %294 
                                       f32_4 %417 = OpLoad %416 
                                       f32_3 %418 = OpVectorShuffle %417 %417 0 1 2 
                                       f32_3 %419 = OpFMul %415 %418 
                                                      OpStore %414 %419 
                                       f32_3 %420 = OpLoad %414 
                                       f32_3 %421 = OpLoad %36 
                                       f32_3 %422 = OpFMul %420 %421 
                                       f32_3 %423 = OpLoad %9 
                                       f32_3 %424 = OpFAdd %422 %423 
                                                      OpStore %9 %424 
                                       f32_3 %427 = OpLoad vs_TEXCOORD1 
                                       f32_4 %428 = OpLoad %426 
                                       f32_4 %429 = OpVectorShuffle %428 %427 4 5 6 3 
                                                      OpStore %426 %429 
                                Private f32* %430 = OpAccessChain %426 %189 
                                                      OpStore %430 %131 
                              Uniform f32_4* %431 = OpAccessChain %22 %163 
                                       f32_4 %432 = OpLoad %431 
                                       f32_4 %433 = OpLoad %426 
                                         f32 %434 = OpDot %432 %433 
                                Private f32* %435 = OpAccessChain %414 %71 
                                                      OpStore %435 %434 
                              Uniform f32_4* %436 = OpAccessChain %22 %236 
                                       f32_4 %437 = OpLoad %436 
                                       f32_4 %438 = OpLoad %426 
                                         f32 %439 = OpDot %437 %438 
                                Private f32* %440 = OpAccessChain %414 %78 
                                                      OpStore %440 %439 
                              Uniform f32_4* %442 = OpAccessChain %22 %441 
                                       f32_4 %443 = OpLoad %442 
                                       f32_4 %444 = OpLoad %426 
                                         f32 %445 = OpDot %443 %444 
                                Private f32* %446 = OpAccessChain %414 %156 
                                                      OpStore %446 %445 
                                       f32_3 %447 = OpLoad %414 
                                       f32_3 %449 = OpLoad vs_TEXCOORD3 
                                       f32_3 %450 = OpFAdd %447 %449 
                                                      OpStore %414 %450 
                                       f32_3 %451 = OpLoad %414 
                                       f32_3 %453 = OpExtInst %1 40 %451 %452 
                                                      OpStore %414 %453 
                                       f32_3 %454 = OpLoad %414 
                                       f32_3 %455 = OpExtInst %1 30 %454 
                                                      OpStore %124 %455 
                                       f32_3 %456 = OpLoad %124 
                                       f32_3 %459 = OpFMul %456 %458 
                                                      OpStore %124 %459 
                                       f32_3 %460 = OpLoad %124 
                                       f32_3 %461 = OpExtInst %1 29 %460 
                                                      OpStore %124 %461 
                                       f32_3 %462 = OpLoad %124 
                                       f32_3 %465 = OpFMul %462 %464 
                                       f32_3 %468 = OpFAdd %465 %467 
                                                      OpStore %124 %468 
                                       f32_3 %469 = OpLoad %124 
                                       f32_3 %470 = OpExtInst %1 40 %469 %452 
                                                      OpStore %124 %470 
                                       f32_3 %473 = OpLoad %63 
                                       f32_3 %474 = OpLoad %124 
                                       f32_3 %475 = OpFMul %473 %474 
                                       f32_3 %476 = OpLoad %9 
                                       f32_3 %477 = OpFAdd %475 %476 
                                       f32_4 %478 = OpLoad %472 
                                       f32_4 %479 = OpVectorShuffle %478 %477 4 5 6 3 
                                                      OpStore %472 %479 
                                 Output f32* %481 = OpAccessChain %472 %189 
                                                      OpStore %481 %131 
                                                      OpReturn
                                                      OpFunctionEnd
"
}
SubProgram "vulkan hw_tier01 " {
Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "SHADOWS_SCREEN" "VERTEXLIGHT_ON" }
"; SPIR-V
; Version: 1.0
; Generator: Khronos Glslang Reference Front End; 6
; Bound: 369
; Schema: 0
                                                      OpCapability Shader 
                                               %1 = OpExtInstImport "GLSL.std.450" 
                                                      OpMemoryModel Logical GLSL450 
                                                      OpEntryPoint Vertex %4 "main" %11 %90 %100 %116 %120 %159 %162 %353 %361 %362 
                                                      OpName vs_TEXCOORD0 "vs_TEXCOORD0" 
                                                      OpName vs_TEXCOORD1 "vs_TEXCOORD1" 
                                                      OpName vs_TEXCOORD2 "vs_TEXCOORD2" 
                                                      OpName vs_TEXCOORD3 "vs_TEXCOORD3" 
                                                      OpName vs_TEXCOORD5 "vs_TEXCOORD5" 
                                                      OpName vs_TEXCOORD6 "vs_TEXCOORD6" 
                                                      OpDecorate %11 Location 11 
                                                      OpDecorate %16 ArrayStride 16 
                                                      OpDecorate %18 ArrayStride 18 
                                                      OpDecorate %19 ArrayStride 19 
                                                      OpDecorate %20 ArrayStride 20 
                                                      OpMemberDecorate %21 0 Offset 21 
                                                      OpMemberDecorate %21 1 Offset 21 
                                                      OpMemberDecorate %21 2 Offset 21 
                                                      OpMemberDecorate %21 3 RelaxedPrecision 
                                                      OpMemberDecorate %21 3 Offset 21 
                                                      OpMemberDecorate %21 4 RelaxedPrecision 
                                                      OpMemberDecorate %21 4 Offset 21 
                                                      OpMemberDecorate %21 5 RelaxedPrecision 
                                                      OpMemberDecorate %21 5 Offset 21 
                                                      OpMemberDecorate %21 6 RelaxedPrecision 
                                                      OpMemberDecorate %21 6 Offset 21 
                                                      OpMemberDecorate %21 7 RelaxedPrecision 
                                                      OpMemberDecorate %21 7 Offset 21 
                                                      OpMemberDecorate %21 8 RelaxedPrecision 
                                                      OpMemberDecorate %21 8 Offset 21 
                                                      OpMemberDecorate %21 9 Offset 21 
                                                      OpMemberDecorate %21 10 Offset 21 
                                                      OpMemberDecorate %21 11 Offset 21 
                                                      OpMemberDecorate %21 12 Offset 21 
                                                      OpDecorate %21 Block 
                                                      OpDecorate %23 DescriptorSet 23 
                                                      OpDecorate %23 Binding 23 
                                                      OpMemberDecorate %88 0 BuiltIn 88 
                                                      OpMemberDecorate %88 1 BuiltIn 88 
                                                      OpMemberDecorate %88 2 BuiltIn 88 
                                                      OpDecorate %88 Block 
                                                      OpDecorate %100 Location 100 
                                                      OpDecorate vs_TEXCOORD0 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD0 Location 116 
                                                      OpDecorate %120 Location 120 
                                                      OpDecorate vs_TEXCOORD1 Location 159 
                                                      OpDecorate vs_TEXCOORD2 Location 162 
                                                      OpDecorate %222 RelaxedPrecision 
                                                      OpDecorate %243 RelaxedPrecision 
                                                      OpDecorate %244 RelaxedPrecision 
                                                      OpDecorate %249 RelaxedPrecision 
                                                      OpDecorate %250 RelaxedPrecision 
                                                      OpDecorate %260 RelaxedPrecision 
                                                      OpDecorate %261 RelaxedPrecision 
                                                      OpDecorate %271 RelaxedPrecision 
                                                      OpDecorate %272 RelaxedPrecision 
                                                      OpDecorate %302 RelaxedPrecision 
                                                      OpDecorate %315 RelaxedPrecision 
                                                      OpDecorate %316 RelaxedPrecision 
                                                      OpDecorate %319 RelaxedPrecision 
                                                      OpDecorate %325 RelaxedPrecision 
                                                      OpDecorate %328 RelaxedPrecision 
                                                      OpDecorate %329 RelaxedPrecision 
                                                      OpDecorate %330 RelaxedPrecision 
                                                      OpDecorate %334 RelaxedPrecision 
                                                      OpDecorate %335 RelaxedPrecision 
                                                      OpDecorate %336 RelaxedPrecision 
                                                      OpDecorate %340 RelaxedPrecision 
                                                      OpDecorate %341 RelaxedPrecision 
                                                      OpDecorate %342 RelaxedPrecision 
                                                      OpDecorate %346 RelaxedPrecision 
                                                      OpDecorate %347 RelaxedPrecision 
                                                      OpDecorate %348 RelaxedPrecision 
                                                      OpDecorate %349 RelaxedPrecision 
                                                      OpDecorate %350 RelaxedPrecision 
                                                      OpDecorate %351 RelaxedPrecision 
                                                      OpDecorate %352 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD3 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD3 Location 353 
                                                      OpDecorate %359 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD5 Location 361 
                                                      OpDecorate vs_TEXCOORD6 Location 362 
                                               %2 = OpTypeVoid 
                                               %3 = OpTypeFunction %2 
                                               %6 = OpTypeFloat 32 
                                               %7 = OpTypeVector %6 4 
                                               %8 = OpTypePointer Private %7 
                                Private f32_4* %9 = OpVariable Private 
                                              %10 = OpTypePointer Input %7 
                                 Input f32_4* %11 = OpVariable Input 
                                              %14 = OpTypeInt 32 0 
                                          u32 %15 = OpConstant 8 
                                              %16 = OpTypeArray %7 %15 
                                          u32 %17 = OpConstant 4 
                                              %18 = OpTypeArray %7 %17 
                                              %19 = OpTypeArray %7 %17 
                                              %20 = OpTypeArray %7 %17 
                                              %21 = OpTypeStruct %7 %7 %7 %7 %16 %7 %7 %7 %7 %18 %19 %20 %7 
                                              %22 = OpTypePointer Uniform %21 
Uniform struct {f32_4; f32_4; f32_4; f32_4; f32_4[8]; f32_4; f32_4; f32_4; f32_4; f32_4[4]; f32_4[4]; f32_4[4]; f32_4;}* %23 = OpVariable Uniform 
                                              %24 = OpTypeInt 32 1 
                                          i32 %25 = OpConstant 9 
                                          i32 %26 = OpConstant 1 
                                              %27 = OpTypePointer Uniform %7 
                                          i32 %31 = OpConstant 0 
                                          i32 %39 = OpConstant 2 
                               Private f32_4* %47 = OpVariable Private 
                                          i32 %49 = OpConstant 3 
                                              %53 = OpTypeVector %6 3 
                               Private f32_4* %65 = OpVariable Private 
                                          i32 %68 = OpConstant 11 
                                          u32 %86 = OpConstant 1 
                                              %87 = OpTypeArray %6 %86 
                                              %88 = OpTypeStruct %7 %6 %87 
                                              %89 = OpTypePointer Output %88 
         Output struct {f32_4; f32; f32[1];}* %90 = OpVariable Output 
                                              %98 = OpTypePointer Output %7 
                                Input f32_4* %100 = OpVariable Input 
                                             %101 = OpTypeVector %6 2 
                                         i32 %104 = OpConstant 12 
                                             %115 = OpTypePointer Output %101 
                       Output f32_2* vs_TEXCOORD0 = OpVariable Output 
                                             %119 = OpTypePointer Input %53 
                                Input f32_3* %120 = OpVariable Input 
                                         i32 %122 = OpConstant 10 
                                         u32 %127 = OpConstant 0 
                                             %128 = OpTypePointer Private %6 
                                         u32 %141 = OpConstant 2 
                                Private f32* %143 = OpVariable Private 
                                             %158 = OpTypePointer Output %53 
                       Output f32_3* vs_TEXCOORD1 = OpVariable Output 
                       Output f32_3* vs_TEXCOORD2 = OpVariable Output 
                              Private f32_4* %171 = OpVariable Private 
                              Private f32_4* %184 = OpVariable Private 
                                         f32 %215 = OpConstant 3.674022E-40 
                                       f32_4 %216 = OpConstantComposite %215 %215 %215 %215 
                                         f32 %224 = OpConstant 3.674022E-40 
                                       f32_4 %225 = OpConstantComposite %224 %224 %224 %224 
                                         f32 %233 = OpConstant 3.674022E-40 
                                       f32_4 %234 = OpConstantComposite %233 %233 %233 %233 
                                         i32 %241 = OpConstant 4 
                                         f32 %283 = OpConstant 3.674022E-40 
                                       f32_3 %284 = OpConstantComposite %283 %283 %283 
                                         f32 %286 = OpConstant 3.674022E-40 
                                       f32_3 %287 = OpConstantComposite %286 %286 %286 
                                         f32 %296 = OpConstant 3.674022E-40 
                                       f32_3 %297 = OpConstantComposite %296 %296 %296 
                                             %301 = OpTypePointer Private %53 
                              Private f32_3* %302 = OpVariable Private 
                              Private f32_4* %319 = OpVariable Private 
                              Private f32_3* %325 = OpVariable Private 
                                         i32 %326 = OpConstant 5 
                                         i32 %332 = OpConstant 6 
                                         i32 %338 = OpConstant 7 
                                         i32 %344 = OpConstant 8 
                       Output f32_3* vs_TEXCOORD3 = OpVariable Output 
                       Output f32_4* vs_TEXCOORD5 = OpVariable Output 
                       Output f32_4* vs_TEXCOORD6 = OpVariable Output 
                                             %363 = OpTypePointer Output %6 
                                          void %4 = OpFunction None %3 
                                               %5 = OpLabel 
                                        f32_4 %12 = OpLoad %11 
                                        f32_4 %13 = OpVectorShuffle %12 %12 1 1 1 1 
                               Uniform f32_4* %28 = OpAccessChain %23 %25 %26 
                                        f32_4 %29 = OpLoad %28 
                                        f32_4 %30 = OpFMul %13 %29 
                                                      OpStore %9 %30 
                               Uniform f32_4* %32 = OpAccessChain %23 %25 %31 
                                        f32_4 %33 = OpLoad %32 
                                        f32_4 %34 = OpLoad %11 
                                        f32_4 %35 = OpVectorShuffle %34 %34 0 0 0 0 
                                        f32_4 %36 = OpFMul %33 %35 
                                        f32_4 %37 = OpLoad %9 
                                        f32_4 %38 = OpFAdd %36 %37 
                                                      OpStore %9 %38 
                               Uniform f32_4* %40 = OpAccessChain %23 %25 %39 
                                        f32_4 %41 = OpLoad %40 
                                        f32_4 %42 = OpLoad %11 
                                        f32_4 %43 = OpVectorShuffle %42 %42 2 2 2 2 
                                        f32_4 %44 = OpFMul %41 %43 
                                        f32_4 %45 = OpLoad %9 
                                        f32_4 %46 = OpFAdd %44 %45 
                                                      OpStore %9 %46 
                                        f32_4 %48 = OpLoad %9 
                               Uniform f32_4* %50 = OpAccessChain %23 %25 %49 
                                        f32_4 %51 = OpLoad %50 
                                        f32_4 %52 = OpFAdd %48 %51 
                                                      OpStore %47 %52 
                               Uniform f32_4* %54 = OpAccessChain %23 %25 %49 
                                        f32_4 %55 = OpLoad %54 
                                        f32_3 %56 = OpVectorShuffle %55 %55 0 1 2 
                                        f32_4 %57 = OpLoad %11 
                                        f32_3 %58 = OpVectorShuffle %57 %57 3 3 3 
                                        f32_3 %59 = OpFMul %56 %58 
                                        f32_4 %60 = OpLoad %9 
                                        f32_3 %61 = OpVectorShuffle %60 %60 0 1 2 
                                        f32_3 %62 = OpFAdd %59 %61 
                                        f32_4 %63 = OpLoad %9 
                                        f32_4 %64 = OpVectorShuffle %63 %62 4 5 6 3 
                                                      OpStore %9 %64 
                                        f32_4 %66 = OpLoad %47 
                                        f32_4 %67 = OpVectorShuffle %66 %66 1 1 1 1 
                               Uniform f32_4* %69 = OpAccessChain %23 %68 %26 
                                        f32_4 %70 = OpLoad %69 
                                        f32_4 %71 = OpFMul %67 %70 
                                                      OpStore %65 %71 
                               Uniform f32_4* %72 = OpAccessChain %23 %68 %31 
                                        f32_4 %73 = OpLoad %72 
                                        f32_4 %74 = OpLoad %47 
                                        f32_4 %75 = OpVectorShuffle %74 %74 0 0 0 0 
                                        f32_4 %76 = OpFMul %73 %75 
                                        f32_4 %77 = OpLoad %65 
                                        f32_4 %78 = OpFAdd %76 %77 
                                                      OpStore %65 %78 
                               Uniform f32_4* %79 = OpAccessChain %23 %68 %39 
                                        f32_4 %80 = OpLoad %79 
                                        f32_4 %81 = OpLoad %47 
                                        f32_4 %82 = OpVectorShuffle %81 %81 2 2 2 2 
                                        f32_4 %83 = OpFMul %80 %82 
                                        f32_4 %84 = OpLoad %65 
                                        f32_4 %85 = OpFAdd %83 %84 
                                                      OpStore %65 %85 
                               Uniform f32_4* %91 = OpAccessChain %23 %68 %49 
                                        f32_4 %92 = OpLoad %91 
                                        f32_4 %93 = OpLoad %47 
                                        f32_4 %94 = OpVectorShuffle %93 %93 3 3 3 3 
                                        f32_4 %95 = OpFMul %92 %94 
                                        f32_4 %96 = OpLoad %65 
                                        f32_4 %97 = OpFAdd %95 %96 
                                Output f32_4* %99 = OpAccessChain %90 %31 
                                                      OpStore %99 %97 
                                       f32_4 %102 = OpLoad %100 
                                       f32_2 %103 = OpVectorShuffle %102 %102 0 1 
                              Uniform f32_4* %105 = OpAccessChain %23 %104 
                                       f32_4 %106 = OpLoad %105 
                                       f32_2 %107 = OpVectorShuffle %106 %106 0 1 
                                       f32_2 %108 = OpFMul %103 %107 
                              Uniform f32_4* %109 = OpAccessChain %23 %104 
                                       f32_4 %110 = OpLoad %109 
                                       f32_2 %111 = OpVectorShuffle %110 %110 2 3 
                                       f32_2 %112 = OpFAdd %108 %111 
                                       f32_4 %113 = OpLoad %47 
                                       f32_4 %114 = OpVectorShuffle %113 %112 4 5 2 3 
                                                      OpStore %47 %114 
                                       f32_4 %117 = OpLoad %47 
                                       f32_2 %118 = OpVectorShuffle %117 %117 0 1 
                                                      OpStore vs_TEXCOORD0 %118 
                                       f32_3 %121 = OpLoad %120 
                              Uniform f32_4* %123 = OpAccessChain %23 %122 %31 
                                       f32_4 %124 = OpLoad %123 
                                       f32_3 %125 = OpVectorShuffle %124 %124 0 1 2 
                                         f32 %126 = OpDot %121 %125 
                                Private f32* %129 = OpAccessChain %47 %127 
                                                      OpStore %129 %126 
                                       f32_3 %130 = OpLoad %120 
                              Uniform f32_4* %131 = OpAccessChain %23 %122 %26 
                                       f32_4 %132 = OpLoad %131 
                                       f32_3 %133 = OpVectorShuffle %132 %132 0 1 2 
                                         f32 %134 = OpDot %130 %133 
                                Private f32* %135 = OpAccessChain %47 %86 
                                                      OpStore %135 %134 
                                       f32_3 %136 = OpLoad %120 
                              Uniform f32_4* %137 = OpAccessChain %23 %122 %39 
                                       f32_4 %138 = OpLoad %137 
                                       f32_3 %139 = OpVectorShuffle %138 %138 0 1 2 
                                         f32 %140 = OpDot %136 %139 
                                Private f32* %142 = OpAccessChain %47 %141 
                                                      OpStore %142 %140 
                                       f32_4 %144 = OpLoad %47 
                                       f32_3 %145 = OpVectorShuffle %144 %144 0 1 2 
                                       f32_4 %146 = OpLoad %47 
                                       f32_3 %147 = OpVectorShuffle %146 %146 0 1 2 
                                         f32 %148 = OpDot %145 %147 
                                                      OpStore %143 %148 
                                         f32 %149 = OpLoad %143 
                                         f32 %150 = OpExtInst %1 32 %149 
                                                      OpStore %143 %150 
                                         f32 %151 = OpLoad %143 
                                       f32_3 %152 = OpCompositeConstruct %151 %151 %151 
                                       f32_4 %153 = OpLoad %47 
                                       f32_3 %154 = OpVectorShuffle %153 %153 0 1 2 
                                       f32_3 %155 = OpFMul %152 %154 
                                       f32_4 %156 = OpLoad %47 
                                       f32_4 %157 = OpVectorShuffle %156 %155 4 5 6 3 
                                                      OpStore %47 %157 
                                       f32_4 %160 = OpLoad %47 
                                       f32_3 %161 = OpVectorShuffle %160 %160 0 1 2 
                                                      OpStore vs_TEXCOORD1 %161 
                                       f32_4 %163 = OpLoad %9 
                                       f32_3 %164 = OpVectorShuffle %163 %163 0 1 2 
                                                      OpStore vs_TEXCOORD2 %164 
                                       f32_4 %165 = OpLoad %9 
                                       f32_4 %166 = OpVectorShuffle %165 %165 0 0 0 0 
                                       f32_4 %167 = OpFNegate %166 
                              Uniform f32_4* %168 = OpAccessChain %23 %31 
                                       f32_4 %169 = OpLoad %168 
                                       f32_4 %170 = OpFAdd %167 %169 
                                                      OpStore %65 %170 
                                       f32_4 %172 = OpLoad %9 
                                       f32_4 %173 = OpVectorShuffle %172 %172 1 1 1 1 
                                       f32_4 %174 = OpFNegate %173 
                              Uniform f32_4* %175 = OpAccessChain %23 %26 
                                       f32_4 %176 = OpLoad %175 
                                       f32_4 %177 = OpFAdd %174 %176 
                                                      OpStore %171 %177 
                                       f32_4 %178 = OpLoad %9 
                                       f32_4 %179 = OpVectorShuffle %178 %178 2 2 2 2 
                                       f32_4 %180 = OpFNegate %179 
                              Uniform f32_4* %181 = OpAccessChain %23 %39 
                                       f32_4 %182 = OpLoad %181 
                                       f32_4 %183 = OpFAdd %180 %182 
                                                      OpStore %9 %183 
                                       f32_4 %185 = OpLoad %47 
                                       f32_4 %186 = OpVectorShuffle %185 %185 1 1 1 1 
                                       f32_4 %187 = OpLoad %171 
                                       f32_4 %188 = OpFMul %186 %187 
                                                      OpStore %184 %188 
                                       f32_4 %189 = OpLoad %171 
                                       f32_4 %190 = OpLoad %171 
                                       f32_4 %191 = OpFMul %189 %190 
                                                      OpStore %171 %191 
                                       f32_4 %192 = OpLoad %65 
                                       f32_4 %193 = OpLoad %65 
                                       f32_4 %194 = OpFMul %192 %193 
                                       f32_4 %195 = OpLoad %171 
                                       f32_4 %196 = OpFAdd %194 %195 
                                                      OpStore %171 %196 
                                       f32_4 %197 = OpLoad %65 
                                       f32_4 %198 = OpLoad %47 
                                       f32_4 %199 = OpVectorShuffle %198 %198 0 0 0 0 
                                       f32_4 %200 = OpFMul %197 %199 
                                       f32_4 %201 = OpLoad %184 
                                       f32_4 %202 = OpFAdd %200 %201 
                                                      OpStore %65 %202 
                                       f32_4 %203 = OpLoad %9 
                                       f32_4 %204 = OpLoad %47 
                                       f32_4 %205 = OpVectorShuffle %204 %204 2 2 2 2 
                                       f32_4 %206 = OpFMul %203 %205 
                                       f32_4 %207 = OpLoad %65 
                                       f32_4 %208 = OpFAdd %206 %207 
                                                      OpStore %65 %208 
                                       f32_4 %209 = OpLoad %9 
                                       f32_4 %210 = OpLoad %9 
                                       f32_4 %211 = OpFMul %209 %210 
                                       f32_4 %212 = OpLoad %171 
                                       f32_4 %213 = OpFAdd %211 %212 
                                                      OpStore %9 %213 
                                       f32_4 %214 = OpLoad %9 
                                       f32_4 %217 = OpExtInst %1 40 %214 %216 
                                                      OpStore %9 %217 
                                       f32_4 %218 = OpLoad %9 
                                       f32_4 %219 = OpExtInst %1 32 %218 
                                                      OpStore %171 %219 
                                       f32_4 %220 = OpLoad %9 
                              Uniform f32_4* %221 = OpAccessChain %23 %49 
                                       f32_4 %222 = OpLoad %221 
                                       f32_4 %223 = OpFMul %220 %222 
                                       f32_4 %226 = OpFAdd %223 %225 
                                                      OpStore %9 %226 
                                       f32_4 %227 = OpLoad %9 
                                       f32_4 %228 = OpFDiv %225 %227 
                                                      OpStore %9 %228 
                                       f32_4 %229 = OpLoad %65 
                                       f32_4 %230 = OpLoad %171 
                                       f32_4 %231 = OpFMul %229 %230 
                                                      OpStore %65 %231 
                                       f32_4 %232 = OpLoad %65 
                                       f32_4 %235 = OpExtInst %1 40 %232 %234 
                                                      OpStore %65 %235 
                                       f32_4 %236 = OpLoad %9 
                                       f32_4 %237 = OpLoad %65 
                                       f32_4 %238 = OpFMul %236 %237 
                                                      OpStore %9 %238 
                                       f32_4 %239 = OpLoad %9 
                                       f32_3 %240 = OpVectorShuffle %239 %239 1 1 1 
                              Uniform f32_4* %242 = OpAccessChain %23 %241 %26 
                                       f32_4 %243 = OpLoad %242 
                                       f32_3 %244 = OpVectorShuffle %243 %243 0 1 2 
                                       f32_3 %245 = OpFMul %240 %244 
                                       f32_4 %246 = OpLoad %65 
                                       f32_4 %247 = OpVectorShuffle %246 %245 4 5 6 3 
                                                      OpStore %65 %247 
                              Uniform f32_4* %248 = OpAccessChain %23 %241 %31 
                                       f32_4 %249 = OpLoad %248 
                                       f32_3 %250 = OpVectorShuffle %249 %249 0 1 2 
                                       f32_4 %251 = OpLoad %9 
                                       f32_3 %252 = OpVectorShuffle %251 %251 0 0 0 
                                       f32_3 %253 = OpFMul %250 %252 
                                       f32_4 %254 = OpLoad %65 
                                       f32_3 %255 = OpVectorShuffle %254 %254 0 1 2 
                                       f32_3 %256 = OpFAdd %253 %255 
                                       f32_4 %257 = OpLoad %65 
                                       f32_4 %258 = OpVectorShuffle %257 %256 4 5 6 3 
                                                      OpStore %65 %258 
                              Uniform f32_4* %259 = OpAccessChain %23 %241 %39 
                                       f32_4 %260 = OpLoad %259 
                                       f32_3 %261 = OpVectorShuffle %260 %260 0 1 2 
                                       f32_4 %262 = OpLoad %9 
                                       f32_3 %263 = OpVectorShuffle %262 %262 2 2 2 
                                       f32_3 %264 = OpFMul %261 %263 
                                       f32_4 %265 = OpLoad %65 
                                       f32_3 %266 = OpVectorShuffle %265 %265 0 1 2 
                                       f32_3 %267 = OpFAdd %264 %266 
                                       f32_4 %268 = OpLoad %9 
                                       f32_4 %269 = OpVectorShuffle %268 %267 4 5 6 3 
                                                      OpStore %9 %269 
                              Uniform f32_4* %270 = OpAccessChain %23 %241 %49 
                                       f32_4 %271 = OpLoad %270 
                                       f32_3 %272 = OpVectorShuffle %271 %271 0 1 2 
                                       f32_4 %273 = OpLoad %9 
                                       f32_3 %274 = OpVectorShuffle %273 %273 3 3 3 
                                       f32_3 %275 = OpFMul %272 %274 
                                       f32_4 %276 = OpLoad %9 
                                       f32_3 %277 = OpVectorShuffle %276 %276 0 1 2 
                                       f32_3 %278 = OpFAdd %275 %277 
                                       f32_4 %279 = OpLoad %9 
                                       f32_4 %280 = OpVectorShuffle %279 %278 4 5 6 3 
                                                      OpStore %9 %280 
                                       f32_4 %281 = OpLoad %9 
                                       f32_3 %282 = OpVectorShuffle %281 %281 0 1 2 
                                       f32_3 %285 = OpFMul %282 %284 
                                       f32_3 %288 = OpFAdd %285 %287 
                                       f32_4 %289 = OpLoad %65 
                                       f32_4 %290 = OpVectorShuffle %289 %288 4 5 6 3 
                                                      OpStore %65 %290 
                                       f32_4 %291 = OpLoad %9 
                                       f32_3 %292 = OpVectorShuffle %291 %291 0 1 2 
                                       f32_4 %293 = OpLoad %65 
                                       f32_3 %294 = OpVectorShuffle %293 %293 0 1 2 
                                       f32_3 %295 = OpFMul %292 %294 
                                       f32_3 %298 = OpFAdd %295 %297 
                                       f32_4 %299 = OpLoad %65 
                                       f32_4 %300 = OpVectorShuffle %299 %298 4 5 6 3 
                                                      OpStore %65 %300 
                                Private f32* %303 = OpAccessChain %47 %86 
                                         f32 %304 = OpLoad %303 
                                Private f32* %305 = OpAccessChain %47 %86 
                                         f32 %306 = OpLoad %305 
                                         f32 %307 = OpFMul %304 %306 
                                Private f32* %308 = OpAccessChain %302 %127 
                                                      OpStore %308 %307 
                                Private f32* %309 = OpAccessChain %47 %127 
                                         f32 %310 = OpLoad %309 
                                Private f32* %311 = OpAccessChain %47 %127 
                                         f32 %312 = OpLoad %311 
                                         f32 %313 = OpFMul %310 %312 
                                Private f32* %314 = OpAccessChain %302 %127 
                                         f32 %315 = OpLoad %314 
                                         f32 %316 = OpFNegate %315 
                                         f32 %317 = OpFAdd %313 %316 
                                Private f32* %318 = OpAccessChain %302 %127 
                                                      OpStore %318 %317 
                                       f32_4 %320 = OpLoad %47 
                                       f32_4 %321 = OpVectorShuffle %320 %320 1 2 2 0 
                                       f32_4 %322 = OpLoad %47 
                                       f32_4 %323 = OpVectorShuffle %322 %322 0 1 2 2 
                                       f32_4 %324 = OpFMul %321 %323 
                                                      OpStore %319 %324 
                              Uniform f32_4* %327 = OpAccessChain %23 %326 
                                       f32_4 %328 = OpLoad %327 
                                       f32_4 %329 = OpLoad %319 
                                         f32 %330 = OpDot %328 %329 
                                Private f32* %331 = OpAccessChain %325 %127 
                                                      OpStore %331 %330 
                              Uniform f32_4* %333 = OpAccessChain %23 %332 
                                       f32_4 %334 = OpLoad %333 
                                       f32_4 %335 = OpLoad %319 
                                         f32 %336 = OpDot %334 %335 
                                Private f32* %337 = OpAccessChain %325 %86 
                                                      OpStore %337 %336 
                              Uniform f32_4* %339 = OpAccessChain %23 %338 
                                       f32_4 %340 = OpLoad %339 
                                       f32_4 %341 = OpLoad %319 
                                         f32 %342 = OpDot %340 %341 
                                Private f32* %343 = OpAccessChain %325 %141 
                                                      OpStore %343 %342 
                              Uniform f32_4* %345 = OpAccessChain %23 %344 
                                       f32_4 %346 = OpLoad %345 
                                       f32_3 %347 = OpVectorShuffle %346 %346 0 1 2 
                                       f32_3 %348 = OpLoad %302 
                                       f32_3 %349 = OpVectorShuffle %348 %348 0 0 0 
                                       f32_3 %350 = OpFMul %347 %349 
                                       f32_3 %351 = OpLoad %325 
                                       f32_3 %352 = OpFAdd %350 %351 
                                                      OpStore %302 %352 
                                       f32_4 %354 = OpLoad %9 
                                       f32_3 %355 = OpVectorShuffle %354 %354 0 1 2 
                                       f32_4 %356 = OpLoad %65 
                                       f32_3 %357 = OpVectorShuffle %356 %356 0 1 2 
                                       f32_3 %358 = OpFMul %355 %357 
                                       f32_3 %359 = OpLoad %302 
                                       f32_3 %360 = OpFAdd %358 %359 
                                                      OpStore vs_TEXCOORD3 %360 
                                                      OpStore vs_TEXCOORD5 %234 
                                                      OpStore vs_TEXCOORD6 %234 
                                 Output f32* %364 = OpAccessChain %90 %31 %86 
                                         f32 %365 = OpLoad %364 
                                         f32 %366 = OpFNegate %365 
                                 Output f32* %367 = OpAccessChain %90 %31 %86 
                                                      OpStore %367 %366 
                                                      OpReturn
                                                      OpFunctionEnd
; SPIR-V
; Version: 1.0
; Generator: Khronos Glslang Reference Front End; 6
; Bound: 483
; Schema: 0
                                                      OpCapability Shader 
                                               %1 = OpExtInstImport "GLSL.std.450" 
                                                      OpMemoryModel Logical GLSL450 
                                                      OpEntryPoint Fragment %4 "main" %11 %57 %404 %448 %472 
                                                      OpExecutionMode %4 OriginUpperLeft 
                                                      OpName vs_TEXCOORD2 "vs_TEXCOORD2" 
                                                      OpName vs_TEXCOORD1 "vs_TEXCOORD1" 
                                                      OpName vs_TEXCOORD0 "vs_TEXCOORD0" 
                                                      OpName vs_TEXCOORD3 "vs_TEXCOORD3" 
                                                      OpDecorate vs_TEXCOORD2 Location 11 
                                                      OpDecorate %17 ArrayStride 17 
                                                      OpDecorate %19 ArrayStride 19 
                                                      OpMemberDecorate %20 0 Offset 20 
                                                      OpMemberDecorate %20 1 RelaxedPrecision 
                                                      OpMemberDecorate %20 1 Offset 20 
                                                      OpMemberDecorate %20 2 RelaxedPrecision 
                                                      OpMemberDecorate %20 2 Offset 20 
                                                      OpMemberDecorate %20 3 RelaxedPrecision 
                                                      OpMemberDecorate %20 3 Offset 20 
                                                      OpMemberDecorate %20 4 RelaxedPrecision 
                                                      OpMemberDecorate %20 4 Offset 20 
                                                      OpMemberDecorate %20 5 Offset 20 
                                                      OpMemberDecorate %20 6 RelaxedPrecision 
                                                      OpMemberDecorate %20 6 Offset 20 
                                                      OpMemberDecorate %20 7 Offset 20 
                                                      OpMemberDecorate %20 8 Offset 20 
                                                      OpMemberDecorate %20 9 RelaxedPrecision 
                                                      OpMemberDecorate %20 9 Offset 20 
                                                      OpMemberDecorate %20 10 RelaxedPrecision 
                                                      OpMemberDecorate %20 10 Offset 20 
                                                      OpMemberDecorate %20 11 RelaxedPrecision 
                                                      OpMemberDecorate %20 11 Offset 20 
                                                      OpMemberDecorate %20 12 RelaxedPrecision 
                                                      OpMemberDecorate %20 12 Offset 20 
                                                      OpMemberDecorate %20 13 RelaxedPrecision 
                                                      OpMemberDecorate %20 13 Offset 20 
                                                      OpMemberDecorate %20 14 RelaxedPrecision 
                                                      OpMemberDecorate %20 14 Offset 20 
                                                      OpMemberDecorate %20 15 RelaxedPrecision 
                                                      OpMemberDecorate %20 15 Offset 20 
                                                      OpMemberDecorate %20 16 RelaxedPrecision 
                                                      OpMemberDecorate %20 16 Offset 20 
                                                      OpMemberDecorate %20 17 RelaxedPrecision 
                                                      OpMemberDecorate %20 17 Offset 20 
                                                      OpDecorate %20 Block 
                                                      OpDecorate %22 DescriptorSet 22 
                                                      OpDecorate %22 Binding 22 
                                                      OpDecorate %36 RelaxedPrecision 
                                                      OpDecorate %44 RelaxedPrecision 
                                                      OpDecorate %45 RelaxedPrecision 
                                                      OpDecorate %47 RelaxedPrecision 
                                                      OpDecorate %48 RelaxedPrecision 
                                                      OpDecorate %49 RelaxedPrecision 
                                                      OpDecorate %50 RelaxedPrecision 
                                                      OpDecorate %51 RelaxedPrecision 
                                                      OpDecorate %52 RelaxedPrecision 
                                                      OpDecorate %53 RelaxedPrecision 
                                                      OpDecorate %54 RelaxedPrecision 
                                                      OpDecorate %55 RelaxedPrecision 
                                                      OpDecorate %56 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD1 Location 57 
                                                      OpDecorate %61 RelaxedPrecision 
                                                      OpDecorate %62 RelaxedPrecision 
                                                      OpDecorate %63 RelaxedPrecision 
                                                      OpDecorate %64 RelaxedPrecision 
                                                      OpDecorate %68 RelaxedPrecision 
                                                      OpDecorate %69 RelaxedPrecision 
                                                      OpDecorate %70 RelaxedPrecision 
                                                      OpDecorate %73 RelaxedPrecision 
                                                      OpDecorate %75 RelaxedPrecision 
                                                      OpDecorate %76 RelaxedPrecision 
                                                      OpDecorate %77 RelaxedPrecision 
                                                      OpDecorate %81 RelaxedPrecision 
                                                      OpDecorate %82 RelaxedPrecision 
                                                      OpDecorate %85 RelaxedPrecision 
                                                      OpDecorate %89 RelaxedPrecision 
                                                      OpDecorate %90 RelaxedPrecision 
                                                      OpDecorate %94 RelaxedPrecision 
                                                      OpDecorate %96 RelaxedPrecision 
                                                      OpDecorate %100 RelaxedPrecision 
                                                      OpDecorate %106 RelaxedPrecision 
                                                      OpDecorate %107 RelaxedPrecision 
                                                      OpDecorate %109 RelaxedPrecision 
                                                      OpDecorate %110 RelaxedPrecision 
                                                      OpDecorate %116 RelaxedPrecision 
                                                      OpDecorate %117 RelaxedPrecision 
                                                      OpDecorate %119 RelaxedPrecision 
                                                      OpDecorate %121 RelaxedPrecision 
                                                      OpDecorate %122 RelaxedPrecision 
                                                      OpDecorate %123 RelaxedPrecision 
                                                      OpDecorate %126 RelaxedPrecision 
                                                      OpDecorate %127 RelaxedPrecision 
                                                      OpDecorate %128 RelaxedPrecision 
                                                      OpDecorate %129 RelaxedPrecision 
                                                      OpDecorate %202 RelaxedPrecision 
                                                      OpDecorate %205 RelaxedPrecision 
                                                      OpDecorate %252 DescriptorSet 252 
                                                      OpDecorate %252 Binding 252 
                                                      OpDecorate %256 DescriptorSet 256 
                                                      OpDecorate %256 Binding 256 
                                                      OpDecorate %265 RelaxedPrecision 
                                                      OpDecorate %266 RelaxedPrecision 
                                                      OpDecorate %267 RelaxedPrecision 
                                                      OpDecorate %271 RelaxedPrecision 
                                                      OpDecorate %274 RelaxedPrecision 
                                                      OpDecorate %278 RelaxedPrecision 
                                                      OpDecorate %279 RelaxedPrecision 
                                                      OpDecorate %280 RelaxedPrecision 
                                                      OpDecorate %283 RelaxedPrecision 
                                                      OpDecorate %286 RelaxedPrecision 
                                                      OpDecorate %291 RelaxedPrecision 
                                                      OpDecorate %296 RelaxedPrecision 
                                                      OpDecorate %297 RelaxedPrecision 
                                                      OpDecorate %300 RelaxedPrecision 
                                                      OpDecorate %301 RelaxedPrecision 
                                                      OpDecorate %302 RelaxedPrecision 
                                                      OpDecorate %305 RelaxedPrecision 
                                                      OpDecorate %309 RelaxedPrecision 
                                                      OpDecorate %310 RelaxedPrecision 
                                                      OpDecorate %311 RelaxedPrecision 
                                                      OpDecorate %314 RelaxedPrecision 
                                                      OpDecorate %315 RelaxedPrecision 
                                                      OpDecorate %316 RelaxedPrecision 
                                                      OpDecorate %317 RelaxedPrecision 
                                                      OpDecorate %318 RelaxedPrecision 
                                                      OpDecorate %320 RelaxedPrecision 
                                                      OpDecorate %321 RelaxedPrecision 
                                                      OpDecorate %324 RelaxedPrecision 
                                                      OpDecorate %325 RelaxedPrecision 
                                                      OpDecorate %327 RelaxedPrecision 
                                                      OpDecorate %328 RelaxedPrecision 
                                                      OpDecorate %329 RelaxedPrecision 
                                                      OpDecorate %330 RelaxedPrecision 
                                                      OpDecorate %331 RelaxedPrecision 
                                                      OpDecorate %332 RelaxedPrecision 
                                                      OpDecorate %333 RelaxedPrecision 
                                                      OpDecorate %334 RelaxedPrecision 
                                                      OpDecorate %335 RelaxedPrecision 
                                                      OpDecorate %337 RelaxedPrecision 
                                                      OpDecorate %338 RelaxedPrecision 
                                                      OpDecorate %341 RelaxedPrecision 
                                                      OpDecorate %342 RelaxedPrecision 
                                                      OpDecorate %345 RelaxedPrecision 
                                                      OpDecorate %346 RelaxedPrecision 
                                                      OpDecorate %347 RelaxedPrecision 
                                                      OpDecorate %349 RelaxedPrecision 
                                                      OpDecorate %351 RelaxedPrecision 
                                                      OpDecorate %352 RelaxedPrecision 
                                                      OpDecorate %355 RelaxedPrecision 
                                                      OpDecorate %356 RelaxedPrecision 
                                                      OpDecorate %357 RelaxedPrecision 
                                                      OpDecorate %360 RelaxedPrecision 
                                                      OpDecorate %362 RelaxedPrecision 
                                                      OpDecorate %363 RelaxedPrecision 
                                                      OpDecorate %367 RelaxedPrecision 
                                                      OpDecorate %368 RelaxedPrecision 
                                                      OpDecorate %369 RelaxedPrecision 
                                                      OpDecorate %372 RelaxedPrecision 
                                                      OpDecorate %373 RelaxedPrecision 
                                                      OpDecorate %374 RelaxedPrecision 
                                                      OpDecorate %376 RelaxedPrecision 
                                                      OpDecorate %377 RelaxedPrecision 
                                                      OpDecorate %378 RelaxedPrecision 
                                                      OpDecorate %379 RelaxedPrecision 
                                                      OpDecorate %381 RelaxedPrecision 
                                                      OpDecorate %382 RelaxedPrecision 
                                                      OpDecorate %383 RelaxedPrecision 
                                                      OpDecorate %384 RelaxedPrecision 
                                                      OpDecorate %385 RelaxedPrecision 
                                                      OpDecorate %387 RelaxedPrecision 
                                                      OpDecorate %388 RelaxedPrecision 
                                                      OpDecorate %389 RelaxedPrecision 
                                                      OpDecorate %390 RelaxedPrecision 
                                                      OpDecorate %391 RelaxedPrecision 
                                                      OpDecorate %392 RelaxedPrecision 
                                                      OpDecorate %393 RelaxedPrecision 
                                                      OpDecorate %394 RelaxedPrecision 
                                                      OpDecorate %395 RelaxedPrecision 
                                                      OpDecorate %396 RelaxedPrecision 
                                                      OpDecorate %397 RelaxedPrecision 
                                                      OpDecorate %397 DescriptorSet 397 
                                                      OpDecorate %397 Binding 397 
                                                      OpDecorate %398 RelaxedPrecision 
                                                      OpDecorate %399 RelaxedPrecision 
                                                      OpDecorate %399 DescriptorSet 399 
                                                      OpDecorate %399 Binding 399 
                                                      OpDecorate %400 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD0 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD0 Location 404 
                                                      OpDecorate %405 RelaxedPrecision 
                                                      OpDecorate %406 RelaxedPrecision 
                                                      OpDecorate %407 RelaxedPrecision 
                                                      OpDecorate %408 RelaxedPrecision 
                                                      OpDecorate %411 RelaxedPrecision 
                                                      OpDecorate %412 RelaxedPrecision 
                                                      OpDecorate %413 RelaxedPrecision 
                                                      OpDecorate %414 RelaxedPrecision 
                                                      OpDecorate %415 RelaxedPrecision 
                                                      OpDecorate %417 RelaxedPrecision 
                                                      OpDecorate %418 RelaxedPrecision 
                                                      OpDecorate %419 RelaxedPrecision 
                                                      OpDecorate %420 RelaxedPrecision 
                                                      OpDecorate %421 RelaxedPrecision 
                                                      OpDecorate %422 RelaxedPrecision 
                                                      OpDecorate %432 RelaxedPrecision 
                                                      OpDecorate %437 RelaxedPrecision 
                                                      OpDecorate %443 RelaxedPrecision 
                                                      OpDecorate %447 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD3 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD3 Location 448 
                                                      OpDecorate %449 RelaxedPrecision 
                                                      OpDecorate %450 RelaxedPrecision 
                                                      OpDecorate %451 RelaxedPrecision 
                                                      OpDecorate %453 RelaxedPrecision 
                                                      OpDecorate %454 RelaxedPrecision 
                                                      OpDecorate %455 RelaxedPrecision 
                                                      OpDecorate %472 RelaxedPrecision 
                                                      OpDecorate %472 Location 472 
                                                      OpDecorate %473 RelaxedPrecision 
                                               %2 = OpTypeVoid 
                                               %3 = OpTypeFunction %2 
                                               %6 = OpTypeFloat 32 
                                               %7 = OpTypeVector %6 3 
                                               %8 = OpTypePointer Private %7 
                                Private f32_3* %9 = OpVariable Private 
                                              %10 = OpTypePointer Input %7 
                        Input f32_3* vs_TEXCOORD2 = OpVariable Input 
                                              %14 = OpTypeVector %6 4 
                                              %15 = OpTypeInt 32 0 
                                          u32 %16 = OpConstant 16 
                                              %17 = OpTypeArray %14 %16 
                                          u32 %18 = OpConstant 4 
                                              %19 = OpTypeArray %14 %18 
                                              %20 = OpTypeStruct %7 %14 %14 %14 %14 %17 %14 %14 %19 %14 %14 %14 %6 %14 %14 %6 %6 %6 
                                              %21 = OpTypePointer Uniform %20 
Uniform struct {f32_3; f32_4; f32_4; f32_4; f32_4; f32_4[16]; f32_4; f32_4; f32_4[4]; f32_4; f32_4; f32_4; f32; f32_4; f32_4; f32; f32; f32;}* %22 = OpVariable Uniform 
                                              %23 = OpTypeInt 32 1 
                                          i32 %24 = OpConstant 0 
                                              %25 = OpTypePointer Uniform %7 
                                              %29 = OpTypePointer Private %6 
                                 Private f32* %30 = OpVariable Private 
                               Private f32_3* %36 = OpVariable Private 
                                          i32 %41 = OpConstant 1 
                                              %42 = OpTypePointer Uniform %14 
                                 Private f32* %47 = OpVariable Private 
                        Input f32_3* vs_TEXCOORD1 = OpVariable Input 
                               Private f32_3* %63 = OpVariable Private 
                                          u32 %71 = OpConstant 0 
                                          u32 %78 = OpConstant 1 
                                              %80 = OpTypeVector %6 2 
                                          f32 %83 = OpConstant 3.674022E-40 
                                        f32_2 %84 = OpConstantComposite %83 %83 
                                          i32 %91 = OpConstant 12 
                                              %92 = OpTypePointer Uniform %6 
                                          f32 %95 = OpConstant 3.674022E-40 
                                         i32 %104 = OpConstant 17 
                                         f32 %108 = OpConstant 3.674022E-40 
                                         f32 %113 = OpConstant 3.674022E-40 
                                Private f32* %119 = OpVariable Private 
                              Private f32_3* %124 = OpVariable Private 
                                         f32 %131 = OpConstant 3.674022E-40 
                                         f32 %143 = OpConstant 3.674022E-40 
                                         f32 %145 = OpConstant 3.674022E-40 
                                         i32 %155 = OpConstant 8 
                                         u32 %156 = OpConstant 2 
                                         i32 %163 = OpConstant 2 
                                         i32 %172 = OpConstant 7 
                                Private f32* %178 = OpVariable Private 
                                         u32 %189 = OpConstant 3 
                                         i32 %200 = OpConstant 6 
                                         i32 %214 = OpConstant 5 
                                         i32 %236 = OpConstant 3 
                                             %241 = OpTypePointer Function %7 
                                             %250 = OpTypeImage %6 Dim2D 0 0 0 1 Unknown 
                                             %251 = OpTypePointer UniformConstant %250 
        UniformConstant read_only Texture2D* %252 = OpVariable UniformConstant 
                                             %254 = OpTypeSampler 
                                             %255 = OpTypePointer UniformConstant %254 
                    UniformConstant sampler* %256 = OpVariable UniformConstant 
                                             %258 = OpTypeImage %6 Dim2D 1 0 0 1 Unknown 
                                             %259 = OpTypeSampledImage %258 
                                         i32 %294 = OpConstant 9 
                                         i32 %298 = OpConstant 10 
                                         i32 %307 = OpConstant 16 
                                         i32 %312 = OpConstant 15 
                              Private f32_3* %316 = OpVariable Private 
                                         i32 %365 = OpConstant 13 
                                         i32 %370 = OpConstant 14 
                              Private f32_3* %396 = OpVariable Private 
        UniformConstant read_only Texture2D* %397 = OpVariable UniformConstant 
                    UniformConstant sampler* %399 = OpVariable UniformConstant 
                                             %401 = OpTypeSampledImage %250 
                                             %403 = OpTypePointer Input %80 
                        Input f32_2* vs_TEXCOORD0 = OpVariable Input 
                                         i32 %409 = OpConstant 11 
                              Private f32_3* %414 = OpVariable Private 
                                             %425 = OpTypePointer Private %14 
                              Private f32_4* %426 = OpVariable Private 
                                         i32 %441 = OpConstant 4 
                        Input f32_3* vs_TEXCOORD3 = OpVariable Input 
                                       f32_3 %452 = OpConstantComposite %83 %83 %83 
                                         f32 %457 = OpConstant 3.674022E-40 
                                       f32_3 %458 = OpConstantComposite %457 %457 %457 
                                         f32 %463 = OpConstant 3.674022E-40 
                                       f32_3 %464 = OpConstantComposite %463 %463 %463 
                                         f32 %466 = OpConstant 3.674022E-40 
                                       f32_3 %467 = OpConstantComposite %466 %466 %466 
                                             %471 = OpTypePointer Output %14 
                               Output f32_4* %472 = OpVariable Output 
                                             %480 = OpTypePointer Output %6 
                                          void %4 = OpFunction None %3 
                                               %5 = OpLabel 
                             Function f32_3* %242 = OpVariable Function 
                                        f32_3 %12 = OpLoad vs_TEXCOORD2 
                                        f32_3 %13 = OpFNegate %12 
                               Uniform f32_3* %26 = OpAccessChain %22 %24 
                                        f32_3 %27 = OpLoad %26 
                                        f32_3 %28 = OpFAdd %13 %27 
                                                      OpStore %9 %28 
                                        f32_3 %31 = OpLoad %9 
                                        f32_3 %32 = OpLoad %9 
                                          f32 %33 = OpDot %31 %32 
                                                      OpStore %30 %33 
                                          f32 %34 = OpLoad %30 
                                          f32 %35 = OpExtInst %1 32 %34 
                                                      OpStore %30 %35 
                                        f32_3 %37 = OpLoad %9 
                                          f32 %38 = OpLoad %30 
                                        f32_3 %39 = OpCompositeConstruct %38 %38 %38 
                                        f32_3 %40 = OpFMul %37 %39 
                               Uniform f32_4* %43 = OpAccessChain %22 %41 
                                        f32_4 %44 = OpLoad %43 
                                        f32_3 %45 = OpVectorShuffle %44 %44 0 1 2 
                                        f32_3 %46 = OpFAdd %40 %45 
                                                      OpStore %36 %46 
                                        f32_3 %48 = OpLoad %36 
                                        f32_3 %49 = OpLoad %36 
                                          f32 %50 = OpDot %48 %49 
                                                      OpStore %47 %50 
                                          f32 %51 = OpLoad %47 
                                          f32 %52 = OpExtInst %1 32 %51 
                                                      OpStore %47 %52 
                                          f32 %53 = OpLoad %47 
                                        f32_3 %54 = OpCompositeConstruct %53 %53 %53 
                                        f32_3 %55 = OpLoad %36 
                                        f32_3 %56 = OpFMul %54 %55 
                                                      OpStore %36 %56 
                                        f32_3 %58 = OpLoad vs_TEXCOORD1 
                                        f32_3 %59 = OpLoad vs_TEXCOORD1 
                                          f32 %60 = OpDot %58 %59 
                                                      OpStore %47 %60 
                                          f32 %61 = OpLoad %47 
                                          f32 %62 = OpExtInst %1 32 %61 
                                                      OpStore %47 %62 
                                          f32 %64 = OpLoad %47 
                                        f32_3 %65 = OpCompositeConstruct %64 %64 %64 
                                        f32_3 %66 = OpLoad vs_TEXCOORD1 
                                        f32_3 %67 = OpFMul %65 %66 
                                                      OpStore %63 %67 
                                        f32_3 %68 = OpLoad %63 
                                        f32_3 %69 = OpLoad %36 
                                          f32 %70 = OpDot %68 %69 
                                 Private f32* %72 = OpAccessChain %36 %71 
                                                      OpStore %72 %70 
                                        f32_3 %73 = OpLoad %63 
                               Uniform f32_4* %74 = OpAccessChain %22 %41 
                                        f32_4 %75 = OpLoad %74 
                                        f32_3 %76 = OpVectorShuffle %75 %75 0 1 2 
                                          f32 %77 = OpDot %73 %76 
                                 Private f32* %79 = OpAccessChain %36 %78 
                                                      OpStore %79 %77 
                                        f32_3 %81 = OpLoad %36 
                                        f32_2 %82 = OpVectorShuffle %81 %81 0 1 
                                        f32_2 %85 = OpExtInst %1 40 %82 %84 
                                        f32_3 %86 = OpLoad %36 
                                        f32_3 %87 = OpVectorShuffle %86 %85 3 4 2 
                                                      OpStore %36 %87 
                                 Private f32* %88 = OpAccessChain %36 %71 
                                          f32 %89 = OpLoad %88 
                                          f32 %90 = OpExtInst %1 30 %89 
                                                      OpStore %30 %90 
                                 Uniform f32* %93 = OpAccessChain %22 %91 
                                          f32 %94 = OpLoad %93 
                                          f32 %96 = OpFMul %94 %95 
                                 Private f32* %97 = OpAccessChain %36 %71 
                                                      OpStore %97 %96 
                                          f32 %98 = OpLoad %30 
                                 Private f32* %99 = OpAccessChain %36 %71 
                                         f32 %100 = OpLoad %99 
                                         f32 %101 = OpFMul %98 %100 
                                                      OpStore %30 %101 
                                         f32 %102 = OpLoad %30 
                                         f32 %103 = OpExtInst %1 29 %102 
                                                      OpStore %30 %103 
                                Uniform f32* %105 = OpAccessChain %22 %104 
                                         f32 %106 = OpLoad %105 
                                         f32 %107 = OpFNegate %106 
                                         f32 %109 = OpFMul %107 %108 
                                         f32 %110 = OpFAdd %109 %108 
                                Private f32* %111 = OpAccessChain %36 %71 
                                                      OpStore %111 %110 
                                         f32 %112 = OpLoad %30 
                                         f32 %114 = OpFMul %112 %113 
                                Private f32* %115 = OpAccessChain %36 %71 
                                         f32 %116 = OpLoad %115 
                                         f32 %117 = OpFNegate %116 
                                         f32 %118 = OpFAdd %114 %117 
                                                      OpStore %30 %118 
                                Uniform f32* %120 = OpAccessChain %22 %104 
                                         f32 %121 = OpLoad %120 
                                         f32 %122 = OpFMul %121 %108 
                                         f32 %123 = OpFAdd %122 %108 
                                                      OpStore %119 %123 
                                Private f32* %125 = OpAccessChain %36 %71 
                                         f32 %126 = OpLoad %125 
                                         f32 %127 = OpFNegate %126 
                                         f32 %128 = OpLoad %119 
                                         f32 %129 = OpFAdd %127 %128 
                                Private f32* %130 = OpAccessChain %124 %71 
                                                      OpStore %130 %129 
                                Private f32* %132 = OpAccessChain %124 %71 
                                         f32 %133 = OpLoad %132 
                                         f32 %134 = OpFDiv %131 %133 
                                Private f32* %135 = OpAccessChain %124 %71 
                                                      OpStore %135 %134 
                                         f32 %136 = OpLoad %30 
                                Private f32* %137 = OpAccessChain %124 %71 
                                         f32 %138 = OpLoad %137 
                                         f32 %139 = OpFMul %136 %138 
                                                      OpStore %30 %139 
                                         f32 %140 = OpLoad %30 
                                         f32 %141 = OpExtInst %1 43 %140 %83 %131 
                                                      OpStore %30 %141 
                                         f32 %142 = OpLoad %30 
                                         f32 %144 = OpFMul %142 %143 
                                         f32 %146 = OpFAdd %144 %145 
                                Private f32* %147 = OpAccessChain %124 %71 
                                                      OpStore %147 %146 
                                         f32 %148 = OpLoad %30 
                                         f32 %149 = OpLoad %30 
                                         f32 %150 = OpFMul %148 %149 
                                                      OpStore %30 %150 
                                         f32 %151 = OpLoad %30 
                                Private f32* %152 = OpAccessChain %124 %71 
                                         f32 %153 = OpLoad %152 
                                         f32 %154 = OpFMul %151 %153 
                                                      OpStore %30 %154 
                                Uniform f32* %157 = OpAccessChain %22 %155 %24 %156 
                                         f32 %158 = OpLoad %157 
                                Private f32* %159 = OpAccessChain %124 %71 
                                                      OpStore %159 %158 
                                Uniform f32* %160 = OpAccessChain %22 %155 %41 %156 
                                         f32 %161 = OpLoad %160 
                                Private f32* %162 = OpAccessChain %124 %78 
                                                      OpStore %162 %161 
                                Uniform f32* %164 = OpAccessChain %22 %155 %163 %156 
                                         f32 %165 = OpLoad %164 
                                Private f32* %166 = OpAccessChain %124 %156 
                                                      OpStore %166 %165 
                                       f32_3 %167 = OpLoad %9 
                                       f32_3 %168 = OpLoad %124 
                                         f32 %169 = OpDot %167 %168 
                                Private f32* %170 = OpAccessChain %9 %71 
                                                      OpStore %170 %169 
                                       f32_3 %171 = OpLoad vs_TEXCOORD2 
                              Uniform f32_4* %173 = OpAccessChain %22 %172 
                                       f32_4 %174 = OpLoad %173 
                                       f32_3 %175 = OpVectorShuffle %174 %174 0 1 2 
                                       f32_3 %176 = OpFNegate %175 
                                       f32_3 %177 = OpFAdd %171 %176 
                                                      OpStore %124 %177 
                                       f32_3 %179 = OpLoad %124 
                                       f32_3 %180 = OpLoad %124 
                                         f32 %181 = OpDot %179 %180 
                                                      OpStore %178 %181 
                                         f32 %182 = OpLoad %178 
                                         f32 %183 = OpExtInst %1 31 %182 
                                                      OpStore %178 %183 
                                Private f32* %184 = OpAccessChain %9 %71 
                                         f32 %185 = OpLoad %184 
                                         f32 %186 = OpFNegate %185 
                                         f32 %187 = OpLoad %178 
                                         f32 %188 = OpFAdd %186 %187 
                                                      OpStore %178 %188 
                                Uniform f32* %190 = OpAccessChain %22 %172 %189 
                                         f32 %191 = OpLoad %190 
                                         f32 %192 = OpLoad %178 
                                         f32 %193 = OpFMul %191 %192 
                                Private f32* %194 = OpAccessChain %9 %71 
                                         f32 %195 = OpLoad %194 
                                         f32 %196 = OpFAdd %193 %195 
                                Private f32* %197 = OpAccessChain %9 %71 
                                                      OpStore %197 %196 
                                Private f32* %198 = OpAccessChain %9 %71 
                                         f32 %199 = OpLoad %198 
                                Uniform f32* %201 = OpAccessChain %22 %200 %156 
                                         f32 %202 = OpLoad %201 
                                         f32 %203 = OpFMul %199 %202 
                                Uniform f32* %204 = OpAccessChain %22 %200 %189 
                                         f32 %205 = OpLoad %204 
                                         f32 %206 = OpFAdd %203 %205 
                                Private f32* %207 = OpAccessChain %9 %71 
                                                      OpStore %207 %206 
                                Private f32* %208 = OpAccessChain %9 %71 
                                         f32 %209 = OpLoad %208 
                                         f32 %210 = OpExtInst %1 43 %209 %83 %131 
                                Private f32* %211 = OpAccessChain %9 %71 
                                                      OpStore %211 %210 
                                       f32_3 %212 = OpLoad vs_TEXCOORD2 
                                       f32_3 %213 = OpVectorShuffle %212 %212 1 1 1 
                              Uniform f32_4* %215 = OpAccessChain %22 %214 %41 
                                       f32_4 %216 = OpLoad %215 
                                       f32_3 %217 = OpVectorShuffle %216 %216 0 1 2 
                                       f32_3 %218 = OpFMul %213 %217 
                                                      OpStore %124 %218 
                              Uniform f32_4* %219 = OpAccessChain %22 %214 %24 
                                       f32_4 %220 = OpLoad %219 
                                       f32_3 %221 = OpVectorShuffle %220 %220 0 1 2 
                                       f32_3 %222 = OpLoad vs_TEXCOORD2 
                                       f32_3 %223 = OpVectorShuffle %222 %222 0 0 0 
                                       f32_3 %224 = OpFMul %221 %223 
                                       f32_3 %225 = OpLoad %124 
                                       f32_3 %226 = OpFAdd %224 %225 
                                                      OpStore %124 %226 
                              Uniform f32_4* %227 = OpAccessChain %22 %214 %163 
                                       f32_4 %228 = OpLoad %227 
                                       f32_3 %229 = OpVectorShuffle %228 %228 0 1 2 
                                       f32_3 %230 = OpLoad vs_TEXCOORD2 
                                       f32_3 %231 = OpVectorShuffle %230 %230 2 2 2 
                                       f32_3 %232 = OpFMul %229 %231 
                                       f32_3 %233 = OpLoad %124 
                                       f32_3 %234 = OpFAdd %232 %233 
                                                      OpStore %124 %234 
                                       f32_3 %235 = OpLoad %124 
                              Uniform f32_4* %237 = OpAccessChain %22 %214 %236 
                                       f32_4 %238 = OpLoad %237 
                                       f32_3 %239 = OpVectorShuffle %238 %238 0 1 2 
                                       f32_3 %240 = OpFAdd %235 %239 
                                                      OpStore %124 %240 
                                       f32_3 %243 = OpLoad %124 
                                       f32_2 %244 = OpVectorShuffle %243 %243 0 1 
                                Private f32* %245 = OpAccessChain %124 %156 
                                         f32 %246 = OpLoad %245 
                                         f32 %247 = OpCompositeExtract %244 0 
                                         f32 %248 = OpCompositeExtract %244 1 
                                       f32_3 %249 = OpCompositeConstruct %247 %248 %246 
                                                      OpStore %242 %249 
                         read_only Texture2D %253 = OpLoad %252 
                                     sampler %257 = OpLoad %256 
                  read_only Texture2DSampled %260 = OpSampledImage %253 %257 
                                       f32_3 %261 = OpLoad %242 
                                         f32 %262 = OpCompositeExtract %261 2 
                                         f32 %263 = OpImageSampleDrefExplicitLod %260 %261 %262 Lod %6 
                                                      OpStore %178 %263 
                                Uniform f32* %264 = OpAccessChain %22 %200 %71 
                                         f32 %265 = OpLoad %264 
                                         f32 %266 = OpFNegate %265 
                                         f32 %267 = OpFAdd %266 %131 
                                Private f32* %268 = OpAccessChain %36 %71 
                                                      OpStore %268 %267 
                                         f32 %269 = OpLoad %178 
                                Private f32* %270 = OpAccessChain %36 %71 
                                         f32 %271 = OpLoad %270 
                                         f32 %272 = OpFMul %269 %271 
                                Uniform f32* %273 = OpAccessChain %22 %200 %71 
                                         f32 %274 = OpLoad %273 
                                         f32 %275 = OpFAdd %272 %274 
                                Private f32* %276 = OpAccessChain %36 %71 
                                                      OpStore %276 %275 
                                Private f32* %277 = OpAccessChain %36 %71 
                                         f32 %278 = OpLoad %277 
                                         f32 %279 = OpFNegate %278 
                                         f32 %280 = OpFAdd %279 %131 
                                                      OpStore %119 %280 
                                Private f32* %281 = OpAccessChain %9 %71 
                                         f32 %282 = OpLoad %281 
                                         f32 %283 = OpLoad %119 
                                         f32 %284 = OpFMul %282 %283 
                                Private f32* %285 = OpAccessChain %36 %71 
                                         f32 %286 = OpLoad %285 
                                         f32 %287 = OpFAdd %284 %286 
                                Private f32* %288 = OpAccessChain %36 %71 
                                                      OpStore %288 %287 
                                         f32 %289 = OpLoad %30 
                                Private f32* %290 = OpAccessChain %36 %71 
                                         f32 %291 = OpLoad %290 
                                         f32 %292 = OpFMul %289 %291 
                                Private f32* %293 = OpAccessChain %9 %71 
                                                      OpStore %293 %292 
                              Uniform f32_4* %295 = OpAccessChain %22 %294 
                                       f32_4 %296 = OpLoad %295 
                                       f32_3 %297 = OpVectorShuffle %296 %296 0 1 2 
                              Uniform f32_4* %299 = OpAccessChain %22 %298 
                                       f32_4 %300 = OpLoad %299 
                                       f32_3 %301 = OpVectorShuffle %300 %300 0 1 2 
                                       f32_3 %302 = OpFMul %297 %301 
                                                      OpStore %63 %302 
                                       f32_3 %303 = OpLoad %9 
                                       f32_3 %304 = OpVectorShuffle %303 %303 0 0 0 
                                       f32_3 %305 = OpLoad %63 
                                       f32_3 %306 = OpFMul %304 %305 
                                                      OpStore %9 %306 
                                Uniform f32* %308 = OpAccessChain %22 %307 
                                         f32 %309 = OpLoad %308 
                                         f32 %310 = OpFNegate %309 
                                         f32 %311 = OpFMul %310 %108 
                                Uniform f32* %313 = OpAccessChain %22 %312 
                                         f32 %314 = OpLoad %313 
                                         f32 %315 = OpFAdd %311 %314 
                                                      OpStore %119 %315 
                                         f32 %317 = OpLoad %119 
                                         f32 %318 = OpFNegate %317 
                                Private f32* %319 = OpAccessChain %36 %78 
                                         f32 %320 = OpLoad %319 
                                         f32 %321 = OpFAdd %318 %320 
                                Private f32* %322 = OpAccessChain %316 %71 
                                                      OpStore %322 %321 
                                Uniform f32* %323 = OpAccessChain %22 %307 
                                         f32 %324 = OpLoad %323 
                                         f32 %325 = OpFMul %324 %108 
                                Uniform f32* %326 = OpAccessChain %22 %312 
                                         f32 %327 = OpLoad %326 
                                         f32 %328 = OpFAdd %325 %327 
                                                      OpStore %47 %328 
                                         f32 %329 = OpLoad %119 
                                         f32 %330 = OpFNegate %329 
                                         f32 %331 = OpLoad %47 
                                         f32 %332 = OpFAdd %330 %331 
                                                      OpStore %119 %332 
                                         f32 %333 = OpLoad %119 
                                         f32 %334 = OpFDiv %131 %333 
                                                      OpStore %119 %334 
                                         f32 %335 = OpLoad %119 
                                Private f32* %336 = OpAccessChain %316 %71 
                                         f32 %337 = OpLoad %336 
                                         f32 %338 = OpFMul %335 %337 
                                Private f32* %339 = OpAccessChain %316 %71 
                                                      OpStore %339 %338 
                                Private f32* %340 = OpAccessChain %316 %71 
                                         f32 %341 = OpLoad %340 
                                         f32 %342 = OpExtInst %1 43 %341 %83 %131 
                                Private f32* %343 = OpAccessChain %316 %71 
                                                      OpStore %343 %342 
                                Private f32* %344 = OpAccessChain %316 %71 
                                         f32 %345 = OpLoad %344 
                                         f32 %346 = OpFMul %345 %143 
                                         f32 %347 = OpFAdd %346 %145 
                                                      OpStore %119 %347 
                                Private f32* %348 = OpAccessChain %316 %71 
                                         f32 %349 = OpLoad %348 
                                Private f32* %350 = OpAccessChain %316 %71 
                                         f32 %351 = OpLoad %350 
                                         f32 %352 = OpFMul %349 %351 
                                Private f32* %353 = OpAccessChain %316 %71 
                                                      OpStore %353 %352 
                                Private f32* %354 = OpAccessChain %316 %71 
                                         f32 %355 = OpLoad %354 
                                         f32 %356 = OpLoad %119 
                                         f32 %357 = OpFMul %355 %356 
                                Private f32* %358 = OpAccessChain %316 %71 
                                                      OpStore %358 %357 
                                Private f32* %359 = OpAccessChain %36 %71 
                                         f32 %360 = OpLoad %359 
                                Private f32* %361 = OpAccessChain %316 %71 
                                         f32 %362 = OpLoad %361 
                                         f32 %363 = OpFMul %360 %362 
                                Private f32* %364 = OpAccessChain %36 %71 
                                                      OpStore %364 %363 
                              Uniform f32_4* %366 = OpAccessChain %22 %365 
                                       f32_4 %367 = OpLoad %366 
                                       f32_3 %368 = OpVectorShuffle %367 %367 0 1 2 
                                       f32_3 %369 = OpFNegate %368 
                              Uniform f32_4* %371 = OpAccessChain %22 %370 
                                       f32_4 %372 = OpLoad %371 
                                       f32_3 %373 = OpVectorShuffle %372 %372 0 1 2 
                                       f32_3 %374 = OpFAdd %369 %373 
                                                      OpStore %316 %374 
                              Uniform f32_4* %375 = OpAccessChain %22 %370 
                                       f32_4 %376 = OpLoad %375 
                                       f32_3 %377 = OpVectorShuffle %376 %376 3 3 3 
                                       f32_3 %378 = OpLoad %316 
                                       f32_3 %379 = OpFMul %377 %378 
                              Uniform f32_4* %380 = OpAccessChain %22 %365 
                                       f32_4 %381 = OpLoad %380 
                                       f32_3 %382 = OpVectorShuffle %381 %381 0 1 2 
                                       f32_3 %383 = OpFAdd %379 %382 
                                                      OpStore %316 %383 
                                       f32_3 %384 = OpLoad %316 
                                       f32_3 %385 = OpFNegate %384 
                              Uniform f32_4* %386 = OpAccessChain %22 %365 
                                       f32_4 %387 = OpLoad %386 
                                       f32_3 %388 = OpVectorShuffle %387 %387 0 1 2 
                                       f32_3 %389 = OpFAdd %385 %388 
                                                      OpStore %63 %389 
                                       f32_3 %390 = OpLoad %36 
                                       f32_3 %391 = OpVectorShuffle %390 %390 0 0 0 
                                       f32_3 %392 = OpLoad %63 
                                       f32_3 %393 = OpFMul %391 %392 
                                       f32_3 %394 = OpLoad %316 
                                       f32_3 %395 = OpFAdd %393 %394 
                                                      OpStore %36 %395 
                         read_only Texture2D %398 = OpLoad %397 
                                     sampler %400 = OpLoad %399 
                  read_only Texture2DSampled %402 = OpSampledImage %398 %400 
                                       f32_2 %405 = OpLoad vs_TEXCOORD0 
                                       f32_4 %406 = OpImageSampleImplicitLod %402 %405 
                                       f32_3 %407 = OpVectorShuffle %406 %406 0 1 2 
                                                      OpStore %396 %407 
                                       f32_3 %408 = OpLoad %396 
                              Uniform f32_4* %410 = OpAccessChain %22 %409 
                                       f32_4 %411 = OpLoad %410 
                                       f32_3 %412 = OpVectorShuffle %411 %411 0 1 2 
                                       f32_3 %413 = OpFMul %408 %412 
                                                      OpStore %63 %413 
                                       f32_3 %415 = OpLoad %63 
                              Uniform f32_4* %416 = OpAccessChain %22 %294 
                                       f32_4 %417 = OpLoad %416 
                                       f32_3 %418 = OpVectorShuffle %417 %417 0 1 2 
                                       f32_3 %419 = OpFMul %415 %418 
                                                      OpStore %414 %419 
                                       f32_3 %420 = OpLoad %414 
                                       f32_3 %421 = OpLoad %36 
                                       f32_3 %422 = OpFMul %420 %421 
                                       f32_3 %423 = OpLoad %9 
                                       f32_3 %424 = OpFAdd %422 %423 
                                                      OpStore %9 %424 
                                       f32_3 %427 = OpLoad vs_TEXCOORD1 
                                       f32_4 %428 = OpLoad %426 
                                       f32_4 %429 = OpVectorShuffle %428 %427 4 5 6 3 
                                                      OpStore %426 %429 
                                Private f32* %430 = OpAccessChain %426 %189 
                                                      OpStore %430 %131 
                              Uniform f32_4* %431 = OpAccessChain %22 %163 
                                       f32_4 %432 = OpLoad %431 
                                       f32_4 %433 = OpLoad %426 
                                         f32 %434 = OpDot %432 %433 
                                Private f32* %435 = OpAccessChain %414 %71 
                                                      OpStore %435 %434 
                              Uniform f32_4* %436 = OpAccessChain %22 %236 
                                       f32_4 %437 = OpLoad %436 
                                       f32_4 %438 = OpLoad %426 
                                         f32 %439 = OpDot %437 %438 
                                Private f32* %440 = OpAccessChain %414 %78 
                                                      OpStore %440 %439 
                              Uniform f32_4* %442 = OpAccessChain %22 %441 
                                       f32_4 %443 = OpLoad %442 
                                       f32_4 %444 = OpLoad %426 
                                         f32 %445 = OpDot %443 %444 
                                Private f32* %446 = OpAccessChain %414 %156 
                                                      OpStore %446 %445 
                                       f32_3 %447 = OpLoad %414 
                                       f32_3 %449 = OpLoad vs_TEXCOORD3 
                                       f32_3 %450 = OpFAdd %447 %449 
                                                      OpStore %414 %450 
                                       f32_3 %451 = OpLoad %414 
                                       f32_3 %453 = OpExtInst %1 40 %451 %452 
                                                      OpStore %414 %453 
                                       f32_3 %454 = OpLoad %414 
                                       f32_3 %455 = OpExtInst %1 30 %454 
                                                      OpStore %124 %455 
                                       f32_3 %456 = OpLoad %124 
                                       f32_3 %459 = OpFMul %456 %458 
                                                      OpStore %124 %459 
                                       f32_3 %460 = OpLoad %124 
                                       f32_3 %461 = OpExtInst %1 29 %460 
                                                      OpStore %124 %461 
                                       f32_3 %462 = OpLoad %124 
                                       f32_3 %465 = OpFMul %462 %464 
                                       f32_3 %468 = OpFAdd %465 %467 
                                                      OpStore %124 %468 
                                       f32_3 %469 = OpLoad %124 
                                       f32_3 %470 = OpExtInst %1 40 %469 %452 
                                                      OpStore %124 %470 
                                       f32_3 %473 = OpLoad %63 
                                       f32_3 %474 = OpLoad %124 
                                       f32_3 %475 = OpFMul %473 %474 
                                       f32_3 %476 = OpLoad %9 
                                       f32_3 %477 = OpFAdd %475 %476 
                                       f32_4 %478 = OpLoad %472 
                                       f32_4 %479 = OpVectorShuffle %478 %477 4 5 6 3 
                                                      OpStore %472 %479 
                                 Output f32* %481 = OpAccessChain %472 %189 
                                                      OpStore %481 %131 
                                                      OpReturn
                                                      OpFunctionEnd
"
}
SubProgram "vulkan hw_tier02 " {
Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "SHADOWS_SCREEN" "VERTEXLIGHT_ON" }
"; SPIR-V
; Version: 1.0
; Generator: Khronos Glslang Reference Front End; 6
; Bound: 369
; Schema: 0
                                                      OpCapability Shader 
                                               %1 = OpExtInstImport "GLSL.std.450" 
                                                      OpMemoryModel Logical GLSL450 
                                                      OpEntryPoint Vertex %4 "main" %11 %90 %100 %116 %120 %159 %162 %353 %361 %362 
                                                      OpName vs_TEXCOORD0 "vs_TEXCOORD0" 
                                                      OpName vs_TEXCOORD1 "vs_TEXCOORD1" 
                                                      OpName vs_TEXCOORD2 "vs_TEXCOORD2" 
                                                      OpName vs_TEXCOORD3 "vs_TEXCOORD3" 
                                                      OpName vs_TEXCOORD5 "vs_TEXCOORD5" 
                                                      OpName vs_TEXCOORD6 "vs_TEXCOORD6" 
                                                      OpDecorate %11 Location 11 
                                                      OpDecorate %16 ArrayStride 16 
                                                      OpDecorate %18 ArrayStride 18 
                                                      OpDecorate %19 ArrayStride 19 
                                                      OpDecorate %20 ArrayStride 20 
                                                      OpMemberDecorate %21 0 Offset 21 
                                                      OpMemberDecorate %21 1 Offset 21 
                                                      OpMemberDecorate %21 2 Offset 21 
                                                      OpMemberDecorate %21 3 RelaxedPrecision 
                                                      OpMemberDecorate %21 3 Offset 21 
                                                      OpMemberDecorate %21 4 RelaxedPrecision 
                                                      OpMemberDecorate %21 4 Offset 21 
                                                      OpMemberDecorate %21 5 RelaxedPrecision 
                                                      OpMemberDecorate %21 5 Offset 21 
                                                      OpMemberDecorate %21 6 RelaxedPrecision 
                                                      OpMemberDecorate %21 6 Offset 21 
                                                      OpMemberDecorate %21 7 RelaxedPrecision 
                                                      OpMemberDecorate %21 7 Offset 21 
                                                      OpMemberDecorate %21 8 RelaxedPrecision 
                                                      OpMemberDecorate %21 8 Offset 21 
                                                      OpMemberDecorate %21 9 Offset 21 
                                                      OpMemberDecorate %21 10 Offset 21 
                                                      OpMemberDecorate %21 11 Offset 21 
                                                      OpMemberDecorate %21 12 Offset 21 
                                                      OpDecorate %21 Block 
                                                      OpDecorate %23 DescriptorSet 23 
                                                      OpDecorate %23 Binding 23 
                                                      OpMemberDecorate %88 0 BuiltIn 88 
                                                      OpMemberDecorate %88 1 BuiltIn 88 
                                                      OpMemberDecorate %88 2 BuiltIn 88 
                                                      OpDecorate %88 Block 
                                                      OpDecorate %100 Location 100 
                                                      OpDecorate vs_TEXCOORD0 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD0 Location 116 
                                                      OpDecorate %120 Location 120 
                                                      OpDecorate vs_TEXCOORD1 Location 159 
                                                      OpDecorate vs_TEXCOORD2 Location 162 
                                                      OpDecorate %222 RelaxedPrecision 
                                                      OpDecorate %243 RelaxedPrecision 
                                                      OpDecorate %244 RelaxedPrecision 
                                                      OpDecorate %249 RelaxedPrecision 
                                                      OpDecorate %250 RelaxedPrecision 
                                                      OpDecorate %260 RelaxedPrecision 
                                                      OpDecorate %261 RelaxedPrecision 
                                                      OpDecorate %271 RelaxedPrecision 
                                                      OpDecorate %272 RelaxedPrecision 
                                                      OpDecorate %302 RelaxedPrecision 
                                                      OpDecorate %315 RelaxedPrecision 
                                                      OpDecorate %316 RelaxedPrecision 
                                                      OpDecorate %319 RelaxedPrecision 
                                                      OpDecorate %325 RelaxedPrecision 
                                                      OpDecorate %328 RelaxedPrecision 
                                                      OpDecorate %329 RelaxedPrecision 
                                                      OpDecorate %330 RelaxedPrecision 
                                                      OpDecorate %334 RelaxedPrecision 
                                                      OpDecorate %335 RelaxedPrecision 
                                                      OpDecorate %336 RelaxedPrecision 
                                                      OpDecorate %340 RelaxedPrecision 
                                                      OpDecorate %341 RelaxedPrecision 
                                                      OpDecorate %342 RelaxedPrecision 
                                                      OpDecorate %346 RelaxedPrecision 
                                                      OpDecorate %347 RelaxedPrecision 
                                                      OpDecorate %348 RelaxedPrecision 
                                                      OpDecorate %349 RelaxedPrecision 
                                                      OpDecorate %350 RelaxedPrecision 
                                                      OpDecorate %351 RelaxedPrecision 
                                                      OpDecorate %352 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD3 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD3 Location 353 
                                                      OpDecorate %359 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD5 Location 361 
                                                      OpDecorate vs_TEXCOORD6 Location 362 
                                               %2 = OpTypeVoid 
                                               %3 = OpTypeFunction %2 
                                               %6 = OpTypeFloat 32 
                                               %7 = OpTypeVector %6 4 
                                               %8 = OpTypePointer Private %7 
                                Private f32_4* %9 = OpVariable Private 
                                              %10 = OpTypePointer Input %7 
                                 Input f32_4* %11 = OpVariable Input 
                                              %14 = OpTypeInt 32 0 
                                          u32 %15 = OpConstant 8 
                                              %16 = OpTypeArray %7 %15 
                                          u32 %17 = OpConstant 4 
                                              %18 = OpTypeArray %7 %17 
                                              %19 = OpTypeArray %7 %17 
                                              %20 = OpTypeArray %7 %17 
                                              %21 = OpTypeStruct %7 %7 %7 %7 %16 %7 %7 %7 %7 %18 %19 %20 %7 
                                              %22 = OpTypePointer Uniform %21 
Uniform struct {f32_4; f32_4; f32_4; f32_4; f32_4[8]; f32_4; f32_4; f32_4; f32_4; f32_4[4]; f32_4[4]; f32_4[4]; f32_4;}* %23 = OpVariable Uniform 
                                              %24 = OpTypeInt 32 1 
                                          i32 %25 = OpConstant 9 
                                          i32 %26 = OpConstant 1 
                                              %27 = OpTypePointer Uniform %7 
                                          i32 %31 = OpConstant 0 
                                          i32 %39 = OpConstant 2 
                               Private f32_4* %47 = OpVariable Private 
                                          i32 %49 = OpConstant 3 
                                              %53 = OpTypeVector %6 3 
                               Private f32_4* %65 = OpVariable Private 
                                          i32 %68 = OpConstant 11 
                                          u32 %86 = OpConstant 1 
                                              %87 = OpTypeArray %6 %86 
                                              %88 = OpTypeStruct %7 %6 %87 
                                              %89 = OpTypePointer Output %88 
         Output struct {f32_4; f32; f32[1];}* %90 = OpVariable Output 
                                              %98 = OpTypePointer Output %7 
                                Input f32_4* %100 = OpVariable Input 
                                             %101 = OpTypeVector %6 2 
                                         i32 %104 = OpConstant 12 
                                             %115 = OpTypePointer Output %101 
                       Output f32_2* vs_TEXCOORD0 = OpVariable Output 
                                             %119 = OpTypePointer Input %53 
                                Input f32_3* %120 = OpVariable Input 
                                         i32 %122 = OpConstant 10 
                                         u32 %127 = OpConstant 0 
                                             %128 = OpTypePointer Private %6 
                                         u32 %141 = OpConstant 2 
                                Private f32* %143 = OpVariable Private 
                                             %158 = OpTypePointer Output %53 
                       Output f32_3* vs_TEXCOORD1 = OpVariable Output 
                       Output f32_3* vs_TEXCOORD2 = OpVariable Output 
                              Private f32_4* %171 = OpVariable Private 
                              Private f32_4* %184 = OpVariable Private 
                                         f32 %215 = OpConstant 3.674022E-40 
                                       f32_4 %216 = OpConstantComposite %215 %215 %215 %215 
                                         f32 %224 = OpConstant 3.674022E-40 
                                       f32_4 %225 = OpConstantComposite %224 %224 %224 %224 
                                         f32 %233 = OpConstant 3.674022E-40 
                                       f32_4 %234 = OpConstantComposite %233 %233 %233 %233 
                                         i32 %241 = OpConstant 4 
                                         f32 %283 = OpConstant 3.674022E-40 
                                       f32_3 %284 = OpConstantComposite %283 %283 %283 
                                         f32 %286 = OpConstant 3.674022E-40 
                                       f32_3 %287 = OpConstantComposite %286 %286 %286 
                                         f32 %296 = OpConstant 3.674022E-40 
                                       f32_3 %297 = OpConstantComposite %296 %296 %296 
                                             %301 = OpTypePointer Private %53 
                              Private f32_3* %302 = OpVariable Private 
                              Private f32_4* %319 = OpVariable Private 
                              Private f32_3* %325 = OpVariable Private 
                                         i32 %326 = OpConstant 5 
                                         i32 %332 = OpConstant 6 
                                         i32 %338 = OpConstant 7 
                                         i32 %344 = OpConstant 8 
                       Output f32_3* vs_TEXCOORD3 = OpVariable Output 
                       Output f32_4* vs_TEXCOORD5 = OpVariable Output 
                       Output f32_4* vs_TEXCOORD6 = OpVariable Output 
                                             %363 = OpTypePointer Output %6 
                                          void %4 = OpFunction None %3 
                                               %5 = OpLabel 
                                        f32_4 %12 = OpLoad %11 
                                        f32_4 %13 = OpVectorShuffle %12 %12 1 1 1 1 
                               Uniform f32_4* %28 = OpAccessChain %23 %25 %26 
                                        f32_4 %29 = OpLoad %28 
                                        f32_4 %30 = OpFMul %13 %29 
                                                      OpStore %9 %30 
                               Uniform f32_4* %32 = OpAccessChain %23 %25 %31 
                                        f32_4 %33 = OpLoad %32 
                                        f32_4 %34 = OpLoad %11 
                                        f32_4 %35 = OpVectorShuffle %34 %34 0 0 0 0 
                                        f32_4 %36 = OpFMul %33 %35 
                                        f32_4 %37 = OpLoad %9 
                                        f32_4 %38 = OpFAdd %36 %37 
                                                      OpStore %9 %38 
                               Uniform f32_4* %40 = OpAccessChain %23 %25 %39 
                                        f32_4 %41 = OpLoad %40 
                                        f32_4 %42 = OpLoad %11 
                                        f32_4 %43 = OpVectorShuffle %42 %42 2 2 2 2 
                                        f32_4 %44 = OpFMul %41 %43 
                                        f32_4 %45 = OpLoad %9 
                                        f32_4 %46 = OpFAdd %44 %45 
                                                      OpStore %9 %46 
                                        f32_4 %48 = OpLoad %9 
                               Uniform f32_4* %50 = OpAccessChain %23 %25 %49 
                                        f32_4 %51 = OpLoad %50 
                                        f32_4 %52 = OpFAdd %48 %51 
                                                      OpStore %47 %52 
                               Uniform f32_4* %54 = OpAccessChain %23 %25 %49 
                                        f32_4 %55 = OpLoad %54 
                                        f32_3 %56 = OpVectorShuffle %55 %55 0 1 2 
                                        f32_4 %57 = OpLoad %11 
                                        f32_3 %58 = OpVectorShuffle %57 %57 3 3 3 
                                        f32_3 %59 = OpFMul %56 %58 
                                        f32_4 %60 = OpLoad %9 
                                        f32_3 %61 = OpVectorShuffle %60 %60 0 1 2 
                                        f32_3 %62 = OpFAdd %59 %61 
                                        f32_4 %63 = OpLoad %9 
                                        f32_4 %64 = OpVectorShuffle %63 %62 4 5 6 3 
                                                      OpStore %9 %64 
                                        f32_4 %66 = OpLoad %47 
                                        f32_4 %67 = OpVectorShuffle %66 %66 1 1 1 1 
                               Uniform f32_4* %69 = OpAccessChain %23 %68 %26 
                                        f32_4 %70 = OpLoad %69 
                                        f32_4 %71 = OpFMul %67 %70 
                                                      OpStore %65 %71 
                               Uniform f32_4* %72 = OpAccessChain %23 %68 %31 
                                        f32_4 %73 = OpLoad %72 
                                        f32_4 %74 = OpLoad %47 
                                        f32_4 %75 = OpVectorShuffle %74 %74 0 0 0 0 
                                        f32_4 %76 = OpFMul %73 %75 
                                        f32_4 %77 = OpLoad %65 
                                        f32_4 %78 = OpFAdd %76 %77 
                                                      OpStore %65 %78 
                               Uniform f32_4* %79 = OpAccessChain %23 %68 %39 
                                        f32_4 %80 = OpLoad %79 
                                        f32_4 %81 = OpLoad %47 
                                        f32_4 %82 = OpVectorShuffle %81 %81 2 2 2 2 
                                        f32_4 %83 = OpFMul %80 %82 
                                        f32_4 %84 = OpLoad %65 
                                        f32_4 %85 = OpFAdd %83 %84 
                                                      OpStore %65 %85 
                               Uniform f32_4* %91 = OpAccessChain %23 %68 %49 
                                        f32_4 %92 = OpLoad %91 
                                        f32_4 %93 = OpLoad %47 
                                        f32_4 %94 = OpVectorShuffle %93 %93 3 3 3 3 
                                        f32_4 %95 = OpFMul %92 %94 
                                        f32_4 %96 = OpLoad %65 
                                        f32_4 %97 = OpFAdd %95 %96 
                                Output f32_4* %99 = OpAccessChain %90 %31 
                                                      OpStore %99 %97 
                                       f32_4 %102 = OpLoad %100 
                                       f32_2 %103 = OpVectorShuffle %102 %102 0 1 
                              Uniform f32_4* %105 = OpAccessChain %23 %104 
                                       f32_4 %106 = OpLoad %105 
                                       f32_2 %107 = OpVectorShuffle %106 %106 0 1 
                                       f32_2 %108 = OpFMul %103 %107 
                              Uniform f32_4* %109 = OpAccessChain %23 %104 
                                       f32_4 %110 = OpLoad %109 
                                       f32_2 %111 = OpVectorShuffle %110 %110 2 3 
                                       f32_2 %112 = OpFAdd %108 %111 
                                       f32_4 %113 = OpLoad %47 
                                       f32_4 %114 = OpVectorShuffle %113 %112 4 5 2 3 
                                                      OpStore %47 %114 
                                       f32_4 %117 = OpLoad %47 
                                       f32_2 %118 = OpVectorShuffle %117 %117 0 1 
                                                      OpStore vs_TEXCOORD0 %118 
                                       f32_3 %121 = OpLoad %120 
                              Uniform f32_4* %123 = OpAccessChain %23 %122 %31 
                                       f32_4 %124 = OpLoad %123 
                                       f32_3 %125 = OpVectorShuffle %124 %124 0 1 2 
                                         f32 %126 = OpDot %121 %125 
                                Private f32* %129 = OpAccessChain %47 %127 
                                                      OpStore %129 %126 
                                       f32_3 %130 = OpLoad %120 
                              Uniform f32_4* %131 = OpAccessChain %23 %122 %26 
                                       f32_4 %132 = OpLoad %131 
                                       f32_3 %133 = OpVectorShuffle %132 %132 0 1 2 
                                         f32 %134 = OpDot %130 %133 
                                Private f32* %135 = OpAccessChain %47 %86 
                                                      OpStore %135 %134 
                                       f32_3 %136 = OpLoad %120 
                              Uniform f32_4* %137 = OpAccessChain %23 %122 %39 
                                       f32_4 %138 = OpLoad %137 
                                       f32_3 %139 = OpVectorShuffle %138 %138 0 1 2 
                                         f32 %140 = OpDot %136 %139 
                                Private f32* %142 = OpAccessChain %47 %141 
                                                      OpStore %142 %140 
                                       f32_4 %144 = OpLoad %47 
                                       f32_3 %145 = OpVectorShuffle %144 %144 0 1 2 
                                       f32_4 %146 = OpLoad %47 
                                       f32_3 %147 = OpVectorShuffle %146 %146 0 1 2 
                                         f32 %148 = OpDot %145 %147 
                                                      OpStore %143 %148 
                                         f32 %149 = OpLoad %143 
                                         f32 %150 = OpExtInst %1 32 %149 
                                                      OpStore %143 %150 
                                         f32 %151 = OpLoad %143 
                                       f32_3 %152 = OpCompositeConstruct %151 %151 %151 
                                       f32_4 %153 = OpLoad %47 
                                       f32_3 %154 = OpVectorShuffle %153 %153 0 1 2 
                                       f32_3 %155 = OpFMul %152 %154 
                                       f32_4 %156 = OpLoad %47 
                                       f32_4 %157 = OpVectorShuffle %156 %155 4 5 6 3 
                                                      OpStore %47 %157 
                                       f32_4 %160 = OpLoad %47 
                                       f32_3 %161 = OpVectorShuffle %160 %160 0 1 2 
                                                      OpStore vs_TEXCOORD1 %161 
                                       f32_4 %163 = OpLoad %9 
                                       f32_3 %164 = OpVectorShuffle %163 %163 0 1 2 
                                                      OpStore vs_TEXCOORD2 %164 
                                       f32_4 %165 = OpLoad %9 
                                       f32_4 %166 = OpVectorShuffle %165 %165 0 0 0 0 
                                       f32_4 %167 = OpFNegate %166 
                              Uniform f32_4* %168 = OpAccessChain %23 %31 
                                       f32_4 %169 = OpLoad %168 
                                       f32_4 %170 = OpFAdd %167 %169 
                                                      OpStore %65 %170 
                                       f32_4 %172 = OpLoad %9 
                                       f32_4 %173 = OpVectorShuffle %172 %172 1 1 1 1 
                                       f32_4 %174 = OpFNegate %173 
                              Uniform f32_4* %175 = OpAccessChain %23 %26 
                                       f32_4 %176 = OpLoad %175 
                                       f32_4 %177 = OpFAdd %174 %176 
                                                      OpStore %171 %177 
                                       f32_4 %178 = OpLoad %9 
                                       f32_4 %179 = OpVectorShuffle %178 %178 2 2 2 2 
                                       f32_4 %180 = OpFNegate %179 
                              Uniform f32_4* %181 = OpAccessChain %23 %39 
                                       f32_4 %182 = OpLoad %181 
                                       f32_4 %183 = OpFAdd %180 %182 
                                                      OpStore %9 %183 
                                       f32_4 %185 = OpLoad %47 
                                       f32_4 %186 = OpVectorShuffle %185 %185 1 1 1 1 
                                       f32_4 %187 = OpLoad %171 
                                       f32_4 %188 = OpFMul %186 %187 
                                                      OpStore %184 %188 
                                       f32_4 %189 = OpLoad %171 
                                       f32_4 %190 = OpLoad %171 
                                       f32_4 %191 = OpFMul %189 %190 
                                                      OpStore %171 %191 
                                       f32_4 %192 = OpLoad %65 
                                       f32_4 %193 = OpLoad %65 
                                       f32_4 %194 = OpFMul %192 %193 
                                       f32_4 %195 = OpLoad %171 
                                       f32_4 %196 = OpFAdd %194 %195 
                                                      OpStore %171 %196 
                                       f32_4 %197 = OpLoad %65 
                                       f32_4 %198 = OpLoad %47 
                                       f32_4 %199 = OpVectorShuffle %198 %198 0 0 0 0 
                                       f32_4 %200 = OpFMul %197 %199 
                                       f32_4 %201 = OpLoad %184 
                                       f32_4 %202 = OpFAdd %200 %201 
                                                      OpStore %65 %202 
                                       f32_4 %203 = OpLoad %9 
                                       f32_4 %204 = OpLoad %47 
                                       f32_4 %205 = OpVectorShuffle %204 %204 2 2 2 2 
                                       f32_4 %206 = OpFMul %203 %205 
                                       f32_4 %207 = OpLoad %65 
                                       f32_4 %208 = OpFAdd %206 %207 
                                                      OpStore %65 %208 
                                       f32_4 %209 = OpLoad %9 
                                       f32_4 %210 = OpLoad %9 
                                       f32_4 %211 = OpFMul %209 %210 
                                       f32_4 %212 = OpLoad %171 
                                       f32_4 %213 = OpFAdd %211 %212 
                                                      OpStore %9 %213 
                                       f32_4 %214 = OpLoad %9 
                                       f32_4 %217 = OpExtInst %1 40 %214 %216 
                                                      OpStore %9 %217 
                                       f32_4 %218 = OpLoad %9 
                                       f32_4 %219 = OpExtInst %1 32 %218 
                                                      OpStore %171 %219 
                                       f32_4 %220 = OpLoad %9 
                              Uniform f32_4* %221 = OpAccessChain %23 %49 
                                       f32_4 %222 = OpLoad %221 
                                       f32_4 %223 = OpFMul %220 %222 
                                       f32_4 %226 = OpFAdd %223 %225 
                                                      OpStore %9 %226 
                                       f32_4 %227 = OpLoad %9 
                                       f32_4 %228 = OpFDiv %225 %227 
                                                      OpStore %9 %228 
                                       f32_4 %229 = OpLoad %65 
                                       f32_4 %230 = OpLoad %171 
                                       f32_4 %231 = OpFMul %229 %230 
                                                      OpStore %65 %231 
                                       f32_4 %232 = OpLoad %65 
                                       f32_4 %235 = OpExtInst %1 40 %232 %234 
                                                      OpStore %65 %235 
                                       f32_4 %236 = OpLoad %9 
                                       f32_4 %237 = OpLoad %65 
                                       f32_4 %238 = OpFMul %236 %237 
                                                      OpStore %9 %238 
                                       f32_4 %239 = OpLoad %9 
                                       f32_3 %240 = OpVectorShuffle %239 %239 1 1 1 
                              Uniform f32_4* %242 = OpAccessChain %23 %241 %26 
                                       f32_4 %243 = OpLoad %242 
                                       f32_3 %244 = OpVectorShuffle %243 %243 0 1 2 
                                       f32_3 %245 = OpFMul %240 %244 
                                       f32_4 %246 = OpLoad %65 
                                       f32_4 %247 = OpVectorShuffle %246 %245 4 5 6 3 
                                                      OpStore %65 %247 
                              Uniform f32_4* %248 = OpAccessChain %23 %241 %31 
                                       f32_4 %249 = OpLoad %248 
                                       f32_3 %250 = OpVectorShuffle %249 %249 0 1 2 
                                       f32_4 %251 = OpLoad %9 
                                       f32_3 %252 = OpVectorShuffle %251 %251 0 0 0 
                                       f32_3 %253 = OpFMul %250 %252 
                                       f32_4 %254 = OpLoad %65 
                                       f32_3 %255 = OpVectorShuffle %254 %254 0 1 2 
                                       f32_3 %256 = OpFAdd %253 %255 
                                       f32_4 %257 = OpLoad %65 
                                       f32_4 %258 = OpVectorShuffle %257 %256 4 5 6 3 
                                                      OpStore %65 %258 
                              Uniform f32_4* %259 = OpAccessChain %23 %241 %39 
                                       f32_4 %260 = OpLoad %259 
                                       f32_3 %261 = OpVectorShuffle %260 %260 0 1 2 
                                       f32_4 %262 = OpLoad %9 
                                       f32_3 %263 = OpVectorShuffle %262 %262 2 2 2 
                                       f32_3 %264 = OpFMul %261 %263 
                                       f32_4 %265 = OpLoad %65 
                                       f32_3 %266 = OpVectorShuffle %265 %265 0 1 2 
                                       f32_3 %267 = OpFAdd %264 %266 
                                       f32_4 %268 = OpLoad %9 
                                       f32_4 %269 = OpVectorShuffle %268 %267 4 5 6 3 
                                                      OpStore %9 %269 
                              Uniform f32_4* %270 = OpAccessChain %23 %241 %49 
                                       f32_4 %271 = OpLoad %270 
                                       f32_3 %272 = OpVectorShuffle %271 %271 0 1 2 
                                       f32_4 %273 = OpLoad %9 
                                       f32_3 %274 = OpVectorShuffle %273 %273 3 3 3 
                                       f32_3 %275 = OpFMul %272 %274 
                                       f32_4 %276 = OpLoad %9 
                                       f32_3 %277 = OpVectorShuffle %276 %276 0 1 2 
                                       f32_3 %278 = OpFAdd %275 %277 
                                       f32_4 %279 = OpLoad %9 
                                       f32_4 %280 = OpVectorShuffle %279 %278 4 5 6 3 
                                                      OpStore %9 %280 
                                       f32_4 %281 = OpLoad %9 
                                       f32_3 %282 = OpVectorShuffle %281 %281 0 1 2 
                                       f32_3 %285 = OpFMul %282 %284 
                                       f32_3 %288 = OpFAdd %285 %287 
                                       f32_4 %289 = OpLoad %65 
                                       f32_4 %290 = OpVectorShuffle %289 %288 4 5 6 3 
                                                      OpStore %65 %290 
                                       f32_4 %291 = OpLoad %9 
                                       f32_3 %292 = OpVectorShuffle %291 %291 0 1 2 
                                       f32_4 %293 = OpLoad %65 
                                       f32_3 %294 = OpVectorShuffle %293 %293 0 1 2 
                                       f32_3 %295 = OpFMul %292 %294 
                                       f32_3 %298 = OpFAdd %295 %297 
                                       f32_4 %299 = OpLoad %65 
                                       f32_4 %300 = OpVectorShuffle %299 %298 4 5 6 3 
                                                      OpStore %65 %300 
                                Private f32* %303 = OpAccessChain %47 %86 
                                         f32 %304 = OpLoad %303 
                                Private f32* %305 = OpAccessChain %47 %86 
                                         f32 %306 = OpLoad %305 
                                         f32 %307 = OpFMul %304 %306 
                                Private f32* %308 = OpAccessChain %302 %127 
                                                      OpStore %308 %307 
                                Private f32* %309 = OpAccessChain %47 %127 
                                         f32 %310 = OpLoad %309 
                                Private f32* %311 = OpAccessChain %47 %127 
                                         f32 %312 = OpLoad %311 
                                         f32 %313 = OpFMul %310 %312 
                                Private f32* %314 = OpAccessChain %302 %127 
                                         f32 %315 = OpLoad %314 
                                         f32 %316 = OpFNegate %315 
                                         f32 %317 = OpFAdd %313 %316 
                                Private f32* %318 = OpAccessChain %302 %127 
                                                      OpStore %318 %317 
                                       f32_4 %320 = OpLoad %47 
                                       f32_4 %321 = OpVectorShuffle %320 %320 1 2 2 0 
                                       f32_4 %322 = OpLoad %47 
                                       f32_4 %323 = OpVectorShuffle %322 %322 0 1 2 2 
                                       f32_4 %324 = OpFMul %321 %323 
                                                      OpStore %319 %324 
                              Uniform f32_4* %327 = OpAccessChain %23 %326 
                                       f32_4 %328 = OpLoad %327 
                                       f32_4 %329 = OpLoad %319 
                                         f32 %330 = OpDot %328 %329 
                                Private f32* %331 = OpAccessChain %325 %127 
                                                      OpStore %331 %330 
                              Uniform f32_4* %333 = OpAccessChain %23 %332 
                                       f32_4 %334 = OpLoad %333 
                                       f32_4 %335 = OpLoad %319 
                                         f32 %336 = OpDot %334 %335 
                                Private f32* %337 = OpAccessChain %325 %86 
                                                      OpStore %337 %336 
                              Uniform f32_4* %339 = OpAccessChain %23 %338 
                                       f32_4 %340 = OpLoad %339 
                                       f32_4 %341 = OpLoad %319 
                                         f32 %342 = OpDot %340 %341 
                                Private f32* %343 = OpAccessChain %325 %141 
                                                      OpStore %343 %342 
                              Uniform f32_4* %345 = OpAccessChain %23 %344 
                                       f32_4 %346 = OpLoad %345 
                                       f32_3 %347 = OpVectorShuffle %346 %346 0 1 2 
                                       f32_3 %348 = OpLoad %302 
                                       f32_3 %349 = OpVectorShuffle %348 %348 0 0 0 
                                       f32_3 %350 = OpFMul %347 %349 
                                       f32_3 %351 = OpLoad %325 
                                       f32_3 %352 = OpFAdd %350 %351 
                                                      OpStore %302 %352 
                                       f32_4 %354 = OpLoad %9 
                                       f32_3 %355 = OpVectorShuffle %354 %354 0 1 2 
                                       f32_4 %356 = OpLoad %65 
                                       f32_3 %357 = OpVectorShuffle %356 %356 0 1 2 
                                       f32_3 %358 = OpFMul %355 %357 
                                       f32_3 %359 = OpLoad %302 
                                       f32_3 %360 = OpFAdd %358 %359 
                                                      OpStore vs_TEXCOORD3 %360 
                                                      OpStore vs_TEXCOORD5 %234 
                                                      OpStore vs_TEXCOORD6 %234 
                                 Output f32* %364 = OpAccessChain %90 %31 %86 
                                         f32 %365 = OpLoad %364 
                                         f32 %366 = OpFNegate %365 
                                 Output f32* %367 = OpAccessChain %90 %31 %86 
                                                      OpStore %367 %366 
                                                      OpReturn
                                                      OpFunctionEnd
; SPIR-V
; Version: 1.0
; Generator: Khronos Glslang Reference Front End; 6
; Bound: 483
; Schema: 0
                                                      OpCapability Shader 
                                               %1 = OpExtInstImport "GLSL.std.450" 
                                                      OpMemoryModel Logical GLSL450 
                                                      OpEntryPoint Fragment %4 "main" %11 %57 %404 %448 %472 
                                                      OpExecutionMode %4 OriginUpperLeft 
                                                      OpName vs_TEXCOORD2 "vs_TEXCOORD2" 
                                                      OpName vs_TEXCOORD1 "vs_TEXCOORD1" 
                                                      OpName vs_TEXCOORD0 "vs_TEXCOORD0" 
                                                      OpName vs_TEXCOORD3 "vs_TEXCOORD3" 
                                                      OpDecorate vs_TEXCOORD2 Location 11 
                                                      OpDecorate %17 ArrayStride 17 
                                                      OpDecorate %19 ArrayStride 19 
                                                      OpMemberDecorate %20 0 Offset 20 
                                                      OpMemberDecorate %20 1 RelaxedPrecision 
                                                      OpMemberDecorate %20 1 Offset 20 
                                                      OpMemberDecorate %20 2 RelaxedPrecision 
                                                      OpMemberDecorate %20 2 Offset 20 
                                                      OpMemberDecorate %20 3 RelaxedPrecision 
                                                      OpMemberDecorate %20 3 Offset 20 
                                                      OpMemberDecorate %20 4 RelaxedPrecision 
                                                      OpMemberDecorate %20 4 Offset 20 
                                                      OpMemberDecorate %20 5 Offset 20 
                                                      OpMemberDecorate %20 6 RelaxedPrecision 
                                                      OpMemberDecorate %20 6 Offset 20 
                                                      OpMemberDecorate %20 7 Offset 20 
                                                      OpMemberDecorate %20 8 Offset 20 
                                                      OpMemberDecorate %20 9 RelaxedPrecision 
                                                      OpMemberDecorate %20 9 Offset 20 
                                                      OpMemberDecorate %20 10 RelaxedPrecision 
                                                      OpMemberDecorate %20 10 Offset 20 
                                                      OpMemberDecorate %20 11 RelaxedPrecision 
                                                      OpMemberDecorate %20 11 Offset 20 
                                                      OpMemberDecorate %20 12 RelaxedPrecision 
                                                      OpMemberDecorate %20 12 Offset 20 
                                                      OpMemberDecorate %20 13 RelaxedPrecision 
                                                      OpMemberDecorate %20 13 Offset 20 
                                                      OpMemberDecorate %20 14 RelaxedPrecision 
                                                      OpMemberDecorate %20 14 Offset 20 
                                                      OpMemberDecorate %20 15 RelaxedPrecision 
                                                      OpMemberDecorate %20 15 Offset 20 
                                                      OpMemberDecorate %20 16 RelaxedPrecision 
                                                      OpMemberDecorate %20 16 Offset 20 
                                                      OpMemberDecorate %20 17 RelaxedPrecision 
                                                      OpMemberDecorate %20 17 Offset 20 
                                                      OpDecorate %20 Block 
                                                      OpDecorate %22 DescriptorSet 22 
                                                      OpDecorate %22 Binding 22 
                                                      OpDecorate %36 RelaxedPrecision 
                                                      OpDecorate %44 RelaxedPrecision 
                                                      OpDecorate %45 RelaxedPrecision 
                                                      OpDecorate %47 RelaxedPrecision 
                                                      OpDecorate %48 RelaxedPrecision 
                                                      OpDecorate %49 RelaxedPrecision 
                                                      OpDecorate %50 RelaxedPrecision 
                                                      OpDecorate %51 RelaxedPrecision 
                                                      OpDecorate %52 RelaxedPrecision 
                                                      OpDecorate %53 RelaxedPrecision 
                                                      OpDecorate %54 RelaxedPrecision 
                                                      OpDecorate %55 RelaxedPrecision 
                                                      OpDecorate %56 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD1 Location 57 
                                                      OpDecorate %61 RelaxedPrecision 
                                                      OpDecorate %62 RelaxedPrecision 
                                                      OpDecorate %63 RelaxedPrecision 
                                                      OpDecorate %64 RelaxedPrecision 
                                                      OpDecorate %68 RelaxedPrecision 
                                                      OpDecorate %69 RelaxedPrecision 
                                                      OpDecorate %70 RelaxedPrecision 
                                                      OpDecorate %73 RelaxedPrecision 
                                                      OpDecorate %75 RelaxedPrecision 
                                                      OpDecorate %76 RelaxedPrecision 
                                                      OpDecorate %77 RelaxedPrecision 
                                                      OpDecorate %81 RelaxedPrecision 
                                                      OpDecorate %82 RelaxedPrecision 
                                                      OpDecorate %85 RelaxedPrecision 
                                                      OpDecorate %89 RelaxedPrecision 
                                                      OpDecorate %90 RelaxedPrecision 
                                                      OpDecorate %94 RelaxedPrecision 
                                                      OpDecorate %96 RelaxedPrecision 
                                                      OpDecorate %100 RelaxedPrecision 
                                                      OpDecorate %106 RelaxedPrecision 
                                                      OpDecorate %107 RelaxedPrecision 
                                                      OpDecorate %109 RelaxedPrecision 
                                                      OpDecorate %110 RelaxedPrecision 
                                                      OpDecorate %116 RelaxedPrecision 
                                                      OpDecorate %117 RelaxedPrecision 
                                                      OpDecorate %119 RelaxedPrecision 
                                                      OpDecorate %121 RelaxedPrecision 
                                                      OpDecorate %122 RelaxedPrecision 
                                                      OpDecorate %123 RelaxedPrecision 
                                                      OpDecorate %126 RelaxedPrecision 
                                                      OpDecorate %127 RelaxedPrecision 
                                                      OpDecorate %128 RelaxedPrecision 
                                                      OpDecorate %129 RelaxedPrecision 
                                                      OpDecorate %202 RelaxedPrecision 
                                                      OpDecorate %205 RelaxedPrecision 
                                                      OpDecorate %252 DescriptorSet 252 
                                                      OpDecorate %252 Binding 252 
                                                      OpDecorate %256 DescriptorSet 256 
                                                      OpDecorate %256 Binding 256 
                                                      OpDecorate %265 RelaxedPrecision 
                                                      OpDecorate %266 RelaxedPrecision 
                                                      OpDecorate %267 RelaxedPrecision 
                                                      OpDecorate %271 RelaxedPrecision 
                                                      OpDecorate %274 RelaxedPrecision 
                                                      OpDecorate %278 RelaxedPrecision 
                                                      OpDecorate %279 RelaxedPrecision 
                                                      OpDecorate %280 RelaxedPrecision 
                                                      OpDecorate %283 RelaxedPrecision 
                                                      OpDecorate %286 RelaxedPrecision 
                                                      OpDecorate %291 RelaxedPrecision 
                                                      OpDecorate %296 RelaxedPrecision 
                                                      OpDecorate %297 RelaxedPrecision 
                                                      OpDecorate %300 RelaxedPrecision 
                                                      OpDecorate %301 RelaxedPrecision 
                                                      OpDecorate %302 RelaxedPrecision 
                                                      OpDecorate %305 RelaxedPrecision 
                                                      OpDecorate %309 RelaxedPrecision 
                                                      OpDecorate %310 RelaxedPrecision 
                                                      OpDecorate %311 RelaxedPrecision 
                                                      OpDecorate %314 RelaxedPrecision 
                                                      OpDecorate %315 RelaxedPrecision 
                                                      OpDecorate %316 RelaxedPrecision 
                                                      OpDecorate %317 RelaxedPrecision 
                                                      OpDecorate %318 RelaxedPrecision 
                                                      OpDecorate %320 RelaxedPrecision 
                                                      OpDecorate %321 RelaxedPrecision 
                                                      OpDecorate %324 RelaxedPrecision 
                                                      OpDecorate %325 RelaxedPrecision 
                                                      OpDecorate %327 RelaxedPrecision 
                                                      OpDecorate %328 RelaxedPrecision 
                                                      OpDecorate %329 RelaxedPrecision 
                                                      OpDecorate %330 RelaxedPrecision 
                                                      OpDecorate %331 RelaxedPrecision 
                                                      OpDecorate %332 RelaxedPrecision 
                                                      OpDecorate %333 RelaxedPrecision 
                                                      OpDecorate %334 RelaxedPrecision 
                                                      OpDecorate %335 RelaxedPrecision 
                                                      OpDecorate %337 RelaxedPrecision 
                                                      OpDecorate %338 RelaxedPrecision 
                                                      OpDecorate %341 RelaxedPrecision 
                                                      OpDecorate %342 RelaxedPrecision 
                                                      OpDecorate %345 RelaxedPrecision 
                                                      OpDecorate %346 RelaxedPrecision 
                                                      OpDecorate %347 RelaxedPrecision 
                                                      OpDecorate %349 RelaxedPrecision 
                                                      OpDecorate %351 RelaxedPrecision 
                                                      OpDecorate %352 RelaxedPrecision 
                                                      OpDecorate %355 RelaxedPrecision 
                                                      OpDecorate %356 RelaxedPrecision 
                                                      OpDecorate %357 RelaxedPrecision 
                                                      OpDecorate %360 RelaxedPrecision 
                                                      OpDecorate %362 RelaxedPrecision 
                                                      OpDecorate %363 RelaxedPrecision 
                                                      OpDecorate %367 RelaxedPrecision 
                                                      OpDecorate %368 RelaxedPrecision 
                                                      OpDecorate %369 RelaxedPrecision 
                                                      OpDecorate %372 RelaxedPrecision 
                                                      OpDecorate %373 RelaxedPrecision 
                                                      OpDecorate %374 RelaxedPrecision 
                                                      OpDecorate %376 RelaxedPrecision 
                                                      OpDecorate %377 RelaxedPrecision 
                                                      OpDecorate %378 RelaxedPrecision 
                                                      OpDecorate %379 RelaxedPrecision 
                                                      OpDecorate %381 RelaxedPrecision 
                                                      OpDecorate %382 RelaxedPrecision 
                                                      OpDecorate %383 RelaxedPrecision 
                                                      OpDecorate %384 RelaxedPrecision 
                                                      OpDecorate %385 RelaxedPrecision 
                                                      OpDecorate %387 RelaxedPrecision 
                                                      OpDecorate %388 RelaxedPrecision 
                                                      OpDecorate %389 RelaxedPrecision 
                                                      OpDecorate %390 RelaxedPrecision 
                                                      OpDecorate %391 RelaxedPrecision 
                                                      OpDecorate %392 RelaxedPrecision 
                                                      OpDecorate %393 RelaxedPrecision 
                                                      OpDecorate %394 RelaxedPrecision 
                                                      OpDecorate %395 RelaxedPrecision 
                                                      OpDecorate %396 RelaxedPrecision 
                                                      OpDecorate %397 RelaxedPrecision 
                                                      OpDecorate %397 DescriptorSet 397 
                                                      OpDecorate %397 Binding 397 
                                                      OpDecorate %398 RelaxedPrecision 
                                                      OpDecorate %399 RelaxedPrecision 
                                                      OpDecorate %399 DescriptorSet 399 
                                                      OpDecorate %399 Binding 399 
                                                      OpDecorate %400 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD0 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD0 Location 404 
                                                      OpDecorate %405 RelaxedPrecision 
                                                      OpDecorate %406 RelaxedPrecision 
                                                      OpDecorate %407 RelaxedPrecision 
                                                      OpDecorate %408 RelaxedPrecision 
                                                      OpDecorate %411 RelaxedPrecision 
                                                      OpDecorate %412 RelaxedPrecision 
                                                      OpDecorate %413 RelaxedPrecision 
                                                      OpDecorate %414 RelaxedPrecision 
                                                      OpDecorate %415 RelaxedPrecision 
                                                      OpDecorate %417 RelaxedPrecision 
                                                      OpDecorate %418 RelaxedPrecision 
                                                      OpDecorate %419 RelaxedPrecision 
                                                      OpDecorate %420 RelaxedPrecision 
                                                      OpDecorate %421 RelaxedPrecision 
                                                      OpDecorate %422 RelaxedPrecision 
                                                      OpDecorate %432 RelaxedPrecision 
                                                      OpDecorate %437 RelaxedPrecision 
                                                      OpDecorate %443 RelaxedPrecision 
                                                      OpDecorate %447 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD3 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD3 Location 448 
                                                      OpDecorate %449 RelaxedPrecision 
                                                      OpDecorate %450 RelaxedPrecision 
                                                      OpDecorate %451 RelaxedPrecision 
                                                      OpDecorate %453 RelaxedPrecision 
                                                      OpDecorate %454 RelaxedPrecision 
                                                      OpDecorate %455 RelaxedPrecision 
                                                      OpDecorate %472 RelaxedPrecision 
                                                      OpDecorate %472 Location 472 
                                                      OpDecorate %473 RelaxedPrecision 
                                               %2 = OpTypeVoid 
                                               %3 = OpTypeFunction %2 
                                               %6 = OpTypeFloat 32 
                                               %7 = OpTypeVector %6 3 
                                               %8 = OpTypePointer Private %7 
                                Private f32_3* %9 = OpVariable Private 
                                              %10 = OpTypePointer Input %7 
                        Input f32_3* vs_TEXCOORD2 = OpVariable Input 
                                              %14 = OpTypeVector %6 4 
                                              %15 = OpTypeInt 32 0 
                                          u32 %16 = OpConstant 16 
                                              %17 = OpTypeArray %14 %16 
                                          u32 %18 = OpConstant 4 
                                              %19 = OpTypeArray %14 %18 
                                              %20 = OpTypeStruct %7 %14 %14 %14 %14 %17 %14 %14 %19 %14 %14 %14 %6 %14 %14 %6 %6 %6 
                                              %21 = OpTypePointer Uniform %20 
Uniform struct {f32_3; f32_4; f32_4; f32_4; f32_4; f32_4[16]; f32_4; f32_4; f32_4[4]; f32_4; f32_4; f32_4; f32; f32_4; f32_4; f32; f32; f32;}* %22 = OpVariable Uniform 
                                              %23 = OpTypeInt 32 1 
                                          i32 %24 = OpConstant 0 
                                              %25 = OpTypePointer Uniform %7 
                                              %29 = OpTypePointer Private %6 
                                 Private f32* %30 = OpVariable Private 
                               Private f32_3* %36 = OpVariable Private 
                                          i32 %41 = OpConstant 1 
                                              %42 = OpTypePointer Uniform %14 
                                 Private f32* %47 = OpVariable Private 
                        Input f32_3* vs_TEXCOORD1 = OpVariable Input 
                               Private f32_3* %63 = OpVariable Private 
                                          u32 %71 = OpConstant 0 
                                          u32 %78 = OpConstant 1 
                                              %80 = OpTypeVector %6 2 
                                          f32 %83 = OpConstant 3.674022E-40 
                                        f32_2 %84 = OpConstantComposite %83 %83 
                                          i32 %91 = OpConstant 12 
                                              %92 = OpTypePointer Uniform %6 
                                          f32 %95 = OpConstant 3.674022E-40 
                                         i32 %104 = OpConstant 17 
                                         f32 %108 = OpConstant 3.674022E-40 
                                         f32 %113 = OpConstant 3.674022E-40 
                                Private f32* %119 = OpVariable Private 
                              Private f32_3* %124 = OpVariable Private 
                                         f32 %131 = OpConstant 3.674022E-40 
                                         f32 %143 = OpConstant 3.674022E-40 
                                         f32 %145 = OpConstant 3.674022E-40 
                                         i32 %155 = OpConstant 8 
                                         u32 %156 = OpConstant 2 
                                         i32 %163 = OpConstant 2 
                                         i32 %172 = OpConstant 7 
                                Private f32* %178 = OpVariable Private 
                                         u32 %189 = OpConstant 3 
                                         i32 %200 = OpConstant 6 
                                         i32 %214 = OpConstant 5 
                                         i32 %236 = OpConstant 3 
                                             %241 = OpTypePointer Function %7 
                                             %250 = OpTypeImage %6 Dim2D 0 0 0 1 Unknown 
                                             %251 = OpTypePointer UniformConstant %250 
        UniformConstant read_only Texture2D* %252 = OpVariable UniformConstant 
                                             %254 = OpTypeSampler 
                                             %255 = OpTypePointer UniformConstant %254 
                    UniformConstant sampler* %256 = OpVariable UniformConstant 
                                             %258 = OpTypeImage %6 Dim2D 1 0 0 1 Unknown 
                                             %259 = OpTypeSampledImage %258 
                                         i32 %294 = OpConstant 9 
                                         i32 %298 = OpConstant 10 
                                         i32 %307 = OpConstant 16 
                                         i32 %312 = OpConstant 15 
                              Private f32_3* %316 = OpVariable Private 
                                         i32 %365 = OpConstant 13 
                                         i32 %370 = OpConstant 14 
                              Private f32_3* %396 = OpVariable Private 
        UniformConstant read_only Texture2D* %397 = OpVariable UniformConstant 
                    UniformConstant sampler* %399 = OpVariable UniformConstant 
                                             %401 = OpTypeSampledImage %250 
                                             %403 = OpTypePointer Input %80 
                        Input f32_2* vs_TEXCOORD0 = OpVariable Input 
                                         i32 %409 = OpConstant 11 
                              Private f32_3* %414 = OpVariable Private 
                                             %425 = OpTypePointer Private %14 
                              Private f32_4* %426 = OpVariable Private 
                                         i32 %441 = OpConstant 4 
                        Input f32_3* vs_TEXCOORD3 = OpVariable Input 
                                       f32_3 %452 = OpConstantComposite %83 %83 %83 
                                         f32 %457 = OpConstant 3.674022E-40 
                                       f32_3 %458 = OpConstantComposite %457 %457 %457 
                                         f32 %463 = OpConstant 3.674022E-40 
                                       f32_3 %464 = OpConstantComposite %463 %463 %463 
                                         f32 %466 = OpConstant 3.674022E-40 
                                       f32_3 %467 = OpConstantComposite %466 %466 %466 
                                             %471 = OpTypePointer Output %14 
                               Output f32_4* %472 = OpVariable Output 
                                             %480 = OpTypePointer Output %6 
                                          void %4 = OpFunction None %3 
                                               %5 = OpLabel 
                             Function f32_3* %242 = OpVariable Function 
                                        f32_3 %12 = OpLoad vs_TEXCOORD2 
                                        f32_3 %13 = OpFNegate %12 
                               Uniform f32_3* %26 = OpAccessChain %22 %24 
                                        f32_3 %27 = OpLoad %26 
                                        f32_3 %28 = OpFAdd %13 %27 
                                                      OpStore %9 %28 
                                        f32_3 %31 = OpLoad %9 
                                        f32_3 %32 = OpLoad %9 
                                          f32 %33 = OpDot %31 %32 
                                                      OpStore %30 %33 
                                          f32 %34 = OpLoad %30 
                                          f32 %35 = OpExtInst %1 32 %34 
                                                      OpStore %30 %35 
                                        f32_3 %37 = OpLoad %9 
                                          f32 %38 = OpLoad %30 
                                        f32_3 %39 = OpCompositeConstruct %38 %38 %38 
                                        f32_3 %40 = OpFMul %37 %39 
                               Uniform f32_4* %43 = OpAccessChain %22 %41 
                                        f32_4 %44 = OpLoad %43 
                                        f32_3 %45 = OpVectorShuffle %44 %44 0 1 2 
                                        f32_3 %46 = OpFAdd %40 %45 
                                                      OpStore %36 %46 
                                        f32_3 %48 = OpLoad %36 
                                        f32_3 %49 = OpLoad %36 
                                          f32 %50 = OpDot %48 %49 
                                                      OpStore %47 %50 
                                          f32 %51 = OpLoad %47 
                                          f32 %52 = OpExtInst %1 32 %51 
                                                      OpStore %47 %52 
                                          f32 %53 = OpLoad %47 
                                        f32_3 %54 = OpCompositeConstruct %53 %53 %53 
                                        f32_3 %55 = OpLoad %36 
                                        f32_3 %56 = OpFMul %54 %55 
                                                      OpStore %36 %56 
                                        f32_3 %58 = OpLoad vs_TEXCOORD1 
                                        f32_3 %59 = OpLoad vs_TEXCOORD1 
                                          f32 %60 = OpDot %58 %59 
                                                      OpStore %47 %60 
                                          f32 %61 = OpLoad %47 
                                          f32 %62 = OpExtInst %1 32 %61 
                                                      OpStore %47 %62 
                                          f32 %64 = OpLoad %47 
                                        f32_3 %65 = OpCompositeConstruct %64 %64 %64 
                                        f32_3 %66 = OpLoad vs_TEXCOORD1 
                                        f32_3 %67 = OpFMul %65 %66 
                                                      OpStore %63 %67 
                                        f32_3 %68 = OpLoad %63 
                                        f32_3 %69 = OpLoad %36 
                                          f32 %70 = OpDot %68 %69 
                                 Private f32* %72 = OpAccessChain %36 %71 
                                                      OpStore %72 %70 
                                        f32_3 %73 = OpLoad %63 
                               Uniform f32_4* %74 = OpAccessChain %22 %41 
                                        f32_4 %75 = OpLoad %74 
                                        f32_3 %76 = OpVectorShuffle %75 %75 0 1 2 
                                          f32 %77 = OpDot %73 %76 
                                 Private f32* %79 = OpAccessChain %36 %78 
                                                      OpStore %79 %77 
                                        f32_3 %81 = OpLoad %36 
                                        f32_2 %82 = OpVectorShuffle %81 %81 0 1 
                                        f32_2 %85 = OpExtInst %1 40 %82 %84 
                                        f32_3 %86 = OpLoad %36 
                                        f32_3 %87 = OpVectorShuffle %86 %85 3 4 2 
                                                      OpStore %36 %87 
                                 Private f32* %88 = OpAccessChain %36 %71 
                                          f32 %89 = OpLoad %88 
                                          f32 %90 = OpExtInst %1 30 %89 
                                                      OpStore %30 %90 
                                 Uniform f32* %93 = OpAccessChain %22 %91 
                                          f32 %94 = OpLoad %93 
                                          f32 %96 = OpFMul %94 %95 
                                 Private f32* %97 = OpAccessChain %36 %71 
                                                      OpStore %97 %96 
                                          f32 %98 = OpLoad %30 
                                 Private f32* %99 = OpAccessChain %36 %71 
                                         f32 %100 = OpLoad %99 
                                         f32 %101 = OpFMul %98 %100 
                                                      OpStore %30 %101 
                                         f32 %102 = OpLoad %30 
                                         f32 %103 = OpExtInst %1 29 %102 
                                                      OpStore %30 %103 
                                Uniform f32* %105 = OpAccessChain %22 %104 
                                         f32 %106 = OpLoad %105 
                                         f32 %107 = OpFNegate %106 
                                         f32 %109 = OpFMul %107 %108 
                                         f32 %110 = OpFAdd %109 %108 
                                Private f32* %111 = OpAccessChain %36 %71 
                                                      OpStore %111 %110 
                                         f32 %112 = OpLoad %30 
                                         f32 %114 = OpFMul %112 %113 
                                Private f32* %115 = OpAccessChain %36 %71 
                                         f32 %116 = OpLoad %115 
                                         f32 %117 = OpFNegate %116 
                                         f32 %118 = OpFAdd %114 %117 
                                                      OpStore %30 %118 
                                Uniform f32* %120 = OpAccessChain %22 %104 
                                         f32 %121 = OpLoad %120 
                                         f32 %122 = OpFMul %121 %108 
                                         f32 %123 = OpFAdd %122 %108 
                                                      OpStore %119 %123 
                                Private f32* %125 = OpAccessChain %36 %71 
                                         f32 %126 = OpLoad %125 
                                         f32 %127 = OpFNegate %126 
                                         f32 %128 = OpLoad %119 
                                         f32 %129 = OpFAdd %127 %128 
                                Private f32* %130 = OpAccessChain %124 %71 
                                                      OpStore %130 %129 
                                Private f32* %132 = OpAccessChain %124 %71 
                                         f32 %133 = OpLoad %132 
                                         f32 %134 = OpFDiv %131 %133 
                                Private f32* %135 = OpAccessChain %124 %71 
                                                      OpStore %135 %134 
                                         f32 %136 = OpLoad %30 
                                Private f32* %137 = OpAccessChain %124 %71 
                                         f32 %138 = OpLoad %137 
                                         f32 %139 = OpFMul %136 %138 
                                                      OpStore %30 %139 
                                         f32 %140 = OpLoad %30 
                                         f32 %141 = OpExtInst %1 43 %140 %83 %131 
                                                      OpStore %30 %141 
                                         f32 %142 = OpLoad %30 
                                         f32 %144 = OpFMul %142 %143 
                                         f32 %146 = OpFAdd %144 %145 
                                Private f32* %147 = OpAccessChain %124 %71 
                                                      OpStore %147 %146 
                                         f32 %148 = OpLoad %30 
                                         f32 %149 = OpLoad %30 
                                         f32 %150 = OpFMul %148 %149 
                                                      OpStore %30 %150 
                                         f32 %151 = OpLoad %30 
                                Private f32* %152 = OpAccessChain %124 %71 
                                         f32 %153 = OpLoad %152 
                                         f32 %154 = OpFMul %151 %153 
                                                      OpStore %30 %154 
                                Uniform f32* %157 = OpAccessChain %22 %155 %24 %156 
                                         f32 %158 = OpLoad %157 
                                Private f32* %159 = OpAccessChain %124 %71 
                                                      OpStore %159 %158 
                                Uniform f32* %160 = OpAccessChain %22 %155 %41 %156 
                                         f32 %161 = OpLoad %160 
                                Private f32* %162 = OpAccessChain %124 %78 
                                                      OpStore %162 %161 
                                Uniform f32* %164 = OpAccessChain %22 %155 %163 %156 
                                         f32 %165 = OpLoad %164 
                                Private f32* %166 = OpAccessChain %124 %156 
                                                      OpStore %166 %165 
                                       f32_3 %167 = OpLoad %9 
                                       f32_3 %168 = OpLoad %124 
                                         f32 %169 = OpDot %167 %168 
                                Private f32* %170 = OpAccessChain %9 %71 
                                                      OpStore %170 %169 
                                       f32_3 %171 = OpLoad vs_TEXCOORD2 
                              Uniform f32_4* %173 = OpAccessChain %22 %172 
                                       f32_4 %174 = OpLoad %173 
                                       f32_3 %175 = OpVectorShuffle %174 %174 0 1 2 
                                       f32_3 %176 = OpFNegate %175 
                                       f32_3 %177 = OpFAdd %171 %176 
                                                      OpStore %124 %177 
                                       f32_3 %179 = OpLoad %124 
                                       f32_3 %180 = OpLoad %124 
                                         f32 %181 = OpDot %179 %180 
                                                      OpStore %178 %181 
                                         f32 %182 = OpLoad %178 
                                         f32 %183 = OpExtInst %1 31 %182 
                                                      OpStore %178 %183 
                                Private f32* %184 = OpAccessChain %9 %71 
                                         f32 %185 = OpLoad %184 
                                         f32 %186 = OpFNegate %185 
                                         f32 %187 = OpLoad %178 
                                         f32 %188 = OpFAdd %186 %187 
                                                      OpStore %178 %188 
                                Uniform f32* %190 = OpAccessChain %22 %172 %189 
                                         f32 %191 = OpLoad %190 
                                         f32 %192 = OpLoad %178 
                                         f32 %193 = OpFMul %191 %192 
                                Private f32* %194 = OpAccessChain %9 %71 
                                         f32 %195 = OpLoad %194 
                                         f32 %196 = OpFAdd %193 %195 
                                Private f32* %197 = OpAccessChain %9 %71 
                                                      OpStore %197 %196 
                                Private f32* %198 = OpAccessChain %9 %71 
                                         f32 %199 = OpLoad %198 
                                Uniform f32* %201 = OpAccessChain %22 %200 %156 
                                         f32 %202 = OpLoad %201 
                                         f32 %203 = OpFMul %199 %202 
                                Uniform f32* %204 = OpAccessChain %22 %200 %189 
                                         f32 %205 = OpLoad %204 
                                         f32 %206 = OpFAdd %203 %205 
                                Private f32* %207 = OpAccessChain %9 %71 
                                                      OpStore %207 %206 
                                Private f32* %208 = OpAccessChain %9 %71 
                                         f32 %209 = OpLoad %208 
                                         f32 %210 = OpExtInst %1 43 %209 %83 %131 
                                Private f32* %211 = OpAccessChain %9 %71 
                                                      OpStore %211 %210 
                                       f32_3 %212 = OpLoad vs_TEXCOORD2 
                                       f32_3 %213 = OpVectorShuffle %212 %212 1 1 1 
                              Uniform f32_4* %215 = OpAccessChain %22 %214 %41 
                                       f32_4 %216 = OpLoad %215 
                                       f32_3 %217 = OpVectorShuffle %216 %216 0 1 2 
                                       f32_3 %218 = OpFMul %213 %217 
                                                      OpStore %124 %218 
                              Uniform f32_4* %219 = OpAccessChain %22 %214 %24 
                                       f32_4 %220 = OpLoad %219 
                                       f32_3 %221 = OpVectorShuffle %220 %220 0 1 2 
                                       f32_3 %222 = OpLoad vs_TEXCOORD2 
                                       f32_3 %223 = OpVectorShuffle %222 %222 0 0 0 
                                       f32_3 %224 = OpFMul %221 %223 
                                       f32_3 %225 = OpLoad %124 
                                       f32_3 %226 = OpFAdd %224 %225 
                                                      OpStore %124 %226 
                              Uniform f32_4* %227 = OpAccessChain %22 %214 %163 
                                       f32_4 %228 = OpLoad %227 
                                       f32_3 %229 = OpVectorShuffle %228 %228 0 1 2 
                                       f32_3 %230 = OpLoad vs_TEXCOORD2 
                                       f32_3 %231 = OpVectorShuffle %230 %230 2 2 2 
                                       f32_3 %232 = OpFMul %229 %231 
                                       f32_3 %233 = OpLoad %124 
                                       f32_3 %234 = OpFAdd %232 %233 
                                                      OpStore %124 %234 
                                       f32_3 %235 = OpLoad %124 
                              Uniform f32_4* %237 = OpAccessChain %22 %214 %236 
                                       f32_4 %238 = OpLoad %237 
                                       f32_3 %239 = OpVectorShuffle %238 %238 0 1 2 
                                       f32_3 %240 = OpFAdd %235 %239 
                                                      OpStore %124 %240 
                                       f32_3 %243 = OpLoad %124 
                                       f32_2 %244 = OpVectorShuffle %243 %243 0 1 
                                Private f32* %245 = OpAccessChain %124 %156 
                                         f32 %246 = OpLoad %245 
                                         f32 %247 = OpCompositeExtract %244 0 
                                         f32 %248 = OpCompositeExtract %244 1 
                                       f32_3 %249 = OpCompositeConstruct %247 %248 %246 
                                                      OpStore %242 %249 
                         read_only Texture2D %253 = OpLoad %252 
                                     sampler %257 = OpLoad %256 
                  read_only Texture2DSampled %260 = OpSampledImage %253 %257 
                                       f32_3 %261 = OpLoad %242 
                                         f32 %262 = OpCompositeExtract %261 2 
                                         f32 %263 = OpImageSampleDrefExplicitLod %260 %261 %262 Lod %6 
                                                      OpStore %178 %263 
                                Uniform f32* %264 = OpAccessChain %22 %200 %71 
                                         f32 %265 = OpLoad %264 
                                         f32 %266 = OpFNegate %265 
                                         f32 %267 = OpFAdd %266 %131 
                                Private f32* %268 = OpAccessChain %36 %71 
                                                      OpStore %268 %267 
                                         f32 %269 = OpLoad %178 
                                Private f32* %270 = OpAccessChain %36 %71 
                                         f32 %271 = OpLoad %270 
                                         f32 %272 = OpFMul %269 %271 
                                Uniform f32* %273 = OpAccessChain %22 %200 %71 
                                         f32 %274 = OpLoad %273 
                                         f32 %275 = OpFAdd %272 %274 
                                Private f32* %276 = OpAccessChain %36 %71 
                                                      OpStore %276 %275 
                                Private f32* %277 = OpAccessChain %36 %71 
                                         f32 %278 = OpLoad %277 
                                         f32 %279 = OpFNegate %278 
                                         f32 %280 = OpFAdd %279 %131 
                                                      OpStore %119 %280 
                                Private f32* %281 = OpAccessChain %9 %71 
                                         f32 %282 = OpLoad %281 
                                         f32 %283 = OpLoad %119 
                                         f32 %284 = OpFMul %282 %283 
                                Private f32* %285 = OpAccessChain %36 %71 
                                         f32 %286 = OpLoad %285 
                                         f32 %287 = OpFAdd %284 %286 
                                Private f32* %288 = OpAccessChain %36 %71 
                                                      OpStore %288 %287 
                                         f32 %289 = OpLoad %30 
                                Private f32* %290 = OpAccessChain %36 %71 
                                         f32 %291 = OpLoad %290 
                                         f32 %292 = OpFMul %289 %291 
                                Private f32* %293 = OpAccessChain %9 %71 
                                                      OpStore %293 %292 
                              Uniform f32_4* %295 = OpAccessChain %22 %294 
                                       f32_4 %296 = OpLoad %295 
                                       f32_3 %297 = OpVectorShuffle %296 %296 0 1 2 
                              Uniform f32_4* %299 = OpAccessChain %22 %298 
                                       f32_4 %300 = OpLoad %299 
                                       f32_3 %301 = OpVectorShuffle %300 %300 0 1 2 
                                       f32_3 %302 = OpFMul %297 %301 
                                                      OpStore %63 %302 
                                       f32_3 %303 = OpLoad %9 
                                       f32_3 %304 = OpVectorShuffle %303 %303 0 0 0 
                                       f32_3 %305 = OpLoad %63 
                                       f32_3 %306 = OpFMul %304 %305 
                                                      OpStore %9 %306 
                                Uniform f32* %308 = OpAccessChain %22 %307 
                                         f32 %309 = OpLoad %308 
                                         f32 %310 = OpFNegate %309 
                                         f32 %311 = OpFMul %310 %108 
                                Uniform f32* %313 = OpAccessChain %22 %312 
                                         f32 %314 = OpLoad %313 
                                         f32 %315 = OpFAdd %311 %314 
                                                      OpStore %119 %315 
                                         f32 %317 = OpLoad %119 
                                         f32 %318 = OpFNegate %317 
                                Private f32* %319 = OpAccessChain %36 %78 
                                         f32 %320 = OpLoad %319 
                                         f32 %321 = OpFAdd %318 %320 
                                Private f32* %322 = OpAccessChain %316 %71 
                                                      OpStore %322 %321 
                                Uniform f32* %323 = OpAccessChain %22 %307 
                                         f32 %324 = OpLoad %323 
                                         f32 %325 = OpFMul %324 %108 
                                Uniform f32* %326 = OpAccessChain %22 %312 
                                         f32 %327 = OpLoad %326 
                                         f32 %328 = OpFAdd %325 %327 
                                                      OpStore %47 %328 
                                         f32 %329 = OpLoad %119 
                                         f32 %330 = OpFNegate %329 
                                         f32 %331 = OpLoad %47 
                                         f32 %332 = OpFAdd %330 %331 
                                                      OpStore %119 %332 
                                         f32 %333 = OpLoad %119 
                                         f32 %334 = OpFDiv %131 %333 
                                                      OpStore %119 %334 
                                         f32 %335 = OpLoad %119 
                                Private f32* %336 = OpAccessChain %316 %71 
                                         f32 %337 = OpLoad %336 
                                         f32 %338 = OpFMul %335 %337 
                                Private f32* %339 = OpAccessChain %316 %71 
                                                      OpStore %339 %338 
                                Private f32* %340 = OpAccessChain %316 %71 
                                         f32 %341 = OpLoad %340 
                                         f32 %342 = OpExtInst %1 43 %341 %83 %131 
                                Private f32* %343 = OpAccessChain %316 %71 
                                                      OpStore %343 %342 
                                Private f32* %344 = OpAccessChain %316 %71 
                                         f32 %345 = OpLoad %344 
                                         f32 %346 = OpFMul %345 %143 
                                         f32 %347 = OpFAdd %346 %145 
                                                      OpStore %119 %347 
                                Private f32* %348 = OpAccessChain %316 %71 
                                         f32 %349 = OpLoad %348 
                                Private f32* %350 = OpAccessChain %316 %71 
                                         f32 %351 = OpLoad %350 
                                         f32 %352 = OpFMul %349 %351 
                                Private f32* %353 = OpAccessChain %316 %71 
                                                      OpStore %353 %352 
                                Private f32* %354 = OpAccessChain %316 %71 
                                         f32 %355 = OpLoad %354 
                                         f32 %356 = OpLoad %119 
                                         f32 %357 = OpFMul %355 %356 
                                Private f32* %358 = OpAccessChain %316 %71 
                                                      OpStore %358 %357 
                                Private f32* %359 = OpAccessChain %36 %71 
                                         f32 %360 = OpLoad %359 
                                Private f32* %361 = OpAccessChain %316 %71 
                                         f32 %362 = OpLoad %361 
                                         f32 %363 = OpFMul %360 %362 
                                Private f32* %364 = OpAccessChain %36 %71 
                                                      OpStore %364 %363 
                              Uniform f32_4* %366 = OpAccessChain %22 %365 
                                       f32_4 %367 = OpLoad %366 
                                       f32_3 %368 = OpVectorShuffle %367 %367 0 1 2 
                                       f32_3 %369 = OpFNegate %368 
                              Uniform f32_4* %371 = OpAccessChain %22 %370 
                                       f32_4 %372 = OpLoad %371 
                                       f32_3 %373 = OpVectorShuffle %372 %372 0 1 2 
                                       f32_3 %374 = OpFAdd %369 %373 
                                                      OpStore %316 %374 
                              Uniform f32_4* %375 = OpAccessChain %22 %370 
                                       f32_4 %376 = OpLoad %375 
                                       f32_3 %377 = OpVectorShuffle %376 %376 3 3 3 
                                       f32_3 %378 = OpLoad %316 
                                       f32_3 %379 = OpFMul %377 %378 
                              Uniform f32_4* %380 = OpAccessChain %22 %365 
                                       f32_4 %381 = OpLoad %380 
                                       f32_3 %382 = OpVectorShuffle %381 %381 0 1 2 
                                       f32_3 %383 = OpFAdd %379 %382 
                                                      OpStore %316 %383 
                                       f32_3 %384 = OpLoad %316 
                                       f32_3 %385 = OpFNegate %384 
                              Uniform f32_4* %386 = OpAccessChain %22 %365 
                                       f32_4 %387 = OpLoad %386 
                                       f32_3 %388 = OpVectorShuffle %387 %387 0 1 2 
                                       f32_3 %389 = OpFAdd %385 %388 
                                                      OpStore %63 %389 
                                       f32_3 %390 = OpLoad %36 
                                       f32_3 %391 = OpVectorShuffle %390 %390 0 0 0 
                                       f32_3 %392 = OpLoad %63 
                                       f32_3 %393 = OpFMul %391 %392 
                                       f32_3 %394 = OpLoad %316 
                                       f32_3 %395 = OpFAdd %393 %394 
                                                      OpStore %36 %395 
                         read_only Texture2D %398 = OpLoad %397 
                                     sampler %400 = OpLoad %399 
                  read_only Texture2DSampled %402 = OpSampledImage %398 %400 
                                       f32_2 %405 = OpLoad vs_TEXCOORD0 
                                       f32_4 %406 = OpImageSampleImplicitLod %402 %405 
                                       f32_3 %407 = OpVectorShuffle %406 %406 0 1 2 
                                                      OpStore %396 %407 
                                       f32_3 %408 = OpLoad %396 
                              Uniform f32_4* %410 = OpAccessChain %22 %409 
                                       f32_4 %411 = OpLoad %410 
                                       f32_3 %412 = OpVectorShuffle %411 %411 0 1 2 
                                       f32_3 %413 = OpFMul %408 %412 
                                                      OpStore %63 %413 
                                       f32_3 %415 = OpLoad %63 
                              Uniform f32_4* %416 = OpAccessChain %22 %294 
                                       f32_4 %417 = OpLoad %416 
                                       f32_3 %418 = OpVectorShuffle %417 %417 0 1 2 
                                       f32_3 %419 = OpFMul %415 %418 
                                                      OpStore %414 %419 
                                       f32_3 %420 = OpLoad %414 
                                       f32_3 %421 = OpLoad %36 
                                       f32_3 %422 = OpFMul %420 %421 
                                       f32_3 %423 = OpLoad %9 
                                       f32_3 %424 = OpFAdd %422 %423 
                                                      OpStore %9 %424 
                                       f32_3 %427 = OpLoad vs_TEXCOORD1 
                                       f32_4 %428 = OpLoad %426 
                                       f32_4 %429 = OpVectorShuffle %428 %427 4 5 6 3 
                                                      OpStore %426 %429 
                                Private f32* %430 = OpAccessChain %426 %189 
                                                      OpStore %430 %131 
                              Uniform f32_4* %431 = OpAccessChain %22 %163 
                                       f32_4 %432 = OpLoad %431 
                                       f32_4 %433 = OpLoad %426 
                                         f32 %434 = OpDot %432 %433 
                                Private f32* %435 = OpAccessChain %414 %71 
                                                      OpStore %435 %434 
                              Uniform f32_4* %436 = OpAccessChain %22 %236 
                                       f32_4 %437 = OpLoad %436 
                                       f32_4 %438 = OpLoad %426 
                                         f32 %439 = OpDot %437 %438 
                                Private f32* %440 = OpAccessChain %414 %78 
                                                      OpStore %440 %439 
                              Uniform f32_4* %442 = OpAccessChain %22 %441 
                                       f32_4 %443 = OpLoad %442 
                                       f32_4 %444 = OpLoad %426 
                                         f32 %445 = OpDot %443 %444 
                                Private f32* %446 = OpAccessChain %414 %156 
                                                      OpStore %446 %445 
                                       f32_3 %447 = OpLoad %414 
                                       f32_3 %449 = OpLoad vs_TEXCOORD3 
                                       f32_3 %450 = OpFAdd %447 %449 
                                                      OpStore %414 %450 
                                       f32_3 %451 = OpLoad %414 
                                       f32_3 %453 = OpExtInst %1 40 %451 %452 
                                                      OpStore %414 %453 
                                       f32_3 %454 = OpLoad %414 
                                       f32_3 %455 = OpExtInst %1 30 %454 
                                                      OpStore %124 %455 
                                       f32_3 %456 = OpLoad %124 
                                       f32_3 %459 = OpFMul %456 %458 
                                                      OpStore %124 %459 
                                       f32_3 %460 = OpLoad %124 
                                       f32_3 %461 = OpExtInst %1 29 %460 
                                                      OpStore %124 %461 
                                       f32_3 %462 = OpLoad %124 
                                       f32_3 %465 = OpFMul %462 %464 
                                       f32_3 %468 = OpFAdd %465 %467 
                                                      OpStore %124 %468 
                                       f32_3 %469 = OpLoad %124 
                                       f32_3 %470 = OpExtInst %1 40 %469 %452 
                                                      OpStore %124 %470 
                                       f32_3 %473 = OpLoad %63 
                                       f32_3 %474 = OpLoad %124 
                                       f32_3 %475 = OpFMul %473 %474 
                                       f32_3 %476 = OpLoad %9 
                                       f32_3 %477 = OpFAdd %475 %476 
                                       f32_4 %478 = OpLoad %472 
                                       f32_4 %479 = OpVectorShuffle %478 %477 4 5 6 3 
                                                      OpStore %472 %479 
                                 Output f32* %481 = OpAccessChain %472 %189 
                                                      OpStore %481 %131 
                                                      OpReturn
                                                      OpFunctionEnd
"
}
}
Program "fp" {
SubProgram "gles3 hw_tier00 " {
Keywords { "DIRECTIONAL" }
""
}
SubProgram "gles3 hw_tier01 " {
Keywords { "DIRECTIONAL" }
""
}
SubProgram "gles3 hw_tier02 " {
Keywords { "DIRECTIONAL" }
""
}
SubProgram "vulkan hw_tier00 " {
Keywords { "DIRECTIONAL" }
""
}
SubProgram "vulkan hw_tier01 " {
Keywords { "DIRECTIONAL" }
""
}
SubProgram "vulkan hw_tier02 " {
Keywords { "DIRECTIONAL" }
""
}
SubProgram "gles3 hw_tier00 " {
Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" }
""
}
SubProgram "gles3 hw_tier01 " {
Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" }
""
}
SubProgram "gles3 hw_tier02 " {
Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" }
""
}
SubProgram "vulkan hw_tier00 " {
Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" }
""
}
SubProgram "vulkan hw_tier01 " {
Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" }
""
}
SubProgram "vulkan hw_tier02 " {
Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" }
""
}
SubProgram "gles3 hw_tier00 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" }
""
}
SubProgram "gles3 hw_tier01 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" }
""
}
SubProgram "gles3 hw_tier02 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" }
""
}
SubProgram "vulkan hw_tier00 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" }
""
}
SubProgram "vulkan hw_tier01 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" }
""
}
SubProgram "vulkan hw_tier02 " {
Keywords { "DIRECTIONAL" "SHADOWS_SCREEN" }
""
}
SubProgram "gles3 hw_tier00 " {
Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "SHADOWS_SCREEN" }
""
}
SubProgram "gles3 hw_tier01 " {
Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "SHADOWS_SCREEN" }
""
}
SubProgram "gles3 hw_tier02 " {
Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "SHADOWS_SCREEN" }
""
}
SubProgram "vulkan hw_tier00 " {
Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "SHADOWS_SCREEN" }
""
}
SubProgram "vulkan hw_tier01 " {
Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "SHADOWS_SCREEN" }
""
}
SubProgram "vulkan hw_tier02 " {
Keywords { "DIRECTIONAL" "LIGHTPROBE_SH" "SHADOWS_SCREEN" }
""
}
}
}
 Pass {
  Name "FORWARD"
  Tags { "LIGHTMODE" = "FORWARDADD" "RenderType" = "Opaque" }
  ZWrite Off
  GpuProgramID 91711
Program "vp" {
SubProgram "gles3 hw_tier00 " {
Keywords { "POINT" }
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToLight[4];
uniform 	vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in highp vec3 in_NORMAL0;
in highp vec4 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out highp vec3 vs_TEXCOORD1;
out highp vec3 vs_TEXCOORD2;
out highp vec3 vs_TEXCOORD3;
out highp vec4 vs_TEXCOORD4;
vec4 u_xlat0;
vec4 u_xlat1;
vec4 u_xlat2;
float u_xlat10;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy;
    u_xlat1.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat1.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat1.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat10 = dot(u_xlat1.xyz, u_xlat1.xyz);
    u_xlat10 = inversesqrt(u_xlat10);
    vs_TEXCOORD1.xyz = vec3(u_xlat10) * u_xlat1.xyz;
    vs_TEXCOORD2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[3] * in_POSITION0.wwww + u_xlat0;
    u_xlat1.xyz = u_xlat0.yyy * hlslcc_mtx4x4unity_WorldToLight[1].xyz;
    u_xlat1.xyz = hlslcc_mtx4x4unity_WorldToLight[0].xyz * u_xlat0.xxx + u_xlat1.xyz;
    u_xlat0.xyz = hlslcc_mtx4x4unity_WorldToLight[2].xyz * u_xlat0.zzz + u_xlat1.xyz;
    vs_TEXCOORD3.xyz = hlslcc_mtx4x4unity_WorldToLight[3].xyz * u_xlat0.www + u_xlat0.xyz;
    vs_TEXCOORD4 = vec4(0.0, 0.0, 0.0, 0.0);
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec3 _WorldSpaceCameraPos;
uniform 	vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 _LightColor0;
uniform 	mediump vec4 _SpecColor;
uniform 	vec4 hlslcc_mtx4x4unity_WorldToLight[4];
uniform 	mediump vec4 _Color;
uniform 	mediump float _Smoothness;
uniform 	mediump vec4 _HColor;
uniform 	mediump float _RampThreshold;
uniform 	mediump float _RampSmooth;
uniform 	mediump float _SpecSmooth;
UNITY_LOCATION(0) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(1) uniform highp sampler2D _LightTexture0;
in mediump vec2 vs_TEXCOORD0;
in highp vec3 vs_TEXCOORD1;
in highp vec3 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
vec3 u_xlat1;
mediump vec3 u_xlat16_1;
mediump vec4 u_xlat16_2;
mediump vec3 u_xlat16_3;
mediump vec3 u_xlat16_4;
vec3 u_xlat5;
mediump float u_xlat16_7;
mediump float u_xlat16_8;
mediump float u_xlat16_12;
float u_xlat15;
mediump float u_xlat16_17;
void main()
{
    u_xlat0.xyz = (-vs_TEXCOORD2.xyz) + _WorldSpaceLightPos0.xyz;
    u_xlat15 = dot(u_xlat0.xyz, u_xlat0.xyz);
    u_xlat15 = inversesqrt(u_xlat15);
    u_xlat0.xyz = vec3(u_xlat15) * u_xlat0.xyz;
    u_xlat1.xyz = (-vs_TEXCOORD2.xyz) + _WorldSpaceCameraPos.xyz;
    u_xlat15 = dot(u_xlat1.xyz, u_xlat1.xyz);
    u_xlat15 = inversesqrt(u_xlat15);
    u_xlat16_2.xyz = u_xlat1.xyz * vec3(u_xlat15) + u_xlat0.xyz;
    u_xlat16_17 = dot(u_xlat16_2.xyz, u_xlat16_2.xyz);
    u_xlat16_17 = inversesqrt(u_xlat16_17);
    u_xlat16_2.xyz = vec3(u_xlat16_17) * u_xlat16_2.xyz;
    u_xlat16_17 = dot(vs_TEXCOORD1.xyz, vs_TEXCOORD1.xyz);
    u_xlat16_17 = inversesqrt(u_xlat16_17);
    u_xlat16_3.xyz = vec3(u_xlat16_17) * vs_TEXCOORD1.xyz;
    u_xlat16_2.x = dot(u_xlat16_3.xyz, u_xlat16_2.xyz);
    u_xlat16_2.y = dot(u_xlat16_3.xyz, u_xlat0.xyz);
    u_xlat16_2.xy = max(u_xlat16_2.xy, vec2(0.0, 0.0));
    u_xlat0.x = log2(u_xlat16_2.x);
    u_xlat16_2.x = _Smoothness * 128.0;
    u_xlat0.x = u_xlat0.x * u_xlat16_2.x;
    u_xlat0.x = exp2(u_xlat0.x);
    u_xlat16_2.x = (-_SpecSmooth) * 0.5 + 0.5;
    u_xlat0.x = u_xlat0.x * 2.0 + (-u_xlat16_2.x);
    u_xlat16_12 = _SpecSmooth * 0.5 + 0.5;
    u_xlat5.x = (-u_xlat16_2.x) + u_xlat16_12;
    u_xlat5.x = float(1.0) / u_xlat5.x;
    u_xlat0.x = u_xlat5.x * u_xlat0.x;
#ifdef UNITY_ADRENO_ES3
    u_xlat0.x = min(max(u_xlat0.x, 0.0), 1.0);
#else
    u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);
#endif
    u_xlat5.x = u_xlat0.x * -2.0 + 3.0;
    u_xlat0.x = u_xlat0.x * u_xlat0.x;
    u_xlat0.x = u_xlat0.x * u_xlat5.x;
    u_xlat5.xyz = vs_TEXCOORD2.yyy * hlslcc_mtx4x4unity_WorldToLight[1].xyz;
    u_xlat5.xyz = hlslcc_mtx4x4unity_WorldToLight[0].xyz * vs_TEXCOORD2.xxx + u_xlat5.xyz;
    u_xlat5.xyz = hlslcc_mtx4x4unity_WorldToLight[2].xyz * vs_TEXCOORD2.zzz + u_xlat5.xyz;
    u_xlat5.xyz = u_xlat5.xyz + hlslcc_mtx4x4unity_WorldToLight[3].xyz;
    u_xlat5.x = dot(u_xlat5.xyz, u_xlat5.xyz);
    u_xlat5.x = texture(_LightTexture0, u_xlat5.xx).x;
    u_xlat16_2.xzw = u_xlat5.xxx * _LightColor0.xyz;
    u_xlat16_3.xyz = u_xlat16_2.xzw * _SpecColor.xyz;
    u_xlat0.xyz = u_xlat0.xxx * u_xlat16_3.xyz;
    u_xlat16_3.x = (-_RampSmooth) * 0.5 + _RampThreshold;
    u_xlat16_7 = u_xlat16_2.y + (-u_xlat16_3.x);
    u_xlat16_8 = _RampSmooth * 0.5 + _RampThreshold;
    u_xlat16_3.x = (-u_xlat16_3.x) + u_xlat16_8;
    u_xlat16_3.x = float(1.0) / u_xlat16_3.x;
    u_xlat16_7 = u_xlat16_7 * u_xlat16_3.x;
#ifdef UNITY_ADRENO_ES3
    u_xlat16_7 = min(max(u_xlat16_7, 0.0), 1.0);
#else
    u_xlat16_7 = clamp(u_xlat16_7, 0.0, 1.0);
#endif
    u_xlat16_3.x = u_xlat16_7 * -2.0 + 3.0;
    u_xlat16_7 = u_xlat16_7 * u_xlat16_7;
    u_xlat16_7 = u_xlat16_7 * u_xlat16_3.x;
    u_xlat16_3.xyz = vec3(u_xlat16_7) * _HColor.xyz;
    u_xlat16_1.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_4.xyz = u_xlat16_1.xyz * _Color.xyz;
    u_xlat16_2.xyz = u_xlat16_2.xzw * u_xlat16_4.xyz;
    u_xlat0.xyz = u_xlat16_2.xyz * u_xlat16_3.xyz + u_xlat0.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier01 " {
Keywords { "POINT" }
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToLight[4];
uniform 	vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in highp vec3 in_NORMAL0;
in highp vec4 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out highp vec3 vs_TEXCOORD1;
out highp vec3 vs_TEXCOORD2;
out highp vec3 vs_TEXCOORD3;
out highp vec4 vs_TEXCOORD4;
vec4 u_xlat0;
vec4 u_xlat1;
vec4 u_xlat2;
float u_xlat10;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy;
    u_xlat1.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat1.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat1.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat10 = dot(u_xlat1.xyz, u_xlat1.xyz);
    u_xlat10 = inversesqrt(u_xlat10);
    vs_TEXCOORD1.xyz = vec3(u_xlat10) * u_xlat1.xyz;
    vs_TEXCOORD2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[3] * in_POSITION0.wwww + u_xlat0;
    u_xlat1.xyz = u_xlat0.yyy * hlslcc_mtx4x4unity_WorldToLight[1].xyz;
    u_xlat1.xyz = hlslcc_mtx4x4unity_WorldToLight[0].xyz * u_xlat0.xxx + u_xlat1.xyz;
    u_xlat0.xyz = hlslcc_mtx4x4unity_WorldToLight[2].xyz * u_xlat0.zzz + u_xlat1.xyz;
    vs_TEXCOORD3.xyz = hlslcc_mtx4x4unity_WorldToLight[3].xyz * u_xlat0.www + u_xlat0.xyz;
    vs_TEXCOORD4 = vec4(0.0, 0.0, 0.0, 0.0);
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec3 _WorldSpaceCameraPos;
uniform 	vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 _LightColor0;
uniform 	mediump vec4 _SpecColor;
uniform 	vec4 hlslcc_mtx4x4unity_WorldToLight[4];
uniform 	mediump vec4 _Color;
uniform 	mediump float _Smoothness;
uniform 	mediump vec4 _HColor;
uniform 	mediump float _RampThreshold;
uniform 	mediump float _RampSmooth;
uniform 	mediump float _SpecSmooth;
UNITY_LOCATION(0) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(1) uniform highp sampler2D _LightTexture0;
in mediump vec2 vs_TEXCOORD0;
in highp vec3 vs_TEXCOORD1;
in highp vec3 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
vec3 u_xlat1;
mediump vec3 u_xlat16_1;
mediump vec4 u_xlat16_2;
mediump vec3 u_xlat16_3;
mediump vec3 u_xlat16_4;
vec3 u_xlat5;
mediump float u_xlat16_7;
mediump float u_xlat16_8;
mediump float u_xlat16_12;
float u_xlat15;
mediump float u_xlat16_17;
void main()
{
    u_xlat0.xyz = (-vs_TEXCOORD2.xyz) + _WorldSpaceLightPos0.xyz;
    u_xlat15 = dot(u_xlat0.xyz, u_xlat0.xyz);
    u_xlat15 = inversesqrt(u_xlat15);
    u_xlat0.xyz = vec3(u_xlat15) * u_xlat0.xyz;
    u_xlat1.xyz = (-vs_TEXCOORD2.xyz) + _WorldSpaceCameraPos.xyz;
    u_xlat15 = dot(u_xlat1.xyz, u_xlat1.xyz);
    u_xlat15 = inversesqrt(u_xlat15);
    u_xlat16_2.xyz = u_xlat1.xyz * vec3(u_xlat15) + u_xlat0.xyz;
    u_xlat16_17 = dot(u_xlat16_2.xyz, u_xlat16_2.xyz);
    u_xlat16_17 = inversesqrt(u_xlat16_17);
    u_xlat16_2.xyz = vec3(u_xlat16_17) * u_xlat16_2.xyz;
    u_xlat16_17 = dot(vs_TEXCOORD1.xyz, vs_TEXCOORD1.xyz);
    u_xlat16_17 = inversesqrt(u_xlat16_17);
    u_xlat16_3.xyz = vec3(u_xlat16_17) * vs_TEXCOORD1.xyz;
    u_xlat16_2.x = dot(u_xlat16_3.xyz, u_xlat16_2.xyz);
    u_xlat16_2.y = dot(u_xlat16_3.xyz, u_xlat0.xyz);
    u_xlat16_2.xy = max(u_xlat16_2.xy, vec2(0.0, 0.0));
    u_xlat0.x = log2(u_xlat16_2.x);
    u_xlat16_2.x = _Smoothness * 128.0;
    u_xlat0.x = u_xlat0.x * u_xlat16_2.x;
    u_xlat0.x = exp2(u_xlat0.x);
    u_xlat16_2.x = (-_SpecSmooth) * 0.5 + 0.5;
    u_xlat0.x = u_xlat0.x * 2.0 + (-u_xlat16_2.x);
    u_xlat16_12 = _SpecSmooth * 0.5 + 0.5;
    u_xlat5.x = (-u_xlat16_2.x) + u_xlat16_12;
    u_xlat5.x = float(1.0) / u_xlat5.x;
    u_xlat0.x = u_xlat5.x * u_xlat0.x;
#ifdef UNITY_ADRENO_ES3
    u_xlat0.x = min(max(u_xlat0.x, 0.0), 1.0);
#else
    u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);
#endif
    u_xlat5.x = u_xlat0.x * -2.0 + 3.0;
    u_xlat0.x = u_xlat0.x * u_xlat0.x;
    u_xlat0.x = u_xlat0.x * u_xlat5.x;
    u_xlat5.xyz = vs_TEXCOORD2.yyy * hlslcc_mtx4x4unity_WorldToLight[1].xyz;
    u_xlat5.xyz = hlslcc_mtx4x4unity_WorldToLight[0].xyz * vs_TEXCOORD2.xxx + u_xlat5.xyz;
    u_xlat5.xyz = hlslcc_mtx4x4unity_WorldToLight[2].xyz * vs_TEXCOORD2.zzz + u_xlat5.xyz;
    u_xlat5.xyz = u_xlat5.xyz + hlslcc_mtx4x4unity_WorldToLight[3].xyz;
    u_xlat5.x = dot(u_xlat5.xyz, u_xlat5.xyz);
    u_xlat5.x = texture(_LightTexture0, u_xlat5.xx).x;
    u_xlat16_2.xzw = u_xlat5.xxx * _LightColor0.xyz;
    u_xlat16_3.xyz = u_xlat16_2.xzw * _SpecColor.xyz;
    u_xlat0.xyz = u_xlat0.xxx * u_xlat16_3.xyz;
    u_xlat16_3.x = (-_RampSmooth) * 0.5 + _RampThreshold;
    u_xlat16_7 = u_xlat16_2.y + (-u_xlat16_3.x);
    u_xlat16_8 = _RampSmooth * 0.5 + _RampThreshold;
    u_xlat16_3.x = (-u_xlat16_3.x) + u_xlat16_8;
    u_xlat16_3.x = float(1.0) / u_xlat16_3.x;
    u_xlat16_7 = u_xlat16_7 * u_xlat16_3.x;
#ifdef UNITY_ADRENO_ES3
    u_xlat16_7 = min(max(u_xlat16_7, 0.0), 1.0);
#else
    u_xlat16_7 = clamp(u_xlat16_7, 0.0, 1.0);
#endif
    u_xlat16_3.x = u_xlat16_7 * -2.0 + 3.0;
    u_xlat16_7 = u_xlat16_7 * u_xlat16_7;
    u_xlat16_7 = u_xlat16_7 * u_xlat16_3.x;
    u_xlat16_3.xyz = vec3(u_xlat16_7) * _HColor.xyz;
    u_xlat16_1.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_4.xyz = u_xlat16_1.xyz * _Color.xyz;
    u_xlat16_2.xyz = u_xlat16_2.xzw * u_xlat16_4.xyz;
    u_xlat0.xyz = u_xlat16_2.xyz * u_xlat16_3.xyz + u_xlat0.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier02 " {
Keywords { "POINT" }
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToLight[4];
uniform 	vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in highp vec3 in_NORMAL0;
in highp vec4 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out highp vec3 vs_TEXCOORD1;
out highp vec3 vs_TEXCOORD2;
out highp vec3 vs_TEXCOORD3;
out highp vec4 vs_TEXCOORD4;
vec4 u_xlat0;
vec4 u_xlat1;
vec4 u_xlat2;
float u_xlat10;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy;
    u_xlat1.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat1.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat1.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat10 = dot(u_xlat1.xyz, u_xlat1.xyz);
    u_xlat10 = inversesqrt(u_xlat10);
    vs_TEXCOORD1.xyz = vec3(u_xlat10) * u_xlat1.xyz;
    vs_TEXCOORD2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[3] * in_POSITION0.wwww + u_xlat0;
    u_xlat1.xyz = u_xlat0.yyy * hlslcc_mtx4x4unity_WorldToLight[1].xyz;
    u_xlat1.xyz = hlslcc_mtx4x4unity_WorldToLight[0].xyz * u_xlat0.xxx + u_xlat1.xyz;
    u_xlat0.xyz = hlslcc_mtx4x4unity_WorldToLight[2].xyz * u_xlat0.zzz + u_xlat1.xyz;
    vs_TEXCOORD3.xyz = hlslcc_mtx4x4unity_WorldToLight[3].xyz * u_xlat0.www + u_xlat0.xyz;
    vs_TEXCOORD4 = vec4(0.0, 0.0, 0.0, 0.0);
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec3 _WorldSpaceCameraPos;
uniform 	vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 _LightColor0;
uniform 	mediump vec4 _SpecColor;
uniform 	vec4 hlslcc_mtx4x4unity_WorldToLight[4];
uniform 	mediump vec4 _Color;
uniform 	mediump float _Smoothness;
uniform 	mediump vec4 _HColor;
uniform 	mediump float _RampThreshold;
uniform 	mediump float _RampSmooth;
uniform 	mediump float _SpecSmooth;
UNITY_LOCATION(0) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(1) uniform highp sampler2D _LightTexture0;
in mediump vec2 vs_TEXCOORD0;
in highp vec3 vs_TEXCOORD1;
in highp vec3 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
vec3 u_xlat1;
mediump vec3 u_xlat16_1;
mediump vec4 u_xlat16_2;
mediump vec3 u_xlat16_3;
mediump vec3 u_xlat16_4;
vec3 u_xlat5;
mediump float u_xlat16_7;
mediump float u_xlat16_8;
mediump float u_xlat16_12;
float u_xlat15;
mediump float u_xlat16_17;
void main()
{
    u_xlat0.xyz = (-vs_TEXCOORD2.xyz) + _WorldSpaceLightPos0.xyz;
    u_xlat15 = dot(u_xlat0.xyz, u_xlat0.xyz);
    u_xlat15 = inversesqrt(u_xlat15);
    u_xlat0.xyz = vec3(u_xlat15) * u_xlat0.xyz;
    u_xlat1.xyz = (-vs_TEXCOORD2.xyz) + _WorldSpaceCameraPos.xyz;
    u_xlat15 = dot(u_xlat1.xyz, u_xlat1.xyz);
    u_xlat15 = inversesqrt(u_xlat15);
    u_xlat16_2.xyz = u_xlat1.xyz * vec3(u_xlat15) + u_xlat0.xyz;
    u_xlat16_17 = dot(u_xlat16_2.xyz, u_xlat16_2.xyz);
    u_xlat16_17 = inversesqrt(u_xlat16_17);
    u_xlat16_2.xyz = vec3(u_xlat16_17) * u_xlat16_2.xyz;
    u_xlat16_17 = dot(vs_TEXCOORD1.xyz, vs_TEXCOORD1.xyz);
    u_xlat16_17 = inversesqrt(u_xlat16_17);
    u_xlat16_3.xyz = vec3(u_xlat16_17) * vs_TEXCOORD1.xyz;
    u_xlat16_2.x = dot(u_xlat16_3.xyz, u_xlat16_2.xyz);
    u_xlat16_2.y = dot(u_xlat16_3.xyz, u_xlat0.xyz);
    u_xlat16_2.xy = max(u_xlat16_2.xy, vec2(0.0, 0.0));
    u_xlat0.x = log2(u_xlat16_2.x);
    u_xlat16_2.x = _Smoothness * 128.0;
    u_xlat0.x = u_xlat0.x * u_xlat16_2.x;
    u_xlat0.x = exp2(u_xlat0.x);
    u_xlat16_2.x = (-_SpecSmooth) * 0.5 + 0.5;
    u_xlat0.x = u_xlat0.x * 2.0 + (-u_xlat16_2.x);
    u_xlat16_12 = _SpecSmooth * 0.5 + 0.5;
    u_xlat5.x = (-u_xlat16_2.x) + u_xlat16_12;
    u_xlat5.x = float(1.0) / u_xlat5.x;
    u_xlat0.x = u_xlat5.x * u_xlat0.x;
#ifdef UNITY_ADRENO_ES3
    u_xlat0.x = min(max(u_xlat0.x, 0.0), 1.0);
#else
    u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);
#endif
    u_xlat5.x = u_xlat0.x * -2.0 + 3.0;
    u_xlat0.x = u_xlat0.x * u_xlat0.x;
    u_xlat0.x = u_xlat0.x * u_xlat5.x;
    u_xlat5.xyz = vs_TEXCOORD2.yyy * hlslcc_mtx4x4unity_WorldToLight[1].xyz;
    u_xlat5.xyz = hlslcc_mtx4x4unity_WorldToLight[0].xyz * vs_TEXCOORD2.xxx + u_xlat5.xyz;
    u_xlat5.xyz = hlslcc_mtx4x4unity_WorldToLight[2].xyz * vs_TEXCOORD2.zzz + u_xlat5.xyz;
    u_xlat5.xyz = u_xlat5.xyz + hlslcc_mtx4x4unity_WorldToLight[3].xyz;
    u_xlat5.x = dot(u_xlat5.xyz, u_xlat5.xyz);
    u_xlat5.x = texture(_LightTexture0, u_xlat5.xx).x;
    u_xlat16_2.xzw = u_xlat5.xxx * _LightColor0.xyz;
    u_xlat16_3.xyz = u_xlat16_2.xzw * _SpecColor.xyz;
    u_xlat0.xyz = u_xlat0.xxx * u_xlat16_3.xyz;
    u_xlat16_3.x = (-_RampSmooth) * 0.5 + _RampThreshold;
    u_xlat16_7 = u_xlat16_2.y + (-u_xlat16_3.x);
    u_xlat16_8 = _RampSmooth * 0.5 + _RampThreshold;
    u_xlat16_3.x = (-u_xlat16_3.x) + u_xlat16_8;
    u_xlat16_3.x = float(1.0) / u_xlat16_3.x;
    u_xlat16_7 = u_xlat16_7 * u_xlat16_3.x;
#ifdef UNITY_ADRENO_ES3
    u_xlat16_7 = min(max(u_xlat16_7, 0.0), 1.0);
#else
    u_xlat16_7 = clamp(u_xlat16_7, 0.0, 1.0);
#endif
    u_xlat16_3.x = u_xlat16_7 * -2.0 + 3.0;
    u_xlat16_7 = u_xlat16_7 * u_xlat16_7;
    u_xlat16_7 = u_xlat16_7 * u_xlat16_3.x;
    u_xlat16_3.xyz = vec3(u_xlat16_7) * _HColor.xyz;
    u_xlat16_1.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_4.xyz = u_xlat16_1.xyz * _Color.xyz;
    u_xlat16_2.xyz = u_xlat16_2.xzw * u_xlat16_4.xyz;
    u_xlat0.xyz = u_xlat16_2.xyz * u_xlat16_3.xyz + u_xlat0.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "vulkan hw_tier00 " {
Keywords { "POINT" }
"; SPIR-V
; Version: 1.0
; Generator: Khronos Glslang Reference Front End; 6
; Bound: 209
; Schema: 0
                                                      OpCapability Shader 
                                               %1 = OpExtInstImport "GLSL.std.450" 
                                                      OpMemoryModel Logical GLSL450 
                                                      OpEntryPoint Vertex %4 "main" %11 %75 %85 %101 %106 %137 %143 %190 %200 
                                                      OpName vs_TEXCOORD0 "vs_TEXCOORD0" 
                                                      OpName vs_TEXCOORD1 "vs_TEXCOORD1" 
                                                      OpName vs_TEXCOORD2 "vs_TEXCOORD2" 
                                                      OpName vs_TEXCOORD3 "vs_TEXCOORD3" 
                                                      OpName vs_TEXCOORD4 "vs_TEXCOORD4" 
                                                      OpDecorate %11 Location 11 
                                                      OpDecorate %16 ArrayStride 16 
                                                      OpDecorate %17 ArrayStride 17 
                                                      OpDecorate %18 ArrayStride 18 
                                                      OpDecorate %19 ArrayStride 19 
                                                      OpMemberDecorate %20 0 Offset 20 
                                                      OpMemberDecorate %20 1 Offset 20 
                                                      OpMemberDecorate %20 2 Offset 20 
                                                      OpMemberDecorate %20 3 Offset 20 
                                                      OpMemberDecorate %20 4 Offset 20 
                                                      OpDecorate %20 Block 
                                                      OpDecorate %22 DescriptorSet 22 
                                                      OpDecorate %22 Binding 22 
                                                      OpMemberDecorate %73 0 BuiltIn 73 
                                                      OpMemberDecorate %73 1 BuiltIn 73 
                                                      OpMemberDecorate %73 2 BuiltIn 73 
                                                      OpDecorate %73 Block 
                                                      OpDecorate %85 Location 85 
                                                      OpDecorate vs_TEXCOORD0 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD0 Location 101 
                                                      OpDecorate %106 Location 106 
                                                      OpDecorate vs_TEXCOORD1 Location 137 
                                                      OpDecorate vs_TEXCOORD2 Location 143 
                                                      OpDecorate vs_TEXCOORD3 Location 190 
                                                      OpDecorate vs_TEXCOORD4 Location 200 
                                               %2 = OpTypeVoid 
                                               %3 = OpTypeFunction %2 
                                               %6 = OpTypeFloat 32 
                                               %7 = OpTypeVector %6 4 
                                               %8 = OpTypePointer Private %7 
                                Private f32_4* %9 = OpVariable Private 
                                              %10 = OpTypePointer Input %7 
                                 Input f32_4* %11 = OpVariable Input 
                                              %14 = OpTypeInt 32 0 
                                          u32 %15 = OpConstant 4 
                                              %16 = OpTypeArray %7 %15 
                                              %17 = OpTypeArray %7 %15 
                                              %18 = OpTypeArray %7 %15 
                                              %19 = OpTypeArray %7 %15 
                                              %20 = OpTypeStruct %16 %17 %18 %19 %7 
                                              %21 = OpTypePointer Uniform %20 
Uniform struct {f32_4[4]; f32_4[4]; f32_4[4]; f32_4[4]; f32_4;}* %22 = OpVariable Uniform 
                                              %23 = OpTypeInt 32 1 
                                          i32 %24 = OpConstant 0 
                                          i32 %25 = OpConstant 1 
                                              %26 = OpTypePointer Uniform %7 
                                          i32 %37 = OpConstant 2 
                               Private f32_4* %45 = OpVariable Private 
                                          i32 %47 = OpConstant 3 
                               Private f32_4* %51 = OpVariable Private 
                                          u32 %71 = OpConstant 1 
                                              %72 = OpTypeArray %6 %71 
                                              %73 = OpTypeStruct %7 %6 %72 
                                              %74 = OpTypePointer Output %73 
         Output struct {f32_4; f32; f32[1];}* %75 = OpVariable Output 
                                              %83 = OpTypePointer Output %7 
                                 Input f32_4* %85 = OpVariable Input 
                                              %86 = OpTypeVector %6 2 
                                          i32 %89 = OpConstant 4 
                                             %100 = OpTypePointer Output %86 
                       Output f32_2* vs_TEXCOORD0 = OpVariable Output 
                                             %104 = OpTypeVector %6 3 
                                             %105 = OpTypePointer Input %104 
                                Input f32_3* %106 = OpVariable Input 
                                         u32 %112 = OpConstant 0 
                                             %113 = OpTypePointer Private %6 
                                         u32 %126 = OpConstant 2 
                                Private f32* %128 = OpVariable Private 
                                             %136 = OpTypePointer Output %104 
                       Output f32_3* vs_TEXCOORD1 = OpVariable Output 
                       Output f32_3* vs_TEXCOORD2 = OpVariable Output 
                       Output f32_3* vs_TEXCOORD3 = OpVariable Output 
                       Output f32_4* vs_TEXCOORD4 = OpVariable Output 
                                         f32 %201 = OpConstant 3.674022E-40 
                                       f32_4 %202 = OpConstantComposite %201 %201 %201 %201 
                                             %203 = OpTypePointer Output %6 
                                          void %4 = OpFunction None %3 
                                               %5 = OpLabel 
                                        f32_4 %12 = OpLoad %11 
                                        f32_4 %13 = OpVectorShuffle %12 %12 1 1 1 1 
                               Uniform f32_4* %27 = OpAccessChain %22 %24 %25 
                                        f32_4 %28 = OpLoad %27 
                                        f32_4 %29 = OpFMul %13 %28 
                                                      OpStore %9 %29 
                               Uniform f32_4* %30 = OpAccessChain %22 %24 %24 
                                        f32_4 %31 = OpLoad %30 
                                        f32_4 %32 = OpLoad %11 
                                        f32_4 %33 = OpVectorShuffle %32 %32 0 0 0 0 
                                        f32_4 %34 = OpFMul %31 %33 
                                        f32_4 %35 = OpLoad %9 
                                        f32_4 %36 = OpFAdd %34 %35 
                                                      OpStore %9 %36 
                               Uniform f32_4* %38 = OpAccessChain %22 %24 %37 
                                        f32_4 %39 = OpLoad %38 
                                        f32_4 %40 = OpLoad %11 
                                        f32_4 %41 = OpVectorShuffle %40 %40 2 2 2 2 
                                        f32_4 %42 = OpFMul %39 %41 
                                        f32_4 %43 = OpLoad %9 
                                        f32_4 %44 = OpFAdd %42 %43 
                                                      OpStore %9 %44 
                                        f32_4 %46 = OpLoad %9 
                               Uniform f32_4* %48 = OpAccessChain %22 %24 %47 
                                        f32_4 %49 = OpLoad %48 
                                        f32_4 %50 = OpFAdd %46 %49 
                                                      OpStore %45 %50 
                                        f32_4 %52 = OpLoad %45 
                                        f32_4 %53 = OpVectorShuffle %52 %52 1 1 1 1 
                               Uniform f32_4* %54 = OpAccessChain %22 %37 %25 
                                        f32_4 %55 = OpLoad %54 
                                        f32_4 %56 = OpFMul %53 %55 
                                                      OpStore %51 %56 
                               Uniform f32_4* %57 = OpAccessChain %22 %37 %24 
                                        f32_4 %58 = OpLoad %57 
                                        f32_4 %59 = OpLoad %45 
                                        f32_4 %60 = OpVectorShuffle %59 %59 0 0 0 0 
                                        f32_4 %61 = OpFMul %58 %60 
                                        f32_4 %62 = OpLoad %51 
                                        f32_4 %63 = OpFAdd %61 %62 
                                                      OpStore %51 %63 
                               Uniform f32_4* %64 = OpAccessChain %22 %37 %37 
                                        f32_4 %65 = OpLoad %64 
                                        f32_4 %66 = OpLoad %45 
                                        f32_4 %67 = OpVectorShuffle %66 %66 2 2 2 2 
                                        f32_4 %68 = OpFMul %65 %67 
                                        f32_4 %69 = OpLoad %51 
                                        f32_4 %70 = OpFAdd %68 %69 
                                                      OpStore %51 %70 
                               Uniform f32_4* %76 = OpAccessChain %22 %37 %47 
                                        f32_4 %77 = OpLoad %76 
                                        f32_4 %78 = OpLoad %45 
                                        f32_4 %79 = OpVectorShuffle %78 %78 3 3 3 3 
                                        f32_4 %80 = OpFMul %77 %79 
                                        f32_4 %81 = OpLoad %51 
                                        f32_4 %82 = OpFAdd %80 %81 
                                Output f32_4* %84 = OpAccessChain %75 %24 
                                                      OpStore %84 %82 
                                        f32_4 %87 = OpLoad %85 
                                        f32_2 %88 = OpVectorShuffle %87 %87 0 1 
                               Uniform f32_4* %90 = OpAccessChain %22 %89 
                                        f32_4 %91 = OpLoad %90 
                                        f32_2 %92 = OpVectorShuffle %91 %91 0 1 
                                        f32_2 %93 = OpFMul %88 %92 
                               Uniform f32_4* %94 = OpAccessChain %22 %89 
                                        f32_4 %95 = OpLoad %94 
                                        f32_2 %96 = OpVectorShuffle %95 %95 2 3 
                                        f32_2 %97 = OpFAdd %93 %96 
                                        f32_4 %98 = OpLoad %45 
                                        f32_4 %99 = OpVectorShuffle %98 %97 4 5 2 3 
                                                      OpStore %45 %99 
                                       f32_4 %102 = OpLoad %45 
                                       f32_2 %103 = OpVectorShuffle %102 %102 0 1 
                                                      OpStore vs_TEXCOORD0 %103 
                                       f32_3 %107 = OpLoad %106 
                              Uniform f32_4* %108 = OpAccessChain %22 %25 %24 
                                       f32_4 %109 = OpLoad %108 
                                       f32_3 %110 = OpVectorShuffle %109 %109 0 1 2 
                                         f32 %111 = OpDot %107 %110 
                                Private f32* %114 = OpAccessChain %45 %112 
                                                      OpStore %114 %111 
                                       f32_3 %115 = OpLoad %106 
                              Uniform f32_4* %116 = OpAccessChain %22 %25 %25 
                                       f32_4 %117 = OpLoad %116 
                                       f32_3 %118 = OpVectorShuffle %117 %117 0 1 2 
                                         f32 %119 = OpDot %115 %118 
                                Private f32* %120 = OpAccessChain %45 %71 
                                                      OpStore %120 %119 
                                       f32_3 %121 = OpLoad %106 
                              Uniform f32_4* %122 = OpAccessChain %22 %25 %37 
                                       f32_4 %123 = OpLoad %122 
                                       f32_3 %124 = OpVectorShuffle %123 %123 0 1 2 
                                         f32 %125 = OpDot %121 %124 
                                Private f32* %127 = OpAccessChain %45 %126 
                                                      OpStore %127 %125 
                                       f32_4 %129 = OpLoad %45 
                                       f32_3 %130 = OpVectorShuffle %129 %129 0 1 2 
                                       f32_4 %131 = OpLoad %45 
                                       f32_3 %132 = OpVectorShuffle %131 %131 0 1 2 
                                         f32 %133 = OpDot %130 %132 
                                                      OpStore %128 %133 
                                         f32 %134 = OpLoad %128 
                                         f32 %135 = OpExtInst %1 32 %134 
                                                      OpStore %128 %135 
                                         f32 %138 = OpLoad %128 
                                       f32_3 %139 = OpCompositeConstruct %138 %138 %138 
                                       f32_4 %140 = OpLoad %45 
                                       f32_3 %141 = OpVectorShuffle %140 %140 0 1 2 
                                       f32_3 %142 = OpFMul %139 %141 
                                                      OpStore vs_TEXCOORD1 %142 
                              Uniform f32_4* %144 = OpAccessChain %22 %24 %47 
                                       f32_4 %145 = OpLoad %144 
                                       f32_3 %146 = OpVectorShuffle %145 %145 0 1 2 
                                       f32_4 %147 = OpLoad %11 
                                       f32_3 %148 = OpVectorShuffle %147 %147 3 3 3 
                                       f32_3 %149 = OpFMul %146 %148 
                                       f32_4 %150 = OpLoad %9 
                                       f32_3 %151 = OpVectorShuffle %150 %150 0 1 2 
                                       f32_3 %152 = OpFAdd %149 %151 
                                                      OpStore vs_TEXCOORD2 %152 
                              Uniform f32_4* %153 = OpAccessChain %22 %24 %47 
                                       f32_4 %154 = OpLoad %153 
                                       f32_4 %155 = OpLoad %11 
                                       f32_4 %156 = OpVectorShuffle %155 %155 3 3 3 3 
                                       f32_4 %157 = OpFMul %154 %156 
                                       f32_4 %158 = OpLoad %9 
                                       f32_4 %159 = OpFAdd %157 %158 
                                                      OpStore %9 %159 
                                       f32_4 %160 = OpLoad %9 
                                       f32_3 %161 = OpVectorShuffle %160 %160 1 1 1 
                              Uniform f32_4* %162 = OpAccessChain %22 %47 %25 
                                       f32_4 %163 = OpLoad %162 
                                       f32_3 %164 = OpVectorShuffle %163 %163 0 1 2 
                                       f32_3 %165 = OpFMul %161 %164 
                                       f32_4 %166 = OpLoad %45 
                                       f32_4 %167 = OpVectorShuffle %166 %165 4 5 6 3 
                                                      OpStore %45 %167 
                              Uniform f32_4* %168 = OpAccessChain %22 %47 %24 
                                       f32_4 %169 = OpLoad %168 
                                       f32_3 %170 = OpVectorShuffle %169 %169 0 1 2 
                                       f32_4 %171 = OpLoad %9 
                                       f32_3 %172 = OpVectorShuffle %171 %171 0 0 0 
                                       f32_3 %173 = OpFMul %170 %172 
                                       f32_4 %174 = OpLoad %45 
                                       f32_3 %175 = OpVectorShuffle %174 %174 0 1 2 
                                       f32_3 %176 = OpFAdd %173 %175 
                                       f32_4 %177 = OpLoad %45 
                                       f32_4 %178 = OpVectorShuffle %177 %176 4 5 6 3 
                                                      OpStore %45 %178 
                              Uniform f32_4* %179 = OpAccessChain %22 %47 %37 
                                       f32_4 %180 = OpLoad %179 
                                       f32_3 %181 = OpVectorShuffle %180 %180 0 1 2 
                                       f32_4 %182 = OpLoad %9 
                                       f32_3 %183 = OpVectorShuffle %182 %182 2 2 2 
                                       f32_3 %184 = OpFMul %181 %183 
                                       f32_4 %185 = OpLoad %45 
                                       f32_3 %186 = OpVectorShuffle %185 %185 0 1 2 
                                       f32_3 %187 = OpFAdd %184 %186 
                                       f32_4 %188 = OpLoad %9 
                                       f32_4 %189 = OpVectorShuffle %188 %187 4 5 6 3 
                                                      OpStore %9 %189 
                              Uniform f32_4* %191 = OpAccessChain %22 %47 %47 
                                       f32_4 %192 = OpLoad %191 
                                       f32_3 %193 = OpVectorShuffle %192 %192 0 1 2 
                                       f32_4 %194 = OpLoad %9 
                                       f32_3 %195 = OpVectorShuffle %194 %194 3 3 3 
                                       f32_3 %196 = OpFMul %193 %195 
                                       f32_4 %197 = OpLoad %9 
                                       f32_3 %198 = OpVectorShuffle %197 %197 0 1 2 
                                       f32_3 %199 = OpFAdd %196 %198 
                                                      OpStore vs_TEXCOORD3 %199 
                                                      OpStore vs_TEXCOORD4 %202 
                                 Output f32* %204 = OpAccessChain %75 %24 %71 
                                         f32 %205 = OpLoad %204 
                                         f32 %206 = OpFNegate %205 
                                 Output f32* %207 = OpAccessChain %75 %24 %71 
                                                      OpStore %207 %206 
                                                      OpReturn
                                                      OpFunctionEnd
; SPIR-V
; Version: 1.0
; Generator: Khronos Glslang Reference Front End; 6
; Bound: 355
; Schema: 0
                                                      OpCapability Shader 
                                               %1 = OpExtInstImport "GLSL.std.450" 
                                                      OpMemoryModel Logical GLSL450 
                                                      OpEntryPoint Fragment %4 "main" %11 %77 %323 %347 
                                                      OpExecutionMode %4 OriginUpperLeft 
                                                      OpName vs_TEXCOORD2 "vs_TEXCOORD2" 
                                                      OpName vs_TEXCOORD1 "vs_TEXCOORD1" 
                                                      OpName vs_TEXCOORD0 "vs_TEXCOORD0" 
                                                      OpDecorate vs_TEXCOORD2 Location 11 
                                                      OpDecorate %17 ArrayStride 17 
                                                      OpMemberDecorate %18 0 Offset 18 
                                                      OpMemberDecorate %18 1 Offset 18 
                                                      OpMemberDecorate %18 2 RelaxedPrecision 
                                                      OpMemberDecorate %18 2 Offset 18 
                                                      OpMemberDecorate %18 3 RelaxedPrecision 
                                                      OpMemberDecorate %18 3 Offset 18 
                                                      OpMemberDecorate %18 4 Offset 18 
                                                      OpMemberDecorate %18 5 RelaxedPrecision 
                                                      OpMemberDecorate %18 5 Offset 18 
                                                      OpMemberDecorate %18 6 RelaxedPrecision 
                                                      OpMemberDecorate %18 6 Offset 18 
                                                      OpMemberDecorate %18 7 RelaxedPrecision 
                                                      OpMemberDecorate %18 7 Offset 18 
                                                      OpMemberDecorate %18 8 RelaxedPrecision 
                                                      OpMemberDecorate %18 8 Offset 18 
                                                      OpMemberDecorate %18 9 RelaxedPrecision 
                                                      OpMemberDecorate %18 9 Offset 18 
                                                      OpMemberDecorate %18 10 RelaxedPrecision 
                                                      OpMemberDecorate %18 10 Offset 18 
                                                      OpDecorate %18 Block 
                                                      OpDecorate %20 DescriptorSet 20 
                                                      OpDecorate %20 Binding 20 
                                                      OpDecorate %53 RelaxedPrecision 
                                                      OpDecorate %62 RelaxedPrecision 
                                                      OpDecorate %63 RelaxedPrecision 
                                                      OpDecorate %64 RelaxedPrecision 
                                                      OpDecorate %65 RelaxedPrecision 
                                                      OpDecorate %66 RelaxedPrecision 
                                                      OpDecorate %67 RelaxedPrecision 
                                                      OpDecorate %68 RelaxedPrecision 
                                                      OpDecorate %69 RelaxedPrecision 
                                                      OpDecorate %70 RelaxedPrecision 
                                                      OpDecorate %71 RelaxedPrecision 
                                                      OpDecorate %72 RelaxedPrecision 
                                                      OpDecorate %73 RelaxedPrecision 
                                                      OpDecorate %74 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD1 Location 77 
                                                      OpDecorate %81 RelaxedPrecision 
                                                      OpDecorate %82 RelaxedPrecision 
                                                      OpDecorate %83 RelaxedPrecision 
                                                      OpDecorate %84 RelaxedPrecision 
                                                      OpDecorate %88 RelaxedPrecision 
                                                      OpDecorate %89 RelaxedPrecision 
                                                      OpDecorate %90 RelaxedPrecision 
                                                      OpDecorate %91 RelaxedPrecision 
                                                      OpDecorate %94 RelaxedPrecision 
                                                      OpDecorate %100 RelaxedPrecision 
                                                      OpDecorate %101 RelaxedPrecision 
                                                      OpDecorate %104 RelaxedPrecision 
                                                      OpDecorate %108 RelaxedPrecision 
                                                      OpDecorate %109 RelaxedPrecision 
                                                      OpDecorate %114 RelaxedPrecision 
                                                      OpDecorate %116 RelaxedPrecision 
                                                      OpDecorate %121 RelaxedPrecision 
                                                      OpDecorate %130 RelaxedPrecision 
                                                      OpDecorate %131 RelaxedPrecision 
                                                      OpDecorate %133 RelaxedPrecision 
                                                      OpDecorate %134 RelaxedPrecision 
                                                      OpDecorate %141 RelaxedPrecision 
                                                      OpDecorate %142 RelaxedPrecision 
                                                      OpDecorate %145 RelaxedPrecision 
                                                      OpDecorate %147 RelaxedPrecision 
                                                      OpDecorate %148 RelaxedPrecision 
                                                      OpDecorate %149 RelaxedPrecision 
                                                      OpDecorate %152 RelaxedPrecision 
                                                      OpDecorate %153 RelaxedPrecision 
                                                      OpDecorate %154 RelaxedPrecision 
                                                      OpDecorate %155 RelaxedPrecision 
                                                      OpDecorate %227 DescriptorSet 227 
                                                      OpDecorate %227 Binding 227 
                                                      OpDecorate %231 DescriptorSet 231 
                                                      OpDecorate %231 Binding 231 
                                                      OpDecorate %243 RelaxedPrecision 
                                                      OpDecorate %244 RelaxedPrecision 
                                                      OpDecorate %248 RelaxedPrecision 
                                                      OpDecorate %249 RelaxedPrecision 
                                                      OpDecorate %251 RelaxedPrecision 
                                                      OpDecorate %252 RelaxedPrecision 
                                                      OpDecorate %253 RelaxedPrecision 
                                                      OpDecorate %256 RelaxedPrecision 
                                                      OpDecorate %260 RelaxedPrecision 
                                                      OpDecorate %261 RelaxedPrecision 
                                                      OpDecorate %262 RelaxedPrecision 
                                                      OpDecorate %265 RelaxedPrecision 
                                                      OpDecorate %266 RelaxedPrecision 
                                                      OpDecorate %268 RelaxedPrecision 
                                                      OpDecorate %270 RelaxedPrecision 
                                                      OpDecorate %272 RelaxedPrecision 
                                                      OpDecorate %273 RelaxedPrecision 
                                                      OpDecorate %274 RelaxedPrecision 
                                                      OpDecorate %275 RelaxedPrecision 
                                                      OpDecorate %277 RelaxedPrecision 
                                                      OpDecorate %278 RelaxedPrecision 
                                                      OpDecorate %280 RelaxedPrecision 
                                                      OpDecorate %281 RelaxedPrecision 
                                                      OpDecorate %283 RelaxedPrecision 
                                                      OpDecorate %284 RelaxedPrecision 
                                                      OpDecorate %285 RelaxedPrecision 
                                                      OpDecorate %286 RelaxedPrecision 
                                                      OpDecorate %289 RelaxedPrecision 
                                                      OpDecorate %290 RelaxedPrecision 
                                                      OpDecorate %292 RelaxedPrecision 
                                                      OpDecorate %294 RelaxedPrecision 
                                                      OpDecorate %295 RelaxedPrecision 
                                                      OpDecorate %296 RelaxedPrecision 
                                                      OpDecorate %297 RelaxedPrecision 
                                                      OpDecorate %298 RelaxedPrecision 
                                                      OpDecorate %299 RelaxedPrecision 
                                                      OpDecorate %300 RelaxedPrecision 
                                                      OpDecorate %302 RelaxedPrecision 
                                                      OpDecorate %303 RelaxedPrecision 
                                                      OpDecorate %304 RelaxedPrecision 
                                                      OpDecorate %305 RelaxedPrecision 
                                                      OpDecorate %307 RelaxedPrecision 
                                                      OpDecorate %308 RelaxedPrecision 
                                                      OpDecorate %309 RelaxedPrecision 
                                                      OpDecorate %310 RelaxedPrecision 
                                                      OpDecorate %313 RelaxedPrecision 
                                                      OpDecorate %314 RelaxedPrecision 
                                                      OpDecorate %315 RelaxedPrecision 
                                                      OpDecorate %316 RelaxedPrecision 
                                                      OpDecorate %317 RelaxedPrecision 
                                                      OpDecorate %317 DescriptorSet 317 
                                                      OpDecorate %317 Binding 317 
                                                      OpDecorate %318 RelaxedPrecision 
                                                      OpDecorate %319 RelaxedPrecision 
                                                      OpDecorate %319 DescriptorSet 319 
                                                      OpDecorate %319 Binding 319 
                                                      OpDecorate %320 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD0 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD0 Location 323 
                                                      OpDecorate %324 RelaxedPrecision 
                                                      OpDecorate %325 RelaxedPrecision 
                                                      OpDecorate %326 RelaxedPrecision 
                                                      OpDecorate %327 RelaxedPrecision 
                                                      OpDecorate %328 RelaxedPrecision 
                                                      OpDecorate %331 RelaxedPrecision 
                                                      OpDecorate %332 RelaxedPrecision 
                                                      OpDecorate %333 RelaxedPrecision 
                                                      OpDecorate %334 RelaxedPrecision 
                                                      OpDecorate %335 RelaxedPrecision 
                                                      OpDecorate %336 RelaxedPrecision 
                                                      OpDecorate %337 RelaxedPrecision 
                                                      OpDecorate %340 RelaxedPrecision 
                                                      OpDecorate %341 RelaxedPrecision 
                                                      OpDecorate %342 RelaxedPrecision 
                                                      OpDecorate %343 RelaxedPrecision 
                                                      OpDecorate %347 RelaxedPrecision 
                                                      OpDecorate %347 Location 347 
                                               %2 = OpTypeVoid 
                                               %3 = OpTypeFunction %2 
                                               %6 = OpTypeFloat 32 
                                               %7 = OpTypeVector %6 3 
                                               %8 = OpTypePointer Private %7 
                                Private f32_3* %9 = OpVariable Private 
                                              %10 = OpTypePointer Input %7 
                        Input f32_3* vs_TEXCOORD2 = OpVariable Input 
                                              %14 = OpTypeVector %6 4 
                                              %15 = OpTypeInt 32 0 
                                          u32 %16 = OpConstant 4 
                                              %17 = OpTypeArray %14 %16 
                                              %18 = OpTypeStruct %7 %14 %14 %14 %17 %14 %6 %14 %6 %6 %6 
                                              %19 = OpTypePointer Uniform %18 
Uniform struct {f32_3; f32_4; f32_4; f32_4; f32_4[4]; f32_4; f32; f32_4; f32; f32; f32;}* %20 = OpVariable Uniform 
                                              %21 = OpTypeInt 32 1 
                                          i32 %22 = OpConstant 1 
                                              %23 = OpTypePointer Uniform %14 
                                              %28 = OpTypePointer Private %6 
                                 Private f32* %29 = OpVariable Private 
                               Private f32_3* %39 = OpVariable Private 
                                          i32 %42 = OpConstant 0 
                                              %43 = OpTypePointer Uniform %7 
                                              %52 = OpTypePointer Private %14 
                               Private f32_4* %53 = OpVariable Private 
                                 Private f32* %62 = OpVariable Private 
                        Input f32_3* vs_TEXCOORD1 = OpVariable Input 
                               Private f32_3* %83 = OpVariable Private 
                                          u32 %92 = OpConstant 0 
                                          u32 %97 = OpConstant 1 
                                              %99 = OpTypeVector %6 2 
                                         f32 %102 = OpConstant 3.674022E-40 
                                       f32_2 %103 = OpConstantComposite %102 %102 
                                         i32 %111 = OpConstant 6 
                                             %112 = OpTypePointer Uniform %6 
                                         f32 %115 = OpConstant 3.674022E-40 
                                         i32 %128 = OpConstant 10 
                                         f32 %132 = OpConstant 3.674022E-40 
                                         f32 %138 = OpConstant 3.674022E-40 
                                Private f32* %145 = OpVariable Private 
                              Private f32_3* %150 = OpVariable Private 
                                         f32 %157 = OpConstant 3.674022E-40 
                                         f32 %174 = OpConstant 3.674022E-40 
                                         f32 %176 = OpConstant 3.674022E-40 
                                         i32 %193 = OpConstant 4 
                                         i32 %206 = OpConstant 2 
                                         i32 %216 = OpConstant 3 
                                             %225 = OpTypeImage %6 Dim2D 0 0 0 1 Unknown 
                                             %226 = OpTypePointer UniformConstant %225 
        UniformConstant read_only Texture2D* %227 = OpVariable UniformConstant 
                                             %229 = OpTypeSampler 
                                             %230 = OpTypePointer UniformConstant %229 
                    UniformConstant sampler* %231 = OpVariable UniformConstant 
                                             %233 = OpTypeSampledImage %225 
                                         i32 %258 = OpConstant 9 
                                         i32 %263 = OpConstant 8 
                                Private f32* %268 = OpVariable Private 
                                Private f32* %275 = OpVariable Private 
                                         i32 %311 = OpConstant 7 
                              Private f32_3* %316 = OpVariable Private 
        UniformConstant read_only Texture2D* %317 = OpVariable UniformConstant 
                    UniformConstant sampler* %319 = OpVariable UniformConstant 
                                             %322 = OpTypePointer Input %99 
                        Input f32_2* vs_TEXCOORD0 = OpVariable Input 
                              Private f32_3* %327 = OpVariable Private 
                                         i32 %329 = OpConstant 5 
                                             %346 = OpTypePointer Output %14 
                               Output f32_4* %347 = OpVariable Output 
                                         u32 %351 = OpConstant 3 
                                             %352 = OpTypePointer Output %6 
                                          void %4 = OpFunction None %3 
                                               %5 = OpLabel 
                                        f32_3 %12 = OpLoad vs_TEXCOORD2 
                                        f32_3 %13 = OpFNegate %12 
                               Uniform f32_4* %24 = OpAccessChain %20 %22 
                                        f32_4 %25 = OpLoad %24 
                                        f32_3 %26 = OpVectorShuffle %25 %25 0 1 2 
                                        f32_3 %27 = OpFAdd %13 %26 
                                                      OpStore %9 %27 
                                        f32_3 %30 = OpLoad %9 
                                        f32_3 %31 = OpLoad %9 
                                          f32 %32 = OpDot %30 %31 
                                                      OpStore %29 %32 
                                          f32 %33 = OpLoad %29 
                                          f32 %34 = OpExtInst %1 32 %33 
                                                      OpStore %29 %34 
                                          f32 %35 = OpLoad %29 
                                        f32_3 %36 = OpCompositeConstruct %35 %35 %35 
                                        f32_3 %37 = OpLoad %9 
                                        f32_3 %38 = OpFMul %36 %37 
                                                      OpStore %9 %38 
                                        f32_3 %40 = OpLoad vs_TEXCOORD2 
                                        f32_3 %41 = OpFNegate %40 
                               Uniform f32_3* %44 = OpAccessChain %20 %42 
                                        f32_3 %45 = OpLoad %44 
                                        f32_3 %46 = OpFAdd %41 %45 
                                                      OpStore %39 %46 
                                        f32_3 %47 = OpLoad %39 
                                        f32_3 %48 = OpLoad %39 
                                          f32 %49 = OpDot %47 %48 
                                                      OpStore %29 %49 
                                          f32 %50 = OpLoad %29 
                                          f32 %51 = OpExtInst %1 32 %50 
                                                      OpStore %29 %51 
                                        f32_3 %54 = OpLoad %39 
                                          f32 %55 = OpLoad %29 
                                        f32_3 %56 = OpCompositeConstruct %55 %55 %55 
                                        f32_3 %57 = OpFMul %54 %56 
                                        f32_3 %58 = OpLoad %9 
                                        f32_3 %59 = OpFAdd %57 %58 
                                        f32_4 %60 = OpLoad %53 
                                        f32_4 %61 = OpVectorShuffle %60 %59 4 5 6 3 
                                                      OpStore %53 %61 
                                        f32_4 %63 = OpLoad %53 
                                        f32_3 %64 = OpVectorShuffle %63 %63 0 1 2 
                                        f32_4 %65 = OpLoad %53 
                                        f32_3 %66 = OpVectorShuffle %65 %65 0 1 2 
                                          f32 %67 = OpDot %64 %66 
                                                      OpStore %62 %67 
                                          f32 %68 = OpLoad %62 
                                          f32 %69 = OpExtInst %1 32 %68 
                                                      OpStore %62 %69 
                                          f32 %70 = OpLoad %62 
                                        f32_3 %71 = OpCompositeConstruct %70 %70 %70 
                                        f32_4 %72 = OpLoad %53 
                                        f32_3 %73 = OpVectorShuffle %72 %72 0 1 2 
                                        f32_3 %74 = OpFMul %71 %73 
                                        f32_4 %75 = OpLoad %53 
                                        f32_4 %76 = OpVectorShuffle %75 %74 4 5 6 3 
                                                      OpStore %53 %76 
                                        f32_3 %78 = OpLoad vs_TEXCOORD1 
                                        f32_3 %79 = OpLoad vs_TEXCOORD1 
                                          f32 %80 = OpDot %78 %79 
                                                      OpStore %62 %80 
                                          f32 %81 = OpLoad %62 
                                          f32 %82 = OpExtInst %1 32 %81 
                                                      OpStore %62 %82 
                                          f32 %84 = OpLoad %62 
                                        f32_3 %85 = OpCompositeConstruct %84 %84 %84 
                                        f32_3 %86 = OpLoad vs_TEXCOORD1 
                                        f32_3 %87 = OpFMul %85 %86 
                                                      OpStore %83 %87 
                                        f32_3 %88 = OpLoad %83 
                                        f32_4 %89 = OpLoad %53 
                                        f32_3 %90 = OpVectorShuffle %89 %89 0 1 2 
                                          f32 %91 = OpDot %88 %90 
                                 Private f32* %93 = OpAccessChain %53 %92 
                                                      OpStore %93 %91 
                                        f32_3 %94 = OpLoad %83 
                                        f32_3 %95 = OpLoad %9 
                                          f32 %96 = OpDot %94 %95 
                                 Private f32* %98 = OpAccessChain %53 %97 
                                                      OpStore %98 %96 
                                       f32_4 %100 = OpLoad %53 
                                       f32_2 %101 = OpVectorShuffle %100 %100 0 1 
                                       f32_2 %104 = OpExtInst %1 40 %101 %103 
                                       f32_4 %105 = OpLoad %53 
                                       f32_4 %106 = OpVectorShuffle %105 %104 4 5 2 3 
                                                      OpStore %53 %106 
                                Private f32* %107 = OpAccessChain %53 %92 
                                         f32 %108 = OpLoad %107 
                                         f32 %109 = OpExtInst %1 30 %108 
                                Private f32* %110 = OpAccessChain %9 %92 
                                                      OpStore %110 %109 
                                Uniform f32* %113 = OpAccessChain %20 %111 
                                         f32 %114 = OpLoad %113 
                                         f32 %116 = OpFMul %114 %115 
                                Private f32* %117 = OpAccessChain %53 %92 
                                                      OpStore %117 %116 
                                Private f32* %118 = OpAccessChain %9 %92 
                                         f32 %119 = OpLoad %118 
                                Private f32* %120 = OpAccessChain %53 %92 
                                         f32 %121 = OpLoad %120 
                                         f32 %122 = OpFMul %119 %121 
                                Private f32* %123 = OpAccessChain %9 %92 
                                                      OpStore %123 %122 
                                Private f32* %124 = OpAccessChain %9 %92 
                                         f32 %125 = OpLoad %124 
                                         f32 %126 = OpExtInst %1 29 %125 
                                Private f32* %127 = OpAccessChain %9 %92 
                                                      OpStore %127 %126 
                                Uniform f32* %129 = OpAccessChain %20 %128 
                                         f32 %130 = OpLoad %129 
                                         f32 %131 = OpFNegate %130 
                                         f32 %133 = OpFMul %131 %132 
                                         f32 %134 = OpFAdd %133 %132 
                                Private f32* %135 = OpAccessChain %53 %92 
                                                      OpStore %135 %134 
                                Private f32* %136 = OpAccessChain %9 %92 
                                         f32 %137 = OpLoad %136 
                                         f32 %139 = OpFMul %137 %138 
                                Private f32* %140 = OpAccessChain %53 %92 
                                         f32 %141 = OpLoad %140 
                                         f32 %142 = OpFNegate %141 
                                         f32 %143 = OpFAdd %139 %142 
                                Private f32* %144 = OpAccessChain %9 %92 
                                                      OpStore %144 %143 
                                Uniform f32* %146 = OpAccessChain %20 %128 
                                         f32 %147 = OpLoad %146 
                                         f32 %148 = OpFMul %147 %132 
                                         f32 %149 = OpFAdd %148 %132 
                                                      OpStore %145 %149 
                                Private f32* %151 = OpAccessChain %53 %92 
                                         f32 %152 = OpLoad %151 
                                         f32 %153 = OpFNegate %152 
                                         f32 %154 = OpLoad %145 
                                         f32 %155 = OpFAdd %153 %154 
                                Private f32* %156 = OpAccessChain %150 %92 
                                                      OpStore %156 %155 
                                Private f32* %158 = OpAccessChain %150 %92 
                                         f32 %159 = OpLoad %158 
                                         f32 %160 = OpFDiv %157 %159 
                                Private f32* %161 = OpAccessChain %150 %92 
                                                      OpStore %161 %160 
                                Private f32* %162 = OpAccessChain %150 %92 
                                         f32 %163 = OpLoad %162 
                                Private f32* %164 = OpAccessChain %9 %92 
                                         f32 %165 = OpLoad %164 
                                         f32 %166 = OpFMul %163 %165 
                                Private f32* %167 = OpAccessChain %9 %92 
                                                      OpStore %167 %166 
                                Private f32* %168 = OpAccessChain %9 %92 
                                         f32 %169 = OpLoad %168 
                                         f32 %170 = OpExtInst %1 43 %169 %102 %157 
                                Private f32* %171 = OpAccessChain %9 %92 
                                                      OpStore %171 %170 
                                Private f32* %172 = OpAccessChain %9 %92 
                                         f32 %173 = OpLoad %172 
                                         f32 %175 = OpFMul %173 %174 
                                         f32 %177 = OpFAdd %175 %176 
                                Private f32* %178 = OpAccessChain %150 %92 
                                                      OpStore %178 %177 
                                Private f32* %179 = OpAccessChain %9 %92 
                                         f32 %180 = OpLoad %179 
                                Private f32* %181 = OpAccessChain %9 %92 
                                         f32 %182 = OpLoad %181 
                                         f32 %183 = OpFMul %180 %182 
                                Private f32* %184 = OpAccessChain %9 %92 
                                                      OpStore %184 %183 
                                Private f32* %185 = OpAccessChain %9 %92 
                                         f32 %186 = OpLoad %185 
                                Private f32* %187 = OpAccessChain %150 %92 
                                         f32 %188 = OpLoad %187 
                                         f32 %189 = OpFMul %186 %188 
                                Private f32* %190 = OpAccessChain %9 %92 
                                                      OpStore %190 %189 
                                       f32_3 %191 = OpLoad vs_TEXCOORD2 
                                       f32_3 %192 = OpVectorShuffle %191 %191 1 1 1 
                              Uniform f32_4* %194 = OpAccessChain %20 %193 %22 
                                       f32_4 %195 = OpLoad %194 
                                       f32_3 %196 = OpVectorShuffle %195 %195 0 1 2 
                                       f32_3 %197 = OpFMul %192 %196 
                                                      OpStore %150 %197 
                              Uniform f32_4* %198 = OpAccessChain %20 %193 %42 
                                       f32_4 %199 = OpLoad %198 
                                       f32_3 %200 = OpVectorShuffle %199 %199 0 1 2 
                                       f32_3 %201 = OpLoad vs_TEXCOORD2 
                                       f32_3 %202 = OpVectorShuffle %201 %201 0 0 0 
                                       f32_3 %203 = OpFMul %200 %202 
                                       f32_3 %204 = OpLoad %150 
                                       f32_3 %205 = OpFAdd %203 %204 
                                                      OpStore %150 %205 
                              Uniform f32_4* %207 = OpAccessChain %20 %193 %206 
                                       f32_4 %208 = OpLoad %207 
                                       f32_3 %209 = OpVectorShuffle %208 %208 0 1 2 
                                       f32_3 %210 = OpLoad vs_TEXCOORD2 
                                       f32_3 %211 = OpVectorShuffle %210 %210 2 2 2 
                                       f32_3 %212 = OpFMul %209 %211 
                                       f32_3 %213 = OpLoad %150 
                                       f32_3 %214 = OpFAdd %212 %213 
                                                      OpStore %150 %214 
                                       f32_3 %215 = OpLoad %150 
                              Uniform f32_4* %217 = OpAccessChain %20 %193 %216 
                                       f32_4 %218 = OpLoad %217 
                                       f32_3 %219 = OpVectorShuffle %218 %218 0 1 2 
                                       f32_3 %220 = OpFAdd %215 %219 
                                                      OpStore %150 %220 
                                       f32_3 %221 = OpLoad %150 
                                       f32_3 %222 = OpLoad %150 
                                         f32 %223 = OpDot %221 %222 
                                Private f32* %224 = OpAccessChain %150 %92 
                                                      OpStore %224 %223 
                         read_only Texture2D %228 = OpLoad %227 
                                     sampler %232 = OpLoad %231 
                  read_only Texture2DSampled %234 = OpSampledImage %228 %232 
                                       f32_3 %235 = OpLoad %150 
                                       f32_2 %236 = OpVectorShuffle %235 %235 0 0 
                                       f32_4 %237 = OpImageSampleImplicitLod %234 %236 
                                         f32 %238 = OpCompositeExtract %237 0 
                                Private f32* %239 = OpAccessChain %150 %92 
                                                      OpStore %239 %238 
                                       f32_3 %240 = OpLoad %150 
                                       f32_3 %241 = OpVectorShuffle %240 %240 0 0 0 
                              Uniform f32_4* %242 = OpAccessChain %20 %206 
                                       f32_4 %243 = OpLoad %242 
                                       f32_3 %244 = OpVectorShuffle %243 %243 0 1 2 
                                       f32_3 %245 = OpFMul %241 %244 
                                       f32_4 %246 = OpLoad %53 
                                       f32_4 %247 = OpVectorShuffle %246 %245 4 1 5 6 
                                                      OpStore %53 %247 
                                       f32_4 %248 = OpLoad %53 
                                       f32_3 %249 = OpVectorShuffle %248 %248 0 2 3 
                              Uniform f32_4* %250 = OpAccessChain %20 %216 
                                       f32_4 %251 = OpLoad %250 
                                       f32_3 %252 = OpVectorShuffle %251 %251 0 1 2 
                                       f32_3 %253 = OpFMul %249 %252 
                                                      OpStore %83 %253 
                                       f32_3 %254 = OpLoad %9 
                                       f32_3 %255 = OpVectorShuffle %254 %254 0 0 0 
                                       f32_3 %256 = OpLoad %83 
                                       f32_3 %257 = OpFMul %255 %256 
                                                      OpStore %9 %257 
                                Uniform f32* %259 = OpAccessChain %20 %258 
                                         f32 %260 = OpLoad %259 
                                         f32 %261 = OpFNegate %260 
                                         f32 %262 = OpFMul %261 %132 
                                Uniform f32* %264 = OpAccessChain %20 %263 
                                         f32 %265 = OpLoad %264 
                                         f32 %266 = OpFAdd %262 %265 
                                Private f32* %267 = OpAccessChain %83 %92 
                                                      OpStore %267 %266 
                                Private f32* %269 = OpAccessChain %53 %97 
                                         f32 %270 = OpLoad %269 
                                Private f32* %271 = OpAccessChain %83 %92 
                                         f32 %272 = OpLoad %271 
                                         f32 %273 = OpFNegate %272 
                                         f32 %274 = OpFAdd %270 %273 
                                                      OpStore %268 %274 
                                Uniform f32* %276 = OpAccessChain %20 %258 
                                         f32 %277 = OpLoad %276 
                                         f32 %278 = OpFMul %277 %132 
                                Uniform f32* %279 = OpAccessChain %20 %263 
                                         f32 %280 = OpLoad %279 
                                         f32 %281 = OpFAdd %278 %280 
                                                      OpStore %275 %281 
                                Private f32* %282 = OpAccessChain %83 %92 
                                         f32 %283 = OpLoad %282 
                                         f32 %284 = OpFNegate %283 
                                         f32 %285 = OpLoad %275 
                                         f32 %286 = OpFAdd %284 %285 
                                Private f32* %287 = OpAccessChain %83 %92 
                                                      OpStore %287 %286 
                                Private f32* %288 = OpAccessChain %83 %92 
                                         f32 %289 = OpLoad %288 
                                         f32 %290 = OpFDiv %157 %289 
                                Private f32* %291 = OpAccessChain %83 %92 
                                                      OpStore %291 %290 
                                         f32 %292 = OpLoad %268 
                                Private f32* %293 = OpAccessChain %83 %92 
                                         f32 %294 = OpLoad %293 
                                         f32 %295 = OpFMul %292 %294 
                                                      OpStore %268 %295 
                                         f32 %296 = OpLoad %268 
                                         f32 %297 = OpExtInst %1 43 %296 %102 %157 
                                                      OpStore %268 %297 
                                         f32 %298 = OpLoad %268 
                                         f32 %299 = OpFMul %298 %174 
                                         f32 %300 = OpFAdd %299 %176 
                                Private f32* %301 = OpAccessChain %83 %92 
                                                      OpStore %301 %300 
                                         f32 %302 = OpLoad %268 
                                         f32 %303 = OpLoad %268 
                                         f32 %304 = OpFMul %302 %303 
                                                      OpStore %268 %304 
                                         f32 %305 = OpLoad %268 
                                Private f32* %306 = OpAccessChain %83 %92 
                                         f32 %307 = OpLoad %306 
                                         f32 %308 = OpFMul %305 %307 
                                                      OpStore %268 %308 
                                         f32 %309 = OpLoad %268 
                                       f32_3 %310 = OpCompositeConstruct %309 %309 %309 
                              Uniform f32_4* %312 = OpAccessChain %20 %311 
                                       f32_4 %313 = OpLoad %312 
                                       f32_3 %314 = OpVectorShuffle %313 %313 0 1 2 
                                       f32_3 %315 = OpFMul %310 %314 
                                                      OpStore %83 %315 
                         read_only Texture2D %318 = OpLoad %317 
                                     sampler %320 = OpLoad %319 
                  read_only Texture2DSampled %321 = OpSampledImage %318 %320 
                                       f32_2 %324 = OpLoad vs_TEXCOORD0 
                                       f32_4 %325 = OpImageSampleImplicitLod %321 %324 
                                       f32_3 %326 = OpVectorShuffle %325 %325 0 1 2 
                                                      OpStore %316 %326 
                                       f32_3 %328 = OpLoad %316 
                              Uniform f32_4* %330 = OpAccessChain %20 %329 
                                       f32_4 %331 = OpLoad %330 
                                       f32_3 %332 = OpVectorShuffle %331 %331 0 1 2 
                                       f32_3 %333 = OpFMul %328 %332 
                                                      OpStore %327 %333 
                                       f32_4 %334 = OpLoad %53 
                                       f32_3 %335 = OpVectorShuffle %334 %334 0 2 3 
                                       f32_3 %336 = OpLoad %327 
                                       f32_3 %337 = OpFMul %335 %336 
                                       f32_4 %338 = OpLoad %53 
                                       f32_4 %339 = OpVectorShuffle %338 %337 4 5 6 3 
                                                      OpStore %53 %339 
                                       f32_4 %340 = OpLoad %53 
                                       f32_3 %341 = OpVectorShuffle %340 %340 0 1 2 
                                       f32_3 %342 = OpLoad %83 
                                       f32_3 %343 = OpFMul %341 %342 
                                       f32_3 %344 = OpLoad %9 
                                       f32_3 %345 = OpFAdd %343 %344 
                                                      OpStore %9 %345 
                                       f32_3 %348 = OpLoad %9 
                                       f32_4 %349 = OpLoad %347 
                                       f32_4 %350 = OpVectorShuffle %349 %348 4 5 6 3 
                                                      OpStore %347 %350 
                                 Output f32* %353 = OpAccessChain %347 %351 
                                                      OpStore %353 %157 
                                                      OpReturn
                                                      OpFunctionEnd
"
}
SubProgram "vulkan hw_tier01 " {
Keywords { "POINT" }
"; SPIR-V
; Version: 1.0
; Generator: Khronos Glslang Reference Front End; 6
; Bound: 209
; Schema: 0
                                                      OpCapability Shader 
                                               %1 = OpExtInstImport "GLSL.std.450" 
                                                      OpMemoryModel Logical GLSL450 
                                                      OpEntryPoint Vertex %4 "main" %11 %75 %85 %101 %106 %137 %143 %190 %200 
                                                      OpName vs_TEXCOORD0 "vs_TEXCOORD0" 
                                                      OpName vs_TEXCOORD1 "vs_TEXCOORD1" 
                                                      OpName vs_TEXCOORD2 "vs_TEXCOORD2" 
                                                      OpName vs_TEXCOORD3 "vs_TEXCOORD3" 
                                                      OpName vs_TEXCOORD4 "vs_TEXCOORD4" 
                                                      OpDecorate %11 Location 11 
                                                      OpDecorate %16 ArrayStride 16 
                                                      OpDecorate %17 ArrayStride 17 
                                                      OpDecorate %18 ArrayStride 18 
                                                      OpDecorate %19 ArrayStride 19 
                                                      OpMemberDecorate %20 0 Offset 20 
                                                      OpMemberDecorate %20 1 Offset 20 
                                                      OpMemberDecorate %20 2 Offset 20 
                                                      OpMemberDecorate %20 3 Offset 20 
                                                      OpMemberDecorate %20 4 Offset 20 
                                                      OpDecorate %20 Block 
                                                      OpDecorate %22 DescriptorSet 22 
                                                      OpDecorate %22 Binding 22 
                                                      OpMemberDecorate %73 0 BuiltIn 73 
                                                      OpMemberDecorate %73 1 BuiltIn 73 
                                                      OpMemberDecorate %73 2 BuiltIn 73 
                                                      OpDecorate %73 Block 
                                                      OpDecorate %85 Location 85 
                                                      OpDecorate vs_TEXCOORD0 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD0 Location 101 
                                                      OpDecorate %106 Location 106 
                                                      OpDecorate vs_TEXCOORD1 Location 137 
                                                      OpDecorate vs_TEXCOORD2 Location 143 
                                                      OpDecorate vs_TEXCOORD3 Location 190 
                                                      OpDecorate vs_TEXCOORD4 Location 200 
                                               %2 = OpTypeVoid 
                                               %3 = OpTypeFunction %2 
                                               %6 = OpTypeFloat 32 
                                               %7 = OpTypeVector %6 4 
                                               %8 = OpTypePointer Private %7 
                                Private f32_4* %9 = OpVariable Private 
                                              %10 = OpTypePointer Input %7 
                                 Input f32_4* %11 = OpVariable Input 
                                              %14 = OpTypeInt 32 0 
                                          u32 %15 = OpConstant 4 
                                              %16 = OpTypeArray %7 %15 
                                              %17 = OpTypeArray %7 %15 
                                              %18 = OpTypeArray %7 %15 
                                              %19 = OpTypeArray %7 %15 
                                              %20 = OpTypeStruct %16 %17 %18 %19 %7 
                                              %21 = OpTypePointer Uniform %20 
Uniform struct {f32_4[4]; f32_4[4]; f32_4[4]; f32_4[4]; f32_4;}* %22 = OpVariable Uniform 
                                              %23 = OpTypeInt 32 1 
                                          i32 %24 = OpConstant 0 
                                          i32 %25 = OpConstant 1 
                                              %26 = OpTypePointer Uniform %7 
                                          i32 %37 = OpConstant 2 
                               Private f32_4* %45 = OpVariable Private 
                                          i32 %47 = OpConstant 3 
                               Private f32_4* %51 = OpVariable Private 
                                          u32 %71 = OpConstant 1 
                                              %72 = OpTypeArray %6 %71 
                                              %73 = OpTypeStruct %7 %6 %72 
                                              %74 = OpTypePointer Output %73 
         Output struct {f32_4; f32; f32[1];}* %75 = OpVariable Output 
                                              %83 = OpTypePointer Output %7 
                                 Input f32_4* %85 = OpVariable Input 
                                              %86 = OpTypeVector %6 2 
                                          i32 %89 = OpConstant 4 
                                             %100 = OpTypePointer Output %86 
                       Output f32_2* vs_TEXCOORD0 = OpVariable Output 
                                             %104 = OpTypeVector %6 3 
                                             %105 = OpTypePointer Input %104 
                                Input f32_3* %106 = OpVariable Input 
                                         u32 %112 = OpConstant 0 
                                             %113 = OpTypePointer Private %6 
                                         u32 %126 = OpConstant 2 
                                Private f32* %128 = OpVariable Private 
                                             %136 = OpTypePointer Output %104 
                       Output f32_3* vs_TEXCOORD1 = OpVariable Output 
                       Output f32_3* vs_TEXCOORD2 = OpVariable Output 
                       Output f32_3* vs_TEXCOORD3 = OpVariable Output 
                       Output f32_4* vs_TEXCOORD4 = OpVariable Output 
                                         f32 %201 = OpConstant 3.674022E-40 
                                       f32_4 %202 = OpConstantComposite %201 %201 %201 %201 
                                             %203 = OpTypePointer Output %6 
                                          void %4 = OpFunction None %3 
                                               %5 = OpLabel 
                                        f32_4 %12 = OpLoad %11 
                                        f32_4 %13 = OpVectorShuffle %12 %12 1 1 1 1 
                               Uniform f32_4* %27 = OpAccessChain %22 %24 %25 
                                        f32_4 %28 = OpLoad %27 
                                        f32_4 %29 = OpFMul %13 %28 
                                                      OpStore %9 %29 
                               Uniform f32_4* %30 = OpAccessChain %22 %24 %24 
                                        f32_4 %31 = OpLoad %30 
                                        f32_4 %32 = OpLoad %11 
                                        f32_4 %33 = OpVectorShuffle %32 %32 0 0 0 0 
                                        f32_4 %34 = OpFMul %31 %33 
                                        f32_4 %35 = OpLoad %9 
                                        f32_4 %36 = OpFAdd %34 %35 
                                                      OpStore %9 %36 
                               Uniform f32_4* %38 = OpAccessChain %22 %24 %37 
                                        f32_4 %39 = OpLoad %38 
                                        f32_4 %40 = OpLoad %11 
                                        f32_4 %41 = OpVectorShuffle %40 %40 2 2 2 2 
                                        f32_4 %42 = OpFMul %39 %41 
                                        f32_4 %43 = OpLoad %9 
                                        f32_4 %44 = OpFAdd %42 %43 
                                                      OpStore %9 %44 
                                        f32_4 %46 = OpLoad %9 
                               Uniform f32_4* %48 = OpAccessChain %22 %24 %47 
                                        f32_4 %49 = OpLoad %48 
                                        f32_4 %50 = OpFAdd %46 %49 
                                                      OpStore %45 %50 
                                        f32_4 %52 = OpLoad %45 
                                        f32_4 %53 = OpVectorShuffle %52 %52 1 1 1 1 
                               Uniform f32_4* %54 = OpAccessChain %22 %37 %25 
                                        f32_4 %55 = OpLoad %54 
                                        f32_4 %56 = OpFMul %53 %55 
                                                      OpStore %51 %56 
                               Uniform f32_4* %57 = OpAccessChain %22 %37 %24 
                                        f32_4 %58 = OpLoad %57 
                                        f32_4 %59 = OpLoad %45 
                                        f32_4 %60 = OpVectorShuffle %59 %59 0 0 0 0 
                                        f32_4 %61 = OpFMul %58 %60 
                                        f32_4 %62 = OpLoad %51 
                                        f32_4 %63 = OpFAdd %61 %62 
                                                      OpStore %51 %63 
                               Uniform f32_4* %64 = OpAccessChain %22 %37 %37 
                                        f32_4 %65 = OpLoad %64 
                                        f32_4 %66 = OpLoad %45 
                                        f32_4 %67 = OpVectorShuffle %66 %66 2 2 2 2 
                                        f32_4 %68 = OpFMul %65 %67 
                                        f32_4 %69 = OpLoad %51 
                                        f32_4 %70 = OpFAdd %68 %69 
                                                      OpStore %51 %70 
                               Uniform f32_4* %76 = OpAccessChain %22 %37 %47 
                                        f32_4 %77 = OpLoad %76 
                                        f32_4 %78 = OpLoad %45 
                                        f32_4 %79 = OpVectorShuffle %78 %78 3 3 3 3 
                                        f32_4 %80 = OpFMul %77 %79 
                                        f32_4 %81 = OpLoad %51 
                                        f32_4 %82 = OpFAdd %80 %81 
                                Output f32_4* %84 = OpAccessChain %75 %24 
                                                      OpStore %84 %82 
                                        f32_4 %87 = OpLoad %85 
                                        f32_2 %88 = OpVectorShuffle %87 %87 0 1 
                               Uniform f32_4* %90 = OpAccessChain %22 %89 
                                        f32_4 %91 = OpLoad %90 
                                        f32_2 %92 = OpVectorShuffle %91 %91 0 1 
                                        f32_2 %93 = OpFMul %88 %92 
                               Uniform f32_4* %94 = OpAccessChain %22 %89 
                                        f32_4 %95 = OpLoad %94 
                                        f32_2 %96 = OpVectorShuffle %95 %95 2 3 
                                        f32_2 %97 = OpFAdd %93 %96 
                                        f32_4 %98 = OpLoad %45 
                                        f32_4 %99 = OpVectorShuffle %98 %97 4 5 2 3 
                                                      OpStore %45 %99 
                                       f32_4 %102 = OpLoad %45 
                                       f32_2 %103 = OpVectorShuffle %102 %102 0 1 
                                                      OpStore vs_TEXCOORD0 %103 
                                       f32_3 %107 = OpLoad %106 
                              Uniform f32_4* %108 = OpAccessChain %22 %25 %24 
                                       f32_4 %109 = OpLoad %108 
                                       f32_3 %110 = OpVectorShuffle %109 %109 0 1 2 
                                         f32 %111 = OpDot %107 %110 
                                Private f32* %114 = OpAccessChain %45 %112 
                                                      OpStore %114 %111 
                                       f32_3 %115 = OpLoad %106 
                              Uniform f32_4* %116 = OpAccessChain %22 %25 %25 
                                       f32_4 %117 = OpLoad %116 
                                       f32_3 %118 = OpVectorShuffle %117 %117 0 1 2 
                                         f32 %119 = OpDot %115 %118 
                                Private f32* %120 = OpAccessChain %45 %71 
                                                      OpStore %120 %119 
                                       f32_3 %121 = OpLoad %106 
                              Uniform f32_4* %122 = OpAccessChain %22 %25 %37 
                                       f32_4 %123 = OpLoad %122 
                                       f32_3 %124 = OpVectorShuffle %123 %123 0 1 2 
                                         f32 %125 = OpDot %121 %124 
                                Private f32* %127 = OpAccessChain %45 %126 
                                                      OpStore %127 %125 
                                       f32_4 %129 = OpLoad %45 
                                       f32_3 %130 = OpVectorShuffle %129 %129 0 1 2 
                                       f32_4 %131 = OpLoad %45 
                                       f32_3 %132 = OpVectorShuffle %131 %131 0 1 2 
                                         f32 %133 = OpDot %130 %132 
                                                      OpStore %128 %133 
                                         f32 %134 = OpLoad %128 
                                         f32 %135 = OpExtInst %1 32 %134 
                                                      OpStore %128 %135 
                                         f32 %138 = OpLoad %128 
                                       f32_3 %139 = OpCompositeConstruct %138 %138 %138 
                                       f32_4 %140 = OpLoad %45 
                                       f32_3 %141 = OpVectorShuffle %140 %140 0 1 2 
                                       f32_3 %142 = OpFMul %139 %141 
                                                      OpStore vs_TEXCOORD1 %142 
                              Uniform f32_4* %144 = OpAccessChain %22 %24 %47 
                                       f32_4 %145 = OpLoad %144 
                                       f32_3 %146 = OpVectorShuffle %145 %145 0 1 2 
                                       f32_4 %147 = OpLoad %11 
                                       f32_3 %148 = OpVectorShuffle %147 %147 3 3 3 
                                       f32_3 %149 = OpFMul %146 %148 
                                       f32_4 %150 = OpLoad %9 
                                       f32_3 %151 = OpVectorShuffle %150 %150 0 1 2 
                                       f32_3 %152 = OpFAdd %149 %151 
                                                      OpStore vs_TEXCOORD2 %152 
                              Uniform f32_4* %153 = OpAccessChain %22 %24 %47 
                                       f32_4 %154 = OpLoad %153 
                                       f32_4 %155 = OpLoad %11 
                                       f32_4 %156 = OpVectorShuffle %155 %155 3 3 3 3 
                                       f32_4 %157 = OpFMul %154 %156 
                                       f32_4 %158 = OpLoad %9 
                                       f32_4 %159 = OpFAdd %157 %158 
                                                      OpStore %9 %159 
                                       f32_4 %160 = OpLoad %9 
                                       f32_3 %161 = OpVectorShuffle %160 %160 1 1 1 
                              Uniform f32_4* %162 = OpAccessChain %22 %47 %25 
                                       f32_4 %163 = OpLoad %162 
                                       f32_3 %164 = OpVectorShuffle %163 %163 0 1 2 
                                       f32_3 %165 = OpFMul %161 %164 
                                       f32_4 %166 = OpLoad %45 
                                       f32_4 %167 = OpVectorShuffle %166 %165 4 5 6 3 
                                                      OpStore %45 %167 
                              Uniform f32_4* %168 = OpAccessChain %22 %47 %24 
                                       f32_4 %169 = OpLoad %168 
                                       f32_3 %170 = OpVectorShuffle %169 %169 0 1 2 
                                       f32_4 %171 = OpLoad %9 
                                       f32_3 %172 = OpVectorShuffle %171 %171 0 0 0 
                                       f32_3 %173 = OpFMul %170 %172 
                                       f32_4 %174 = OpLoad %45 
                                       f32_3 %175 = OpVectorShuffle %174 %174 0 1 2 
                                       f32_3 %176 = OpFAdd %173 %175 
                                       f32_4 %177 = OpLoad %45 
                                       f32_4 %178 = OpVectorShuffle %177 %176 4 5 6 3 
                                                      OpStore %45 %178 
                              Uniform f32_4* %179 = OpAccessChain %22 %47 %37 
                                       f32_4 %180 = OpLoad %179 
                                       f32_3 %181 = OpVectorShuffle %180 %180 0 1 2 
                                       f32_4 %182 = OpLoad %9 
                                       f32_3 %183 = OpVectorShuffle %182 %182 2 2 2 
                                       f32_3 %184 = OpFMul %181 %183 
                                       f32_4 %185 = OpLoad %45 
                                       f32_3 %186 = OpVectorShuffle %185 %185 0 1 2 
                                       f32_3 %187 = OpFAdd %184 %186 
                                       f32_4 %188 = OpLoad %9 
                                       f32_4 %189 = OpVectorShuffle %188 %187 4 5 6 3 
                                                      OpStore %9 %189 
                              Uniform f32_4* %191 = OpAccessChain %22 %47 %47 
                                       f32_4 %192 = OpLoad %191 
                                       f32_3 %193 = OpVectorShuffle %192 %192 0 1 2 
                                       f32_4 %194 = OpLoad %9 
                                       f32_3 %195 = OpVectorShuffle %194 %194 3 3 3 
                                       f32_3 %196 = OpFMul %193 %195 
                                       f32_4 %197 = OpLoad %9 
                                       f32_3 %198 = OpVectorShuffle %197 %197 0 1 2 
                                       f32_3 %199 = OpFAdd %196 %198 
                                                      OpStore vs_TEXCOORD3 %199 
                                                      OpStore vs_TEXCOORD4 %202 
                                 Output f32* %204 = OpAccessChain %75 %24 %71 
                                         f32 %205 = OpLoad %204 
                                         f32 %206 = OpFNegate %205 
                                 Output f32* %207 = OpAccessChain %75 %24 %71 
                                                      OpStore %207 %206 
                                                      OpReturn
                                                      OpFunctionEnd
; SPIR-V
; Version: 1.0
; Generator: Khronos Glslang Reference Front End; 6
; Bound: 355
; Schema: 0
                                                      OpCapability Shader 
                                               %1 = OpExtInstImport "GLSL.std.450" 
                                                      OpMemoryModel Logical GLSL450 
                                                      OpEntryPoint Fragment %4 "main" %11 %77 %323 %347 
                                                      OpExecutionMode %4 OriginUpperLeft 
                                                      OpName vs_TEXCOORD2 "vs_TEXCOORD2" 
                                                      OpName vs_TEXCOORD1 "vs_TEXCOORD1" 
                                                      OpName vs_TEXCOORD0 "vs_TEXCOORD0" 
                                                      OpDecorate vs_TEXCOORD2 Location 11 
                                                      OpDecorate %17 ArrayStride 17 
                                                      OpMemberDecorate %18 0 Offset 18 
                                                      OpMemberDecorate %18 1 Offset 18 
                                                      OpMemberDecorate %18 2 RelaxedPrecision 
                                                      OpMemberDecorate %18 2 Offset 18 
                                                      OpMemberDecorate %18 3 RelaxedPrecision 
                                                      OpMemberDecorate %18 3 Offset 18 
                                                      OpMemberDecorate %18 4 Offset 18 
                                                      OpMemberDecorate %18 5 RelaxedPrecision 
                                                      OpMemberDecorate %18 5 Offset 18 
                                                      OpMemberDecorate %18 6 RelaxedPrecision 
                                                      OpMemberDecorate %18 6 Offset 18 
                                                      OpMemberDecorate %18 7 RelaxedPrecision 
                                                      OpMemberDecorate %18 7 Offset 18 
                                                      OpMemberDecorate %18 8 RelaxedPrecision 
                                                      OpMemberDecorate %18 8 Offset 18 
                                                      OpMemberDecorate %18 9 RelaxedPrecision 
                                                      OpMemberDecorate %18 9 Offset 18 
                                                      OpMemberDecorate %18 10 RelaxedPrecision 
                                                      OpMemberDecorate %18 10 Offset 18 
                                                      OpDecorate %18 Block 
                                                      OpDecorate %20 DescriptorSet 20 
                                                      OpDecorate %20 Binding 20 
                                                      OpDecorate %53 RelaxedPrecision 
                                                      OpDecorate %62 RelaxedPrecision 
                                                      OpDecorate %63 RelaxedPrecision 
                                                      OpDecorate %64 RelaxedPrecision 
                                                      OpDecorate %65 RelaxedPrecision 
                                                      OpDecorate %66 RelaxedPrecision 
                                                      OpDecorate %67 RelaxedPrecision 
                                                      OpDecorate %68 RelaxedPrecision 
                                                      OpDecorate %69 RelaxedPrecision 
                                                      OpDecorate %70 RelaxedPrecision 
                                                      OpDecorate %71 RelaxedPrecision 
                                                      OpDecorate %72 RelaxedPrecision 
                                                      OpDecorate %73 RelaxedPrecision 
                                                      OpDecorate %74 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD1 Location 77 
                                                      OpDecorate %81 RelaxedPrecision 
                                                      OpDecorate %82 RelaxedPrecision 
                                                      OpDecorate %83 RelaxedPrecision 
                                                      OpDecorate %84 RelaxedPrecision 
                                                      OpDecorate %88 RelaxedPrecision 
                                                      OpDecorate %89 RelaxedPrecision 
                                                      OpDecorate %90 RelaxedPrecision 
                                                      OpDecorate %91 RelaxedPrecision 
                                                      OpDecorate %94 RelaxedPrecision 
                                                      OpDecorate %100 RelaxedPrecision 
                                                      OpDecorate %101 RelaxedPrecision 
                                                      OpDecorate %104 RelaxedPrecision 
                                                      OpDecorate %108 RelaxedPrecision 
                                                      OpDecorate %109 RelaxedPrecision 
                                                      OpDecorate %114 RelaxedPrecision 
                                                      OpDecorate %116 RelaxedPrecision 
                                                      OpDecorate %121 RelaxedPrecision 
                                                      OpDecorate %130 RelaxedPrecision 
                                                      OpDecorate %131 RelaxedPrecision 
                                                      OpDecorate %133 RelaxedPrecision 
                                                      OpDecorate %134 RelaxedPrecision 
                                                      OpDecorate %141 RelaxedPrecision 
                                                      OpDecorate %142 RelaxedPrecision 
                                                      OpDecorate %145 RelaxedPrecision 
                                                      OpDecorate %147 RelaxedPrecision 
                                                      OpDecorate %148 RelaxedPrecision 
                                                      OpDecorate %149 RelaxedPrecision 
                                                      OpDecorate %152 RelaxedPrecision 
                                                      OpDecorate %153 RelaxedPrecision 
                                                      OpDecorate %154 RelaxedPrecision 
                                                      OpDecorate %155 RelaxedPrecision 
                                                      OpDecorate %227 DescriptorSet 227 
                                                      OpDecorate %227 Binding 227 
                                                      OpDecorate %231 DescriptorSet 231 
                                                      OpDecorate %231 Binding 231 
                                                      OpDecorate %243 RelaxedPrecision 
                                                      OpDecorate %244 RelaxedPrecision 
                                                      OpDecorate %248 RelaxedPrecision 
                                                      OpDecorate %249 RelaxedPrecision 
                                                      OpDecorate %251 RelaxedPrecision 
                                                      OpDecorate %252 RelaxedPrecision 
                                                      OpDecorate %253 RelaxedPrecision 
                                                      OpDecorate %256 RelaxedPrecision 
                                                      OpDecorate %260 RelaxedPrecision 
                                                      OpDecorate %261 RelaxedPrecision 
                                                      OpDecorate %262 RelaxedPrecision 
                                                      OpDecorate %265 RelaxedPrecision 
                                                      OpDecorate %266 RelaxedPrecision 
                                                      OpDecorate %268 RelaxedPrecision 
                                                      OpDecorate %270 RelaxedPrecision 
                                                      OpDecorate %272 RelaxedPrecision 
                                                      OpDecorate %273 RelaxedPrecision 
                                                      OpDecorate %274 RelaxedPrecision 
                                                      OpDecorate %275 RelaxedPrecision 
                                                      OpDecorate %277 RelaxedPrecision 
                                                      OpDecorate %278 RelaxedPrecision 
                                                      OpDecorate %280 RelaxedPrecision 
                                                      OpDecorate %281 RelaxedPrecision 
                                                      OpDecorate %283 RelaxedPrecision 
                                                      OpDecorate %284 RelaxedPrecision 
                                                      OpDecorate %285 RelaxedPrecision 
                                                      OpDecorate %286 RelaxedPrecision 
                                                      OpDecorate %289 RelaxedPrecision 
                                                      OpDecorate %290 RelaxedPrecision 
                                                      OpDecorate %292 RelaxedPrecision 
                                                      OpDecorate %294 RelaxedPrecision 
                                                      OpDecorate %295 RelaxedPrecision 
                                                      OpDecorate %296 RelaxedPrecision 
                                                      OpDecorate %297 RelaxedPrecision 
                                                      OpDecorate %298 RelaxedPrecision 
                                                      OpDecorate %299 RelaxedPrecision 
                                                      OpDecorate %300 RelaxedPrecision 
                                                      OpDecorate %302 RelaxedPrecision 
                                                      OpDecorate %303 RelaxedPrecision 
                                                      OpDecorate %304 RelaxedPrecision 
                                                      OpDecorate %305 RelaxedPrecision 
                                                      OpDecorate %307 RelaxedPrecision 
                                                      OpDecorate %308 RelaxedPrecision 
                                                      OpDecorate %309 RelaxedPrecision 
                                                      OpDecorate %310 RelaxedPrecision 
                                                      OpDecorate %313 RelaxedPrecision 
                                                      OpDecorate %314 RelaxedPrecision 
                                                      OpDecorate %315 RelaxedPrecision 
                                                      OpDecorate %316 RelaxedPrecision 
                                                      OpDecorate %317 RelaxedPrecision 
                                                      OpDecorate %317 DescriptorSet 317 
                                                      OpDecorate %317 Binding 317 
                                                      OpDecorate %318 RelaxedPrecision 
                                                      OpDecorate %319 RelaxedPrecision 
                                                      OpDecorate %319 DescriptorSet 319 
                                                      OpDecorate %319 Binding 319 
                                                      OpDecorate %320 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD0 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD0 Location 323 
                                                      OpDecorate %324 RelaxedPrecision 
                                                      OpDecorate %325 RelaxedPrecision 
                                                      OpDecorate %326 RelaxedPrecision 
                                                      OpDecorate %327 RelaxedPrecision 
                                                      OpDecorate %328 RelaxedPrecision 
                                                      OpDecorate %331 RelaxedPrecision 
                                                      OpDecorate %332 RelaxedPrecision 
                                                      OpDecorate %333 RelaxedPrecision 
                                                      OpDecorate %334 RelaxedPrecision 
                                                      OpDecorate %335 RelaxedPrecision 
                                                      OpDecorate %336 RelaxedPrecision 
                                                      OpDecorate %337 RelaxedPrecision 
                                                      OpDecorate %340 RelaxedPrecision 
                                                      OpDecorate %341 RelaxedPrecision 
                                                      OpDecorate %342 RelaxedPrecision 
                                                      OpDecorate %343 RelaxedPrecision 
                                                      OpDecorate %347 RelaxedPrecision 
                                                      OpDecorate %347 Location 347 
                                               %2 = OpTypeVoid 
                                               %3 = OpTypeFunction %2 
                                               %6 = OpTypeFloat 32 
                                               %7 = OpTypeVector %6 3 
                                               %8 = OpTypePointer Private %7 
                                Private f32_3* %9 = OpVariable Private 
                                              %10 = OpTypePointer Input %7 
                        Input f32_3* vs_TEXCOORD2 = OpVariable Input 
                                              %14 = OpTypeVector %6 4 
                                              %15 = OpTypeInt 32 0 
                                          u32 %16 = OpConstant 4 
                                              %17 = OpTypeArray %14 %16 
                                              %18 = OpTypeStruct %7 %14 %14 %14 %17 %14 %6 %14 %6 %6 %6 
                                              %19 = OpTypePointer Uniform %18 
Uniform struct {f32_3; f32_4; f32_4; f32_4; f32_4[4]; f32_4; f32; f32_4; f32; f32; f32;}* %20 = OpVariable Uniform 
                                              %21 = OpTypeInt 32 1 
                                          i32 %22 = OpConstant 1 
                                              %23 = OpTypePointer Uniform %14 
                                              %28 = OpTypePointer Private %6 
                                 Private f32* %29 = OpVariable Private 
                               Private f32_3* %39 = OpVariable Private 
                                          i32 %42 = OpConstant 0 
                                              %43 = OpTypePointer Uniform %7 
                                              %52 = OpTypePointer Private %14 
                               Private f32_4* %53 = OpVariable Private 
                                 Private f32* %62 = OpVariable Private 
                        Input f32_3* vs_TEXCOORD1 = OpVariable Input 
                               Private f32_3* %83 = OpVariable Private 
                                          u32 %92 = OpConstant 0 
                                          u32 %97 = OpConstant 1 
                                              %99 = OpTypeVector %6 2 
                                         f32 %102 = OpConstant 3.674022E-40 
                                       f32_2 %103 = OpConstantComposite %102 %102 
                                         i32 %111 = OpConstant 6 
                                             %112 = OpTypePointer Uniform %6 
                                         f32 %115 = OpConstant 3.674022E-40 
                                         i32 %128 = OpConstant 10 
                                         f32 %132 = OpConstant 3.674022E-40 
                                         f32 %138 = OpConstant 3.674022E-40 
                                Private f32* %145 = OpVariable Private 
                              Private f32_3* %150 = OpVariable Private 
                                         f32 %157 = OpConstant 3.674022E-40 
                                         f32 %174 = OpConstant 3.674022E-40 
                                         f32 %176 = OpConstant 3.674022E-40 
                                         i32 %193 = OpConstant 4 
                                         i32 %206 = OpConstant 2 
                                         i32 %216 = OpConstant 3 
                                             %225 = OpTypeImage %6 Dim2D 0 0 0 1 Unknown 
                                             %226 = OpTypePointer UniformConstant %225 
        UniformConstant read_only Texture2D* %227 = OpVariable UniformConstant 
                                             %229 = OpTypeSampler 
                                             %230 = OpTypePointer UniformConstant %229 
                    UniformConstant sampler* %231 = OpVariable UniformConstant 
                                             %233 = OpTypeSampledImage %225 
                                         i32 %258 = OpConstant 9 
                                         i32 %263 = OpConstant 8 
                                Private f32* %268 = OpVariable Private 
                                Private f32* %275 = OpVariable Private 
                                         i32 %311 = OpConstant 7 
                              Private f32_3* %316 = OpVariable Private 
        UniformConstant read_only Texture2D* %317 = OpVariable UniformConstant 
                    UniformConstant sampler* %319 = OpVariable UniformConstant 
                                             %322 = OpTypePointer Input %99 
                        Input f32_2* vs_TEXCOORD0 = OpVariable Input 
                              Private f32_3* %327 = OpVariable Private 
                                         i32 %329 = OpConstant 5 
                                             %346 = OpTypePointer Output %14 
                               Output f32_4* %347 = OpVariable Output 
                                         u32 %351 = OpConstant 3 
                                             %352 = OpTypePointer Output %6 
                                          void %4 = OpFunction None %3 
                                               %5 = OpLabel 
                                        f32_3 %12 = OpLoad vs_TEXCOORD2 
                                        f32_3 %13 = OpFNegate %12 
                               Uniform f32_4* %24 = OpAccessChain %20 %22 
                                        f32_4 %25 = OpLoad %24 
                                        f32_3 %26 = OpVectorShuffle %25 %25 0 1 2 
                                        f32_3 %27 = OpFAdd %13 %26 
                                                      OpStore %9 %27 
                                        f32_3 %30 = OpLoad %9 
                                        f32_3 %31 = OpLoad %9 
                                          f32 %32 = OpDot %30 %31 
                                                      OpStore %29 %32 
                                          f32 %33 = OpLoad %29 
                                          f32 %34 = OpExtInst %1 32 %33 
                                                      OpStore %29 %34 
                                          f32 %35 = OpLoad %29 
                                        f32_3 %36 = OpCompositeConstruct %35 %35 %35 
                                        f32_3 %37 = OpLoad %9 
                                        f32_3 %38 = OpFMul %36 %37 
                                                      OpStore %9 %38 
                                        f32_3 %40 = OpLoad vs_TEXCOORD2 
                                        f32_3 %41 = OpFNegate %40 
                               Uniform f32_3* %44 = OpAccessChain %20 %42 
                                        f32_3 %45 = OpLoad %44 
                                        f32_3 %46 = OpFAdd %41 %45 
                                                      OpStore %39 %46 
                                        f32_3 %47 = OpLoad %39 
                                        f32_3 %48 = OpLoad %39 
                                          f32 %49 = OpDot %47 %48 
                                                      OpStore %29 %49 
                                          f32 %50 = OpLoad %29 
                                          f32 %51 = OpExtInst %1 32 %50 
                                                      OpStore %29 %51 
                                        f32_3 %54 = OpLoad %39 
                                          f32 %55 = OpLoad %29 
                                        f32_3 %56 = OpCompositeConstruct %55 %55 %55 
                                        f32_3 %57 = OpFMul %54 %56 
                                        f32_3 %58 = OpLoad %9 
                                        f32_3 %59 = OpFAdd %57 %58 
                                        f32_4 %60 = OpLoad %53 
                                        f32_4 %61 = OpVectorShuffle %60 %59 4 5 6 3 
                                                      OpStore %53 %61 
                                        f32_4 %63 = OpLoad %53 
                                        f32_3 %64 = OpVectorShuffle %63 %63 0 1 2 
                                        f32_4 %65 = OpLoad %53 
                                        f32_3 %66 = OpVectorShuffle %65 %65 0 1 2 
                                          f32 %67 = OpDot %64 %66 
                                                      OpStore %62 %67 
                                          f32 %68 = OpLoad %62 
                                          f32 %69 = OpExtInst %1 32 %68 
                                                      OpStore %62 %69 
                                          f32 %70 = OpLoad %62 
                                        f32_3 %71 = OpCompositeConstruct %70 %70 %70 
                                        f32_4 %72 = OpLoad %53 
                                        f32_3 %73 = OpVectorShuffle %72 %72 0 1 2 
                                        f32_3 %74 = OpFMul %71 %73 
                                        f32_4 %75 = OpLoad %53 
                                        f32_4 %76 = OpVectorShuffle %75 %74 4 5 6 3 
                                                      OpStore %53 %76 
                                        f32_3 %78 = OpLoad vs_TEXCOORD1 
                                        f32_3 %79 = OpLoad vs_TEXCOORD1 
                                          f32 %80 = OpDot %78 %79 
                                                      OpStore %62 %80 
                                          f32 %81 = OpLoad %62 
                                          f32 %82 = OpExtInst %1 32 %81 
                                                      OpStore %62 %82 
                                          f32 %84 = OpLoad %62 
                                        f32_3 %85 = OpCompositeConstruct %84 %84 %84 
                                        f32_3 %86 = OpLoad vs_TEXCOORD1 
                                        f32_3 %87 = OpFMul %85 %86 
                                                      OpStore %83 %87 
                                        f32_3 %88 = OpLoad %83 
                                        f32_4 %89 = OpLoad %53 
                                        f32_3 %90 = OpVectorShuffle %89 %89 0 1 2 
                                          f32 %91 = OpDot %88 %90 
                                 Private f32* %93 = OpAccessChain %53 %92 
                                                      OpStore %93 %91 
                                        f32_3 %94 = OpLoad %83 
                                        f32_3 %95 = OpLoad %9 
                                          f32 %96 = OpDot %94 %95 
                                 Private f32* %98 = OpAccessChain %53 %97 
                                                      OpStore %98 %96 
                                       f32_4 %100 = OpLoad %53 
                                       f32_2 %101 = OpVectorShuffle %100 %100 0 1 
                                       f32_2 %104 = OpExtInst %1 40 %101 %103 
                                       f32_4 %105 = OpLoad %53 
                                       f32_4 %106 = OpVectorShuffle %105 %104 4 5 2 3 
                                                      OpStore %53 %106 
                                Private f32* %107 = OpAccessChain %53 %92 
                                         f32 %108 = OpLoad %107 
                                         f32 %109 = OpExtInst %1 30 %108 
                                Private f32* %110 = OpAccessChain %9 %92 
                                                      OpStore %110 %109 
                                Uniform f32* %113 = OpAccessChain %20 %111 
                                         f32 %114 = OpLoad %113 
                                         f32 %116 = OpFMul %114 %115 
                                Private f32* %117 = OpAccessChain %53 %92 
                                                      OpStore %117 %116 
                                Private f32* %118 = OpAccessChain %9 %92 
                                         f32 %119 = OpLoad %118 
                                Private f32* %120 = OpAccessChain %53 %92 
                                         f32 %121 = OpLoad %120 
                                         f32 %122 = OpFMul %119 %121 
                                Private f32* %123 = OpAccessChain %9 %92 
                                                      OpStore %123 %122 
                                Private f32* %124 = OpAccessChain %9 %92 
                                         f32 %125 = OpLoad %124 
                                         f32 %126 = OpExtInst %1 29 %125 
                                Private f32* %127 = OpAccessChain %9 %92 
                                                      OpStore %127 %126 
                                Uniform f32* %129 = OpAccessChain %20 %128 
                                         f32 %130 = OpLoad %129 
                                         f32 %131 = OpFNegate %130 
                                         f32 %133 = OpFMul %131 %132 
                                         f32 %134 = OpFAdd %133 %132 
                                Private f32* %135 = OpAccessChain %53 %92 
                                                      OpStore %135 %134 
                                Private f32* %136 = OpAccessChain %9 %92 
                                         f32 %137 = OpLoad %136 
                                         f32 %139 = OpFMul %137 %138 
                                Private f32* %140 = OpAccessChain %53 %92 
                                         f32 %141 = OpLoad %140 
                                         f32 %142 = OpFNegate %141 
                                         f32 %143 = OpFAdd %139 %142 
                                Private f32* %144 = OpAccessChain %9 %92 
                                                      OpStore %144 %143 
                                Uniform f32* %146 = OpAccessChain %20 %128 
                                         f32 %147 = OpLoad %146 
                                         f32 %148 = OpFMul %147 %132 
                                         f32 %149 = OpFAdd %148 %132 
                                                      OpStore %145 %149 
                                Private f32* %151 = OpAccessChain %53 %92 
                                         f32 %152 = OpLoad %151 
                                         f32 %153 = OpFNegate %152 
                                         f32 %154 = OpLoad %145 
                                         f32 %155 = OpFAdd %153 %154 
                                Private f32* %156 = OpAccessChain %150 %92 
                                                      OpStore %156 %155 
                                Private f32* %158 = OpAccessChain %150 %92 
                                         f32 %159 = OpLoad %158 
                                         f32 %160 = OpFDiv %157 %159 
                                Private f32* %161 = OpAccessChain %150 %92 
                                                      OpStore %161 %160 
                                Private f32* %162 = OpAccessChain %150 %92 
                                         f32 %163 = OpLoad %162 
                                Private f32* %164 = OpAccessChain %9 %92 
                                         f32 %165 = OpLoad %164 
                                         f32 %166 = OpFMul %163 %165 
                                Private f32* %167 = OpAccessChain %9 %92 
                                                      OpStore %167 %166 
                                Private f32* %168 = OpAccessChain %9 %92 
                                         f32 %169 = OpLoad %168 
                                         f32 %170 = OpExtInst %1 43 %169 %102 %157 
                                Private f32* %171 = OpAccessChain %9 %92 
                                                      OpStore %171 %170 
                                Private f32* %172 = OpAccessChain %9 %92 
                                         f32 %173 = OpLoad %172 
                                         f32 %175 = OpFMul %173 %174 
                                         f32 %177 = OpFAdd %175 %176 
                                Private f32* %178 = OpAccessChain %150 %92 
                                                      OpStore %178 %177 
                                Private f32* %179 = OpAccessChain %9 %92 
                                         f32 %180 = OpLoad %179 
                                Private f32* %181 = OpAccessChain %9 %92 
                                         f32 %182 = OpLoad %181 
                                         f32 %183 = OpFMul %180 %182 
                                Private f32* %184 = OpAccessChain %9 %92 
                                                      OpStore %184 %183 
                                Private f32* %185 = OpAccessChain %9 %92 
                                         f32 %186 = OpLoad %185 
                                Private f32* %187 = OpAccessChain %150 %92 
                                         f32 %188 = OpLoad %187 
                                         f32 %189 = OpFMul %186 %188 
                                Private f32* %190 = OpAccessChain %9 %92 
                                                      OpStore %190 %189 
                                       f32_3 %191 = OpLoad vs_TEXCOORD2 
                                       f32_3 %192 = OpVectorShuffle %191 %191 1 1 1 
                              Uniform f32_4* %194 = OpAccessChain %20 %193 %22 
                                       f32_4 %195 = OpLoad %194 
                                       f32_3 %196 = OpVectorShuffle %195 %195 0 1 2 
                                       f32_3 %197 = OpFMul %192 %196 
                                                      OpStore %150 %197 
                              Uniform f32_4* %198 = OpAccessChain %20 %193 %42 
                                       f32_4 %199 = OpLoad %198 
                                       f32_3 %200 = OpVectorShuffle %199 %199 0 1 2 
                                       f32_3 %201 = OpLoad vs_TEXCOORD2 
                                       f32_3 %202 = OpVectorShuffle %201 %201 0 0 0 
                                       f32_3 %203 = OpFMul %200 %202 
                                       f32_3 %204 = OpLoad %150 
                                       f32_3 %205 = OpFAdd %203 %204 
                                                      OpStore %150 %205 
                              Uniform f32_4* %207 = OpAccessChain %20 %193 %206 
                                       f32_4 %208 = OpLoad %207 
                                       f32_3 %209 = OpVectorShuffle %208 %208 0 1 2 
                                       f32_3 %210 = OpLoad vs_TEXCOORD2 
                                       f32_3 %211 = OpVectorShuffle %210 %210 2 2 2 
                                       f32_3 %212 = OpFMul %209 %211 
                                       f32_3 %213 = OpLoad %150 
                                       f32_3 %214 = OpFAdd %212 %213 
                                                      OpStore %150 %214 
                                       f32_3 %215 = OpLoad %150 
                              Uniform f32_4* %217 = OpAccessChain %20 %193 %216 
                                       f32_4 %218 = OpLoad %217 
                                       f32_3 %219 = OpVectorShuffle %218 %218 0 1 2 
                                       f32_3 %220 = OpFAdd %215 %219 
                                                      OpStore %150 %220 
                                       f32_3 %221 = OpLoad %150 
                                       f32_3 %222 = OpLoad %150 
                                         f32 %223 = OpDot %221 %222 
                                Private f32* %224 = OpAccessChain %150 %92 
                                                      OpStore %224 %223 
                         read_only Texture2D %228 = OpLoad %227 
                                     sampler %232 = OpLoad %231 
                  read_only Texture2DSampled %234 = OpSampledImage %228 %232 
                                       f32_3 %235 = OpLoad %150 
                                       f32_2 %236 = OpVectorShuffle %235 %235 0 0 
                                       f32_4 %237 = OpImageSampleImplicitLod %234 %236 
                                         f32 %238 = OpCompositeExtract %237 0 
                                Private f32* %239 = OpAccessChain %150 %92 
                                                      OpStore %239 %238 
                                       f32_3 %240 = OpLoad %150 
                                       f32_3 %241 = OpVectorShuffle %240 %240 0 0 0 
                              Uniform f32_4* %242 = OpAccessChain %20 %206 
                                       f32_4 %243 = OpLoad %242 
                                       f32_3 %244 = OpVectorShuffle %243 %243 0 1 2 
                                       f32_3 %245 = OpFMul %241 %244 
                                       f32_4 %246 = OpLoad %53 
                                       f32_4 %247 = OpVectorShuffle %246 %245 4 1 5 6 
                                                      OpStore %53 %247 
                                       f32_4 %248 = OpLoad %53 
                                       f32_3 %249 = OpVectorShuffle %248 %248 0 2 3 
                              Uniform f32_4* %250 = OpAccessChain %20 %216 
                                       f32_4 %251 = OpLoad %250 
                                       f32_3 %252 = OpVectorShuffle %251 %251 0 1 2 
                                       f32_3 %253 = OpFMul %249 %252 
                                                      OpStore %83 %253 
                                       f32_3 %254 = OpLoad %9 
                                       f32_3 %255 = OpVectorShuffle %254 %254 0 0 0 
                                       f32_3 %256 = OpLoad %83 
                                       f32_3 %257 = OpFMul %255 %256 
                                                      OpStore %9 %257 
                                Uniform f32* %259 = OpAccessChain %20 %258 
                                         f32 %260 = OpLoad %259 
                                         f32 %261 = OpFNegate %260 
                                         f32 %262 = OpFMul %261 %132 
                                Uniform f32* %264 = OpAccessChain %20 %263 
                                         f32 %265 = OpLoad %264 
                                         f32 %266 = OpFAdd %262 %265 
                                Private f32* %267 = OpAccessChain %83 %92 
                                                      OpStore %267 %266 
                                Private f32* %269 = OpAccessChain %53 %97 
                                         f32 %270 = OpLoad %269 
                                Private f32* %271 = OpAccessChain %83 %92 
                                         f32 %272 = OpLoad %271 
                                         f32 %273 = OpFNegate %272 
                                         f32 %274 = OpFAdd %270 %273 
                                                      OpStore %268 %274 
                                Uniform f32* %276 = OpAccessChain %20 %258 
                                         f32 %277 = OpLoad %276 
                                         f32 %278 = OpFMul %277 %132 
                                Uniform f32* %279 = OpAccessChain %20 %263 
                                         f32 %280 = OpLoad %279 
                                         f32 %281 = OpFAdd %278 %280 
                                                      OpStore %275 %281 
                                Private f32* %282 = OpAccessChain %83 %92 
                                         f32 %283 = OpLoad %282 
                                         f32 %284 = OpFNegate %283 
                                         f32 %285 = OpLoad %275 
                                         f32 %286 = OpFAdd %284 %285 
                                Private f32* %287 = OpAccessChain %83 %92 
                                                      OpStore %287 %286 
                                Private f32* %288 = OpAccessChain %83 %92 
                                         f32 %289 = OpLoad %288 
                                         f32 %290 = OpFDiv %157 %289 
                                Private f32* %291 = OpAccessChain %83 %92 
                                                      OpStore %291 %290 
                                         f32 %292 = OpLoad %268 
                                Private f32* %293 = OpAccessChain %83 %92 
                                         f32 %294 = OpLoad %293 
                                         f32 %295 = OpFMul %292 %294 
                                                      OpStore %268 %295 
                                         f32 %296 = OpLoad %268 
                                         f32 %297 = OpExtInst %1 43 %296 %102 %157 
                                                      OpStore %268 %297 
                                         f32 %298 = OpLoad %268 
                                         f32 %299 = OpFMul %298 %174 
                                         f32 %300 = OpFAdd %299 %176 
                                Private f32* %301 = OpAccessChain %83 %92 
                                                      OpStore %301 %300 
                                         f32 %302 = OpLoad %268 
                                         f32 %303 = OpLoad %268 
                                         f32 %304 = OpFMul %302 %303 
                                                      OpStore %268 %304 
                                         f32 %305 = OpLoad %268 
                                Private f32* %306 = OpAccessChain %83 %92 
                                         f32 %307 = OpLoad %306 
                                         f32 %308 = OpFMul %305 %307 
                                                      OpStore %268 %308 
                                         f32 %309 = OpLoad %268 
                                       f32_3 %310 = OpCompositeConstruct %309 %309 %309 
                              Uniform f32_4* %312 = OpAccessChain %20 %311 
                                       f32_4 %313 = OpLoad %312 
                                       f32_3 %314 = OpVectorShuffle %313 %313 0 1 2 
                                       f32_3 %315 = OpFMul %310 %314 
                                                      OpStore %83 %315 
                         read_only Texture2D %318 = OpLoad %317 
                                     sampler %320 = OpLoad %319 
                  read_only Texture2DSampled %321 = OpSampledImage %318 %320 
                                       f32_2 %324 = OpLoad vs_TEXCOORD0 
                                       f32_4 %325 = OpImageSampleImplicitLod %321 %324 
                                       f32_3 %326 = OpVectorShuffle %325 %325 0 1 2 
                                                      OpStore %316 %326 
                                       f32_3 %328 = OpLoad %316 
                              Uniform f32_4* %330 = OpAccessChain %20 %329 
                                       f32_4 %331 = OpLoad %330 
                                       f32_3 %332 = OpVectorShuffle %331 %331 0 1 2 
                                       f32_3 %333 = OpFMul %328 %332 
                                                      OpStore %327 %333 
                                       f32_4 %334 = OpLoad %53 
                                       f32_3 %335 = OpVectorShuffle %334 %334 0 2 3 
                                       f32_3 %336 = OpLoad %327 
                                       f32_3 %337 = OpFMul %335 %336 
                                       f32_4 %338 = OpLoad %53 
                                       f32_4 %339 = OpVectorShuffle %338 %337 4 5 6 3 
                                                      OpStore %53 %339 
                                       f32_4 %340 = OpLoad %53 
                                       f32_3 %341 = OpVectorShuffle %340 %340 0 1 2 
                                       f32_3 %342 = OpLoad %83 
                                       f32_3 %343 = OpFMul %341 %342 
                                       f32_3 %344 = OpLoad %9 
                                       f32_3 %345 = OpFAdd %343 %344 
                                                      OpStore %9 %345 
                                       f32_3 %348 = OpLoad %9 
                                       f32_4 %349 = OpLoad %347 
                                       f32_4 %350 = OpVectorShuffle %349 %348 4 5 6 3 
                                                      OpStore %347 %350 
                                 Output f32* %353 = OpAccessChain %347 %351 
                                                      OpStore %353 %157 
                                                      OpReturn
                                                      OpFunctionEnd
"
}
SubProgram "vulkan hw_tier02 " {
Keywords { "POINT" }
"; SPIR-V
; Version: 1.0
; Generator: Khronos Glslang Reference Front End; 6
; Bound: 209
; Schema: 0
                                                      OpCapability Shader 
                                               %1 = OpExtInstImport "GLSL.std.450" 
                                                      OpMemoryModel Logical GLSL450 
                                                      OpEntryPoint Vertex %4 "main" %11 %75 %85 %101 %106 %137 %143 %190 %200 
                                                      OpName vs_TEXCOORD0 "vs_TEXCOORD0" 
                                                      OpName vs_TEXCOORD1 "vs_TEXCOORD1" 
                                                      OpName vs_TEXCOORD2 "vs_TEXCOORD2" 
                                                      OpName vs_TEXCOORD3 "vs_TEXCOORD3" 
                                                      OpName vs_TEXCOORD4 "vs_TEXCOORD4" 
                                                      OpDecorate %11 Location 11 
                                                      OpDecorate %16 ArrayStride 16 
                                                      OpDecorate %17 ArrayStride 17 
                                                      OpDecorate %18 ArrayStride 18 
                                                      OpDecorate %19 ArrayStride 19 
                                                      OpMemberDecorate %20 0 Offset 20 
                                                      OpMemberDecorate %20 1 Offset 20 
                                                      OpMemberDecorate %20 2 Offset 20 
                                                      OpMemberDecorate %20 3 Offset 20 
                                                      OpMemberDecorate %20 4 Offset 20 
                                                      OpDecorate %20 Block 
                                                      OpDecorate %22 DescriptorSet 22 
                                                      OpDecorate %22 Binding 22 
                                                      OpMemberDecorate %73 0 BuiltIn 73 
                                                      OpMemberDecorate %73 1 BuiltIn 73 
                                                      OpMemberDecorate %73 2 BuiltIn 73 
                                                      OpDecorate %73 Block 
                                                      OpDecorate %85 Location 85 
                                                      OpDecorate vs_TEXCOORD0 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD0 Location 101 
                                                      OpDecorate %106 Location 106 
                                                      OpDecorate vs_TEXCOORD1 Location 137 
                                                      OpDecorate vs_TEXCOORD2 Location 143 
                                                      OpDecorate vs_TEXCOORD3 Location 190 
                                                      OpDecorate vs_TEXCOORD4 Location 200 
                                               %2 = OpTypeVoid 
                                               %3 = OpTypeFunction %2 
                                               %6 = OpTypeFloat 32 
                                               %7 = OpTypeVector %6 4 
                                               %8 = OpTypePointer Private %7 
                                Private f32_4* %9 = OpVariable Private 
                                              %10 = OpTypePointer Input %7 
                                 Input f32_4* %11 = OpVariable Input 
                                              %14 = OpTypeInt 32 0 
                                          u32 %15 = OpConstant 4 
                                              %16 = OpTypeArray %7 %15 
                                              %17 = OpTypeArray %7 %15 
                                              %18 = OpTypeArray %7 %15 
                                              %19 = OpTypeArray %7 %15 
                                              %20 = OpTypeStruct %16 %17 %18 %19 %7 
                                              %21 = OpTypePointer Uniform %20 
Uniform struct {f32_4[4]; f32_4[4]; f32_4[4]; f32_4[4]; f32_4;}* %22 = OpVariable Uniform 
                                              %23 = OpTypeInt 32 1 
                                          i32 %24 = OpConstant 0 
                                          i32 %25 = OpConstant 1 
                                              %26 = OpTypePointer Uniform %7 
                                          i32 %37 = OpConstant 2 
                               Private f32_4* %45 = OpVariable Private 
                                          i32 %47 = OpConstant 3 
                               Private f32_4* %51 = OpVariable Private 
                                          u32 %71 = OpConstant 1 
                                              %72 = OpTypeArray %6 %71 
                                              %73 = OpTypeStruct %7 %6 %72 
                                              %74 = OpTypePointer Output %73 
         Output struct {f32_4; f32; f32[1];}* %75 = OpVariable Output 
                                              %83 = OpTypePointer Output %7 
                                 Input f32_4* %85 = OpVariable Input 
                                              %86 = OpTypeVector %6 2 
                                          i32 %89 = OpConstant 4 
                                             %100 = OpTypePointer Output %86 
                       Output f32_2* vs_TEXCOORD0 = OpVariable Output 
                                             %104 = OpTypeVector %6 3 
                                             %105 = OpTypePointer Input %104 
                                Input f32_3* %106 = OpVariable Input 
                                         u32 %112 = OpConstant 0 
                                             %113 = OpTypePointer Private %6 
                                         u32 %126 = OpConstant 2 
                                Private f32* %128 = OpVariable Private 
                                             %136 = OpTypePointer Output %104 
                       Output f32_3* vs_TEXCOORD1 = OpVariable Output 
                       Output f32_3* vs_TEXCOORD2 = OpVariable Output 
                       Output f32_3* vs_TEXCOORD3 = OpVariable Output 
                       Output f32_4* vs_TEXCOORD4 = OpVariable Output 
                                         f32 %201 = OpConstant 3.674022E-40 
                                       f32_4 %202 = OpConstantComposite %201 %201 %201 %201 
                                             %203 = OpTypePointer Output %6 
                                          void %4 = OpFunction None %3 
                                               %5 = OpLabel 
                                        f32_4 %12 = OpLoad %11 
                                        f32_4 %13 = OpVectorShuffle %12 %12 1 1 1 1 
                               Uniform f32_4* %27 = OpAccessChain %22 %24 %25 
                                        f32_4 %28 = OpLoad %27 
                                        f32_4 %29 = OpFMul %13 %28 
                                                      OpStore %9 %29 
                               Uniform f32_4* %30 = OpAccessChain %22 %24 %24 
                                        f32_4 %31 = OpLoad %30 
                                        f32_4 %32 = OpLoad %11 
                                        f32_4 %33 = OpVectorShuffle %32 %32 0 0 0 0 
                                        f32_4 %34 = OpFMul %31 %33 
                                        f32_4 %35 = OpLoad %9 
                                        f32_4 %36 = OpFAdd %34 %35 
                                                      OpStore %9 %36 
                               Uniform f32_4* %38 = OpAccessChain %22 %24 %37 
                                        f32_4 %39 = OpLoad %38 
                                        f32_4 %40 = OpLoad %11 
                                        f32_4 %41 = OpVectorShuffle %40 %40 2 2 2 2 
                                        f32_4 %42 = OpFMul %39 %41 
                                        f32_4 %43 = OpLoad %9 
                                        f32_4 %44 = OpFAdd %42 %43 
                                                      OpStore %9 %44 
                                        f32_4 %46 = OpLoad %9 
                               Uniform f32_4* %48 = OpAccessChain %22 %24 %47 
                                        f32_4 %49 = OpLoad %48 
                                        f32_4 %50 = OpFAdd %46 %49 
                                                      OpStore %45 %50 
                                        f32_4 %52 = OpLoad %45 
                                        f32_4 %53 = OpVectorShuffle %52 %52 1 1 1 1 
                               Uniform f32_4* %54 = OpAccessChain %22 %37 %25 
                                        f32_4 %55 = OpLoad %54 
                                        f32_4 %56 = OpFMul %53 %55 
                                                      OpStore %51 %56 
                               Uniform f32_4* %57 = OpAccessChain %22 %37 %24 
                                        f32_4 %58 = OpLoad %57 
                                        f32_4 %59 = OpLoad %45 
                                        f32_4 %60 = OpVectorShuffle %59 %59 0 0 0 0 
                                        f32_4 %61 = OpFMul %58 %60 
                                        f32_4 %62 = OpLoad %51 
                                        f32_4 %63 = OpFAdd %61 %62 
                                                      OpStore %51 %63 
                               Uniform f32_4* %64 = OpAccessChain %22 %37 %37 
                                        f32_4 %65 = OpLoad %64 
                                        f32_4 %66 = OpLoad %45 
                                        f32_4 %67 = OpVectorShuffle %66 %66 2 2 2 2 
                                        f32_4 %68 = OpFMul %65 %67 
                                        f32_4 %69 = OpLoad %51 
                                        f32_4 %70 = OpFAdd %68 %69 
                                                      OpStore %51 %70 
                               Uniform f32_4* %76 = OpAccessChain %22 %37 %47 
                                        f32_4 %77 = OpLoad %76 
                                        f32_4 %78 = OpLoad %45 
                                        f32_4 %79 = OpVectorShuffle %78 %78 3 3 3 3 
                                        f32_4 %80 = OpFMul %77 %79 
                                        f32_4 %81 = OpLoad %51 
                                        f32_4 %82 = OpFAdd %80 %81 
                                Output f32_4* %84 = OpAccessChain %75 %24 
                                                      OpStore %84 %82 
                                        f32_4 %87 = OpLoad %85 
                                        f32_2 %88 = OpVectorShuffle %87 %87 0 1 
                               Uniform f32_4* %90 = OpAccessChain %22 %89 
                                        f32_4 %91 = OpLoad %90 
                                        f32_2 %92 = OpVectorShuffle %91 %91 0 1 
                                        f32_2 %93 = OpFMul %88 %92 
                               Uniform f32_4* %94 = OpAccessChain %22 %89 
                                        f32_4 %95 = OpLoad %94 
                                        f32_2 %96 = OpVectorShuffle %95 %95 2 3 
                                        f32_2 %97 = OpFAdd %93 %96 
                                        f32_4 %98 = OpLoad %45 
                                        f32_4 %99 = OpVectorShuffle %98 %97 4 5 2 3 
                                                      OpStore %45 %99 
                                       f32_4 %102 = OpLoad %45 
                                       f32_2 %103 = OpVectorShuffle %102 %102 0 1 
                                                      OpStore vs_TEXCOORD0 %103 
                                       f32_3 %107 = OpLoad %106 
                              Uniform f32_4* %108 = OpAccessChain %22 %25 %24 
                                       f32_4 %109 = OpLoad %108 
                                       f32_3 %110 = OpVectorShuffle %109 %109 0 1 2 
                                         f32 %111 = OpDot %107 %110 
                                Private f32* %114 = OpAccessChain %45 %112 
                                                      OpStore %114 %111 
                                       f32_3 %115 = OpLoad %106 
                              Uniform f32_4* %116 = OpAccessChain %22 %25 %25 
                                       f32_4 %117 = OpLoad %116 
                                       f32_3 %118 = OpVectorShuffle %117 %117 0 1 2 
                                         f32 %119 = OpDot %115 %118 
                                Private f32* %120 = OpAccessChain %45 %71 
                                                      OpStore %120 %119 
                                       f32_3 %121 = OpLoad %106 
                              Uniform f32_4* %122 = OpAccessChain %22 %25 %37 
                                       f32_4 %123 = OpLoad %122 
                                       f32_3 %124 = OpVectorShuffle %123 %123 0 1 2 
                                         f32 %125 = OpDot %121 %124 
                                Private f32* %127 = OpAccessChain %45 %126 
                                                      OpStore %127 %125 
                                       f32_4 %129 = OpLoad %45 
                                       f32_3 %130 = OpVectorShuffle %129 %129 0 1 2 
                                       f32_4 %131 = OpLoad %45 
                                       f32_3 %132 = OpVectorShuffle %131 %131 0 1 2 
                                         f32 %133 = OpDot %130 %132 
                                                      OpStore %128 %133 
                                         f32 %134 = OpLoad %128 
                                         f32 %135 = OpExtInst %1 32 %134 
                                                      OpStore %128 %135 
                                         f32 %138 = OpLoad %128 
                                       f32_3 %139 = OpCompositeConstruct %138 %138 %138 
                                       f32_4 %140 = OpLoad %45 
                                       f32_3 %141 = OpVectorShuffle %140 %140 0 1 2 
                                       f32_3 %142 = OpFMul %139 %141 
                                                      OpStore vs_TEXCOORD1 %142 
                              Uniform f32_4* %144 = OpAccessChain %22 %24 %47 
                                       f32_4 %145 = OpLoad %144 
                                       f32_3 %146 = OpVectorShuffle %145 %145 0 1 2 
                                       f32_4 %147 = OpLoad %11 
                                       f32_3 %148 = OpVectorShuffle %147 %147 3 3 3 
                                       f32_3 %149 = OpFMul %146 %148 
                                       f32_4 %150 = OpLoad %9 
                                       f32_3 %151 = OpVectorShuffle %150 %150 0 1 2 
                                       f32_3 %152 = OpFAdd %149 %151 
                                                      OpStore vs_TEXCOORD2 %152 
                              Uniform f32_4* %153 = OpAccessChain %22 %24 %47 
                                       f32_4 %154 = OpLoad %153 
                                       f32_4 %155 = OpLoad %11 
                                       f32_4 %156 = OpVectorShuffle %155 %155 3 3 3 3 
                                       f32_4 %157 = OpFMul %154 %156 
                                       f32_4 %158 = OpLoad %9 
                                       f32_4 %159 = OpFAdd %157 %158 
                                                      OpStore %9 %159 
                                       f32_4 %160 = OpLoad %9 
                                       f32_3 %161 = OpVectorShuffle %160 %160 1 1 1 
                              Uniform f32_4* %162 = OpAccessChain %22 %47 %25 
                                       f32_4 %163 = OpLoad %162 
                                       f32_3 %164 = OpVectorShuffle %163 %163 0 1 2 
                                       f32_3 %165 = OpFMul %161 %164 
                                       f32_4 %166 = OpLoad %45 
                                       f32_4 %167 = OpVectorShuffle %166 %165 4 5 6 3 
                                                      OpStore %45 %167 
                              Uniform f32_4* %168 = OpAccessChain %22 %47 %24 
                                       f32_4 %169 = OpLoad %168 
                                       f32_3 %170 = OpVectorShuffle %169 %169 0 1 2 
                                       f32_4 %171 = OpLoad %9 
                                       f32_3 %172 = OpVectorShuffle %171 %171 0 0 0 
                                       f32_3 %173 = OpFMul %170 %172 
                                       f32_4 %174 = OpLoad %45 
                                       f32_3 %175 = OpVectorShuffle %174 %174 0 1 2 
                                       f32_3 %176 = OpFAdd %173 %175 
                                       f32_4 %177 = OpLoad %45 
                                       f32_4 %178 = OpVectorShuffle %177 %176 4 5 6 3 
                                                      OpStore %45 %178 
                              Uniform f32_4* %179 = OpAccessChain %22 %47 %37 
                                       f32_4 %180 = OpLoad %179 
                                       f32_3 %181 = OpVectorShuffle %180 %180 0 1 2 
                                       f32_4 %182 = OpLoad %9 
                                       f32_3 %183 = OpVectorShuffle %182 %182 2 2 2 
                                       f32_3 %184 = OpFMul %181 %183 
                                       f32_4 %185 = OpLoad %45 
                                       f32_3 %186 = OpVectorShuffle %185 %185 0 1 2 
                                       f32_3 %187 = OpFAdd %184 %186 
                                       f32_4 %188 = OpLoad %9 
                                       f32_4 %189 = OpVectorShuffle %188 %187 4 5 6 3 
                                                      OpStore %9 %189 
                              Uniform f32_4* %191 = OpAccessChain %22 %47 %47 
                                       f32_4 %192 = OpLoad %191 
                                       f32_3 %193 = OpVectorShuffle %192 %192 0 1 2 
                                       f32_4 %194 = OpLoad %9 
                                       f32_3 %195 = OpVectorShuffle %194 %194 3 3 3 
                                       f32_3 %196 = OpFMul %193 %195 
                                       f32_4 %197 = OpLoad %9 
                                       f32_3 %198 = OpVectorShuffle %197 %197 0 1 2 
                                       f32_3 %199 = OpFAdd %196 %198 
                                                      OpStore vs_TEXCOORD3 %199 
                                                      OpStore vs_TEXCOORD4 %202 
                                 Output f32* %204 = OpAccessChain %75 %24 %71 
                                         f32 %205 = OpLoad %204 
                                         f32 %206 = OpFNegate %205 
                                 Output f32* %207 = OpAccessChain %75 %24 %71 
                                                      OpStore %207 %206 
                                                      OpReturn
                                                      OpFunctionEnd
; SPIR-V
; Version: 1.0
; Generator: Khronos Glslang Reference Front End; 6
; Bound: 355
; Schema: 0
                                                      OpCapability Shader 
                                               %1 = OpExtInstImport "GLSL.std.450" 
                                                      OpMemoryModel Logical GLSL450 
                                                      OpEntryPoint Fragment %4 "main" %11 %77 %323 %347 
                                                      OpExecutionMode %4 OriginUpperLeft 
                                                      OpName vs_TEXCOORD2 "vs_TEXCOORD2" 
                                                      OpName vs_TEXCOORD1 "vs_TEXCOORD1" 
                                                      OpName vs_TEXCOORD0 "vs_TEXCOORD0" 
                                                      OpDecorate vs_TEXCOORD2 Location 11 
                                                      OpDecorate %17 ArrayStride 17 
                                                      OpMemberDecorate %18 0 Offset 18 
                                                      OpMemberDecorate %18 1 Offset 18 
                                                      OpMemberDecorate %18 2 RelaxedPrecision 
                                                      OpMemberDecorate %18 2 Offset 18 
                                                      OpMemberDecorate %18 3 RelaxedPrecision 
                                                      OpMemberDecorate %18 3 Offset 18 
                                                      OpMemberDecorate %18 4 Offset 18 
                                                      OpMemberDecorate %18 5 RelaxedPrecision 
                                                      OpMemberDecorate %18 5 Offset 18 
                                                      OpMemberDecorate %18 6 RelaxedPrecision 
                                                      OpMemberDecorate %18 6 Offset 18 
                                                      OpMemberDecorate %18 7 RelaxedPrecision 
                                                      OpMemberDecorate %18 7 Offset 18 
                                                      OpMemberDecorate %18 8 RelaxedPrecision 
                                                      OpMemberDecorate %18 8 Offset 18 
                                                      OpMemberDecorate %18 9 RelaxedPrecision 
                                                      OpMemberDecorate %18 9 Offset 18 
                                                      OpMemberDecorate %18 10 RelaxedPrecision 
                                                      OpMemberDecorate %18 10 Offset 18 
                                                      OpDecorate %18 Block 
                                                      OpDecorate %20 DescriptorSet 20 
                                                      OpDecorate %20 Binding 20 
                                                      OpDecorate %53 RelaxedPrecision 
                                                      OpDecorate %62 RelaxedPrecision 
                                                      OpDecorate %63 RelaxedPrecision 
                                                      OpDecorate %64 RelaxedPrecision 
                                                      OpDecorate %65 RelaxedPrecision 
                                                      OpDecorate %66 RelaxedPrecision 
                                                      OpDecorate %67 RelaxedPrecision 
                                                      OpDecorate %68 RelaxedPrecision 
                                                      OpDecorate %69 RelaxedPrecision 
                                                      OpDecorate %70 RelaxedPrecision 
                                                      OpDecorate %71 RelaxedPrecision 
                                                      OpDecorate %72 RelaxedPrecision 
                                                      OpDecorate %73 RelaxedPrecision 
                                                      OpDecorate %74 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD1 Location 77 
                                                      OpDecorate %81 RelaxedPrecision 
                                                      OpDecorate %82 RelaxedPrecision 
                                                      OpDecorate %83 RelaxedPrecision 
                                                      OpDecorate %84 RelaxedPrecision 
                                                      OpDecorate %88 RelaxedPrecision 
                                                      OpDecorate %89 RelaxedPrecision 
                                                      OpDecorate %90 RelaxedPrecision 
                                                      OpDecorate %91 RelaxedPrecision 
                                                      OpDecorate %94 RelaxedPrecision 
                                                      OpDecorate %100 RelaxedPrecision 
                                                      OpDecorate %101 RelaxedPrecision 
                                                      OpDecorate %104 RelaxedPrecision 
                                                      OpDecorate %108 RelaxedPrecision 
                                                      OpDecorate %109 RelaxedPrecision 
                                                      OpDecorate %114 RelaxedPrecision 
                                                      OpDecorate %116 RelaxedPrecision 
                                                      OpDecorate %121 RelaxedPrecision 
                                                      OpDecorate %130 RelaxedPrecision 
                                                      OpDecorate %131 RelaxedPrecision 
                                                      OpDecorate %133 RelaxedPrecision 
                                                      OpDecorate %134 RelaxedPrecision 
                                                      OpDecorate %141 RelaxedPrecision 
                                                      OpDecorate %142 RelaxedPrecision 
                                                      OpDecorate %145 RelaxedPrecision 
                                                      OpDecorate %147 RelaxedPrecision 
                                                      OpDecorate %148 RelaxedPrecision 
                                                      OpDecorate %149 RelaxedPrecision 
                                                      OpDecorate %152 RelaxedPrecision 
                                                      OpDecorate %153 RelaxedPrecision 
                                                      OpDecorate %154 RelaxedPrecision 
                                                      OpDecorate %155 RelaxedPrecision 
                                                      OpDecorate %227 DescriptorSet 227 
                                                      OpDecorate %227 Binding 227 
                                                      OpDecorate %231 DescriptorSet 231 
                                                      OpDecorate %231 Binding 231 
                                                      OpDecorate %243 RelaxedPrecision 
                                                      OpDecorate %244 RelaxedPrecision 
                                                      OpDecorate %248 RelaxedPrecision 
                                                      OpDecorate %249 RelaxedPrecision 
                                                      OpDecorate %251 RelaxedPrecision 
                                                      OpDecorate %252 RelaxedPrecision 
                                                      OpDecorate %253 RelaxedPrecision 
                                                      OpDecorate %256 RelaxedPrecision 
                                                      OpDecorate %260 RelaxedPrecision 
                                                      OpDecorate %261 RelaxedPrecision 
                                                      OpDecorate %262 RelaxedPrecision 
                                                      OpDecorate %265 RelaxedPrecision 
                                                      OpDecorate %266 RelaxedPrecision 
                                                      OpDecorate %268 RelaxedPrecision 
                                                      OpDecorate %270 RelaxedPrecision 
                                                      OpDecorate %272 RelaxedPrecision 
                                                      OpDecorate %273 RelaxedPrecision 
                                                      OpDecorate %274 RelaxedPrecision 
                                                      OpDecorate %275 RelaxedPrecision 
                                                      OpDecorate %277 RelaxedPrecision 
                                                      OpDecorate %278 RelaxedPrecision 
                                                      OpDecorate %280 RelaxedPrecision 
                                                      OpDecorate %281 RelaxedPrecision 
                                                      OpDecorate %283 RelaxedPrecision 
                                                      OpDecorate %284 RelaxedPrecision 
                                                      OpDecorate %285 RelaxedPrecision 
                                                      OpDecorate %286 RelaxedPrecision 
                                                      OpDecorate %289 RelaxedPrecision 
                                                      OpDecorate %290 RelaxedPrecision 
                                                      OpDecorate %292 RelaxedPrecision 
                                                      OpDecorate %294 RelaxedPrecision 
                                                      OpDecorate %295 RelaxedPrecision 
                                                      OpDecorate %296 RelaxedPrecision 
                                                      OpDecorate %297 RelaxedPrecision 
                                                      OpDecorate %298 RelaxedPrecision 
                                                      OpDecorate %299 RelaxedPrecision 
                                                      OpDecorate %300 RelaxedPrecision 
                                                      OpDecorate %302 RelaxedPrecision 
                                                      OpDecorate %303 RelaxedPrecision 
                                                      OpDecorate %304 RelaxedPrecision 
                                                      OpDecorate %305 RelaxedPrecision 
                                                      OpDecorate %307 RelaxedPrecision 
                                                      OpDecorate %308 RelaxedPrecision 
                                                      OpDecorate %309 RelaxedPrecision 
                                                      OpDecorate %310 RelaxedPrecision 
                                                      OpDecorate %313 RelaxedPrecision 
                                                      OpDecorate %314 RelaxedPrecision 
                                                      OpDecorate %315 RelaxedPrecision 
                                                      OpDecorate %316 RelaxedPrecision 
                                                      OpDecorate %317 RelaxedPrecision 
                                                      OpDecorate %317 DescriptorSet 317 
                                                      OpDecorate %317 Binding 317 
                                                      OpDecorate %318 RelaxedPrecision 
                                                      OpDecorate %319 RelaxedPrecision 
                                                      OpDecorate %319 DescriptorSet 319 
                                                      OpDecorate %319 Binding 319 
                                                      OpDecorate %320 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD0 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD0 Location 323 
                                                      OpDecorate %324 RelaxedPrecision 
                                                      OpDecorate %325 RelaxedPrecision 
                                                      OpDecorate %326 RelaxedPrecision 
                                                      OpDecorate %327 RelaxedPrecision 
                                                      OpDecorate %328 RelaxedPrecision 
                                                      OpDecorate %331 RelaxedPrecision 
                                                      OpDecorate %332 RelaxedPrecision 
                                                      OpDecorate %333 RelaxedPrecision 
                                                      OpDecorate %334 RelaxedPrecision 
                                                      OpDecorate %335 RelaxedPrecision 
                                                      OpDecorate %336 RelaxedPrecision 
                                                      OpDecorate %337 RelaxedPrecision 
                                                      OpDecorate %340 RelaxedPrecision 
                                                      OpDecorate %341 RelaxedPrecision 
                                                      OpDecorate %342 RelaxedPrecision 
                                                      OpDecorate %343 RelaxedPrecision 
                                                      OpDecorate %347 RelaxedPrecision 
                                                      OpDecorate %347 Location 347 
                                               %2 = OpTypeVoid 
                                               %3 = OpTypeFunction %2 
                                               %6 = OpTypeFloat 32 
                                               %7 = OpTypeVector %6 3 
                                               %8 = OpTypePointer Private %7 
                                Private f32_3* %9 = OpVariable Private 
                                              %10 = OpTypePointer Input %7 
                        Input f32_3* vs_TEXCOORD2 = OpVariable Input 
                                              %14 = OpTypeVector %6 4 
                                              %15 = OpTypeInt 32 0 
                                          u32 %16 = OpConstant 4 
                                              %17 = OpTypeArray %14 %16 
                                              %18 = OpTypeStruct %7 %14 %14 %14 %17 %14 %6 %14 %6 %6 %6 
                                              %19 = OpTypePointer Uniform %18 
Uniform struct {f32_3; f32_4; f32_4; f32_4; f32_4[4]; f32_4; f32; f32_4; f32; f32; f32;}* %20 = OpVariable Uniform 
                                              %21 = OpTypeInt 32 1 
                                          i32 %22 = OpConstant 1 
                                              %23 = OpTypePointer Uniform %14 
                                              %28 = OpTypePointer Private %6 
                                 Private f32* %29 = OpVariable Private 
                               Private f32_3* %39 = OpVariable Private 
                                          i32 %42 = OpConstant 0 
                                              %43 = OpTypePointer Uniform %7 
                                              %52 = OpTypePointer Private %14 
                               Private f32_4* %53 = OpVariable Private 
                                 Private f32* %62 = OpVariable Private 
                        Input f32_3* vs_TEXCOORD1 = OpVariable Input 
                               Private f32_3* %83 = OpVariable Private 
                                          u32 %92 = OpConstant 0 
                                          u32 %97 = OpConstant 1 
                                              %99 = OpTypeVector %6 2 
                                         f32 %102 = OpConstant 3.674022E-40 
                                       f32_2 %103 = OpConstantComposite %102 %102 
                                         i32 %111 = OpConstant 6 
                                             %112 = OpTypePointer Uniform %6 
                                         f32 %115 = OpConstant 3.674022E-40 
                                         i32 %128 = OpConstant 10 
                                         f32 %132 = OpConstant 3.674022E-40 
                                         f32 %138 = OpConstant 3.674022E-40 
                                Private f32* %145 = OpVariable Private 
                              Private f32_3* %150 = OpVariable Private 
                                         f32 %157 = OpConstant 3.674022E-40 
                                         f32 %174 = OpConstant 3.674022E-40 
                                         f32 %176 = OpConstant 3.674022E-40 
                                         i32 %193 = OpConstant 4 
                                         i32 %206 = OpConstant 2 
                                         i32 %216 = OpConstant 3 
                                             %225 = OpTypeImage %6 Dim2D 0 0 0 1 Unknown 
                                             %226 = OpTypePointer UniformConstant %225 
        UniformConstant read_only Texture2D* %227 = OpVariable UniformConstant 
                                             %229 = OpTypeSampler 
                                             %230 = OpTypePointer UniformConstant %229 
                    UniformConstant sampler* %231 = OpVariable UniformConstant 
                                             %233 = OpTypeSampledImage %225 
                                         i32 %258 = OpConstant 9 
                                         i32 %263 = OpConstant 8 
                                Private f32* %268 = OpVariable Private 
                                Private f32* %275 = OpVariable Private 
                                         i32 %311 = OpConstant 7 
                              Private f32_3* %316 = OpVariable Private 
        UniformConstant read_only Texture2D* %317 = OpVariable UniformConstant 
                    UniformConstant sampler* %319 = OpVariable UniformConstant 
                                             %322 = OpTypePointer Input %99 
                        Input f32_2* vs_TEXCOORD0 = OpVariable Input 
                              Private f32_3* %327 = OpVariable Private 
                                         i32 %329 = OpConstant 5 
                                             %346 = OpTypePointer Output %14 
                               Output f32_4* %347 = OpVariable Output 
                                         u32 %351 = OpConstant 3 
                                             %352 = OpTypePointer Output %6 
                                          void %4 = OpFunction None %3 
                                               %5 = OpLabel 
                                        f32_3 %12 = OpLoad vs_TEXCOORD2 
                                        f32_3 %13 = OpFNegate %12 
                               Uniform f32_4* %24 = OpAccessChain %20 %22 
                                        f32_4 %25 = OpLoad %24 
                                        f32_3 %26 = OpVectorShuffle %25 %25 0 1 2 
                                        f32_3 %27 = OpFAdd %13 %26 
                                                      OpStore %9 %27 
                                        f32_3 %30 = OpLoad %9 
                                        f32_3 %31 = OpLoad %9 
                                          f32 %32 = OpDot %30 %31 
                                                      OpStore %29 %32 
                                          f32 %33 = OpLoad %29 
                                          f32 %34 = OpExtInst %1 32 %33 
                                                      OpStore %29 %34 
                                          f32 %35 = OpLoad %29 
                                        f32_3 %36 = OpCompositeConstruct %35 %35 %35 
                                        f32_3 %37 = OpLoad %9 
                                        f32_3 %38 = OpFMul %36 %37 
                                                      OpStore %9 %38 
                                        f32_3 %40 = OpLoad vs_TEXCOORD2 
                                        f32_3 %41 = OpFNegate %40 
                               Uniform f32_3* %44 = OpAccessChain %20 %42 
                                        f32_3 %45 = OpLoad %44 
                                        f32_3 %46 = OpFAdd %41 %45 
                                                      OpStore %39 %46 
                                        f32_3 %47 = OpLoad %39 
                                        f32_3 %48 = OpLoad %39 
                                          f32 %49 = OpDot %47 %48 
                                                      OpStore %29 %49 
                                          f32 %50 = OpLoad %29 
                                          f32 %51 = OpExtInst %1 32 %50 
                                                      OpStore %29 %51 
                                        f32_3 %54 = OpLoad %39 
                                          f32 %55 = OpLoad %29 
                                        f32_3 %56 = OpCompositeConstruct %55 %55 %55 
                                        f32_3 %57 = OpFMul %54 %56 
                                        f32_3 %58 = OpLoad %9 
                                        f32_3 %59 = OpFAdd %57 %58 
                                        f32_4 %60 = OpLoad %53 
                                        f32_4 %61 = OpVectorShuffle %60 %59 4 5 6 3 
                                                      OpStore %53 %61 
                                        f32_4 %63 = OpLoad %53 
                                        f32_3 %64 = OpVectorShuffle %63 %63 0 1 2 
                                        f32_4 %65 = OpLoad %53 
                                        f32_3 %66 = OpVectorShuffle %65 %65 0 1 2 
                                          f32 %67 = OpDot %64 %66 
                                                      OpStore %62 %67 
                                          f32 %68 = OpLoad %62 
                                          f32 %69 = OpExtInst %1 32 %68 
                                                      OpStore %62 %69 
                                          f32 %70 = OpLoad %62 
                                        f32_3 %71 = OpCompositeConstruct %70 %70 %70 
                                        f32_4 %72 = OpLoad %53 
                                        f32_3 %73 = OpVectorShuffle %72 %72 0 1 2 
                                        f32_3 %74 = OpFMul %71 %73 
                                        f32_4 %75 = OpLoad %53 
                                        f32_4 %76 = OpVectorShuffle %75 %74 4 5 6 3 
                                                      OpStore %53 %76 
                                        f32_3 %78 = OpLoad vs_TEXCOORD1 
                                        f32_3 %79 = OpLoad vs_TEXCOORD1 
                                          f32 %80 = OpDot %78 %79 
                                                      OpStore %62 %80 
                                          f32 %81 = OpLoad %62 
                                          f32 %82 = OpExtInst %1 32 %81 
                                                      OpStore %62 %82 
                                          f32 %84 = OpLoad %62 
                                        f32_3 %85 = OpCompositeConstruct %84 %84 %84 
                                        f32_3 %86 = OpLoad vs_TEXCOORD1 
                                        f32_3 %87 = OpFMul %85 %86 
                                                      OpStore %83 %87 
                                        f32_3 %88 = OpLoad %83 
                                        f32_4 %89 = OpLoad %53 
                                        f32_3 %90 = OpVectorShuffle %89 %89 0 1 2 
                                          f32 %91 = OpDot %88 %90 
                                 Private f32* %93 = OpAccessChain %53 %92 
                                                      OpStore %93 %91 
                                        f32_3 %94 = OpLoad %83 
                                        f32_3 %95 = OpLoad %9 
                                          f32 %96 = OpDot %94 %95 
                                 Private f32* %98 = OpAccessChain %53 %97 
                                                      OpStore %98 %96 
                                       f32_4 %100 = OpLoad %53 
                                       f32_2 %101 = OpVectorShuffle %100 %100 0 1 
                                       f32_2 %104 = OpExtInst %1 40 %101 %103 
                                       f32_4 %105 = OpLoad %53 
                                       f32_4 %106 = OpVectorShuffle %105 %104 4 5 2 3 
                                                      OpStore %53 %106 
                                Private f32* %107 = OpAccessChain %53 %92 
                                         f32 %108 = OpLoad %107 
                                         f32 %109 = OpExtInst %1 30 %108 
                                Private f32* %110 = OpAccessChain %9 %92 
                                                      OpStore %110 %109 
                                Uniform f32* %113 = OpAccessChain %20 %111 
                                         f32 %114 = OpLoad %113 
                                         f32 %116 = OpFMul %114 %115 
                                Private f32* %117 = OpAccessChain %53 %92 
                                                      OpStore %117 %116 
                                Private f32* %118 = OpAccessChain %9 %92 
                                         f32 %119 = OpLoad %118 
                                Private f32* %120 = OpAccessChain %53 %92 
                                         f32 %121 = OpLoad %120 
                                         f32 %122 = OpFMul %119 %121 
                                Private f32* %123 = OpAccessChain %9 %92 
                                                      OpStore %123 %122 
                                Private f32* %124 = OpAccessChain %9 %92 
                                         f32 %125 = OpLoad %124 
                                         f32 %126 = OpExtInst %1 29 %125 
                                Private f32* %127 = OpAccessChain %9 %92 
                                                      OpStore %127 %126 
                                Uniform f32* %129 = OpAccessChain %20 %128 
                                         f32 %130 = OpLoad %129 
                                         f32 %131 = OpFNegate %130 
                                         f32 %133 = OpFMul %131 %132 
                                         f32 %134 = OpFAdd %133 %132 
                                Private f32* %135 = OpAccessChain %53 %92 
                                                      OpStore %135 %134 
                                Private f32* %136 = OpAccessChain %9 %92 
                                         f32 %137 = OpLoad %136 
                                         f32 %139 = OpFMul %137 %138 
                                Private f32* %140 = OpAccessChain %53 %92 
                                         f32 %141 = OpLoad %140 
                                         f32 %142 = OpFNegate %141 
                                         f32 %143 = OpFAdd %139 %142 
                                Private f32* %144 = OpAccessChain %9 %92 
                                                      OpStore %144 %143 
                                Uniform f32* %146 = OpAccessChain %20 %128 
                                         f32 %147 = OpLoad %146 
                                         f32 %148 = OpFMul %147 %132 
                                         f32 %149 = OpFAdd %148 %132 
                                                      OpStore %145 %149 
                                Private f32* %151 = OpAccessChain %53 %92 
                                         f32 %152 = OpLoad %151 
                                         f32 %153 = OpFNegate %152 
                                         f32 %154 = OpLoad %145 
                                         f32 %155 = OpFAdd %153 %154 
                                Private f32* %156 = OpAccessChain %150 %92 
                                                      OpStore %156 %155 
                                Private f32* %158 = OpAccessChain %150 %92 
                                         f32 %159 = OpLoad %158 
                                         f32 %160 = OpFDiv %157 %159 
                                Private f32* %161 = OpAccessChain %150 %92 
                                                      OpStore %161 %160 
                                Private f32* %162 = OpAccessChain %150 %92 
                                         f32 %163 = OpLoad %162 
                                Private f32* %164 = OpAccessChain %9 %92 
                                         f32 %165 = OpLoad %164 
                                         f32 %166 = OpFMul %163 %165 
                                Private f32* %167 = OpAccessChain %9 %92 
                                                      OpStore %167 %166 
                                Private f32* %168 = OpAccessChain %9 %92 
                                         f32 %169 = OpLoad %168 
                                         f32 %170 = OpExtInst %1 43 %169 %102 %157 
                                Private f32* %171 = OpAccessChain %9 %92 
                                                      OpStore %171 %170 
                                Private f32* %172 = OpAccessChain %9 %92 
                                         f32 %173 = OpLoad %172 
                                         f32 %175 = OpFMul %173 %174 
                                         f32 %177 = OpFAdd %175 %176 
                                Private f32* %178 = OpAccessChain %150 %92 
                                                      OpStore %178 %177 
                                Private f32* %179 = OpAccessChain %9 %92 
                                         f32 %180 = OpLoad %179 
                                Private f32* %181 = OpAccessChain %9 %92 
                                         f32 %182 = OpLoad %181 
                                         f32 %183 = OpFMul %180 %182 
                                Private f32* %184 = OpAccessChain %9 %92 
                                                      OpStore %184 %183 
                                Private f32* %185 = OpAccessChain %9 %92 
                                         f32 %186 = OpLoad %185 
                                Private f32* %187 = OpAccessChain %150 %92 
                                         f32 %188 = OpLoad %187 
                                         f32 %189 = OpFMul %186 %188 
                                Private f32* %190 = OpAccessChain %9 %92 
                                                      OpStore %190 %189 
                                       f32_3 %191 = OpLoad vs_TEXCOORD2 
                                       f32_3 %192 = OpVectorShuffle %191 %191 1 1 1 
                              Uniform f32_4* %194 = OpAccessChain %20 %193 %22 
                                       f32_4 %195 = OpLoad %194 
                                       f32_3 %196 = OpVectorShuffle %195 %195 0 1 2 
                                       f32_3 %197 = OpFMul %192 %196 
                                                      OpStore %150 %197 
                              Uniform f32_4* %198 = OpAccessChain %20 %193 %42 
                                       f32_4 %199 = OpLoad %198 
                                       f32_3 %200 = OpVectorShuffle %199 %199 0 1 2 
                                       f32_3 %201 = OpLoad vs_TEXCOORD2 
                                       f32_3 %202 = OpVectorShuffle %201 %201 0 0 0 
                                       f32_3 %203 = OpFMul %200 %202 
                                       f32_3 %204 = OpLoad %150 
                                       f32_3 %205 = OpFAdd %203 %204 
                                                      OpStore %150 %205 
                              Uniform f32_4* %207 = OpAccessChain %20 %193 %206 
                                       f32_4 %208 = OpLoad %207 
                                       f32_3 %209 = OpVectorShuffle %208 %208 0 1 2 
                                       f32_3 %210 = OpLoad vs_TEXCOORD2 
                                       f32_3 %211 = OpVectorShuffle %210 %210 2 2 2 
                                       f32_3 %212 = OpFMul %209 %211 
                                       f32_3 %213 = OpLoad %150 
                                       f32_3 %214 = OpFAdd %212 %213 
                                                      OpStore %150 %214 
                                       f32_3 %215 = OpLoad %150 
                              Uniform f32_4* %217 = OpAccessChain %20 %193 %216 
                                       f32_4 %218 = OpLoad %217 
                                       f32_3 %219 = OpVectorShuffle %218 %218 0 1 2 
                                       f32_3 %220 = OpFAdd %215 %219 
                                                      OpStore %150 %220 
                                       f32_3 %221 = OpLoad %150 
                                       f32_3 %222 = OpLoad %150 
                                         f32 %223 = OpDot %221 %222 
                                Private f32* %224 = OpAccessChain %150 %92 
                                                      OpStore %224 %223 
                         read_only Texture2D %228 = OpLoad %227 
                                     sampler %232 = OpLoad %231 
                  read_only Texture2DSampled %234 = OpSampledImage %228 %232 
                                       f32_3 %235 = OpLoad %150 
                                       f32_2 %236 = OpVectorShuffle %235 %235 0 0 
                                       f32_4 %237 = OpImageSampleImplicitLod %234 %236 
                                         f32 %238 = OpCompositeExtract %237 0 
                                Private f32* %239 = OpAccessChain %150 %92 
                                                      OpStore %239 %238 
                                       f32_3 %240 = OpLoad %150 
                                       f32_3 %241 = OpVectorShuffle %240 %240 0 0 0 
                              Uniform f32_4* %242 = OpAccessChain %20 %206 
                                       f32_4 %243 = OpLoad %242 
                                       f32_3 %244 = OpVectorShuffle %243 %243 0 1 2 
                                       f32_3 %245 = OpFMul %241 %244 
                                       f32_4 %246 = OpLoad %53 
                                       f32_4 %247 = OpVectorShuffle %246 %245 4 1 5 6 
                                                      OpStore %53 %247 
                                       f32_4 %248 = OpLoad %53 
                                       f32_3 %249 = OpVectorShuffle %248 %248 0 2 3 
                              Uniform f32_4* %250 = OpAccessChain %20 %216 
                                       f32_4 %251 = OpLoad %250 
                                       f32_3 %252 = OpVectorShuffle %251 %251 0 1 2 
                                       f32_3 %253 = OpFMul %249 %252 
                                                      OpStore %83 %253 
                                       f32_3 %254 = OpLoad %9 
                                       f32_3 %255 = OpVectorShuffle %254 %254 0 0 0 
                                       f32_3 %256 = OpLoad %83 
                                       f32_3 %257 = OpFMul %255 %256 
                                                      OpStore %9 %257 
                                Uniform f32* %259 = OpAccessChain %20 %258 
                                         f32 %260 = OpLoad %259 
                                         f32 %261 = OpFNegate %260 
                                         f32 %262 = OpFMul %261 %132 
                                Uniform f32* %264 = OpAccessChain %20 %263 
                                         f32 %265 = OpLoad %264 
                                         f32 %266 = OpFAdd %262 %265 
                                Private f32* %267 = OpAccessChain %83 %92 
                                                      OpStore %267 %266 
                                Private f32* %269 = OpAccessChain %53 %97 
                                         f32 %270 = OpLoad %269 
                                Private f32* %271 = OpAccessChain %83 %92 
                                         f32 %272 = OpLoad %271 
                                         f32 %273 = OpFNegate %272 
                                         f32 %274 = OpFAdd %270 %273 
                                                      OpStore %268 %274 
                                Uniform f32* %276 = OpAccessChain %20 %258 
                                         f32 %277 = OpLoad %276 
                                         f32 %278 = OpFMul %277 %132 
                                Uniform f32* %279 = OpAccessChain %20 %263 
                                         f32 %280 = OpLoad %279 
                                         f32 %281 = OpFAdd %278 %280 
                                                      OpStore %275 %281 
                                Private f32* %282 = OpAccessChain %83 %92 
                                         f32 %283 = OpLoad %282 
                                         f32 %284 = OpFNegate %283 
                                         f32 %285 = OpLoad %275 
                                         f32 %286 = OpFAdd %284 %285 
                                Private f32* %287 = OpAccessChain %83 %92 
                                                      OpStore %287 %286 
                                Private f32* %288 = OpAccessChain %83 %92 
                                         f32 %289 = OpLoad %288 
                                         f32 %290 = OpFDiv %157 %289 
                                Private f32* %291 = OpAccessChain %83 %92 
                                                      OpStore %291 %290 
                                         f32 %292 = OpLoad %268 
                                Private f32* %293 = OpAccessChain %83 %92 
                                         f32 %294 = OpLoad %293 
                                         f32 %295 = OpFMul %292 %294 
                                                      OpStore %268 %295 
                                         f32 %296 = OpLoad %268 
                                         f32 %297 = OpExtInst %1 43 %296 %102 %157 
                                                      OpStore %268 %297 
                                         f32 %298 = OpLoad %268 
                                         f32 %299 = OpFMul %298 %174 
                                         f32 %300 = OpFAdd %299 %176 
                                Private f32* %301 = OpAccessChain %83 %92 
                                                      OpStore %301 %300 
                                         f32 %302 = OpLoad %268 
                                         f32 %303 = OpLoad %268 
                                         f32 %304 = OpFMul %302 %303 
                                                      OpStore %268 %304 
                                         f32 %305 = OpLoad %268 
                                Private f32* %306 = OpAccessChain %83 %92 
                                         f32 %307 = OpLoad %306 
                                         f32 %308 = OpFMul %305 %307 
                                                      OpStore %268 %308 
                                         f32 %309 = OpLoad %268 
                                       f32_3 %310 = OpCompositeConstruct %309 %309 %309 
                              Uniform f32_4* %312 = OpAccessChain %20 %311 
                                       f32_4 %313 = OpLoad %312 
                                       f32_3 %314 = OpVectorShuffle %313 %313 0 1 2 
                                       f32_3 %315 = OpFMul %310 %314 
                                                      OpStore %83 %315 
                         read_only Texture2D %318 = OpLoad %317 
                                     sampler %320 = OpLoad %319 
                  read_only Texture2DSampled %321 = OpSampledImage %318 %320 
                                       f32_2 %324 = OpLoad vs_TEXCOORD0 
                                       f32_4 %325 = OpImageSampleImplicitLod %321 %324 
                                       f32_3 %326 = OpVectorShuffle %325 %325 0 1 2 
                                                      OpStore %316 %326 
                                       f32_3 %328 = OpLoad %316 
                              Uniform f32_4* %330 = OpAccessChain %20 %329 
                                       f32_4 %331 = OpLoad %330 
                                       f32_3 %332 = OpVectorShuffle %331 %331 0 1 2 
                                       f32_3 %333 = OpFMul %328 %332 
                                                      OpStore %327 %333 
                                       f32_4 %334 = OpLoad %53 
                                       f32_3 %335 = OpVectorShuffle %334 %334 0 2 3 
                                       f32_3 %336 = OpLoad %327 
                                       f32_3 %337 = OpFMul %335 %336 
                                       f32_4 %338 = OpLoad %53 
                                       f32_4 %339 = OpVectorShuffle %338 %337 4 5 6 3 
                                                      OpStore %53 %339 
                                       f32_4 %340 = OpLoad %53 
                                       f32_3 %341 = OpVectorShuffle %340 %340 0 1 2 
                                       f32_3 %342 = OpLoad %83 
                                       f32_3 %343 = OpFMul %341 %342 
                                       f32_3 %344 = OpLoad %9 
                                       f32_3 %345 = OpFAdd %343 %344 
                                                      OpStore %9 %345 
                                       f32_3 %348 = OpLoad %9 
                                       f32_4 %349 = OpLoad %347 
                                       f32_4 %350 = OpVectorShuffle %349 %348 4 5 6 3 
                                                      OpStore %347 %350 
                                 Output f32* %353 = OpAccessChain %347 %351 
                                                      OpStore %353 %157 
                                                      OpReturn
                                                      OpFunctionEnd
"
}
SubProgram "gles3 hw_tier00 " {
Keywords { "DIRECTIONAL" }
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in highp vec3 in_NORMAL0;
in highp vec4 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out highp vec3 vs_TEXCOORD1;
out highp vec3 vs_TEXCOORD2;
out highp vec4 vs_TEXCOORD4;
vec4 u_xlat0;
vec4 u_xlat1;
float u_xlat6;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    vs_TEXCOORD2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
    u_xlat0 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat0;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat0;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat0.xy;
    u_xlat0.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat6 = dot(u_xlat0.xyz, u_xlat0.xyz);
    u_xlat6 = inversesqrt(u_xlat6);
    vs_TEXCOORD1.xyz = vec3(u_xlat6) * u_xlat0.xyz;
    vs_TEXCOORD4 = vec4(0.0, 0.0, 0.0, 0.0);
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec3 _WorldSpaceCameraPos;
uniform 	mediump vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 _LightColor0;
uniform 	mediump vec4 _SpecColor;
uniform 	mediump vec4 _Color;
uniform 	mediump float _Smoothness;
uniform 	mediump vec4 _HColor;
uniform 	mediump float _RampThreshold;
uniform 	mediump float _RampSmooth;
uniform 	mediump float _SpecSmooth;
UNITY_LOCATION(0) uniform mediump sampler2D _MainTex;
in mediump vec2 vs_TEXCOORD0;
in highp vec3 vs_TEXCOORD1;
in highp vec3 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec4 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
float u_xlat4;
mediump float u_xlat16_5;
mediump float u_xlat16_9;
float u_xlat12;
mediump float u_xlat16_13;
void main()
{
    u_xlat0.xyz = (-vs_TEXCOORD2.xyz) + _WorldSpaceCameraPos.xyz;
    u_xlat12 = dot(u_xlat0.xyz, u_xlat0.xyz);
    u_xlat12 = inversesqrt(u_xlat12);
    u_xlat16_1.xyz = u_xlat0.xyz * vec3(u_xlat12) + _WorldSpaceLightPos0.xyz;
    u_xlat16_13 = dot(u_xlat16_1.xyz, u_xlat16_1.xyz);
    u_xlat16_13 = inversesqrt(u_xlat16_13);
    u_xlat16_1.xyz = vec3(u_xlat16_13) * u_xlat16_1.xyz;
    u_xlat16_13 = dot(vs_TEXCOORD1.xyz, vs_TEXCOORD1.xyz);
    u_xlat16_13 = inversesqrt(u_xlat16_13);
    u_xlat16_2.xyz = vec3(u_xlat16_13) * vs_TEXCOORD1.xyz;
    u_xlat16_1.x = dot(u_xlat16_2.xyz, u_xlat16_1.xyz);
    u_xlat16_1.y = dot(u_xlat16_2.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat16_1.xy = max(u_xlat16_1.xy, vec2(0.0, 0.0));
    u_xlat0.x = log2(u_xlat16_1.x);
    u_xlat16_1.x = _Smoothness * 128.0;
    u_xlat0.x = u_xlat0.x * u_xlat16_1.x;
    u_xlat0.x = exp2(u_xlat0.x);
    u_xlat16_1.x = (-_SpecSmooth) * 0.5 + 0.5;
    u_xlat0.x = u_xlat0.x * 2.0 + (-u_xlat16_1.x);
    u_xlat16_9 = _SpecSmooth * 0.5 + 0.5;
    u_xlat4 = (-u_xlat16_1.x) + u_xlat16_9;
    u_xlat4 = float(1.0) / u_xlat4;
    u_xlat0.x = u_xlat4 * u_xlat0.x;
#ifdef UNITY_ADRENO_ES3
    u_xlat0.x = min(max(u_xlat0.x, 0.0), 1.0);
#else
    u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);
#endif
    u_xlat4 = u_xlat0.x * -2.0 + 3.0;
    u_xlat0.x = u_xlat0.x * u_xlat0.x;
    u_xlat0.x = u_xlat0.x * u_xlat4;
    u_xlat16_1.xzw = _LightColor0.xyz * _SpecColor.xyz;
    u_xlat0.xyz = u_xlat0.xxx * u_xlat16_1.xzw;
    u_xlat16_1.x = (-_RampSmooth) * 0.5 + _RampThreshold;
    u_xlat16_5 = (-u_xlat16_1.x) + u_xlat16_1.y;
    u_xlat16_9 = _RampSmooth * 0.5 + _RampThreshold;
    u_xlat16_1.x = (-u_xlat16_1.x) + u_xlat16_9;
    u_xlat16_1.x = float(1.0) / u_xlat16_1.x;
    u_xlat16_1.x = u_xlat16_1.x * u_xlat16_5;
#ifdef UNITY_ADRENO_ES3
    u_xlat16_1.x = min(max(u_xlat16_1.x, 0.0), 1.0);
#else
    u_xlat16_1.x = clamp(u_xlat16_1.x, 0.0, 1.0);
#endif
    u_xlat16_5 = u_xlat16_1.x * -2.0 + 3.0;
    u_xlat16_1.x = u_xlat16_1.x * u_xlat16_1.x;
    u_xlat16_1.x = u_xlat16_1.x * u_xlat16_5;
    u_xlat16_1.xyz = u_xlat16_1.xxx * _HColor.xyz;
    u_xlat16_3.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_2.xyz = u_xlat16_3.xyz * _Color.xyz;
    u_xlat16_2.xyz = u_xlat16_2.xyz * _LightColor0.xyz;
    u_xlat0.xyz = u_xlat16_2.xyz * u_xlat16_1.xyz + u_xlat0.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier01 " {
Keywords { "DIRECTIONAL" }
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in highp vec3 in_NORMAL0;
in highp vec4 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out highp vec3 vs_TEXCOORD1;
out highp vec3 vs_TEXCOORD2;
out highp vec4 vs_TEXCOORD4;
vec4 u_xlat0;
vec4 u_xlat1;
float u_xlat6;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    vs_TEXCOORD2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
    u_xlat0 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat0;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat0;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat0.xy;
    u_xlat0.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat6 = dot(u_xlat0.xyz, u_xlat0.xyz);
    u_xlat6 = inversesqrt(u_xlat6);
    vs_TEXCOORD1.xyz = vec3(u_xlat6) * u_xlat0.xyz;
    vs_TEXCOORD4 = vec4(0.0, 0.0, 0.0, 0.0);
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec3 _WorldSpaceCameraPos;
uniform 	mediump vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 _LightColor0;
uniform 	mediump vec4 _SpecColor;
uniform 	mediump vec4 _Color;
uniform 	mediump float _Smoothness;
uniform 	mediump vec4 _HColor;
uniform 	mediump float _RampThreshold;
uniform 	mediump float _RampSmooth;
uniform 	mediump float _SpecSmooth;
UNITY_LOCATION(0) uniform mediump sampler2D _MainTex;
in mediump vec2 vs_TEXCOORD0;
in highp vec3 vs_TEXCOORD1;
in highp vec3 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec4 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
float u_xlat4;
mediump float u_xlat16_5;
mediump float u_xlat16_9;
float u_xlat12;
mediump float u_xlat16_13;
void main()
{
    u_xlat0.xyz = (-vs_TEXCOORD2.xyz) + _WorldSpaceCameraPos.xyz;
    u_xlat12 = dot(u_xlat0.xyz, u_xlat0.xyz);
    u_xlat12 = inversesqrt(u_xlat12);
    u_xlat16_1.xyz = u_xlat0.xyz * vec3(u_xlat12) + _WorldSpaceLightPos0.xyz;
    u_xlat16_13 = dot(u_xlat16_1.xyz, u_xlat16_1.xyz);
    u_xlat16_13 = inversesqrt(u_xlat16_13);
    u_xlat16_1.xyz = vec3(u_xlat16_13) * u_xlat16_1.xyz;
    u_xlat16_13 = dot(vs_TEXCOORD1.xyz, vs_TEXCOORD1.xyz);
    u_xlat16_13 = inversesqrt(u_xlat16_13);
    u_xlat16_2.xyz = vec3(u_xlat16_13) * vs_TEXCOORD1.xyz;
    u_xlat16_1.x = dot(u_xlat16_2.xyz, u_xlat16_1.xyz);
    u_xlat16_1.y = dot(u_xlat16_2.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat16_1.xy = max(u_xlat16_1.xy, vec2(0.0, 0.0));
    u_xlat0.x = log2(u_xlat16_1.x);
    u_xlat16_1.x = _Smoothness * 128.0;
    u_xlat0.x = u_xlat0.x * u_xlat16_1.x;
    u_xlat0.x = exp2(u_xlat0.x);
    u_xlat16_1.x = (-_SpecSmooth) * 0.5 + 0.5;
    u_xlat0.x = u_xlat0.x * 2.0 + (-u_xlat16_1.x);
    u_xlat16_9 = _SpecSmooth * 0.5 + 0.5;
    u_xlat4 = (-u_xlat16_1.x) + u_xlat16_9;
    u_xlat4 = float(1.0) / u_xlat4;
    u_xlat0.x = u_xlat4 * u_xlat0.x;
#ifdef UNITY_ADRENO_ES3
    u_xlat0.x = min(max(u_xlat0.x, 0.0), 1.0);
#else
    u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);
#endif
    u_xlat4 = u_xlat0.x * -2.0 + 3.0;
    u_xlat0.x = u_xlat0.x * u_xlat0.x;
    u_xlat0.x = u_xlat0.x * u_xlat4;
    u_xlat16_1.xzw = _LightColor0.xyz * _SpecColor.xyz;
    u_xlat0.xyz = u_xlat0.xxx * u_xlat16_1.xzw;
    u_xlat16_1.x = (-_RampSmooth) * 0.5 + _RampThreshold;
    u_xlat16_5 = (-u_xlat16_1.x) + u_xlat16_1.y;
    u_xlat16_9 = _RampSmooth * 0.5 + _RampThreshold;
    u_xlat16_1.x = (-u_xlat16_1.x) + u_xlat16_9;
    u_xlat16_1.x = float(1.0) / u_xlat16_1.x;
    u_xlat16_1.x = u_xlat16_1.x * u_xlat16_5;
#ifdef UNITY_ADRENO_ES3
    u_xlat16_1.x = min(max(u_xlat16_1.x, 0.0), 1.0);
#else
    u_xlat16_1.x = clamp(u_xlat16_1.x, 0.0, 1.0);
#endif
    u_xlat16_5 = u_xlat16_1.x * -2.0 + 3.0;
    u_xlat16_1.x = u_xlat16_1.x * u_xlat16_1.x;
    u_xlat16_1.x = u_xlat16_1.x * u_xlat16_5;
    u_xlat16_1.xyz = u_xlat16_1.xxx * _HColor.xyz;
    u_xlat16_3.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_2.xyz = u_xlat16_3.xyz * _Color.xyz;
    u_xlat16_2.xyz = u_xlat16_2.xyz * _LightColor0.xyz;
    u_xlat0.xyz = u_xlat16_2.xyz * u_xlat16_1.xyz + u_xlat0.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier02 " {
Keywords { "DIRECTIONAL" }
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in highp vec3 in_NORMAL0;
in highp vec4 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out highp vec3 vs_TEXCOORD1;
out highp vec3 vs_TEXCOORD2;
out highp vec4 vs_TEXCOORD4;
vec4 u_xlat0;
vec4 u_xlat1;
float u_xlat6;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    vs_TEXCOORD2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
    u_xlat0 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat0;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat0;
    u_xlat0.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat0.xy;
    u_xlat0.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat0.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat0.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat6 = dot(u_xlat0.xyz, u_xlat0.xyz);
    u_xlat6 = inversesqrt(u_xlat6);
    vs_TEXCOORD1.xyz = vec3(u_xlat6) * u_xlat0.xyz;
    vs_TEXCOORD4 = vec4(0.0, 0.0, 0.0, 0.0);
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec3 _WorldSpaceCameraPos;
uniform 	mediump vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 _LightColor0;
uniform 	mediump vec4 _SpecColor;
uniform 	mediump vec4 _Color;
uniform 	mediump float _Smoothness;
uniform 	mediump vec4 _HColor;
uniform 	mediump float _RampThreshold;
uniform 	mediump float _RampSmooth;
uniform 	mediump float _SpecSmooth;
UNITY_LOCATION(0) uniform mediump sampler2D _MainTex;
in mediump vec2 vs_TEXCOORD0;
in highp vec3 vs_TEXCOORD1;
in highp vec3 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec4 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
float u_xlat4;
mediump float u_xlat16_5;
mediump float u_xlat16_9;
float u_xlat12;
mediump float u_xlat16_13;
void main()
{
    u_xlat0.xyz = (-vs_TEXCOORD2.xyz) + _WorldSpaceCameraPos.xyz;
    u_xlat12 = dot(u_xlat0.xyz, u_xlat0.xyz);
    u_xlat12 = inversesqrt(u_xlat12);
    u_xlat16_1.xyz = u_xlat0.xyz * vec3(u_xlat12) + _WorldSpaceLightPos0.xyz;
    u_xlat16_13 = dot(u_xlat16_1.xyz, u_xlat16_1.xyz);
    u_xlat16_13 = inversesqrt(u_xlat16_13);
    u_xlat16_1.xyz = vec3(u_xlat16_13) * u_xlat16_1.xyz;
    u_xlat16_13 = dot(vs_TEXCOORD1.xyz, vs_TEXCOORD1.xyz);
    u_xlat16_13 = inversesqrt(u_xlat16_13);
    u_xlat16_2.xyz = vec3(u_xlat16_13) * vs_TEXCOORD1.xyz;
    u_xlat16_1.x = dot(u_xlat16_2.xyz, u_xlat16_1.xyz);
    u_xlat16_1.y = dot(u_xlat16_2.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat16_1.xy = max(u_xlat16_1.xy, vec2(0.0, 0.0));
    u_xlat0.x = log2(u_xlat16_1.x);
    u_xlat16_1.x = _Smoothness * 128.0;
    u_xlat0.x = u_xlat0.x * u_xlat16_1.x;
    u_xlat0.x = exp2(u_xlat0.x);
    u_xlat16_1.x = (-_SpecSmooth) * 0.5 + 0.5;
    u_xlat0.x = u_xlat0.x * 2.0 + (-u_xlat16_1.x);
    u_xlat16_9 = _SpecSmooth * 0.5 + 0.5;
    u_xlat4 = (-u_xlat16_1.x) + u_xlat16_9;
    u_xlat4 = float(1.0) / u_xlat4;
    u_xlat0.x = u_xlat4 * u_xlat0.x;
#ifdef UNITY_ADRENO_ES3
    u_xlat0.x = min(max(u_xlat0.x, 0.0), 1.0);
#else
    u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);
#endif
    u_xlat4 = u_xlat0.x * -2.0 + 3.0;
    u_xlat0.x = u_xlat0.x * u_xlat0.x;
    u_xlat0.x = u_xlat0.x * u_xlat4;
    u_xlat16_1.xzw = _LightColor0.xyz * _SpecColor.xyz;
    u_xlat0.xyz = u_xlat0.xxx * u_xlat16_1.xzw;
    u_xlat16_1.x = (-_RampSmooth) * 0.5 + _RampThreshold;
    u_xlat16_5 = (-u_xlat16_1.x) + u_xlat16_1.y;
    u_xlat16_9 = _RampSmooth * 0.5 + _RampThreshold;
    u_xlat16_1.x = (-u_xlat16_1.x) + u_xlat16_9;
    u_xlat16_1.x = float(1.0) / u_xlat16_1.x;
    u_xlat16_1.x = u_xlat16_1.x * u_xlat16_5;
#ifdef UNITY_ADRENO_ES3
    u_xlat16_1.x = min(max(u_xlat16_1.x, 0.0), 1.0);
#else
    u_xlat16_1.x = clamp(u_xlat16_1.x, 0.0, 1.0);
#endif
    u_xlat16_5 = u_xlat16_1.x * -2.0 + 3.0;
    u_xlat16_1.x = u_xlat16_1.x * u_xlat16_1.x;
    u_xlat16_1.x = u_xlat16_1.x * u_xlat16_5;
    u_xlat16_1.xyz = u_xlat16_1.xxx * _HColor.xyz;
    u_xlat16_3.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_2.xyz = u_xlat16_3.xyz * _Color.xyz;
    u_xlat16_2.xyz = u_xlat16_2.xyz * _LightColor0.xyz;
    u_xlat0.xyz = u_xlat16_2.xyz * u_xlat16_1.xyz + u_xlat0.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "vulkan hw_tier00 " {
Keywords { "DIRECTIONAL" }
"; SPIR-V
; Version: 1.0
; Generator: Khronos Glslang Reference Front End; 6
; Bound: 159
; Schema: 0
                                                      OpCapability Shader 
                                               %1 = OpExtInstImport "GLSL.std.450" 
                                                      OpMemoryModel Logical GLSL450 
                                                      OpEntryPoint Vertex %4 "main" %11 %52 %85 %95 %110 %114 %144 %150 
                                                      OpName vs_TEXCOORD2 "vs_TEXCOORD2" 
                                                      OpName vs_TEXCOORD0 "vs_TEXCOORD0" 
                                                      OpName vs_TEXCOORD1 "vs_TEXCOORD1" 
                                                      OpName vs_TEXCOORD4 "vs_TEXCOORD4" 
                                                      OpDecorate %11 Location 11 
                                                      OpDecorate %16 ArrayStride 16 
                                                      OpDecorate %17 ArrayStride 17 
                                                      OpDecorate %18 ArrayStride 18 
                                                      OpMemberDecorate %19 0 Offset 19 
                                                      OpMemberDecorate %19 1 Offset 19 
                                                      OpMemberDecorate %19 2 Offset 19 
                                                      OpMemberDecorate %19 3 Offset 19 
                                                      OpDecorate %19 Block 
                                                      OpDecorate %21 DescriptorSet 21 
                                                      OpDecorate %21 Binding 21 
                                                      OpDecorate vs_TEXCOORD2 Location 52 
                                                      OpMemberDecorate %83 0 BuiltIn 83 
                                                      OpMemberDecorate %83 1 BuiltIn 83 
                                                      OpMemberDecorate %83 2 BuiltIn 83 
                                                      OpDecorate %83 Block 
                                                      OpDecorate %95 Location 95 
                                                      OpDecorate vs_TEXCOORD0 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD0 Location 110 
                                                      OpDecorate %114 Location 114 
                                                      OpDecorate vs_TEXCOORD1 Location 144 
                                                      OpDecorate vs_TEXCOORD4 Location 150 
                                               %2 = OpTypeVoid 
                                               %3 = OpTypeFunction %2 
                                               %6 = OpTypeFloat 32 
                                               %7 = OpTypeVector %6 4 
                                               %8 = OpTypePointer Private %7 
                                Private f32_4* %9 = OpVariable Private 
                                              %10 = OpTypePointer Input %7 
                                 Input f32_4* %11 = OpVariable Input 
                                              %14 = OpTypeInt 32 0 
                                          u32 %15 = OpConstant 4 
                                              %16 = OpTypeArray %7 %15 
                                              %17 = OpTypeArray %7 %15 
                                              %18 = OpTypeArray %7 %15 
                                              %19 = OpTypeStruct %16 %17 %18 %7 
                                              %20 = OpTypePointer Uniform %19 
Uniform struct {f32_4[4]; f32_4[4]; f32_4[4]; f32_4;}* %21 = OpVariable Uniform 
                                              %22 = OpTypeInt 32 1 
                                          i32 %23 = OpConstant 0 
                                          i32 %24 = OpConstant 1 
                                              %25 = OpTypePointer Uniform %7 
                                          i32 %36 = OpConstant 2 
                               Private f32_4* %44 = OpVariable Private 
                                          i32 %46 = OpConstant 3 
                                              %50 = OpTypeVector %6 3 
                                              %51 = OpTypePointer Output %50 
                       Output f32_3* vs_TEXCOORD2 = OpVariable Output 
                                          u32 %81 = OpConstant 1 
                                              %82 = OpTypeArray %6 %81 
                                              %83 = OpTypeStruct %7 %6 %82 
                                              %84 = OpTypePointer Output %83 
         Output struct {f32_4; f32; f32[1];}* %85 = OpVariable Output 
                                              %93 = OpTypePointer Output %7 
                                 Input f32_4* %95 = OpVariable Input 
                                              %96 = OpTypeVector %6 2 
                                             %109 = OpTypePointer Output %96 
                       Output f32_2* vs_TEXCOORD0 = OpVariable Output 
                                             %113 = OpTypePointer Input %50 
                                Input f32_3* %114 = OpVariable Input 
                                         u32 %120 = OpConstant 0 
                                             %121 = OpTypePointer Private %6 
                                         u32 %134 = OpConstant 2 
                                Private f32* %136 = OpVariable Private 
                       Output f32_3* vs_TEXCOORD1 = OpVariable Output 
                       Output f32_4* vs_TEXCOORD4 = OpVariable Output 
                                         f32 %151 = OpConstant 3.674022E-40 
                                       f32_4 %152 = OpConstantComposite %151 %151 %151 %151 
                                             %153 = OpTypePointer Output %6 
                                          void %4 = OpFunction None %3 
                                               %5 = OpLabel 
                                        f32_4 %12 = OpLoad %11 
                                        f32_4 %13 = OpVectorShuffle %12 %12 1 1 1 1 
                               Uniform f32_4* %26 = OpAccessChain %21 %23 %24 
                                        f32_4 %27 = OpLoad %26 
                                        f32_4 %28 = OpFMul %13 %27 
                                                      OpStore %9 %28 
                               Uniform f32_4* %29 = OpAccessChain %21 %23 %23 
                                        f32_4 %30 = OpLoad %29 
                                        f32_4 %31 = OpLoad %11 
                                        f32_4 %32 = OpVectorShuffle %31 %31 0 0 0 0 
                                        f32_4 %33 = OpFMul %30 %32 
                                        f32_4 %34 = OpLoad %9 
                                        f32_4 %35 = OpFAdd %33 %34 
                                                      OpStore %9 %35 
                               Uniform f32_4* %37 = OpAccessChain %21 %23 %36 
                                        f32_4 %38 = OpLoad %37 
                                        f32_4 %39 = OpLoad %11 
                                        f32_4 %40 = OpVectorShuffle %39 %39 2 2 2 2 
                                        f32_4 %41 = OpFMul %38 %40 
                                        f32_4 %42 = OpLoad %9 
                                        f32_4 %43 = OpFAdd %41 %42 
                                                      OpStore %9 %43 
                                        f32_4 %45 = OpLoad %9 
                               Uniform f32_4* %47 = OpAccessChain %21 %23 %46 
                                        f32_4 %48 = OpLoad %47 
                                        f32_4 %49 = OpFAdd %45 %48 
                                                      OpStore %44 %49 
                               Uniform f32_4* %53 = OpAccessChain %21 %23 %46 
                                        f32_4 %54 = OpLoad %53 
                                        f32_3 %55 = OpVectorShuffle %54 %54 0 1 2 
                                        f32_4 %56 = OpLoad %11 
                                        f32_3 %57 = OpVectorShuffle %56 %56 3 3 3 
                                        f32_3 %58 = OpFMul %55 %57 
                                        f32_4 %59 = OpLoad %9 
                                        f32_3 %60 = OpVectorShuffle %59 %59 0 1 2 
                                        f32_3 %61 = OpFAdd %58 %60 
                                                      OpStore vs_TEXCOORD2 %61 
                                        f32_4 %62 = OpLoad %44 
                                        f32_4 %63 = OpVectorShuffle %62 %62 1 1 1 1 
                               Uniform f32_4* %64 = OpAccessChain %21 %36 %24 
                                        f32_4 %65 = OpLoad %64 
                                        f32_4 %66 = OpFMul %63 %65 
                                                      OpStore %9 %66 
                               Uniform f32_4* %67 = OpAccessChain %21 %36 %23 
                                        f32_4 %68 = OpLoad %67 
                                        f32_4 %69 = OpLoad %44 
                                        f32_4 %70 = OpVectorShuffle %69 %69 0 0 0 0 
                                        f32_4 %71 = OpFMul %68 %70 
                                        f32_4 %72 = OpLoad %9 
                                        f32_4 %73 = OpFAdd %71 %72 
                                                      OpStore %9 %73 
                               Uniform f32_4* %74 = OpAccessChain %21 %36 %36 
                                        f32_4 %75 = OpLoad %74 
                                        f32_4 %76 = OpLoad %44 
                                        f32_4 %77 = OpVectorShuffle %76 %76 2 2 2 2 
                                        f32_4 %78 = OpFMul %75 %77 
                                        f32_4 %79 = OpLoad %9 
                                        f32_4 %80 = OpFAdd %78 %79 
                                                      OpStore %9 %80 
                               Uniform f32_4* %86 = OpAccessChain %21 %36 %46 
                                        f32_4 %87 = OpLoad %86 
                                        f32_4 %88 = OpLoad %44 
                                        f32_4 %89 = OpVectorShuffle %88 %88 3 3 3 3 
                                        f32_4 %90 = OpFMul %87 %89 
                                        f32_4 %91 = OpLoad %9 
                                        f32_4 %92 = OpFAdd %90 %91 
                                Output f32_4* %94 = OpAccessChain %85 %23 
                                                      OpStore %94 %92 
                                        f32_4 %97 = OpLoad %95 
                                        f32_2 %98 = OpVectorShuffle %97 %97 0 1 
                               Uniform f32_4* %99 = OpAccessChain %21 %46 
                                       f32_4 %100 = OpLoad %99 
                                       f32_2 %101 = OpVectorShuffle %100 %100 0 1 
                                       f32_2 %102 = OpFMul %98 %101 
                              Uniform f32_4* %103 = OpAccessChain %21 %46 
                                       f32_4 %104 = OpLoad %103 
                                       f32_2 %105 = OpVectorShuffle %104 %104 2 3 
                                       f32_2 %106 = OpFAdd %102 %105 
                                       f32_4 %107 = OpLoad %9 
                                       f32_4 %108 = OpVectorShuffle %107 %106 4 5 2 3 
                                                      OpStore %9 %108 
                                       f32_4 %111 = OpLoad %9 
                                       f32_2 %112 = OpVectorShuffle %111 %111 0 1 
                                                      OpStore vs_TEXCOORD0 %112 
                                       f32_3 %115 = OpLoad %114 
                              Uniform f32_4* %116 = OpAccessChain %21 %24 %23 
                                       f32_4 %117 = OpLoad %116 
                                       f32_3 %118 = OpVectorShuffle %117 %117 0 1 2 
                                         f32 %119 = OpDot %115 %118 
                                Private f32* %122 = OpAccessChain %9 %120 
                                                      OpStore %122 %119 
                                       f32_3 %123 = OpLoad %114 
                              Uniform f32_4* %124 = OpAccessChain %21 %24 %24 
                                       f32_4 %125 = OpLoad %124 
                                       f32_3 %126 = OpVectorShuffle %125 %125 0 1 2 
                                         f32 %127 = OpDot %123 %126 
                                Private f32* %128 = OpAccessChain %9 %81 
                                                      OpStore %128 %127 
                                       f32_3 %129 = OpLoad %114 
                              Uniform f32_4* %130 = OpAccessChain %21 %24 %36 
                                       f32_4 %131 = OpLoad %130 
                                       f32_3 %132 = OpVectorShuffle %131 %131 0 1 2 
                                         f32 %133 = OpDot %129 %132 
                                Private f32* %135 = OpAccessChain %9 %134 
                                                      OpStore %135 %133 
                                       f32_4 %137 = OpLoad %9 
                                       f32_3 %138 = OpVectorShuffle %137 %137 0 1 2 
                                       f32_4 %139 = OpLoad %9 
                                       f32_3 %140 = OpVectorShuffle %139 %139 0 1 2 
                                         f32 %141 = OpDot %138 %140 
                                                      OpStore %136 %141 
                                         f32 %142 = OpLoad %136 
                                         f32 %143 = OpExtInst %1 32 %142 
                                                      OpStore %136 %143 
                                         f32 %145 = OpLoad %136 
                                       f32_3 %146 = OpCompositeConstruct %145 %145 %145 
                                       f32_4 %147 = OpLoad %9 
                                       f32_3 %148 = OpVectorShuffle %147 %147 0 1 2 
                                       f32_3 %149 = OpFMul %146 %148 
                                                      OpStore vs_TEXCOORD1 %149 
                                                      OpStore vs_TEXCOORD4 %152 
                                 Output f32* %154 = OpAccessChain %85 %23 %81 
                                         f32 %155 = OpLoad %154 
                                         f32 %156 = OpFNegate %155 
                                 Output f32* %157 = OpAccessChain %85 %23 %81 
                                                      OpStore %157 %156 
                                                      OpReturn
                                                      OpFunctionEnd
; SPIR-V
; Version: 1.0
; Generator: Khronos Glslang Reference Front End; 6
; Bound: 295
; Schema: 0
                                                      OpCapability Shader 
                                               %1 = OpExtInstImport "GLSL.std.450" 
                                                      OpMemoryModel Logical GLSL450 
                                                      OpEntryPoint Fragment %4 "main" %11 %60 %265 %287 
                                                      OpExecutionMode %4 OriginUpperLeft 
                                                      OpName vs_TEXCOORD2 "vs_TEXCOORD2" 
                                                      OpName vs_TEXCOORD1 "vs_TEXCOORD1" 
                                                      OpName vs_TEXCOORD0 "vs_TEXCOORD0" 
                                                      OpDecorate vs_TEXCOORD2 Location 11 
                                                      OpMemberDecorate %15 0 Offset 15 
                                                      OpMemberDecorate %15 1 RelaxedPrecision 
                                                      OpMemberDecorate %15 1 Offset 15 
                                                      OpMemberDecorate %15 2 RelaxedPrecision 
                                                      OpMemberDecorate %15 2 Offset 15 
                                                      OpMemberDecorate %15 3 RelaxedPrecision 
                                                      OpMemberDecorate %15 3 Offset 15 
                                                      OpMemberDecorate %15 4 RelaxedPrecision 
                                                      OpMemberDecorate %15 4 Offset 15 
                                                      OpMemberDecorate %15 5 RelaxedPrecision 
                                                      OpMemberDecorate %15 5 Offset 15 
                                                      OpMemberDecorate %15 6 RelaxedPrecision 
                                                      OpMemberDecorate %15 6 Offset 15 
                                                      OpMemberDecorate %15 7 RelaxedPrecision 
                                                      OpMemberDecorate %15 7 Offset 15 
                                                      OpMemberDecorate %15 8 RelaxedPrecision 
                                                      OpMemberDecorate %15 8 Offset 15 
                                                      OpMemberDecorate %15 9 RelaxedPrecision 
                                                      OpMemberDecorate %15 9 Offset 15 
                                                      OpDecorate %15 Block 
                                                      OpDecorate %17 DescriptorSet 17 
                                                      OpDecorate %17 Binding 17 
                                                      OpDecorate %32 RelaxedPrecision 
                                                      OpDecorate %40 RelaxedPrecision 
                                                      OpDecorate %41 RelaxedPrecision 
                                                      OpDecorate %45 RelaxedPrecision 
                                                      OpDecorate %46 RelaxedPrecision 
                                                      OpDecorate %47 RelaxedPrecision 
                                                      OpDecorate %48 RelaxedPrecision 
                                                      OpDecorate %49 RelaxedPrecision 
                                                      OpDecorate %50 RelaxedPrecision 
                                                      OpDecorate %51 RelaxedPrecision 
                                                      OpDecorate %52 RelaxedPrecision 
                                                      OpDecorate %53 RelaxedPrecision 
                                                      OpDecorate %54 RelaxedPrecision 
                                                      OpDecorate %55 RelaxedPrecision 
                                                      OpDecorate %56 RelaxedPrecision 
                                                      OpDecorate %57 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD1 Location 60 
                                                      OpDecorate %64 RelaxedPrecision 
                                                      OpDecorate %65 RelaxedPrecision 
                                                      OpDecorate %66 RelaxedPrecision 
                                                      OpDecorate %67 RelaxedPrecision 
                                                      OpDecorate %71 RelaxedPrecision 
                                                      OpDecorate %72 RelaxedPrecision 
                                                      OpDecorate %73 RelaxedPrecision 
                                                      OpDecorate %74 RelaxedPrecision 
                                                      OpDecorate %78 RelaxedPrecision 
                                                      OpDecorate %80 RelaxedPrecision 
                                                      OpDecorate %81 RelaxedPrecision 
                                                      OpDecorate %82 RelaxedPrecision 
                                                      OpDecorate %86 RelaxedPrecision 
                                                      OpDecorate %87 RelaxedPrecision 
                                                      OpDecorate %90 RelaxedPrecision 
                                                      OpDecorate %94 RelaxedPrecision 
                                                      OpDecorate %95 RelaxedPrecision 
                                                      OpDecorate %100 RelaxedPrecision 
                                                      OpDecorate %102 RelaxedPrecision 
                                                      OpDecorate %107 RelaxedPrecision 
                                                      OpDecorate %116 RelaxedPrecision 
                                                      OpDecorate %117 RelaxedPrecision 
                                                      OpDecorate %119 RelaxedPrecision 
                                                      OpDecorate %120 RelaxedPrecision 
                                                      OpDecorate %127 RelaxedPrecision 
                                                      OpDecorate %128 RelaxedPrecision 
                                                      OpDecorate %131 RelaxedPrecision 
                                                      OpDecorate %133 RelaxedPrecision 
                                                      OpDecorate %134 RelaxedPrecision 
                                                      OpDecorate %135 RelaxedPrecision 
                                                      OpDecorate %138 RelaxedPrecision 
                                                      OpDecorate %139 RelaxedPrecision 
                                                      OpDecorate %140 RelaxedPrecision 
                                                      OpDecorate %141 RelaxedPrecision 
                                                      OpDecorate %173 RelaxedPrecision 
                                                      OpDecorate %174 RelaxedPrecision 
                                                      OpDecorate %177 RelaxedPrecision 
                                                      OpDecorate %178 RelaxedPrecision 
                                                      OpDecorate %179 RelaxedPrecision 
                                                      OpDecorate %184 RelaxedPrecision 
                                                      OpDecorate %185 RelaxedPrecision 
                                                      OpDecorate %189 RelaxedPrecision 
                                                      OpDecorate %190 RelaxedPrecision 
                                                      OpDecorate %191 RelaxedPrecision 
                                                      OpDecorate %194 RelaxedPrecision 
                                                      OpDecorate %195 RelaxedPrecision 
                                                      OpDecorate %197 RelaxedPrecision 
                                                      OpDecorate %199 RelaxedPrecision 
                                                      OpDecorate %200 RelaxedPrecision 
                                                      OpDecorate %202 RelaxedPrecision 
                                                      OpDecorate %203 RelaxedPrecision 
                                                      OpDecorate %205 RelaxedPrecision 
                                                      OpDecorate %206 RelaxedPrecision 
                                                      OpDecorate %208 RelaxedPrecision 
                                                      OpDecorate %209 RelaxedPrecision 
                                                      OpDecorate %211 RelaxedPrecision 
                                                      OpDecorate %212 RelaxedPrecision 
                                                      OpDecorate %213 RelaxedPrecision 
                                                      OpDecorate %214 RelaxedPrecision 
                                                      OpDecorate %217 RelaxedPrecision 
                                                      OpDecorate %218 RelaxedPrecision 
                                                      OpDecorate %221 RelaxedPrecision 
                                                      OpDecorate %222 RelaxedPrecision 
                                                      OpDecorate %223 RelaxedPrecision 
                                                      OpDecorate %226 RelaxedPrecision 
                                                      OpDecorate %227 RelaxedPrecision 
                                                      OpDecorate %230 RelaxedPrecision 
                                                      OpDecorate %231 RelaxedPrecision 
                                                      OpDecorate %232 RelaxedPrecision 
                                                      OpDecorate %234 RelaxedPrecision 
                                                      OpDecorate %236 RelaxedPrecision 
                                                      OpDecorate %237 RelaxedPrecision 
                                                      OpDecorate %240 RelaxedPrecision 
                                                      OpDecorate %241 RelaxedPrecision 
                                                      OpDecorate %242 RelaxedPrecision 
                                                      OpDecorate %244 RelaxedPrecision 
                                                      OpDecorate %245 RelaxedPrecision 
                                                      OpDecorate %248 RelaxedPrecision 
                                                      OpDecorate %249 RelaxedPrecision 
                                                      OpDecorate %250 RelaxedPrecision 
                                                      OpDecorate %253 RelaxedPrecision 
                                                      OpDecorate %256 RelaxedPrecision 
                                                      OpDecorate %256 DescriptorSet 256 
                                                      OpDecorate %256 Binding 256 
                                                      OpDecorate %257 RelaxedPrecision 
                                                      OpDecorate %260 RelaxedPrecision 
                                                      OpDecorate %260 DescriptorSet 260 
                                                      OpDecorate %260 Binding 260 
                                                      OpDecorate %261 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD0 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD0 Location 265 
                                                      OpDecorate %266 RelaxedPrecision 
                                                      OpDecorate %267 RelaxedPrecision 
                                                      OpDecorate %268 RelaxedPrecision 
                                                      OpDecorate %269 RelaxedPrecision 
                                                      OpDecorate %272 RelaxedPrecision 
                                                      OpDecorate %273 RelaxedPrecision 
                                                      OpDecorate %274 RelaxedPrecision 
                                                      OpDecorate %275 RelaxedPrecision 
                                                      OpDecorate %277 RelaxedPrecision 
                                                      OpDecorate %278 RelaxedPrecision 
                                                      OpDecorate %279 RelaxedPrecision 
                                                      OpDecorate %280 RelaxedPrecision 
                                                      OpDecorate %281 RelaxedPrecision 
                                                      OpDecorate %282 RelaxedPrecision 
                                                      OpDecorate %283 RelaxedPrecision 
                                                      OpDecorate %287 RelaxedPrecision 
                                                      OpDecorate %287 Location 287 
                                               %2 = OpTypeVoid 
                                               %3 = OpTypeFunction %2 
                                               %6 = OpTypeFloat 32 
                                               %7 = OpTypeVector %6 3 
                                               %8 = OpTypePointer Private %7 
                                Private f32_3* %9 = OpVariable Private 
                                              %10 = OpTypePointer Input %7 
                        Input f32_3* vs_TEXCOORD2 = OpVariable Input 
                                              %14 = OpTypeVector %6 4 
                                              %15 = OpTypeStruct %7 %14 %14 %14 %14 %6 %14 %6 %6 %6 
                                              %16 = OpTypePointer Uniform %15 
Uniform struct {f32_3; f32_4; f32_4; f32_4; f32_4; f32; f32_4; f32; f32; f32;}* %17 = OpVariable Uniform 
                                              %18 = OpTypeInt 32 1 
                                          i32 %19 = OpConstant 0 
                                              %20 = OpTypePointer Uniform %7 
                                              %24 = OpTypePointer Private %6 
                                 Private f32* %25 = OpVariable Private 
                                              %31 = OpTypePointer Private %14 
                               Private f32_4* %32 = OpVariable Private 
                                          i32 %37 = OpConstant 1 
                                              %38 = OpTypePointer Uniform %14 
                                 Private f32* %45 = OpVariable Private 
                        Input f32_3* vs_TEXCOORD1 = OpVariable Input 
                               Private f32_3* %66 = OpVariable Private 
                                              %75 = OpTypeInt 32 0 
                                          u32 %76 = OpConstant 0 
                                          u32 %83 = OpConstant 1 
                                              %85 = OpTypeVector %6 2 
                                          f32 %88 = OpConstant 3.674022E-40 
                                        f32_2 %89 = OpConstantComposite %88 %88 
                                          i32 %97 = OpConstant 5 
                                              %98 = OpTypePointer Uniform %6 
                                         f32 %101 = OpConstant 3.674022E-40 
                                         i32 %114 = OpConstant 9 
                                         f32 %118 = OpConstant 3.674022E-40 
                                         f32 %124 = OpConstant 3.674022E-40 
                                Private f32* %131 = OpVariable Private 
                                Private f32* %136 = OpVariable Private 
                                         f32 %142 = OpConstant 3.674022E-40 
                                         f32 %156 = OpConstant 3.674022E-40 
                                         f32 %158 = OpConstant 3.674022E-40 
                                         i32 %171 = OpConstant 2 
                                         i32 %175 = OpConstant 3 
                                         i32 %187 = OpConstant 8 
                                         i32 %192 = OpConstant 7 
                                Private f32* %197 = OpVariable Private 
                                         i32 %246 = OpConstant 6 
                              Private f32_3* %253 = OpVariable Private 
                                             %254 = OpTypeImage %6 Dim2D 0 0 0 1 Unknown 
                                             %255 = OpTypePointer UniformConstant %254 
        UniformConstant read_only Texture2D* %256 = OpVariable UniformConstant 
                                             %258 = OpTypeSampler 
                                             %259 = OpTypePointer UniformConstant %258 
                    UniformConstant sampler* %260 = OpVariable UniformConstant 
                                             %262 = OpTypeSampledImage %254 
                                             %264 = OpTypePointer Input %85 
                        Input f32_2* vs_TEXCOORD0 = OpVariable Input 
                                         i32 %270 = OpConstant 4 
                                             %286 = OpTypePointer Output %14 
                               Output f32_4* %287 = OpVariable Output 
                                         u32 %291 = OpConstant 3 
                                             %292 = OpTypePointer Output %6 
                                          void %4 = OpFunction None %3 
                                               %5 = OpLabel 
                                        f32_3 %12 = OpLoad vs_TEXCOORD2 
                                        f32_3 %13 = OpFNegate %12 
                               Uniform f32_3* %21 = OpAccessChain %17 %19 
                                        f32_3 %22 = OpLoad %21 
                                        f32_3 %23 = OpFAdd %13 %22 
                                                      OpStore %9 %23 
                                        f32_3 %26 = OpLoad %9 
                                        f32_3 %27 = OpLoad %9 
                                          f32 %28 = OpDot %26 %27 
                                                      OpStore %25 %28 
                                          f32 %29 = OpLoad %25 
                                          f32 %30 = OpExtInst %1 32 %29 
                                                      OpStore %25 %30 
                                        f32_3 %33 = OpLoad %9 
                                          f32 %34 = OpLoad %25 
                                        f32_3 %35 = OpCompositeConstruct %34 %34 %34 
                                        f32_3 %36 = OpFMul %33 %35 
                               Uniform f32_4* %39 = OpAccessChain %17 %37 
                                        f32_4 %40 = OpLoad %39 
                                        f32_3 %41 = OpVectorShuffle %40 %40 0 1 2 
                                        f32_3 %42 = OpFAdd %36 %41 
                                        f32_4 %43 = OpLoad %32 
                                        f32_4 %44 = OpVectorShuffle %43 %42 4 5 6 3 
                                                      OpStore %32 %44 
                                        f32_4 %46 = OpLoad %32 
                                        f32_3 %47 = OpVectorShuffle %46 %46 0 1 2 
                                        f32_4 %48 = OpLoad %32 
                                        f32_3 %49 = OpVectorShuffle %48 %48 0 1 2 
                                          f32 %50 = OpDot %47 %49 
                                                      OpStore %45 %50 
                                          f32 %51 = OpLoad %45 
                                          f32 %52 = OpExtInst %1 32 %51 
                                                      OpStore %45 %52 
                                          f32 %53 = OpLoad %45 
                                        f32_3 %54 = OpCompositeConstruct %53 %53 %53 
                                        f32_4 %55 = OpLoad %32 
                                        f32_3 %56 = OpVectorShuffle %55 %55 0 1 2 
                                        f32_3 %57 = OpFMul %54 %56 
                                        f32_4 %58 = OpLoad %32 
                                        f32_4 %59 = OpVectorShuffle %58 %57 4 5 6 3 
                                                      OpStore %32 %59 
                                        f32_3 %61 = OpLoad vs_TEXCOORD1 
                                        f32_3 %62 = OpLoad vs_TEXCOORD1 
                                          f32 %63 = OpDot %61 %62 
                                                      OpStore %45 %63 
                                          f32 %64 = OpLoad %45 
                                          f32 %65 = OpExtInst %1 32 %64 
                                                      OpStore %45 %65 
                                          f32 %67 = OpLoad %45 
                                        f32_3 %68 = OpCompositeConstruct %67 %67 %67 
                                        f32_3 %69 = OpLoad vs_TEXCOORD1 
                                        f32_3 %70 = OpFMul %68 %69 
                                                      OpStore %66 %70 
                                        f32_3 %71 = OpLoad %66 
                                        f32_4 %72 = OpLoad %32 
                                        f32_3 %73 = OpVectorShuffle %72 %72 0 1 2 
                                          f32 %74 = OpDot %71 %73 
                                 Private f32* %77 = OpAccessChain %32 %76 
                                                      OpStore %77 %74 
                                        f32_3 %78 = OpLoad %66 
                               Uniform f32_4* %79 = OpAccessChain %17 %37 
                                        f32_4 %80 = OpLoad %79 
                                        f32_3 %81 = OpVectorShuffle %80 %80 0 1 2 
                                          f32 %82 = OpDot %78 %81 
                                 Private f32* %84 = OpAccessChain %32 %83 
                                                      OpStore %84 %82 
                                        f32_4 %86 = OpLoad %32 
                                        f32_2 %87 = OpVectorShuffle %86 %86 0 1 
                                        f32_2 %90 = OpExtInst %1 40 %87 %89 
                                        f32_4 %91 = OpLoad %32 
                                        f32_4 %92 = OpVectorShuffle %91 %90 4 5 2 3 
                                                      OpStore %32 %92 
                                 Private f32* %93 = OpAccessChain %32 %76 
                                          f32 %94 = OpLoad %93 
                                          f32 %95 = OpExtInst %1 30 %94 
                                 Private f32* %96 = OpAccessChain %9 %76 
                                                      OpStore %96 %95 
                                 Uniform f32* %99 = OpAccessChain %17 %97 
                                         f32 %100 = OpLoad %99 
                                         f32 %102 = OpFMul %100 %101 
                                Private f32* %103 = OpAccessChain %32 %76 
                                                      OpStore %103 %102 
                                Private f32* %104 = OpAccessChain %9 %76 
                                         f32 %105 = OpLoad %104 
                                Private f32* %106 = OpAccessChain %32 %76 
                                         f32 %107 = OpLoad %106 
                                         f32 %108 = OpFMul %105 %107 
                                Private f32* %109 = OpAccessChain %9 %76 
                                                      OpStore %109 %108 
                                Private f32* %110 = OpAccessChain %9 %76 
                                         f32 %111 = OpLoad %110 
                                         f32 %112 = OpExtInst %1 29 %111 
                                Private f32* %113 = OpAccessChain %9 %76 
                                                      OpStore %113 %112 
                                Uniform f32* %115 = OpAccessChain %17 %114 
                                         f32 %116 = OpLoad %115 
                                         f32 %117 = OpFNegate %116 
                                         f32 %119 = OpFMul %117 %118 
                                         f32 %120 = OpFAdd %119 %118 
                                Private f32* %121 = OpAccessChain %32 %76 
                                                      OpStore %121 %120 
                                Private f32* %122 = OpAccessChain %9 %76 
                                         f32 %123 = OpLoad %122 
                                         f32 %125 = OpFMul %123 %124 
                                Private f32* %126 = OpAccessChain %32 %76 
                                         f32 %127 = OpLoad %126 
                                         f32 %128 = OpFNegate %127 
                                         f32 %129 = OpFAdd %125 %128 
                                Private f32* %130 = OpAccessChain %9 %76 
                                                      OpStore %130 %129 
                                Uniform f32* %132 = OpAccessChain %17 %114 
                                         f32 %133 = OpLoad %132 
                                         f32 %134 = OpFMul %133 %118 
                                         f32 %135 = OpFAdd %134 %118 
                                                      OpStore %131 %135 
                                Private f32* %137 = OpAccessChain %32 %76 
                                         f32 %138 = OpLoad %137 
                                         f32 %139 = OpFNegate %138 
                                         f32 %140 = OpLoad %131 
                                         f32 %141 = OpFAdd %139 %140 
                                                      OpStore %136 %141 
                                         f32 %143 = OpLoad %136 
                                         f32 %144 = OpFDiv %142 %143 
                                                      OpStore %136 %144 
                                         f32 %145 = OpLoad %136 
                                Private f32* %146 = OpAccessChain %9 %76 
                                         f32 %147 = OpLoad %146 
                                         f32 %148 = OpFMul %145 %147 
                                Private f32* %149 = OpAccessChain %9 %76 
                                                      OpStore %149 %148 
                                Private f32* %150 = OpAccessChain %9 %76 
                                         f32 %151 = OpLoad %150 
                                         f32 %152 = OpExtInst %1 43 %151 %88 %142 
                                Private f32* %153 = OpAccessChain %9 %76 
                                                      OpStore %153 %152 
                                Private f32* %154 = OpAccessChain %9 %76 
                                         f32 %155 = OpLoad %154 
                                         f32 %157 = OpFMul %155 %156 
                                         f32 %159 = OpFAdd %157 %158 
                                                      OpStore %136 %159 
                                Private f32* %160 = OpAccessChain %9 %76 
                                         f32 %161 = OpLoad %160 
                                Private f32* %162 = OpAccessChain %9 %76 
                                         f32 %163 = OpLoad %162 
                                         f32 %164 = OpFMul %161 %163 
                                Private f32* %165 = OpAccessChain %9 %76 
                                                      OpStore %165 %164 
                                Private f32* %166 = OpAccessChain %9 %76 
                                         f32 %167 = OpLoad %166 
                                         f32 %168 = OpLoad %136 
                                         f32 %169 = OpFMul %167 %168 
                                Private f32* %170 = OpAccessChain %9 %76 
                                                      OpStore %170 %169 
                              Uniform f32_4* %172 = OpAccessChain %17 %171 
                                       f32_4 %173 = OpLoad %172 
                                       f32_3 %174 = OpVectorShuffle %173 %173 0 1 2 
                              Uniform f32_4* %176 = OpAccessChain %17 %175 
                                       f32_4 %177 = OpLoad %176 
                                       f32_3 %178 = OpVectorShuffle %177 %177 0 1 2 
                                       f32_3 %179 = OpFMul %174 %178 
                                       f32_4 %180 = OpLoad %32 
                                       f32_4 %181 = OpVectorShuffle %180 %179 4 1 5 6 
                                                      OpStore %32 %181 
                                       f32_3 %182 = OpLoad %9 
                                       f32_3 %183 = OpVectorShuffle %182 %182 0 0 0 
                                       f32_4 %184 = OpLoad %32 
                                       f32_3 %185 = OpVectorShuffle %184 %184 0 2 3 
                                       f32_3 %186 = OpFMul %183 %185 
                                                      OpStore %9 %186 
                                Uniform f32* %188 = OpAccessChain %17 %187 
                                         f32 %189 = OpLoad %188 
                                         f32 %190 = OpFNegate %189 
                                         f32 %191 = OpFMul %190 %118 
                                Uniform f32* %193 = OpAccessChain %17 %192 
                                         f32 %194 = OpLoad %193 
                                         f32 %195 = OpFAdd %191 %194 
                                Private f32* %196 = OpAccessChain %32 %76 
                                                      OpStore %196 %195 
                                Private f32* %198 = OpAccessChain %32 %76 
                                         f32 %199 = OpLoad %198 
                                         f32 %200 = OpFNegate %199 
                                Private f32* %201 = OpAccessChain %32 %83 
                                         f32 %202 = OpLoad %201 
                                         f32 %203 = OpFAdd %200 %202 
                                                      OpStore %197 %203 
                                Uniform f32* %204 = OpAccessChain %17 %187 
                                         f32 %205 = OpLoad %204 
                                         f32 %206 = OpFMul %205 %118 
                                Uniform f32* %207 = OpAccessChain %17 %192 
                                         f32 %208 = OpLoad %207 
                                         f32 %209 = OpFAdd %206 %208 
                                                      OpStore %131 %209 
                                Private f32* %210 = OpAccessChain %32 %76 
                                         f32 %211 = OpLoad %210 
                                         f32 %212 = OpFNegate %211 
                                         f32 %213 = OpLoad %131 
                                         f32 %214 = OpFAdd %212 %213 
                                Private f32* %215 = OpAccessChain %32 %76 
                                                      OpStore %215 %214 
                                Private f32* %216 = OpAccessChain %32 %76 
                                         f32 %217 = OpLoad %216 
                                         f32 %218 = OpFDiv %142 %217 
                                Private f32* %219 = OpAccessChain %32 %76 
                                                      OpStore %219 %218 
                                Private f32* %220 = OpAccessChain %32 %76 
                                         f32 %221 = OpLoad %220 
                                         f32 %222 = OpLoad %197 
                                         f32 %223 = OpFMul %221 %222 
                                Private f32* %224 = OpAccessChain %32 %76 
                                                      OpStore %224 %223 
                                Private f32* %225 = OpAccessChain %32 %76 
                                         f32 %226 = OpLoad %225 
                                         f32 %227 = OpExtInst %1 43 %226 %88 %142 
                                Private f32* %228 = OpAccessChain %32 %76 
                                                      OpStore %228 %227 
                                Private f32* %229 = OpAccessChain %32 %76 
                                         f32 %230 = OpLoad %229 
                                         f32 %231 = OpFMul %230 %156 
                                         f32 %232 = OpFAdd %231 %158 
                                                      OpStore %197 %232 
                                Private f32* %233 = OpAccessChain %32 %76 
                                         f32 %234 = OpLoad %233 
                                Private f32* %235 = OpAccessChain %32 %76 
                                         f32 %236 = OpLoad %235 
                                         f32 %237 = OpFMul %234 %236 
                                Private f32* %238 = OpAccessChain %32 %76 
                                                      OpStore %238 %237 
                                Private f32* %239 = OpAccessChain %32 %76 
                                         f32 %240 = OpLoad %239 
                                         f32 %241 = OpLoad %197 
                                         f32 %242 = OpFMul %240 %241 
                                Private f32* %243 = OpAccessChain %32 %76 
                                                      OpStore %243 %242 
                                       f32_4 %244 = OpLoad %32 
                                       f32_3 %245 = OpVectorShuffle %244 %244 0 0 0 
                              Uniform f32_4* %247 = OpAccessChain %17 %246 
                                       f32_4 %248 = OpLoad %247 
                                       f32_3 %249 = OpVectorShuffle %248 %248 0 1 2 
                                       f32_3 %250 = OpFMul %245 %249 
                                       f32_4 %251 = OpLoad %32 
                                       f32_4 %252 = OpVectorShuffle %251 %250 4 5 6 3 
                                                      OpStore %32 %252 
                         read_only Texture2D %257 = OpLoad %256 
                                     sampler %261 = OpLoad %260 
                  read_only Texture2DSampled %263 = OpSampledImage %257 %261 
                                       f32_2 %266 = OpLoad vs_TEXCOORD0 
                                       f32_4 %267 = OpImageSampleImplicitLod %263 %266 
                                       f32_3 %268 = OpVectorShuffle %267 %267 0 1 2 
                                                      OpStore %253 %268 
                                       f32_3 %269 = OpLoad %253 
                              Uniform f32_4* %271 = OpAccessChain %17 %270 
                                       f32_4 %272 = OpLoad %271 
                                       f32_3 %273 = OpVectorShuffle %272 %272 0 1 2 
                                       f32_3 %274 = OpFMul %269 %273 
                                                      OpStore %66 %274 
                                       f32_3 %275 = OpLoad %66 
                              Uniform f32_4* %276 = OpAccessChain %17 %171 
                                       f32_4 %277 = OpLoad %276 
                                       f32_3 %278 = OpVectorShuffle %277 %277 0 1 2 
                                       f32_3 %279 = OpFMul %275 %278 
                                                      OpStore %66 %279 
                                       f32_3 %280 = OpLoad %66 
                                       f32_4 %281 = OpLoad %32 
                                       f32_3 %282 = OpVectorShuffle %281 %281 0 1 2 
                                       f32_3 %283 = OpFMul %280 %282 
                                       f32_3 %284 = OpLoad %9 
                                       f32_3 %285 = OpFAdd %283 %284 
                                                      OpStore %9 %285 
                                       f32_3 %288 = OpLoad %9 
                                       f32_4 %289 = OpLoad %287 
                                       f32_4 %290 = OpVectorShuffle %289 %288 4 5 6 3 
                                                      OpStore %287 %290 
                                 Output f32* %293 = OpAccessChain %287 %291 
                                                      OpStore %293 %142 
                                                      OpReturn
                                                      OpFunctionEnd
"
}
SubProgram "vulkan hw_tier01 " {
Keywords { "DIRECTIONAL" }
"; SPIR-V
; Version: 1.0
; Generator: Khronos Glslang Reference Front End; 6
; Bound: 159
; Schema: 0
                                                      OpCapability Shader 
                                               %1 = OpExtInstImport "GLSL.std.450" 
                                                      OpMemoryModel Logical GLSL450 
                                                      OpEntryPoint Vertex %4 "main" %11 %52 %85 %95 %110 %114 %144 %150 
                                                      OpName vs_TEXCOORD2 "vs_TEXCOORD2" 
                                                      OpName vs_TEXCOORD0 "vs_TEXCOORD0" 
                                                      OpName vs_TEXCOORD1 "vs_TEXCOORD1" 
                                                      OpName vs_TEXCOORD4 "vs_TEXCOORD4" 
                                                      OpDecorate %11 Location 11 
                                                      OpDecorate %16 ArrayStride 16 
                                                      OpDecorate %17 ArrayStride 17 
                                                      OpDecorate %18 ArrayStride 18 
                                                      OpMemberDecorate %19 0 Offset 19 
                                                      OpMemberDecorate %19 1 Offset 19 
                                                      OpMemberDecorate %19 2 Offset 19 
                                                      OpMemberDecorate %19 3 Offset 19 
                                                      OpDecorate %19 Block 
                                                      OpDecorate %21 DescriptorSet 21 
                                                      OpDecorate %21 Binding 21 
                                                      OpDecorate vs_TEXCOORD2 Location 52 
                                                      OpMemberDecorate %83 0 BuiltIn 83 
                                                      OpMemberDecorate %83 1 BuiltIn 83 
                                                      OpMemberDecorate %83 2 BuiltIn 83 
                                                      OpDecorate %83 Block 
                                                      OpDecorate %95 Location 95 
                                                      OpDecorate vs_TEXCOORD0 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD0 Location 110 
                                                      OpDecorate %114 Location 114 
                                                      OpDecorate vs_TEXCOORD1 Location 144 
                                                      OpDecorate vs_TEXCOORD4 Location 150 
                                               %2 = OpTypeVoid 
                                               %3 = OpTypeFunction %2 
                                               %6 = OpTypeFloat 32 
                                               %7 = OpTypeVector %6 4 
                                               %8 = OpTypePointer Private %7 
                                Private f32_4* %9 = OpVariable Private 
                                              %10 = OpTypePointer Input %7 
                                 Input f32_4* %11 = OpVariable Input 
                                              %14 = OpTypeInt 32 0 
                                          u32 %15 = OpConstant 4 
                                              %16 = OpTypeArray %7 %15 
                                              %17 = OpTypeArray %7 %15 
                                              %18 = OpTypeArray %7 %15 
                                              %19 = OpTypeStruct %16 %17 %18 %7 
                                              %20 = OpTypePointer Uniform %19 
Uniform struct {f32_4[4]; f32_4[4]; f32_4[4]; f32_4;}* %21 = OpVariable Uniform 
                                              %22 = OpTypeInt 32 1 
                                          i32 %23 = OpConstant 0 
                                          i32 %24 = OpConstant 1 
                                              %25 = OpTypePointer Uniform %7 
                                          i32 %36 = OpConstant 2 
                               Private f32_4* %44 = OpVariable Private 
                                          i32 %46 = OpConstant 3 
                                              %50 = OpTypeVector %6 3 
                                              %51 = OpTypePointer Output %50 
                       Output f32_3* vs_TEXCOORD2 = OpVariable Output 
                                          u32 %81 = OpConstant 1 
                                              %82 = OpTypeArray %6 %81 
                                              %83 = OpTypeStruct %7 %6 %82 
                                              %84 = OpTypePointer Output %83 
         Output struct {f32_4; f32; f32[1];}* %85 = OpVariable Output 
                                              %93 = OpTypePointer Output %7 
                                 Input f32_4* %95 = OpVariable Input 
                                              %96 = OpTypeVector %6 2 
                                             %109 = OpTypePointer Output %96 
                       Output f32_2* vs_TEXCOORD0 = OpVariable Output 
                                             %113 = OpTypePointer Input %50 
                                Input f32_3* %114 = OpVariable Input 
                                         u32 %120 = OpConstant 0 
                                             %121 = OpTypePointer Private %6 
                                         u32 %134 = OpConstant 2 
                                Private f32* %136 = OpVariable Private 
                       Output f32_3* vs_TEXCOORD1 = OpVariable Output 
                       Output f32_4* vs_TEXCOORD4 = OpVariable Output 
                                         f32 %151 = OpConstant 3.674022E-40 
                                       f32_4 %152 = OpConstantComposite %151 %151 %151 %151 
                                             %153 = OpTypePointer Output %6 
                                          void %4 = OpFunction None %3 
                                               %5 = OpLabel 
                                        f32_4 %12 = OpLoad %11 
                                        f32_4 %13 = OpVectorShuffle %12 %12 1 1 1 1 
                               Uniform f32_4* %26 = OpAccessChain %21 %23 %24 
                                        f32_4 %27 = OpLoad %26 
                                        f32_4 %28 = OpFMul %13 %27 
                                                      OpStore %9 %28 
                               Uniform f32_4* %29 = OpAccessChain %21 %23 %23 
                                        f32_4 %30 = OpLoad %29 
                                        f32_4 %31 = OpLoad %11 
                                        f32_4 %32 = OpVectorShuffle %31 %31 0 0 0 0 
                                        f32_4 %33 = OpFMul %30 %32 
                                        f32_4 %34 = OpLoad %9 
                                        f32_4 %35 = OpFAdd %33 %34 
                                                      OpStore %9 %35 
                               Uniform f32_4* %37 = OpAccessChain %21 %23 %36 
                                        f32_4 %38 = OpLoad %37 
                                        f32_4 %39 = OpLoad %11 
                                        f32_4 %40 = OpVectorShuffle %39 %39 2 2 2 2 
                                        f32_4 %41 = OpFMul %38 %40 
                                        f32_4 %42 = OpLoad %9 
                                        f32_4 %43 = OpFAdd %41 %42 
                                                      OpStore %9 %43 
                                        f32_4 %45 = OpLoad %9 
                               Uniform f32_4* %47 = OpAccessChain %21 %23 %46 
                                        f32_4 %48 = OpLoad %47 
                                        f32_4 %49 = OpFAdd %45 %48 
                                                      OpStore %44 %49 
                               Uniform f32_4* %53 = OpAccessChain %21 %23 %46 
                                        f32_4 %54 = OpLoad %53 
                                        f32_3 %55 = OpVectorShuffle %54 %54 0 1 2 
                                        f32_4 %56 = OpLoad %11 
                                        f32_3 %57 = OpVectorShuffle %56 %56 3 3 3 
                                        f32_3 %58 = OpFMul %55 %57 
                                        f32_4 %59 = OpLoad %9 
                                        f32_3 %60 = OpVectorShuffle %59 %59 0 1 2 
                                        f32_3 %61 = OpFAdd %58 %60 
                                                      OpStore vs_TEXCOORD2 %61 
                                        f32_4 %62 = OpLoad %44 
                                        f32_4 %63 = OpVectorShuffle %62 %62 1 1 1 1 
                               Uniform f32_4* %64 = OpAccessChain %21 %36 %24 
                                        f32_4 %65 = OpLoad %64 
                                        f32_4 %66 = OpFMul %63 %65 
                                                      OpStore %9 %66 
                               Uniform f32_4* %67 = OpAccessChain %21 %36 %23 
                                        f32_4 %68 = OpLoad %67 
                                        f32_4 %69 = OpLoad %44 
                                        f32_4 %70 = OpVectorShuffle %69 %69 0 0 0 0 
                                        f32_4 %71 = OpFMul %68 %70 
                                        f32_4 %72 = OpLoad %9 
                                        f32_4 %73 = OpFAdd %71 %72 
                                                      OpStore %9 %73 
                               Uniform f32_4* %74 = OpAccessChain %21 %36 %36 
                                        f32_4 %75 = OpLoad %74 
                                        f32_4 %76 = OpLoad %44 
                                        f32_4 %77 = OpVectorShuffle %76 %76 2 2 2 2 
                                        f32_4 %78 = OpFMul %75 %77 
                                        f32_4 %79 = OpLoad %9 
                                        f32_4 %80 = OpFAdd %78 %79 
                                                      OpStore %9 %80 
                               Uniform f32_4* %86 = OpAccessChain %21 %36 %46 
                                        f32_4 %87 = OpLoad %86 
                                        f32_4 %88 = OpLoad %44 
                                        f32_4 %89 = OpVectorShuffle %88 %88 3 3 3 3 
                                        f32_4 %90 = OpFMul %87 %89 
                                        f32_4 %91 = OpLoad %9 
                                        f32_4 %92 = OpFAdd %90 %91 
                                Output f32_4* %94 = OpAccessChain %85 %23 
                                                      OpStore %94 %92 
                                        f32_4 %97 = OpLoad %95 
                                        f32_2 %98 = OpVectorShuffle %97 %97 0 1 
                               Uniform f32_4* %99 = OpAccessChain %21 %46 
                                       f32_4 %100 = OpLoad %99 
                                       f32_2 %101 = OpVectorShuffle %100 %100 0 1 
                                       f32_2 %102 = OpFMul %98 %101 
                              Uniform f32_4* %103 = OpAccessChain %21 %46 
                                       f32_4 %104 = OpLoad %103 
                                       f32_2 %105 = OpVectorShuffle %104 %104 2 3 
                                       f32_2 %106 = OpFAdd %102 %105 
                                       f32_4 %107 = OpLoad %9 
                                       f32_4 %108 = OpVectorShuffle %107 %106 4 5 2 3 
                                                      OpStore %9 %108 
                                       f32_4 %111 = OpLoad %9 
                                       f32_2 %112 = OpVectorShuffle %111 %111 0 1 
                                                      OpStore vs_TEXCOORD0 %112 
                                       f32_3 %115 = OpLoad %114 
                              Uniform f32_4* %116 = OpAccessChain %21 %24 %23 
                                       f32_4 %117 = OpLoad %116 
                                       f32_3 %118 = OpVectorShuffle %117 %117 0 1 2 
                                         f32 %119 = OpDot %115 %118 
                                Private f32* %122 = OpAccessChain %9 %120 
                                                      OpStore %122 %119 
                                       f32_3 %123 = OpLoad %114 
                              Uniform f32_4* %124 = OpAccessChain %21 %24 %24 
                                       f32_4 %125 = OpLoad %124 
                                       f32_3 %126 = OpVectorShuffle %125 %125 0 1 2 
                                         f32 %127 = OpDot %123 %126 
                                Private f32* %128 = OpAccessChain %9 %81 
                                                      OpStore %128 %127 
                                       f32_3 %129 = OpLoad %114 
                              Uniform f32_4* %130 = OpAccessChain %21 %24 %36 
                                       f32_4 %131 = OpLoad %130 
                                       f32_3 %132 = OpVectorShuffle %131 %131 0 1 2 
                                         f32 %133 = OpDot %129 %132 
                                Private f32* %135 = OpAccessChain %9 %134 
                                                      OpStore %135 %133 
                                       f32_4 %137 = OpLoad %9 
                                       f32_3 %138 = OpVectorShuffle %137 %137 0 1 2 
                                       f32_4 %139 = OpLoad %9 
                                       f32_3 %140 = OpVectorShuffle %139 %139 0 1 2 
                                         f32 %141 = OpDot %138 %140 
                                                      OpStore %136 %141 
                                         f32 %142 = OpLoad %136 
                                         f32 %143 = OpExtInst %1 32 %142 
                                                      OpStore %136 %143 
                                         f32 %145 = OpLoad %136 
                                       f32_3 %146 = OpCompositeConstruct %145 %145 %145 
                                       f32_4 %147 = OpLoad %9 
                                       f32_3 %148 = OpVectorShuffle %147 %147 0 1 2 
                                       f32_3 %149 = OpFMul %146 %148 
                                                      OpStore vs_TEXCOORD1 %149 
                                                      OpStore vs_TEXCOORD4 %152 
                                 Output f32* %154 = OpAccessChain %85 %23 %81 
                                         f32 %155 = OpLoad %154 
                                         f32 %156 = OpFNegate %155 
                                 Output f32* %157 = OpAccessChain %85 %23 %81 
                                                      OpStore %157 %156 
                                                      OpReturn
                                                      OpFunctionEnd
; SPIR-V
; Version: 1.0
; Generator: Khronos Glslang Reference Front End; 6
; Bound: 295
; Schema: 0
                                                      OpCapability Shader 
                                               %1 = OpExtInstImport "GLSL.std.450" 
                                                      OpMemoryModel Logical GLSL450 
                                                      OpEntryPoint Fragment %4 "main" %11 %60 %265 %287 
                                                      OpExecutionMode %4 OriginUpperLeft 
                                                      OpName vs_TEXCOORD2 "vs_TEXCOORD2" 
                                                      OpName vs_TEXCOORD1 "vs_TEXCOORD1" 
                                                      OpName vs_TEXCOORD0 "vs_TEXCOORD0" 
                                                      OpDecorate vs_TEXCOORD2 Location 11 
                                                      OpMemberDecorate %15 0 Offset 15 
                                                      OpMemberDecorate %15 1 RelaxedPrecision 
                                                      OpMemberDecorate %15 1 Offset 15 
                                                      OpMemberDecorate %15 2 RelaxedPrecision 
                                                      OpMemberDecorate %15 2 Offset 15 
                                                      OpMemberDecorate %15 3 RelaxedPrecision 
                                                      OpMemberDecorate %15 3 Offset 15 
                                                      OpMemberDecorate %15 4 RelaxedPrecision 
                                                      OpMemberDecorate %15 4 Offset 15 
                                                      OpMemberDecorate %15 5 RelaxedPrecision 
                                                      OpMemberDecorate %15 5 Offset 15 
                                                      OpMemberDecorate %15 6 RelaxedPrecision 
                                                      OpMemberDecorate %15 6 Offset 15 
                                                      OpMemberDecorate %15 7 RelaxedPrecision 
                                                      OpMemberDecorate %15 7 Offset 15 
                                                      OpMemberDecorate %15 8 RelaxedPrecision 
                                                      OpMemberDecorate %15 8 Offset 15 
                                                      OpMemberDecorate %15 9 RelaxedPrecision 
                                                      OpMemberDecorate %15 9 Offset 15 
                                                      OpDecorate %15 Block 
                                                      OpDecorate %17 DescriptorSet 17 
                                                      OpDecorate %17 Binding 17 
                                                      OpDecorate %32 RelaxedPrecision 
                                                      OpDecorate %40 RelaxedPrecision 
                                                      OpDecorate %41 RelaxedPrecision 
                                                      OpDecorate %45 RelaxedPrecision 
                                                      OpDecorate %46 RelaxedPrecision 
                                                      OpDecorate %47 RelaxedPrecision 
                                                      OpDecorate %48 RelaxedPrecision 
                                                      OpDecorate %49 RelaxedPrecision 
                                                      OpDecorate %50 RelaxedPrecision 
                                                      OpDecorate %51 RelaxedPrecision 
                                                      OpDecorate %52 RelaxedPrecision 
                                                      OpDecorate %53 RelaxedPrecision 
                                                      OpDecorate %54 RelaxedPrecision 
                                                      OpDecorate %55 RelaxedPrecision 
                                                      OpDecorate %56 RelaxedPrecision 
                                                      OpDecorate %57 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD1 Location 60 
                                                      OpDecorate %64 RelaxedPrecision 
                                                      OpDecorate %65 RelaxedPrecision 
                                                      OpDecorate %66 RelaxedPrecision 
                                                      OpDecorate %67 RelaxedPrecision 
                                                      OpDecorate %71 RelaxedPrecision 
                                                      OpDecorate %72 RelaxedPrecision 
                                                      OpDecorate %73 RelaxedPrecision 
                                                      OpDecorate %74 RelaxedPrecision 
                                                      OpDecorate %78 RelaxedPrecision 
                                                      OpDecorate %80 RelaxedPrecision 
                                                      OpDecorate %81 RelaxedPrecision 
                                                      OpDecorate %82 RelaxedPrecision 
                                                      OpDecorate %86 RelaxedPrecision 
                                                      OpDecorate %87 RelaxedPrecision 
                                                      OpDecorate %90 RelaxedPrecision 
                                                      OpDecorate %94 RelaxedPrecision 
                                                      OpDecorate %95 RelaxedPrecision 
                                                      OpDecorate %100 RelaxedPrecision 
                                                      OpDecorate %102 RelaxedPrecision 
                                                      OpDecorate %107 RelaxedPrecision 
                                                      OpDecorate %116 RelaxedPrecision 
                                                      OpDecorate %117 RelaxedPrecision 
                                                      OpDecorate %119 RelaxedPrecision 
                                                      OpDecorate %120 RelaxedPrecision 
                                                      OpDecorate %127 RelaxedPrecision 
                                                      OpDecorate %128 RelaxedPrecision 
                                                      OpDecorate %131 RelaxedPrecision 
                                                      OpDecorate %133 RelaxedPrecision 
                                                      OpDecorate %134 RelaxedPrecision 
                                                      OpDecorate %135 RelaxedPrecision 
                                                      OpDecorate %138 RelaxedPrecision 
                                                      OpDecorate %139 RelaxedPrecision 
                                                      OpDecorate %140 RelaxedPrecision 
                                                      OpDecorate %141 RelaxedPrecision 
                                                      OpDecorate %173 RelaxedPrecision 
                                                      OpDecorate %174 RelaxedPrecision 
                                                      OpDecorate %177 RelaxedPrecision 
                                                      OpDecorate %178 RelaxedPrecision 
                                                      OpDecorate %179 RelaxedPrecision 
                                                      OpDecorate %184 RelaxedPrecision 
                                                      OpDecorate %185 RelaxedPrecision 
                                                      OpDecorate %189 RelaxedPrecision 
                                                      OpDecorate %190 RelaxedPrecision 
                                                      OpDecorate %191 RelaxedPrecision 
                                                      OpDecorate %194 RelaxedPrecision 
                                                      OpDecorate %195 RelaxedPrecision 
                                                      OpDecorate %197 RelaxedPrecision 
                                                      OpDecorate %199 RelaxedPrecision 
                                                      OpDecorate %200 RelaxedPrecision 
                                                      OpDecorate %202 RelaxedPrecision 
                                                      OpDecorate %203 RelaxedPrecision 
                                                      OpDecorate %205 RelaxedPrecision 
                                                      OpDecorate %206 RelaxedPrecision 
                                                      OpDecorate %208 RelaxedPrecision 
                                                      OpDecorate %209 RelaxedPrecision 
                                                      OpDecorate %211 RelaxedPrecision 
                                                      OpDecorate %212 RelaxedPrecision 
                                                      OpDecorate %213 RelaxedPrecision 
                                                      OpDecorate %214 RelaxedPrecision 
                                                      OpDecorate %217 RelaxedPrecision 
                                                      OpDecorate %218 RelaxedPrecision 
                                                      OpDecorate %221 RelaxedPrecision 
                                                      OpDecorate %222 RelaxedPrecision 
                                                      OpDecorate %223 RelaxedPrecision 
                                                      OpDecorate %226 RelaxedPrecision 
                                                      OpDecorate %227 RelaxedPrecision 
                                                      OpDecorate %230 RelaxedPrecision 
                                                      OpDecorate %231 RelaxedPrecision 
                                                      OpDecorate %232 RelaxedPrecision 
                                                      OpDecorate %234 RelaxedPrecision 
                                                      OpDecorate %236 RelaxedPrecision 
                                                      OpDecorate %237 RelaxedPrecision 
                                                      OpDecorate %240 RelaxedPrecision 
                                                      OpDecorate %241 RelaxedPrecision 
                                                      OpDecorate %242 RelaxedPrecision 
                                                      OpDecorate %244 RelaxedPrecision 
                                                      OpDecorate %245 RelaxedPrecision 
                                                      OpDecorate %248 RelaxedPrecision 
                                                      OpDecorate %249 RelaxedPrecision 
                                                      OpDecorate %250 RelaxedPrecision 
                                                      OpDecorate %253 RelaxedPrecision 
                                                      OpDecorate %256 RelaxedPrecision 
                                                      OpDecorate %256 DescriptorSet 256 
                                                      OpDecorate %256 Binding 256 
                                                      OpDecorate %257 RelaxedPrecision 
                                                      OpDecorate %260 RelaxedPrecision 
                                                      OpDecorate %260 DescriptorSet 260 
                                                      OpDecorate %260 Binding 260 
                                                      OpDecorate %261 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD0 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD0 Location 265 
                                                      OpDecorate %266 RelaxedPrecision 
                                                      OpDecorate %267 RelaxedPrecision 
                                                      OpDecorate %268 RelaxedPrecision 
                                                      OpDecorate %269 RelaxedPrecision 
                                                      OpDecorate %272 RelaxedPrecision 
                                                      OpDecorate %273 RelaxedPrecision 
                                                      OpDecorate %274 RelaxedPrecision 
                                                      OpDecorate %275 RelaxedPrecision 
                                                      OpDecorate %277 RelaxedPrecision 
                                                      OpDecorate %278 RelaxedPrecision 
                                                      OpDecorate %279 RelaxedPrecision 
                                                      OpDecorate %280 RelaxedPrecision 
                                                      OpDecorate %281 RelaxedPrecision 
                                                      OpDecorate %282 RelaxedPrecision 
                                                      OpDecorate %283 RelaxedPrecision 
                                                      OpDecorate %287 RelaxedPrecision 
                                                      OpDecorate %287 Location 287 
                                               %2 = OpTypeVoid 
                                               %3 = OpTypeFunction %2 
                                               %6 = OpTypeFloat 32 
                                               %7 = OpTypeVector %6 3 
                                               %8 = OpTypePointer Private %7 
                                Private f32_3* %9 = OpVariable Private 
                                              %10 = OpTypePointer Input %7 
                        Input f32_3* vs_TEXCOORD2 = OpVariable Input 
                                              %14 = OpTypeVector %6 4 
                                              %15 = OpTypeStruct %7 %14 %14 %14 %14 %6 %14 %6 %6 %6 
                                              %16 = OpTypePointer Uniform %15 
Uniform struct {f32_3; f32_4; f32_4; f32_4; f32_4; f32; f32_4; f32; f32; f32;}* %17 = OpVariable Uniform 
                                              %18 = OpTypeInt 32 1 
                                          i32 %19 = OpConstant 0 
                                              %20 = OpTypePointer Uniform %7 
                                              %24 = OpTypePointer Private %6 
                                 Private f32* %25 = OpVariable Private 
                                              %31 = OpTypePointer Private %14 
                               Private f32_4* %32 = OpVariable Private 
                                          i32 %37 = OpConstant 1 
                                              %38 = OpTypePointer Uniform %14 
                                 Private f32* %45 = OpVariable Private 
                        Input f32_3* vs_TEXCOORD1 = OpVariable Input 
                               Private f32_3* %66 = OpVariable Private 
                                              %75 = OpTypeInt 32 0 
                                          u32 %76 = OpConstant 0 
                                          u32 %83 = OpConstant 1 
                                              %85 = OpTypeVector %6 2 
                                          f32 %88 = OpConstant 3.674022E-40 
                                        f32_2 %89 = OpConstantComposite %88 %88 
                                          i32 %97 = OpConstant 5 
                                              %98 = OpTypePointer Uniform %6 
                                         f32 %101 = OpConstant 3.674022E-40 
                                         i32 %114 = OpConstant 9 
                                         f32 %118 = OpConstant 3.674022E-40 
                                         f32 %124 = OpConstant 3.674022E-40 
                                Private f32* %131 = OpVariable Private 
                                Private f32* %136 = OpVariable Private 
                                         f32 %142 = OpConstant 3.674022E-40 
                                         f32 %156 = OpConstant 3.674022E-40 
                                         f32 %158 = OpConstant 3.674022E-40 
                                         i32 %171 = OpConstant 2 
                                         i32 %175 = OpConstant 3 
                                         i32 %187 = OpConstant 8 
                                         i32 %192 = OpConstant 7 
                                Private f32* %197 = OpVariable Private 
                                         i32 %246 = OpConstant 6 
                              Private f32_3* %253 = OpVariable Private 
                                             %254 = OpTypeImage %6 Dim2D 0 0 0 1 Unknown 
                                             %255 = OpTypePointer UniformConstant %254 
        UniformConstant read_only Texture2D* %256 = OpVariable UniformConstant 
                                             %258 = OpTypeSampler 
                                             %259 = OpTypePointer UniformConstant %258 
                    UniformConstant sampler* %260 = OpVariable UniformConstant 
                                             %262 = OpTypeSampledImage %254 
                                             %264 = OpTypePointer Input %85 
                        Input f32_2* vs_TEXCOORD0 = OpVariable Input 
                                         i32 %270 = OpConstant 4 
                                             %286 = OpTypePointer Output %14 
                               Output f32_4* %287 = OpVariable Output 
                                         u32 %291 = OpConstant 3 
                                             %292 = OpTypePointer Output %6 
                                          void %4 = OpFunction None %3 
                                               %5 = OpLabel 
                                        f32_3 %12 = OpLoad vs_TEXCOORD2 
                                        f32_3 %13 = OpFNegate %12 
                               Uniform f32_3* %21 = OpAccessChain %17 %19 
                                        f32_3 %22 = OpLoad %21 
                                        f32_3 %23 = OpFAdd %13 %22 
                                                      OpStore %9 %23 
                                        f32_3 %26 = OpLoad %9 
                                        f32_3 %27 = OpLoad %9 
                                          f32 %28 = OpDot %26 %27 
                                                      OpStore %25 %28 
                                          f32 %29 = OpLoad %25 
                                          f32 %30 = OpExtInst %1 32 %29 
                                                      OpStore %25 %30 
                                        f32_3 %33 = OpLoad %9 
                                          f32 %34 = OpLoad %25 
                                        f32_3 %35 = OpCompositeConstruct %34 %34 %34 
                                        f32_3 %36 = OpFMul %33 %35 
                               Uniform f32_4* %39 = OpAccessChain %17 %37 
                                        f32_4 %40 = OpLoad %39 
                                        f32_3 %41 = OpVectorShuffle %40 %40 0 1 2 
                                        f32_3 %42 = OpFAdd %36 %41 
                                        f32_4 %43 = OpLoad %32 
                                        f32_4 %44 = OpVectorShuffle %43 %42 4 5 6 3 
                                                      OpStore %32 %44 
                                        f32_4 %46 = OpLoad %32 
                                        f32_3 %47 = OpVectorShuffle %46 %46 0 1 2 
                                        f32_4 %48 = OpLoad %32 
                                        f32_3 %49 = OpVectorShuffle %48 %48 0 1 2 
                                          f32 %50 = OpDot %47 %49 
                                                      OpStore %45 %50 
                                          f32 %51 = OpLoad %45 
                                          f32 %52 = OpExtInst %1 32 %51 
                                                      OpStore %45 %52 
                                          f32 %53 = OpLoad %45 
                                        f32_3 %54 = OpCompositeConstruct %53 %53 %53 
                                        f32_4 %55 = OpLoad %32 
                                        f32_3 %56 = OpVectorShuffle %55 %55 0 1 2 
                                        f32_3 %57 = OpFMul %54 %56 
                                        f32_4 %58 = OpLoad %32 
                                        f32_4 %59 = OpVectorShuffle %58 %57 4 5 6 3 
                                                      OpStore %32 %59 
                                        f32_3 %61 = OpLoad vs_TEXCOORD1 
                                        f32_3 %62 = OpLoad vs_TEXCOORD1 
                                          f32 %63 = OpDot %61 %62 
                                                      OpStore %45 %63 
                                          f32 %64 = OpLoad %45 
                                          f32 %65 = OpExtInst %1 32 %64 
                                                      OpStore %45 %65 
                                          f32 %67 = OpLoad %45 
                                        f32_3 %68 = OpCompositeConstruct %67 %67 %67 
                                        f32_3 %69 = OpLoad vs_TEXCOORD1 
                                        f32_3 %70 = OpFMul %68 %69 
                                                      OpStore %66 %70 
                                        f32_3 %71 = OpLoad %66 
                                        f32_4 %72 = OpLoad %32 
                                        f32_3 %73 = OpVectorShuffle %72 %72 0 1 2 
                                          f32 %74 = OpDot %71 %73 
                                 Private f32* %77 = OpAccessChain %32 %76 
                                                      OpStore %77 %74 
                                        f32_3 %78 = OpLoad %66 
                               Uniform f32_4* %79 = OpAccessChain %17 %37 
                                        f32_4 %80 = OpLoad %79 
                                        f32_3 %81 = OpVectorShuffle %80 %80 0 1 2 
                                          f32 %82 = OpDot %78 %81 
                                 Private f32* %84 = OpAccessChain %32 %83 
                                                      OpStore %84 %82 
                                        f32_4 %86 = OpLoad %32 
                                        f32_2 %87 = OpVectorShuffle %86 %86 0 1 
                                        f32_2 %90 = OpExtInst %1 40 %87 %89 
                                        f32_4 %91 = OpLoad %32 
                                        f32_4 %92 = OpVectorShuffle %91 %90 4 5 2 3 
                                                      OpStore %32 %92 
                                 Private f32* %93 = OpAccessChain %32 %76 
                                          f32 %94 = OpLoad %93 
                                          f32 %95 = OpExtInst %1 30 %94 
                                 Private f32* %96 = OpAccessChain %9 %76 
                                                      OpStore %96 %95 
                                 Uniform f32* %99 = OpAccessChain %17 %97 
                                         f32 %100 = OpLoad %99 
                                         f32 %102 = OpFMul %100 %101 
                                Private f32* %103 = OpAccessChain %32 %76 
                                                      OpStore %103 %102 
                                Private f32* %104 = OpAccessChain %9 %76 
                                         f32 %105 = OpLoad %104 
                                Private f32* %106 = OpAccessChain %32 %76 
                                         f32 %107 = OpLoad %106 
                                         f32 %108 = OpFMul %105 %107 
                                Private f32* %109 = OpAccessChain %9 %76 
                                                      OpStore %109 %108 
                                Private f32* %110 = OpAccessChain %9 %76 
                                         f32 %111 = OpLoad %110 
                                         f32 %112 = OpExtInst %1 29 %111 
                                Private f32* %113 = OpAccessChain %9 %76 
                                                      OpStore %113 %112 
                                Uniform f32* %115 = OpAccessChain %17 %114 
                                         f32 %116 = OpLoad %115 
                                         f32 %117 = OpFNegate %116 
                                         f32 %119 = OpFMul %117 %118 
                                         f32 %120 = OpFAdd %119 %118 
                                Private f32* %121 = OpAccessChain %32 %76 
                                                      OpStore %121 %120 
                                Private f32* %122 = OpAccessChain %9 %76 
                                         f32 %123 = OpLoad %122 
                                         f32 %125 = OpFMul %123 %124 
                                Private f32* %126 = OpAccessChain %32 %76 
                                         f32 %127 = OpLoad %126 
                                         f32 %128 = OpFNegate %127 
                                         f32 %129 = OpFAdd %125 %128 
                                Private f32* %130 = OpAccessChain %9 %76 
                                                      OpStore %130 %129 
                                Uniform f32* %132 = OpAccessChain %17 %114 
                                         f32 %133 = OpLoad %132 
                                         f32 %134 = OpFMul %133 %118 
                                         f32 %135 = OpFAdd %134 %118 
                                                      OpStore %131 %135 
                                Private f32* %137 = OpAccessChain %32 %76 
                                         f32 %138 = OpLoad %137 
                                         f32 %139 = OpFNegate %138 
                                         f32 %140 = OpLoad %131 
                                         f32 %141 = OpFAdd %139 %140 
                                                      OpStore %136 %141 
                                         f32 %143 = OpLoad %136 
                                         f32 %144 = OpFDiv %142 %143 
                                                      OpStore %136 %144 
                                         f32 %145 = OpLoad %136 
                                Private f32* %146 = OpAccessChain %9 %76 
                                         f32 %147 = OpLoad %146 
                                         f32 %148 = OpFMul %145 %147 
                                Private f32* %149 = OpAccessChain %9 %76 
                                                      OpStore %149 %148 
                                Private f32* %150 = OpAccessChain %9 %76 
                                         f32 %151 = OpLoad %150 
                                         f32 %152 = OpExtInst %1 43 %151 %88 %142 
                                Private f32* %153 = OpAccessChain %9 %76 
                                                      OpStore %153 %152 
                                Private f32* %154 = OpAccessChain %9 %76 
                                         f32 %155 = OpLoad %154 
                                         f32 %157 = OpFMul %155 %156 
                                         f32 %159 = OpFAdd %157 %158 
                                                      OpStore %136 %159 
                                Private f32* %160 = OpAccessChain %9 %76 
                                         f32 %161 = OpLoad %160 
                                Private f32* %162 = OpAccessChain %9 %76 
                                         f32 %163 = OpLoad %162 
                                         f32 %164 = OpFMul %161 %163 
                                Private f32* %165 = OpAccessChain %9 %76 
                                                      OpStore %165 %164 
                                Private f32* %166 = OpAccessChain %9 %76 
                                         f32 %167 = OpLoad %166 
                                         f32 %168 = OpLoad %136 
                                         f32 %169 = OpFMul %167 %168 
                                Private f32* %170 = OpAccessChain %9 %76 
                                                      OpStore %170 %169 
                              Uniform f32_4* %172 = OpAccessChain %17 %171 
                                       f32_4 %173 = OpLoad %172 
                                       f32_3 %174 = OpVectorShuffle %173 %173 0 1 2 
                              Uniform f32_4* %176 = OpAccessChain %17 %175 
                                       f32_4 %177 = OpLoad %176 
                                       f32_3 %178 = OpVectorShuffle %177 %177 0 1 2 
                                       f32_3 %179 = OpFMul %174 %178 
                                       f32_4 %180 = OpLoad %32 
                                       f32_4 %181 = OpVectorShuffle %180 %179 4 1 5 6 
                                                      OpStore %32 %181 
                                       f32_3 %182 = OpLoad %9 
                                       f32_3 %183 = OpVectorShuffle %182 %182 0 0 0 
                                       f32_4 %184 = OpLoad %32 
                                       f32_3 %185 = OpVectorShuffle %184 %184 0 2 3 
                                       f32_3 %186 = OpFMul %183 %185 
                                                      OpStore %9 %186 
                                Uniform f32* %188 = OpAccessChain %17 %187 
                                         f32 %189 = OpLoad %188 
                                         f32 %190 = OpFNegate %189 
                                         f32 %191 = OpFMul %190 %118 
                                Uniform f32* %193 = OpAccessChain %17 %192 
                                         f32 %194 = OpLoad %193 
                                         f32 %195 = OpFAdd %191 %194 
                                Private f32* %196 = OpAccessChain %32 %76 
                                                      OpStore %196 %195 
                                Private f32* %198 = OpAccessChain %32 %76 
                                         f32 %199 = OpLoad %198 
                                         f32 %200 = OpFNegate %199 
                                Private f32* %201 = OpAccessChain %32 %83 
                                         f32 %202 = OpLoad %201 
                                         f32 %203 = OpFAdd %200 %202 
                                                      OpStore %197 %203 
                                Uniform f32* %204 = OpAccessChain %17 %187 
                                         f32 %205 = OpLoad %204 
                                         f32 %206 = OpFMul %205 %118 
                                Uniform f32* %207 = OpAccessChain %17 %192 
                                         f32 %208 = OpLoad %207 
                                         f32 %209 = OpFAdd %206 %208 
                                                      OpStore %131 %209 
                                Private f32* %210 = OpAccessChain %32 %76 
                                         f32 %211 = OpLoad %210 
                                         f32 %212 = OpFNegate %211 
                                         f32 %213 = OpLoad %131 
                                         f32 %214 = OpFAdd %212 %213 
                                Private f32* %215 = OpAccessChain %32 %76 
                                                      OpStore %215 %214 
                                Private f32* %216 = OpAccessChain %32 %76 
                                         f32 %217 = OpLoad %216 
                                         f32 %218 = OpFDiv %142 %217 
                                Private f32* %219 = OpAccessChain %32 %76 
                                                      OpStore %219 %218 
                                Private f32* %220 = OpAccessChain %32 %76 
                                         f32 %221 = OpLoad %220 
                                         f32 %222 = OpLoad %197 
                                         f32 %223 = OpFMul %221 %222 
                                Private f32* %224 = OpAccessChain %32 %76 
                                                      OpStore %224 %223 
                                Private f32* %225 = OpAccessChain %32 %76 
                                         f32 %226 = OpLoad %225 
                                         f32 %227 = OpExtInst %1 43 %226 %88 %142 
                                Private f32* %228 = OpAccessChain %32 %76 
                                                      OpStore %228 %227 
                                Private f32* %229 = OpAccessChain %32 %76 
                                         f32 %230 = OpLoad %229 
                                         f32 %231 = OpFMul %230 %156 
                                         f32 %232 = OpFAdd %231 %158 
                                                      OpStore %197 %232 
                                Private f32* %233 = OpAccessChain %32 %76 
                                         f32 %234 = OpLoad %233 
                                Private f32* %235 = OpAccessChain %32 %76 
                                         f32 %236 = OpLoad %235 
                                         f32 %237 = OpFMul %234 %236 
                                Private f32* %238 = OpAccessChain %32 %76 
                                                      OpStore %238 %237 
                                Private f32* %239 = OpAccessChain %32 %76 
                                         f32 %240 = OpLoad %239 
                                         f32 %241 = OpLoad %197 
                                         f32 %242 = OpFMul %240 %241 
                                Private f32* %243 = OpAccessChain %32 %76 
                                                      OpStore %243 %242 
                                       f32_4 %244 = OpLoad %32 
                                       f32_3 %245 = OpVectorShuffle %244 %244 0 0 0 
                              Uniform f32_4* %247 = OpAccessChain %17 %246 
                                       f32_4 %248 = OpLoad %247 
                                       f32_3 %249 = OpVectorShuffle %248 %248 0 1 2 
                                       f32_3 %250 = OpFMul %245 %249 
                                       f32_4 %251 = OpLoad %32 
                                       f32_4 %252 = OpVectorShuffle %251 %250 4 5 6 3 
                                                      OpStore %32 %252 
                         read_only Texture2D %257 = OpLoad %256 
                                     sampler %261 = OpLoad %260 
                  read_only Texture2DSampled %263 = OpSampledImage %257 %261 
                                       f32_2 %266 = OpLoad vs_TEXCOORD0 
                                       f32_4 %267 = OpImageSampleImplicitLod %263 %266 
                                       f32_3 %268 = OpVectorShuffle %267 %267 0 1 2 
                                                      OpStore %253 %268 
                                       f32_3 %269 = OpLoad %253 
                              Uniform f32_4* %271 = OpAccessChain %17 %270 
                                       f32_4 %272 = OpLoad %271 
                                       f32_3 %273 = OpVectorShuffle %272 %272 0 1 2 
                                       f32_3 %274 = OpFMul %269 %273 
                                                      OpStore %66 %274 
                                       f32_3 %275 = OpLoad %66 
                              Uniform f32_4* %276 = OpAccessChain %17 %171 
                                       f32_4 %277 = OpLoad %276 
                                       f32_3 %278 = OpVectorShuffle %277 %277 0 1 2 
                                       f32_3 %279 = OpFMul %275 %278 
                                                      OpStore %66 %279 
                                       f32_3 %280 = OpLoad %66 
                                       f32_4 %281 = OpLoad %32 
                                       f32_3 %282 = OpVectorShuffle %281 %281 0 1 2 
                                       f32_3 %283 = OpFMul %280 %282 
                                       f32_3 %284 = OpLoad %9 
                                       f32_3 %285 = OpFAdd %283 %284 
                                                      OpStore %9 %285 
                                       f32_3 %288 = OpLoad %9 
                                       f32_4 %289 = OpLoad %287 
                                       f32_4 %290 = OpVectorShuffle %289 %288 4 5 6 3 
                                                      OpStore %287 %290 
                                 Output f32* %293 = OpAccessChain %287 %291 
                                                      OpStore %293 %142 
                                                      OpReturn
                                                      OpFunctionEnd
"
}
SubProgram "vulkan hw_tier02 " {
Keywords { "DIRECTIONAL" }
"; SPIR-V
; Version: 1.0
; Generator: Khronos Glslang Reference Front End; 6
; Bound: 159
; Schema: 0
                                                      OpCapability Shader 
                                               %1 = OpExtInstImport "GLSL.std.450" 
                                                      OpMemoryModel Logical GLSL450 
                                                      OpEntryPoint Vertex %4 "main" %11 %52 %85 %95 %110 %114 %144 %150 
                                                      OpName vs_TEXCOORD2 "vs_TEXCOORD2" 
                                                      OpName vs_TEXCOORD0 "vs_TEXCOORD0" 
                                                      OpName vs_TEXCOORD1 "vs_TEXCOORD1" 
                                                      OpName vs_TEXCOORD4 "vs_TEXCOORD4" 
                                                      OpDecorate %11 Location 11 
                                                      OpDecorate %16 ArrayStride 16 
                                                      OpDecorate %17 ArrayStride 17 
                                                      OpDecorate %18 ArrayStride 18 
                                                      OpMemberDecorate %19 0 Offset 19 
                                                      OpMemberDecorate %19 1 Offset 19 
                                                      OpMemberDecorate %19 2 Offset 19 
                                                      OpMemberDecorate %19 3 Offset 19 
                                                      OpDecorate %19 Block 
                                                      OpDecorate %21 DescriptorSet 21 
                                                      OpDecorate %21 Binding 21 
                                                      OpDecorate vs_TEXCOORD2 Location 52 
                                                      OpMemberDecorate %83 0 BuiltIn 83 
                                                      OpMemberDecorate %83 1 BuiltIn 83 
                                                      OpMemberDecorate %83 2 BuiltIn 83 
                                                      OpDecorate %83 Block 
                                                      OpDecorate %95 Location 95 
                                                      OpDecorate vs_TEXCOORD0 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD0 Location 110 
                                                      OpDecorate %114 Location 114 
                                                      OpDecorate vs_TEXCOORD1 Location 144 
                                                      OpDecorate vs_TEXCOORD4 Location 150 
                                               %2 = OpTypeVoid 
                                               %3 = OpTypeFunction %2 
                                               %6 = OpTypeFloat 32 
                                               %7 = OpTypeVector %6 4 
                                               %8 = OpTypePointer Private %7 
                                Private f32_4* %9 = OpVariable Private 
                                              %10 = OpTypePointer Input %7 
                                 Input f32_4* %11 = OpVariable Input 
                                              %14 = OpTypeInt 32 0 
                                          u32 %15 = OpConstant 4 
                                              %16 = OpTypeArray %7 %15 
                                              %17 = OpTypeArray %7 %15 
                                              %18 = OpTypeArray %7 %15 
                                              %19 = OpTypeStruct %16 %17 %18 %7 
                                              %20 = OpTypePointer Uniform %19 
Uniform struct {f32_4[4]; f32_4[4]; f32_4[4]; f32_4;}* %21 = OpVariable Uniform 
                                              %22 = OpTypeInt 32 1 
                                          i32 %23 = OpConstant 0 
                                          i32 %24 = OpConstant 1 
                                              %25 = OpTypePointer Uniform %7 
                                          i32 %36 = OpConstant 2 
                               Private f32_4* %44 = OpVariable Private 
                                          i32 %46 = OpConstant 3 
                                              %50 = OpTypeVector %6 3 
                                              %51 = OpTypePointer Output %50 
                       Output f32_3* vs_TEXCOORD2 = OpVariable Output 
                                          u32 %81 = OpConstant 1 
                                              %82 = OpTypeArray %6 %81 
                                              %83 = OpTypeStruct %7 %6 %82 
                                              %84 = OpTypePointer Output %83 
         Output struct {f32_4; f32; f32[1];}* %85 = OpVariable Output 
                                              %93 = OpTypePointer Output %7 
                                 Input f32_4* %95 = OpVariable Input 
                                              %96 = OpTypeVector %6 2 
                                             %109 = OpTypePointer Output %96 
                       Output f32_2* vs_TEXCOORD0 = OpVariable Output 
                                             %113 = OpTypePointer Input %50 
                                Input f32_3* %114 = OpVariable Input 
                                         u32 %120 = OpConstant 0 
                                             %121 = OpTypePointer Private %6 
                                         u32 %134 = OpConstant 2 
                                Private f32* %136 = OpVariable Private 
                       Output f32_3* vs_TEXCOORD1 = OpVariable Output 
                       Output f32_4* vs_TEXCOORD4 = OpVariable Output 
                                         f32 %151 = OpConstant 3.674022E-40 
                                       f32_4 %152 = OpConstantComposite %151 %151 %151 %151 
                                             %153 = OpTypePointer Output %6 
                                          void %4 = OpFunction None %3 
                                               %5 = OpLabel 
                                        f32_4 %12 = OpLoad %11 
                                        f32_4 %13 = OpVectorShuffle %12 %12 1 1 1 1 
                               Uniform f32_4* %26 = OpAccessChain %21 %23 %24 
                                        f32_4 %27 = OpLoad %26 
                                        f32_4 %28 = OpFMul %13 %27 
                                                      OpStore %9 %28 
                               Uniform f32_4* %29 = OpAccessChain %21 %23 %23 
                                        f32_4 %30 = OpLoad %29 
                                        f32_4 %31 = OpLoad %11 
                                        f32_4 %32 = OpVectorShuffle %31 %31 0 0 0 0 
                                        f32_4 %33 = OpFMul %30 %32 
                                        f32_4 %34 = OpLoad %9 
                                        f32_4 %35 = OpFAdd %33 %34 
                                                      OpStore %9 %35 
                               Uniform f32_4* %37 = OpAccessChain %21 %23 %36 
                                        f32_4 %38 = OpLoad %37 
                                        f32_4 %39 = OpLoad %11 
                                        f32_4 %40 = OpVectorShuffle %39 %39 2 2 2 2 
                                        f32_4 %41 = OpFMul %38 %40 
                                        f32_4 %42 = OpLoad %9 
                                        f32_4 %43 = OpFAdd %41 %42 
                                                      OpStore %9 %43 
                                        f32_4 %45 = OpLoad %9 
                               Uniform f32_4* %47 = OpAccessChain %21 %23 %46 
                                        f32_4 %48 = OpLoad %47 
                                        f32_4 %49 = OpFAdd %45 %48 
                                                      OpStore %44 %49 
                               Uniform f32_4* %53 = OpAccessChain %21 %23 %46 
                                        f32_4 %54 = OpLoad %53 
                                        f32_3 %55 = OpVectorShuffle %54 %54 0 1 2 
                                        f32_4 %56 = OpLoad %11 
                                        f32_3 %57 = OpVectorShuffle %56 %56 3 3 3 
                                        f32_3 %58 = OpFMul %55 %57 
                                        f32_4 %59 = OpLoad %9 
                                        f32_3 %60 = OpVectorShuffle %59 %59 0 1 2 
                                        f32_3 %61 = OpFAdd %58 %60 
                                                      OpStore vs_TEXCOORD2 %61 
                                        f32_4 %62 = OpLoad %44 
                                        f32_4 %63 = OpVectorShuffle %62 %62 1 1 1 1 
                               Uniform f32_4* %64 = OpAccessChain %21 %36 %24 
                                        f32_4 %65 = OpLoad %64 
                                        f32_4 %66 = OpFMul %63 %65 
                                                      OpStore %9 %66 
                               Uniform f32_4* %67 = OpAccessChain %21 %36 %23 
                                        f32_4 %68 = OpLoad %67 
                                        f32_4 %69 = OpLoad %44 
                                        f32_4 %70 = OpVectorShuffle %69 %69 0 0 0 0 
                                        f32_4 %71 = OpFMul %68 %70 
                                        f32_4 %72 = OpLoad %9 
                                        f32_4 %73 = OpFAdd %71 %72 
                                                      OpStore %9 %73 
                               Uniform f32_4* %74 = OpAccessChain %21 %36 %36 
                                        f32_4 %75 = OpLoad %74 
                                        f32_4 %76 = OpLoad %44 
                                        f32_4 %77 = OpVectorShuffle %76 %76 2 2 2 2 
                                        f32_4 %78 = OpFMul %75 %77 
                                        f32_4 %79 = OpLoad %9 
                                        f32_4 %80 = OpFAdd %78 %79 
                                                      OpStore %9 %80 
                               Uniform f32_4* %86 = OpAccessChain %21 %36 %46 
                                        f32_4 %87 = OpLoad %86 
                                        f32_4 %88 = OpLoad %44 
                                        f32_4 %89 = OpVectorShuffle %88 %88 3 3 3 3 
                                        f32_4 %90 = OpFMul %87 %89 
                                        f32_4 %91 = OpLoad %9 
                                        f32_4 %92 = OpFAdd %90 %91 
                                Output f32_4* %94 = OpAccessChain %85 %23 
                                                      OpStore %94 %92 
                                        f32_4 %97 = OpLoad %95 
                                        f32_2 %98 = OpVectorShuffle %97 %97 0 1 
                               Uniform f32_4* %99 = OpAccessChain %21 %46 
                                       f32_4 %100 = OpLoad %99 
                                       f32_2 %101 = OpVectorShuffle %100 %100 0 1 
                                       f32_2 %102 = OpFMul %98 %101 
                              Uniform f32_4* %103 = OpAccessChain %21 %46 
                                       f32_4 %104 = OpLoad %103 
                                       f32_2 %105 = OpVectorShuffle %104 %104 2 3 
                                       f32_2 %106 = OpFAdd %102 %105 
                                       f32_4 %107 = OpLoad %9 
                                       f32_4 %108 = OpVectorShuffle %107 %106 4 5 2 3 
                                                      OpStore %9 %108 
                                       f32_4 %111 = OpLoad %9 
                                       f32_2 %112 = OpVectorShuffle %111 %111 0 1 
                                                      OpStore vs_TEXCOORD0 %112 
                                       f32_3 %115 = OpLoad %114 
                              Uniform f32_4* %116 = OpAccessChain %21 %24 %23 
                                       f32_4 %117 = OpLoad %116 
                                       f32_3 %118 = OpVectorShuffle %117 %117 0 1 2 
                                         f32 %119 = OpDot %115 %118 
                                Private f32* %122 = OpAccessChain %9 %120 
                                                      OpStore %122 %119 
                                       f32_3 %123 = OpLoad %114 
                              Uniform f32_4* %124 = OpAccessChain %21 %24 %24 
                                       f32_4 %125 = OpLoad %124 
                                       f32_3 %126 = OpVectorShuffle %125 %125 0 1 2 
                                         f32 %127 = OpDot %123 %126 
                                Private f32* %128 = OpAccessChain %9 %81 
                                                      OpStore %128 %127 
                                       f32_3 %129 = OpLoad %114 
                              Uniform f32_4* %130 = OpAccessChain %21 %24 %36 
                                       f32_4 %131 = OpLoad %130 
                                       f32_3 %132 = OpVectorShuffle %131 %131 0 1 2 
                                         f32 %133 = OpDot %129 %132 
                                Private f32* %135 = OpAccessChain %9 %134 
                                                      OpStore %135 %133 
                                       f32_4 %137 = OpLoad %9 
                                       f32_3 %138 = OpVectorShuffle %137 %137 0 1 2 
                                       f32_4 %139 = OpLoad %9 
                                       f32_3 %140 = OpVectorShuffle %139 %139 0 1 2 
                                         f32 %141 = OpDot %138 %140 
                                                      OpStore %136 %141 
                                         f32 %142 = OpLoad %136 
                                         f32 %143 = OpExtInst %1 32 %142 
                                                      OpStore %136 %143 
                                         f32 %145 = OpLoad %136 
                                       f32_3 %146 = OpCompositeConstruct %145 %145 %145 
                                       f32_4 %147 = OpLoad %9 
                                       f32_3 %148 = OpVectorShuffle %147 %147 0 1 2 
                                       f32_3 %149 = OpFMul %146 %148 
                                                      OpStore vs_TEXCOORD1 %149 
                                                      OpStore vs_TEXCOORD4 %152 
                                 Output f32* %154 = OpAccessChain %85 %23 %81 
                                         f32 %155 = OpLoad %154 
                                         f32 %156 = OpFNegate %155 
                                 Output f32* %157 = OpAccessChain %85 %23 %81 
                                                      OpStore %157 %156 
                                                      OpReturn
                                                      OpFunctionEnd
; SPIR-V
; Version: 1.0
; Generator: Khronos Glslang Reference Front End; 6
; Bound: 295
; Schema: 0
                                                      OpCapability Shader 
                                               %1 = OpExtInstImport "GLSL.std.450" 
                                                      OpMemoryModel Logical GLSL450 
                                                      OpEntryPoint Fragment %4 "main" %11 %60 %265 %287 
                                                      OpExecutionMode %4 OriginUpperLeft 
                                                      OpName vs_TEXCOORD2 "vs_TEXCOORD2" 
                                                      OpName vs_TEXCOORD1 "vs_TEXCOORD1" 
                                                      OpName vs_TEXCOORD0 "vs_TEXCOORD0" 
                                                      OpDecorate vs_TEXCOORD2 Location 11 
                                                      OpMemberDecorate %15 0 Offset 15 
                                                      OpMemberDecorate %15 1 RelaxedPrecision 
                                                      OpMemberDecorate %15 1 Offset 15 
                                                      OpMemberDecorate %15 2 RelaxedPrecision 
                                                      OpMemberDecorate %15 2 Offset 15 
                                                      OpMemberDecorate %15 3 RelaxedPrecision 
                                                      OpMemberDecorate %15 3 Offset 15 
                                                      OpMemberDecorate %15 4 RelaxedPrecision 
                                                      OpMemberDecorate %15 4 Offset 15 
                                                      OpMemberDecorate %15 5 RelaxedPrecision 
                                                      OpMemberDecorate %15 5 Offset 15 
                                                      OpMemberDecorate %15 6 RelaxedPrecision 
                                                      OpMemberDecorate %15 6 Offset 15 
                                                      OpMemberDecorate %15 7 RelaxedPrecision 
                                                      OpMemberDecorate %15 7 Offset 15 
                                                      OpMemberDecorate %15 8 RelaxedPrecision 
                                                      OpMemberDecorate %15 8 Offset 15 
                                                      OpMemberDecorate %15 9 RelaxedPrecision 
                                                      OpMemberDecorate %15 9 Offset 15 
                                                      OpDecorate %15 Block 
                                                      OpDecorate %17 DescriptorSet 17 
                                                      OpDecorate %17 Binding 17 
                                                      OpDecorate %32 RelaxedPrecision 
                                                      OpDecorate %40 RelaxedPrecision 
                                                      OpDecorate %41 RelaxedPrecision 
                                                      OpDecorate %45 RelaxedPrecision 
                                                      OpDecorate %46 RelaxedPrecision 
                                                      OpDecorate %47 RelaxedPrecision 
                                                      OpDecorate %48 RelaxedPrecision 
                                                      OpDecorate %49 RelaxedPrecision 
                                                      OpDecorate %50 RelaxedPrecision 
                                                      OpDecorate %51 RelaxedPrecision 
                                                      OpDecorate %52 RelaxedPrecision 
                                                      OpDecorate %53 RelaxedPrecision 
                                                      OpDecorate %54 RelaxedPrecision 
                                                      OpDecorate %55 RelaxedPrecision 
                                                      OpDecorate %56 RelaxedPrecision 
                                                      OpDecorate %57 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD1 Location 60 
                                                      OpDecorate %64 RelaxedPrecision 
                                                      OpDecorate %65 RelaxedPrecision 
                                                      OpDecorate %66 RelaxedPrecision 
                                                      OpDecorate %67 RelaxedPrecision 
                                                      OpDecorate %71 RelaxedPrecision 
                                                      OpDecorate %72 RelaxedPrecision 
                                                      OpDecorate %73 RelaxedPrecision 
                                                      OpDecorate %74 RelaxedPrecision 
                                                      OpDecorate %78 RelaxedPrecision 
                                                      OpDecorate %80 RelaxedPrecision 
                                                      OpDecorate %81 RelaxedPrecision 
                                                      OpDecorate %82 RelaxedPrecision 
                                                      OpDecorate %86 RelaxedPrecision 
                                                      OpDecorate %87 RelaxedPrecision 
                                                      OpDecorate %90 RelaxedPrecision 
                                                      OpDecorate %94 RelaxedPrecision 
                                                      OpDecorate %95 RelaxedPrecision 
                                                      OpDecorate %100 RelaxedPrecision 
                                                      OpDecorate %102 RelaxedPrecision 
                                                      OpDecorate %107 RelaxedPrecision 
                                                      OpDecorate %116 RelaxedPrecision 
                                                      OpDecorate %117 RelaxedPrecision 
                                                      OpDecorate %119 RelaxedPrecision 
                                                      OpDecorate %120 RelaxedPrecision 
                                                      OpDecorate %127 RelaxedPrecision 
                                                      OpDecorate %128 RelaxedPrecision 
                                                      OpDecorate %131 RelaxedPrecision 
                                                      OpDecorate %133 RelaxedPrecision 
                                                      OpDecorate %134 RelaxedPrecision 
                                                      OpDecorate %135 RelaxedPrecision 
                                                      OpDecorate %138 RelaxedPrecision 
                                                      OpDecorate %139 RelaxedPrecision 
                                                      OpDecorate %140 RelaxedPrecision 
                                                      OpDecorate %141 RelaxedPrecision 
                                                      OpDecorate %173 RelaxedPrecision 
                                                      OpDecorate %174 RelaxedPrecision 
                                                      OpDecorate %177 RelaxedPrecision 
                                                      OpDecorate %178 RelaxedPrecision 
                                                      OpDecorate %179 RelaxedPrecision 
                                                      OpDecorate %184 RelaxedPrecision 
                                                      OpDecorate %185 RelaxedPrecision 
                                                      OpDecorate %189 RelaxedPrecision 
                                                      OpDecorate %190 RelaxedPrecision 
                                                      OpDecorate %191 RelaxedPrecision 
                                                      OpDecorate %194 RelaxedPrecision 
                                                      OpDecorate %195 RelaxedPrecision 
                                                      OpDecorate %197 RelaxedPrecision 
                                                      OpDecorate %199 RelaxedPrecision 
                                                      OpDecorate %200 RelaxedPrecision 
                                                      OpDecorate %202 RelaxedPrecision 
                                                      OpDecorate %203 RelaxedPrecision 
                                                      OpDecorate %205 RelaxedPrecision 
                                                      OpDecorate %206 RelaxedPrecision 
                                                      OpDecorate %208 RelaxedPrecision 
                                                      OpDecorate %209 RelaxedPrecision 
                                                      OpDecorate %211 RelaxedPrecision 
                                                      OpDecorate %212 RelaxedPrecision 
                                                      OpDecorate %213 RelaxedPrecision 
                                                      OpDecorate %214 RelaxedPrecision 
                                                      OpDecorate %217 RelaxedPrecision 
                                                      OpDecorate %218 RelaxedPrecision 
                                                      OpDecorate %221 RelaxedPrecision 
                                                      OpDecorate %222 RelaxedPrecision 
                                                      OpDecorate %223 RelaxedPrecision 
                                                      OpDecorate %226 RelaxedPrecision 
                                                      OpDecorate %227 RelaxedPrecision 
                                                      OpDecorate %230 RelaxedPrecision 
                                                      OpDecorate %231 RelaxedPrecision 
                                                      OpDecorate %232 RelaxedPrecision 
                                                      OpDecorate %234 RelaxedPrecision 
                                                      OpDecorate %236 RelaxedPrecision 
                                                      OpDecorate %237 RelaxedPrecision 
                                                      OpDecorate %240 RelaxedPrecision 
                                                      OpDecorate %241 RelaxedPrecision 
                                                      OpDecorate %242 RelaxedPrecision 
                                                      OpDecorate %244 RelaxedPrecision 
                                                      OpDecorate %245 RelaxedPrecision 
                                                      OpDecorate %248 RelaxedPrecision 
                                                      OpDecorate %249 RelaxedPrecision 
                                                      OpDecorate %250 RelaxedPrecision 
                                                      OpDecorate %253 RelaxedPrecision 
                                                      OpDecorate %256 RelaxedPrecision 
                                                      OpDecorate %256 DescriptorSet 256 
                                                      OpDecorate %256 Binding 256 
                                                      OpDecorate %257 RelaxedPrecision 
                                                      OpDecorate %260 RelaxedPrecision 
                                                      OpDecorate %260 DescriptorSet 260 
                                                      OpDecorate %260 Binding 260 
                                                      OpDecorate %261 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD0 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD0 Location 265 
                                                      OpDecorate %266 RelaxedPrecision 
                                                      OpDecorate %267 RelaxedPrecision 
                                                      OpDecorate %268 RelaxedPrecision 
                                                      OpDecorate %269 RelaxedPrecision 
                                                      OpDecorate %272 RelaxedPrecision 
                                                      OpDecorate %273 RelaxedPrecision 
                                                      OpDecorate %274 RelaxedPrecision 
                                                      OpDecorate %275 RelaxedPrecision 
                                                      OpDecorate %277 RelaxedPrecision 
                                                      OpDecorate %278 RelaxedPrecision 
                                                      OpDecorate %279 RelaxedPrecision 
                                                      OpDecorate %280 RelaxedPrecision 
                                                      OpDecorate %281 RelaxedPrecision 
                                                      OpDecorate %282 RelaxedPrecision 
                                                      OpDecorate %283 RelaxedPrecision 
                                                      OpDecorate %287 RelaxedPrecision 
                                                      OpDecorate %287 Location 287 
                                               %2 = OpTypeVoid 
                                               %3 = OpTypeFunction %2 
                                               %6 = OpTypeFloat 32 
                                               %7 = OpTypeVector %6 3 
                                               %8 = OpTypePointer Private %7 
                                Private f32_3* %9 = OpVariable Private 
                                              %10 = OpTypePointer Input %7 
                        Input f32_3* vs_TEXCOORD2 = OpVariable Input 
                                              %14 = OpTypeVector %6 4 
                                              %15 = OpTypeStruct %7 %14 %14 %14 %14 %6 %14 %6 %6 %6 
                                              %16 = OpTypePointer Uniform %15 
Uniform struct {f32_3; f32_4; f32_4; f32_4; f32_4; f32; f32_4; f32; f32; f32;}* %17 = OpVariable Uniform 
                                              %18 = OpTypeInt 32 1 
                                          i32 %19 = OpConstant 0 
                                              %20 = OpTypePointer Uniform %7 
                                              %24 = OpTypePointer Private %6 
                                 Private f32* %25 = OpVariable Private 
                                              %31 = OpTypePointer Private %14 
                               Private f32_4* %32 = OpVariable Private 
                                          i32 %37 = OpConstant 1 
                                              %38 = OpTypePointer Uniform %14 
                                 Private f32* %45 = OpVariable Private 
                        Input f32_3* vs_TEXCOORD1 = OpVariable Input 
                               Private f32_3* %66 = OpVariable Private 
                                              %75 = OpTypeInt 32 0 
                                          u32 %76 = OpConstant 0 
                                          u32 %83 = OpConstant 1 
                                              %85 = OpTypeVector %6 2 
                                          f32 %88 = OpConstant 3.674022E-40 
                                        f32_2 %89 = OpConstantComposite %88 %88 
                                          i32 %97 = OpConstant 5 
                                              %98 = OpTypePointer Uniform %6 
                                         f32 %101 = OpConstant 3.674022E-40 
                                         i32 %114 = OpConstant 9 
                                         f32 %118 = OpConstant 3.674022E-40 
                                         f32 %124 = OpConstant 3.674022E-40 
                                Private f32* %131 = OpVariable Private 
                                Private f32* %136 = OpVariable Private 
                                         f32 %142 = OpConstant 3.674022E-40 
                                         f32 %156 = OpConstant 3.674022E-40 
                                         f32 %158 = OpConstant 3.674022E-40 
                                         i32 %171 = OpConstant 2 
                                         i32 %175 = OpConstant 3 
                                         i32 %187 = OpConstant 8 
                                         i32 %192 = OpConstant 7 
                                Private f32* %197 = OpVariable Private 
                                         i32 %246 = OpConstant 6 
                              Private f32_3* %253 = OpVariable Private 
                                             %254 = OpTypeImage %6 Dim2D 0 0 0 1 Unknown 
                                             %255 = OpTypePointer UniformConstant %254 
        UniformConstant read_only Texture2D* %256 = OpVariable UniformConstant 
                                             %258 = OpTypeSampler 
                                             %259 = OpTypePointer UniformConstant %258 
                    UniformConstant sampler* %260 = OpVariable UniformConstant 
                                             %262 = OpTypeSampledImage %254 
                                             %264 = OpTypePointer Input %85 
                        Input f32_2* vs_TEXCOORD0 = OpVariable Input 
                                         i32 %270 = OpConstant 4 
                                             %286 = OpTypePointer Output %14 
                               Output f32_4* %287 = OpVariable Output 
                                         u32 %291 = OpConstant 3 
                                             %292 = OpTypePointer Output %6 
                                          void %4 = OpFunction None %3 
                                               %5 = OpLabel 
                                        f32_3 %12 = OpLoad vs_TEXCOORD2 
                                        f32_3 %13 = OpFNegate %12 
                               Uniform f32_3* %21 = OpAccessChain %17 %19 
                                        f32_3 %22 = OpLoad %21 
                                        f32_3 %23 = OpFAdd %13 %22 
                                                      OpStore %9 %23 
                                        f32_3 %26 = OpLoad %9 
                                        f32_3 %27 = OpLoad %9 
                                          f32 %28 = OpDot %26 %27 
                                                      OpStore %25 %28 
                                          f32 %29 = OpLoad %25 
                                          f32 %30 = OpExtInst %1 32 %29 
                                                      OpStore %25 %30 
                                        f32_3 %33 = OpLoad %9 
                                          f32 %34 = OpLoad %25 
                                        f32_3 %35 = OpCompositeConstruct %34 %34 %34 
                                        f32_3 %36 = OpFMul %33 %35 
                               Uniform f32_4* %39 = OpAccessChain %17 %37 
                                        f32_4 %40 = OpLoad %39 
                                        f32_3 %41 = OpVectorShuffle %40 %40 0 1 2 
                                        f32_3 %42 = OpFAdd %36 %41 
                                        f32_4 %43 = OpLoad %32 
                                        f32_4 %44 = OpVectorShuffle %43 %42 4 5 6 3 
                                                      OpStore %32 %44 
                                        f32_4 %46 = OpLoad %32 
                                        f32_3 %47 = OpVectorShuffle %46 %46 0 1 2 
                                        f32_4 %48 = OpLoad %32 
                                        f32_3 %49 = OpVectorShuffle %48 %48 0 1 2 
                                          f32 %50 = OpDot %47 %49 
                                                      OpStore %45 %50 
                                          f32 %51 = OpLoad %45 
                                          f32 %52 = OpExtInst %1 32 %51 
                                                      OpStore %45 %52 
                                          f32 %53 = OpLoad %45 
                                        f32_3 %54 = OpCompositeConstruct %53 %53 %53 
                                        f32_4 %55 = OpLoad %32 
                                        f32_3 %56 = OpVectorShuffle %55 %55 0 1 2 
                                        f32_3 %57 = OpFMul %54 %56 
                                        f32_4 %58 = OpLoad %32 
                                        f32_4 %59 = OpVectorShuffle %58 %57 4 5 6 3 
                                                      OpStore %32 %59 
                                        f32_3 %61 = OpLoad vs_TEXCOORD1 
                                        f32_3 %62 = OpLoad vs_TEXCOORD1 
                                          f32 %63 = OpDot %61 %62 
                                                      OpStore %45 %63 
                                          f32 %64 = OpLoad %45 
                                          f32 %65 = OpExtInst %1 32 %64 
                                                      OpStore %45 %65 
                                          f32 %67 = OpLoad %45 
                                        f32_3 %68 = OpCompositeConstruct %67 %67 %67 
                                        f32_3 %69 = OpLoad vs_TEXCOORD1 
                                        f32_3 %70 = OpFMul %68 %69 
                                                      OpStore %66 %70 
                                        f32_3 %71 = OpLoad %66 
                                        f32_4 %72 = OpLoad %32 
                                        f32_3 %73 = OpVectorShuffle %72 %72 0 1 2 
                                          f32 %74 = OpDot %71 %73 
                                 Private f32* %77 = OpAccessChain %32 %76 
                                                      OpStore %77 %74 
                                        f32_3 %78 = OpLoad %66 
                               Uniform f32_4* %79 = OpAccessChain %17 %37 
                                        f32_4 %80 = OpLoad %79 
                                        f32_3 %81 = OpVectorShuffle %80 %80 0 1 2 
                                          f32 %82 = OpDot %78 %81 
                                 Private f32* %84 = OpAccessChain %32 %83 
                                                      OpStore %84 %82 
                                        f32_4 %86 = OpLoad %32 
                                        f32_2 %87 = OpVectorShuffle %86 %86 0 1 
                                        f32_2 %90 = OpExtInst %1 40 %87 %89 
                                        f32_4 %91 = OpLoad %32 
                                        f32_4 %92 = OpVectorShuffle %91 %90 4 5 2 3 
                                                      OpStore %32 %92 
                                 Private f32* %93 = OpAccessChain %32 %76 
                                          f32 %94 = OpLoad %93 
                                          f32 %95 = OpExtInst %1 30 %94 
                                 Private f32* %96 = OpAccessChain %9 %76 
                                                      OpStore %96 %95 
                                 Uniform f32* %99 = OpAccessChain %17 %97 
                                         f32 %100 = OpLoad %99 
                                         f32 %102 = OpFMul %100 %101 
                                Private f32* %103 = OpAccessChain %32 %76 
                                                      OpStore %103 %102 
                                Private f32* %104 = OpAccessChain %9 %76 
                                         f32 %105 = OpLoad %104 
                                Private f32* %106 = OpAccessChain %32 %76 
                                         f32 %107 = OpLoad %106 
                                         f32 %108 = OpFMul %105 %107 
                                Private f32* %109 = OpAccessChain %9 %76 
                                                      OpStore %109 %108 
                                Private f32* %110 = OpAccessChain %9 %76 
                                         f32 %111 = OpLoad %110 
                                         f32 %112 = OpExtInst %1 29 %111 
                                Private f32* %113 = OpAccessChain %9 %76 
                                                      OpStore %113 %112 
                                Uniform f32* %115 = OpAccessChain %17 %114 
                                         f32 %116 = OpLoad %115 
                                         f32 %117 = OpFNegate %116 
                                         f32 %119 = OpFMul %117 %118 
                                         f32 %120 = OpFAdd %119 %118 
                                Private f32* %121 = OpAccessChain %32 %76 
                                                      OpStore %121 %120 
                                Private f32* %122 = OpAccessChain %9 %76 
                                         f32 %123 = OpLoad %122 
                                         f32 %125 = OpFMul %123 %124 
                                Private f32* %126 = OpAccessChain %32 %76 
                                         f32 %127 = OpLoad %126 
                                         f32 %128 = OpFNegate %127 
                                         f32 %129 = OpFAdd %125 %128 
                                Private f32* %130 = OpAccessChain %9 %76 
                                                      OpStore %130 %129 
                                Uniform f32* %132 = OpAccessChain %17 %114 
                                         f32 %133 = OpLoad %132 
                                         f32 %134 = OpFMul %133 %118 
                                         f32 %135 = OpFAdd %134 %118 
                                                      OpStore %131 %135 
                                Private f32* %137 = OpAccessChain %32 %76 
                                         f32 %138 = OpLoad %137 
                                         f32 %139 = OpFNegate %138 
                                         f32 %140 = OpLoad %131 
                                         f32 %141 = OpFAdd %139 %140 
                                                      OpStore %136 %141 
                                         f32 %143 = OpLoad %136 
                                         f32 %144 = OpFDiv %142 %143 
                                                      OpStore %136 %144 
                                         f32 %145 = OpLoad %136 
                                Private f32* %146 = OpAccessChain %9 %76 
                                         f32 %147 = OpLoad %146 
                                         f32 %148 = OpFMul %145 %147 
                                Private f32* %149 = OpAccessChain %9 %76 
                                                      OpStore %149 %148 
                                Private f32* %150 = OpAccessChain %9 %76 
                                         f32 %151 = OpLoad %150 
                                         f32 %152 = OpExtInst %1 43 %151 %88 %142 
                                Private f32* %153 = OpAccessChain %9 %76 
                                                      OpStore %153 %152 
                                Private f32* %154 = OpAccessChain %9 %76 
                                         f32 %155 = OpLoad %154 
                                         f32 %157 = OpFMul %155 %156 
                                         f32 %159 = OpFAdd %157 %158 
                                                      OpStore %136 %159 
                                Private f32* %160 = OpAccessChain %9 %76 
                                         f32 %161 = OpLoad %160 
                                Private f32* %162 = OpAccessChain %9 %76 
                                         f32 %163 = OpLoad %162 
                                         f32 %164 = OpFMul %161 %163 
                                Private f32* %165 = OpAccessChain %9 %76 
                                                      OpStore %165 %164 
                                Private f32* %166 = OpAccessChain %9 %76 
                                         f32 %167 = OpLoad %166 
                                         f32 %168 = OpLoad %136 
                                         f32 %169 = OpFMul %167 %168 
                                Private f32* %170 = OpAccessChain %9 %76 
                                                      OpStore %170 %169 
                              Uniform f32_4* %172 = OpAccessChain %17 %171 
                                       f32_4 %173 = OpLoad %172 
                                       f32_3 %174 = OpVectorShuffle %173 %173 0 1 2 
                              Uniform f32_4* %176 = OpAccessChain %17 %175 
                                       f32_4 %177 = OpLoad %176 
                                       f32_3 %178 = OpVectorShuffle %177 %177 0 1 2 
                                       f32_3 %179 = OpFMul %174 %178 
                                       f32_4 %180 = OpLoad %32 
                                       f32_4 %181 = OpVectorShuffle %180 %179 4 1 5 6 
                                                      OpStore %32 %181 
                                       f32_3 %182 = OpLoad %9 
                                       f32_3 %183 = OpVectorShuffle %182 %182 0 0 0 
                                       f32_4 %184 = OpLoad %32 
                                       f32_3 %185 = OpVectorShuffle %184 %184 0 2 3 
                                       f32_3 %186 = OpFMul %183 %185 
                                                      OpStore %9 %186 
                                Uniform f32* %188 = OpAccessChain %17 %187 
                                         f32 %189 = OpLoad %188 
                                         f32 %190 = OpFNegate %189 
                                         f32 %191 = OpFMul %190 %118 
                                Uniform f32* %193 = OpAccessChain %17 %192 
                                         f32 %194 = OpLoad %193 
                                         f32 %195 = OpFAdd %191 %194 
                                Private f32* %196 = OpAccessChain %32 %76 
                                                      OpStore %196 %195 
                                Private f32* %198 = OpAccessChain %32 %76 
                                         f32 %199 = OpLoad %198 
                                         f32 %200 = OpFNegate %199 
                                Private f32* %201 = OpAccessChain %32 %83 
                                         f32 %202 = OpLoad %201 
                                         f32 %203 = OpFAdd %200 %202 
                                                      OpStore %197 %203 
                                Uniform f32* %204 = OpAccessChain %17 %187 
                                         f32 %205 = OpLoad %204 
                                         f32 %206 = OpFMul %205 %118 
                                Uniform f32* %207 = OpAccessChain %17 %192 
                                         f32 %208 = OpLoad %207 
                                         f32 %209 = OpFAdd %206 %208 
                                                      OpStore %131 %209 
                                Private f32* %210 = OpAccessChain %32 %76 
                                         f32 %211 = OpLoad %210 
                                         f32 %212 = OpFNegate %211 
                                         f32 %213 = OpLoad %131 
                                         f32 %214 = OpFAdd %212 %213 
                                Private f32* %215 = OpAccessChain %32 %76 
                                                      OpStore %215 %214 
                                Private f32* %216 = OpAccessChain %32 %76 
                                         f32 %217 = OpLoad %216 
                                         f32 %218 = OpFDiv %142 %217 
                                Private f32* %219 = OpAccessChain %32 %76 
                                                      OpStore %219 %218 
                                Private f32* %220 = OpAccessChain %32 %76 
                                         f32 %221 = OpLoad %220 
                                         f32 %222 = OpLoad %197 
                                         f32 %223 = OpFMul %221 %222 
                                Private f32* %224 = OpAccessChain %32 %76 
                                                      OpStore %224 %223 
                                Private f32* %225 = OpAccessChain %32 %76 
                                         f32 %226 = OpLoad %225 
                                         f32 %227 = OpExtInst %1 43 %226 %88 %142 
                                Private f32* %228 = OpAccessChain %32 %76 
                                                      OpStore %228 %227 
                                Private f32* %229 = OpAccessChain %32 %76 
                                         f32 %230 = OpLoad %229 
                                         f32 %231 = OpFMul %230 %156 
                                         f32 %232 = OpFAdd %231 %158 
                                                      OpStore %197 %232 
                                Private f32* %233 = OpAccessChain %32 %76 
                                         f32 %234 = OpLoad %233 
                                Private f32* %235 = OpAccessChain %32 %76 
                                         f32 %236 = OpLoad %235 
                                         f32 %237 = OpFMul %234 %236 
                                Private f32* %238 = OpAccessChain %32 %76 
                                                      OpStore %238 %237 
                                Private f32* %239 = OpAccessChain %32 %76 
                                         f32 %240 = OpLoad %239 
                                         f32 %241 = OpLoad %197 
                                         f32 %242 = OpFMul %240 %241 
                                Private f32* %243 = OpAccessChain %32 %76 
                                                      OpStore %243 %242 
                                       f32_4 %244 = OpLoad %32 
                                       f32_3 %245 = OpVectorShuffle %244 %244 0 0 0 
                              Uniform f32_4* %247 = OpAccessChain %17 %246 
                                       f32_4 %248 = OpLoad %247 
                                       f32_3 %249 = OpVectorShuffle %248 %248 0 1 2 
                                       f32_3 %250 = OpFMul %245 %249 
                                       f32_4 %251 = OpLoad %32 
                                       f32_4 %252 = OpVectorShuffle %251 %250 4 5 6 3 
                                                      OpStore %32 %252 
                         read_only Texture2D %257 = OpLoad %256 
                                     sampler %261 = OpLoad %260 
                  read_only Texture2DSampled %263 = OpSampledImage %257 %261 
                                       f32_2 %266 = OpLoad vs_TEXCOORD0 
                                       f32_4 %267 = OpImageSampleImplicitLod %263 %266 
                                       f32_3 %268 = OpVectorShuffle %267 %267 0 1 2 
                                                      OpStore %253 %268 
                                       f32_3 %269 = OpLoad %253 
                              Uniform f32_4* %271 = OpAccessChain %17 %270 
                                       f32_4 %272 = OpLoad %271 
                                       f32_3 %273 = OpVectorShuffle %272 %272 0 1 2 
                                       f32_3 %274 = OpFMul %269 %273 
                                                      OpStore %66 %274 
                                       f32_3 %275 = OpLoad %66 
                              Uniform f32_4* %276 = OpAccessChain %17 %171 
                                       f32_4 %277 = OpLoad %276 
                                       f32_3 %278 = OpVectorShuffle %277 %277 0 1 2 
                                       f32_3 %279 = OpFMul %275 %278 
                                                      OpStore %66 %279 
                                       f32_3 %280 = OpLoad %66 
                                       f32_4 %281 = OpLoad %32 
                                       f32_3 %282 = OpVectorShuffle %281 %281 0 1 2 
                                       f32_3 %283 = OpFMul %280 %282 
                                       f32_3 %284 = OpLoad %9 
                                       f32_3 %285 = OpFAdd %283 %284 
                                                      OpStore %9 %285 
                                       f32_3 %288 = OpLoad %9 
                                       f32_4 %289 = OpLoad %287 
                                       f32_4 %290 = OpVectorShuffle %289 %288 4 5 6 3 
                                                      OpStore %287 %290 
                                 Output f32* %293 = OpAccessChain %287 %291 
                                                      OpStore %293 %142 
                                                      OpReturn
                                                      OpFunctionEnd
"
}
SubProgram "gles3 hw_tier00 " {
Keywords { "SPOT" }
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToLight[4];
uniform 	vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in highp vec3 in_NORMAL0;
in highp vec4 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out highp vec3 vs_TEXCOORD1;
out highp vec3 vs_TEXCOORD2;
out highp vec4 vs_TEXCOORD3;
out highp vec4 vs_TEXCOORD4;
vec4 u_xlat0;
vec4 u_xlat1;
vec4 u_xlat2;
float u_xlat10;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy;
    u_xlat1.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat1.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat1.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat10 = dot(u_xlat1.xyz, u_xlat1.xyz);
    u_xlat10 = inversesqrt(u_xlat10);
    vs_TEXCOORD1.xyz = vec3(u_xlat10) * u_xlat1.xyz;
    vs_TEXCOORD2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[3] * in_POSITION0.wwww + u_xlat0;
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_WorldToLight[1];
    u_xlat1 = hlslcc_mtx4x4unity_WorldToLight[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToLight[2] * u_xlat0.zzzz + u_xlat1;
    vs_TEXCOORD3 = hlslcc_mtx4x4unity_WorldToLight[3] * u_xlat0.wwww + u_xlat1;
    vs_TEXCOORD4 = vec4(0.0, 0.0, 0.0, 0.0);
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec3 _WorldSpaceCameraPos;
uniform 	vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 _LightColor0;
uniform 	mediump vec4 _SpecColor;
uniform 	vec4 hlslcc_mtx4x4unity_WorldToLight[4];
uniform 	mediump vec4 _Color;
uniform 	mediump float _Smoothness;
uniform 	mediump vec4 _HColor;
uniform 	mediump float _RampThreshold;
uniform 	mediump float _RampSmooth;
uniform 	mediump float _SpecSmooth;
UNITY_LOCATION(0) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(1) uniform highp sampler2D _LightTexture0;
UNITY_LOCATION(2) uniform highp sampler2D _LightTextureB0;
in mediump vec2 vs_TEXCOORD0;
in highp vec3 vs_TEXCOORD1;
in highp vec3 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
vec4 u_xlat1;
mediump vec3 u_xlat16_1;
mediump vec4 u_xlat16_2;
mediump vec3 u_xlat16_3;
vec2 u_xlat4;
mediump float u_xlat16_6;
mediump float u_xlat16_7;
bool u_xlatb8;
mediump float u_xlat16_10;
float u_xlat12;
mediump float u_xlat16_14;
void main()
{
    u_xlat0.xyz = (-vs_TEXCOORD2.xyz) + _WorldSpaceLightPos0.xyz;
    u_xlat12 = dot(u_xlat0.xyz, u_xlat0.xyz);
    u_xlat12 = inversesqrt(u_xlat12);
    u_xlat0.xyz = vec3(u_xlat12) * u_xlat0.xyz;
    u_xlat1.xyz = (-vs_TEXCOORD2.xyz) + _WorldSpaceCameraPos.xyz;
    u_xlat12 = dot(u_xlat1.xyz, u_xlat1.xyz);
    u_xlat12 = inversesqrt(u_xlat12);
    u_xlat16_2.xyz = u_xlat1.xyz * vec3(u_xlat12) + u_xlat0.xyz;
    u_xlat16_14 = dot(u_xlat16_2.xyz, u_xlat16_2.xyz);
    u_xlat16_14 = inversesqrt(u_xlat16_14);
    u_xlat16_2.xyz = vec3(u_xlat16_14) * u_xlat16_2.xyz;
    u_xlat16_14 = dot(vs_TEXCOORD1.xyz, vs_TEXCOORD1.xyz);
    u_xlat16_14 = inversesqrt(u_xlat16_14);
    u_xlat16_3.xyz = vec3(u_xlat16_14) * vs_TEXCOORD1.xyz;
    u_xlat16_2.x = dot(u_xlat16_3.xyz, u_xlat16_2.xyz);
    u_xlat16_2.y = dot(u_xlat16_3.xyz, u_xlat0.xyz);
    u_xlat16_2.xy = max(u_xlat16_2.xy, vec2(0.0, 0.0));
    u_xlat0.x = log2(u_xlat16_2.x);
    u_xlat16_2.x = _Smoothness * 128.0;
    u_xlat0.x = u_xlat0.x * u_xlat16_2.x;
    u_xlat0.x = exp2(u_xlat0.x);
    u_xlat16_2.x = (-_SpecSmooth) * 0.5 + 0.5;
    u_xlat0.x = u_xlat0.x * 2.0 + (-u_xlat16_2.x);
    u_xlat16_10 = _SpecSmooth * 0.5 + 0.5;
    u_xlat4.x = (-u_xlat16_2.x) + u_xlat16_10;
    u_xlat4.x = float(1.0) / u_xlat4.x;
    u_xlat0.x = u_xlat4.x * u_xlat0.x;
#ifdef UNITY_ADRENO_ES3
    u_xlat0.x = min(max(u_xlat0.x, 0.0), 1.0);
#else
    u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);
#endif
    u_xlat4.x = u_xlat0.x * -2.0 + 3.0;
    u_xlat0.x = u_xlat0.x * u_xlat0.x;
    u_xlat0.x = u_xlat0.x * u_xlat4.x;
    u_xlat1 = vs_TEXCOORD2.yyyy * hlslcc_mtx4x4unity_WorldToLight[1];
    u_xlat1 = hlslcc_mtx4x4unity_WorldToLight[0] * vs_TEXCOORD2.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToLight[2] * vs_TEXCOORD2.zzzz + u_xlat1;
    u_xlat1 = u_xlat1 + hlslcc_mtx4x4unity_WorldToLight[3];
    u_xlat4.xy = u_xlat1.xy / u_xlat1.ww;
    u_xlat4.xy = u_xlat4.xy + vec2(0.5, 0.5);
    u_xlat4.x = texture(_LightTexture0, u_xlat4.xy).w;
#ifdef UNITY_ADRENO_ES3
    u_xlatb8 = !!(0.0<u_xlat1.z);
#else
    u_xlatb8 = 0.0<u_xlat1.z;
#endif
    u_xlat12 = dot(u_xlat1.xyz, u_xlat1.xyz);
    u_xlat12 = texture(_LightTextureB0, vec2(u_xlat12)).x;
    u_xlat16_2.x = (u_xlatb8) ? 1.0 : 0.0;
    u_xlat16_2.x = u_xlat4.x * u_xlat16_2.x;
    u_xlat16_2.x = u_xlat12 * u_xlat16_2.x;
    u_xlat16_2.xzw = u_xlat16_2.xxx * _LightColor0.xyz;
    u_xlat16_3.xyz = u_xlat16_2.xzw * _SpecColor.xyz;
    u_xlat0.xyz = u_xlat0.xxx * u_xlat16_3.xyz;
    u_xlat16_1.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_3.xyz = u_xlat16_1.xyz * _Color.xyz;
    u_xlat16_2.xzw = u_xlat16_2.xzw * u_xlat16_3.xyz;
    u_xlat16_3.x = (-_RampSmooth) * 0.5 + _RampThreshold;
    u_xlat16_6 = u_xlat16_2.y + (-u_xlat16_3.x);
    u_xlat16_7 = _RampSmooth * 0.5 + _RampThreshold;
    u_xlat16_3.x = (-u_xlat16_3.x) + u_xlat16_7;
    u_xlat16_3.x = float(1.0) / u_xlat16_3.x;
    u_xlat16_6 = u_xlat16_6 * u_xlat16_3.x;
#ifdef UNITY_ADRENO_ES3
    u_xlat16_6 = min(max(u_xlat16_6, 0.0), 1.0);
#else
    u_xlat16_6 = clamp(u_xlat16_6, 0.0, 1.0);
#endif
    u_xlat16_3.x = u_xlat16_6 * -2.0 + 3.0;
    u_xlat16_6 = u_xlat16_6 * u_xlat16_6;
    u_xlat16_6 = u_xlat16_6 * u_xlat16_3.x;
    u_xlat16_3.xyz = vec3(u_xlat16_6) * _HColor.xyz;
    u_xlat0.xyz = u_xlat16_2.xzw * u_xlat16_3.xyz + u_xlat0.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier01 " {
Keywords { "SPOT" }
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToLight[4];
uniform 	vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in highp vec3 in_NORMAL0;
in highp vec4 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out highp vec3 vs_TEXCOORD1;
out highp vec3 vs_TEXCOORD2;
out highp vec4 vs_TEXCOORD3;
out highp vec4 vs_TEXCOORD4;
vec4 u_xlat0;
vec4 u_xlat1;
vec4 u_xlat2;
float u_xlat10;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy;
    u_xlat1.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat1.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat1.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat10 = dot(u_xlat1.xyz, u_xlat1.xyz);
    u_xlat10 = inversesqrt(u_xlat10);
    vs_TEXCOORD1.xyz = vec3(u_xlat10) * u_xlat1.xyz;
    vs_TEXCOORD2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[3] * in_POSITION0.wwww + u_xlat0;
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_WorldToLight[1];
    u_xlat1 = hlslcc_mtx4x4unity_WorldToLight[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToLight[2] * u_xlat0.zzzz + u_xlat1;
    vs_TEXCOORD3 = hlslcc_mtx4x4unity_WorldToLight[3] * u_xlat0.wwww + u_xlat1;
    vs_TEXCOORD4 = vec4(0.0, 0.0, 0.0, 0.0);
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec3 _WorldSpaceCameraPos;
uniform 	vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 _LightColor0;
uniform 	mediump vec4 _SpecColor;
uniform 	vec4 hlslcc_mtx4x4unity_WorldToLight[4];
uniform 	mediump vec4 _Color;
uniform 	mediump float _Smoothness;
uniform 	mediump vec4 _HColor;
uniform 	mediump float _RampThreshold;
uniform 	mediump float _RampSmooth;
uniform 	mediump float _SpecSmooth;
UNITY_LOCATION(0) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(1) uniform highp sampler2D _LightTexture0;
UNITY_LOCATION(2) uniform highp sampler2D _LightTextureB0;
in mediump vec2 vs_TEXCOORD0;
in highp vec3 vs_TEXCOORD1;
in highp vec3 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
vec4 u_xlat1;
mediump vec3 u_xlat16_1;
mediump vec4 u_xlat16_2;
mediump vec3 u_xlat16_3;
vec2 u_xlat4;
mediump float u_xlat16_6;
mediump float u_xlat16_7;
bool u_xlatb8;
mediump float u_xlat16_10;
float u_xlat12;
mediump float u_xlat16_14;
void main()
{
    u_xlat0.xyz = (-vs_TEXCOORD2.xyz) + _WorldSpaceLightPos0.xyz;
    u_xlat12 = dot(u_xlat0.xyz, u_xlat0.xyz);
    u_xlat12 = inversesqrt(u_xlat12);
    u_xlat0.xyz = vec3(u_xlat12) * u_xlat0.xyz;
    u_xlat1.xyz = (-vs_TEXCOORD2.xyz) + _WorldSpaceCameraPos.xyz;
    u_xlat12 = dot(u_xlat1.xyz, u_xlat1.xyz);
    u_xlat12 = inversesqrt(u_xlat12);
    u_xlat16_2.xyz = u_xlat1.xyz * vec3(u_xlat12) + u_xlat0.xyz;
    u_xlat16_14 = dot(u_xlat16_2.xyz, u_xlat16_2.xyz);
    u_xlat16_14 = inversesqrt(u_xlat16_14);
    u_xlat16_2.xyz = vec3(u_xlat16_14) * u_xlat16_2.xyz;
    u_xlat16_14 = dot(vs_TEXCOORD1.xyz, vs_TEXCOORD1.xyz);
    u_xlat16_14 = inversesqrt(u_xlat16_14);
    u_xlat16_3.xyz = vec3(u_xlat16_14) * vs_TEXCOORD1.xyz;
    u_xlat16_2.x = dot(u_xlat16_3.xyz, u_xlat16_2.xyz);
    u_xlat16_2.y = dot(u_xlat16_3.xyz, u_xlat0.xyz);
    u_xlat16_2.xy = max(u_xlat16_2.xy, vec2(0.0, 0.0));
    u_xlat0.x = log2(u_xlat16_2.x);
    u_xlat16_2.x = _Smoothness * 128.0;
    u_xlat0.x = u_xlat0.x * u_xlat16_2.x;
    u_xlat0.x = exp2(u_xlat0.x);
    u_xlat16_2.x = (-_SpecSmooth) * 0.5 + 0.5;
    u_xlat0.x = u_xlat0.x * 2.0 + (-u_xlat16_2.x);
    u_xlat16_10 = _SpecSmooth * 0.5 + 0.5;
    u_xlat4.x = (-u_xlat16_2.x) + u_xlat16_10;
    u_xlat4.x = float(1.0) / u_xlat4.x;
    u_xlat0.x = u_xlat4.x * u_xlat0.x;
#ifdef UNITY_ADRENO_ES3
    u_xlat0.x = min(max(u_xlat0.x, 0.0), 1.0);
#else
    u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);
#endif
    u_xlat4.x = u_xlat0.x * -2.0 + 3.0;
    u_xlat0.x = u_xlat0.x * u_xlat0.x;
    u_xlat0.x = u_xlat0.x * u_xlat4.x;
    u_xlat1 = vs_TEXCOORD2.yyyy * hlslcc_mtx4x4unity_WorldToLight[1];
    u_xlat1 = hlslcc_mtx4x4unity_WorldToLight[0] * vs_TEXCOORD2.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToLight[2] * vs_TEXCOORD2.zzzz + u_xlat1;
    u_xlat1 = u_xlat1 + hlslcc_mtx4x4unity_WorldToLight[3];
    u_xlat4.xy = u_xlat1.xy / u_xlat1.ww;
    u_xlat4.xy = u_xlat4.xy + vec2(0.5, 0.5);
    u_xlat4.x = texture(_LightTexture0, u_xlat4.xy).w;
#ifdef UNITY_ADRENO_ES3
    u_xlatb8 = !!(0.0<u_xlat1.z);
#else
    u_xlatb8 = 0.0<u_xlat1.z;
#endif
    u_xlat12 = dot(u_xlat1.xyz, u_xlat1.xyz);
    u_xlat12 = texture(_LightTextureB0, vec2(u_xlat12)).x;
    u_xlat16_2.x = (u_xlatb8) ? 1.0 : 0.0;
    u_xlat16_2.x = u_xlat4.x * u_xlat16_2.x;
    u_xlat16_2.x = u_xlat12 * u_xlat16_2.x;
    u_xlat16_2.xzw = u_xlat16_2.xxx * _LightColor0.xyz;
    u_xlat16_3.xyz = u_xlat16_2.xzw * _SpecColor.xyz;
    u_xlat0.xyz = u_xlat0.xxx * u_xlat16_3.xyz;
    u_xlat16_1.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_3.xyz = u_xlat16_1.xyz * _Color.xyz;
    u_xlat16_2.xzw = u_xlat16_2.xzw * u_xlat16_3.xyz;
    u_xlat16_3.x = (-_RampSmooth) * 0.5 + _RampThreshold;
    u_xlat16_6 = u_xlat16_2.y + (-u_xlat16_3.x);
    u_xlat16_7 = _RampSmooth * 0.5 + _RampThreshold;
    u_xlat16_3.x = (-u_xlat16_3.x) + u_xlat16_7;
    u_xlat16_3.x = float(1.0) / u_xlat16_3.x;
    u_xlat16_6 = u_xlat16_6 * u_xlat16_3.x;
#ifdef UNITY_ADRENO_ES3
    u_xlat16_6 = min(max(u_xlat16_6, 0.0), 1.0);
#else
    u_xlat16_6 = clamp(u_xlat16_6, 0.0, 1.0);
#endif
    u_xlat16_3.x = u_xlat16_6 * -2.0 + 3.0;
    u_xlat16_6 = u_xlat16_6 * u_xlat16_6;
    u_xlat16_6 = u_xlat16_6 * u_xlat16_3.x;
    u_xlat16_3.xyz = vec3(u_xlat16_6) * _HColor.xyz;
    u_xlat0.xyz = u_xlat16_2.xzw * u_xlat16_3.xyz + u_xlat0.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier02 " {
Keywords { "SPOT" }
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToLight[4];
uniform 	vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in highp vec3 in_NORMAL0;
in highp vec4 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out highp vec3 vs_TEXCOORD1;
out highp vec3 vs_TEXCOORD2;
out highp vec4 vs_TEXCOORD3;
out highp vec4 vs_TEXCOORD4;
vec4 u_xlat0;
vec4 u_xlat1;
vec4 u_xlat2;
float u_xlat10;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy;
    u_xlat1.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat1.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat1.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat10 = dot(u_xlat1.xyz, u_xlat1.xyz);
    u_xlat10 = inversesqrt(u_xlat10);
    vs_TEXCOORD1.xyz = vec3(u_xlat10) * u_xlat1.xyz;
    vs_TEXCOORD2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[3] * in_POSITION0.wwww + u_xlat0;
    u_xlat1 = u_xlat0.yyyy * hlslcc_mtx4x4unity_WorldToLight[1];
    u_xlat1 = hlslcc_mtx4x4unity_WorldToLight[0] * u_xlat0.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToLight[2] * u_xlat0.zzzz + u_xlat1;
    vs_TEXCOORD3 = hlslcc_mtx4x4unity_WorldToLight[3] * u_xlat0.wwww + u_xlat1;
    vs_TEXCOORD4 = vec4(0.0, 0.0, 0.0, 0.0);
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec3 _WorldSpaceCameraPos;
uniform 	vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 _LightColor0;
uniform 	mediump vec4 _SpecColor;
uniform 	vec4 hlslcc_mtx4x4unity_WorldToLight[4];
uniform 	mediump vec4 _Color;
uniform 	mediump float _Smoothness;
uniform 	mediump vec4 _HColor;
uniform 	mediump float _RampThreshold;
uniform 	mediump float _RampSmooth;
uniform 	mediump float _SpecSmooth;
UNITY_LOCATION(0) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(1) uniform highp sampler2D _LightTexture0;
UNITY_LOCATION(2) uniform highp sampler2D _LightTextureB0;
in mediump vec2 vs_TEXCOORD0;
in highp vec3 vs_TEXCOORD1;
in highp vec3 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
vec4 u_xlat1;
mediump vec3 u_xlat16_1;
mediump vec4 u_xlat16_2;
mediump vec3 u_xlat16_3;
vec2 u_xlat4;
mediump float u_xlat16_6;
mediump float u_xlat16_7;
bool u_xlatb8;
mediump float u_xlat16_10;
float u_xlat12;
mediump float u_xlat16_14;
void main()
{
    u_xlat0.xyz = (-vs_TEXCOORD2.xyz) + _WorldSpaceLightPos0.xyz;
    u_xlat12 = dot(u_xlat0.xyz, u_xlat0.xyz);
    u_xlat12 = inversesqrt(u_xlat12);
    u_xlat0.xyz = vec3(u_xlat12) * u_xlat0.xyz;
    u_xlat1.xyz = (-vs_TEXCOORD2.xyz) + _WorldSpaceCameraPos.xyz;
    u_xlat12 = dot(u_xlat1.xyz, u_xlat1.xyz);
    u_xlat12 = inversesqrt(u_xlat12);
    u_xlat16_2.xyz = u_xlat1.xyz * vec3(u_xlat12) + u_xlat0.xyz;
    u_xlat16_14 = dot(u_xlat16_2.xyz, u_xlat16_2.xyz);
    u_xlat16_14 = inversesqrt(u_xlat16_14);
    u_xlat16_2.xyz = vec3(u_xlat16_14) * u_xlat16_2.xyz;
    u_xlat16_14 = dot(vs_TEXCOORD1.xyz, vs_TEXCOORD1.xyz);
    u_xlat16_14 = inversesqrt(u_xlat16_14);
    u_xlat16_3.xyz = vec3(u_xlat16_14) * vs_TEXCOORD1.xyz;
    u_xlat16_2.x = dot(u_xlat16_3.xyz, u_xlat16_2.xyz);
    u_xlat16_2.y = dot(u_xlat16_3.xyz, u_xlat0.xyz);
    u_xlat16_2.xy = max(u_xlat16_2.xy, vec2(0.0, 0.0));
    u_xlat0.x = log2(u_xlat16_2.x);
    u_xlat16_2.x = _Smoothness * 128.0;
    u_xlat0.x = u_xlat0.x * u_xlat16_2.x;
    u_xlat0.x = exp2(u_xlat0.x);
    u_xlat16_2.x = (-_SpecSmooth) * 0.5 + 0.5;
    u_xlat0.x = u_xlat0.x * 2.0 + (-u_xlat16_2.x);
    u_xlat16_10 = _SpecSmooth * 0.5 + 0.5;
    u_xlat4.x = (-u_xlat16_2.x) + u_xlat16_10;
    u_xlat4.x = float(1.0) / u_xlat4.x;
    u_xlat0.x = u_xlat4.x * u_xlat0.x;
#ifdef UNITY_ADRENO_ES3
    u_xlat0.x = min(max(u_xlat0.x, 0.0), 1.0);
#else
    u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);
#endif
    u_xlat4.x = u_xlat0.x * -2.0 + 3.0;
    u_xlat0.x = u_xlat0.x * u_xlat0.x;
    u_xlat0.x = u_xlat0.x * u_xlat4.x;
    u_xlat1 = vs_TEXCOORD2.yyyy * hlslcc_mtx4x4unity_WorldToLight[1];
    u_xlat1 = hlslcc_mtx4x4unity_WorldToLight[0] * vs_TEXCOORD2.xxxx + u_xlat1;
    u_xlat1 = hlslcc_mtx4x4unity_WorldToLight[2] * vs_TEXCOORD2.zzzz + u_xlat1;
    u_xlat1 = u_xlat1 + hlslcc_mtx4x4unity_WorldToLight[3];
    u_xlat4.xy = u_xlat1.xy / u_xlat1.ww;
    u_xlat4.xy = u_xlat4.xy + vec2(0.5, 0.5);
    u_xlat4.x = texture(_LightTexture0, u_xlat4.xy).w;
#ifdef UNITY_ADRENO_ES3
    u_xlatb8 = !!(0.0<u_xlat1.z);
#else
    u_xlatb8 = 0.0<u_xlat1.z;
#endif
    u_xlat12 = dot(u_xlat1.xyz, u_xlat1.xyz);
    u_xlat12 = texture(_LightTextureB0, vec2(u_xlat12)).x;
    u_xlat16_2.x = (u_xlatb8) ? 1.0 : 0.0;
    u_xlat16_2.x = u_xlat4.x * u_xlat16_2.x;
    u_xlat16_2.x = u_xlat12 * u_xlat16_2.x;
    u_xlat16_2.xzw = u_xlat16_2.xxx * _LightColor0.xyz;
    u_xlat16_3.xyz = u_xlat16_2.xzw * _SpecColor.xyz;
    u_xlat0.xyz = u_xlat0.xxx * u_xlat16_3.xyz;
    u_xlat16_1.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_3.xyz = u_xlat16_1.xyz * _Color.xyz;
    u_xlat16_2.xzw = u_xlat16_2.xzw * u_xlat16_3.xyz;
    u_xlat16_3.x = (-_RampSmooth) * 0.5 + _RampThreshold;
    u_xlat16_6 = u_xlat16_2.y + (-u_xlat16_3.x);
    u_xlat16_7 = _RampSmooth * 0.5 + _RampThreshold;
    u_xlat16_3.x = (-u_xlat16_3.x) + u_xlat16_7;
    u_xlat16_3.x = float(1.0) / u_xlat16_3.x;
    u_xlat16_6 = u_xlat16_6 * u_xlat16_3.x;
#ifdef UNITY_ADRENO_ES3
    u_xlat16_6 = min(max(u_xlat16_6, 0.0), 1.0);
#else
    u_xlat16_6 = clamp(u_xlat16_6, 0.0, 1.0);
#endif
    u_xlat16_3.x = u_xlat16_6 * -2.0 + 3.0;
    u_xlat16_6 = u_xlat16_6 * u_xlat16_6;
    u_xlat16_6 = u_xlat16_6 * u_xlat16_3.x;
    u_xlat16_3.xyz = vec3(u_xlat16_6) * _HColor.xyz;
    u_xlat0.xyz = u_xlat16_2.xzw * u_xlat16_3.xyz + u_xlat0.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "vulkan hw_tier00 " {
Keywords { "SPOT" }
"; SPIR-V
; Version: 1.0
; Generator: Khronos Glslang Reference Front End; 6
; Bound: 196
; Schema: 0
                                                      OpCapability Shader 
                                               %1 = OpExtInstImport "GLSL.std.450" 
                                                      OpMemoryModel Logical GLSL450 
                                                      OpEntryPoint Vertex %4 "main" %11 %75 %85 %101 %106 %137 %143 %179 %187 
                                                      OpName vs_TEXCOORD0 "vs_TEXCOORD0" 
                                                      OpName vs_TEXCOORD1 "vs_TEXCOORD1" 
                                                      OpName vs_TEXCOORD2 "vs_TEXCOORD2" 
                                                      OpName vs_TEXCOORD3 "vs_TEXCOORD3" 
                                                      OpName vs_TEXCOORD4 "vs_TEXCOORD4" 
                                                      OpDecorate %11 Location 11 
                                                      OpDecorate %16 ArrayStride 16 
                                                      OpDecorate %17 ArrayStride 17 
                                                      OpDecorate %18 ArrayStride 18 
                                                      OpDecorate %19 ArrayStride 19 
                                                      OpMemberDecorate %20 0 Offset 20 
                                                      OpMemberDecorate %20 1 Offset 20 
                                                      OpMemberDecorate %20 2 Offset 20 
                                                      OpMemberDecorate %20 3 Offset 20 
                                                      OpMemberDecorate %20 4 Offset 20 
                                                      OpDecorate %20 Block 
                                                      OpDecorate %22 DescriptorSet 22 
                                                      OpDecorate %22 Binding 22 
                                                      OpMemberDecorate %73 0 BuiltIn 73 
                                                      OpMemberDecorate %73 1 BuiltIn 73 
                                                      OpMemberDecorate %73 2 BuiltIn 73 
                                                      OpDecorate %73 Block 
                                                      OpDecorate %85 Location 85 
                                                      OpDecorate vs_TEXCOORD0 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD0 Location 101 
                                                      OpDecorate %106 Location 106 
                                                      OpDecorate vs_TEXCOORD1 Location 137 
                                                      OpDecorate vs_TEXCOORD2 Location 143 
                                                      OpDecorate vs_TEXCOORD3 Location 179 
                                                      OpDecorate vs_TEXCOORD4 Location 187 
                                               %2 = OpTypeVoid 
                                               %3 = OpTypeFunction %2 
                                               %6 = OpTypeFloat 32 
                                               %7 = OpTypeVector %6 4 
                                               %8 = OpTypePointer Private %7 
                                Private f32_4* %9 = OpVariable Private 
                                              %10 = OpTypePointer Input %7 
                                 Input f32_4* %11 = OpVariable Input 
                                              %14 = OpTypeInt 32 0 
                                          u32 %15 = OpConstant 4 
                                              %16 = OpTypeArray %7 %15 
                                              %17 = OpTypeArray %7 %15 
                                              %18 = OpTypeArray %7 %15 
                                              %19 = OpTypeArray %7 %15 
                                              %20 = OpTypeStruct %16 %17 %18 %19 %7 
                                              %21 = OpTypePointer Uniform %20 
Uniform struct {f32_4[4]; f32_4[4]; f32_4[4]; f32_4[4]; f32_4;}* %22 = OpVariable Uniform 
                                              %23 = OpTypeInt 32 1 
                                          i32 %24 = OpConstant 0 
                                          i32 %25 = OpConstant 1 
                                              %26 = OpTypePointer Uniform %7 
                                          i32 %37 = OpConstant 2 
                               Private f32_4* %45 = OpVariable Private 
                                          i32 %47 = OpConstant 3 
                               Private f32_4* %51 = OpVariable Private 
                                          u32 %71 = OpConstant 1 
                                              %72 = OpTypeArray %6 %71 
                                              %73 = OpTypeStruct %7 %6 %72 
                                              %74 = OpTypePointer Output %73 
         Output struct {f32_4; f32; f32[1];}* %75 = OpVariable Output 
                                              %83 = OpTypePointer Output %7 
                                 Input f32_4* %85 = OpVariable Input 
                                              %86 = OpTypeVector %6 2 
                                          i32 %89 = OpConstant 4 
                                             %100 = OpTypePointer Output %86 
                       Output f32_2* vs_TEXCOORD0 = OpVariable Output 
                                             %104 = OpTypeVector %6 3 
                                             %105 = OpTypePointer Input %104 
                                Input f32_3* %106 = OpVariable Input 
                                         u32 %112 = OpConstant 0 
                                             %113 = OpTypePointer Private %6 
                                         u32 %126 = OpConstant 2 
                                Private f32* %128 = OpVariable Private 
                                             %136 = OpTypePointer Output %104 
                       Output f32_3* vs_TEXCOORD1 = OpVariable Output 
                       Output f32_3* vs_TEXCOORD2 = OpVariable Output 
                       Output f32_4* vs_TEXCOORD3 = OpVariable Output 
                       Output f32_4* vs_TEXCOORD4 = OpVariable Output 
                                         f32 %188 = OpConstant 3.674022E-40 
                                       f32_4 %189 = OpConstantComposite %188 %188 %188 %188 
                                             %190 = OpTypePointer Output %6 
                                          void %4 = OpFunction None %3 
                                               %5 = OpLabel 
                                        f32_4 %12 = OpLoad %11 
                                        f32_4 %13 = OpVectorShuffle %12 %12 1 1 1 1 
                               Uniform f32_4* %27 = OpAccessChain %22 %24 %25 
                                        f32_4 %28 = OpLoad %27 
                                        f32_4 %29 = OpFMul %13 %28 
                                                      OpStore %9 %29 
                               Uniform f32_4* %30 = OpAccessChain %22 %24 %24 
                                        f32_4 %31 = OpLoad %30 
                                        f32_4 %32 = OpLoad %11 
                                        f32_4 %33 = OpVectorShuffle %32 %32 0 0 0 0 
                                        f32_4 %34 = OpFMul %31 %33 
                                        f32_4 %35 = OpLoad %9 
                                        f32_4 %36 = OpFAdd %34 %35 
                                                      OpStore %9 %36 
                               Uniform f32_4* %38 = OpAccessChain %22 %24 %37 
                                        f32_4 %39 = OpLoad %38 
                                        f32_4 %40 = OpLoad %11 
                                        f32_4 %41 = OpVectorShuffle %40 %40 2 2 2 2 
                                        f32_4 %42 = OpFMul %39 %41 
                                        f32_4 %43 = OpLoad %9 
                                        f32_4 %44 = OpFAdd %42 %43 
                                                      OpStore %9 %44 
                                        f32_4 %46 = OpLoad %9 
                               Uniform f32_4* %48 = OpAccessChain %22 %24 %47 
                                        f32_4 %49 = OpLoad %48 
                                        f32_4 %50 = OpFAdd %46 %49 
                                                      OpStore %45 %50 
                                        f32_4 %52 = OpLoad %45 
                                        f32_4 %53 = OpVectorShuffle %52 %52 1 1 1 1 
                               Uniform f32_4* %54 = OpAccessChain %22 %37 %25 
                                        f32_4 %55 = OpLoad %54 
                                        f32_4 %56 = OpFMul %53 %55 
                                                      OpStore %51 %56 
                               Uniform f32_4* %57 = OpAccessChain %22 %37 %24 
                                        f32_4 %58 = OpLoad %57 
                                        f32_4 %59 = OpLoad %45 
                                        f32_4 %60 = OpVectorShuffle %59 %59 0 0 0 0 
                                        f32_4 %61 = OpFMul %58 %60 
                                        f32_4 %62 = OpLoad %51 
                                        f32_4 %63 = OpFAdd %61 %62 
                                                      OpStore %51 %63 
                               Uniform f32_4* %64 = OpAccessChain %22 %37 %37 
                                        f32_4 %65 = OpLoad %64 
                                        f32_4 %66 = OpLoad %45 
                                        f32_4 %67 = OpVectorShuffle %66 %66 2 2 2 2 
                                        f32_4 %68 = OpFMul %65 %67 
                                        f32_4 %69 = OpLoad %51 
                                        f32_4 %70 = OpFAdd %68 %69 
                                                      OpStore %51 %70 
                               Uniform f32_4* %76 = OpAccessChain %22 %37 %47 
                                        f32_4 %77 = OpLoad %76 
                                        f32_4 %78 = OpLoad %45 
                                        f32_4 %79 = OpVectorShuffle %78 %78 3 3 3 3 
                                        f32_4 %80 = OpFMul %77 %79 
                                        f32_4 %81 = OpLoad %51 
                                        f32_4 %82 = OpFAdd %80 %81 
                                Output f32_4* %84 = OpAccessChain %75 %24 
                                                      OpStore %84 %82 
                                        f32_4 %87 = OpLoad %85 
                                        f32_2 %88 = OpVectorShuffle %87 %87 0 1 
                               Uniform f32_4* %90 = OpAccessChain %22 %89 
                                        f32_4 %91 = OpLoad %90 
                                        f32_2 %92 = OpVectorShuffle %91 %91 0 1 
                                        f32_2 %93 = OpFMul %88 %92 
                               Uniform f32_4* %94 = OpAccessChain %22 %89 
                                        f32_4 %95 = OpLoad %94 
                                        f32_2 %96 = OpVectorShuffle %95 %95 2 3 
                                        f32_2 %97 = OpFAdd %93 %96 
                                        f32_4 %98 = OpLoad %45 
                                        f32_4 %99 = OpVectorShuffle %98 %97 4 5 2 3 
                                                      OpStore %45 %99 
                                       f32_4 %102 = OpLoad %45 
                                       f32_2 %103 = OpVectorShuffle %102 %102 0 1 
                                                      OpStore vs_TEXCOORD0 %103 
                                       f32_3 %107 = OpLoad %106 
                              Uniform f32_4* %108 = OpAccessChain %22 %25 %24 
                                       f32_4 %109 = OpLoad %108 
                                       f32_3 %110 = OpVectorShuffle %109 %109 0 1 2 
                                         f32 %111 = OpDot %107 %110 
                                Private f32* %114 = OpAccessChain %45 %112 
                                                      OpStore %114 %111 
                                       f32_3 %115 = OpLoad %106 
                              Uniform f32_4* %116 = OpAccessChain %22 %25 %25 
                                       f32_4 %117 = OpLoad %116 
                                       f32_3 %118 = OpVectorShuffle %117 %117 0 1 2 
                                         f32 %119 = OpDot %115 %118 
                                Private f32* %120 = OpAccessChain %45 %71 
                                                      OpStore %120 %119 
                                       f32_3 %121 = OpLoad %106 
                              Uniform f32_4* %122 = OpAccessChain %22 %25 %37 
                                       f32_4 %123 = OpLoad %122 
                                       f32_3 %124 = OpVectorShuffle %123 %123 0 1 2 
                                         f32 %125 = OpDot %121 %124 
                                Private f32* %127 = OpAccessChain %45 %126 
                                                      OpStore %127 %125 
                                       f32_4 %129 = OpLoad %45 
                                       f32_3 %130 = OpVectorShuffle %129 %129 0 1 2 
                                       f32_4 %131 = OpLoad %45 
                                       f32_3 %132 = OpVectorShuffle %131 %131 0 1 2 
                                         f32 %133 = OpDot %130 %132 
                                                      OpStore %128 %133 
                                         f32 %134 = OpLoad %128 
                                         f32 %135 = OpExtInst %1 32 %134 
                                                      OpStore %128 %135 
                                         f32 %138 = OpLoad %128 
                                       f32_3 %139 = OpCompositeConstruct %138 %138 %138 
                                       f32_4 %140 = OpLoad %45 
                                       f32_3 %141 = OpVectorShuffle %140 %140 0 1 2 
                                       f32_3 %142 = OpFMul %139 %141 
                                                      OpStore vs_TEXCOORD1 %142 
                              Uniform f32_4* %144 = OpAccessChain %22 %24 %47 
                                       f32_4 %145 = OpLoad %144 
                                       f32_3 %146 = OpVectorShuffle %145 %145 0 1 2 
                                       f32_4 %147 = OpLoad %11 
                                       f32_3 %148 = OpVectorShuffle %147 %147 3 3 3 
                                       f32_3 %149 = OpFMul %146 %148 
                                       f32_4 %150 = OpLoad %9 
                                       f32_3 %151 = OpVectorShuffle %150 %150 0 1 2 
                                       f32_3 %152 = OpFAdd %149 %151 
                                                      OpStore vs_TEXCOORD2 %152 
                              Uniform f32_4* %153 = OpAccessChain %22 %24 %47 
                                       f32_4 %154 = OpLoad %153 
                                       f32_4 %155 = OpLoad %11 
                                       f32_4 %156 = OpVectorShuffle %155 %155 3 3 3 3 
                                       f32_4 %157 = OpFMul %154 %156 
                                       f32_4 %158 = OpLoad %9 
                                       f32_4 %159 = OpFAdd %157 %158 
                                                      OpStore %9 %159 
                                       f32_4 %160 = OpLoad %9 
                                       f32_4 %161 = OpVectorShuffle %160 %160 1 1 1 1 
                              Uniform f32_4* %162 = OpAccessChain %22 %47 %25 
                                       f32_4 %163 = OpLoad %162 
                                       f32_4 %164 = OpFMul %161 %163 
                                                      OpStore %45 %164 
                              Uniform f32_4* %165 = OpAccessChain %22 %47 %24 
                                       f32_4 %166 = OpLoad %165 
                                       f32_4 %167 = OpLoad %9 
                                       f32_4 %168 = OpVectorShuffle %167 %167 0 0 0 0 
                                       f32_4 %169 = OpFMul %166 %168 
                                       f32_4 %170 = OpLoad %45 
                                       f32_4 %171 = OpFAdd %169 %170 
                                                      OpStore %45 %171 
                              Uniform f32_4* %172 = OpAccessChain %22 %47 %37 
                                       f32_4 %173 = OpLoad %172 
                                       f32_4 %174 = OpLoad %9 
                                       f32_4 %175 = OpVectorShuffle %174 %174 2 2 2 2 
                                       f32_4 %176 = OpFMul %173 %175 
                                       f32_4 %177 = OpLoad %45 
                                       f32_4 %178 = OpFAdd %176 %177 
                                                      OpStore %45 %178 
                              Uniform f32_4* %180 = OpAccessChain %22 %47 %47 
                                       f32_4 %181 = OpLoad %180 
                                       f32_4 %182 = OpLoad %9 
                                       f32_4 %183 = OpVectorShuffle %182 %182 3 3 3 3 
                                       f32_4 %184 = OpFMul %181 %183 
                                       f32_4 %185 = OpLoad %45 
                                       f32_4 %186 = OpFAdd %184 %185 
                                                      OpStore vs_TEXCOORD3 %186 
                                                      OpStore vs_TEXCOORD4 %189 
                                 Output f32* %191 = OpAccessChain %75 %24 %71 
                                         f32 %192 = OpLoad %191 
                                         f32 %193 = OpFNegate %192 
                                 Output f32* %194 = OpAccessChain %75 %24 %71 
                                                      OpStore %194 %193 
                                                      OpReturn
                                                      OpFunctionEnd
; SPIR-V
; Version: 1.0
; Generator: Khronos Glslang Reference Front End; 6
; Bound: 394
; Schema: 0
                                                      OpCapability Shader 
                                               %1 = OpExtInstImport "GLSL.std.450" 
                                                      OpMemoryModel Logical GLSL450 
                                                      OpEntryPoint Fragment %4 "main" %11 %82 %306 %387 
                                                      OpExecutionMode %4 OriginUpperLeft 
                                                      OpName vs_TEXCOORD2 "vs_TEXCOORD2" 
                                                      OpName vs_TEXCOORD1 "vs_TEXCOORD1" 
                                                      OpName vs_TEXCOORD0 "vs_TEXCOORD0" 
                                                      OpDecorate vs_TEXCOORD2 Location 11 
                                                      OpDecorate %17 ArrayStride 17 
                                                      OpMemberDecorate %18 0 Offset 18 
                                                      OpMemberDecorate %18 1 Offset 18 
                                                      OpMemberDecorate %18 2 RelaxedPrecision 
                                                      OpMemberDecorate %18 2 Offset 18 
                                                      OpMemberDecorate %18 3 RelaxedPrecision 
                                                      OpMemberDecorate %18 3 Offset 18 
                                                      OpMemberDecorate %18 4 Offset 18 
                                                      OpMemberDecorate %18 5 RelaxedPrecision 
                                                      OpMemberDecorate %18 5 Offset 18 
                                                      OpMemberDecorate %18 6 RelaxedPrecision 
                                                      OpMemberDecorate %18 6 Offset 18 
                                                      OpMemberDecorate %18 7 RelaxedPrecision 
                                                      OpMemberDecorate %18 7 Offset 18 
                                                      OpMemberDecorate %18 8 RelaxedPrecision 
                                                      OpMemberDecorate %18 8 Offset 18 
                                                      OpMemberDecorate %18 9 RelaxedPrecision 
                                                      OpMemberDecorate %18 9 Offset 18 
                                                      OpMemberDecorate %18 10 RelaxedPrecision 
                                                      OpMemberDecorate %18 10 Offset 18 
                                                      OpDecorate %18 Block 
                                                      OpDecorate %20 DescriptorSet 20 
                                                      OpDecorate %20 Binding 20 
                                                      OpDecorate %57 RelaxedPrecision 
                                                      OpDecorate %67 RelaxedPrecision 
                                                      OpDecorate %68 RelaxedPrecision 
                                                      OpDecorate %69 RelaxedPrecision 
                                                      OpDecorate %70 RelaxedPrecision 
                                                      OpDecorate %71 RelaxedPrecision 
                                                      OpDecorate %72 RelaxedPrecision 
                                                      OpDecorate %73 RelaxedPrecision 
                                                      OpDecorate %74 RelaxedPrecision 
                                                      OpDecorate %75 RelaxedPrecision 
                                                      OpDecorate %76 RelaxedPrecision 
                                                      OpDecorate %77 RelaxedPrecision 
                                                      OpDecorate %78 RelaxedPrecision 
                                                      OpDecorate %79 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD1 Location 82 
                                                      OpDecorate %86 RelaxedPrecision 
                                                      OpDecorate %87 RelaxedPrecision 
                                                      OpDecorate %88 RelaxedPrecision 
                                                      OpDecorate %89 RelaxedPrecision 
                                                      OpDecorate %93 RelaxedPrecision 
                                                      OpDecorate %94 RelaxedPrecision 
                                                      OpDecorate %95 RelaxedPrecision 
                                                      OpDecorate %96 RelaxedPrecision 
                                                      OpDecorate %99 RelaxedPrecision 
                                                      OpDecorate %105 RelaxedPrecision 
                                                      OpDecorate %106 RelaxedPrecision 
                                                      OpDecorate %109 RelaxedPrecision 
                                                      OpDecorate %113 RelaxedPrecision 
                                                      OpDecorate %114 RelaxedPrecision 
                                                      OpDecorate %119 RelaxedPrecision 
                                                      OpDecorate %121 RelaxedPrecision 
                                                      OpDecorate %126 RelaxedPrecision 
                                                      OpDecorate %135 RelaxedPrecision 
                                                      OpDecorate %136 RelaxedPrecision 
                                                      OpDecorate %138 RelaxedPrecision 
                                                      OpDecorate %139 RelaxedPrecision 
                                                      OpDecorate %146 RelaxedPrecision 
                                                      OpDecorate %147 RelaxedPrecision 
                                                      OpDecorate %150 RelaxedPrecision 
                                                      OpDecorate %152 RelaxedPrecision 
                                                      OpDecorate %153 RelaxedPrecision 
                                                      OpDecorate %154 RelaxedPrecision 
                                                      OpDecorate %158 RelaxedPrecision 
                                                      OpDecorate %159 RelaxedPrecision 
                                                      OpDecorate %160 RelaxedPrecision 
                                                      OpDecorate %161 RelaxedPrecision 
                                                      OpDecorate %233 DescriptorSet 233 
                                                      OpDecorate %233 Binding 233 
                                                      OpDecorate %237 DescriptorSet 237 
                                                      OpDecorate %237 Binding 237 
                                                      OpDecorate %258 DescriptorSet 258 
                                                      OpDecorate %258 Binding 258 
                                                      OpDecorate %260 DescriptorSet 260 
                                                      OpDecorate %260 Binding 260 
                                                      OpDecorate %273 RelaxedPrecision 
                                                      OpDecorate %278 RelaxedPrecision 
                                                      OpDecorate %281 RelaxedPrecision 
                                                      OpDecorate %282 RelaxedPrecision 
                                                      OpDecorate %284 RelaxedPrecision 
                                                      OpDecorate %285 RelaxedPrecision 
                                                      OpDecorate %286 RelaxedPrecision 
                                                      OpDecorate %289 RelaxedPrecision 
                                                      OpDecorate %290 RelaxedPrecision 
                                                      OpDecorate %292 RelaxedPrecision 
                                                      OpDecorate %293 RelaxedPrecision 
                                                      OpDecorate %294 RelaxedPrecision 
                                                      OpDecorate %297 RelaxedPrecision 
                                                      OpDecorate %299 RelaxedPrecision 
                                                      OpDecorate %300 RelaxedPrecision 
                                                      OpDecorate %300 DescriptorSet 300 
                                                      OpDecorate %300 Binding 300 
                                                      OpDecorate %301 RelaxedPrecision 
                                                      OpDecorate %302 RelaxedPrecision 
                                                      OpDecorate %302 DescriptorSet 302 
                                                      OpDecorate %302 Binding 302 
                                                      OpDecorate %303 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD0 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD0 Location 306 
                                                      OpDecorate %307 RelaxedPrecision 
                                                      OpDecorate %308 RelaxedPrecision 
                                                      OpDecorate %309 RelaxedPrecision 
                                                      OpDecorate %310 RelaxedPrecision 
                                                      OpDecorate %313 RelaxedPrecision 
                                                      OpDecorate %314 RelaxedPrecision 
                                                      OpDecorate %315 RelaxedPrecision 
                                                      OpDecorate %316 RelaxedPrecision 
                                                      OpDecorate %317 RelaxedPrecision 
                                                      OpDecorate %318 RelaxedPrecision 
                                                      OpDecorate %319 RelaxedPrecision 
                                                      OpDecorate %324 RelaxedPrecision 
                                                      OpDecorate %325 RelaxedPrecision 
                                                      OpDecorate %326 RelaxedPrecision 
                                                      OpDecorate %329 RelaxedPrecision 
                                                      OpDecorate %330 RelaxedPrecision 
                                                      OpDecorate %332 RelaxedPrecision 
                                                      OpDecorate %334 RelaxedPrecision 
                                                      OpDecorate %336 RelaxedPrecision 
                                                      OpDecorate %337 RelaxedPrecision 
                                                      OpDecorate %338 RelaxedPrecision 
                                                      OpDecorate %339 RelaxedPrecision 
                                                      OpDecorate %341 RelaxedPrecision 
                                                      OpDecorate %342 RelaxedPrecision 
                                                      OpDecorate %344 RelaxedPrecision 
                                                      OpDecorate %345 RelaxedPrecision 
                                                      OpDecorate %347 RelaxedPrecision 
                                                      OpDecorate %348 RelaxedPrecision 
                                                      OpDecorate %349 RelaxedPrecision 
                                                      OpDecorate %350 RelaxedPrecision 
                                                      OpDecorate %353 RelaxedPrecision 
                                                      OpDecorate %354 RelaxedPrecision 
                                                      OpDecorate %356 RelaxedPrecision 
                                                      OpDecorate %358 RelaxedPrecision 
                                                      OpDecorate %359 RelaxedPrecision 
                                                      OpDecorate %360 RelaxedPrecision 
                                                      OpDecorate %361 RelaxedPrecision 
                                                      OpDecorate %362 RelaxedPrecision 
                                                      OpDecorate %363 RelaxedPrecision 
                                                      OpDecorate %364 RelaxedPrecision 
                                                      OpDecorate %366 RelaxedPrecision 
                                                      OpDecorate %367 RelaxedPrecision 
                                                      OpDecorate %368 RelaxedPrecision 
                                                      OpDecorate %369 RelaxedPrecision 
                                                      OpDecorate %371 RelaxedPrecision 
                                                      OpDecorate %372 RelaxedPrecision 
                                                      OpDecorate %373 RelaxedPrecision 
                                                      OpDecorate %374 RelaxedPrecision 
                                                      OpDecorate %377 RelaxedPrecision 
                                                      OpDecorate %378 RelaxedPrecision 
                                                      OpDecorate %379 RelaxedPrecision 
                                                      OpDecorate %380 RelaxedPrecision 
                                                      OpDecorate %381 RelaxedPrecision 
                                                      OpDecorate %382 RelaxedPrecision 
                                                      OpDecorate %383 RelaxedPrecision 
                                                      OpDecorate %387 RelaxedPrecision 
                                                      OpDecorate %387 Location 387 
                                               %2 = OpTypeVoid 
                                               %3 = OpTypeFunction %2 
                                               %6 = OpTypeFloat 32 
                                               %7 = OpTypeVector %6 3 
                                               %8 = OpTypePointer Private %7 
                                Private f32_3* %9 = OpVariable Private 
                                              %10 = OpTypePointer Input %7 
                        Input f32_3* vs_TEXCOORD2 = OpVariable Input 
                                              %14 = OpTypeVector %6 4 
                                              %15 = OpTypeInt 32 0 
                                          u32 %16 = OpConstant 4 
                                              %17 = OpTypeArray %14 %16 
                                              %18 = OpTypeStruct %7 %14 %14 %14 %17 %14 %6 %14 %6 %6 %6 
                                              %19 = OpTypePointer Uniform %18 
Uniform struct {f32_3; f32_4; f32_4; f32_4; f32_4[4]; f32_4; f32; f32_4; f32; f32; f32;}* %20 = OpVariable Uniform 
                                              %21 = OpTypeInt 32 1 
                                          i32 %22 = OpConstant 1 
                                              %23 = OpTypePointer Uniform %14 
                                              %28 = OpTypePointer Private %6 
                                 Private f32* %29 = OpVariable Private 
                                              %39 = OpTypePointer Private %14 
                               Private f32_4* %40 = OpVariable Private 
                                          i32 %43 = OpConstant 0 
                                              %44 = OpTypePointer Uniform %7 
                               Private f32_4* %57 = OpVariable Private 
                                 Private f32* %67 = OpVariable Private 
                        Input f32_3* vs_TEXCOORD1 = OpVariable Input 
                               Private f32_3* %88 = OpVariable Private 
                                          u32 %97 = OpConstant 0 
                                         u32 %102 = OpConstant 1 
                                             %104 = OpTypeVector %6 2 
                                         f32 %107 = OpConstant 3.674022E-40 
                                       f32_2 %108 = OpConstantComposite %107 %107 
                                         i32 %116 = OpConstant 6 
                                             %117 = OpTypePointer Uniform %6 
                                         f32 %120 = OpConstant 3.674022E-40 
                                         i32 %133 = OpConstant 10 
                                         f32 %137 = OpConstant 3.674022E-40 
                                         f32 %143 = OpConstant 3.674022E-40 
                                Private f32* %150 = OpVariable Private 
                                             %155 = OpTypePointer Private %104 
                              Private f32_2* %156 = OpVariable Private 
                                         f32 %163 = OpConstant 3.674022E-40 
                                         f32 %180 = OpConstant 3.674022E-40 
                                         f32 %182 = OpConstant 3.674022E-40 
                                         i32 %199 = OpConstant 4 
                                         i32 %210 = OpConstant 2 
                                         i32 %219 = OpConstant 3 
                                       f32_2 %229 = OpConstantComposite %137 %137 
                                             %231 = OpTypeImage %6 Dim2D 0 0 0 1 Unknown 
                                             %232 = OpTypePointer UniformConstant %231 
        UniformConstant read_only Texture2D* %233 = OpVariable UniformConstant 
                                             %235 = OpTypeSampler 
                                             %236 = OpTypePointer UniformConstant %235 
                    UniformConstant sampler* %237 = OpVariable UniformConstant 
                                             %239 = OpTypeSampledImage %231 
                                         u32 %243 = OpConstant 3 
                                             %246 = OpTypeBool 
                                             %247 = OpTypePointer Private %246 
                               Private bool* %248 = OpVariable Private 
                                         u32 %249 = OpConstant 2 
        UniformConstant read_only Texture2D* %258 = OpVariable UniformConstant 
                    UniformConstant sampler* %260 = OpVariable UniformConstant 
                              Private f32_3* %299 = OpVariable Private 
        UniformConstant read_only Texture2D* %300 = OpVariable UniformConstant 
                    UniformConstant sampler* %302 = OpVariable UniformConstant 
                                             %305 = OpTypePointer Input %104 
                        Input f32_2* vs_TEXCOORD0 = OpVariable Input 
                                         i32 %311 = OpConstant 5 
                                         i32 %322 = OpConstant 9 
                                         i32 %327 = OpConstant 8 
                                Private f32* %332 = OpVariable Private 
                                Private f32* %339 = OpVariable Private 
                                         i32 %375 = OpConstant 7 
                                             %386 = OpTypePointer Output %14 
                               Output f32_4* %387 = OpVariable Output 
                                             %391 = OpTypePointer Output %6 
                                          void %4 = OpFunction None %3 
                                               %5 = OpLabel 
                                        f32_3 %12 = OpLoad vs_TEXCOORD2 
                                        f32_3 %13 = OpFNegate %12 
                               Uniform f32_4* %24 = OpAccessChain %20 %22 
                                        f32_4 %25 = OpLoad %24 
                                        f32_3 %26 = OpVectorShuffle %25 %25 0 1 2 
                                        f32_3 %27 = OpFAdd %13 %26 
                                                      OpStore %9 %27 
                                        f32_3 %30 = OpLoad %9 
                                        f32_3 %31 = OpLoad %9 
                                          f32 %32 = OpDot %30 %31 
                                                      OpStore %29 %32 
                                          f32 %33 = OpLoad %29 
                                          f32 %34 = OpExtInst %1 32 %33 
                                                      OpStore %29 %34 
                                          f32 %35 = OpLoad %29 
                                        f32_3 %36 = OpCompositeConstruct %35 %35 %35 
                                        f32_3 %37 = OpLoad %9 
                                        f32_3 %38 = OpFMul %36 %37 
                                                      OpStore %9 %38 
                                        f32_3 %41 = OpLoad vs_TEXCOORD2 
                                        f32_3 %42 = OpFNegate %41 
                               Uniform f32_3* %45 = OpAccessChain %20 %43 
                                        f32_3 %46 = OpLoad %45 
                                        f32_3 %47 = OpFAdd %42 %46 
                                        f32_4 %48 = OpLoad %40 
                                        f32_4 %49 = OpVectorShuffle %48 %47 4 5 6 3 
                                                      OpStore %40 %49 
                                        f32_4 %50 = OpLoad %40 
                                        f32_3 %51 = OpVectorShuffle %50 %50 0 1 2 
                                        f32_4 %52 = OpLoad %40 
                                        f32_3 %53 = OpVectorShuffle %52 %52 0 1 2 
                                          f32 %54 = OpDot %51 %53 
                                                      OpStore %29 %54 
                                          f32 %55 = OpLoad %29 
                                          f32 %56 = OpExtInst %1 32 %55 
                                                      OpStore %29 %56 
                                        f32_4 %58 = OpLoad %40 
                                        f32_3 %59 = OpVectorShuffle %58 %58 0 1 2 
                                          f32 %60 = OpLoad %29 
                                        f32_3 %61 = OpCompositeConstruct %60 %60 %60 
                                        f32_3 %62 = OpFMul %59 %61 
                                        f32_3 %63 = OpLoad %9 
                                        f32_3 %64 = OpFAdd %62 %63 
                                        f32_4 %65 = OpLoad %57 
                                        f32_4 %66 = OpVectorShuffle %65 %64 4 5 6 3 
                                                      OpStore %57 %66 
                                        f32_4 %68 = OpLoad %57 
                                        f32_3 %69 = OpVectorShuffle %68 %68 0 1 2 
                                        f32_4 %70 = OpLoad %57 
                                        f32_3 %71 = OpVectorShuffle %70 %70 0 1 2 
                                          f32 %72 = OpDot %69 %71 
                                                      OpStore %67 %72 
                                          f32 %73 = OpLoad %67 
                                          f32 %74 = OpExtInst %1 32 %73 
                                                      OpStore %67 %74 
                                          f32 %75 = OpLoad %67 
                                        f32_3 %76 = OpCompositeConstruct %75 %75 %75 
                                        f32_4 %77 = OpLoad %57 
                                        f32_3 %78 = OpVectorShuffle %77 %77 0 1 2 
                                        f32_3 %79 = OpFMul %76 %78 
                                        f32_4 %80 = OpLoad %57 
                                        f32_4 %81 = OpVectorShuffle %80 %79 4 5 6 3 
                                                      OpStore %57 %81 
                                        f32_3 %83 = OpLoad vs_TEXCOORD1 
                                        f32_3 %84 = OpLoad vs_TEXCOORD1 
                                          f32 %85 = OpDot %83 %84 
                                                      OpStore %67 %85 
                                          f32 %86 = OpLoad %67 
                                          f32 %87 = OpExtInst %1 32 %86 
                                                      OpStore %67 %87 
                                          f32 %89 = OpLoad %67 
                                        f32_3 %90 = OpCompositeConstruct %89 %89 %89 
                                        f32_3 %91 = OpLoad vs_TEXCOORD1 
                                        f32_3 %92 = OpFMul %90 %91 
                                                      OpStore %88 %92 
                                        f32_3 %93 = OpLoad %88 
                                        f32_4 %94 = OpLoad %57 
                                        f32_3 %95 = OpVectorShuffle %94 %94 0 1 2 
                                          f32 %96 = OpDot %93 %95 
                                 Private f32* %98 = OpAccessChain %57 %97 
                                                      OpStore %98 %96 
                                        f32_3 %99 = OpLoad %88 
                                       f32_3 %100 = OpLoad %9 
                                         f32 %101 = OpDot %99 %100 
                                Private f32* %103 = OpAccessChain %57 %102 
                                                      OpStore %103 %101 
                                       f32_4 %105 = OpLoad %57 
                                       f32_2 %106 = OpVectorShuffle %105 %105 0 1 
                                       f32_2 %109 = OpExtInst %1 40 %106 %108 
                                       f32_4 %110 = OpLoad %57 
                                       f32_4 %111 = OpVectorShuffle %110 %109 4 5 2 3 
                                                      OpStore %57 %111 
                                Private f32* %112 = OpAccessChain %57 %97 
                                         f32 %113 = OpLoad %112 
                                         f32 %114 = OpExtInst %1 30 %113 
                                Private f32* %115 = OpAccessChain %9 %97 
                                                      OpStore %115 %114 
                                Uniform f32* %118 = OpAccessChain %20 %116 
                                         f32 %119 = OpLoad %118 
                                         f32 %121 = OpFMul %119 %120 
                                Private f32* %122 = OpAccessChain %57 %97 
                                                      OpStore %122 %121 
                                Private f32* %123 = OpAccessChain %9 %97 
                                         f32 %124 = OpLoad %123 
                                Private f32* %125 = OpAccessChain %57 %97 
                                         f32 %126 = OpLoad %125 
                                         f32 %127 = OpFMul %124 %126 
                                Private f32* %128 = OpAccessChain %9 %97 
                                                      OpStore %128 %127 
                                Private f32* %129 = OpAccessChain %9 %97 
                                         f32 %130 = OpLoad %129 
                                         f32 %131 = OpExtInst %1 29 %130 
                                Private f32* %132 = OpAccessChain %9 %97 
                                                      OpStore %132 %131 
                                Uniform f32* %134 = OpAccessChain %20 %133 
                                         f32 %135 = OpLoad %134 
                                         f32 %136 = OpFNegate %135 
                                         f32 %138 = OpFMul %136 %137 
                                         f32 %139 = OpFAdd %138 %137 
                                Private f32* %140 = OpAccessChain %57 %97 
                                                      OpStore %140 %139 
                                Private f32* %141 = OpAccessChain %9 %97 
                                         f32 %142 = OpLoad %141 
                                         f32 %144 = OpFMul %142 %143 
                                Private f32* %145 = OpAccessChain %57 %97 
                                         f32 %146 = OpLoad %145 
                                         f32 %147 = OpFNegate %146 
                                         f32 %148 = OpFAdd %144 %147 
                                Private f32* %149 = OpAccessChain %9 %97 
                                                      OpStore %149 %148 
                                Uniform f32* %151 = OpAccessChain %20 %133 
                                         f32 %152 = OpLoad %151 
                                         f32 %153 = OpFMul %152 %137 
                                         f32 %154 = OpFAdd %153 %137 
                                                      OpStore %150 %154 
                                Private f32* %157 = OpAccessChain %57 %97 
                                         f32 %158 = OpLoad %157 
                                         f32 %159 = OpFNegate %158 
                                         f32 %160 = OpLoad %150 
                                         f32 %161 = OpFAdd %159 %160 
                                Private f32* %162 = OpAccessChain %156 %97 
                                                      OpStore %162 %161 
                                Private f32* %164 = OpAccessChain %156 %97 
                                         f32 %165 = OpLoad %164 
                                         f32 %166 = OpFDiv %163 %165 
                                Private f32* %167 = OpAccessChain %156 %97 
                                                      OpStore %167 %166 
                                Private f32* %168 = OpAccessChain %156 %97 
                                         f32 %169 = OpLoad %168 
                                Private f32* %170 = OpAccessChain %9 %97 
                                         f32 %171 = OpLoad %170 
                                         f32 %172 = OpFMul %169 %171 
                                Private f32* %173 = OpAccessChain %9 %97 
                                                      OpStore %173 %172 
                                Private f32* %174 = OpAccessChain %9 %97 
                                         f32 %175 = OpLoad %174 
                                         f32 %176 = OpExtInst %1 43 %175 %107 %163 
                                Private f32* %177 = OpAccessChain %9 %97 
                                                      OpStore %177 %176 
                                Private f32* %178 = OpAccessChain %9 %97 
                                         f32 %179 = OpLoad %178 
                                         f32 %181 = OpFMul %179 %180 
                                         f32 %183 = OpFAdd %181 %182 
                                Private f32* %184 = OpAccessChain %156 %97 
                                                      OpStore %184 %183 
                                Private f32* %185 = OpAccessChain %9 %97 
                                         f32 %186 = OpLoad %185 
                                Private f32* %187 = OpAccessChain %9 %97 
                                         f32 %188 = OpLoad %187 
                                         f32 %189 = OpFMul %186 %188 
                                Private f32* %190 = OpAccessChain %9 %97 
                                                      OpStore %190 %189 
                                Private f32* %191 = OpAccessChain %9 %97 
                                         f32 %192 = OpLoad %191 
                                Private f32* %193 = OpAccessChain %156 %97 
                                         f32 %194 = OpLoad %193 
                                         f32 %195 = OpFMul %192 %194 
                                Private f32* %196 = OpAccessChain %9 %97 
                                                      OpStore %196 %195 
                                       f32_3 %197 = OpLoad vs_TEXCOORD2 
                                       f32_4 %198 = OpVectorShuffle %197 %197 1 1 1 1 
                              Uniform f32_4* %200 = OpAccessChain %20 %199 %22 
                                       f32_4 %201 = OpLoad %200 
                                       f32_4 %202 = OpFMul %198 %201 
                                                      OpStore %40 %202 
                              Uniform f32_4* %203 = OpAccessChain %20 %199 %43 
                                       f32_4 %204 = OpLoad %203 
                                       f32_3 %205 = OpLoad vs_TEXCOORD2 
                                       f32_4 %206 = OpVectorShuffle %205 %205 0 0 0 0 
                                       f32_4 %207 = OpFMul %204 %206 
                                       f32_4 %208 = OpLoad %40 
                                       f32_4 %209 = OpFAdd %207 %208 
                                                      OpStore %40 %209 
                              Uniform f32_4* %211 = OpAccessChain %20 %199 %210 
                                       f32_4 %212 = OpLoad %211 
                                       f32_3 %213 = OpLoad vs_TEXCOORD2 
                                       f32_4 %214 = OpVectorShuffle %213 %213 2 2 2 2 
                                       f32_4 %215 = OpFMul %212 %214 
                                       f32_4 %216 = OpLoad %40 
                                       f32_4 %217 = OpFAdd %215 %216 
                                                      OpStore %40 %217 
                                       f32_4 %218 = OpLoad %40 
                              Uniform f32_4* %220 = OpAccessChain %20 %199 %219 
                                       f32_4 %221 = OpLoad %220 
                                       f32_4 %222 = OpFAdd %218 %221 
                                                      OpStore %40 %222 
                                       f32_4 %223 = OpLoad %40 
                                       f32_2 %224 = OpVectorShuffle %223 %223 0 1 
                                       f32_4 %225 = OpLoad %40 
                                       f32_2 %226 = OpVectorShuffle %225 %225 3 3 
                                       f32_2 %227 = OpFDiv %224 %226 
                                                      OpStore %156 %227 
                                       f32_2 %228 = OpLoad %156 
                                       f32_2 %230 = OpFAdd %228 %229 
                                                      OpStore %156 %230 
                         read_only Texture2D %234 = OpLoad %233 
                                     sampler %238 = OpLoad %237 
                  read_only Texture2DSampled %240 = OpSampledImage %234 %238 
                                       f32_2 %241 = OpLoad %156 
                                       f32_4 %242 = OpImageSampleImplicitLod %240 %241 
                                         f32 %244 = OpCompositeExtract %242 3 
                                Private f32* %245 = OpAccessChain %156 %97 
                                                      OpStore %245 %244 
                                Private f32* %250 = OpAccessChain %40 %249 
                                         f32 %251 = OpLoad %250 
                                        bool %252 = OpFOrdLessThan %107 %251 
                                                      OpStore %248 %252 
                                       f32_4 %253 = OpLoad %40 
                                       f32_3 %254 = OpVectorShuffle %253 %253 0 1 2 
                                       f32_4 %255 = OpLoad %40 
                                       f32_3 %256 = OpVectorShuffle %255 %255 0 1 2 
                                         f32 %257 = OpDot %254 %256 
                                                      OpStore %29 %257 
                         read_only Texture2D %259 = OpLoad %258 
                                     sampler %261 = OpLoad %260 
                  read_only Texture2DSampled %262 = OpSampledImage %259 %261 
                                         f32 %263 = OpLoad %29 
                                       f32_2 %264 = OpCompositeConstruct %263 %263 
                                       f32_4 %265 = OpImageSampleImplicitLod %262 %264 
                                         f32 %266 = OpCompositeExtract %265 0 
                                                      OpStore %29 %266 
                                        bool %267 = OpLoad %248 
                                         f32 %268 = OpSelect %267 %163 %107 
                                Private f32* %269 = OpAccessChain %57 %97 
                                                      OpStore %269 %268 
                                Private f32* %270 = OpAccessChain %156 %97 
                                         f32 %271 = OpLoad %270 
                                Private f32* %272 = OpAccessChain %57 %97 
                                         f32 %273 = OpLoad %272 
                                         f32 %274 = OpFMul %271 %273 
                                Private f32* %275 = OpAccessChain %57 %97 
                                                      OpStore %275 %274 
                                         f32 %276 = OpLoad %29 
                                Private f32* %277 = OpAccessChain %57 %97 
                                         f32 %278 = OpLoad %277 
                                         f32 %279 = OpFMul %276 %278 
                                Private f32* %280 = OpAccessChain %57 %97 
                                                      OpStore %280 %279 
                                       f32_4 %281 = OpLoad %57 
                                       f32_3 %282 = OpVectorShuffle %281 %281 0 0 0 
                              Uniform f32_4* %283 = OpAccessChain %20 %210 
                                       f32_4 %284 = OpLoad %283 
                                       f32_3 %285 = OpVectorShuffle %284 %284 0 1 2 
                                       f32_3 %286 = OpFMul %282 %285 
                                       f32_4 %287 = OpLoad %57 
                                       f32_4 %288 = OpVectorShuffle %287 %286 4 1 5 6 
                                                      OpStore %57 %288 
                                       f32_4 %289 = OpLoad %57 
                                       f32_3 %290 = OpVectorShuffle %289 %289 0 2 3 
                              Uniform f32_4* %291 = OpAccessChain %20 %219 
                                       f32_4 %292 = OpLoad %291 
                                       f32_3 %293 = OpVectorShuffle %292 %292 0 1 2 
                                       f32_3 %294 = OpFMul %290 %293 
                                                      OpStore %88 %294 
                                       f32_3 %295 = OpLoad %9 
                                       f32_3 %296 = OpVectorShuffle %295 %295 0 0 0 
                                       f32_3 %297 = OpLoad %88 
                                       f32_3 %298 = OpFMul %296 %297 
                                                      OpStore %9 %298 
                         read_only Texture2D %301 = OpLoad %300 
                                     sampler %303 = OpLoad %302 
                  read_only Texture2DSampled %304 = OpSampledImage %301 %303 
                                       f32_2 %307 = OpLoad vs_TEXCOORD0 
                                       f32_4 %308 = OpImageSampleImplicitLod %304 %307 
                                       f32_3 %309 = OpVectorShuffle %308 %308 0 1 2 
                                                      OpStore %299 %309 
                                       f32_3 %310 = OpLoad %299 
                              Uniform f32_4* %312 = OpAccessChain %20 %311 
                                       f32_4 %313 = OpLoad %312 
                                       f32_3 %314 = OpVectorShuffle %313 %313 0 1 2 
                                       f32_3 %315 = OpFMul %310 %314 
                                                      OpStore %88 %315 
                                       f32_4 %316 = OpLoad %57 
                                       f32_3 %317 = OpVectorShuffle %316 %316 0 2 3 
                                       f32_3 %318 = OpLoad %88 
                                       f32_3 %319 = OpFMul %317 %318 
                                       f32_4 %320 = OpLoad %57 
                                       f32_4 %321 = OpVectorShuffle %320 %319 4 1 5 6 
                                                      OpStore %57 %321 
                                Uniform f32* %323 = OpAccessChain %20 %322 
                                         f32 %324 = OpLoad %323 
                                         f32 %325 = OpFNegate %324 
                                         f32 %326 = OpFMul %325 %137 
                                Uniform f32* %328 = OpAccessChain %20 %327 
                                         f32 %329 = OpLoad %328 
                                         f32 %330 = OpFAdd %326 %329 
                                Private f32* %331 = OpAccessChain %88 %97 
                                                      OpStore %331 %330 
                                Private f32* %333 = OpAccessChain %57 %102 
                                         f32 %334 = OpLoad %333 
                                Private f32* %335 = OpAccessChain %88 %97 
                                         f32 %336 = OpLoad %335 
                                         f32 %337 = OpFNegate %336 
                                         f32 %338 = OpFAdd %334 %337 
                                                      OpStore %332 %338 
                                Uniform f32* %340 = OpAccessChain %20 %322 
                                         f32 %341 = OpLoad %340 
                                         f32 %342 = OpFMul %341 %137 
                                Uniform f32* %343 = OpAccessChain %20 %327 
                                         f32 %344 = OpLoad %343 
                                         f32 %345 = OpFAdd %342 %344 
                                                      OpStore %339 %345 
                                Private f32* %346 = OpAccessChain %88 %97 
                                         f32 %347 = OpLoad %346 
                                         f32 %348 = OpFNegate %347 
                                         f32 %349 = OpLoad %339 
                                         f32 %350 = OpFAdd %348 %349 
                                Private f32* %351 = OpAccessChain %88 %97 
                                                      OpStore %351 %350 
                                Private f32* %352 = OpAccessChain %88 %97 
                                         f32 %353 = OpLoad %352 
                                         f32 %354 = OpFDiv %163 %353 
                                Private f32* %355 = OpAccessChain %88 %97 
                                                      OpStore %355 %354 
                                         f32 %356 = OpLoad %332 
                                Private f32* %357 = OpAccessChain %88 %97 
                                         f32 %358 = OpLoad %357 
                                         f32 %359 = OpFMul %356 %358 
                                                      OpStore %332 %359 
                                         f32 %360 = OpLoad %332 
                                         f32 %361 = OpExtInst %1 43 %360 %107 %163 
                                                      OpStore %332 %361 
                                         f32 %362 = OpLoad %332 
                                         f32 %363 = OpFMul %362 %180 
                                         f32 %364 = OpFAdd %363 %182 
                                Private f32* %365 = OpAccessChain %88 %97 
                                                      OpStore %365 %364 
                                         f32 %366 = OpLoad %332 
                                         f32 %367 = OpLoad %332 
                                         f32 %368 = OpFMul %366 %367 
                                                      OpStore %332 %368 
                                         f32 %369 = OpLoad %332 
                                Private f32* %370 = OpAccessChain %88 %97 
                                         f32 %371 = OpLoad %370 
                                         f32 %372 = OpFMul %369 %371 
                                                      OpStore %332 %372 
                                         f32 %373 = OpLoad %332 
                                       f32_3 %374 = OpCompositeConstruct %373 %373 %373 
                              Uniform f32_4* %376 = OpAccessChain %20 %375 
                                       f32_4 %377 = OpLoad %376 
                                       f32_3 %378 = OpVectorShuffle %377 %377 0 1 2 
                                       f32_3 %379 = OpFMul %374 %378 
                                                      OpStore %88 %379 
                                       f32_4 %380 = OpLoad %57 
                                       f32_3 %381 = OpVectorShuffle %380 %380 0 2 3 
                                       f32_3 %382 = OpLoad %88 
                                       f32_3 %383 = OpFMul %381 %382 
                                       f32_3 %384 = OpLoad %9 
                                       f32_3 %385 = OpFAdd %383 %384 
                                                      OpStore %9 %385 
                                       f32_3 %388 = OpLoad %9 
                                       f32_4 %389 = OpLoad %387 
                                       f32_4 %390 = OpVectorShuffle %389 %388 4 5 6 3 
                                                      OpStore %387 %390 
                                 Output f32* %392 = OpAccessChain %387 %243 
                                                      OpStore %392 %163 
                                                      OpReturn
                                                      OpFunctionEnd
"
}
SubProgram "vulkan hw_tier01 " {
Keywords { "SPOT" }
"; SPIR-V
; Version: 1.0
; Generator: Khronos Glslang Reference Front End; 6
; Bound: 196
; Schema: 0
                                                      OpCapability Shader 
                                               %1 = OpExtInstImport "GLSL.std.450" 
                                                      OpMemoryModel Logical GLSL450 
                                                      OpEntryPoint Vertex %4 "main" %11 %75 %85 %101 %106 %137 %143 %179 %187 
                                                      OpName vs_TEXCOORD0 "vs_TEXCOORD0" 
                                                      OpName vs_TEXCOORD1 "vs_TEXCOORD1" 
                                                      OpName vs_TEXCOORD2 "vs_TEXCOORD2" 
                                                      OpName vs_TEXCOORD3 "vs_TEXCOORD3" 
                                                      OpName vs_TEXCOORD4 "vs_TEXCOORD4" 
                                                      OpDecorate %11 Location 11 
                                                      OpDecorate %16 ArrayStride 16 
                                                      OpDecorate %17 ArrayStride 17 
                                                      OpDecorate %18 ArrayStride 18 
                                                      OpDecorate %19 ArrayStride 19 
                                                      OpMemberDecorate %20 0 Offset 20 
                                                      OpMemberDecorate %20 1 Offset 20 
                                                      OpMemberDecorate %20 2 Offset 20 
                                                      OpMemberDecorate %20 3 Offset 20 
                                                      OpMemberDecorate %20 4 Offset 20 
                                                      OpDecorate %20 Block 
                                                      OpDecorate %22 DescriptorSet 22 
                                                      OpDecorate %22 Binding 22 
                                                      OpMemberDecorate %73 0 BuiltIn 73 
                                                      OpMemberDecorate %73 1 BuiltIn 73 
                                                      OpMemberDecorate %73 2 BuiltIn 73 
                                                      OpDecorate %73 Block 
                                                      OpDecorate %85 Location 85 
                                                      OpDecorate vs_TEXCOORD0 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD0 Location 101 
                                                      OpDecorate %106 Location 106 
                                                      OpDecorate vs_TEXCOORD1 Location 137 
                                                      OpDecorate vs_TEXCOORD2 Location 143 
                                                      OpDecorate vs_TEXCOORD3 Location 179 
                                                      OpDecorate vs_TEXCOORD4 Location 187 
                                               %2 = OpTypeVoid 
                                               %3 = OpTypeFunction %2 
                                               %6 = OpTypeFloat 32 
                                               %7 = OpTypeVector %6 4 
                                               %8 = OpTypePointer Private %7 
                                Private f32_4* %9 = OpVariable Private 
                                              %10 = OpTypePointer Input %7 
                                 Input f32_4* %11 = OpVariable Input 
                                              %14 = OpTypeInt 32 0 
                                          u32 %15 = OpConstant 4 
                                              %16 = OpTypeArray %7 %15 
                                              %17 = OpTypeArray %7 %15 
                                              %18 = OpTypeArray %7 %15 
                                              %19 = OpTypeArray %7 %15 
                                              %20 = OpTypeStruct %16 %17 %18 %19 %7 
                                              %21 = OpTypePointer Uniform %20 
Uniform struct {f32_4[4]; f32_4[4]; f32_4[4]; f32_4[4]; f32_4;}* %22 = OpVariable Uniform 
                                              %23 = OpTypeInt 32 1 
                                          i32 %24 = OpConstant 0 
                                          i32 %25 = OpConstant 1 
                                              %26 = OpTypePointer Uniform %7 
                                          i32 %37 = OpConstant 2 
                               Private f32_4* %45 = OpVariable Private 
                                          i32 %47 = OpConstant 3 
                               Private f32_4* %51 = OpVariable Private 
                                          u32 %71 = OpConstant 1 
                                              %72 = OpTypeArray %6 %71 
                                              %73 = OpTypeStruct %7 %6 %72 
                                              %74 = OpTypePointer Output %73 
         Output struct {f32_4; f32; f32[1];}* %75 = OpVariable Output 
                                              %83 = OpTypePointer Output %7 
                                 Input f32_4* %85 = OpVariable Input 
                                              %86 = OpTypeVector %6 2 
                                          i32 %89 = OpConstant 4 
                                             %100 = OpTypePointer Output %86 
                       Output f32_2* vs_TEXCOORD0 = OpVariable Output 
                                             %104 = OpTypeVector %6 3 
                                             %105 = OpTypePointer Input %104 
                                Input f32_3* %106 = OpVariable Input 
                                         u32 %112 = OpConstant 0 
                                             %113 = OpTypePointer Private %6 
                                         u32 %126 = OpConstant 2 
                                Private f32* %128 = OpVariable Private 
                                             %136 = OpTypePointer Output %104 
                       Output f32_3* vs_TEXCOORD1 = OpVariable Output 
                       Output f32_3* vs_TEXCOORD2 = OpVariable Output 
                       Output f32_4* vs_TEXCOORD3 = OpVariable Output 
                       Output f32_4* vs_TEXCOORD4 = OpVariable Output 
                                         f32 %188 = OpConstant 3.674022E-40 
                                       f32_4 %189 = OpConstantComposite %188 %188 %188 %188 
                                             %190 = OpTypePointer Output %6 
                                          void %4 = OpFunction None %3 
                                               %5 = OpLabel 
                                        f32_4 %12 = OpLoad %11 
                                        f32_4 %13 = OpVectorShuffle %12 %12 1 1 1 1 
                               Uniform f32_4* %27 = OpAccessChain %22 %24 %25 
                                        f32_4 %28 = OpLoad %27 
                                        f32_4 %29 = OpFMul %13 %28 
                                                      OpStore %9 %29 
                               Uniform f32_4* %30 = OpAccessChain %22 %24 %24 
                                        f32_4 %31 = OpLoad %30 
                                        f32_4 %32 = OpLoad %11 
                                        f32_4 %33 = OpVectorShuffle %32 %32 0 0 0 0 
                                        f32_4 %34 = OpFMul %31 %33 
                                        f32_4 %35 = OpLoad %9 
                                        f32_4 %36 = OpFAdd %34 %35 
                                                      OpStore %9 %36 
                               Uniform f32_4* %38 = OpAccessChain %22 %24 %37 
                                        f32_4 %39 = OpLoad %38 
                                        f32_4 %40 = OpLoad %11 
                                        f32_4 %41 = OpVectorShuffle %40 %40 2 2 2 2 
                                        f32_4 %42 = OpFMul %39 %41 
                                        f32_4 %43 = OpLoad %9 
                                        f32_4 %44 = OpFAdd %42 %43 
                                                      OpStore %9 %44 
                                        f32_4 %46 = OpLoad %9 
                               Uniform f32_4* %48 = OpAccessChain %22 %24 %47 
                                        f32_4 %49 = OpLoad %48 
                                        f32_4 %50 = OpFAdd %46 %49 
                                                      OpStore %45 %50 
                                        f32_4 %52 = OpLoad %45 
                                        f32_4 %53 = OpVectorShuffle %52 %52 1 1 1 1 
                               Uniform f32_4* %54 = OpAccessChain %22 %37 %25 
                                        f32_4 %55 = OpLoad %54 
                                        f32_4 %56 = OpFMul %53 %55 
                                                      OpStore %51 %56 
                               Uniform f32_4* %57 = OpAccessChain %22 %37 %24 
                                        f32_4 %58 = OpLoad %57 
                                        f32_4 %59 = OpLoad %45 
                                        f32_4 %60 = OpVectorShuffle %59 %59 0 0 0 0 
                                        f32_4 %61 = OpFMul %58 %60 
                                        f32_4 %62 = OpLoad %51 
                                        f32_4 %63 = OpFAdd %61 %62 
                                                      OpStore %51 %63 
                               Uniform f32_4* %64 = OpAccessChain %22 %37 %37 
                                        f32_4 %65 = OpLoad %64 
                                        f32_4 %66 = OpLoad %45 
                                        f32_4 %67 = OpVectorShuffle %66 %66 2 2 2 2 
                                        f32_4 %68 = OpFMul %65 %67 
                                        f32_4 %69 = OpLoad %51 
                                        f32_4 %70 = OpFAdd %68 %69 
                                                      OpStore %51 %70 
                               Uniform f32_4* %76 = OpAccessChain %22 %37 %47 
                                        f32_4 %77 = OpLoad %76 
                                        f32_4 %78 = OpLoad %45 
                                        f32_4 %79 = OpVectorShuffle %78 %78 3 3 3 3 
                                        f32_4 %80 = OpFMul %77 %79 
                                        f32_4 %81 = OpLoad %51 
                                        f32_4 %82 = OpFAdd %80 %81 
                                Output f32_4* %84 = OpAccessChain %75 %24 
                                                      OpStore %84 %82 
                                        f32_4 %87 = OpLoad %85 
                                        f32_2 %88 = OpVectorShuffle %87 %87 0 1 
                               Uniform f32_4* %90 = OpAccessChain %22 %89 
                                        f32_4 %91 = OpLoad %90 
                                        f32_2 %92 = OpVectorShuffle %91 %91 0 1 
                                        f32_2 %93 = OpFMul %88 %92 
                               Uniform f32_4* %94 = OpAccessChain %22 %89 
                                        f32_4 %95 = OpLoad %94 
                                        f32_2 %96 = OpVectorShuffle %95 %95 2 3 
                                        f32_2 %97 = OpFAdd %93 %96 
                                        f32_4 %98 = OpLoad %45 
                                        f32_4 %99 = OpVectorShuffle %98 %97 4 5 2 3 
                                                      OpStore %45 %99 
                                       f32_4 %102 = OpLoad %45 
                                       f32_2 %103 = OpVectorShuffle %102 %102 0 1 
                                                      OpStore vs_TEXCOORD0 %103 
                                       f32_3 %107 = OpLoad %106 
                              Uniform f32_4* %108 = OpAccessChain %22 %25 %24 
                                       f32_4 %109 = OpLoad %108 
                                       f32_3 %110 = OpVectorShuffle %109 %109 0 1 2 
                                         f32 %111 = OpDot %107 %110 
                                Private f32* %114 = OpAccessChain %45 %112 
                                                      OpStore %114 %111 
                                       f32_3 %115 = OpLoad %106 
                              Uniform f32_4* %116 = OpAccessChain %22 %25 %25 
                                       f32_4 %117 = OpLoad %116 
                                       f32_3 %118 = OpVectorShuffle %117 %117 0 1 2 
                                         f32 %119 = OpDot %115 %118 
                                Private f32* %120 = OpAccessChain %45 %71 
                                                      OpStore %120 %119 
                                       f32_3 %121 = OpLoad %106 
                              Uniform f32_4* %122 = OpAccessChain %22 %25 %37 
                                       f32_4 %123 = OpLoad %122 
                                       f32_3 %124 = OpVectorShuffle %123 %123 0 1 2 
                                         f32 %125 = OpDot %121 %124 
                                Private f32* %127 = OpAccessChain %45 %126 
                                                      OpStore %127 %125 
                                       f32_4 %129 = OpLoad %45 
                                       f32_3 %130 = OpVectorShuffle %129 %129 0 1 2 
                                       f32_4 %131 = OpLoad %45 
                                       f32_3 %132 = OpVectorShuffle %131 %131 0 1 2 
                                         f32 %133 = OpDot %130 %132 
                                                      OpStore %128 %133 
                                         f32 %134 = OpLoad %128 
                                         f32 %135 = OpExtInst %1 32 %134 
                                                      OpStore %128 %135 
                                         f32 %138 = OpLoad %128 
                                       f32_3 %139 = OpCompositeConstruct %138 %138 %138 
                                       f32_4 %140 = OpLoad %45 
                                       f32_3 %141 = OpVectorShuffle %140 %140 0 1 2 
                                       f32_3 %142 = OpFMul %139 %141 
                                                      OpStore vs_TEXCOORD1 %142 
                              Uniform f32_4* %144 = OpAccessChain %22 %24 %47 
                                       f32_4 %145 = OpLoad %144 
                                       f32_3 %146 = OpVectorShuffle %145 %145 0 1 2 
                                       f32_4 %147 = OpLoad %11 
                                       f32_3 %148 = OpVectorShuffle %147 %147 3 3 3 
                                       f32_3 %149 = OpFMul %146 %148 
                                       f32_4 %150 = OpLoad %9 
                                       f32_3 %151 = OpVectorShuffle %150 %150 0 1 2 
                                       f32_3 %152 = OpFAdd %149 %151 
                                                      OpStore vs_TEXCOORD2 %152 
                              Uniform f32_4* %153 = OpAccessChain %22 %24 %47 
                                       f32_4 %154 = OpLoad %153 
                                       f32_4 %155 = OpLoad %11 
                                       f32_4 %156 = OpVectorShuffle %155 %155 3 3 3 3 
                                       f32_4 %157 = OpFMul %154 %156 
                                       f32_4 %158 = OpLoad %9 
                                       f32_4 %159 = OpFAdd %157 %158 
                                                      OpStore %9 %159 
                                       f32_4 %160 = OpLoad %9 
                                       f32_4 %161 = OpVectorShuffle %160 %160 1 1 1 1 
                              Uniform f32_4* %162 = OpAccessChain %22 %47 %25 
                                       f32_4 %163 = OpLoad %162 
                                       f32_4 %164 = OpFMul %161 %163 
                                                      OpStore %45 %164 
                              Uniform f32_4* %165 = OpAccessChain %22 %47 %24 
                                       f32_4 %166 = OpLoad %165 
                                       f32_4 %167 = OpLoad %9 
                                       f32_4 %168 = OpVectorShuffle %167 %167 0 0 0 0 
                                       f32_4 %169 = OpFMul %166 %168 
                                       f32_4 %170 = OpLoad %45 
                                       f32_4 %171 = OpFAdd %169 %170 
                                                      OpStore %45 %171 
                              Uniform f32_4* %172 = OpAccessChain %22 %47 %37 
                                       f32_4 %173 = OpLoad %172 
                                       f32_4 %174 = OpLoad %9 
                                       f32_4 %175 = OpVectorShuffle %174 %174 2 2 2 2 
                                       f32_4 %176 = OpFMul %173 %175 
                                       f32_4 %177 = OpLoad %45 
                                       f32_4 %178 = OpFAdd %176 %177 
                                                      OpStore %45 %178 
                              Uniform f32_4* %180 = OpAccessChain %22 %47 %47 
                                       f32_4 %181 = OpLoad %180 
                                       f32_4 %182 = OpLoad %9 
                                       f32_4 %183 = OpVectorShuffle %182 %182 3 3 3 3 
                                       f32_4 %184 = OpFMul %181 %183 
                                       f32_4 %185 = OpLoad %45 
                                       f32_4 %186 = OpFAdd %184 %185 
                                                      OpStore vs_TEXCOORD3 %186 
                                                      OpStore vs_TEXCOORD4 %189 
                                 Output f32* %191 = OpAccessChain %75 %24 %71 
                                         f32 %192 = OpLoad %191 
                                         f32 %193 = OpFNegate %192 
                                 Output f32* %194 = OpAccessChain %75 %24 %71 
                                                      OpStore %194 %193 
                                                      OpReturn
                                                      OpFunctionEnd
; SPIR-V
; Version: 1.0
; Generator: Khronos Glslang Reference Front End; 6
; Bound: 394
; Schema: 0
                                                      OpCapability Shader 
                                               %1 = OpExtInstImport "GLSL.std.450" 
                                                      OpMemoryModel Logical GLSL450 
                                                      OpEntryPoint Fragment %4 "main" %11 %82 %306 %387 
                                                      OpExecutionMode %4 OriginUpperLeft 
                                                      OpName vs_TEXCOORD2 "vs_TEXCOORD2" 
                                                      OpName vs_TEXCOORD1 "vs_TEXCOORD1" 
                                                      OpName vs_TEXCOORD0 "vs_TEXCOORD0" 
                                                      OpDecorate vs_TEXCOORD2 Location 11 
                                                      OpDecorate %17 ArrayStride 17 
                                                      OpMemberDecorate %18 0 Offset 18 
                                                      OpMemberDecorate %18 1 Offset 18 
                                                      OpMemberDecorate %18 2 RelaxedPrecision 
                                                      OpMemberDecorate %18 2 Offset 18 
                                                      OpMemberDecorate %18 3 RelaxedPrecision 
                                                      OpMemberDecorate %18 3 Offset 18 
                                                      OpMemberDecorate %18 4 Offset 18 
                                                      OpMemberDecorate %18 5 RelaxedPrecision 
                                                      OpMemberDecorate %18 5 Offset 18 
                                                      OpMemberDecorate %18 6 RelaxedPrecision 
                                                      OpMemberDecorate %18 6 Offset 18 
                                                      OpMemberDecorate %18 7 RelaxedPrecision 
                                                      OpMemberDecorate %18 7 Offset 18 
                                                      OpMemberDecorate %18 8 RelaxedPrecision 
                                                      OpMemberDecorate %18 8 Offset 18 
                                                      OpMemberDecorate %18 9 RelaxedPrecision 
                                                      OpMemberDecorate %18 9 Offset 18 
                                                      OpMemberDecorate %18 10 RelaxedPrecision 
                                                      OpMemberDecorate %18 10 Offset 18 
                                                      OpDecorate %18 Block 
                                                      OpDecorate %20 DescriptorSet 20 
                                                      OpDecorate %20 Binding 20 
                                                      OpDecorate %57 RelaxedPrecision 
                                                      OpDecorate %67 RelaxedPrecision 
                                                      OpDecorate %68 RelaxedPrecision 
                                                      OpDecorate %69 RelaxedPrecision 
                                                      OpDecorate %70 RelaxedPrecision 
                                                      OpDecorate %71 RelaxedPrecision 
                                                      OpDecorate %72 RelaxedPrecision 
                                                      OpDecorate %73 RelaxedPrecision 
                                                      OpDecorate %74 RelaxedPrecision 
                                                      OpDecorate %75 RelaxedPrecision 
                                                      OpDecorate %76 RelaxedPrecision 
                                                      OpDecorate %77 RelaxedPrecision 
                                                      OpDecorate %78 RelaxedPrecision 
                                                      OpDecorate %79 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD1 Location 82 
                                                      OpDecorate %86 RelaxedPrecision 
                                                      OpDecorate %87 RelaxedPrecision 
                                                      OpDecorate %88 RelaxedPrecision 
                                                      OpDecorate %89 RelaxedPrecision 
                                                      OpDecorate %93 RelaxedPrecision 
                                                      OpDecorate %94 RelaxedPrecision 
                                                      OpDecorate %95 RelaxedPrecision 
                                                      OpDecorate %96 RelaxedPrecision 
                                                      OpDecorate %99 RelaxedPrecision 
                                                      OpDecorate %105 RelaxedPrecision 
                                                      OpDecorate %106 RelaxedPrecision 
                                                      OpDecorate %109 RelaxedPrecision 
                                                      OpDecorate %113 RelaxedPrecision 
                                                      OpDecorate %114 RelaxedPrecision 
                                                      OpDecorate %119 RelaxedPrecision 
                                                      OpDecorate %121 RelaxedPrecision 
                                                      OpDecorate %126 RelaxedPrecision 
                                                      OpDecorate %135 RelaxedPrecision 
                                                      OpDecorate %136 RelaxedPrecision 
                                                      OpDecorate %138 RelaxedPrecision 
                                                      OpDecorate %139 RelaxedPrecision 
                                                      OpDecorate %146 RelaxedPrecision 
                                                      OpDecorate %147 RelaxedPrecision 
                                                      OpDecorate %150 RelaxedPrecision 
                                                      OpDecorate %152 RelaxedPrecision 
                                                      OpDecorate %153 RelaxedPrecision 
                                                      OpDecorate %154 RelaxedPrecision 
                                                      OpDecorate %158 RelaxedPrecision 
                                                      OpDecorate %159 RelaxedPrecision 
                                                      OpDecorate %160 RelaxedPrecision 
                                                      OpDecorate %161 RelaxedPrecision 
                                                      OpDecorate %233 DescriptorSet 233 
                                                      OpDecorate %233 Binding 233 
                                                      OpDecorate %237 DescriptorSet 237 
                                                      OpDecorate %237 Binding 237 
                                                      OpDecorate %258 DescriptorSet 258 
                                                      OpDecorate %258 Binding 258 
                                                      OpDecorate %260 DescriptorSet 260 
                                                      OpDecorate %260 Binding 260 
                                                      OpDecorate %273 RelaxedPrecision 
                                                      OpDecorate %278 RelaxedPrecision 
                                                      OpDecorate %281 RelaxedPrecision 
                                                      OpDecorate %282 RelaxedPrecision 
                                                      OpDecorate %284 RelaxedPrecision 
                                                      OpDecorate %285 RelaxedPrecision 
                                                      OpDecorate %286 RelaxedPrecision 
                                                      OpDecorate %289 RelaxedPrecision 
                                                      OpDecorate %290 RelaxedPrecision 
                                                      OpDecorate %292 RelaxedPrecision 
                                                      OpDecorate %293 RelaxedPrecision 
                                                      OpDecorate %294 RelaxedPrecision 
                                                      OpDecorate %297 RelaxedPrecision 
                                                      OpDecorate %299 RelaxedPrecision 
                                                      OpDecorate %300 RelaxedPrecision 
                                                      OpDecorate %300 DescriptorSet 300 
                                                      OpDecorate %300 Binding 300 
                                                      OpDecorate %301 RelaxedPrecision 
                                                      OpDecorate %302 RelaxedPrecision 
                                                      OpDecorate %302 DescriptorSet 302 
                                                      OpDecorate %302 Binding 302 
                                                      OpDecorate %303 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD0 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD0 Location 306 
                                                      OpDecorate %307 RelaxedPrecision 
                                                      OpDecorate %308 RelaxedPrecision 
                                                      OpDecorate %309 RelaxedPrecision 
                                                      OpDecorate %310 RelaxedPrecision 
                                                      OpDecorate %313 RelaxedPrecision 
                                                      OpDecorate %314 RelaxedPrecision 
                                                      OpDecorate %315 RelaxedPrecision 
                                                      OpDecorate %316 RelaxedPrecision 
                                                      OpDecorate %317 RelaxedPrecision 
                                                      OpDecorate %318 RelaxedPrecision 
                                                      OpDecorate %319 RelaxedPrecision 
                                                      OpDecorate %324 RelaxedPrecision 
                                                      OpDecorate %325 RelaxedPrecision 
                                                      OpDecorate %326 RelaxedPrecision 
                                                      OpDecorate %329 RelaxedPrecision 
                                                      OpDecorate %330 RelaxedPrecision 
                                                      OpDecorate %332 RelaxedPrecision 
                                                      OpDecorate %334 RelaxedPrecision 
                                                      OpDecorate %336 RelaxedPrecision 
                                                      OpDecorate %337 RelaxedPrecision 
                                                      OpDecorate %338 RelaxedPrecision 
                                                      OpDecorate %339 RelaxedPrecision 
                                                      OpDecorate %341 RelaxedPrecision 
                                                      OpDecorate %342 RelaxedPrecision 
                                                      OpDecorate %344 RelaxedPrecision 
                                                      OpDecorate %345 RelaxedPrecision 
                                                      OpDecorate %347 RelaxedPrecision 
                                                      OpDecorate %348 RelaxedPrecision 
                                                      OpDecorate %349 RelaxedPrecision 
                                                      OpDecorate %350 RelaxedPrecision 
                                                      OpDecorate %353 RelaxedPrecision 
                                                      OpDecorate %354 RelaxedPrecision 
                                                      OpDecorate %356 RelaxedPrecision 
                                                      OpDecorate %358 RelaxedPrecision 
                                                      OpDecorate %359 RelaxedPrecision 
                                                      OpDecorate %360 RelaxedPrecision 
                                                      OpDecorate %361 RelaxedPrecision 
                                                      OpDecorate %362 RelaxedPrecision 
                                                      OpDecorate %363 RelaxedPrecision 
                                                      OpDecorate %364 RelaxedPrecision 
                                                      OpDecorate %366 RelaxedPrecision 
                                                      OpDecorate %367 RelaxedPrecision 
                                                      OpDecorate %368 RelaxedPrecision 
                                                      OpDecorate %369 RelaxedPrecision 
                                                      OpDecorate %371 RelaxedPrecision 
                                                      OpDecorate %372 RelaxedPrecision 
                                                      OpDecorate %373 RelaxedPrecision 
                                                      OpDecorate %374 RelaxedPrecision 
                                                      OpDecorate %377 RelaxedPrecision 
                                                      OpDecorate %378 RelaxedPrecision 
                                                      OpDecorate %379 RelaxedPrecision 
                                                      OpDecorate %380 RelaxedPrecision 
                                                      OpDecorate %381 RelaxedPrecision 
                                                      OpDecorate %382 RelaxedPrecision 
                                                      OpDecorate %383 RelaxedPrecision 
                                                      OpDecorate %387 RelaxedPrecision 
                                                      OpDecorate %387 Location 387 
                                               %2 = OpTypeVoid 
                                               %3 = OpTypeFunction %2 
                                               %6 = OpTypeFloat 32 
                                               %7 = OpTypeVector %6 3 
                                               %8 = OpTypePointer Private %7 
                                Private f32_3* %9 = OpVariable Private 
                                              %10 = OpTypePointer Input %7 
                        Input f32_3* vs_TEXCOORD2 = OpVariable Input 
                                              %14 = OpTypeVector %6 4 
                                              %15 = OpTypeInt 32 0 
                                          u32 %16 = OpConstant 4 
                                              %17 = OpTypeArray %14 %16 
                                              %18 = OpTypeStruct %7 %14 %14 %14 %17 %14 %6 %14 %6 %6 %6 
                                              %19 = OpTypePointer Uniform %18 
Uniform struct {f32_3; f32_4; f32_4; f32_4; f32_4[4]; f32_4; f32; f32_4; f32; f32; f32;}* %20 = OpVariable Uniform 
                                              %21 = OpTypeInt 32 1 
                                          i32 %22 = OpConstant 1 
                                              %23 = OpTypePointer Uniform %14 
                                              %28 = OpTypePointer Private %6 
                                 Private f32* %29 = OpVariable Private 
                                              %39 = OpTypePointer Private %14 
                               Private f32_4* %40 = OpVariable Private 
                                          i32 %43 = OpConstant 0 
                                              %44 = OpTypePointer Uniform %7 
                               Private f32_4* %57 = OpVariable Private 
                                 Private f32* %67 = OpVariable Private 
                        Input f32_3* vs_TEXCOORD1 = OpVariable Input 
                               Private f32_3* %88 = OpVariable Private 
                                          u32 %97 = OpConstant 0 
                                         u32 %102 = OpConstant 1 
                                             %104 = OpTypeVector %6 2 
                                         f32 %107 = OpConstant 3.674022E-40 
                                       f32_2 %108 = OpConstantComposite %107 %107 
                                         i32 %116 = OpConstant 6 
                                             %117 = OpTypePointer Uniform %6 
                                         f32 %120 = OpConstant 3.674022E-40 
                                         i32 %133 = OpConstant 10 
                                         f32 %137 = OpConstant 3.674022E-40 
                                         f32 %143 = OpConstant 3.674022E-40 
                                Private f32* %150 = OpVariable Private 
                                             %155 = OpTypePointer Private %104 
                              Private f32_2* %156 = OpVariable Private 
                                         f32 %163 = OpConstant 3.674022E-40 
                                         f32 %180 = OpConstant 3.674022E-40 
                                         f32 %182 = OpConstant 3.674022E-40 
                                         i32 %199 = OpConstant 4 
                                         i32 %210 = OpConstant 2 
                                         i32 %219 = OpConstant 3 
                                       f32_2 %229 = OpConstantComposite %137 %137 
                                             %231 = OpTypeImage %6 Dim2D 0 0 0 1 Unknown 
                                             %232 = OpTypePointer UniformConstant %231 
        UniformConstant read_only Texture2D* %233 = OpVariable UniformConstant 
                                             %235 = OpTypeSampler 
                                             %236 = OpTypePointer UniformConstant %235 
                    UniformConstant sampler* %237 = OpVariable UniformConstant 
                                             %239 = OpTypeSampledImage %231 
                                         u32 %243 = OpConstant 3 
                                             %246 = OpTypeBool 
                                             %247 = OpTypePointer Private %246 
                               Private bool* %248 = OpVariable Private 
                                         u32 %249 = OpConstant 2 
        UniformConstant read_only Texture2D* %258 = OpVariable UniformConstant 
                    UniformConstant sampler* %260 = OpVariable UniformConstant 
                              Private f32_3* %299 = OpVariable Private 
        UniformConstant read_only Texture2D* %300 = OpVariable UniformConstant 
                    UniformConstant sampler* %302 = OpVariable UniformConstant 
                                             %305 = OpTypePointer Input %104 
                        Input f32_2* vs_TEXCOORD0 = OpVariable Input 
                                         i32 %311 = OpConstant 5 
                                         i32 %322 = OpConstant 9 
                                         i32 %327 = OpConstant 8 
                                Private f32* %332 = OpVariable Private 
                                Private f32* %339 = OpVariable Private 
                                         i32 %375 = OpConstant 7 
                                             %386 = OpTypePointer Output %14 
                               Output f32_4* %387 = OpVariable Output 
                                             %391 = OpTypePointer Output %6 
                                          void %4 = OpFunction None %3 
                                               %5 = OpLabel 
                                        f32_3 %12 = OpLoad vs_TEXCOORD2 
                                        f32_3 %13 = OpFNegate %12 
                               Uniform f32_4* %24 = OpAccessChain %20 %22 
                                        f32_4 %25 = OpLoad %24 
                                        f32_3 %26 = OpVectorShuffle %25 %25 0 1 2 
                                        f32_3 %27 = OpFAdd %13 %26 
                                                      OpStore %9 %27 
                                        f32_3 %30 = OpLoad %9 
                                        f32_3 %31 = OpLoad %9 
                                          f32 %32 = OpDot %30 %31 
                                                      OpStore %29 %32 
                                          f32 %33 = OpLoad %29 
                                          f32 %34 = OpExtInst %1 32 %33 
                                                      OpStore %29 %34 
                                          f32 %35 = OpLoad %29 
                                        f32_3 %36 = OpCompositeConstruct %35 %35 %35 
                                        f32_3 %37 = OpLoad %9 
                                        f32_3 %38 = OpFMul %36 %37 
                                                      OpStore %9 %38 
                                        f32_3 %41 = OpLoad vs_TEXCOORD2 
                                        f32_3 %42 = OpFNegate %41 
                               Uniform f32_3* %45 = OpAccessChain %20 %43 
                                        f32_3 %46 = OpLoad %45 
                                        f32_3 %47 = OpFAdd %42 %46 
                                        f32_4 %48 = OpLoad %40 
                                        f32_4 %49 = OpVectorShuffle %48 %47 4 5 6 3 
                                                      OpStore %40 %49 
                                        f32_4 %50 = OpLoad %40 
                                        f32_3 %51 = OpVectorShuffle %50 %50 0 1 2 
                                        f32_4 %52 = OpLoad %40 
                                        f32_3 %53 = OpVectorShuffle %52 %52 0 1 2 
                                          f32 %54 = OpDot %51 %53 
                                                      OpStore %29 %54 
                                          f32 %55 = OpLoad %29 
                                          f32 %56 = OpExtInst %1 32 %55 
                                                      OpStore %29 %56 
                                        f32_4 %58 = OpLoad %40 
                                        f32_3 %59 = OpVectorShuffle %58 %58 0 1 2 
                                          f32 %60 = OpLoad %29 
                                        f32_3 %61 = OpCompositeConstruct %60 %60 %60 
                                        f32_3 %62 = OpFMul %59 %61 
                                        f32_3 %63 = OpLoad %9 
                                        f32_3 %64 = OpFAdd %62 %63 
                                        f32_4 %65 = OpLoad %57 
                                        f32_4 %66 = OpVectorShuffle %65 %64 4 5 6 3 
                                                      OpStore %57 %66 
                                        f32_4 %68 = OpLoad %57 
                                        f32_3 %69 = OpVectorShuffle %68 %68 0 1 2 
                                        f32_4 %70 = OpLoad %57 
                                        f32_3 %71 = OpVectorShuffle %70 %70 0 1 2 
                                          f32 %72 = OpDot %69 %71 
                                                      OpStore %67 %72 
                                          f32 %73 = OpLoad %67 
                                          f32 %74 = OpExtInst %1 32 %73 
                                                      OpStore %67 %74 
                                          f32 %75 = OpLoad %67 
                                        f32_3 %76 = OpCompositeConstruct %75 %75 %75 
                                        f32_4 %77 = OpLoad %57 
                                        f32_3 %78 = OpVectorShuffle %77 %77 0 1 2 
                                        f32_3 %79 = OpFMul %76 %78 
                                        f32_4 %80 = OpLoad %57 
                                        f32_4 %81 = OpVectorShuffle %80 %79 4 5 6 3 
                                                      OpStore %57 %81 
                                        f32_3 %83 = OpLoad vs_TEXCOORD1 
                                        f32_3 %84 = OpLoad vs_TEXCOORD1 
                                          f32 %85 = OpDot %83 %84 
                                                      OpStore %67 %85 
                                          f32 %86 = OpLoad %67 
                                          f32 %87 = OpExtInst %1 32 %86 
                                                      OpStore %67 %87 
                                          f32 %89 = OpLoad %67 
                                        f32_3 %90 = OpCompositeConstruct %89 %89 %89 
                                        f32_3 %91 = OpLoad vs_TEXCOORD1 
                                        f32_3 %92 = OpFMul %90 %91 
                                                      OpStore %88 %92 
                                        f32_3 %93 = OpLoad %88 
                                        f32_4 %94 = OpLoad %57 
                                        f32_3 %95 = OpVectorShuffle %94 %94 0 1 2 
                                          f32 %96 = OpDot %93 %95 
                                 Private f32* %98 = OpAccessChain %57 %97 
                                                      OpStore %98 %96 
                                        f32_3 %99 = OpLoad %88 
                                       f32_3 %100 = OpLoad %9 
                                         f32 %101 = OpDot %99 %100 
                                Private f32* %103 = OpAccessChain %57 %102 
                                                      OpStore %103 %101 
                                       f32_4 %105 = OpLoad %57 
                                       f32_2 %106 = OpVectorShuffle %105 %105 0 1 
                                       f32_2 %109 = OpExtInst %1 40 %106 %108 
                                       f32_4 %110 = OpLoad %57 
                                       f32_4 %111 = OpVectorShuffle %110 %109 4 5 2 3 
                                                      OpStore %57 %111 
                                Private f32* %112 = OpAccessChain %57 %97 
                                         f32 %113 = OpLoad %112 
                                         f32 %114 = OpExtInst %1 30 %113 
                                Private f32* %115 = OpAccessChain %9 %97 
                                                      OpStore %115 %114 
                                Uniform f32* %118 = OpAccessChain %20 %116 
                                         f32 %119 = OpLoad %118 
                                         f32 %121 = OpFMul %119 %120 
                                Private f32* %122 = OpAccessChain %57 %97 
                                                      OpStore %122 %121 
                                Private f32* %123 = OpAccessChain %9 %97 
                                         f32 %124 = OpLoad %123 
                                Private f32* %125 = OpAccessChain %57 %97 
                                         f32 %126 = OpLoad %125 
                                         f32 %127 = OpFMul %124 %126 
                                Private f32* %128 = OpAccessChain %9 %97 
                                                      OpStore %128 %127 
                                Private f32* %129 = OpAccessChain %9 %97 
                                         f32 %130 = OpLoad %129 
                                         f32 %131 = OpExtInst %1 29 %130 
                                Private f32* %132 = OpAccessChain %9 %97 
                                                      OpStore %132 %131 
                                Uniform f32* %134 = OpAccessChain %20 %133 
                                         f32 %135 = OpLoad %134 
                                         f32 %136 = OpFNegate %135 
                                         f32 %138 = OpFMul %136 %137 
                                         f32 %139 = OpFAdd %138 %137 
                                Private f32* %140 = OpAccessChain %57 %97 
                                                      OpStore %140 %139 
                                Private f32* %141 = OpAccessChain %9 %97 
                                         f32 %142 = OpLoad %141 
                                         f32 %144 = OpFMul %142 %143 
                                Private f32* %145 = OpAccessChain %57 %97 
                                         f32 %146 = OpLoad %145 
                                         f32 %147 = OpFNegate %146 
                                         f32 %148 = OpFAdd %144 %147 
                                Private f32* %149 = OpAccessChain %9 %97 
                                                      OpStore %149 %148 
                                Uniform f32* %151 = OpAccessChain %20 %133 
                                         f32 %152 = OpLoad %151 
                                         f32 %153 = OpFMul %152 %137 
                                         f32 %154 = OpFAdd %153 %137 
                                                      OpStore %150 %154 
                                Private f32* %157 = OpAccessChain %57 %97 
                                         f32 %158 = OpLoad %157 
                                         f32 %159 = OpFNegate %158 
                                         f32 %160 = OpLoad %150 
                                         f32 %161 = OpFAdd %159 %160 
                                Private f32* %162 = OpAccessChain %156 %97 
                                                      OpStore %162 %161 
                                Private f32* %164 = OpAccessChain %156 %97 
                                         f32 %165 = OpLoad %164 
                                         f32 %166 = OpFDiv %163 %165 
                                Private f32* %167 = OpAccessChain %156 %97 
                                                      OpStore %167 %166 
                                Private f32* %168 = OpAccessChain %156 %97 
                                         f32 %169 = OpLoad %168 
                                Private f32* %170 = OpAccessChain %9 %97 
                                         f32 %171 = OpLoad %170 
                                         f32 %172 = OpFMul %169 %171 
                                Private f32* %173 = OpAccessChain %9 %97 
                                                      OpStore %173 %172 
                                Private f32* %174 = OpAccessChain %9 %97 
                                         f32 %175 = OpLoad %174 
                                         f32 %176 = OpExtInst %1 43 %175 %107 %163 
                                Private f32* %177 = OpAccessChain %9 %97 
                                                      OpStore %177 %176 
                                Private f32* %178 = OpAccessChain %9 %97 
                                         f32 %179 = OpLoad %178 
                                         f32 %181 = OpFMul %179 %180 
                                         f32 %183 = OpFAdd %181 %182 
                                Private f32* %184 = OpAccessChain %156 %97 
                                                      OpStore %184 %183 
                                Private f32* %185 = OpAccessChain %9 %97 
                                         f32 %186 = OpLoad %185 
                                Private f32* %187 = OpAccessChain %9 %97 
                                         f32 %188 = OpLoad %187 
                                         f32 %189 = OpFMul %186 %188 
                                Private f32* %190 = OpAccessChain %9 %97 
                                                      OpStore %190 %189 
                                Private f32* %191 = OpAccessChain %9 %97 
                                         f32 %192 = OpLoad %191 
                                Private f32* %193 = OpAccessChain %156 %97 
                                         f32 %194 = OpLoad %193 
                                         f32 %195 = OpFMul %192 %194 
                                Private f32* %196 = OpAccessChain %9 %97 
                                                      OpStore %196 %195 
                                       f32_3 %197 = OpLoad vs_TEXCOORD2 
                                       f32_4 %198 = OpVectorShuffle %197 %197 1 1 1 1 
                              Uniform f32_4* %200 = OpAccessChain %20 %199 %22 
                                       f32_4 %201 = OpLoad %200 
                                       f32_4 %202 = OpFMul %198 %201 
                                                      OpStore %40 %202 
                              Uniform f32_4* %203 = OpAccessChain %20 %199 %43 
                                       f32_4 %204 = OpLoad %203 
                                       f32_3 %205 = OpLoad vs_TEXCOORD2 
                                       f32_4 %206 = OpVectorShuffle %205 %205 0 0 0 0 
                                       f32_4 %207 = OpFMul %204 %206 
                                       f32_4 %208 = OpLoad %40 
                                       f32_4 %209 = OpFAdd %207 %208 
                                                      OpStore %40 %209 
                              Uniform f32_4* %211 = OpAccessChain %20 %199 %210 
                                       f32_4 %212 = OpLoad %211 
                                       f32_3 %213 = OpLoad vs_TEXCOORD2 
                                       f32_4 %214 = OpVectorShuffle %213 %213 2 2 2 2 
                                       f32_4 %215 = OpFMul %212 %214 
                                       f32_4 %216 = OpLoad %40 
                                       f32_4 %217 = OpFAdd %215 %216 
                                                      OpStore %40 %217 
                                       f32_4 %218 = OpLoad %40 
                              Uniform f32_4* %220 = OpAccessChain %20 %199 %219 
                                       f32_4 %221 = OpLoad %220 
                                       f32_4 %222 = OpFAdd %218 %221 
                                                      OpStore %40 %222 
                                       f32_4 %223 = OpLoad %40 
                                       f32_2 %224 = OpVectorShuffle %223 %223 0 1 
                                       f32_4 %225 = OpLoad %40 
                                       f32_2 %226 = OpVectorShuffle %225 %225 3 3 
                                       f32_2 %227 = OpFDiv %224 %226 
                                                      OpStore %156 %227 
                                       f32_2 %228 = OpLoad %156 
                                       f32_2 %230 = OpFAdd %228 %229 
                                                      OpStore %156 %230 
                         read_only Texture2D %234 = OpLoad %233 
                                     sampler %238 = OpLoad %237 
                  read_only Texture2DSampled %240 = OpSampledImage %234 %238 
                                       f32_2 %241 = OpLoad %156 
                                       f32_4 %242 = OpImageSampleImplicitLod %240 %241 
                                         f32 %244 = OpCompositeExtract %242 3 
                                Private f32* %245 = OpAccessChain %156 %97 
                                                      OpStore %245 %244 
                                Private f32* %250 = OpAccessChain %40 %249 
                                         f32 %251 = OpLoad %250 
                                        bool %252 = OpFOrdLessThan %107 %251 
                                                      OpStore %248 %252 
                                       f32_4 %253 = OpLoad %40 
                                       f32_3 %254 = OpVectorShuffle %253 %253 0 1 2 
                                       f32_4 %255 = OpLoad %40 
                                       f32_3 %256 = OpVectorShuffle %255 %255 0 1 2 
                                         f32 %257 = OpDot %254 %256 
                                                      OpStore %29 %257 
                         read_only Texture2D %259 = OpLoad %258 
                                     sampler %261 = OpLoad %260 
                  read_only Texture2DSampled %262 = OpSampledImage %259 %261 
                                         f32 %263 = OpLoad %29 
                                       f32_2 %264 = OpCompositeConstruct %263 %263 
                                       f32_4 %265 = OpImageSampleImplicitLod %262 %264 
                                         f32 %266 = OpCompositeExtract %265 0 
                                                      OpStore %29 %266 
                                        bool %267 = OpLoad %248 
                                         f32 %268 = OpSelect %267 %163 %107 
                                Private f32* %269 = OpAccessChain %57 %97 
                                                      OpStore %269 %268 
                                Private f32* %270 = OpAccessChain %156 %97 
                                         f32 %271 = OpLoad %270 
                                Private f32* %272 = OpAccessChain %57 %97 
                                         f32 %273 = OpLoad %272 
                                         f32 %274 = OpFMul %271 %273 
                                Private f32* %275 = OpAccessChain %57 %97 
                                                      OpStore %275 %274 
                                         f32 %276 = OpLoad %29 
                                Private f32* %277 = OpAccessChain %57 %97 
                                         f32 %278 = OpLoad %277 
                                         f32 %279 = OpFMul %276 %278 
                                Private f32* %280 = OpAccessChain %57 %97 
                                                      OpStore %280 %279 
                                       f32_4 %281 = OpLoad %57 
                                       f32_3 %282 = OpVectorShuffle %281 %281 0 0 0 
                              Uniform f32_4* %283 = OpAccessChain %20 %210 
                                       f32_4 %284 = OpLoad %283 
                                       f32_3 %285 = OpVectorShuffle %284 %284 0 1 2 
                                       f32_3 %286 = OpFMul %282 %285 
                                       f32_4 %287 = OpLoad %57 
                                       f32_4 %288 = OpVectorShuffle %287 %286 4 1 5 6 
                                                      OpStore %57 %288 
                                       f32_4 %289 = OpLoad %57 
                                       f32_3 %290 = OpVectorShuffle %289 %289 0 2 3 
                              Uniform f32_4* %291 = OpAccessChain %20 %219 
                                       f32_4 %292 = OpLoad %291 
                                       f32_3 %293 = OpVectorShuffle %292 %292 0 1 2 
                                       f32_3 %294 = OpFMul %290 %293 
                                                      OpStore %88 %294 
                                       f32_3 %295 = OpLoad %9 
                                       f32_3 %296 = OpVectorShuffle %295 %295 0 0 0 
                                       f32_3 %297 = OpLoad %88 
                                       f32_3 %298 = OpFMul %296 %297 
                                                      OpStore %9 %298 
                         read_only Texture2D %301 = OpLoad %300 
                                     sampler %303 = OpLoad %302 
                  read_only Texture2DSampled %304 = OpSampledImage %301 %303 
                                       f32_2 %307 = OpLoad vs_TEXCOORD0 
                                       f32_4 %308 = OpImageSampleImplicitLod %304 %307 
                                       f32_3 %309 = OpVectorShuffle %308 %308 0 1 2 
                                                      OpStore %299 %309 
                                       f32_3 %310 = OpLoad %299 
                              Uniform f32_4* %312 = OpAccessChain %20 %311 
                                       f32_4 %313 = OpLoad %312 
                                       f32_3 %314 = OpVectorShuffle %313 %313 0 1 2 
                                       f32_3 %315 = OpFMul %310 %314 
                                                      OpStore %88 %315 
                                       f32_4 %316 = OpLoad %57 
                                       f32_3 %317 = OpVectorShuffle %316 %316 0 2 3 
                                       f32_3 %318 = OpLoad %88 
                                       f32_3 %319 = OpFMul %317 %318 
                                       f32_4 %320 = OpLoad %57 
                                       f32_4 %321 = OpVectorShuffle %320 %319 4 1 5 6 
                                                      OpStore %57 %321 
                                Uniform f32* %323 = OpAccessChain %20 %322 
                                         f32 %324 = OpLoad %323 
                                         f32 %325 = OpFNegate %324 
                                         f32 %326 = OpFMul %325 %137 
                                Uniform f32* %328 = OpAccessChain %20 %327 
                                         f32 %329 = OpLoad %328 
                                         f32 %330 = OpFAdd %326 %329 
                                Private f32* %331 = OpAccessChain %88 %97 
                                                      OpStore %331 %330 
                                Private f32* %333 = OpAccessChain %57 %102 
                                         f32 %334 = OpLoad %333 
                                Private f32* %335 = OpAccessChain %88 %97 
                                         f32 %336 = OpLoad %335 
                                         f32 %337 = OpFNegate %336 
                                         f32 %338 = OpFAdd %334 %337 
                                                      OpStore %332 %338 
                                Uniform f32* %340 = OpAccessChain %20 %322 
                                         f32 %341 = OpLoad %340 
                                         f32 %342 = OpFMul %341 %137 
                                Uniform f32* %343 = OpAccessChain %20 %327 
                                         f32 %344 = OpLoad %343 
                                         f32 %345 = OpFAdd %342 %344 
                                                      OpStore %339 %345 
                                Private f32* %346 = OpAccessChain %88 %97 
                                         f32 %347 = OpLoad %346 
                                         f32 %348 = OpFNegate %347 
                                         f32 %349 = OpLoad %339 
                                         f32 %350 = OpFAdd %348 %349 
                                Private f32* %351 = OpAccessChain %88 %97 
                                                      OpStore %351 %350 
                                Private f32* %352 = OpAccessChain %88 %97 
                                         f32 %353 = OpLoad %352 
                                         f32 %354 = OpFDiv %163 %353 
                                Private f32* %355 = OpAccessChain %88 %97 
                                                      OpStore %355 %354 
                                         f32 %356 = OpLoad %332 
                                Private f32* %357 = OpAccessChain %88 %97 
                                         f32 %358 = OpLoad %357 
                                         f32 %359 = OpFMul %356 %358 
                                                      OpStore %332 %359 
                                         f32 %360 = OpLoad %332 
                                         f32 %361 = OpExtInst %1 43 %360 %107 %163 
                                                      OpStore %332 %361 
                                         f32 %362 = OpLoad %332 
                                         f32 %363 = OpFMul %362 %180 
                                         f32 %364 = OpFAdd %363 %182 
                                Private f32* %365 = OpAccessChain %88 %97 
                                                      OpStore %365 %364 
                                         f32 %366 = OpLoad %332 
                                         f32 %367 = OpLoad %332 
                                         f32 %368 = OpFMul %366 %367 
                                                      OpStore %332 %368 
                                         f32 %369 = OpLoad %332 
                                Private f32* %370 = OpAccessChain %88 %97 
                                         f32 %371 = OpLoad %370 
                                         f32 %372 = OpFMul %369 %371 
                                                      OpStore %332 %372 
                                         f32 %373 = OpLoad %332 
                                       f32_3 %374 = OpCompositeConstruct %373 %373 %373 
                              Uniform f32_4* %376 = OpAccessChain %20 %375 
                                       f32_4 %377 = OpLoad %376 
                                       f32_3 %378 = OpVectorShuffle %377 %377 0 1 2 
                                       f32_3 %379 = OpFMul %374 %378 
                                                      OpStore %88 %379 
                                       f32_4 %380 = OpLoad %57 
                                       f32_3 %381 = OpVectorShuffle %380 %380 0 2 3 
                                       f32_3 %382 = OpLoad %88 
                                       f32_3 %383 = OpFMul %381 %382 
                                       f32_3 %384 = OpLoad %9 
                                       f32_3 %385 = OpFAdd %383 %384 
                                                      OpStore %9 %385 
                                       f32_3 %388 = OpLoad %9 
                                       f32_4 %389 = OpLoad %387 
                                       f32_4 %390 = OpVectorShuffle %389 %388 4 5 6 3 
                                                      OpStore %387 %390 
                                 Output f32* %392 = OpAccessChain %387 %243 
                                                      OpStore %392 %163 
                                                      OpReturn
                                                      OpFunctionEnd
"
}
SubProgram "vulkan hw_tier02 " {
Keywords { "SPOT" }
"; SPIR-V
; Version: 1.0
; Generator: Khronos Glslang Reference Front End; 6
; Bound: 196
; Schema: 0
                                                      OpCapability Shader 
                                               %1 = OpExtInstImport "GLSL.std.450" 
                                                      OpMemoryModel Logical GLSL450 
                                                      OpEntryPoint Vertex %4 "main" %11 %75 %85 %101 %106 %137 %143 %179 %187 
                                                      OpName vs_TEXCOORD0 "vs_TEXCOORD0" 
                                                      OpName vs_TEXCOORD1 "vs_TEXCOORD1" 
                                                      OpName vs_TEXCOORD2 "vs_TEXCOORD2" 
                                                      OpName vs_TEXCOORD3 "vs_TEXCOORD3" 
                                                      OpName vs_TEXCOORD4 "vs_TEXCOORD4" 
                                                      OpDecorate %11 Location 11 
                                                      OpDecorate %16 ArrayStride 16 
                                                      OpDecorate %17 ArrayStride 17 
                                                      OpDecorate %18 ArrayStride 18 
                                                      OpDecorate %19 ArrayStride 19 
                                                      OpMemberDecorate %20 0 Offset 20 
                                                      OpMemberDecorate %20 1 Offset 20 
                                                      OpMemberDecorate %20 2 Offset 20 
                                                      OpMemberDecorate %20 3 Offset 20 
                                                      OpMemberDecorate %20 4 Offset 20 
                                                      OpDecorate %20 Block 
                                                      OpDecorate %22 DescriptorSet 22 
                                                      OpDecorate %22 Binding 22 
                                                      OpMemberDecorate %73 0 BuiltIn 73 
                                                      OpMemberDecorate %73 1 BuiltIn 73 
                                                      OpMemberDecorate %73 2 BuiltIn 73 
                                                      OpDecorate %73 Block 
                                                      OpDecorate %85 Location 85 
                                                      OpDecorate vs_TEXCOORD0 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD0 Location 101 
                                                      OpDecorate %106 Location 106 
                                                      OpDecorate vs_TEXCOORD1 Location 137 
                                                      OpDecorate vs_TEXCOORD2 Location 143 
                                                      OpDecorate vs_TEXCOORD3 Location 179 
                                                      OpDecorate vs_TEXCOORD4 Location 187 
                                               %2 = OpTypeVoid 
                                               %3 = OpTypeFunction %2 
                                               %6 = OpTypeFloat 32 
                                               %7 = OpTypeVector %6 4 
                                               %8 = OpTypePointer Private %7 
                                Private f32_4* %9 = OpVariable Private 
                                              %10 = OpTypePointer Input %7 
                                 Input f32_4* %11 = OpVariable Input 
                                              %14 = OpTypeInt 32 0 
                                          u32 %15 = OpConstant 4 
                                              %16 = OpTypeArray %7 %15 
                                              %17 = OpTypeArray %7 %15 
                                              %18 = OpTypeArray %7 %15 
                                              %19 = OpTypeArray %7 %15 
                                              %20 = OpTypeStruct %16 %17 %18 %19 %7 
                                              %21 = OpTypePointer Uniform %20 
Uniform struct {f32_4[4]; f32_4[4]; f32_4[4]; f32_4[4]; f32_4;}* %22 = OpVariable Uniform 
                                              %23 = OpTypeInt 32 1 
                                          i32 %24 = OpConstant 0 
                                          i32 %25 = OpConstant 1 
                                              %26 = OpTypePointer Uniform %7 
                                          i32 %37 = OpConstant 2 
                               Private f32_4* %45 = OpVariable Private 
                                          i32 %47 = OpConstant 3 
                               Private f32_4* %51 = OpVariable Private 
                                          u32 %71 = OpConstant 1 
                                              %72 = OpTypeArray %6 %71 
                                              %73 = OpTypeStruct %7 %6 %72 
                                              %74 = OpTypePointer Output %73 
         Output struct {f32_4; f32; f32[1];}* %75 = OpVariable Output 
                                              %83 = OpTypePointer Output %7 
                                 Input f32_4* %85 = OpVariable Input 
                                              %86 = OpTypeVector %6 2 
                                          i32 %89 = OpConstant 4 
                                             %100 = OpTypePointer Output %86 
                       Output f32_2* vs_TEXCOORD0 = OpVariable Output 
                                             %104 = OpTypeVector %6 3 
                                             %105 = OpTypePointer Input %104 
                                Input f32_3* %106 = OpVariable Input 
                                         u32 %112 = OpConstant 0 
                                             %113 = OpTypePointer Private %6 
                                         u32 %126 = OpConstant 2 
                                Private f32* %128 = OpVariable Private 
                                             %136 = OpTypePointer Output %104 
                       Output f32_3* vs_TEXCOORD1 = OpVariable Output 
                       Output f32_3* vs_TEXCOORD2 = OpVariable Output 
                       Output f32_4* vs_TEXCOORD3 = OpVariable Output 
                       Output f32_4* vs_TEXCOORD4 = OpVariable Output 
                                         f32 %188 = OpConstant 3.674022E-40 
                                       f32_4 %189 = OpConstantComposite %188 %188 %188 %188 
                                             %190 = OpTypePointer Output %6 
                                          void %4 = OpFunction None %3 
                                               %5 = OpLabel 
                                        f32_4 %12 = OpLoad %11 
                                        f32_4 %13 = OpVectorShuffle %12 %12 1 1 1 1 
                               Uniform f32_4* %27 = OpAccessChain %22 %24 %25 
                                        f32_4 %28 = OpLoad %27 
                                        f32_4 %29 = OpFMul %13 %28 
                                                      OpStore %9 %29 
                               Uniform f32_4* %30 = OpAccessChain %22 %24 %24 
                                        f32_4 %31 = OpLoad %30 
                                        f32_4 %32 = OpLoad %11 
                                        f32_4 %33 = OpVectorShuffle %32 %32 0 0 0 0 
                                        f32_4 %34 = OpFMul %31 %33 
                                        f32_4 %35 = OpLoad %9 
                                        f32_4 %36 = OpFAdd %34 %35 
                                                      OpStore %9 %36 
                               Uniform f32_4* %38 = OpAccessChain %22 %24 %37 
                                        f32_4 %39 = OpLoad %38 
                                        f32_4 %40 = OpLoad %11 
                                        f32_4 %41 = OpVectorShuffle %40 %40 2 2 2 2 
                                        f32_4 %42 = OpFMul %39 %41 
                                        f32_4 %43 = OpLoad %9 
                                        f32_4 %44 = OpFAdd %42 %43 
                                                      OpStore %9 %44 
                                        f32_4 %46 = OpLoad %9 
                               Uniform f32_4* %48 = OpAccessChain %22 %24 %47 
                                        f32_4 %49 = OpLoad %48 
                                        f32_4 %50 = OpFAdd %46 %49 
                                                      OpStore %45 %50 
                                        f32_4 %52 = OpLoad %45 
                                        f32_4 %53 = OpVectorShuffle %52 %52 1 1 1 1 
                               Uniform f32_4* %54 = OpAccessChain %22 %37 %25 
                                        f32_4 %55 = OpLoad %54 
                                        f32_4 %56 = OpFMul %53 %55 
                                                      OpStore %51 %56 
                               Uniform f32_4* %57 = OpAccessChain %22 %37 %24 
                                        f32_4 %58 = OpLoad %57 
                                        f32_4 %59 = OpLoad %45 
                                        f32_4 %60 = OpVectorShuffle %59 %59 0 0 0 0 
                                        f32_4 %61 = OpFMul %58 %60 
                                        f32_4 %62 = OpLoad %51 
                                        f32_4 %63 = OpFAdd %61 %62 
                                                      OpStore %51 %63 
                               Uniform f32_4* %64 = OpAccessChain %22 %37 %37 
                                        f32_4 %65 = OpLoad %64 
                                        f32_4 %66 = OpLoad %45 
                                        f32_4 %67 = OpVectorShuffle %66 %66 2 2 2 2 
                                        f32_4 %68 = OpFMul %65 %67 
                                        f32_4 %69 = OpLoad %51 
                                        f32_4 %70 = OpFAdd %68 %69 
                                                      OpStore %51 %70 
                               Uniform f32_4* %76 = OpAccessChain %22 %37 %47 
                                        f32_4 %77 = OpLoad %76 
                                        f32_4 %78 = OpLoad %45 
                                        f32_4 %79 = OpVectorShuffle %78 %78 3 3 3 3 
                                        f32_4 %80 = OpFMul %77 %79 
                                        f32_4 %81 = OpLoad %51 
                                        f32_4 %82 = OpFAdd %80 %81 
                                Output f32_4* %84 = OpAccessChain %75 %24 
                                                      OpStore %84 %82 
                                        f32_4 %87 = OpLoad %85 
                                        f32_2 %88 = OpVectorShuffle %87 %87 0 1 
                               Uniform f32_4* %90 = OpAccessChain %22 %89 
                                        f32_4 %91 = OpLoad %90 
                                        f32_2 %92 = OpVectorShuffle %91 %91 0 1 
                                        f32_2 %93 = OpFMul %88 %92 
                               Uniform f32_4* %94 = OpAccessChain %22 %89 
                                        f32_4 %95 = OpLoad %94 
                                        f32_2 %96 = OpVectorShuffle %95 %95 2 3 
                                        f32_2 %97 = OpFAdd %93 %96 
                                        f32_4 %98 = OpLoad %45 
                                        f32_4 %99 = OpVectorShuffle %98 %97 4 5 2 3 
                                                      OpStore %45 %99 
                                       f32_4 %102 = OpLoad %45 
                                       f32_2 %103 = OpVectorShuffle %102 %102 0 1 
                                                      OpStore vs_TEXCOORD0 %103 
                                       f32_3 %107 = OpLoad %106 
                              Uniform f32_4* %108 = OpAccessChain %22 %25 %24 
                                       f32_4 %109 = OpLoad %108 
                                       f32_3 %110 = OpVectorShuffle %109 %109 0 1 2 
                                         f32 %111 = OpDot %107 %110 
                                Private f32* %114 = OpAccessChain %45 %112 
                                                      OpStore %114 %111 
                                       f32_3 %115 = OpLoad %106 
                              Uniform f32_4* %116 = OpAccessChain %22 %25 %25 
                                       f32_4 %117 = OpLoad %116 
                                       f32_3 %118 = OpVectorShuffle %117 %117 0 1 2 
                                         f32 %119 = OpDot %115 %118 
                                Private f32* %120 = OpAccessChain %45 %71 
                                                      OpStore %120 %119 
                                       f32_3 %121 = OpLoad %106 
                              Uniform f32_4* %122 = OpAccessChain %22 %25 %37 
                                       f32_4 %123 = OpLoad %122 
                                       f32_3 %124 = OpVectorShuffle %123 %123 0 1 2 
                                         f32 %125 = OpDot %121 %124 
                                Private f32* %127 = OpAccessChain %45 %126 
                                                      OpStore %127 %125 
                                       f32_4 %129 = OpLoad %45 
                                       f32_3 %130 = OpVectorShuffle %129 %129 0 1 2 
                                       f32_4 %131 = OpLoad %45 
                                       f32_3 %132 = OpVectorShuffle %131 %131 0 1 2 
                                         f32 %133 = OpDot %130 %132 
                                                      OpStore %128 %133 
                                         f32 %134 = OpLoad %128 
                                         f32 %135 = OpExtInst %1 32 %134 
                                                      OpStore %128 %135 
                                         f32 %138 = OpLoad %128 
                                       f32_3 %139 = OpCompositeConstruct %138 %138 %138 
                                       f32_4 %140 = OpLoad %45 
                                       f32_3 %141 = OpVectorShuffle %140 %140 0 1 2 
                                       f32_3 %142 = OpFMul %139 %141 
                                                      OpStore vs_TEXCOORD1 %142 
                              Uniform f32_4* %144 = OpAccessChain %22 %24 %47 
                                       f32_4 %145 = OpLoad %144 
                                       f32_3 %146 = OpVectorShuffle %145 %145 0 1 2 
                                       f32_4 %147 = OpLoad %11 
                                       f32_3 %148 = OpVectorShuffle %147 %147 3 3 3 
                                       f32_3 %149 = OpFMul %146 %148 
                                       f32_4 %150 = OpLoad %9 
                                       f32_3 %151 = OpVectorShuffle %150 %150 0 1 2 
                                       f32_3 %152 = OpFAdd %149 %151 
                                                      OpStore vs_TEXCOORD2 %152 
                              Uniform f32_4* %153 = OpAccessChain %22 %24 %47 
                                       f32_4 %154 = OpLoad %153 
                                       f32_4 %155 = OpLoad %11 
                                       f32_4 %156 = OpVectorShuffle %155 %155 3 3 3 3 
                                       f32_4 %157 = OpFMul %154 %156 
                                       f32_4 %158 = OpLoad %9 
                                       f32_4 %159 = OpFAdd %157 %158 
                                                      OpStore %9 %159 
                                       f32_4 %160 = OpLoad %9 
                                       f32_4 %161 = OpVectorShuffle %160 %160 1 1 1 1 
                              Uniform f32_4* %162 = OpAccessChain %22 %47 %25 
                                       f32_4 %163 = OpLoad %162 
                                       f32_4 %164 = OpFMul %161 %163 
                                                      OpStore %45 %164 
                              Uniform f32_4* %165 = OpAccessChain %22 %47 %24 
                                       f32_4 %166 = OpLoad %165 
                                       f32_4 %167 = OpLoad %9 
                                       f32_4 %168 = OpVectorShuffle %167 %167 0 0 0 0 
                                       f32_4 %169 = OpFMul %166 %168 
                                       f32_4 %170 = OpLoad %45 
                                       f32_4 %171 = OpFAdd %169 %170 
                                                      OpStore %45 %171 
                              Uniform f32_4* %172 = OpAccessChain %22 %47 %37 
                                       f32_4 %173 = OpLoad %172 
                                       f32_4 %174 = OpLoad %9 
                                       f32_4 %175 = OpVectorShuffle %174 %174 2 2 2 2 
                                       f32_4 %176 = OpFMul %173 %175 
                                       f32_4 %177 = OpLoad %45 
                                       f32_4 %178 = OpFAdd %176 %177 
                                                      OpStore %45 %178 
                              Uniform f32_4* %180 = OpAccessChain %22 %47 %47 
                                       f32_4 %181 = OpLoad %180 
                                       f32_4 %182 = OpLoad %9 
                                       f32_4 %183 = OpVectorShuffle %182 %182 3 3 3 3 
                                       f32_4 %184 = OpFMul %181 %183 
                                       f32_4 %185 = OpLoad %45 
                                       f32_4 %186 = OpFAdd %184 %185 
                                                      OpStore vs_TEXCOORD3 %186 
                                                      OpStore vs_TEXCOORD4 %189 
                                 Output f32* %191 = OpAccessChain %75 %24 %71 
                                         f32 %192 = OpLoad %191 
                                         f32 %193 = OpFNegate %192 
                                 Output f32* %194 = OpAccessChain %75 %24 %71 
                                                      OpStore %194 %193 
                                                      OpReturn
                                                      OpFunctionEnd
; SPIR-V
; Version: 1.0
; Generator: Khronos Glslang Reference Front End; 6
; Bound: 394
; Schema: 0
                                                      OpCapability Shader 
                                               %1 = OpExtInstImport "GLSL.std.450" 
                                                      OpMemoryModel Logical GLSL450 
                                                      OpEntryPoint Fragment %4 "main" %11 %82 %306 %387 
                                                      OpExecutionMode %4 OriginUpperLeft 
                                                      OpName vs_TEXCOORD2 "vs_TEXCOORD2" 
                                                      OpName vs_TEXCOORD1 "vs_TEXCOORD1" 
                                                      OpName vs_TEXCOORD0 "vs_TEXCOORD0" 
                                                      OpDecorate vs_TEXCOORD2 Location 11 
                                                      OpDecorate %17 ArrayStride 17 
                                                      OpMemberDecorate %18 0 Offset 18 
                                                      OpMemberDecorate %18 1 Offset 18 
                                                      OpMemberDecorate %18 2 RelaxedPrecision 
                                                      OpMemberDecorate %18 2 Offset 18 
                                                      OpMemberDecorate %18 3 RelaxedPrecision 
                                                      OpMemberDecorate %18 3 Offset 18 
                                                      OpMemberDecorate %18 4 Offset 18 
                                                      OpMemberDecorate %18 5 RelaxedPrecision 
                                                      OpMemberDecorate %18 5 Offset 18 
                                                      OpMemberDecorate %18 6 RelaxedPrecision 
                                                      OpMemberDecorate %18 6 Offset 18 
                                                      OpMemberDecorate %18 7 RelaxedPrecision 
                                                      OpMemberDecorate %18 7 Offset 18 
                                                      OpMemberDecorate %18 8 RelaxedPrecision 
                                                      OpMemberDecorate %18 8 Offset 18 
                                                      OpMemberDecorate %18 9 RelaxedPrecision 
                                                      OpMemberDecorate %18 9 Offset 18 
                                                      OpMemberDecorate %18 10 RelaxedPrecision 
                                                      OpMemberDecorate %18 10 Offset 18 
                                                      OpDecorate %18 Block 
                                                      OpDecorate %20 DescriptorSet 20 
                                                      OpDecorate %20 Binding 20 
                                                      OpDecorate %57 RelaxedPrecision 
                                                      OpDecorate %67 RelaxedPrecision 
                                                      OpDecorate %68 RelaxedPrecision 
                                                      OpDecorate %69 RelaxedPrecision 
                                                      OpDecorate %70 RelaxedPrecision 
                                                      OpDecorate %71 RelaxedPrecision 
                                                      OpDecorate %72 RelaxedPrecision 
                                                      OpDecorate %73 RelaxedPrecision 
                                                      OpDecorate %74 RelaxedPrecision 
                                                      OpDecorate %75 RelaxedPrecision 
                                                      OpDecorate %76 RelaxedPrecision 
                                                      OpDecorate %77 RelaxedPrecision 
                                                      OpDecorate %78 RelaxedPrecision 
                                                      OpDecorate %79 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD1 Location 82 
                                                      OpDecorate %86 RelaxedPrecision 
                                                      OpDecorate %87 RelaxedPrecision 
                                                      OpDecorate %88 RelaxedPrecision 
                                                      OpDecorate %89 RelaxedPrecision 
                                                      OpDecorate %93 RelaxedPrecision 
                                                      OpDecorate %94 RelaxedPrecision 
                                                      OpDecorate %95 RelaxedPrecision 
                                                      OpDecorate %96 RelaxedPrecision 
                                                      OpDecorate %99 RelaxedPrecision 
                                                      OpDecorate %105 RelaxedPrecision 
                                                      OpDecorate %106 RelaxedPrecision 
                                                      OpDecorate %109 RelaxedPrecision 
                                                      OpDecorate %113 RelaxedPrecision 
                                                      OpDecorate %114 RelaxedPrecision 
                                                      OpDecorate %119 RelaxedPrecision 
                                                      OpDecorate %121 RelaxedPrecision 
                                                      OpDecorate %126 RelaxedPrecision 
                                                      OpDecorate %135 RelaxedPrecision 
                                                      OpDecorate %136 RelaxedPrecision 
                                                      OpDecorate %138 RelaxedPrecision 
                                                      OpDecorate %139 RelaxedPrecision 
                                                      OpDecorate %146 RelaxedPrecision 
                                                      OpDecorate %147 RelaxedPrecision 
                                                      OpDecorate %150 RelaxedPrecision 
                                                      OpDecorate %152 RelaxedPrecision 
                                                      OpDecorate %153 RelaxedPrecision 
                                                      OpDecorate %154 RelaxedPrecision 
                                                      OpDecorate %158 RelaxedPrecision 
                                                      OpDecorate %159 RelaxedPrecision 
                                                      OpDecorate %160 RelaxedPrecision 
                                                      OpDecorate %161 RelaxedPrecision 
                                                      OpDecorate %233 DescriptorSet 233 
                                                      OpDecorate %233 Binding 233 
                                                      OpDecorate %237 DescriptorSet 237 
                                                      OpDecorate %237 Binding 237 
                                                      OpDecorate %258 DescriptorSet 258 
                                                      OpDecorate %258 Binding 258 
                                                      OpDecorate %260 DescriptorSet 260 
                                                      OpDecorate %260 Binding 260 
                                                      OpDecorate %273 RelaxedPrecision 
                                                      OpDecorate %278 RelaxedPrecision 
                                                      OpDecorate %281 RelaxedPrecision 
                                                      OpDecorate %282 RelaxedPrecision 
                                                      OpDecorate %284 RelaxedPrecision 
                                                      OpDecorate %285 RelaxedPrecision 
                                                      OpDecorate %286 RelaxedPrecision 
                                                      OpDecorate %289 RelaxedPrecision 
                                                      OpDecorate %290 RelaxedPrecision 
                                                      OpDecorate %292 RelaxedPrecision 
                                                      OpDecorate %293 RelaxedPrecision 
                                                      OpDecorate %294 RelaxedPrecision 
                                                      OpDecorate %297 RelaxedPrecision 
                                                      OpDecorate %299 RelaxedPrecision 
                                                      OpDecorate %300 RelaxedPrecision 
                                                      OpDecorate %300 DescriptorSet 300 
                                                      OpDecorate %300 Binding 300 
                                                      OpDecorate %301 RelaxedPrecision 
                                                      OpDecorate %302 RelaxedPrecision 
                                                      OpDecorate %302 DescriptorSet 302 
                                                      OpDecorate %302 Binding 302 
                                                      OpDecorate %303 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD0 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD0 Location 306 
                                                      OpDecorate %307 RelaxedPrecision 
                                                      OpDecorate %308 RelaxedPrecision 
                                                      OpDecorate %309 RelaxedPrecision 
                                                      OpDecorate %310 RelaxedPrecision 
                                                      OpDecorate %313 RelaxedPrecision 
                                                      OpDecorate %314 RelaxedPrecision 
                                                      OpDecorate %315 RelaxedPrecision 
                                                      OpDecorate %316 RelaxedPrecision 
                                                      OpDecorate %317 RelaxedPrecision 
                                                      OpDecorate %318 RelaxedPrecision 
                                                      OpDecorate %319 RelaxedPrecision 
                                                      OpDecorate %324 RelaxedPrecision 
                                                      OpDecorate %325 RelaxedPrecision 
                                                      OpDecorate %326 RelaxedPrecision 
                                                      OpDecorate %329 RelaxedPrecision 
                                                      OpDecorate %330 RelaxedPrecision 
                                                      OpDecorate %332 RelaxedPrecision 
                                                      OpDecorate %334 RelaxedPrecision 
                                                      OpDecorate %336 RelaxedPrecision 
                                                      OpDecorate %337 RelaxedPrecision 
                                                      OpDecorate %338 RelaxedPrecision 
                                                      OpDecorate %339 RelaxedPrecision 
                                                      OpDecorate %341 RelaxedPrecision 
                                                      OpDecorate %342 RelaxedPrecision 
                                                      OpDecorate %344 RelaxedPrecision 
                                                      OpDecorate %345 RelaxedPrecision 
                                                      OpDecorate %347 RelaxedPrecision 
                                                      OpDecorate %348 RelaxedPrecision 
                                                      OpDecorate %349 RelaxedPrecision 
                                                      OpDecorate %350 RelaxedPrecision 
                                                      OpDecorate %353 RelaxedPrecision 
                                                      OpDecorate %354 RelaxedPrecision 
                                                      OpDecorate %356 RelaxedPrecision 
                                                      OpDecorate %358 RelaxedPrecision 
                                                      OpDecorate %359 RelaxedPrecision 
                                                      OpDecorate %360 RelaxedPrecision 
                                                      OpDecorate %361 RelaxedPrecision 
                                                      OpDecorate %362 RelaxedPrecision 
                                                      OpDecorate %363 RelaxedPrecision 
                                                      OpDecorate %364 RelaxedPrecision 
                                                      OpDecorate %366 RelaxedPrecision 
                                                      OpDecorate %367 RelaxedPrecision 
                                                      OpDecorate %368 RelaxedPrecision 
                                                      OpDecorate %369 RelaxedPrecision 
                                                      OpDecorate %371 RelaxedPrecision 
                                                      OpDecorate %372 RelaxedPrecision 
                                                      OpDecorate %373 RelaxedPrecision 
                                                      OpDecorate %374 RelaxedPrecision 
                                                      OpDecorate %377 RelaxedPrecision 
                                                      OpDecorate %378 RelaxedPrecision 
                                                      OpDecorate %379 RelaxedPrecision 
                                                      OpDecorate %380 RelaxedPrecision 
                                                      OpDecorate %381 RelaxedPrecision 
                                                      OpDecorate %382 RelaxedPrecision 
                                                      OpDecorate %383 RelaxedPrecision 
                                                      OpDecorate %387 RelaxedPrecision 
                                                      OpDecorate %387 Location 387 
                                               %2 = OpTypeVoid 
                                               %3 = OpTypeFunction %2 
                                               %6 = OpTypeFloat 32 
                                               %7 = OpTypeVector %6 3 
                                               %8 = OpTypePointer Private %7 
                                Private f32_3* %9 = OpVariable Private 
                                              %10 = OpTypePointer Input %7 
                        Input f32_3* vs_TEXCOORD2 = OpVariable Input 
                                              %14 = OpTypeVector %6 4 
                                              %15 = OpTypeInt 32 0 
                                          u32 %16 = OpConstant 4 
                                              %17 = OpTypeArray %14 %16 
                                              %18 = OpTypeStruct %7 %14 %14 %14 %17 %14 %6 %14 %6 %6 %6 
                                              %19 = OpTypePointer Uniform %18 
Uniform struct {f32_3; f32_4; f32_4; f32_4; f32_4[4]; f32_4; f32; f32_4; f32; f32; f32;}* %20 = OpVariable Uniform 
                                              %21 = OpTypeInt 32 1 
                                          i32 %22 = OpConstant 1 
                                              %23 = OpTypePointer Uniform %14 
                                              %28 = OpTypePointer Private %6 
                                 Private f32* %29 = OpVariable Private 
                                              %39 = OpTypePointer Private %14 
                               Private f32_4* %40 = OpVariable Private 
                                          i32 %43 = OpConstant 0 
                                              %44 = OpTypePointer Uniform %7 
                               Private f32_4* %57 = OpVariable Private 
                                 Private f32* %67 = OpVariable Private 
                        Input f32_3* vs_TEXCOORD1 = OpVariable Input 
                               Private f32_3* %88 = OpVariable Private 
                                          u32 %97 = OpConstant 0 
                                         u32 %102 = OpConstant 1 
                                             %104 = OpTypeVector %6 2 
                                         f32 %107 = OpConstant 3.674022E-40 
                                       f32_2 %108 = OpConstantComposite %107 %107 
                                         i32 %116 = OpConstant 6 
                                             %117 = OpTypePointer Uniform %6 
                                         f32 %120 = OpConstant 3.674022E-40 
                                         i32 %133 = OpConstant 10 
                                         f32 %137 = OpConstant 3.674022E-40 
                                         f32 %143 = OpConstant 3.674022E-40 
                                Private f32* %150 = OpVariable Private 
                                             %155 = OpTypePointer Private %104 
                              Private f32_2* %156 = OpVariable Private 
                                         f32 %163 = OpConstant 3.674022E-40 
                                         f32 %180 = OpConstant 3.674022E-40 
                                         f32 %182 = OpConstant 3.674022E-40 
                                         i32 %199 = OpConstant 4 
                                         i32 %210 = OpConstant 2 
                                         i32 %219 = OpConstant 3 
                                       f32_2 %229 = OpConstantComposite %137 %137 
                                             %231 = OpTypeImage %6 Dim2D 0 0 0 1 Unknown 
                                             %232 = OpTypePointer UniformConstant %231 
        UniformConstant read_only Texture2D* %233 = OpVariable UniformConstant 
                                             %235 = OpTypeSampler 
                                             %236 = OpTypePointer UniformConstant %235 
                    UniformConstant sampler* %237 = OpVariable UniformConstant 
                                             %239 = OpTypeSampledImage %231 
                                         u32 %243 = OpConstant 3 
                                             %246 = OpTypeBool 
                                             %247 = OpTypePointer Private %246 
                               Private bool* %248 = OpVariable Private 
                                         u32 %249 = OpConstant 2 
        UniformConstant read_only Texture2D* %258 = OpVariable UniformConstant 
                    UniformConstant sampler* %260 = OpVariable UniformConstant 
                              Private f32_3* %299 = OpVariable Private 
        UniformConstant read_only Texture2D* %300 = OpVariable UniformConstant 
                    UniformConstant sampler* %302 = OpVariable UniformConstant 
                                             %305 = OpTypePointer Input %104 
                        Input f32_2* vs_TEXCOORD0 = OpVariable Input 
                                         i32 %311 = OpConstant 5 
                                         i32 %322 = OpConstant 9 
                                         i32 %327 = OpConstant 8 
                                Private f32* %332 = OpVariable Private 
                                Private f32* %339 = OpVariable Private 
                                         i32 %375 = OpConstant 7 
                                             %386 = OpTypePointer Output %14 
                               Output f32_4* %387 = OpVariable Output 
                                             %391 = OpTypePointer Output %6 
                                          void %4 = OpFunction None %3 
                                               %5 = OpLabel 
                                        f32_3 %12 = OpLoad vs_TEXCOORD2 
                                        f32_3 %13 = OpFNegate %12 
                               Uniform f32_4* %24 = OpAccessChain %20 %22 
                                        f32_4 %25 = OpLoad %24 
                                        f32_3 %26 = OpVectorShuffle %25 %25 0 1 2 
                                        f32_3 %27 = OpFAdd %13 %26 
                                                      OpStore %9 %27 
                                        f32_3 %30 = OpLoad %9 
                                        f32_3 %31 = OpLoad %9 
                                          f32 %32 = OpDot %30 %31 
                                                      OpStore %29 %32 
                                          f32 %33 = OpLoad %29 
                                          f32 %34 = OpExtInst %1 32 %33 
                                                      OpStore %29 %34 
                                          f32 %35 = OpLoad %29 
                                        f32_3 %36 = OpCompositeConstruct %35 %35 %35 
                                        f32_3 %37 = OpLoad %9 
                                        f32_3 %38 = OpFMul %36 %37 
                                                      OpStore %9 %38 
                                        f32_3 %41 = OpLoad vs_TEXCOORD2 
                                        f32_3 %42 = OpFNegate %41 
                               Uniform f32_3* %45 = OpAccessChain %20 %43 
                                        f32_3 %46 = OpLoad %45 
                                        f32_3 %47 = OpFAdd %42 %46 
                                        f32_4 %48 = OpLoad %40 
                                        f32_4 %49 = OpVectorShuffle %48 %47 4 5 6 3 
                                                      OpStore %40 %49 
                                        f32_4 %50 = OpLoad %40 
                                        f32_3 %51 = OpVectorShuffle %50 %50 0 1 2 
                                        f32_4 %52 = OpLoad %40 
                                        f32_3 %53 = OpVectorShuffle %52 %52 0 1 2 
                                          f32 %54 = OpDot %51 %53 
                                                      OpStore %29 %54 
                                          f32 %55 = OpLoad %29 
                                          f32 %56 = OpExtInst %1 32 %55 
                                                      OpStore %29 %56 
                                        f32_4 %58 = OpLoad %40 
                                        f32_3 %59 = OpVectorShuffle %58 %58 0 1 2 
                                          f32 %60 = OpLoad %29 
                                        f32_3 %61 = OpCompositeConstruct %60 %60 %60 
                                        f32_3 %62 = OpFMul %59 %61 
                                        f32_3 %63 = OpLoad %9 
                                        f32_3 %64 = OpFAdd %62 %63 
                                        f32_4 %65 = OpLoad %57 
                                        f32_4 %66 = OpVectorShuffle %65 %64 4 5 6 3 
                                                      OpStore %57 %66 
                                        f32_4 %68 = OpLoad %57 
                                        f32_3 %69 = OpVectorShuffle %68 %68 0 1 2 
                                        f32_4 %70 = OpLoad %57 
                                        f32_3 %71 = OpVectorShuffle %70 %70 0 1 2 
                                          f32 %72 = OpDot %69 %71 
                                                      OpStore %67 %72 
                                          f32 %73 = OpLoad %67 
                                          f32 %74 = OpExtInst %1 32 %73 
                                                      OpStore %67 %74 
                                          f32 %75 = OpLoad %67 
                                        f32_3 %76 = OpCompositeConstruct %75 %75 %75 
                                        f32_4 %77 = OpLoad %57 
                                        f32_3 %78 = OpVectorShuffle %77 %77 0 1 2 
                                        f32_3 %79 = OpFMul %76 %78 
                                        f32_4 %80 = OpLoad %57 
                                        f32_4 %81 = OpVectorShuffle %80 %79 4 5 6 3 
                                                      OpStore %57 %81 
                                        f32_3 %83 = OpLoad vs_TEXCOORD1 
                                        f32_3 %84 = OpLoad vs_TEXCOORD1 
                                          f32 %85 = OpDot %83 %84 
                                                      OpStore %67 %85 
                                          f32 %86 = OpLoad %67 
                                          f32 %87 = OpExtInst %1 32 %86 
                                                      OpStore %67 %87 
                                          f32 %89 = OpLoad %67 
                                        f32_3 %90 = OpCompositeConstruct %89 %89 %89 
                                        f32_3 %91 = OpLoad vs_TEXCOORD1 
                                        f32_3 %92 = OpFMul %90 %91 
                                                      OpStore %88 %92 
                                        f32_3 %93 = OpLoad %88 
                                        f32_4 %94 = OpLoad %57 
                                        f32_3 %95 = OpVectorShuffle %94 %94 0 1 2 
                                          f32 %96 = OpDot %93 %95 
                                 Private f32* %98 = OpAccessChain %57 %97 
                                                      OpStore %98 %96 
                                        f32_3 %99 = OpLoad %88 
                                       f32_3 %100 = OpLoad %9 
                                         f32 %101 = OpDot %99 %100 
                                Private f32* %103 = OpAccessChain %57 %102 
                                                      OpStore %103 %101 
                                       f32_4 %105 = OpLoad %57 
                                       f32_2 %106 = OpVectorShuffle %105 %105 0 1 
                                       f32_2 %109 = OpExtInst %1 40 %106 %108 
                                       f32_4 %110 = OpLoad %57 
                                       f32_4 %111 = OpVectorShuffle %110 %109 4 5 2 3 
                                                      OpStore %57 %111 
                                Private f32* %112 = OpAccessChain %57 %97 
                                         f32 %113 = OpLoad %112 
                                         f32 %114 = OpExtInst %1 30 %113 
                                Private f32* %115 = OpAccessChain %9 %97 
                                                      OpStore %115 %114 
                                Uniform f32* %118 = OpAccessChain %20 %116 
                                         f32 %119 = OpLoad %118 
                                         f32 %121 = OpFMul %119 %120 
                                Private f32* %122 = OpAccessChain %57 %97 
                                                      OpStore %122 %121 
                                Private f32* %123 = OpAccessChain %9 %97 
                                         f32 %124 = OpLoad %123 
                                Private f32* %125 = OpAccessChain %57 %97 
                                         f32 %126 = OpLoad %125 
                                         f32 %127 = OpFMul %124 %126 
                                Private f32* %128 = OpAccessChain %9 %97 
                                                      OpStore %128 %127 
                                Private f32* %129 = OpAccessChain %9 %97 
                                         f32 %130 = OpLoad %129 
                                         f32 %131 = OpExtInst %1 29 %130 
                                Private f32* %132 = OpAccessChain %9 %97 
                                                      OpStore %132 %131 
                                Uniform f32* %134 = OpAccessChain %20 %133 
                                         f32 %135 = OpLoad %134 
                                         f32 %136 = OpFNegate %135 
                                         f32 %138 = OpFMul %136 %137 
                                         f32 %139 = OpFAdd %138 %137 
                                Private f32* %140 = OpAccessChain %57 %97 
                                                      OpStore %140 %139 
                                Private f32* %141 = OpAccessChain %9 %97 
                                         f32 %142 = OpLoad %141 
                                         f32 %144 = OpFMul %142 %143 
                                Private f32* %145 = OpAccessChain %57 %97 
                                         f32 %146 = OpLoad %145 
                                         f32 %147 = OpFNegate %146 
                                         f32 %148 = OpFAdd %144 %147 
                                Private f32* %149 = OpAccessChain %9 %97 
                                                      OpStore %149 %148 
                                Uniform f32* %151 = OpAccessChain %20 %133 
                                         f32 %152 = OpLoad %151 
                                         f32 %153 = OpFMul %152 %137 
                                         f32 %154 = OpFAdd %153 %137 
                                                      OpStore %150 %154 
                                Private f32* %157 = OpAccessChain %57 %97 
                                         f32 %158 = OpLoad %157 
                                         f32 %159 = OpFNegate %158 
                                         f32 %160 = OpLoad %150 
                                         f32 %161 = OpFAdd %159 %160 
                                Private f32* %162 = OpAccessChain %156 %97 
                                                      OpStore %162 %161 
                                Private f32* %164 = OpAccessChain %156 %97 
                                         f32 %165 = OpLoad %164 
                                         f32 %166 = OpFDiv %163 %165 
                                Private f32* %167 = OpAccessChain %156 %97 
                                                      OpStore %167 %166 
                                Private f32* %168 = OpAccessChain %156 %97 
                                         f32 %169 = OpLoad %168 
                                Private f32* %170 = OpAccessChain %9 %97 
                                         f32 %171 = OpLoad %170 
                                         f32 %172 = OpFMul %169 %171 
                                Private f32* %173 = OpAccessChain %9 %97 
                                                      OpStore %173 %172 
                                Private f32* %174 = OpAccessChain %9 %97 
                                         f32 %175 = OpLoad %174 
                                         f32 %176 = OpExtInst %1 43 %175 %107 %163 
                                Private f32* %177 = OpAccessChain %9 %97 
                                                      OpStore %177 %176 
                                Private f32* %178 = OpAccessChain %9 %97 
                                         f32 %179 = OpLoad %178 
                                         f32 %181 = OpFMul %179 %180 
                                         f32 %183 = OpFAdd %181 %182 
                                Private f32* %184 = OpAccessChain %156 %97 
                                                      OpStore %184 %183 
                                Private f32* %185 = OpAccessChain %9 %97 
                                         f32 %186 = OpLoad %185 
                                Private f32* %187 = OpAccessChain %9 %97 
                                         f32 %188 = OpLoad %187 
                                         f32 %189 = OpFMul %186 %188 
                                Private f32* %190 = OpAccessChain %9 %97 
                                                      OpStore %190 %189 
                                Private f32* %191 = OpAccessChain %9 %97 
                                         f32 %192 = OpLoad %191 
                                Private f32* %193 = OpAccessChain %156 %97 
                                         f32 %194 = OpLoad %193 
                                         f32 %195 = OpFMul %192 %194 
                                Private f32* %196 = OpAccessChain %9 %97 
                                                      OpStore %196 %195 
                                       f32_3 %197 = OpLoad vs_TEXCOORD2 
                                       f32_4 %198 = OpVectorShuffle %197 %197 1 1 1 1 
                              Uniform f32_4* %200 = OpAccessChain %20 %199 %22 
                                       f32_4 %201 = OpLoad %200 
                                       f32_4 %202 = OpFMul %198 %201 
                                                      OpStore %40 %202 
                              Uniform f32_4* %203 = OpAccessChain %20 %199 %43 
                                       f32_4 %204 = OpLoad %203 
                                       f32_3 %205 = OpLoad vs_TEXCOORD2 
                                       f32_4 %206 = OpVectorShuffle %205 %205 0 0 0 0 
                                       f32_4 %207 = OpFMul %204 %206 
                                       f32_4 %208 = OpLoad %40 
                                       f32_4 %209 = OpFAdd %207 %208 
                                                      OpStore %40 %209 
                              Uniform f32_4* %211 = OpAccessChain %20 %199 %210 
                                       f32_4 %212 = OpLoad %211 
                                       f32_3 %213 = OpLoad vs_TEXCOORD2 
                                       f32_4 %214 = OpVectorShuffle %213 %213 2 2 2 2 
                                       f32_4 %215 = OpFMul %212 %214 
                                       f32_4 %216 = OpLoad %40 
                                       f32_4 %217 = OpFAdd %215 %216 
                                                      OpStore %40 %217 
                                       f32_4 %218 = OpLoad %40 
                              Uniform f32_4* %220 = OpAccessChain %20 %199 %219 
                                       f32_4 %221 = OpLoad %220 
                                       f32_4 %222 = OpFAdd %218 %221 
                                                      OpStore %40 %222 
                                       f32_4 %223 = OpLoad %40 
                                       f32_2 %224 = OpVectorShuffle %223 %223 0 1 
                                       f32_4 %225 = OpLoad %40 
                                       f32_2 %226 = OpVectorShuffle %225 %225 3 3 
                                       f32_2 %227 = OpFDiv %224 %226 
                                                      OpStore %156 %227 
                                       f32_2 %228 = OpLoad %156 
                                       f32_2 %230 = OpFAdd %228 %229 
                                                      OpStore %156 %230 
                         read_only Texture2D %234 = OpLoad %233 
                                     sampler %238 = OpLoad %237 
                  read_only Texture2DSampled %240 = OpSampledImage %234 %238 
                                       f32_2 %241 = OpLoad %156 
                                       f32_4 %242 = OpImageSampleImplicitLod %240 %241 
                                         f32 %244 = OpCompositeExtract %242 3 
                                Private f32* %245 = OpAccessChain %156 %97 
                                                      OpStore %245 %244 
                                Private f32* %250 = OpAccessChain %40 %249 
                                         f32 %251 = OpLoad %250 
                                        bool %252 = OpFOrdLessThan %107 %251 
                                                      OpStore %248 %252 
                                       f32_4 %253 = OpLoad %40 
                                       f32_3 %254 = OpVectorShuffle %253 %253 0 1 2 
                                       f32_4 %255 = OpLoad %40 
                                       f32_3 %256 = OpVectorShuffle %255 %255 0 1 2 
                                         f32 %257 = OpDot %254 %256 
                                                      OpStore %29 %257 
                         read_only Texture2D %259 = OpLoad %258 
                                     sampler %261 = OpLoad %260 
                  read_only Texture2DSampled %262 = OpSampledImage %259 %261 
                                         f32 %263 = OpLoad %29 
                                       f32_2 %264 = OpCompositeConstruct %263 %263 
                                       f32_4 %265 = OpImageSampleImplicitLod %262 %264 
                                         f32 %266 = OpCompositeExtract %265 0 
                                                      OpStore %29 %266 
                                        bool %267 = OpLoad %248 
                                         f32 %268 = OpSelect %267 %163 %107 
                                Private f32* %269 = OpAccessChain %57 %97 
                                                      OpStore %269 %268 
                                Private f32* %270 = OpAccessChain %156 %97 
                                         f32 %271 = OpLoad %270 
                                Private f32* %272 = OpAccessChain %57 %97 
                                         f32 %273 = OpLoad %272 
                                         f32 %274 = OpFMul %271 %273 
                                Private f32* %275 = OpAccessChain %57 %97 
                                                      OpStore %275 %274 
                                         f32 %276 = OpLoad %29 
                                Private f32* %277 = OpAccessChain %57 %97 
                                         f32 %278 = OpLoad %277 
                                         f32 %279 = OpFMul %276 %278 
                                Private f32* %280 = OpAccessChain %57 %97 
                                                      OpStore %280 %279 
                                       f32_4 %281 = OpLoad %57 
                                       f32_3 %282 = OpVectorShuffle %281 %281 0 0 0 
                              Uniform f32_4* %283 = OpAccessChain %20 %210 
                                       f32_4 %284 = OpLoad %283 
                                       f32_3 %285 = OpVectorShuffle %284 %284 0 1 2 
                                       f32_3 %286 = OpFMul %282 %285 
                                       f32_4 %287 = OpLoad %57 
                                       f32_4 %288 = OpVectorShuffle %287 %286 4 1 5 6 
                                                      OpStore %57 %288 
                                       f32_4 %289 = OpLoad %57 
                                       f32_3 %290 = OpVectorShuffle %289 %289 0 2 3 
                              Uniform f32_4* %291 = OpAccessChain %20 %219 
                                       f32_4 %292 = OpLoad %291 
                                       f32_3 %293 = OpVectorShuffle %292 %292 0 1 2 
                                       f32_3 %294 = OpFMul %290 %293 
                                                      OpStore %88 %294 
                                       f32_3 %295 = OpLoad %9 
                                       f32_3 %296 = OpVectorShuffle %295 %295 0 0 0 
                                       f32_3 %297 = OpLoad %88 
                                       f32_3 %298 = OpFMul %296 %297 
                                                      OpStore %9 %298 
                         read_only Texture2D %301 = OpLoad %300 
                                     sampler %303 = OpLoad %302 
                  read_only Texture2DSampled %304 = OpSampledImage %301 %303 
                                       f32_2 %307 = OpLoad vs_TEXCOORD0 
                                       f32_4 %308 = OpImageSampleImplicitLod %304 %307 
                                       f32_3 %309 = OpVectorShuffle %308 %308 0 1 2 
                                                      OpStore %299 %309 
                                       f32_3 %310 = OpLoad %299 
                              Uniform f32_4* %312 = OpAccessChain %20 %311 
                                       f32_4 %313 = OpLoad %312 
                                       f32_3 %314 = OpVectorShuffle %313 %313 0 1 2 
                                       f32_3 %315 = OpFMul %310 %314 
                                                      OpStore %88 %315 
                                       f32_4 %316 = OpLoad %57 
                                       f32_3 %317 = OpVectorShuffle %316 %316 0 2 3 
                                       f32_3 %318 = OpLoad %88 
                                       f32_3 %319 = OpFMul %317 %318 
                                       f32_4 %320 = OpLoad %57 
                                       f32_4 %321 = OpVectorShuffle %320 %319 4 1 5 6 
                                                      OpStore %57 %321 
                                Uniform f32* %323 = OpAccessChain %20 %322 
                                         f32 %324 = OpLoad %323 
                                         f32 %325 = OpFNegate %324 
                                         f32 %326 = OpFMul %325 %137 
                                Uniform f32* %328 = OpAccessChain %20 %327 
                                         f32 %329 = OpLoad %328 
                                         f32 %330 = OpFAdd %326 %329 
                                Private f32* %331 = OpAccessChain %88 %97 
                                                      OpStore %331 %330 
                                Private f32* %333 = OpAccessChain %57 %102 
                                         f32 %334 = OpLoad %333 
                                Private f32* %335 = OpAccessChain %88 %97 
                                         f32 %336 = OpLoad %335 
                                         f32 %337 = OpFNegate %336 
                                         f32 %338 = OpFAdd %334 %337 
                                                      OpStore %332 %338 
                                Uniform f32* %340 = OpAccessChain %20 %322 
                                         f32 %341 = OpLoad %340 
                                         f32 %342 = OpFMul %341 %137 
                                Uniform f32* %343 = OpAccessChain %20 %327 
                                         f32 %344 = OpLoad %343 
                                         f32 %345 = OpFAdd %342 %344 
                                                      OpStore %339 %345 
                                Private f32* %346 = OpAccessChain %88 %97 
                                         f32 %347 = OpLoad %346 
                                         f32 %348 = OpFNegate %347 
                                         f32 %349 = OpLoad %339 
                                         f32 %350 = OpFAdd %348 %349 
                                Private f32* %351 = OpAccessChain %88 %97 
                                                      OpStore %351 %350 
                                Private f32* %352 = OpAccessChain %88 %97 
                                         f32 %353 = OpLoad %352 
                                         f32 %354 = OpFDiv %163 %353 
                                Private f32* %355 = OpAccessChain %88 %97 
                                                      OpStore %355 %354 
                                         f32 %356 = OpLoad %332 
                                Private f32* %357 = OpAccessChain %88 %97 
                                         f32 %358 = OpLoad %357 
                                         f32 %359 = OpFMul %356 %358 
                                                      OpStore %332 %359 
                                         f32 %360 = OpLoad %332 
                                         f32 %361 = OpExtInst %1 43 %360 %107 %163 
                                                      OpStore %332 %361 
                                         f32 %362 = OpLoad %332 
                                         f32 %363 = OpFMul %362 %180 
                                         f32 %364 = OpFAdd %363 %182 
                                Private f32* %365 = OpAccessChain %88 %97 
                                                      OpStore %365 %364 
                                         f32 %366 = OpLoad %332 
                                         f32 %367 = OpLoad %332 
                                         f32 %368 = OpFMul %366 %367 
                                                      OpStore %332 %368 
                                         f32 %369 = OpLoad %332 
                                Private f32* %370 = OpAccessChain %88 %97 
                                         f32 %371 = OpLoad %370 
                                         f32 %372 = OpFMul %369 %371 
                                                      OpStore %332 %372 
                                         f32 %373 = OpLoad %332 
                                       f32_3 %374 = OpCompositeConstruct %373 %373 %373 
                              Uniform f32_4* %376 = OpAccessChain %20 %375 
                                       f32_4 %377 = OpLoad %376 
                                       f32_3 %378 = OpVectorShuffle %377 %377 0 1 2 
                                       f32_3 %379 = OpFMul %374 %378 
                                                      OpStore %88 %379 
                                       f32_4 %380 = OpLoad %57 
                                       f32_3 %381 = OpVectorShuffle %380 %380 0 2 3 
                                       f32_3 %382 = OpLoad %88 
                                       f32_3 %383 = OpFMul %381 %382 
                                       f32_3 %384 = OpLoad %9 
                                       f32_3 %385 = OpFAdd %383 %384 
                                                      OpStore %9 %385 
                                       f32_3 %388 = OpLoad %9 
                                       f32_4 %389 = OpLoad %387 
                                       f32_4 %390 = OpVectorShuffle %389 %388 4 5 6 3 
                                                      OpStore %387 %390 
                                 Output f32* %392 = OpAccessChain %387 %243 
                                                      OpStore %392 %163 
                                                      OpReturn
                                                      OpFunctionEnd
"
}
SubProgram "gles3 hw_tier00 " {
Keywords { "POINT_COOKIE" }
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToLight[4];
uniform 	vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in highp vec3 in_NORMAL0;
in highp vec4 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out highp vec3 vs_TEXCOORD1;
out highp vec3 vs_TEXCOORD2;
out highp vec3 vs_TEXCOORD3;
out highp vec4 vs_TEXCOORD4;
vec4 u_xlat0;
vec4 u_xlat1;
vec4 u_xlat2;
float u_xlat10;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy;
    u_xlat1.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat1.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat1.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat10 = dot(u_xlat1.xyz, u_xlat1.xyz);
    u_xlat10 = inversesqrt(u_xlat10);
    vs_TEXCOORD1.xyz = vec3(u_xlat10) * u_xlat1.xyz;
    vs_TEXCOORD2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[3] * in_POSITION0.wwww + u_xlat0;
    u_xlat1.xyz = u_xlat0.yyy * hlslcc_mtx4x4unity_WorldToLight[1].xyz;
    u_xlat1.xyz = hlslcc_mtx4x4unity_WorldToLight[0].xyz * u_xlat0.xxx + u_xlat1.xyz;
    u_xlat0.xyz = hlslcc_mtx4x4unity_WorldToLight[2].xyz * u_xlat0.zzz + u_xlat1.xyz;
    vs_TEXCOORD3.xyz = hlslcc_mtx4x4unity_WorldToLight[3].xyz * u_xlat0.www + u_xlat0.xyz;
    vs_TEXCOORD4 = vec4(0.0, 0.0, 0.0, 0.0);
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec3 _WorldSpaceCameraPos;
uniform 	vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 _LightColor0;
uniform 	mediump vec4 _SpecColor;
uniform 	vec4 hlslcc_mtx4x4unity_WorldToLight[4];
uniform 	mediump vec4 _Color;
uniform 	mediump float _Smoothness;
uniform 	mediump vec4 _HColor;
uniform 	mediump float _RampThreshold;
uniform 	mediump float _RampSmooth;
uniform 	mediump float _SpecSmooth;
UNITY_LOCATION(0) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(1) uniform highp sampler2D _LightTextureB0;
UNITY_LOCATION(2) uniform highp samplerCube _LightTexture0;
in mediump vec2 vs_TEXCOORD0;
in highp vec3 vs_TEXCOORD1;
in highp vec3 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
vec3 u_xlat1;
mediump vec3 u_xlat16_1;
mediump vec4 u_xlat16_2;
mediump vec3 u_xlat16_3;
mediump vec3 u_xlat16_4;
vec3 u_xlat5;
mediump float u_xlat16_7;
mediump float u_xlat16_8;
float u_xlat10;
mediump float u_xlat16_12;
float u_xlat15;
mediump float u_xlat16_17;
void main()
{
    u_xlat0.xyz = (-vs_TEXCOORD2.xyz) + _WorldSpaceLightPos0.xyz;
    u_xlat15 = dot(u_xlat0.xyz, u_xlat0.xyz);
    u_xlat15 = inversesqrt(u_xlat15);
    u_xlat0.xyz = vec3(u_xlat15) * u_xlat0.xyz;
    u_xlat1.xyz = (-vs_TEXCOORD2.xyz) + _WorldSpaceCameraPos.xyz;
    u_xlat15 = dot(u_xlat1.xyz, u_xlat1.xyz);
    u_xlat15 = inversesqrt(u_xlat15);
    u_xlat16_2.xyz = u_xlat1.xyz * vec3(u_xlat15) + u_xlat0.xyz;
    u_xlat16_17 = dot(u_xlat16_2.xyz, u_xlat16_2.xyz);
    u_xlat16_17 = inversesqrt(u_xlat16_17);
    u_xlat16_2.xyz = vec3(u_xlat16_17) * u_xlat16_2.xyz;
    u_xlat16_17 = dot(vs_TEXCOORD1.xyz, vs_TEXCOORD1.xyz);
    u_xlat16_17 = inversesqrt(u_xlat16_17);
    u_xlat16_3.xyz = vec3(u_xlat16_17) * vs_TEXCOORD1.xyz;
    u_xlat16_2.x = dot(u_xlat16_3.xyz, u_xlat16_2.xyz);
    u_xlat16_2.y = dot(u_xlat16_3.xyz, u_xlat0.xyz);
    u_xlat16_2.xy = max(u_xlat16_2.xy, vec2(0.0, 0.0));
    u_xlat0.x = log2(u_xlat16_2.x);
    u_xlat16_2.x = _Smoothness * 128.0;
    u_xlat0.x = u_xlat0.x * u_xlat16_2.x;
    u_xlat0.x = exp2(u_xlat0.x);
    u_xlat16_2.x = (-_SpecSmooth) * 0.5 + 0.5;
    u_xlat0.x = u_xlat0.x * 2.0 + (-u_xlat16_2.x);
    u_xlat16_12 = _SpecSmooth * 0.5 + 0.5;
    u_xlat5.x = (-u_xlat16_2.x) + u_xlat16_12;
    u_xlat5.x = float(1.0) / u_xlat5.x;
    u_xlat0.x = u_xlat5.x * u_xlat0.x;
#ifdef UNITY_ADRENO_ES3
    u_xlat0.x = min(max(u_xlat0.x, 0.0), 1.0);
#else
    u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);
#endif
    u_xlat5.x = u_xlat0.x * -2.0 + 3.0;
    u_xlat0.x = u_xlat0.x * u_xlat0.x;
    u_xlat0.x = u_xlat0.x * u_xlat5.x;
    u_xlat5.xyz = vs_TEXCOORD2.yyy * hlslcc_mtx4x4unity_WorldToLight[1].xyz;
    u_xlat5.xyz = hlslcc_mtx4x4unity_WorldToLight[0].xyz * vs_TEXCOORD2.xxx + u_xlat5.xyz;
    u_xlat5.xyz = hlslcc_mtx4x4unity_WorldToLight[2].xyz * vs_TEXCOORD2.zzz + u_xlat5.xyz;
    u_xlat5.xyz = u_xlat5.xyz + hlslcc_mtx4x4unity_WorldToLight[3].xyz;
    u_xlat1.x = dot(u_xlat5.xyz, u_xlat5.xyz);
    u_xlat5.x = texture(_LightTexture0, u_xlat5.xyz).w;
    u_xlat10 = texture(_LightTextureB0, u_xlat1.xx).x;
    u_xlat5.x = u_xlat5.x * u_xlat10;
    u_xlat16_2.xzw = u_xlat5.xxx * _LightColor0.xyz;
    u_xlat16_3.xyz = u_xlat16_2.xzw * _SpecColor.xyz;
    u_xlat0.xyz = u_xlat0.xxx * u_xlat16_3.xyz;
    u_xlat16_3.x = (-_RampSmooth) * 0.5 + _RampThreshold;
    u_xlat16_7 = u_xlat16_2.y + (-u_xlat16_3.x);
    u_xlat16_8 = _RampSmooth * 0.5 + _RampThreshold;
    u_xlat16_3.x = (-u_xlat16_3.x) + u_xlat16_8;
    u_xlat16_3.x = float(1.0) / u_xlat16_3.x;
    u_xlat16_7 = u_xlat16_7 * u_xlat16_3.x;
#ifdef UNITY_ADRENO_ES3
    u_xlat16_7 = min(max(u_xlat16_7, 0.0), 1.0);
#else
    u_xlat16_7 = clamp(u_xlat16_7, 0.0, 1.0);
#endif
    u_xlat16_3.x = u_xlat16_7 * -2.0 + 3.0;
    u_xlat16_7 = u_xlat16_7 * u_xlat16_7;
    u_xlat16_7 = u_xlat16_7 * u_xlat16_3.x;
    u_xlat16_3.xyz = vec3(u_xlat16_7) * _HColor.xyz;
    u_xlat16_1.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_4.xyz = u_xlat16_1.xyz * _Color.xyz;
    u_xlat16_2.xyz = u_xlat16_2.xzw * u_xlat16_4.xyz;
    u_xlat0.xyz = u_xlat16_2.xyz * u_xlat16_3.xyz + u_xlat0.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier01 " {
Keywords { "POINT_COOKIE" }
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToLight[4];
uniform 	vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in highp vec3 in_NORMAL0;
in highp vec4 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out highp vec3 vs_TEXCOORD1;
out highp vec3 vs_TEXCOORD2;
out highp vec3 vs_TEXCOORD3;
out highp vec4 vs_TEXCOORD4;
vec4 u_xlat0;
vec4 u_xlat1;
vec4 u_xlat2;
float u_xlat10;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy;
    u_xlat1.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat1.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat1.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat10 = dot(u_xlat1.xyz, u_xlat1.xyz);
    u_xlat10 = inversesqrt(u_xlat10);
    vs_TEXCOORD1.xyz = vec3(u_xlat10) * u_xlat1.xyz;
    vs_TEXCOORD2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[3] * in_POSITION0.wwww + u_xlat0;
    u_xlat1.xyz = u_xlat0.yyy * hlslcc_mtx4x4unity_WorldToLight[1].xyz;
    u_xlat1.xyz = hlslcc_mtx4x4unity_WorldToLight[0].xyz * u_xlat0.xxx + u_xlat1.xyz;
    u_xlat0.xyz = hlslcc_mtx4x4unity_WorldToLight[2].xyz * u_xlat0.zzz + u_xlat1.xyz;
    vs_TEXCOORD3.xyz = hlslcc_mtx4x4unity_WorldToLight[3].xyz * u_xlat0.www + u_xlat0.xyz;
    vs_TEXCOORD4 = vec4(0.0, 0.0, 0.0, 0.0);
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec3 _WorldSpaceCameraPos;
uniform 	vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 _LightColor0;
uniform 	mediump vec4 _SpecColor;
uniform 	vec4 hlslcc_mtx4x4unity_WorldToLight[4];
uniform 	mediump vec4 _Color;
uniform 	mediump float _Smoothness;
uniform 	mediump vec4 _HColor;
uniform 	mediump float _RampThreshold;
uniform 	mediump float _RampSmooth;
uniform 	mediump float _SpecSmooth;
UNITY_LOCATION(0) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(1) uniform highp sampler2D _LightTextureB0;
UNITY_LOCATION(2) uniform highp samplerCube _LightTexture0;
in mediump vec2 vs_TEXCOORD0;
in highp vec3 vs_TEXCOORD1;
in highp vec3 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
vec3 u_xlat1;
mediump vec3 u_xlat16_1;
mediump vec4 u_xlat16_2;
mediump vec3 u_xlat16_3;
mediump vec3 u_xlat16_4;
vec3 u_xlat5;
mediump float u_xlat16_7;
mediump float u_xlat16_8;
float u_xlat10;
mediump float u_xlat16_12;
float u_xlat15;
mediump float u_xlat16_17;
void main()
{
    u_xlat0.xyz = (-vs_TEXCOORD2.xyz) + _WorldSpaceLightPos0.xyz;
    u_xlat15 = dot(u_xlat0.xyz, u_xlat0.xyz);
    u_xlat15 = inversesqrt(u_xlat15);
    u_xlat0.xyz = vec3(u_xlat15) * u_xlat0.xyz;
    u_xlat1.xyz = (-vs_TEXCOORD2.xyz) + _WorldSpaceCameraPos.xyz;
    u_xlat15 = dot(u_xlat1.xyz, u_xlat1.xyz);
    u_xlat15 = inversesqrt(u_xlat15);
    u_xlat16_2.xyz = u_xlat1.xyz * vec3(u_xlat15) + u_xlat0.xyz;
    u_xlat16_17 = dot(u_xlat16_2.xyz, u_xlat16_2.xyz);
    u_xlat16_17 = inversesqrt(u_xlat16_17);
    u_xlat16_2.xyz = vec3(u_xlat16_17) * u_xlat16_2.xyz;
    u_xlat16_17 = dot(vs_TEXCOORD1.xyz, vs_TEXCOORD1.xyz);
    u_xlat16_17 = inversesqrt(u_xlat16_17);
    u_xlat16_3.xyz = vec3(u_xlat16_17) * vs_TEXCOORD1.xyz;
    u_xlat16_2.x = dot(u_xlat16_3.xyz, u_xlat16_2.xyz);
    u_xlat16_2.y = dot(u_xlat16_3.xyz, u_xlat0.xyz);
    u_xlat16_2.xy = max(u_xlat16_2.xy, vec2(0.0, 0.0));
    u_xlat0.x = log2(u_xlat16_2.x);
    u_xlat16_2.x = _Smoothness * 128.0;
    u_xlat0.x = u_xlat0.x * u_xlat16_2.x;
    u_xlat0.x = exp2(u_xlat0.x);
    u_xlat16_2.x = (-_SpecSmooth) * 0.5 + 0.5;
    u_xlat0.x = u_xlat0.x * 2.0 + (-u_xlat16_2.x);
    u_xlat16_12 = _SpecSmooth * 0.5 + 0.5;
    u_xlat5.x = (-u_xlat16_2.x) + u_xlat16_12;
    u_xlat5.x = float(1.0) / u_xlat5.x;
    u_xlat0.x = u_xlat5.x * u_xlat0.x;
#ifdef UNITY_ADRENO_ES3
    u_xlat0.x = min(max(u_xlat0.x, 0.0), 1.0);
#else
    u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);
#endif
    u_xlat5.x = u_xlat0.x * -2.0 + 3.0;
    u_xlat0.x = u_xlat0.x * u_xlat0.x;
    u_xlat0.x = u_xlat0.x * u_xlat5.x;
    u_xlat5.xyz = vs_TEXCOORD2.yyy * hlslcc_mtx4x4unity_WorldToLight[1].xyz;
    u_xlat5.xyz = hlslcc_mtx4x4unity_WorldToLight[0].xyz * vs_TEXCOORD2.xxx + u_xlat5.xyz;
    u_xlat5.xyz = hlslcc_mtx4x4unity_WorldToLight[2].xyz * vs_TEXCOORD2.zzz + u_xlat5.xyz;
    u_xlat5.xyz = u_xlat5.xyz + hlslcc_mtx4x4unity_WorldToLight[3].xyz;
    u_xlat1.x = dot(u_xlat5.xyz, u_xlat5.xyz);
    u_xlat5.x = texture(_LightTexture0, u_xlat5.xyz).w;
    u_xlat10 = texture(_LightTextureB0, u_xlat1.xx).x;
    u_xlat5.x = u_xlat5.x * u_xlat10;
    u_xlat16_2.xzw = u_xlat5.xxx * _LightColor0.xyz;
    u_xlat16_3.xyz = u_xlat16_2.xzw * _SpecColor.xyz;
    u_xlat0.xyz = u_xlat0.xxx * u_xlat16_3.xyz;
    u_xlat16_3.x = (-_RampSmooth) * 0.5 + _RampThreshold;
    u_xlat16_7 = u_xlat16_2.y + (-u_xlat16_3.x);
    u_xlat16_8 = _RampSmooth * 0.5 + _RampThreshold;
    u_xlat16_3.x = (-u_xlat16_3.x) + u_xlat16_8;
    u_xlat16_3.x = float(1.0) / u_xlat16_3.x;
    u_xlat16_7 = u_xlat16_7 * u_xlat16_3.x;
#ifdef UNITY_ADRENO_ES3
    u_xlat16_7 = min(max(u_xlat16_7, 0.0), 1.0);
#else
    u_xlat16_7 = clamp(u_xlat16_7, 0.0, 1.0);
#endif
    u_xlat16_3.x = u_xlat16_7 * -2.0 + 3.0;
    u_xlat16_7 = u_xlat16_7 * u_xlat16_7;
    u_xlat16_7 = u_xlat16_7 * u_xlat16_3.x;
    u_xlat16_3.xyz = vec3(u_xlat16_7) * _HColor.xyz;
    u_xlat16_1.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_4.xyz = u_xlat16_1.xyz * _Color.xyz;
    u_xlat16_2.xyz = u_xlat16_2.xzw * u_xlat16_4.xyz;
    u_xlat0.xyz = u_xlat16_2.xyz * u_xlat16_3.xyz + u_xlat0.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier02 " {
Keywords { "POINT_COOKIE" }
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToLight[4];
uniform 	vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in highp vec3 in_NORMAL0;
in highp vec4 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out highp vec3 vs_TEXCOORD1;
out highp vec3 vs_TEXCOORD2;
out highp vec3 vs_TEXCOORD3;
out highp vec4 vs_TEXCOORD4;
vec4 u_xlat0;
vec4 u_xlat1;
vec4 u_xlat2;
float u_xlat10;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy;
    u_xlat1.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat1.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat1.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat10 = dot(u_xlat1.xyz, u_xlat1.xyz);
    u_xlat10 = inversesqrt(u_xlat10);
    vs_TEXCOORD1.xyz = vec3(u_xlat10) * u_xlat1.xyz;
    vs_TEXCOORD2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[3] * in_POSITION0.wwww + u_xlat0;
    u_xlat1.xyz = u_xlat0.yyy * hlslcc_mtx4x4unity_WorldToLight[1].xyz;
    u_xlat1.xyz = hlslcc_mtx4x4unity_WorldToLight[0].xyz * u_xlat0.xxx + u_xlat1.xyz;
    u_xlat0.xyz = hlslcc_mtx4x4unity_WorldToLight[2].xyz * u_xlat0.zzz + u_xlat1.xyz;
    vs_TEXCOORD3.xyz = hlslcc_mtx4x4unity_WorldToLight[3].xyz * u_xlat0.www + u_xlat0.xyz;
    vs_TEXCOORD4 = vec4(0.0, 0.0, 0.0, 0.0);
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec3 _WorldSpaceCameraPos;
uniform 	vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 _LightColor0;
uniform 	mediump vec4 _SpecColor;
uniform 	vec4 hlslcc_mtx4x4unity_WorldToLight[4];
uniform 	mediump vec4 _Color;
uniform 	mediump float _Smoothness;
uniform 	mediump vec4 _HColor;
uniform 	mediump float _RampThreshold;
uniform 	mediump float _RampSmooth;
uniform 	mediump float _SpecSmooth;
UNITY_LOCATION(0) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(1) uniform highp sampler2D _LightTextureB0;
UNITY_LOCATION(2) uniform highp samplerCube _LightTexture0;
in mediump vec2 vs_TEXCOORD0;
in highp vec3 vs_TEXCOORD1;
in highp vec3 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
vec3 u_xlat1;
mediump vec3 u_xlat16_1;
mediump vec4 u_xlat16_2;
mediump vec3 u_xlat16_3;
mediump vec3 u_xlat16_4;
vec3 u_xlat5;
mediump float u_xlat16_7;
mediump float u_xlat16_8;
float u_xlat10;
mediump float u_xlat16_12;
float u_xlat15;
mediump float u_xlat16_17;
void main()
{
    u_xlat0.xyz = (-vs_TEXCOORD2.xyz) + _WorldSpaceLightPos0.xyz;
    u_xlat15 = dot(u_xlat0.xyz, u_xlat0.xyz);
    u_xlat15 = inversesqrt(u_xlat15);
    u_xlat0.xyz = vec3(u_xlat15) * u_xlat0.xyz;
    u_xlat1.xyz = (-vs_TEXCOORD2.xyz) + _WorldSpaceCameraPos.xyz;
    u_xlat15 = dot(u_xlat1.xyz, u_xlat1.xyz);
    u_xlat15 = inversesqrt(u_xlat15);
    u_xlat16_2.xyz = u_xlat1.xyz * vec3(u_xlat15) + u_xlat0.xyz;
    u_xlat16_17 = dot(u_xlat16_2.xyz, u_xlat16_2.xyz);
    u_xlat16_17 = inversesqrt(u_xlat16_17);
    u_xlat16_2.xyz = vec3(u_xlat16_17) * u_xlat16_2.xyz;
    u_xlat16_17 = dot(vs_TEXCOORD1.xyz, vs_TEXCOORD1.xyz);
    u_xlat16_17 = inversesqrt(u_xlat16_17);
    u_xlat16_3.xyz = vec3(u_xlat16_17) * vs_TEXCOORD1.xyz;
    u_xlat16_2.x = dot(u_xlat16_3.xyz, u_xlat16_2.xyz);
    u_xlat16_2.y = dot(u_xlat16_3.xyz, u_xlat0.xyz);
    u_xlat16_2.xy = max(u_xlat16_2.xy, vec2(0.0, 0.0));
    u_xlat0.x = log2(u_xlat16_2.x);
    u_xlat16_2.x = _Smoothness * 128.0;
    u_xlat0.x = u_xlat0.x * u_xlat16_2.x;
    u_xlat0.x = exp2(u_xlat0.x);
    u_xlat16_2.x = (-_SpecSmooth) * 0.5 + 0.5;
    u_xlat0.x = u_xlat0.x * 2.0 + (-u_xlat16_2.x);
    u_xlat16_12 = _SpecSmooth * 0.5 + 0.5;
    u_xlat5.x = (-u_xlat16_2.x) + u_xlat16_12;
    u_xlat5.x = float(1.0) / u_xlat5.x;
    u_xlat0.x = u_xlat5.x * u_xlat0.x;
#ifdef UNITY_ADRENO_ES3
    u_xlat0.x = min(max(u_xlat0.x, 0.0), 1.0);
#else
    u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);
#endif
    u_xlat5.x = u_xlat0.x * -2.0 + 3.0;
    u_xlat0.x = u_xlat0.x * u_xlat0.x;
    u_xlat0.x = u_xlat0.x * u_xlat5.x;
    u_xlat5.xyz = vs_TEXCOORD2.yyy * hlslcc_mtx4x4unity_WorldToLight[1].xyz;
    u_xlat5.xyz = hlslcc_mtx4x4unity_WorldToLight[0].xyz * vs_TEXCOORD2.xxx + u_xlat5.xyz;
    u_xlat5.xyz = hlslcc_mtx4x4unity_WorldToLight[2].xyz * vs_TEXCOORD2.zzz + u_xlat5.xyz;
    u_xlat5.xyz = u_xlat5.xyz + hlslcc_mtx4x4unity_WorldToLight[3].xyz;
    u_xlat1.x = dot(u_xlat5.xyz, u_xlat5.xyz);
    u_xlat5.x = texture(_LightTexture0, u_xlat5.xyz).w;
    u_xlat10 = texture(_LightTextureB0, u_xlat1.xx).x;
    u_xlat5.x = u_xlat5.x * u_xlat10;
    u_xlat16_2.xzw = u_xlat5.xxx * _LightColor0.xyz;
    u_xlat16_3.xyz = u_xlat16_2.xzw * _SpecColor.xyz;
    u_xlat0.xyz = u_xlat0.xxx * u_xlat16_3.xyz;
    u_xlat16_3.x = (-_RampSmooth) * 0.5 + _RampThreshold;
    u_xlat16_7 = u_xlat16_2.y + (-u_xlat16_3.x);
    u_xlat16_8 = _RampSmooth * 0.5 + _RampThreshold;
    u_xlat16_3.x = (-u_xlat16_3.x) + u_xlat16_8;
    u_xlat16_3.x = float(1.0) / u_xlat16_3.x;
    u_xlat16_7 = u_xlat16_7 * u_xlat16_3.x;
#ifdef UNITY_ADRENO_ES3
    u_xlat16_7 = min(max(u_xlat16_7, 0.0), 1.0);
#else
    u_xlat16_7 = clamp(u_xlat16_7, 0.0, 1.0);
#endif
    u_xlat16_3.x = u_xlat16_7 * -2.0 + 3.0;
    u_xlat16_7 = u_xlat16_7 * u_xlat16_7;
    u_xlat16_7 = u_xlat16_7 * u_xlat16_3.x;
    u_xlat16_3.xyz = vec3(u_xlat16_7) * _HColor.xyz;
    u_xlat16_1.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_4.xyz = u_xlat16_1.xyz * _Color.xyz;
    u_xlat16_2.xyz = u_xlat16_2.xzw * u_xlat16_4.xyz;
    u_xlat0.xyz = u_xlat16_2.xyz * u_xlat16_3.xyz + u_xlat0.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "vulkan hw_tier00 " {
Keywords { "POINT_COOKIE" }
"; SPIR-V
; Version: 1.0
; Generator: Khronos Glslang Reference Front End; 6
; Bound: 209
; Schema: 0
                                                      OpCapability Shader 
                                               %1 = OpExtInstImport "GLSL.std.450" 
                                                      OpMemoryModel Logical GLSL450 
                                                      OpEntryPoint Vertex %4 "main" %11 %75 %85 %101 %106 %137 %143 %190 %200 
                                                      OpName vs_TEXCOORD0 "vs_TEXCOORD0" 
                                                      OpName vs_TEXCOORD1 "vs_TEXCOORD1" 
                                                      OpName vs_TEXCOORD2 "vs_TEXCOORD2" 
                                                      OpName vs_TEXCOORD3 "vs_TEXCOORD3" 
                                                      OpName vs_TEXCOORD4 "vs_TEXCOORD4" 
                                                      OpDecorate %11 Location 11 
                                                      OpDecorate %16 ArrayStride 16 
                                                      OpDecorate %17 ArrayStride 17 
                                                      OpDecorate %18 ArrayStride 18 
                                                      OpDecorate %19 ArrayStride 19 
                                                      OpMemberDecorate %20 0 Offset 20 
                                                      OpMemberDecorate %20 1 Offset 20 
                                                      OpMemberDecorate %20 2 Offset 20 
                                                      OpMemberDecorate %20 3 Offset 20 
                                                      OpMemberDecorate %20 4 Offset 20 
                                                      OpDecorate %20 Block 
                                                      OpDecorate %22 DescriptorSet 22 
                                                      OpDecorate %22 Binding 22 
                                                      OpMemberDecorate %73 0 BuiltIn 73 
                                                      OpMemberDecorate %73 1 BuiltIn 73 
                                                      OpMemberDecorate %73 2 BuiltIn 73 
                                                      OpDecorate %73 Block 
                                                      OpDecorate %85 Location 85 
                                                      OpDecorate vs_TEXCOORD0 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD0 Location 101 
                                                      OpDecorate %106 Location 106 
                                                      OpDecorate vs_TEXCOORD1 Location 137 
                                                      OpDecorate vs_TEXCOORD2 Location 143 
                                                      OpDecorate vs_TEXCOORD3 Location 190 
                                                      OpDecorate vs_TEXCOORD4 Location 200 
                                               %2 = OpTypeVoid 
                                               %3 = OpTypeFunction %2 
                                               %6 = OpTypeFloat 32 
                                               %7 = OpTypeVector %6 4 
                                               %8 = OpTypePointer Private %7 
                                Private f32_4* %9 = OpVariable Private 
                                              %10 = OpTypePointer Input %7 
                                 Input f32_4* %11 = OpVariable Input 
                                              %14 = OpTypeInt 32 0 
                                          u32 %15 = OpConstant 4 
                                              %16 = OpTypeArray %7 %15 
                                              %17 = OpTypeArray %7 %15 
                                              %18 = OpTypeArray %7 %15 
                                              %19 = OpTypeArray %7 %15 
                                              %20 = OpTypeStruct %16 %17 %18 %19 %7 
                                              %21 = OpTypePointer Uniform %20 
Uniform struct {f32_4[4]; f32_4[4]; f32_4[4]; f32_4[4]; f32_4;}* %22 = OpVariable Uniform 
                                              %23 = OpTypeInt 32 1 
                                          i32 %24 = OpConstant 0 
                                          i32 %25 = OpConstant 1 
                                              %26 = OpTypePointer Uniform %7 
                                          i32 %37 = OpConstant 2 
                               Private f32_4* %45 = OpVariable Private 
                                          i32 %47 = OpConstant 3 
                               Private f32_4* %51 = OpVariable Private 
                                          u32 %71 = OpConstant 1 
                                              %72 = OpTypeArray %6 %71 
                                              %73 = OpTypeStruct %7 %6 %72 
                                              %74 = OpTypePointer Output %73 
         Output struct {f32_4; f32; f32[1];}* %75 = OpVariable Output 
                                              %83 = OpTypePointer Output %7 
                                 Input f32_4* %85 = OpVariable Input 
                                              %86 = OpTypeVector %6 2 
                                          i32 %89 = OpConstant 4 
                                             %100 = OpTypePointer Output %86 
                       Output f32_2* vs_TEXCOORD0 = OpVariable Output 
                                             %104 = OpTypeVector %6 3 
                                             %105 = OpTypePointer Input %104 
                                Input f32_3* %106 = OpVariable Input 
                                         u32 %112 = OpConstant 0 
                                             %113 = OpTypePointer Private %6 
                                         u32 %126 = OpConstant 2 
                                Private f32* %128 = OpVariable Private 
                                             %136 = OpTypePointer Output %104 
                       Output f32_3* vs_TEXCOORD1 = OpVariable Output 
                       Output f32_3* vs_TEXCOORD2 = OpVariable Output 
                       Output f32_3* vs_TEXCOORD3 = OpVariable Output 
                       Output f32_4* vs_TEXCOORD4 = OpVariable Output 
                                         f32 %201 = OpConstant 3.674022E-40 
                                       f32_4 %202 = OpConstantComposite %201 %201 %201 %201 
                                             %203 = OpTypePointer Output %6 
                                          void %4 = OpFunction None %3 
                                               %5 = OpLabel 
                                        f32_4 %12 = OpLoad %11 
                                        f32_4 %13 = OpVectorShuffle %12 %12 1 1 1 1 
                               Uniform f32_4* %27 = OpAccessChain %22 %24 %25 
                                        f32_4 %28 = OpLoad %27 
                                        f32_4 %29 = OpFMul %13 %28 
                                                      OpStore %9 %29 
                               Uniform f32_4* %30 = OpAccessChain %22 %24 %24 
                                        f32_4 %31 = OpLoad %30 
                                        f32_4 %32 = OpLoad %11 
                                        f32_4 %33 = OpVectorShuffle %32 %32 0 0 0 0 
                                        f32_4 %34 = OpFMul %31 %33 
                                        f32_4 %35 = OpLoad %9 
                                        f32_4 %36 = OpFAdd %34 %35 
                                                      OpStore %9 %36 
                               Uniform f32_4* %38 = OpAccessChain %22 %24 %37 
                                        f32_4 %39 = OpLoad %38 
                                        f32_4 %40 = OpLoad %11 
                                        f32_4 %41 = OpVectorShuffle %40 %40 2 2 2 2 
                                        f32_4 %42 = OpFMul %39 %41 
                                        f32_4 %43 = OpLoad %9 
                                        f32_4 %44 = OpFAdd %42 %43 
                                                      OpStore %9 %44 
                                        f32_4 %46 = OpLoad %9 
                               Uniform f32_4* %48 = OpAccessChain %22 %24 %47 
                                        f32_4 %49 = OpLoad %48 
                                        f32_4 %50 = OpFAdd %46 %49 
                                                      OpStore %45 %50 
                                        f32_4 %52 = OpLoad %45 
                                        f32_4 %53 = OpVectorShuffle %52 %52 1 1 1 1 
                               Uniform f32_4* %54 = OpAccessChain %22 %37 %25 
                                        f32_4 %55 = OpLoad %54 
                                        f32_4 %56 = OpFMul %53 %55 
                                                      OpStore %51 %56 
                               Uniform f32_4* %57 = OpAccessChain %22 %37 %24 
                                        f32_4 %58 = OpLoad %57 
                                        f32_4 %59 = OpLoad %45 
                                        f32_4 %60 = OpVectorShuffle %59 %59 0 0 0 0 
                                        f32_4 %61 = OpFMul %58 %60 
                                        f32_4 %62 = OpLoad %51 
                                        f32_4 %63 = OpFAdd %61 %62 
                                                      OpStore %51 %63 
                               Uniform f32_4* %64 = OpAccessChain %22 %37 %37 
                                        f32_4 %65 = OpLoad %64 
                                        f32_4 %66 = OpLoad %45 
                                        f32_4 %67 = OpVectorShuffle %66 %66 2 2 2 2 
                                        f32_4 %68 = OpFMul %65 %67 
                                        f32_4 %69 = OpLoad %51 
                                        f32_4 %70 = OpFAdd %68 %69 
                                                      OpStore %51 %70 
                               Uniform f32_4* %76 = OpAccessChain %22 %37 %47 
                                        f32_4 %77 = OpLoad %76 
                                        f32_4 %78 = OpLoad %45 
                                        f32_4 %79 = OpVectorShuffle %78 %78 3 3 3 3 
                                        f32_4 %80 = OpFMul %77 %79 
                                        f32_4 %81 = OpLoad %51 
                                        f32_4 %82 = OpFAdd %80 %81 
                                Output f32_4* %84 = OpAccessChain %75 %24 
                                                      OpStore %84 %82 
                                        f32_4 %87 = OpLoad %85 
                                        f32_2 %88 = OpVectorShuffle %87 %87 0 1 
                               Uniform f32_4* %90 = OpAccessChain %22 %89 
                                        f32_4 %91 = OpLoad %90 
                                        f32_2 %92 = OpVectorShuffle %91 %91 0 1 
                                        f32_2 %93 = OpFMul %88 %92 
                               Uniform f32_4* %94 = OpAccessChain %22 %89 
                                        f32_4 %95 = OpLoad %94 
                                        f32_2 %96 = OpVectorShuffle %95 %95 2 3 
                                        f32_2 %97 = OpFAdd %93 %96 
                                        f32_4 %98 = OpLoad %45 
                                        f32_4 %99 = OpVectorShuffle %98 %97 4 5 2 3 
                                                      OpStore %45 %99 
                                       f32_4 %102 = OpLoad %45 
                                       f32_2 %103 = OpVectorShuffle %102 %102 0 1 
                                                      OpStore vs_TEXCOORD0 %103 
                                       f32_3 %107 = OpLoad %106 
                              Uniform f32_4* %108 = OpAccessChain %22 %25 %24 
                                       f32_4 %109 = OpLoad %108 
                                       f32_3 %110 = OpVectorShuffle %109 %109 0 1 2 
                                         f32 %111 = OpDot %107 %110 
                                Private f32* %114 = OpAccessChain %45 %112 
                                                      OpStore %114 %111 
                                       f32_3 %115 = OpLoad %106 
                              Uniform f32_4* %116 = OpAccessChain %22 %25 %25 
                                       f32_4 %117 = OpLoad %116 
                                       f32_3 %118 = OpVectorShuffle %117 %117 0 1 2 
                                         f32 %119 = OpDot %115 %118 
                                Private f32* %120 = OpAccessChain %45 %71 
                                                      OpStore %120 %119 
                                       f32_3 %121 = OpLoad %106 
                              Uniform f32_4* %122 = OpAccessChain %22 %25 %37 
                                       f32_4 %123 = OpLoad %122 
                                       f32_3 %124 = OpVectorShuffle %123 %123 0 1 2 
                                         f32 %125 = OpDot %121 %124 
                                Private f32* %127 = OpAccessChain %45 %126 
                                                      OpStore %127 %125 
                                       f32_4 %129 = OpLoad %45 
                                       f32_3 %130 = OpVectorShuffle %129 %129 0 1 2 
                                       f32_4 %131 = OpLoad %45 
                                       f32_3 %132 = OpVectorShuffle %131 %131 0 1 2 
                                         f32 %133 = OpDot %130 %132 
                                                      OpStore %128 %133 
                                         f32 %134 = OpLoad %128 
                                         f32 %135 = OpExtInst %1 32 %134 
                                                      OpStore %128 %135 
                                         f32 %138 = OpLoad %128 
                                       f32_3 %139 = OpCompositeConstruct %138 %138 %138 
                                       f32_4 %140 = OpLoad %45 
                                       f32_3 %141 = OpVectorShuffle %140 %140 0 1 2 
                                       f32_3 %142 = OpFMul %139 %141 
                                                      OpStore vs_TEXCOORD1 %142 
                              Uniform f32_4* %144 = OpAccessChain %22 %24 %47 
                                       f32_4 %145 = OpLoad %144 
                                       f32_3 %146 = OpVectorShuffle %145 %145 0 1 2 
                                       f32_4 %147 = OpLoad %11 
                                       f32_3 %148 = OpVectorShuffle %147 %147 3 3 3 
                                       f32_3 %149 = OpFMul %146 %148 
                                       f32_4 %150 = OpLoad %9 
                                       f32_3 %151 = OpVectorShuffle %150 %150 0 1 2 
                                       f32_3 %152 = OpFAdd %149 %151 
                                                      OpStore vs_TEXCOORD2 %152 
                              Uniform f32_4* %153 = OpAccessChain %22 %24 %47 
                                       f32_4 %154 = OpLoad %153 
                                       f32_4 %155 = OpLoad %11 
                                       f32_4 %156 = OpVectorShuffle %155 %155 3 3 3 3 
                                       f32_4 %157 = OpFMul %154 %156 
                                       f32_4 %158 = OpLoad %9 
                                       f32_4 %159 = OpFAdd %157 %158 
                                                      OpStore %9 %159 
                                       f32_4 %160 = OpLoad %9 
                                       f32_3 %161 = OpVectorShuffle %160 %160 1 1 1 
                              Uniform f32_4* %162 = OpAccessChain %22 %47 %25 
                                       f32_4 %163 = OpLoad %162 
                                       f32_3 %164 = OpVectorShuffle %163 %163 0 1 2 
                                       f32_3 %165 = OpFMul %161 %164 
                                       f32_4 %166 = OpLoad %45 
                                       f32_4 %167 = OpVectorShuffle %166 %165 4 5 6 3 
                                                      OpStore %45 %167 
                              Uniform f32_4* %168 = OpAccessChain %22 %47 %24 
                                       f32_4 %169 = OpLoad %168 
                                       f32_3 %170 = OpVectorShuffle %169 %169 0 1 2 
                                       f32_4 %171 = OpLoad %9 
                                       f32_3 %172 = OpVectorShuffle %171 %171 0 0 0 
                                       f32_3 %173 = OpFMul %170 %172 
                                       f32_4 %174 = OpLoad %45 
                                       f32_3 %175 = OpVectorShuffle %174 %174 0 1 2 
                                       f32_3 %176 = OpFAdd %173 %175 
                                       f32_4 %177 = OpLoad %45 
                                       f32_4 %178 = OpVectorShuffle %177 %176 4 5 6 3 
                                                      OpStore %45 %178 
                              Uniform f32_4* %179 = OpAccessChain %22 %47 %37 
                                       f32_4 %180 = OpLoad %179 
                                       f32_3 %181 = OpVectorShuffle %180 %180 0 1 2 
                                       f32_4 %182 = OpLoad %9 
                                       f32_3 %183 = OpVectorShuffle %182 %182 2 2 2 
                                       f32_3 %184 = OpFMul %181 %183 
                                       f32_4 %185 = OpLoad %45 
                                       f32_3 %186 = OpVectorShuffle %185 %185 0 1 2 
                                       f32_3 %187 = OpFAdd %184 %186 
                                       f32_4 %188 = OpLoad %9 
                                       f32_4 %189 = OpVectorShuffle %188 %187 4 5 6 3 
                                                      OpStore %9 %189 
                              Uniform f32_4* %191 = OpAccessChain %22 %47 %47 
                                       f32_4 %192 = OpLoad %191 
                                       f32_3 %193 = OpVectorShuffle %192 %192 0 1 2 
                                       f32_4 %194 = OpLoad %9 
                                       f32_3 %195 = OpVectorShuffle %194 %194 3 3 3 
                                       f32_3 %196 = OpFMul %193 %195 
                                       f32_4 %197 = OpLoad %9 
                                       f32_3 %198 = OpVectorShuffle %197 %197 0 1 2 
                                       f32_3 %199 = OpFAdd %196 %198 
                                                      OpStore vs_TEXCOORD3 %199 
                                                      OpStore vs_TEXCOORD4 %202 
                                 Output f32* %204 = OpAccessChain %75 %24 %71 
                                         f32 %205 = OpLoad %204 
                                         f32 %206 = OpFNegate %205 
                                 Output f32* %207 = OpAccessChain %75 %24 %71 
                                                      OpStore %207 %206 
                                                      OpReturn
                                                      OpFunctionEnd
; SPIR-V
; Version: 1.0
; Generator: Khronos Glslang Reference Front End; 6
; Bound: 372
; Schema: 0
                                                      OpCapability Shader 
                                               %1 = OpExtInstImport "GLSL.std.450" 
                                                      OpMemoryModel Logical GLSL450 
                                                      OpEntryPoint Fragment %4 "main" %11 %77 %341 %365 
                                                      OpExecutionMode %4 OriginUpperLeft 
                                                      OpName vs_TEXCOORD2 "vs_TEXCOORD2" 
                                                      OpName vs_TEXCOORD1 "vs_TEXCOORD1" 
                                                      OpName vs_TEXCOORD0 "vs_TEXCOORD0" 
                                                      OpDecorate vs_TEXCOORD2 Location 11 
                                                      OpDecorate %17 ArrayStride 17 
                                                      OpMemberDecorate %18 0 Offset 18 
                                                      OpMemberDecorate %18 1 Offset 18 
                                                      OpMemberDecorate %18 2 RelaxedPrecision 
                                                      OpMemberDecorate %18 2 Offset 18 
                                                      OpMemberDecorate %18 3 RelaxedPrecision 
                                                      OpMemberDecorate %18 3 Offset 18 
                                                      OpMemberDecorate %18 4 Offset 18 
                                                      OpMemberDecorate %18 5 RelaxedPrecision 
                                                      OpMemberDecorate %18 5 Offset 18 
                                                      OpMemberDecorate %18 6 RelaxedPrecision 
                                                      OpMemberDecorate %18 6 Offset 18 
                                                      OpMemberDecorate %18 7 RelaxedPrecision 
                                                      OpMemberDecorate %18 7 Offset 18 
                                                      OpMemberDecorate %18 8 RelaxedPrecision 
                                                      OpMemberDecorate %18 8 Offset 18 
                                                      OpMemberDecorate %18 9 RelaxedPrecision 
                                                      OpMemberDecorate %18 9 Offset 18 
                                                      OpMemberDecorate %18 10 RelaxedPrecision 
                                                      OpMemberDecorate %18 10 Offset 18 
                                                      OpDecorate %18 Block 
                                                      OpDecorate %20 DescriptorSet 20 
                                                      OpDecorate %20 Binding 20 
                                                      OpDecorate %53 RelaxedPrecision 
                                                      OpDecorate %62 RelaxedPrecision 
                                                      OpDecorate %63 RelaxedPrecision 
                                                      OpDecorate %64 RelaxedPrecision 
                                                      OpDecorate %65 RelaxedPrecision 
                                                      OpDecorate %66 RelaxedPrecision 
                                                      OpDecorate %67 RelaxedPrecision 
                                                      OpDecorate %68 RelaxedPrecision 
                                                      OpDecorate %69 RelaxedPrecision 
                                                      OpDecorate %70 RelaxedPrecision 
                                                      OpDecorate %71 RelaxedPrecision 
                                                      OpDecorate %72 RelaxedPrecision 
                                                      OpDecorate %73 RelaxedPrecision 
                                                      OpDecorate %74 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD1 Location 77 
                                                      OpDecorate %81 RelaxedPrecision 
                                                      OpDecorate %82 RelaxedPrecision 
                                                      OpDecorate %83 RelaxedPrecision 
                                                      OpDecorate %84 RelaxedPrecision 
                                                      OpDecorate %88 RelaxedPrecision 
                                                      OpDecorate %89 RelaxedPrecision 
                                                      OpDecorate %90 RelaxedPrecision 
                                                      OpDecorate %91 RelaxedPrecision 
                                                      OpDecorate %94 RelaxedPrecision 
                                                      OpDecorate %100 RelaxedPrecision 
                                                      OpDecorate %101 RelaxedPrecision 
                                                      OpDecorate %104 RelaxedPrecision 
                                                      OpDecorate %108 RelaxedPrecision 
                                                      OpDecorate %109 RelaxedPrecision 
                                                      OpDecorate %114 RelaxedPrecision 
                                                      OpDecorate %116 RelaxedPrecision 
                                                      OpDecorate %121 RelaxedPrecision 
                                                      OpDecorate %130 RelaxedPrecision 
                                                      OpDecorate %131 RelaxedPrecision 
                                                      OpDecorate %133 RelaxedPrecision 
                                                      OpDecorate %134 RelaxedPrecision 
                                                      OpDecorate %141 RelaxedPrecision 
                                                      OpDecorate %142 RelaxedPrecision 
                                                      OpDecorate %145 RelaxedPrecision 
                                                      OpDecorate %147 RelaxedPrecision 
                                                      OpDecorate %148 RelaxedPrecision 
                                                      OpDecorate %149 RelaxedPrecision 
                                                      OpDecorate %152 RelaxedPrecision 
                                                      OpDecorate %153 RelaxedPrecision 
                                                      OpDecorate %154 RelaxedPrecision 
                                                      OpDecorate %155 RelaxedPrecision 
                                                      OpDecorate %227 DescriptorSet 227 
                                                      OpDecorate %227 Binding 227 
                                                      OpDecorate %231 DescriptorSet 231 
                                                      OpDecorate %231 Binding 231 
                                                      OpDecorate %243 DescriptorSet 243 
                                                      OpDecorate %243 Binding 243 
                                                      OpDecorate %245 DescriptorSet 245 
                                                      OpDecorate %245 Binding 245 
                                                      OpDecorate %261 RelaxedPrecision 
                                                      OpDecorate %262 RelaxedPrecision 
                                                      OpDecorate %266 RelaxedPrecision 
                                                      OpDecorate %267 RelaxedPrecision 
                                                      OpDecorate %269 RelaxedPrecision 
                                                      OpDecorate %270 RelaxedPrecision 
                                                      OpDecorate %271 RelaxedPrecision 
                                                      OpDecorate %274 RelaxedPrecision 
                                                      OpDecorate %278 RelaxedPrecision 
                                                      OpDecorate %279 RelaxedPrecision 
                                                      OpDecorate %280 RelaxedPrecision 
                                                      OpDecorate %283 RelaxedPrecision 
                                                      OpDecorate %284 RelaxedPrecision 
                                                      OpDecorate %286 RelaxedPrecision 
                                                      OpDecorate %288 RelaxedPrecision 
                                                      OpDecorate %290 RelaxedPrecision 
                                                      OpDecorate %291 RelaxedPrecision 
                                                      OpDecorate %292 RelaxedPrecision 
                                                      OpDecorate %293 RelaxedPrecision 
                                                      OpDecorate %295 RelaxedPrecision 
                                                      OpDecorate %296 RelaxedPrecision 
                                                      OpDecorate %298 RelaxedPrecision 
                                                      OpDecorate %299 RelaxedPrecision 
                                                      OpDecorate %301 RelaxedPrecision 
                                                      OpDecorate %302 RelaxedPrecision 
                                                      OpDecorate %303 RelaxedPrecision 
                                                      OpDecorate %304 RelaxedPrecision 
                                                      OpDecorate %307 RelaxedPrecision 
                                                      OpDecorate %308 RelaxedPrecision 
                                                      OpDecorate %310 RelaxedPrecision 
                                                      OpDecorate %312 RelaxedPrecision 
                                                      OpDecorate %313 RelaxedPrecision 
                                                      OpDecorate %314 RelaxedPrecision 
                                                      OpDecorate %315 RelaxedPrecision 
                                                      OpDecorate %316 RelaxedPrecision 
                                                      OpDecorate %317 RelaxedPrecision 
                                                      OpDecorate %318 RelaxedPrecision 
                                                      OpDecorate %320 RelaxedPrecision 
                                                      OpDecorate %321 RelaxedPrecision 
                                                      OpDecorate %322 RelaxedPrecision 
                                                      OpDecorate %323 RelaxedPrecision 
                                                      OpDecorate %325 RelaxedPrecision 
                                                      OpDecorate %326 RelaxedPrecision 
                                                      OpDecorate %327 RelaxedPrecision 
                                                      OpDecorate %328 RelaxedPrecision 
                                                      OpDecorate %331 RelaxedPrecision 
                                                      OpDecorate %332 RelaxedPrecision 
                                                      OpDecorate %333 RelaxedPrecision 
                                                      OpDecorate %334 RelaxedPrecision 
                                                      OpDecorate %335 RelaxedPrecision 
                                                      OpDecorate %335 DescriptorSet 335 
                                                      OpDecorate %335 Binding 335 
                                                      OpDecorate %336 RelaxedPrecision 
                                                      OpDecorate %337 RelaxedPrecision 
                                                      OpDecorate %337 DescriptorSet 337 
                                                      OpDecorate %337 Binding 337 
                                                      OpDecorate %338 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD0 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD0 Location 341 
                                                      OpDecorate %342 RelaxedPrecision 
                                                      OpDecorate %343 RelaxedPrecision 
                                                      OpDecorate %344 RelaxedPrecision 
                                                      OpDecorate %345 RelaxedPrecision 
                                                      OpDecorate %346 RelaxedPrecision 
                                                      OpDecorate %349 RelaxedPrecision 
                                                      OpDecorate %350 RelaxedPrecision 
                                                      OpDecorate %351 RelaxedPrecision 
                                                      OpDecorate %352 RelaxedPrecision 
                                                      OpDecorate %353 RelaxedPrecision 
                                                      OpDecorate %354 RelaxedPrecision 
                                                      OpDecorate %355 RelaxedPrecision 
                                                      OpDecorate %358 RelaxedPrecision 
                                                      OpDecorate %359 RelaxedPrecision 
                                                      OpDecorate %360 RelaxedPrecision 
                                                      OpDecorate %361 RelaxedPrecision 
                                                      OpDecorate %365 RelaxedPrecision 
                                                      OpDecorate %365 Location 365 
                                               %2 = OpTypeVoid 
                                               %3 = OpTypeFunction %2 
                                               %6 = OpTypeFloat 32 
                                               %7 = OpTypeVector %6 3 
                                               %8 = OpTypePointer Private %7 
                                Private f32_3* %9 = OpVariable Private 
                                              %10 = OpTypePointer Input %7 
                        Input f32_3* vs_TEXCOORD2 = OpVariable Input 
                                              %14 = OpTypeVector %6 4 
                                              %15 = OpTypeInt 32 0 
                                          u32 %16 = OpConstant 4 
                                              %17 = OpTypeArray %14 %16 
                                              %18 = OpTypeStruct %7 %14 %14 %14 %17 %14 %6 %14 %6 %6 %6 
                                              %19 = OpTypePointer Uniform %18 
Uniform struct {f32_3; f32_4; f32_4; f32_4; f32_4[4]; f32_4; f32; f32_4; f32; f32; f32;}* %20 = OpVariable Uniform 
                                              %21 = OpTypeInt 32 1 
                                          i32 %22 = OpConstant 1 
                                              %23 = OpTypePointer Uniform %14 
                                              %28 = OpTypePointer Private %6 
                                 Private f32* %29 = OpVariable Private 
                               Private f32_3* %39 = OpVariable Private 
                                          i32 %42 = OpConstant 0 
                                              %43 = OpTypePointer Uniform %7 
                                              %52 = OpTypePointer Private %14 
                               Private f32_4* %53 = OpVariable Private 
                                 Private f32* %62 = OpVariable Private 
                        Input f32_3* vs_TEXCOORD1 = OpVariable Input 
                               Private f32_3* %83 = OpVariable Private 
                                          u32 %92 = OpConstant 0 
                                          u32 %97 = OpConstant 1 
                                              %99 = OpTypeVector %6 2 
                                         f32 %102 = OpConstant 3.674022E-40 
                                       f32_2 %103 = OpConstantComposite %102 %102 
                                         i32 %111 = OpConstant 6 
                                             %112 = OpTypePointer Uniform %6 
                                         f32 %115 = OpConstant 3.674022E-40 
                                         i32 %128 = OpConstant 10 
                                         f32 %132 = OpConstant 3.674022E-40 
                                         f32 %138 = OpConstant 3.674022E-40 
                                Private f32* %145 = OpVariable Private 
                              Private f32_3* %150 = OpVariable Private 
                                         f32 %157 = OpConstant 3.674022E-40 
                                         f32 %174 = OpConstant 3.674022E-40 
                                         f32 %176 = OpConstant 3.674022E-40 
                                         i32 %193 = OpConstant 4 
                                         i32 %206 = OpConstant 2 
                                         i32 %216 = OpConstant 3 
                                             %225 = OpTypeImage %6 Cube 0 0 0 1 Unknown 
                                             %226 = OpTypePointer UniformConstant %225 
      UniformConstant read_only TextureCube* %227 = OpVariable UniformConstant 
                                             %229 = OpTypeSampler 
                                             %230 = OpTypePointer UniformConstant %229 
                    UniformConstant sampler* %231 = OpVariable UniformConstant 
                                             %233 = OpTypeSampledImage %225 
                                         u32 %237 = OpConstant 3 
                                Private f32* %240 = OpVariable Private 
                                             %241 = OpTypeImage %6 Dim2D 0 0 0 1 Unknown 
                                             %242 = OpTypePointer UniformConstant %241 
        UniformConstant read_only Texture2D* %243 = OpVariable UniformConstant 
                    UniformConstant sampler* %245 = OpVariable UniformConstant 
                                             %247 = OpTypeSampledImage %241 
                                         i32 %276 = OpConstant 9 
                                         i32 %281 = OpConstant 8 
                                Private f32* %286 = OpVariable Private 
                                Private f32* %293 = OpVariable Private 
                                         i32 %329 = OpConstant 7 
                              Private f32_3* %334 = OpVariable Private 
        UniformConstant read_only Texture2D* %335 = OpVariable UniformConstant 
                    UniformConstant sampler* %337 = OpVariable UniformConstant 
                                             %340 = OpTypePointer Input %99 
                        Input f32_2* vs_TEXCOORD0 = OpVariable Input 
                              Private f32_3* %345 = OpVariable Private 
                                         i32 %347 = OpConstant 5 
                                             %364 = OpTypePointer Output %14 
                               Output f32_4* %365 = OpVariable Output 
                                             %369 = OpTypePointer Output %6 
                                          void %4 = OpFunction None %3 
                                               %5 = OpLabel 
                                        f32_3 %12 = OpLoad vs_TEXCOORD2 
                                        f32_3 %13 = OpFNegate %12 
                               Uniform f32_4* %24 = OpAccessChain %20 %22 
                                        f32_4 %25 = OpLoad %24 
                                        f32_3 %26 = OpVectorShuffle %25 %25 0 1 2 
                                        f32_3 %27 = OpFAdd %13 %26 
                                                      OpStore %9 %27 
                                        f32_3 %30 = OpLoad %9 
                                        f32_3 %31 = OpLoad %9 
                                          f32 %32 = OpDot %30 %31 
                                                      OpStore %29 %32 
                                          f32 %33 = OpLoad %29 
                                          f32 %34 = OpExtInst %1 32 %33 
                                                      OpStore %29 %34 
                                          f32 %35 = OpLoad %29 
                                        f32_3 %36 = OpCompositeConstruct %35 %35 %35 
                                        f32_3 %37 = OpLoad %9 
                                        f32_3 %38 = OpFMul %36 %37 
                                                      OpStore %9 %38 
                                        f32_3 %40 = OpLoad vs_TEXCOORD2 
                                        f32_3 %41 = OpFNegate %40 
                               Uniform f32_3* %44 = OpAccessChain %20 %42 
                                        f32_3 %45 = OpLoad %44 
                                        f32_3 %46 = OpFAdd %41 %45 
                                                      OpStore %39 %46 
                                        f32_3 %47 = OpLoad %39 
                                        f32_3 %48 = OpLoad %39 
                                          f32 %49 = OpDot %47 %48 
                                                      OpStore %29 %49 
                                          f32 %50 = OpLoad %29 
                                          f32 %51 = OpExtInst %1 32 %50 
                                                      OpStore %29 %51 
                                        f32_3 %54 = OpLoad %39 
                                          f32 %55 = OpLoad %29 
                                        f32_3 %56 = OpCompositeConstruct %55 %55 %55 
                                        f32_3 %57 = OpFMul %54 %56 
                                        f32_3 %58 = OpLoad %9 
                                        f32_3 %59 = OpFAdd %57 %58 
                                        f32_4 %60 = OpLoad %53 
                                        f32_4 %61 = OpVectorShuffle %60 %59 4 5 6 3 
                                                      OpStore %53 %61 
                                        f32_4 %63 = OpLoad %53 
                                        f32_3 %64 = OpVectorShuffle %63 %63 0 1 2 
                                        f32_4 %65 = OpLoad %53 
                                        f32_3 %66 = OpVectorShuffle %65 %65 0 1 2 
                                          f32 %67 = OpDot %64 %66 
                                                      OpStore %62 %67 
                                          f32 %68 = OpLoad %62 
                                          f32 %69 = OpExtInst %1 32 %68 
                                                      OpStore %62 %69 
                                          f32 %70 = OpLoad %62 
                                        f32_3 %71 = OpCompositeConstruct %70 %70 %70 
                                        f32_4 %72 = OpLoad %53 
                                        f32_3 %73 = OpVectorShuffle %72 %72 0 1 2 
                                        f32_3 %74 = OpFMul %71 %73 
                                        f32_4 %75 = OpLoad %53 
                                        f32_4 %76 = OpVectorShuffle %75 %74 4 5 6 3 
                                                      OpStore %53 %76 
                                        f32_3 %78 = OpLoad vs_TEXCOORD1 
                                        f32_3 %79 = OpLoad vs_TEXCOORD1 
                                          f32 %80 = OpDot %78 %79 
                                                      OpStore %62 %80 
                                          f32 %81 = OpLoad %62 
                                          f32 %82 = OpExtInst %1 32 %81 
                                                      OpStore %62 %82 
                                          f32 %84 = OpLoad %62 
                                        f32_3 %85 = OpCompositeConstruct %84 %84 %84 
                                        f32_3 %86 = OpLoad vs_TEXCOORD1 
                                        f32_3 %87 = OpFMul %85 %86 
                                                      OpStore %83 %87 
                                        f32_3 %88 = OpLoad %83 
                                        f32_4 %89 = OpLoad %53 
                                        f32_3 %90 = OpVectorShuffle %89 %89 0 1 2 
                                          f32 %91 = OpDot %88 %90 
                                 Private f32* %93 = OpAccessChain %53 %92 
                                                      OpStore %93 %91 
                                        f32_3 %94 = OpLoad %83 
                                        f32_3 %95 = OpLoad %9 
                                          f32 %96 = OpDot %94 %95 
                                 Private f32* %98 = OpAccessChain %53 %97 
                                                      OpStore %98 %96 
                                       f32_4 %100 = OpLoad %53 
                                       f32_2 %101 = OpVectorShuffle %100 %100 0 1 
                                       f32_2 %104 = OpExtInst %1 40 %101 %103 
                                       f32_4 %105 = OpLoad %53 
                                       f32_4 %106 = OpVectorShuffle %105 %104 4 5 2 3 
                                                      OpStore %53 %106 
                                Private f32* %107 = OpAccessChain %53 %92 
                                         f32 %108 = OpLoad %107 
                                         f32 %109 = OpExtInst %1 30 %108 
                                Private f32* %110 = OpAccessChain %9 %92 
                                                      OpStore %110 %109 
                                Uniform f32* %113 = OpAccessChain %20 %111 
                                         f32 %114 = OpLoad %113 
                                         f32 %116 = OpFMul %114 %115 
                                Private f32* %117 = OpAccessChain %53 %92 
                                                      OpStore %117 %116 
                                Private f32* %118 = OpAccessChain %9 %92 
                                         f32 %119 = OpLoad %118 
                                Private f32* %120 = OpAccessChain %53 %92 
                                         f32 %121 = OpLoad %120 
                                         f32 %122 = OpFMul %119 %121 
                                Private f32* %123 = OpAccessChain %9 %92 
                                                      OpStore %123 %122 
                                Private f32* %124 = OpAccessChain %9 %92 
                                         f32 %125 = OpLoad %124 
                                         f32 %126 = OpExtInst %1 29 %125 
                                Private f32* %127 = OpAccessChain %9 %92 
                                                      OpStore %127 %126 
                                Uniform f32* %129 = OpAccessChain %20 %128 
                                         f32 %130 = OpLoad %129 
                                         f32 %131 = OpFNegate %130 
                                         f32 %133 = OpFMul %131 %132 
                                         f32 %134 = OpFAdd %133 %132 
                                Private f32* %135 = OpAccessChain %53 %92 
                                                      OpStore %135 %134 
                                Private f32* %136 = OpAccessChain %9 %92 
                                         f32 %137 = OpLoad %136 
                                         f32 %139 = OpFMul %137 %138 
                                Private f32* %140 = OpAccessChain %53 %92 
                                         f32 %141 = OpLoad %140 
                                         f32 %142 = OpFNegate %141 
                                         f32 %143 = OpFAdd %139 %142 
                                Private f32* %144 = OpAccessChain %9 %92 
                                                      OpStore %144 %143 
                                Uniform f32* %146 = OpAccessChain %20 %128 
                                         f32 %147 = OpLoad %146 
                                         f32 %148 = OpFMul %147 %132 
                                         f32 %149 = OpFAdd %148 %132 
                                                      OpStore %145 %149 
                                Private f32* %151 = OpAccessChain %53 %92 
                                         f32 %152 = OpLoad %151 
                                         f32 %153 = OpFNegate %152 
                                         f32 %154 = OpLoad %145 
                                         f32 %155 = OpFAdd %153 %154 
                                Private f32* %156 = OpAccessChain %150 %92 
                                                      OpStore %156 %155 
                                Private f32* %158 = OpAccessChain %150 %92 
                                         f32 %159 = OpLoad %158 
                                         f32 %160 = OpFDiv %157 %159 
                                Private f32* %161 = OpAccessChain %150 %92 
                                                      OpStore %161 %160 
                                Private f32* %162 = OpAccessChain %150 %92 
                                         f32 %163 = OpLoad %162 
                                Private f32* %164 = OpAccessChain %9 %92 
                                         f32 %165 = OpLoad %164 
                                         f32 %166 = OpFMul %163 %165 
                                Private f32* %167 = OpAccessChain %9 %92 
                                                      OpStore %167 %166 
                                Private f32* %168 = OpAccessChain %9 %92 
                                         f32 %169 = OpLoad %168 
                                         f32 %170 = OpExtInst %1 43 %169 %102 %157 
                                Private f32* %171 = OpAccessChain %9 %92 
                                                      OpStore %171 %170 
                                Private f32* %172 = OpAccessChain %9 %92 
                                         f32 %173 = OpLoad %172 
                                         f32 %175 = OpFMul %173 %174 
                                         f32 %177 = OpFAdd %175 %176 
                                Private f32* %178 = OpAccessChain %150 %92 
                                                      OpStore %178 %177 
                                Private f32* %179 = OpAccessChain %9 %92 
                                         f32 %180 = OpLoad %179 
                                Private f32* %181 = OpAccessChain %9 %92 
                                         f32 %182 = OpLoad %181 
                                         f32 %183 = OpFMul %180 %182 
                                Private f32* %184 = OpAccessChain %9 %92 
                                                      OpStore %184 %183 
                                Private f32* %185 = OpAccessChain %9 %92 
                                         f32 %186 = OpLoad %185 
                                Private f32* %187 = OpAccessChain %150 %92 
                                         f32 %188 = OpLoad %187 
                                         f32 %189 = OpFMul %186 %188 
                                Private f32* %190 = OpAccessChain %9 %92 
                                                      OpStore %190 %189 
                                       f32_3 %191 = OpLoad vs_TEXCOORD2 
                                       f32_3 %192 = OpVectorShuffle %191 %191 1 1 1 
                              Uniform f32_4* %194 = OpAccessChain %20 %193 %22 
                                       f32_4 %195 = OpLoad %194 
                                       f32_3 %196 = OpVectorShuffle %195 %195 0 1 2 
                                       f32_3 %197 = OpFMul %192 %196 
                                                      OpStore %150 %197 
                              Uniform f32_4* %198 = OpAccessChain %20 %193 %42 
                                       f32_4 %199 = OpLoad %198 
                                       f32_3 %200 = OpVectorShuffle %199 %199 0 1 2 
                                       f32_3 %201 = OpLoad vs_TEXCOORD2 
                                       f32_3 %202 = OpVectorShuffle %201 %201 0 0 0 
                                       f32_3 %203 = OpFMul %200 %202 
                                       f32_3 %204 = OpLoad %150 
                                       f32_3 %205 = OpFAdd %203 %204 
                                                      OpStore %150 %205 
                              Uniform f32_4* %207 = OpAccessChain %20 %193 %206 
                                       f32_4 %208 = OpLoad %207 
                                       f32_3 %209 = OpVectorShuffle %208 %208 0 1 2 
                                       f32_3 %210 = OpLoad vs_TEXCOORD2 
                                       f32_3 %211 = OpVectorShuffle %210 %210 2 2 2 
                                       f32_3 %212 = OpFMul %209 %211 
                                       f32_3 %213 = OpLoad %150 
                                       f32_3 %214 = OpFAdd %212 %213 
                                                      OpStore %150 %214 
                                       f32_3 %215 = OpLoad %150 
                              Uniform f32_4* %217 = OpAccessChain %20 %193 %216 
                                       f32_4 %218 = OpLoad %217 
                                       f32_3 %219 = OpVectorShuffle %218 %218 0 1 2 
                                       f32_3 %220 = OpFAdd %215 %219 
                                                      OpStore %150 %220 
                                       f32_3 %221 = OpLoad %150 
                                       f32_3 %222 = OpLoad %150 
                                         f32 %223 = OpDot %221 %222 
                                Private f32* %224 = OpAccessChain %39 %92 
                                                      OpStore %224 %223 
                       read_only TextureCube %228 = OpLoad %227 
                                     sampler %232 = OpLoad %231 
                read_only TextureCubeSampled %234 = OpSampledImage %228 %232 
                                       f32_3 %235 = OpLoad %150 
                                       f32_4 %236 = OpImageSampleImplicitLod %234 %235 
                                         f32 %238 = OpCompositeExtract %236 3 
                                Private f32* %239 = OpAccessChain %150 %92 
                                                      OpStore %239 %238 
                         read_only Texture2D %244 = OpLoad %243 
                                     sampler %246 = OpLoad %245 
                  read_only Texture2DSampled %248 = OpSampledImage %244 %246 
                                       f32_3 %249 = OpLoad %39 
                                       f32_2 %250 = OpVectorShuffle %249 %249 0 0 
                                       f32_4 %251 = OpImageSampleImplicitLod %248 %250 
                                         f32 %252 = OpCompositeExtract %251 0 
                                                      OpStore %240 %252 
                                Private f32* %253 = OpAccessChain %150 %92 
                                         f32 %254 = OpLoad %253 
                                         f32 %255 = OpLoad %240 
                                         f32 %256 = OpFMul %254 %255 
                                Private f32* %257 = OpAccessChain %150 %92 
                                                      OpStore %257 %256 
                                       f32_3 %258 = OpLoad %150 
                                       f32_3 %259 = OpVectorShuffle %258 %258 0 0 0 
                              Uniform f32_4* %260 = OpAccessChain %20 %206 
                                       f32_4 %261 = OpLoad %260 
                                       f32_3 %262 = OpVectorShuffle %261 %261 0 1 2 
                                       f32_3 %263 = OpFMul %259 %262 
                                       f32_4 %264 = OpLoad %53 
                                       f32_4 %265 = OpVectorShuffle %264 %263 4 1 5 6 
                                                      OpStore %53 %265 
                                       f32_4 %266 = OpLoad %53 
                                       f32_3 %267 = OpVectorShuffle %266 %266 0 2 3 
                              Uniform f32_4* %268 = OpAccessChain %20 %216 
                                       f32_4 %269 = OpLoad %268 
                                       f32_3 %270 = OpVectorShuffle %269 %269 0 1 2 
                                       f32_3 %271 = OpFMul %267 %270 
                                                      OpStore %83 %271 
                                       f32_3 %272 = OpLoad %9 
                                       f32_3 %273 = OpVectorShuffle %272 %272 0 0 0 
                                       f32_3 %274 = OpLoad %83 
                                       f32_3 %275 = OpFMul %273 %274 
                                                      OpStore %9 %275 
                                Uniform f32* %277 = OpAccessChain %20 %276 
                                         f32 %278 = OpLoad %277 
                                         f32 %279 = OpFNegate %278 
                                         f32 %280 = OpFMul %279 %132 
                                Uniform f32* %282 = OpAccessChain %20 %281 
                                         f32 %283 = OpLoad %282 
                                         f32 %284 = OpFAdd %280 %283 
                                Private f32* %285 = OpAccessChain %83 %92 
                                                      OpStore %285 %284 
                                Private f32* %287 = OpAccessChain %53 %97 
                                         f32 %288 = OpLoad %287 
                                Private f32* %289 = OpAccessChain %83 %92 
                                         f32 %290 = OpLoad %289 
                                         f32 %291 = OpFNegate %290 
                                         f32 %292 = OpFAdd %288 %291 
                                                      OpStore %286 %292 
                                Uniform f32* %294 = OpAccessChain %20 %276 
                                         f32 %295 = OpLoad %294 
                                         f32 %296 = OpFMul %295 %132 
                                Uniform f32* %297 = OpAccessChain %20 %281 
                                         f32 %298 = OpLoad %297 
                                         f32 %299 = OpFAdd %296 %298 
                                                      OpStore %293 %299 
                                Private f32* %300 = OpAccessChain %83 %92 
                                         f32 %301 = OpLoad %300 
                                         f32 %302 = OpFNegate %301 
                                         f32 %303 = OpLoad %293 
                                         f32 %304 = OpFAdd %302 %303 
                                Private f32* %305 = OpAccessChain %83 %92 
                                                      OpStore %305 %304 
                                Private f32* %306 = OpAccessChain %83 %92 
                                         f32 %307 = OpLoad %306 
                                         f32 %308 = OpFDiv %157 %307 
                                Private f32* %309 = OpAccessChain %83 %92 
                                                      OpStore %309 %308 
                                         f32 %310 = OpLoad %286 
                                Private f32* %311 = OpAccessChain %83 %92 
                                         f32 %312 = OpLoad %311 
                                         f32 %313 = OpFMul %310 %312 
                                                      OpStore %286 %313 
                                         f32 %314 = OpLoad %286 
                                         f32 %315 = OpExtInst %1 43 %314 %102 %157 
                                                      OpStore %286 %315 
                                         f32 %316 = OpLoad %286 
                                         f32 %317 = OpFMul %316 %174 
                                         f32 %318 = OpFAdd %317 %176 
                                Private f32* %319 = OpAccessChain %83 %92 
                                                      OpStore %319 %318 
                                         f32 %320 = OpLoad %286 
                                         f32 %321 = OpLoad %286 
                                         f32 %322 = OpFMul %320 %321 
                                                      OpStore %286 %322 
                                         f32 %323 = OpLoad %286 
                                Private f32* %324 = OpAccessChain %83 %92 
                                         f32 %325 = OpLoad %324 
                                         f32 %326 = OpFMul %323 %325 
                                                      OpStore %286 %326 
                                         f32 %327 = OpLoad %286 
                                       f32_3 %328 = OpCompositeConstruct %327 %327 %327 
                              Uniform f32_4* %330 = OpAccessChain %20 %329 
                                       f32_4 %331 = OpLoad %330 
                                       f32_3 %332 = OpVectorShuffle %331 %331 0 1 2 
                                       f32_3 %333 = OpFMul %328 %332 
                                                      OpStore %83 %333 
                         read_only Texture2D %336 = OpLoad %335 
                                     sampler %338 = OpLoad %337 
                  read_only Texture2DSampled %339 = OpSampledImage %336 %338 
                                       f32_2 %342 = OpLoad vs_TEXCOORD0 
                                       f32_4 %343 = OpImageSampleImplicitLod %339 %342 
                                       f32_3 %344 = OpVectorShuffle %343 %343 0 1 2 
                                                      OpStore %334 %344 
                                       f32_3 %346 = OpLoad %334 
                              Uniform f32_4* %348 = OpAccessChain %20 %347 
                                       f32_4 %349 = OpLoad %348 
                                       f32_3 %350 = OpVectorShuffle %349 %349 0 1 2 
                                       f32_3 %351 = OpFMul %346 %350 
                                                      OpStore %345 %351 
                                       f32_4 %352 = OpLoad %53 
                                       f32_3 %353 = OpVectorShuffle %352 %352 0 2 3 
                                       f32_3 %354 = OpLoad %345 
                                       f32_3 %355 = OpFMul %353 %354 
                                       f32_4 %356 = OpLoad %53 
                                       f32_4 %357 = OpVectorShuffle %356 %355 4 5 6 3 
                                                      OpStore %53 %357 
                                       f32_4 %358 = OpLoad %53 
                                       f32_3 %359 = OpVectorShuffle %358 %358 0 1 2 
                                       f32_3 %360 = OpLoad %83 
                                       f32_3 %361 = OpFMul %359 %360 
                                       f32_3 %362 = OpLoad %9 
                                       f32_3 %363 = OpFAdd %361 %362 
                                                      OpStore %9 %363 
                                       f32_3 %366 = OpLoad %9 
                                       f32_4 %367 = OpLoad %365 
                                       f32_4 %368 = OpVectorShuffle %367 %366 4 5 6 3 
                                                      OpStore %365 %368 
                                 Output f32* %370 = OpAccessChain %365 %237 
                                                      OpStore %370 %157 
                                                      OpReturn
                                                      OpFunctionEnd
"
}
SubProgram "vulkan hw_tier01 " {
Keywords { "POINT_COOKIE" }
"; SPIR-V
; Version: 1.0
; Generator: Khronos Glslang Reference Front End; 6
; Bound: 209
; Schema: 0
                                                      OpCapability Shader 
                                               %1 = OpExtInstImport "GLSL.std.450" 
                                                      OpMemoryModel Logical GLSL450 
                                                      OpEntryPoint Vertex %4 "main" %11 %75 %85 %101 %106 %137 %143 %190 %200 
                                                      OpName vs_TEXCOORD0 "vs_TEXCOORD0" 
                                                      OpName vs_TEXCOORD1 "vs_TEXCOORD1" 
                                                      OpName vs_TEXCOORD2 "vs_TEXCOORD2" 
                                                      OpName vs_TEXCOORD3 "vs_TEXCOORD3" 
                                                      OpName vs_TEXCOORD4 "vs_TEXCOORD4" 
                                                      OpDecorate %11 Location 11 
                                                      OpDecorate %16 ArrayStride 16 
                                                      OpDecorate %17 ArrayStride 17 
                                                      OpDecorate %18 ArrayStride 18 
                                                      OpDecorate %19 ArrayStride 19 
                                                      OpMemberDecorate %20 0 Offset 20 
                                                      OpMemberDecorate %20 1 Offset 20 
                                                      OpMemberDecorate %20 2 Offset 20 
                                                      OpMemberDecorate %20 3 Offset 20 
                                                      OpMemberDecorate %20 4 Offset 20 
                                                      OpDecorate %20 Block 
                                                      OpDecorate %22 DescriptorSet 22 
                                                      OpDecorate %22 Binding 22 
                                                      OpMemberDecorate %73 0 BuiltIn 73 
                                                      OpMemberDecorate %73 1 BuiltIn 73 
                                                      OpMemberDecorate %73 2 BuiltIn 73 
                                                      OpDecorate %73 Block 
                                                      OpDecorate %85 Location 85 
                                                      OpDecorate vs_TEXCOORD0 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD0 Location 101 
                                                      OpDecorate %106 Location 106 
                                                      OpDecorate vs_TEXCOORD1 Location 137 
                                                      OpDecorate vs_TEXCOORD2 Location 143 
                                                      OpDecorate vs_TEXCOORD3 Location 190 
                                                      OpDecorate vs_TEXCOORD4 Location 200 
                                               %2 = OpTypeVoid 
                                               %3 = OpTypeFunction %2 
                                               %6 = OpTypeFloat 32 
                                               %7 = OpTypeVector %6 4 
                                               %8 = OpTypePointer Private %7 
                                Private f32_4* %9 = OpVariable Private 
                                              %10 = OpTypePointer Input %7 
                                 Input f32_4* %11 = OpVariable Input 
                                              %14 = OpTypeInt 32 0 
                                          u32 %15 = OpConstant 4 
                                              %16 = OpTypeArray %7 %15 
                                              %17 = OpTypeArray %7 %15 
                                              %18 = OpTypeArray %7 %15 
                                              %19 = OpTypeArray %7 %15 
                                              %20 = OpTypeStruct %16 %17 %18 %19 %7 
                                              %21 = OpTypePointer Uniform %20 
Uniform struct {f32_4[4]; f32_4[4]; f32_4[4]; f32_4[4]; f32_4;}* %22 = OpVariable Uniform 
                                              %23 = OpTypeInt 32 1 
                                          i32 %24 = OpConstant 0 
                                          i32 %25 = OpConstant 1 
                                              %26 = OpTypePointer Uniform %7 
                                          i32 %37 = OpConstant 2 
                               Private f32_4* %45 = OpVariable Private 
                                          i32 %47 = OpConstant 3 
                               Private f32_4* %51 = OpVariable Private 
                                          u32 %71 = OpConstant 1 
                                              %72 = OpTypeArray %6 %71 
                                              %73 = OpTypeStruct %7 %6 %72 
                                              %74 = OpTypePointer Output %73 
         Output struct {f32_4; f32; f32[1];}* %75 = OpVariable Output 
                                              %83 = OpTypePointer Output %7 
                                 Input f32_4* %85 = OpVariable Input 
                                              %86 = OpTypeVector %6 2 
                                          i32 %89 = OpConstant 4 
                                             %100 = OpTypePointer Output %86 
                       Output f32_2* vs_TEXCOORD0 = OpVariable Output 
                                             %104 = OpTypeVector %6 3 
                                             %105 = OpTypePointer Input %104 
                                Input f32_3* %106 = OpVariable Input 
                                         u32 %112 = OpConstant 0 
                                             %113 = OpTypePointer Private %6 
                                         u32 %126 = OpConstant 2 
                                Private f32* %128 = OpVariable Private 
                                             %136 = OpTypePointer Output %104 
                       Output f32_3* vs_TEXCOORD1 = OpVariable Output 
                       Output f32_3* vs_TEXCOORD2 = OpVariable Output 
                       Output f32_3* vs_TEXCOORD3 = OpVariable Output 
                       Output f32_4* vs_TEXCOORD4 = OpVariable Output 
                                         f32 %201 = OpConstant 3.674022E-40 
                                       f32_4 %202 = OpConstantComposite %201 %201 %201 %201 
                                             %203 = OpTypePointer Output %6 
                                          void %4 = OpFunction None %3 
                                               %5 = OpLabel 
                                        f32_4 %12 = OpLoad %11 
                                        f32_4 %13 = OpVectorShuffle %12 %12 1 1 1 1 
                               Uniform f32_4* %27 = OpAccessChain %22 %24 %25 
                                        f32_4 %28 = OpLoad %27 
                                        f32_4 %29 = OpFMul %13 %28 
                                                      OpStore %9 %29 
                               Uniform f32_4* %30 = OpAccessChain %22 %24 %24 
                                        f32_4 %31 = OpLoad %30 
                                        f32_4 %32 = OpLoad %11 
                                        f32_4 %33 = OpVectorShuffle %32 %32 0 0 0 0 
                                        f32_4 %34 = OpFMul %31 %33 
                                        f32_4 %35 = OpLoad %9 
                                        f32_4 %36 = OpFAdd %34 %35 
                                                      OpStore %9 %36 
                               Uniform f32_4* %38 = OpAccessChain %22 %24 %37 
                                        f32_4 %39 = OpLoad %38 
                                        f32_4 %40 = OpLoad %11 
                                        f32_4 %41 = OpVectorShuffle %40 %40 2 2 2 2 
                                        f32_4 %42 = OpFMul %39 %41 
                                        f32_4 %43 = OpLoad %9 
                                        f32_4 %44 = OpFAdd %42 %43 
                                                      OpStore %9 %44 
                                        f32_4 %46 = OpLoad %9 
                               Uniform f32_4* %48 = OpAccessChain %22 %24 %47 
                                        f32_4 %49 = OpLoad %48 
                                        f32_4 %50 = OpFAdd %46 %49 
                                                      OpStore %45 %50 
                                        f32_4 %52 = OpLoad %45 
                                        f32_4 %53 = OpVectorShuffle %52 %52 1 1 1 1 
                               Uniform f32_4* %54 = OpAccessChain %22 %37 %25 
                                        f32_4 %55 = OpLoad %54 
                                        f32_4 %56 = OpFMul %53 %55 
                                                      OpStore %51 %56 
                               Uniform f32_4* %57 = OpAccessChain %22 %37 %24 
                                        f32_4 %58 = OpLoad %57 
                                        f32_4 %59 = OpLoad %45 
                                        f32_4 %60 = OpVectorShuffle %59 %59 0 0 0 0 
                                        f32_4 %61 = OpFMul %58 %60 
                                        f32_4 %62 = OpLoad %51 
                                        f32_4 %63 = OpFAdd %61 %62 
                                                      OpStore %51 %63 
                               Uniform f32_4* %64 = OpAccessChain %22 %37 %37 
                                        f32_4 %65 = OpLoad %64 
                                        f32_4 %66 = OpLoad %45 
                                        f32_4 %67 = OpVectorShuffle %66 %66 2 2 2 2 
                                        f32_4 %68 = OpFMul %65 %67 
                                        f32_4 %69 = OpLoad %51 
                                        f32_4 %70 = OpFAdd %68 %69 
                                                      OpStore %51 %70 
                               Uniform f32_4* %76 = OpAccessChain %22 %37 %47 
                                        f32_4 %77 = OpLoad %76 
                                        f32_4 %78 = OpLoad %45 
                                        f32_4 %79 = OpVectorShuffle %78 %78 3 3 3 3 
                                        f32_4 %80 = OpFMul %77 %79 
                                        f32_4 %81 = OpLoad %51 
                                        f32_4 %82 = OpFAdd %80 %81 
                                Output f32_4* %84 = OpAccessChain %75 %24 
                                                      OpStore %84 %82 
                                        f32_4 %87 = OpLoad %85 
                                        f32_2 %88 = OpVectorShuffle %87 %87 0 1 
                               Uniform f32_4* %90 = OpAccessChain %22 %89 
                                        f32_4 %91 = OpLoad %90 
                                        f32_2 %92 = OpVectorShuffle %91 %91 0 1 
                                        f32_2 %93 = OpFMul %88 %92 
                               Uniform f32_4* %94 = OpAccessChain %22 %89 
                                        f32_4 %95 = OpLoad %94 
                                        f32_2 %96 = OpVectorShuffle %95 %95 2 3 
                                        f32_2 %97 = OpFAdd %93 %96 
                                        f32_4 %98 = OpLoad %45 
                                        f32_4 %99 = OpVectorShuffle %98 %97 4 5 2 3 
                                                      OpStore %45 %99 
                                       f32_4 %102 = OpLoad %45 
                                       f32_2 %103 = OpVectorShuffle %102 %102 0 1 
                                                      OpStore vs_TEXCOORD0 %103 
                                       f32_3 %107 = OpLoad %106 
                              Uniform f32_4* %108 = OpAccessChain %22 %25 %24 
                                       f32_4 %109 = OpLoad %108 
                                       f32_3 %110 = OpVectorShuffle %109 %109 0 1 2 
                                         f32 %111 = OpDot %107 %110 
                                Private f32* %114 = OpAccessChain %45 %112 
                                                      OpStore %114 %111 
                                       f32_3 %115 = OpLoad %106 
                              Uniform f32_4* %116 = OpAccessChain %22 %25 %25 
                                       f32_4 %117 = OpLoad %116 
                                       f32_3 %118 = OpVectorShuffle %117 %117 0 1 2 
                                         f32 %119 = OpDot %115 %118 
                                Private f32* %120 = OpAccessChain %45 %71 
                                                      OpStore %120 %119 
                                       f32_3 %121 = OpLoad %106 
                              Uniform f32_4* %122 = OpAccessChain %22 %25 %37 
                                       f32_4 %123 = OpLoad %122 
                                       f32_3 %124 = OpVectorShuffle %123 %123 0 1 2 
                                         f32 %125 = OpDot %121 %124 
                                Private f32* %127 = OpAccessChain %45 %126 
                                                      OpStore %127 %125 
                                       f32_4 %129 = OpLoad %45 
                                       f32_3 %130 = OpVectorShuffle %129 %129 0 1 2 
                                       f32_4 %131 = OpLoad %45 
                                       f32_3 %132 = OpVectorShuffle %131 %131 0 1 2 
                                         f32 %133 = OpDot %130 %132 
                                                      OpStore %128 %133 
                                         f32 %134 = OpLoad %128 
                                         f32 %135 = OpExtInst %1 32 %134 
                                                      OpStore %128 %135 
                                         f32 %138 = OpLoad %128 
                                       f32_3 %139 = OpCompositeConstruct %138 %138 %138 
                                       f32_4 %140 = OpLoad %45 
                                       f32_3 %141 = OpVectorShuffle %140 %140 0 1 2 
                                       f32_3 %142 = OpFMul %139 %141 
                                                      OpStore vs_TEXCOORD1 %142 
                              Uniform f32_4* %144 = OpAccessChain %22 %24 %47 
                                       f32_4 %145 = OpLoad %144 
                                       f32_3 %146 = OpVectorShuffle %145 %145 0 1 2 
                                       f32_4 %147 = OpLoad %11 
                                       f32_3 %148 = OpVectorShuffle %147 %147 3 3 3 
                                       f32_3 %149 = OpFMul %146 %148 
                                       f32_4 %150 = OpLoad %9 
                                       f32_3 %151 = OpVectorShuffle %150 %150 0 1 2 
                                       f32_3 %152 = OpFAdd %149 %151 
                                                      OpStore vs_TEXCOORD2 %152 
                              Uniform f32_4* %153 = OpAccessChain %22 %24 %47 
                                       f32_4 %154 = OpLoad %153 
                                       f32_4 %155 = OpLoad %11 
                                       f32_4 %156 = OpVectorShuffle %155 %155 3 3 3 3 
                                       f32_4 %157 = OpFMul %154 %156 
                                       f32_4 %158 = OpLoad %9 
                                       f32_4 %159 = OpFAdd %157 %158 
                                                      OpStore %9 %159 
                                       f32_4 %160 = OpLoad %9 
                                       f32_3 %161 = OpVectorShuffle %160 %160 1 1 1 
                              Uniform f32_4* %162 = OpAccessChain %22 %47 %25 
                                       f32_4 %163 = OpLoad %162 
                                       f32_3 %164 = OpVectorShuffle %163 %163 0 1 2 
                                       f32_3 %165 = OpFMul %161 %164 
                                       f32_4 %166 = OpLoad %45 
                                       f32_4 %167 = OpVectorShuffle %166 %165 4 5 6 3 
                                                      OpStore %45 %167 
                              Uniform f32_4* %168 = OpAccessChain %22 %47 %24 
                                       f32_4 %169 = OpLoad %168 
                                       f32_3 %170 = OpVectorShuffle %169 %169 0 1 2 
                                       f32_4 %171 = OpLoad %9 
                                       f32_3 %172 = OpVectorShuffle %171 %171 0 0 0 
                                       f32_3 %173 = OpFMul %170 %172 
                                       f32_4 %174 = OpLoad %45 
                                       f32_3 %175 = OpVectorShuffle %174 %174 0 1 2 
                                       f32_3 %176 = OpFAdd %173 %175 
                                       f32_4 %177 = OpLoad %45 
                                       f32_4 %178 = OpVectorShuffle %177 %176 4 5 6 3 
                                                      OpStore %45 %178 
                              Uniform f32_4* %179 = OpAccessChain %22 %47 %37 
                                       f32_4 %180 = OpLoad %179 
                                       f32_3 %181 = OpVectorShuffle %180 %180 0 1 2 
                                       f32_4 %182 = OpLoad %9 
                                       f32_3 %183 = OpVectorShuffle %182 %182 2 2 2 
                                       f32_3 %184 = OpFMul %181 %183 
                                       f32_4 %185 = OpLoad %45 
                                       f32_3 %186 = OpVectorShuffle %185 %185 0 1 2 
                                       f32_3 %187 = OpFAdd %184 %186 
                                       f32_4 %188 = OpLoad %9 
                                       f32_4 %189 = OpVectorShuffle %188 %187 4 5 6 3 
                                                      OpStore %9 %189 
                              Uniform f32_4* %191 = OpAccessChain %22 %47 %47 
                                       f32_4 %192 = OpLoad %191 
                                       f32_3 %193 = OpVectorShuffle %192 %192 0 1 2 
                                       f32_4 %194 = OpLoad %9 
                                       f32_3 %195 = OpVectorShuffle %194 %194 3 3 3 
                                       f32_3 %196 = OpFMul %193 %195 
                                       f32_4 %197 = OpLoad %9 
                                       f32_3 %198 = OpVectorShuffle %197 %197 0 1 2 
                                       f32_3 %199 = OpFAdd %196 %198 
                                                      OpStore vs_TEXCOORD3 %199 
                                                      OpStore vs_TEXCOORD4 %202 
                                 Output f32* %204 = OpAccessChain %75 %24 %71 
                                         f32 %205 = OpLoad %204 
                                         f32 %206 = OpFNegate %205 
                                 Output f32* %207 = OpAccessChain %75 %24 %71 
                                                      OpStore %207 %206 
                                                      OpReturn
                                                      OpFunctionEnd
; SPIR-V
; Version: 1.0
; Generator: Khronos Glslang Reference Front End; 6
; Bound: 372
; Schema: 0
                                                      OpCapability Shader 
                                               %1 = OpExtInstImport "GLSL.std.450" 
                                                      OpMemoryModel Logical GLSL450 
                                                      OpEntryPoint Fragment %4 "main" %11 %77 %341 %365 
                                                      OpExecutionMode %4 OriginUpperLeft 
                                                      OpName vs_TEXCOORD2 "vs_TEXCOORD2" 
                                                      OpName vs_TEXCOORD1 "vs_TEXCOORD1" 
                                                      OpName vs_TEXCOORD0 "vs_TEXCOORD0" 
                                                      OpDecorate vs_TEXCOORD2 Location 11 
                                                      OpDecorate %17 ArrayStride 17 
                                                      OpMemberDecorate %18 0 Offset 18 
                                                      OpMemberDecorate %18 1 Offset 18 
                                                      OpMemberDecorate %18 2 RelaxedPrecision 
                                                      OpMemberDecorate %18 2 Offset 18 
                                                      OpMemberDecorate %18 3 RelaxedPrecision 
                                                      OpMemberDecorate %18 3 Offset 18 
                                                      OpMemberDecorate %18 4 Offset 18 
                                                      OpMemberDecorate %18 5 RelaxedPrecision 
                                                      OpMemberDecorate %18 5 Offset 18 
                                                      OpMemberDecorate %18 6 RelaxedPrecision 
                                                      OpMemberDecorate %18 6 Offset 18 
                                                      OpMemberDecorate %18 7 RelaxedPrecision 
                                                      OpMemberDecorate %18 7 Offset 18 
                                                      OpMemberDecorate %18 8 RelaxedPrecision 
                                                      OpMemberDecorate %18 8 Offset 18 
                                                      OpMemberDecorate %18 9 RelaxedPrecision 
                                                      OpMemberDecorate %18 9 Offset 18 
                                                      OpMemberDecorate %18 10 RelaxedPrecision 
                                                      OpMemberDecorate %18 10 Offset 18 
                                                      OpDecorate %18 Block 
                                                      OpDecorate %20 DescriptorSet 20 
                                                      OpDecorate %20 Binding 20 
                                                      OpDecorate %53 RelaxedPrecision 
                                                      OpDecorate %62 RelaxedPrecision 
                                                      OpDecorate %63 RelaxedPrecision 
                                                      OpDecorate %64 RelaxedPrecision 
                                                      OpDecorate %65 RelaxedPrecision 
                                                      OpDecorate %66 RelaxedPrecision 
                                                      OpDecorate %67 RelaxedPrecision 
                                                      OpDecorate %68 RelaxedPrecision 
                                                      OpDecorate %69 RelaxedPrecision 
                                                      OpDecorate %70 RelaxedPrecision 
                                                      OpDecorate %71 RelaxedPrecision 
                                                      OpDecorate %72 RelaxedPrecision 
                                                      OpDecorate %73 RelaxedPrecision 
                                                      OpDecorate %74 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD1 Location 77 
                                                      OpDecorate %81 RelaxedPrecision 
                                                      OpDecorate %82 RelaxedPrecision 
                                                      OpDecorate %83 RelaxedPrecision 
                                                      OpDecorate %84 RelaxedPrecision 
                                                      OpDecorate %88 RelaxedPrecision 
                                                      OpDecorate %89 RelaxedPrecision 
                                                      OpDecorate %90 RelaxedPrecision 
                                                      OpDecorate %91 RelaxedPrecision 
                                                      OpDecorate %94 RelaxedPrecision 
                                                      OpDecorate %100 RelaxedPrecision 
                                                      OpDecorate %101 RelaxedPrecision 
                                                      OpDecorate %104 RelaxedPrecision 
                                                      OpDecorate %108 RelaxedPrecision 
                                                      OpDecorate %109 RelaxedPrecision 
                                                      OpDecorate %114 RelaxedPrecision 
                                                      OpDecorate %116 RelaxedPrecision 
                                                      OpDecorate %121 RelaxedPrecision 
                                                      OpDecorate %130 RelaxedPrecision 
                                                      OpDecorate %131 RelaxedPrecision 
                                                      OpDecorate %133 RelaxedPrecision 
                                                      OpDecorate %134 RelaxedPrecision 
                                                      OpDecorate %141 RelaxedPrecision 
                                                      OpDecorate %142 RelaxedPrecision 
                                                      OpDecorate %145 RelaxedPrecision 
                                                      OpDecorate %147 RelaxedPrecision 
                                                      OpDecorate %148 RelaxedPrecision 
                                                      OpDecorate %149 RelaxedPrecision 
                                                      OpDecorate %152 RelaxedPrecision 
                                                      OpDecorate %153 RelaxedPrecision 
                                                      OpDecorate %154 RelaxedPrecision 
                                                      OpDecorate %155 RelaxedPrecision 
                                                      OpDecorate %227 DescriptorSet 227 
                                                      OpDecorate %227 Binding 227 
                                                      OpDecorate %231 DescriptorSet 231 
                                                      OpDecorate %231 Binding 231 
                                                      OpDecorate %243 DescriptorSet 243 
                                                      OpDecorate %243 Binding 243 
                                                      OpDecorate %245 DescriptorSet 245 
                                                      OpDecorate %245 Binding 245 
                                                      OpDecorate %261 RelaxedPrecision 
                                                      OpDecorate %262 RelaxedPrecision 
                                                      OpDecorate %266 RelaxedPrecision 
                                                      OpDecorate %267 RelaxedPrecision 
                                                      OpDecorate %269 RelaxedPrecision 
                                                      OpDecorate %270 RelaxedPrecision 
                                                      OpDecorate %271 RelaxedPrecision 
                                                      OpDecorate %274 RelaxedPrecision 
                                                      OpDecorate %278 RelaxedPrecision 
                                                      OpDecorate %279 RelaxedPrecision 
                                                      OpDecorate %280 RelaxedPrecision 
                                                      OpDecorate %283 RelaxedPrecision 
                                                      OpDecorate %284 RelaxedPrecision 
                                                      OpDecorate %286 RelaxedPrecision 
                                                      OpDecorate %288 RelaxedPrecision 
                                                      OpDecorate %290 RelaxedPrecision 
                                                      OpDecorate %291 RelaxedPrecision 
                                                      OpDecorate %292 RelaxedPrecision 
                                                      OpDecorate %293 RelaxedPrecision 
                                                      OpDecorate %295 RelaxedPrecision 
                                                      OpDecorate %296 RelaxedPrecision 
                                                      OpDecorate %298 RelaxedPrecision 
                                                      OpDecorate %299 RelaxedPrecision 
                                                      OpDecorate %301 RelaxedPrecision 
                                                      OpDecorate %302 RelaxedPrecision 
                                                      OpDecorate %303 RelaxedPrecision 
                                                      OpDecorate %304 RelaxedPrecision 
                                                      OpDecorate %307 RelaxedPrecision 
                                                      OpDecorate %308 RelaxedPrecision 
                                                      OpDecorate %310 RelaxedPrecision 
                                                      OpDecorate %312 RelaxedPrecision 
                                                      OpDecorate %313 RelaxedPrecision 
                                                      OpDecorate %314 RelaxedPrecision 
                                                      OpDecorate %315 RelaxedPrecision 
                                                      OpDecorate %316 RelaxedPrecision 
                                                      OpDecorate %317 RelaxedPrecision 
                                                      OpDecorate %318 RelaxedPrecision 
                                                      OpDecorate %320 RelaxedPrecision 
                                                      OpDecorate %321 RelaxedPrecision 
                                                      OpDecorate %322 RelaxedPrecision 
                                                      OpDecorate %323 RelaxedPrecision 
                                                      OpDecorate %325 RelaxedPrecision 
                                                      OpDecorate %326 RelaxedPrecision 
                                                      OpDecorate %327 RelaxedPrecision 
                                                      OpDecorate %328 RelaxedPrecision 
                                                      OpDecorate %331 RelaxedPrecision 
                                                      OpDecorate %332 RelaxedPrecision 
                                                      OpDecorate %333 RelaxedPrecision 
                                                      OpDecorate %334 RelaxedPrecision 
                                                      OpDecorate %335 RelaxedPrecision 
                                                      OpDecorate %335 DescriptorSet 335 
                                                      OpDecorate %335 Binding 335 
                                                      OpDecorate %336 RelaxedPrecision 
                                                      OpDecorate %337 RelaxedPrecision 
                                                      OpDecorate %337 DescriptorSet 337 
                                                      OpDecorate %337 Binding 337 
                                                      OpDecorate %338 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD0 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD0 Location 341 
                                                      OpDecorate %342 RelaxedPrecision 
                                                      OpDecorate %343 RelaxedPrecision 
                                                      OpDecorate %344 RelaxedPrecision 
                                                      OpDecorate %345 RelaxedPrecision 
                                                      OpDecorate %346 RelaxedPrecision 
                                                      OpDecorate %349 RelaxedPrecision 
                                                      OpDecorate %350 RelaxedPrecision 
                                                      OpDecorate %351 RelaxedPrecision 
                                                      OpDecorate %352 RelaxedPrecision 
                                                      OpDecorate %353 RelaxedPrecision 
                                                      OpDecorate %354 RelaxedPrecision 
                                                      OpDecorate %355 RelaxedPrecision 
                                                      OpDecorate %358 RelaxedPrecision 
                                                      OpDecorate %359 RelaxedPrecision 
                                                      OpDecorate %360 RelaxedPrecision 
                                                      OpDecorate %361 RelaxedPrecision 
                                                      OpDecorate %365 RelaxedPrecision 
                                                      OpDecorate %365 Location 365 
                                               %2 = OpTypeVoid 
                                               %3 = OpTypeFunction %2 
                                               %6 = OpTypeFloat 32 
                                               %7 = OpTypeVector %6 3 
                                               %8 = OpTypePointer Private %7 
                                Private f32_3* %9 = OpVariable Private 
                                              %10 = OpTypePointer Input %7 
                        Input f32_3* vs_TEXCOORD2 = OpVariable Input 
                                              %14 = OpTypeVector %6 4 
                                              %15 = OpTypeInt 32 0 
                                          u32 %16 = OpConstant 4 
                                              %17 = OpTypeArray %14 %16 
                                              %18 = OpTypeStruct %7 %14 %14 %14 %17 %14 %6 %14 %6 %6 %6 
                                              %19 = OpTypePointer Uniform %18 
Uniform struct {f32_3; f32_4; f32_4; f32_4; f32_4[4]; f32_4; f32; f32_4; f32; f32; f32;}* %20 = OpVariable Uniform 
                                              %21 = OpTypeInt 32 1 
                                          i32 %22 = OpConstant 1 
                                              %23 = OpTypePointer Uniform %14 
                                              %28 = OpTypePointer Private %6 
                                 Private f32* %29 = OpVariable Private 
                               Private f32_3* %39 = OpVariable Private 
                                          i32 %42 = OpConstant 0 
                                              %43 = OpTypePointer Uniform %7 
                                              %52 = OpTypePointer Private %14 
                               Private f32_4* %53 = OpVariable Private 
                                 Private f32* %62 = OpVariable Private 
                        Input f32_3* vs_TEXCOORD1 = OpVariable Input 
                               Private f32_3* %83 = OpVariable Private 
                                          u32 %92 = OpConstant 0 
                                          u32 %97 = OpConstant 1 
                                              %99 = OpTypeVector %6 2 
                                         f32 %102 = OpConstant 3.674022E-40 
                                       f32_2 %103 = OpConstantComposite %102 %102 
                                         i32 %111 = OpConstant 6 
                                             %112 = OpTypePointer Uniform %6 
                                         f32 %115 = OpConstant 3.674022E-40 
                                         i32 %128 = OpConstant 10 
                                         f32 %132 = OpConstant 3.674022E-40 
                                         f32 %138 = OpConstant 3.674022E-40 
                                Private f32* %145 = OpVariable Private 
                              Private f32_3* %150 = OpVariable Private 
                                         f32 %157 = OpConstant 3.674022E-40 
                                         f32 %174 = OpConstant 3.674022E-40 
                                         f32 %176 = OpConstant 3.674022E-40 
                                         i32 %193 = OpConstant 4 
                                         i32 %206 = OpConstant 2 
                                         i32 %216 = OpConstant 3 
                                             %225 = OpTypeImage %6 Cube 0 0 0 1 Unknown 
                                             %226 = OpTypePointer UniformConstant %225 
      UniformConstant read_only TextureCube* %227 = OpVariable UniformConstant 
                                             %229 = OpTypeSampler 
                                             %230 = OpTypePointer UniformConstant %229 
                    UniformConstant sampler* %231 = OpVariable UniformConstant 
                                             %233 = OpTypeSampledImage %225 
                                         u32 %237 = OpConstant 3 
                                Private f32* %240 = OpVariable Private 
                                             %241 = OpTypeImage %6 Dim2D 0 0 0 1 Unknown 
                                             %242 = OpTypePointer UniformConstant %241 
        UniformConstant read_only Texture2D* %243 = OpVariable UniformConstant 
                    UniformConstant sampler* %245 = OpVariable UniformConstant 
                                             %247 = OpTypeSampledImage %241 
                                         i32 %276 = OpConstant 9 
                                         i32 %281 = OpConstant 8 
                                Private f32* %286 = OpVariable Private 
                                Private f32* %293 = OpVariable Private 
                                         i32 %329 = OpConstant 7 
                              Private f32_3* %334 = OpVariable Private 
        UniformConstant read_only Texture2D* %335 = OpVariable UniformConstant 
                    UniformConstant sampler* %337 = OpVariable UniformConstant 
                                             %340 = OpTypePointer Input %99 
                        Input f32_2* vs_TEXCOORD0 = OpVariable Input 
                              Private f32_3* %345 = OpVariable Private 
                                         i32 %347 = OpConstant 5 
                                             %364 = OpTypePointer Output %14 
                               Output f32_4* %365 = OpVariable Output 
                                             %369 = OpTypePointer Output %6 
                                          void %4 = OpFunction None %3 
                                               %5 = OpLabel 
                                        f32_3 %12 = OpLoad vs_TEXCOORD2 
                                        f32_3 %13 = OpFNegate %12 
                               Uniform f32_4* %24 = OpAccessChain %20 %22 
                                        f32_4 %25 = OpLoad %24 
                                        f32_3 %26 = OpVectorShuffle %25 %25 0 1 2 
                                        f32_3 %27 = OpFAdd %13 %26 
                                                      OpStore %9 %27 
                                        f32_3 %30 = OpLoad %9 
                                        f32_3 %31 = OpLoad %9 
                                          f32 %32 = OpDot %30 %31 
                                                      OpStore %29 %32 
                                          f32 %33 = OpLoad %29 
                                          f32 %34 = OpExtInst %1 32 %33 
                                                      OpStore %29 %34 
                                          f32 %35 = OpLoad %29 
                                        f32_3 %36 = OpCompositeConstruct %35 %35 %35 
                                        f32_3 %37 = OpLoad %9 
                                        f32_3 %38 = OpFMul %36 %37 
                                                      OpStore %9 %38 
                                        f32_3 %40 = OpLoad vs_TEXCOORD2 
                                        f32_3 %41 = OpFNegate %40 
                               Uniform f32_3* %44 = OpAccessChain %20 %42 
                                        f32_3 %45 = OpLoad %44 
                                        f32_3 %46 = OpFAdd %41 %45 
                                                      OpStore %39 %46 
                                        f32_3 %47 = OpLoad %39 
                                        f32_3 %48 = OpLoad %39 
                                          f32 %49 = OpDot %47 %48 
                                                      OpStore %29 %49 
                                          f32 %50 = OpLoad %29 
                                          f32 %51 = OpExtInst %1 32 %50 
                                                      OpStore %29 %51 
                                        f32_3 %54 = OpLoad %39 
                                          f32 %55 = OpLoad %29 
                                        f32_3 %56 = OpCompositeConstruct %55 %55 %55 
                                        f32_3 %57 = OpFMul %54 %56 
                                        f32_3 %58 = OpLoad %9 
                                        f32_3 %59 = OpFAdd %57 %58 
                                        f32_4 %60 = OpLoad %53 
                                        f32_4 %61 = OpVectorShuffle %60 %59 4 5 6 3 
                                                      OpStore %53 %61 
                                        f32_4 %63 = OpLoad %53 
                                        f32_3 %64 = OpVectorShuffle %63 %63 0 1 2 
                                        f32_4 %65 = OpLoad %53 
                                        f32_3 %66 = OpVectorShuffle %65 %65 0 1 2 
                                          f32 %67 = OpDot %64 %66 
                                                      OpStore %62 %67 
                                          f32 %68 = OpLoad %62 
                                          f32 %69 = OpExtInst %1 32 %68 
                                                      OpStore %62 %69 
                                          f32 %70 = OpLoad %62 
                                        f32_3 %71 = OpCompositeConstruct %70 %70 %70 
                                        f32_4 %72 = OpLoad %53 
                                        f32_3 %73 = OpVectorShuffle %72 %72 0 1 2 
                                        f32_3 %74 = OpFMul %71 %73 
                                        f32_4 %75 = OpLoad %53 
                                        f32_4 %76 = OpVectorShuffle %75 %74 4 5 6 3 
                                                      OpStore %53 %76 
                                        f32_3 %78 = OpLoad vs_TEXCOORD1 
                                        f32_3 %79 = OpLoad vs_TEXCOORD1 
                                          f32 %80 = OpDot %78 %79 
                                                      OpStore %62 %80 
                                          f32 %81 = OpLoad %62 
                                          f32 %82 = OpExtInst %1 32 %81 
                                                      OpStore %62 %82 
                                          f32 %84 = OpLoad %62 
                                        f32_3 %85 = OpCompositeConstruct %84 %84 %84 
                                        f32_3 %86 = OpLoad vs_TEXCOORD1 
                                        f32_3 %87 = OpFMul %85 %86 
                                                      OpStore %83 %87 
                                        f32_3 %88 = OpLoad %83 
                                        f32_4 %89 = OpLoad %53 
                                        f32_3 %90 = OpVectorShuffle %89 %89 0 1 2 
                                          f32 %91 = OpDot %88 %90 
                                 Private f32* %93 = OpAccessChain %53 %92 
                                                      OpStore %93 %91 
                                        f32_3 %94 = OpLoad %83 
                                        f32_3 %95 = OpLoad %9 
                                          f32 %96 = OpDot %94 %95 
                                 Private f32* %98 = OpAccessChain %53 %97 
                                                      OpStore %98 %96 
                                       f32_4 %100 = OpLoad %53 
                                       f32_2 %101 = OpVectorShuffle %100 %100 0 1 
                                       f32_2 %104 = OpExtInst %1 40 %101 %103 
                                       f32_4 %105 = OpLoad %53 
                                       f32_4 %106 = OpVectorShuffle %105 %104 4 5 2 3 
                                                      OpStore %53 %106 
                                Private f32* %107 = OpAccessChain %53 %92 
                                         f32 %108 = OpLoad %107 
                                         f32 %109 = OpExtInst %1 30 %108 
                                Private f32* %110 = OpAccessChain %9 %92 
                                                      OpStore %110 %109 
                                Uniform f32* %113 = OpAccessChain %20 %111 
                                         f32 %114 = OpLoad %113 
                                         f32 %116 = OpFMul %114 %115 
                                Private f32* %117 = OpAccessChain %53 %92 
                                                      OpStore %117 %116 
                                Private f32* %118 = OpAccessChain %9 %92 
                                         f32 %119 = OpLoad %118 
                                Private f32* %120 = OpAccessChain %53 %92 
                                         f32 %121 = OpLoad %120 
                                         f32 %122 = OpFMul %119 %121 
                                Private f32* %123 = OpAccessChain %9 %92 
                                                      OpStore %123 %122 
                                Private f32* %124 = OpAccessChain %9 %92 
                                         f32 %125 = OpLoad %124 
                                         f32 %126 = OpExtInst %1 29 %125 
                                Private f32* %127 = OpAccessChain %9 %92 
                                                      OpStore %127 %126 
                                Uniform f32* %129 = OpAccessChain %20 %128 
                                         f32 %130 = OpLoad %129 
                                         f32 %131 = OpFNegate %130 
                                         f32 %133 = OpFMul %131 %132 
                                         f32 %134 = OpFAdd %133 %132 
                                Private f32* %135 = OpAccessChain %53 %92 
                                                      OpStore %135 %134 
                                Private f32* %136 = OpAccessChain %9 %92 
                                         f32 %137 = OpLoad %136 
                                         f32 %139 = OpFMul %137 %138 
                                Private f32* %140 = OpAccessChain %53 %92 
                                         f32 %141 = OpLoad %140 
                                         f32 %142 = OpFNegate %141 
                                         f32 %143 = OpFAdd %139 %142 
                                Private f32* %144 = OpAccessChain %9 %92 
                                                      OpStore %144 %143 
                                Uniform f32* %146 = OpAccessChain %20 %128 
                                         f32 %147 = OpLoad %146 
                                         f32 %148 = OpFMul %147 %132 
                                         f32 %149 = OpFAdd %148 %132 
                                                      OpStore %145 %149 
                                Private f32* %151 = OpAccessChain %53 %92 
                                         f32 %152 = OpLoad %151 
                                         f32 %153 = OpFNegate %152 
                                         f32 %154 = OpLoad %145 
                                         f32 %155 = OpFAdd %153 %154 
                                Private f32* %156 = OpAccessChain %150 %92 
                                                      OpStore %156 %155 
                                Private f32* %158 = OpAccessChain %150 %92 
                                         f32 %159 = OpLoad %158 
                                         f32 %160 = OpFDiv %157 %159 
                                Private f32* %161 = OpAccessChain %150 %92 
                                                      OpStore %161 %160 
                                Private f32* %162 = OpAccessChain %150 %92 
                                         f32 %163 = OpLoad %162 
                                Private f32* %164 = OpAccessChain %9 %92 
                                         f32 %165 = OpLoad %164 
                                         f32 %166 = OpFMul %163 %165 
                                Private f32* %167 = OpAccessChain %9 %92 
                                                      OpStore %167 %166 
                                Private f32* %168 = OpAccessChain %9 %92 
                                         f32 %169 = OpLoad %168 
                                         f32 %170 = OpExtInst %1 43 %169 %102 %157 
                                Private f32* %171 = OpAccessChain %9 %92 
                                                      OpStore %171 %170 
                                Private f32* %172 = OpAccessChain %9 %92 
                                         f32 %173 = OpLoad %172 
                                         f32 %175 = OpFMul %173 %174 
                                         f32 %177 = OpFAdd %175 %176 
                                Private f32* %178 = OpAccessChain %150 %92 
                                                      OpStore %178 %177 
                                Private f32* %179 = OpAccessChain %9 %92 
                                         f32 %180 = OpLoad %179 
                                Private f32* %181 = OpAccessChain %9 %92 
                                         f32 %182 = OpLoad %181 
                                         f32 %183 = OpFMul %180 %182 
                                Private f32* %184 = OpAccessChain %9 %92 
                                                      OpStore %184 %183 
                                Private f32* %185 = OpAccessChain %9 %92 
                                         f32 %186 = OpLoad %185 
                                Private f32* %187 = OpAccessChain %150 %92 
                                         f32 %188 = OpLoad %187 
                                         f32 %189 = OpFMul %186 %188 
                                Private f32* %190 = OpAccessChain %9 %92 
                                                      OpStore %190 %189 
                                       f32_3 %191 = OpLoad vs_TEXCOORD2 
                                       f32_3 %192 = OpVectorShuffle %191 %191 1 1 1 
                              Uniform f32_4* %194 = OpAccessChain %20 %193 %22 
                                       f32_4 %195 = OpLoad %194 
                                       f32_3 %196 = OpVectorShuffle %195 %195 0 1 2 
                                       f32_3 %197 = OpFMul %192 %196 
                                                      OpStore %150 %197 
                              Uniform f32_4* %198 = OpAccessChain %20 %193 %42 
                                       f32_4 %199 = OpLoad %198 
                                       f32_3 %200 = OpVectorShuffle %199 %199 0 1 2 
                                       f32_3 %201 = OpLoad vs_TEXCOORD2 
                                       f32_3 %202 = OpVectorShuffle %201 %201 0 0 0 
                                       f32_3 %203 = OpFMul %200 %202 
                                       f32_3 %204 = OpLoad %150 
                                       f32_3 %205 = OpFAdd %203 %204 
                                                      OpStore %150 %205 
                              Uniform f32_4* %207 = OpAccessChain %20 %193 %206 
                                       f32_4 %208 = OpLoad %207 
                                       f32_3 %209 = OpVectorShuffle %208 %208 0 1 2 
                                       f32_3 %210 = OpLoad vs_TEXCOORD2 
                                       f32_3 %211 = OpVectorShuffle %210 %210 2 2 2 
                                       f32_3 %212 = OpFMul %209 %211 
                                       f32_3 %213 = OpLoad %150 
                                       f32_3 %214 = OpFAdd %212 %213 
                                                      OpStore %150 %214 
                                       f32_3 %215 = OpLoad %150 
                              Uniform f32_4* %217 = OpAccessChain %20 %193 %216 
                                       f32_4 %218 = OpLoad %217 
                                       f32_3 %219 = OpVectorShuffle %218 %218 0 1 2 
                                       f32_3 %220 = OpFAdd %215 %219 
                                                      OpStore %150 %220 
                                       f32_3 %221 = OpLoad %150 
                                       f32_3 %222 = OpLoad %150 
                                         f32 %223 = OpDot %221 %222 
                                Private f32* %224 = OpAccessChain %39 %92 
                                                      OpStore %224 %223 
                       read_only TextureCube %228 = OpLoad %227 
                                     sampler %232 = OpLoad %231 
                read_only TextureCubeSampled %234 = OpSampledImage %228 %232 
                                       f32_3 %235 = OpLoad %150 
                                       f32_4 %236 = OpImageSampleImplicitLod %234 %235 
                                         f32 %238 = OpCompositeExtract %236 3 
                                Private f32* %239 = OpAccessChain %150 %92 
                                                      OpStore %239 %238 
                         read_only Texture2D %244 = OpLoad %243 
                                     sampler %246 = OpLoad %245 
                  read_only Texture2DSampled %248 = OpSampledImage %244 %246 
                                       f32_3 %249 = OpLoad %39 
                                       f32_2 %250 = OpVectorShuffle %249 %249 0 0 
                                       f32_4 %251 = OpImageSampleImplicitLod %248 %250 
                                         f32 %252 = OpCompositeExtract %251 0 
                                                      OpStore %240 %252 
                                Private f32* %253 = OpAccessChain %150 %92 
                                         f32 %254 = OpLoad %253 
                                         f32 %255 = OpLoad %240 
                                         f32 %256 = OpFMul %254 %255 
                                Private f32* %257 = OpAccessChain %150 %92 
                                                      OpStore %257 %256 
                                       f32_3 %258 = OpLoad %150 
                                       f32_3 %259 = OpVectorShuffle %258 %258 0 0 0 
                              Uniform f32_4* %260 = OpAccessChain %20 %206 
                                       f32_4 %261 = OpLoad %260 
                                       f32_3 %262 = OpVectorShuffle %261 %261 0 1 2 
                                       f32_3 %263 = OpFMul %259 %262 
                                       f32_4 %264 = OpLoad %53 
                                       f32_4 %265 = OpVectorShuffle %264 %263 4 1 5 6 
                                                      OpStore %53 %265 
                                       f32_4 %266 = OpLoad %53 
                                       f32_3 %267 = OpVectorShuffle %266 %266 0 2 3 
                              Uniform f32_4* %268 = OpAccessChain %20 %216 
                                       f32_4 %269 = OpLoad %268 
                                       f32_3 %270 = OpVectorShuffle %269 %269 0 1 2 
                                       f32_3 %271 = OpFMul %267 %270 
                                                      OpStore %83 %271 
                                       f32_3 %272 = OpLoad %9 
                                       f32_3 %273 = OpVectorShuffle %272 %272 0 0 0 
                                       f32_3 %274 = OpLoad %83 
                                       f32_3 %275 = OpFMul %273 %274 
                                                      OpStore %9 %275 
                                Uniform f32* %277 = OpAccessChain %20 %276 
                                         f32 %278 = OpLoad %277 
                                         f32 %279 = OpFNegate %278 
                                         f32 %280 = OpFMul %279 %132 
                                Uniform f32* %282 = OpAccessChain %20 %281 
                                         f32 %283 = OpLoad %282 
                                         f32 %284 = OpFAdd %280 %283 
                                Private f32* %285 = OpAccessChain %83 %92 
                                                      OpStore %285 %284 
                                Private f32* %287 = OpAccessChain %53 %97 
                                         f32 %288 = OpLoad %287 
                                Private f32* %289 = OpAccessChain %83 %92 
                                         f32 %290 = OpLoad %289 
                                         f32 %291 = OpFNegate %290 
                                         f32 %292 = OpFAdd %288 %291 
                                                      OpStore %286 %292 
                                Uniform f32* %294 = OpAccessChain %20 %276 
                                         f32 %295 = OpLoad %294 
                                         f32 %296 = OpFMul %295 %132 
                                Uniform f32* %297 = OpAccessChain %20 %281 
                                         f32 %298 = OpLoad %297 
                                         f32 %299 = OpFAdd %296 %298 
                                                      OpStore %293 %299 
                                Private f32* %300 = OpAccessChain %83 %92 
                                         f32 %301 = OpLoad %300 
                                         f32 %302 = OpFNegate %301 
                                         f32 %303 = OpLoad %293 
                                         f32 %304 = OpFAdd %302 %303 
                                Private f32* %305 = OpAccessChain %83 %92 
                                                      OpStore %305 %304 
                                Private f32* %306 = OpAccessChain %83 %92 
                                         f32 %307 = OpLoad %306 
                                         f32 %308 = OpFDiv %157 %307 
                                Private f32* %309 = OpAccessChain %83 %92 
                                                      OpStore %309 %308 
                                         f32 %310 = OpLoad %286 
                                Private f32* %311 = OpAccessChain %83 %92 
                                         f32 %312 = OpLoad %311 
                                         f32 %313 = OpFMul %310 %312 
                                                      OpStore %286 %313 
                                         f32 %314 = OpLoad %286 
                                         f32 %315 = OpExtInst %1 43 %314 %102 %157 
                                                      OpStore %286 %315 
                                         f32 %316 = OpLoad %286 
                                         f32 %317 = OpFMul %316 %174 
                                         f32 %318 = OpFAdd %317 %176 
                                Private f32* %319 = OpAccessChain %83 %92 
                                                      OpStore %319 %318 
                                         f32 %320 = OpLoad %286 
                                         f32 %321 = OpLoad %286 
                                         f32 %322 = OpFMul %320 %321 
                                                      OpStore %286 %322 
                                         f32 %323 = OpLoad %286 
                                Private f32* %324 = OpAccessChain %83 %92 
                                         f32 %325 = OpLoad %324 
                                         f32 %326 = OpFMul %323 %325 
                                                      OpStore %286 %326 
                                         f32 %327 = OpLoad %286 
                                       f32_3 %328 = OpCompositeConstruct %327 %327 %327 
                              Uniform f32_4* %330 = OpAccessChain %20 %329 
                                       f32_4 %331 = OpLoad %330 
                                       f32_3 %332 = OpVectorShuffle %331 %331 0 1 2 
                                       f32_3 %333 = OpFMul %328 %332 
                                                      OpStore %83 %333 
                         read_only Texture2D %336 = OpLoad %335 
                                     sampler %338 = OpLoad %337 
                  read_only Texture2DSampled %339 = OpSampledImage %336 %338 
                                       f32_2 %342 = OpLoad vs_TEXCOORD0 
                                       f32_4 %343 = OpImageSampleImplicitLod %339 %342 
                                       f32_3 %344 = OpVectorShuffle %343 %343 0 1 2 
                                                      OpStore %334 %344 
                                       f32_3 %346 = OpLoad %334 
                              Uniform f32_4* %348 = OpAccessChain %20 %347 
                                       f32_4 %349 = OpLoad %348 
                                       f32_3 %350 = OpVectorShuffle %349 %349 0 1 2 
                                       f32_3 %351 = OpFMul %346 %350 
                                                      OpStore %345 %351 
                                       f32_4 %352 = OpLoad %53 
                                       f32_3 %353 = OpVectorShuffle %352 %352 0 2 3 
                                       f32_3 %354 = OpLoad %345 
                                       f32_3 %355 = OpFMul %353 %354 
                                       f32_4 %356 = OpLoad %53 
                                       f32_4 %357 = OpVectorShuffle %356 %355 4 5 6 3 
                                                      OpStore %53 %357 
                                       f32_4 %358 = OpLoad %53 
                                       f32_3 %359 = OpVectorShuffle %358 %358 0 1 2 
                                       f32_3 %360 = OpLoad %83 
                                       f32_3 %361 = OpFMul %359 %360 
                                       f32_3 %362 = OpLoad %9 
                                       f32_3 %363 = OpFAdd %361 %362 
                                                      OpStore %9 %363 
                                       f32_3 %366 = OpLoad %9 
                                       f32_4 %367 = OpLoad %365 
                                       f32_4 %368 = OpVectorShuffle %367 %366 4 5 6 3 
                                                      OpStore %365 %368 
                                 Output f32* %370 = OpAccessChain %365 %237 
                                                      OpStore %370 %157 
                                                      OpReturn
                                                      OpFunctionEnd
"
}
SubProgram "vulkan hw_tier02 " {
Keywords { "POINT_COOKIE" }
"; SPIR-V
; Version: 1.0
; Generator: Khronos Glslang Reference Front End; 6
; Bound: 209
; Schema: 0
                                                      OpCapability Shader 
                                               %1 = OpExtInstImport "GLSL.std.450" 
                                                      OpMemoryModel Logical GLSL450 
                                                      OpEntryPoint Vertex %4 "main" %11 %75 %85 %101 %106 %137 %143 %190 %200 
                                                      OpName vs_TEXCOORD0 "vs_TEXCOORD0" 
                                                      OpName vs_TEXCOORD1 "vs_TEXCOORD1" 
                                                      OpName vs_TEXCOORD2 "vs_TEXCOORD2" 
                                                      OpName vs_TEXCOORD3 "vs_TEXCOORD3" 
                                                      OpName vs_TEXCOORD4 "vs_TEXCOORD4" 
                                                      OpDecorate %11 Location 11 
                                                      OpDecorate %16 ArrayStride 16 
                                                      OpDecorate %17 ArrayStride 17 
                                                      OpDecorate %18 ArrayStride 18 
                                                      OpDecorate %19 ArrayStride 19 
                                                      OpMemberDecorate %20 0 Offset 20 
                                                      OpMemberDecorate %20 1 Offset 20 
                                                      OpMemberDecorate %20 2 Offset 20 
                                                      OpMemberDecorate %20 3 Offset 20 
                                                      OpMemberDecorate %20 4 Offset 20 
                                                      OpDecorate %20 Block 
                                                      OpDecorate %22 DescriptorSet 22 
                                                      OpDecorate %22 Binding 22 
                                                      OpMemberDecorate %73 0 BuiltIn 73 
                                                      OpMemberDecorate %73 1 BuiltIn 73 
                                                      OpMemberDecorate %73 2 BuiltIn 73 
                                                      OpDecorate %73 Block 
                                                      OpDecorate %85 Location 85 
                                                      OpDecorate vs_TEXCOORD0 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD0 Location 101 
                                                      OpDecorate %106 Location 106 
                                                      OpDecorate vs_TEXCOORD1 Location 137 
                                                      OpDecorate vs_TEXCOORD2 Location 143 
                                                      OpDecorate vs_TEXCOORD3 Location 190 
                                                      OpDecorate vs_TEXCOORD4 Location 200 
                                               %2 = OpTypeVoid 
                                               %3 = OpTypeFunction %2 
                                               %6 = OpTypeFloat 32 
                                               %7 = OpTypeVector %6 4 
                                               %8 = OpTypePointer Private %7 
                                Private f32_4* %9 = OpVariable Private 
                                              %10 = OpTypePointer Input %7 
                                 Input f32_4* %11 = OpVariable Input 
                                              %14 = OpTypeInt 32 0 
                                          u32 %15 = OpConstant 4 
                                              %16 = OpTypeArray %7 %15 
                                              %17 = OpTypeArray %7 %15 
                                              %18 = OpTypeArray %7 %15 
                                              %19 = OpTypeArray %7 %15 
                                              %20 = OpTypeStruct %16 %17 %18 %19 %7 
                                              %21 = OpTypePointer Uniform %20 
Uniform struct {f32_4[4]; f32_4[4]; f32_4[4]; f32_4[4]; f32_4;}* %22 = OpVariable Uniform 
                                              %23 = OpTypeInt 32 1 
                                          i32 %24 = OpConstant 0 
                                          i32 %25 = OpConstant 1 
                                              %26 = OpTypePointer Uniform %7 
                                          i32 %37 = OpConstant 2 
                               Private f32_4* %45 = OpVariable Private 
                                          i32 %47 = OpConstant 3 
                               Private f32_4* %51 = OpVariable Private 
                                          u32 %71 = OpConstant 1 
                                              %72 = OpTypeArray %6 %71 
                                              %73 = OpTypeStruct %7 %6 %72 
                                              %74 = OpTypePointer Output %73 
         Output struct {f32_4; f32; f32[1];}* %75 = OpVariable Output 
                                              %83 = OpTypePointer Output %7 
                                 Input f32_4* %85 = OpVariable Input 
                                              %86 = OpTypeVector %6 2 
                                          i32 %89 = OpConstant 4 
                                             %100 = OpTypePointer Output %86 
                       Output f32_2* vs_TEXCOORD0 = OpVariable Output 
                                             %104 = OpTypeVector %6 3 
                                             %105 = OpTypePointer Input %104 
                                Input f32_3* %106 = OpVariable Input 
                                         u32 %112 = OpConstant 0 
                                             %113 = OpTypePointer Private %6 
                                         u32 %126 = OpConstant 2 
                                Private f32* %128 = OpVariable Private 
                                             %136 = OpTypePointer Output %104 
                       Output f32_3* vs_TEXCOORD1 = OpVariable Output 
                       Output f32_3* vs_TEXCOORD2 = OpVariable Output 
                       Output f32_3* vs_TEXCOORD3 = OpVariable Output 
                       Output f32_4* vs_TEXCOORD4 = OpVariable Output 
                                         f32 %201 = OpConstant 3.674022E-40 
                                       f32_4 %202 = OpConstantComposite %201 %201 %201 %201 
                                             %203 = OpTypePointer Output %6 
                                          void %4 = OpFunction None %3 
                                               %5 = OpLabel 
                                        f32_4 %12 = OpLoad %11 
                                        f32_4 %13 = OpVectorShuffle %12 %12 1 1 1 1 
                               Uniform f32_4* %27 = OpAccessChain %22 %24 %25 
                                        f32_4 %28 = OpLoad %27 
                                        f32_4 %29 = OpFMul %13 %28 
                                                      OpStore %9 %29 
                               Uniform f32_4* %30 = OpAccessChain %22 %24 %24 
                                        f32_4 %31 = OpLoad %30 
                                        f32_4 %32 = OpLoad %11 
                                        f32_4 %33 = OpVectorShuffle %32 %32 0 0 0 0 
                                        f32_4 %34 = OpFMul %31 %33 
                                        f32_4 %35 = OpLoad %9 
                                        f32_4 %36 = OpFAdd %34 %35 
                                                      OpStore %9 %36 
                               Uniform f32_4* %38 = OpAccessChain %22 %24 %37 
                                        f32_4 %39 = OpLoad %38 
                                        f32_4 %40 = OpLoad %11 
                                        f32_4 %41 = OpVectorShuffle %40 %40 2 2 2 2 
                                        f32_4 %42 = OpFMul %39 %41 
                                        f32_4 %43 = OpLoad %9 
                                        f32_4 %44 = OpFAdd %42 %43 
                                                      OpStore %9 %44 
                                        f32_4 %46 = OpLoad %9 
                               Uniform f32_4* %48 = OpAccessChain %22 %24 %47 
                                        f32_4 %49 = OpLoad %48 
                                        f32_4 %50 = OpFAdd %46 %49 
                                                      OpStore %45 %50 
                                        f32_4 %52 = OpLoad %45 
                                        f32_4 %53 = OpVectorShuffle %52 %52 1 1 1 1 
                               Uniform f32_4* %54 = OpAccessChain %22 %37 %25 
                                        f32_4 %55 = OpLoad %54 
                                        f32_4 %56 = OpFMul %53 %55 
                                                      OpStore %51 %56 
                               Uniform f32_4* %57 = OpAccessChain %22 %37 %24 
                                        f32_4 %58 = OpLoad %57 
                                        f32_4 %59 = OpLoad %45 
                                        f32_4 %60 = OpVectorShuffle %59 %59 0 0 0 0 
                                        f32_4 %61 = OpFMul %58 %60 
                                        f32_4 %62 = OpLoad %51 
                                        f32_4 %63 = OpFAdd %61 %62 
                                                      OpStore %51 %63 
                               Uniform f32_4* %64 = OpAccessChain %22 %37 %37 
                                        f32_4 %65 = OpLoad %64 
                                        f32_4 %66 = OpLoad %45 
                                        f32_4 %67 = OpVectorShuffle %66 %66 2 2 2 2 
                                        f32_4 %68 = OpFMul %65 %67 
                                        f32_4 %69 = OpLoad %51 
                                        f32_4 %70 = OpFAdd %68 %69 
                                                      OpStore %51 %70 
                               Uniform f32_4* %76 = OpAccessChain %22 %37 %47 
                                        f32_4 %77 = OpLoad %76 
                                        f32_4 %78 = OpLoad %45 
                                        f32_4 %79 = OpVectorShuffle %78 %78 3 3 3 3 
                                        f32_4 %80 = OpFMul %77 %79 
                                        f32_4 %81 = OpLoad %51 
                                        f32_4 %82 = OpFAdd %80 %81 
                                Output f32_4* %84 = OpAccessChain %75 %24 
                                                      OpStore %84 %82 
                                        f32_4 %87 = OpLoad %85 
                                        f32_2 %88 = OpVectorShuffle %87 %87 0 1 
                               Uniform f32_4* %90 = OpAccessChain %22 %89 
                                        f32_4 %91 = OpLoad %90 
                                        f32_2 %92 = OpVectorShuffle %91 %91 0 1 
                                        f32_2 %93 = OpFMul %88 %92 
                               Uniform f32_4* %94 = OpAccessChain %22 %89 
                                        f32_4 %95 = OpLoad %94 
                                        f32_2 %96 = OpVectorShuffle %95 %95 2 3 
                                        f32_2 %97 = OpFAdd %93 %96 
                                        f32_4 %98 = OpLoad %45 
                                        f32_4 %99 = OpVectorShuffle %98 %97 4 5 2 3 
                                                      OpStore %45 %99 
                                       f32_4 %102 = OpLoad %45 
                                       f32_2 %103 = OpVectorShuffle %102 %102 0 1 
                                                      OpStore vs_TEXCOORD0 %103 
                                       f32_3 %107 = OpLoad %106 
                              Uniform f32_4* %108 = OpAccessChain %22 %25 %24 
                                       f32_4 %109 = OpLoad %108 
                                       f32_3 %110 = OpVectorShuffle %109 %109 0 1 2 
                                         f32 %111 = OpDot %107 %110 
                                Private f32* %114 = OpAccessChain %45 %112 
                                                      OpStore %114 %111 
                                       f32_3 %115 = OpLoad %106 
                              Uniform f32_4* %116 = OpAccessChain %22 %25 %25 
                                       f32_4 %117 = OpLoad %116 
                                       f32_3 %118 = OpVectorShuffle %117 %117 0 1 2 
                                         f32 %119 = OpDot %115 %118 
                                Private f32* %120 = OpAccessChain %45 %71 
                                                      OpStore %120 %119 
                                       f32_3 %121 = OpLoad %106 
                              Uniform f32_4* %122 = OpAccessChain %22 %25 %37 
                                       f32_4 %123 = OpLoad %122 
                                       f32_3 %124 = OpVectorShuffle %123 %123 0 1 2 
                                         f32 %125 = OpDot %121 %124 
                                Private f32* %127 = OpAccessChain %45 %126 
                                                      OpStore %127 %125 
                                       f32_4 %129 = OpLoad %45 
                                       f32_3 %130 = OpVectorShuffle %129 %129 0 1 2 
                                       f32_4 %131 = OpLoad %45 
                                       f32_3 %132 = OpVectorShuffle %131 %131 0 1 2 
                                         f32 %133 = OpDot %130 %132 
                                                      OpStore %128 %133 
                                         f32 %134 = OpLoad %128 
                                         f32 %135 = OpExtInst %1 32 %134 
                                                      OpStore %128 %135 
                                         f32 %138 = OpLoad %128 
                                       f32_3 %139 = OpCompositeConstruct %138 %138 %138 
                                       f32_4 %140 = OpLoad %45 
                                       f32_3 %141 = OpVectorShuffle %140 %140 0 1 2 
                                       f32_3 %142 = OpFMul %139 %141 
                                                      OpStore vs_TEXCOORD1 %142 
                              Uniform f32_4* %144 = OpAccessChain %22 %24 %47 
                                       f32_4 %145 = OpLoad %144 
                                       f32_3 %146 = OpVectorShuffle %145 %145 0 1 2 
                                       f32_4 %147 = OpLoad %11 
                                       f32_3 %148 = OpVectorShuffle %147 %147 3 3 3 
                                       f32_3 %149 = OpFMul %146 %148 
                                       f32_4 %150 = OpLoad %9 
                                       f32_3 %151 = OpVectorShuffle %150 %150 0 1 2 
                                       f32_3 %152 = OpFAdd %149 %151 
                                                      OpStore vs_TEXCOORD2 %152 
                              Uniform f32_4* %153 = OpAccessChain %22 %24 %47 
                                       f32_4 %154 = OpLoad %153 
                                       f32_4 %155 = OpLoad %11 
                                       f32_4 %156 = OpVectorShuffle %155 %155 3 3 3 3 
                                       f32_4 %157 = OpFMul %154 %156 
                                       f32_4 %158 = OpLoad %9 
                                       f32_4 %159 = OpFAdd %157 %158 
                                                      OpStore %9 %159 
                                       f32_4 %160 = OpLoad %9 
                                       f32_3 %161 = OpVectorShuffle %160 %160 1 1 1 
                              Uniform f32_4* %162 = OpAccessChain %22 %47 %25 
                                       f32_4 %163 = OpLoad %162 
                                       f32_3 %164 = OpVectorShuffle %163 %163 0 1 2 
                                       f32_3 %165 = OpFMul %161 %164 
                                       f32_4 %166 = OpLoad %45 
                                       f32_4 %167 = OpVectorShuffle %166 %165 4 5 6 3 
                                                      OpStore %45 %167 
                              Uniform f32_4* %168 = OpAccessChain %22 %47 %24 
                                       f32_4 %169 = OpLoad %168 
                                       f32_3 %170 = OpVectorShuffle %169 %169 0 1 2 
                                       f32_4 %171 = OpLoad %9 
                                       f32_3 %172 = OpVectorShuffle %171 %171 0 0 0 
                                       f32_3 %173 = OpFMul %170 %172 
                                       f32_4 %174 = OpLoad %45 
                                       f32_3 %175 = OpVectorShuffle %174 %174 0 1 2 
                                       f32_3 %176 = OpFAdd %173 %175 
                                       f32_4 %177 = OpLoad %45 
                                       f32_4 %178 = OpVectorShuffle %177 %176 4 5 6 3 
                                                      OpStore %45 %178 
                              Uniform f32_4* %179 = OpAccessChain %22 %47 %37 
                                       f32_4 %180 = OpLoad %179 
                                       f32_3 %181 = OpVectorShuffle %180 %180 0 1 2 
                                       f32_4 %182 = OpLoad %9 
                                       f32_3 %183 = OpVectorShuffle %182 %182 2 2 2 
                                       f32_3 %184 = OpFMul %181 %183 
                                       f32_4 %185 = OpLoad %45 
                                       f32_3 %186 = OpVectorShuffle %185 %185 0 1 2 
                                       f32_3 %187 = OpFAdd %184 %186 
                                       f32_4 %188 = OpLoad %9 
                                       f32_4 %189 = OpVectorShuffle %188 %187 4 5 6 3 
                                                      OpStore %9 %189 
                              Uniform f32_4* %191 = OpAccessChain %22 %47 %47 
                                       f32_4 %192 = OpLoad %191 
                                       f32_3 %193 = OpVectorShuffle %192 %192 0 1 2 
                                       f32_4 %194 = OpLoad %9 
                                       f32_3 %195 = OpVectorShuffle %194 %194 3 3 3 
                                       f32_3 %196 = OpFMul %193 %195 
                                       f32_4 %197 = OpLoad %9 
                                       f32_3 %198 = OpVectorShuffle %197 %197 0 1 2 
                                       f32_3 %199 = OpFAdd %196 %198 
                                                      OpStore vs_TEXCOORD3 %199 
                                                      OpStore vs_TEXCOORD4 %202 
                                 Output f32* %204 = OpAccessChain %75 %24 %71 
                                         f32 %205 = OpLoad %204 
                                         f32 %206 = OpFNegate %205 
                                 Output f32* %207 = OpAccessChain %75 %24 %71 
                                                      OpStore %207 %206 
                                                      OpReturn
                                                      OpFunctionEnd
; SPIR-V
; Version: 1.0
; Generator: Khronos Glslang Reference Front End; 6
; Bound: 372
; Schema: 0
                                                      OpCapability Shader 
                                               %1 = OpExtInstImport "GLSL.std.450" 
                                                      OpMemoryModel Logical GLSL450 
                                                      OpEntryPoint Fragment %4 "main" %11 %77 %341 %365 
                                                      OpExecutionMode %4 OriginUpperLeft 
                                                      OpName vs_TEXCOORD2 "vs_TEXCOORD2" 
                                                      OpName vs_TEXCOORD1 "vs_TEXCOORD1" 
                                                      OpName vs_TEXCOORD0 "vs_TEXCOORD0" 
                                                      OpDecorate vs_TEXCOORD2 Location 11 
                                                      OpDecorate %17 ArrayStride 17 
                                                      OpMemberDecorate %18 0 Offset 18 
                                                      OpMemberDecorate %18 1 Offset 18 
                                                      OpMemberDecorate %18 2 RelaxedPrecision 
                                                      OpMemberDecorate %18 2 Offset 18 
                                                      OpMemberDecorate %18 3 RelaxedPrecision 
                                                      OpMemberDecorate %18 3 Offset 18 
                                                      OpMemberDecorate %18 4 Offset 18 
                                                      OpMemberDecorate %18 5 RelaxedPrecision 
                                                      OpMemberDecorate %18 5 Offset 18 
                                                      OpMemberDecorate %18 6 RelaxedPrecision 
                                                      OpMemberDecorate %18 6 Offset 18 
                                                      OpMemberDecorate %18 7 RelaxedPrecision 
                                                      OpMemberDecorate %18 7 Offset 18 
                                                      OpMemberDecorate %18 8 RelaxedPrecision 
                                                      OpMemberDecorate %18 8 Offset 18 
                                                      OpMemberDecorate %18 9 RelaxedPrecision 
                                                      OpMemberDecorate %18 9 Offset 18 
                                                      OpMemberDecorate %18 10 RelaxedPrecision 
                                                      OpMemberDecorate %18 10 Offset 18 
                                                      OpDecorate %18 Block 
                                                      OpDecorate %20 DescriptorSet 20 
                                                      OpDecorate %20 Binding 20 
                                                      OpDecorate %53 RelaxedPrecision 
                                                      OpDecorate %62 RelaxedPrecision 
                                                      OpDecorate %63 RelaxedPrecision 
                                                      OpDecorate %64 RelaxedPrecision 
                                                      OpDecorate %65 RelaxedPrecision 
                                                      OpDecorate %66 RelaxedPrecision 
                                                      OpDecorate %67 RelaxedPrecision 
                                                      OpDecorate %68 RelaxedPrecision 
                                                      OpDecorate %69 RelaxedPrecision 
                                                      OpDecorate %70 RelaxedPrecision 
                                                      OpDecorate %71 RelaxedPrecision 
                                                      OpDecorate %72 RelaxedPrecision 
                                                      OpDecorate %73 RelaxedPrecision 
                                                      OpDecorate %74 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD1 Location 77 
                                                      OpDecorate %81 RelaxedPrecision 
                                                      OpDecorate %82 RelaxedPrecision 
                                                      OpDecorate %83 RelaxedPrecision 
                                                      OpDecorate %84 RelaxedPrecision 
                                                      OpDecorate %88 RelaxedPrecision 
                                                      OpDecorate %89 RelaxedPrecision 
                                                      OpDecorate %90 RelaxedPrecision 
                                                      OpDecorate %91 RelaxedPrecision 
                                                      OpDecorate %94 RelaxedPrecision 
                                                      OpDecorate %100 RelaxedPrecision 
                                                      OpDecorate %101 RelaxedPrecision 
                                                      OpDecorate %104 RelaxedPrecision 
                                                      OpDecorate %108 RelaxedPrecision 
                                                      OpDecorate %109 RelaxedPrecision 
                                                      OpDecorate %114 RelaxedPrecision 
                                                      OpDecorate %116 RelaxedPrecision 
                                                      OpDecorate %121 RelaxedPrecision 
                                                      OpDecorate %130 RelaxedPrecision 
                                                      OpDecorate %131 RelaxedPrecision 
                                                      OpDecorate %133 RelaxedPrecision 
                                                      OpDecorate %134 RelaxedPrecision 
                                                      OpDecorate %141 RelaxedPrecision 
                                                      OpDecorate %142 RelaxedPrecision 
                                                      OpDecorate %145 RelaxedPrecision 
                                                      OpDecorate %147 RelaxedPrecision 
                                                      OpDecorate %148 RelaxedPrecision 
                                                      OpDecorate %149 RelaxedPrecision 
                                                      OpDecorate %152 RelaxedPrecision 
                                                      OpDecorate %153 RelaxedPrecision 
                                                      OpDecorate %154 RelaxedPrecision 
                                                      OpDecorate %155 RelaxedPrecision 
                                                      OpDecorate %227 DescriptorSet 227 
                                                      OpDecorate %227 Binding 227 
                                                      OpDecorate %231 DescriptorSet 231 
                                                      OpDecorate %231 Binding 231 
                                                      OpDecorate %243 DescriptorSet 243 
                                                      OpDecorate %243 Binding 243 
                                                      OpDecorate %245 DescriptorSet 245 
                                                      OpDecorate %245 Binding 245 
                                                      OpDecorate %261 RelaxedPrecision 
                                                      OpDecorate %262 RelaxedPrecision 
                                                      OpDecorate %266 RelaxedPrecision 
                                                      OpDecorate %267 RelaxedPrecision 
                                                      OpDecorate %269 RelaxedPrecision 
                                                      OpDecorate %270 RelaxedPrecision 
                                                      OpDecorate %271 RelaxedPrecision 
                                                      OpDecorate %274 RelaxedPrecision 
                                                      OpDecorate %278 RelaxedPrecision 
                                                      OpDecorate %279 RelaxedPrecision 
                                                      OpDecorate %280 RelaxedPrecision 
                                                      OpDecorate %283 RelaxedPrecision 
                                                      OpDecorate %284 RelaxedPrecision 
                                                      OpDecorate %286 RelaxedPrecision 
                                                      OpDecorate %288 RelaxedPrecision 
                                                      OpDecorate %290 RelaxedPrecision 
                                                      OpDecorate %291 RelaxedPrecision 
                                                      OpDecorate %292 RelaxedPrecision 
                                                      OpDecorate %293 RelaxedPrecision 
                                                      OpDecorate %295 RelaxedPrecision 
                                                      OpDecorate %296 RelaxedPrecision 
                                                      OpDecorate %298 RelaxedPrecision 
                                                      OpDecorate %299 RelaxedPrecision 
                                                      OpDecorate %301 RelaxedPrecision 
                                                      OpDecorate %302 RelaxedPrecision 
                                                      OpDecorate %303 RelaxedPrecision 
                                                      OpDecorate %304 RelaxedPrecision 
                                                      OpDecorate %307 RelaxedPrecision 
                                                      OpDecorate %308 RelaxedPrecision 
                                                      OpDecorate %310 RelaxedPrecision 
                                                      OpDecorate %312 RelaxedPrecision 
                                                      OpDecorate %313 RelaxedPrecision 
                                                      OpDecorate %314 RelaxedPrecision 
                                                      OpDecorate %315 RelaxedPrecision 
                                                      OpDecorate %316 RelaxedPrecision 
                                                      OpDecorate %317 RelaxedPrecision 
                                                      OpDecorate %318 RelaxedPrecision 
                                                      OpDecorate %320 RelaxedPrecision 
                                                      OpDecorate %321 RelaxedPrecision 
                                                      OpDecorate %322 RelaxedPrecision 
                                                      OpDecorate %323 RelaxedPrecision 
                                                      OpDecorate %325 RelaxedPrecision 
                                                      OpDecorate %326 RelaxedPrecision 
                                                      OpDecorate %327 RelaxedPrecision 
                                                      OpDecorate %328 RelaxedPrecision 
                                                      OpDecorate %331 RelaxedPrecision 
                                                      OpDecorate %332 RelaxedPrecision 
                                                      OpDecorate %333 RelaxedPrecision 
                                                      OpDecorate %334 RelaxedPrecision 
                                                      OpDecorate %335 RelaxedPrecision 
                                                      OpDecorate %335 DescriptorSet 335 
                                                      OpDecorate %335 Binding 335 
                                                      OpDecorate %336 RelaxedPrecision 
                                                      OpDecorate %337 RelaxedPrecision 
                                                      OpDecorate %337 DescriptorSet 337 
                                                      OpDecorate %337 Binding 337 
                                                      OpDecorate %338 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD0 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD0 Location 341 
                                                      OpDecorate %342 RelaxedPrecision 
                                                      OpDecorate %343 RelaxedPrecision 
                                                      OpDecorate %344 RelaxedPrecision 
                                                      OpDecorate %345 RelaxedPrecision 
                                                      OpDecorate %346 RelaxedPrecision 
                                                      OpDecorate %349 RelaxedPrecision 
                                                      OpDecorate %350 RelaxedPrecision 
                                                      OpDecorate %351 RelaxedPrecision 
                                                      OpDecorate %352 RelaxedPrecision 
                                                      OpDecorate %353 RelaxedPrecision 
                                                      OpDecorate %354 RelaxedPrecision 
                                                      OpDecorate %355 RelaxedPrecision 
                                                      OpDecorate %358 RelaxedPrecision 
                                                      OpDecorate %359 RelaxedPrecision 
                                                      OpDecorate %360 RelaxedPrecision 
                                                      OpDecorate %361 RelaxedPrecision 
                                                      OpDecorate %365 RelaxedPrecision 
                                                      OpDecorate %365 Location 365 
                                               %2 = OpTypeVoid 
                                               %3 = OpTypeFunction %2 
                                               %6 = OpTypeFloat 32 
                                               %7 = OpTypeVector %6 3 
                                               %8 = OpTypePointer Private %7 
                                Private f32_3* %9 = OpVariable Private 
                                              %10 = OpTypePointer Input %7 
                        Input f32_3* vs_TEXCOORD2 = OpVariable Input 
                                              %14 = OpTypeVector %6 4 
                                              %15 = OpTypeInt 32 0 
                                          u32 %16 = OpConstant 4 
                                              %17 = OpTypeArray %14 %16 
                                              %18 = OpTypeStruct %7 %14 %14 %14 %17 %14 %6 %14 %6 %6 %6 
                                              %19 = OpTypePointer Uniform %18 
Uniform struct {f32_3; f32_4; f32_4; f32_4; f32_4[4]; f32_4; f32; f32_4; f32; f32; f32;}* %20 = OpVariable Uniform 
                                              %21 = OpTypeInt 32 1 
                                          i32 %22 = OpConstant 1 
                                              %23 = OpTypePointer Uniform %14 
                                              %28 = OpTypePointer Private %6 
                                 Private f32* %29 = OpVariable Private 
                               Private f32_3* %39 = OpVariable Private 
                                          i32 %42 = OpConstant 0 
                                              %43 = OpTypePointer Uniform %7 
                                              %52 = OpTypePointer Private %14 
                               Private f32_4* %53 = OpVariable Private 
                                 Private f32* %62 = OpVariable Private 
                        Input f32_3* vs_TEXCOORD1 = OpVariable Input 
                               Private f32_3* %83 = OpVariable Private 
                                          u32 %92 = OpConstant 0 
                                          u32 %97 = OpConstant 1 
                                              %99 = OpTypeVector %6 2 
                                         f32 %102 = OpConstant 3.674022E-40 
                                       f32_2 %103 = OpConstantComposite %102 %102 
                                         i32 %111 = OpConstant 6 
                                             %112 = OpTypePointer Uniform %6 
                                         f32 %115 = OpConstant 3.674022E-40 
                                         i32 %128 = OpConstant 10 
                                         f32 %132 = OpConstant 3.674022E-40 
                                         f32 %138 = OpConstant 3.674022E-40 
                                Private f32* %145 = OpVariable Private 
                              Private f32_3* %150 = OpVariable Private 
                                         f32 %157 = OpConstant 3.674022E-40 
                                         f32 %174 = OpConstant 3.674022E-40 
                                         f32 %176 = OpConstant 3.674022E-40 
                                         i32 %193 = OpConstant 4 
                                         i32 %206 = OpConstant 2 
                                         i32 %216 = OpConstant 3 
                                             %225 = OpTypeImage %6 Cube 0 0 0 1 Unknown 
                                             %226 = OpTypePointer UniformConstant %225 
      UniformConstant read_only TextureCube* %227 = OpVariable UniformConstant 
                                             %229 = OpTypeSampler 
                                             %230 = OpTypePointer UniformConstant %229 
                    UniformConstant sampler* %231 = OpVariable UniformConstant 
                                             %233 = OpTypeSampledImage %225 
                                         u32 %237 = OpConstant 3 
                                Private f32* %240 = OpVariable Private 
                                             %241 = OpTypeImage %6 Dim2D 0 0 0 1 Unknown 
                                             %242 = OpTypePointer UniformConstant %241 
        UniformConstant read_only Texture2D* %243 = OpVariable UniformConstant 
                    UniformConstant sampler* %245 = OpVariable UniformConstant 
                                             %247 = OpTypeSampledImage %241 
                                         i32 %276 = OpConstant 9 
                                         i32 %281 = OpConstant 8 
                                Private f32* %286 = OpVariable Private 
                                Private f32* %293 = OpVariable Private 
                                         i32 %329 = OpConstant 7 
                              Private f32_3* %334 = OpVariable Private 
        UniformConstant read_only Texture2D* %335 = OpVariable UniformConstant 
                    UniformConstant sampler* %337 = OpVariable UniformConstant 
                                             %340 = OpTypePointer Input %99 
                        Input f32_2* vs_TEXCOORD0 = OpVariable Input 
                              Private f32_3* %345 = OpVariable Private 
                                         i32 %347 = OpConstant 5 
                                             %364 = OpTypePointer Output %14 
                               Output f32_4* %365 = OpVariable Output 
                                             %369 = OpTypePointer Output %6 
                                          void %4 = OpFunction None %3 
                                               %5 = OpLabel 
                                        f32_3 %12 = OpLoad vs_TEXCOORD2 
                                        f32_3 %13 = OpFNegate %12 
                               Uniform f32_4* %24 = OpAccessChain %20 %22 
                                        f32_4 %25 = OpLoad %24 
                                        f32_3 %26 = OpVectorShuffle %25 %25 0 1 2 
                                        f32_3 %27 = OpFAdd %13 %26 
                                                      OpStore %9 %27 
                                        f32_3 %30 = OpLoad %9 
                                        f32_3 %31 = OpLoad %9 
                                          f32 %32 = OpDot %30 %31 
                                                      OpStore %29 %32 
                                          f32 %33 = OpLoad %29 
                                          f32 %34 = OpExtInst %1 32 %33 
                                                      OpStore %29 %34 
                                          f32 %35 = OpLoad %29 
                                        f32_3 %36 = OpCompositeConstruct %35 %35 %35 
                                        f32_3 %37 = OpLoad %9 
                                        f32_3 %38 = OpFMul %36 %37 
                                                      OpStore %9 %38 
                                        f32_3 %40 = OpLoad vs_TEXCOORD2 
                                        f32_3 %41 = OpFNegate %40 
                               Uniform f32_3* %44 = OpAccessChain %20 %42 
                                        f32_3 %45 = OpLoad %44 
                                        f32_3 %46 = OpFAdd %41 %45 
                                                      OpStore %39 %46 
                                        f32_3 %47 = OpLoad %39 
                                        f32_3 %48 = OpLoad %39 
                                          f32 %49 = OpDot %47 %48 
                                                      OpStore %29 %49 
                                          f32 %50 = OpLoad %29 
                                          f32 %51 = OpExtInst %1 32 %50 
                                                      OpStore %29 %51 
                                        f32_3 %54 = OpLoad %39 
                                          f32 %55 = OpLoad %29 
                                        f32_3 %56 = OpCompositeConstruct %55 %55 %55 
                                        f32_3 %57 = OpFMul %54 %56 
                                        f32_3 %58 = OpLoad %9 
                                        f32_3 %59 = OpFAdd %57 %58 
                                        f32_4 %60 = OpLoad %53 
                                        f32_4 %61 = OpVectorShuffle %60 %59 4 5 6 3 
                                                      OpStore %53 %61 
                                        f32_4 %63 = OpLoad %53 
                                        f32_3 %64 = OpVectorShuffle %63 %63 0 1 2 
                                        f32_4 %65 = OpLoad %53 
                                        f32_3 %66 = OpVectorShuffle %65 %65 0 1 2 
                                          f32 %67 = OpDot %64 %66 
                                                      OpStore %62 %67 
                                          f32 %68 = OpLoad %62 
                                          f32 %69 = OpExtInst %1 32 %68 
                                                      OpStore %62 %69 
                                          f32 %70 = OpLoad %62 
                                        f32_3 %71 = OpCompositeConstruct %70 %70 %70 
                                        f32_4 %72 = OpLoad %53 
                                        f32_3 %73 = OpVectorShuffle %72 %72 0 1 2 
                                        f32_3 %74 = OpFMul %71 %73 
                                        f32_4 %75 = OpLoad %53 
                                        f32_4 %76 = OpVectorShuffle %75 %74 4 5 6 3 
                                                      OpStore %53 %76 
                                        f32_3 %78 = OpLoad vs_TEXCOORD1 
                                        f32_3 %79 = OpLoad vs_TEXCOORD1 
                                          f32 %80 = OpDot %78 %79 
                                                      OpStore %62 %80 
                                          f32 %81 = OpLoad %62 
                                          f32 %82 = OpExtInst %1 32 %81 
                                                      OpStore %62 %82 
                                          f32 %84 = OpLoad %62 
                                        f32_3 %85 = OpCompositeConstruct %84 %84 %84 
                                        f32_3 %86 = OpLoad vs_TEXCOORD1 
                                        f32_3 %87 = OpFMul %85 %86 
                                                      OpStore %83 %87 
                                        f32_3 %88 = OpLoad %83 
                                        f32_4 %89 = OpLoad %53 
                                        f32_3 %90 = OpVectorShuffle %89 %89 0 1 2 
                                          f32 %91 = OpDot %88 %90 
                                 Private f32* %93 = OpAccessChain %53 %92 
                                                      OpStore %93 %91 
                                        f32_3 %94 = OpLoad %83 
                                        f32_3 %95 = OpLoad %9 
                                          f32 %96 = OpDot %94 %95 
                                 Private f32* %98 = OpAccessChain %53 %97 
                                                      OpStore %98 %96 
                                       f32_4 %100 = OpLoad %53 
                                       f32_2 %101 = OpVectorShuffle %100 %100 0 1 
                                       f32_2 %104 = OpExtInst %1 40 %101 %103 
                                       f32_4 %105 = OpLoad %53 
                                       f32_4 %106 = OpVectorShuffle %105 %104 4 5 2 3 
                                                      OpStore %53 %106 
                                Private f32* %107 = OpAccessChain %53 %92 
                                         f32 %108 = OpLoad %107 
                                         f32 %109 = OpExtInst %1 30 %108 
                                Private f32* %110 = OpAccessChain %9 %92 
                                                      OpStore %110 %109 
                                Uniform f32* %113 = OpAccessChain %20 %111 
                                         f32 %114 = OpLoad %113 
                                         f32 %116 = OpFMul %114 %115 
                                Private f32* %117 = OpAccessChain %53 %92 
                                                      OpStore %117 %116 
                                Private f32* %118 = OpAccessChain %9 %92 
                                         f32 %119 = OpLoad %118 
                                Private f32* %120 = OpAccessChain %53 %92 
                                         f32 %121 = OpLoad %120 
                                         f32 %122 = OpFMul %119 %121 
                                Private f32* %123 = OpAccessChain %9 %92 
                                                      OpStore %123 %122 
                                Private f32* %124 = OpAccessChain %9 %92 
                                         f32 %125 = OpLoad %124 
                                         f32 %126 = OpExtInst %1 29 %125 
                                Private f32* %127 = OpAccessChain %9 %92 
                                                      OpStore %127 %126 
                                Uniform f32* %129 = OpAccessChain %20 %128 
                                         f32 %130 = OpLoad %129 
                                         f32 %131 = OpFNegate %130 
                                         f32 %133 = OpFMul %131 %132 
                                         f32 %134 = OpFAdd %133 %132 
                                Private f32* %135 = OpAccessChain %53 %92 
                                                      OpStore %135 %134 
                                Private f32* %136 = OpAccessChain %9 %92 
                                         f32 %137 = OpLoad %136 
                                         f32 %139 = OpFMul %137 %138 
                                Private f32* %140 = OpAccessChain %53 %92 
                                         f32 %141 = OpLoad %140 
                                         f32 %142 = OpFNegate %141 
                                         f32 %143 = OpFAdd %139 %142 
                                Private f32* %144 = OpAccessChain %9 %92 
                                                      OpStore %144 %143 
                                Uniform f32* %146 = OpAccessChain %20 %128 
                                         f32 %147 = OpLoad %146 
                                         f32 %148 = OpFMul %147 %132 
                                         f32 %149 = OpFAdd %148 %132 
                                                      OpStore %145 %149 
                                Private f32* %151 = OpAccessChain %53 %92 
                                         f32 %152 = OpLoad %151 
                                         f32 %153 = OpFNegate %152 
                                         f32 %154 = OpLoad %145 
                                         f32 %155 = OpFAdd %153 %154 
                                Private f32* %156 = OpAccessChain %150 %92 
                                                      OpStore %156 %155 
                                Private f32* %158 = OpAccessChain %150 %92 
                                         f32 %159 = OpLoad %158 
                                         f32 %160 = OpFDiv %157 %159 
                                Private f32* %161 = OpAccessChain %150 %92 
                                                      OpStore %161 %160 
                                Private f32* %162 = OpAccessChain %150 %92 
                                         f32 %163 = OpLoad %162 
                                Private f32* %164 = OpAccessChain %9 %92 
                                         f32 %165 = OpLoad %164 
                                         f32 %166 = OpFMul %163 %165 
                                Private f32* %167 = OpAccessChain %9 %92 
                                                      OpStore %167 %166 
                                Private f32* %168 = OpAccessChain %9 %92 
                                         f32 %169 = OpLoad %168 
                                         f32 %170 = OpExtInst %1 43 %169 %102 %157 
                                Private f32* %171 = OpAccessChain %9 %92 
                                                      OpStore %171 %170 
                                Private f32* %172 = OpAccessChain %9 %92 
                                         f32 %173 = OpLoad %172 
                                         f32 %175 = OpFMul %173 %174 
                                         f32 %177 = OpFAdd %175 %176 
                                Private f32* %178 = OpAccessChain %150 %92 
                                                      OpStore %178 %177 
                                Private f32* %179 = OpAccessChain %9 %92 
                                         f32 %180 = OpLoad %179 
                                Private f32* %181 = OpAccessChain %9 %92 
                                         f32 %182 = OpLoad %181 
                                         f32 %183 = OpFMul %180 %182 
                                Private f32* %184 = OpAccessChain %9 %92 
                                                      OpStore %184 %183 
                                Private f32* %185 = OpAccessChain %9 %92 
                                         f32 %186 = OpLoad %185 
                                Private f32* %187 = OpAccessChain %150 %92 
                                         f32 %188 = OpLoad %187 
                                         f32 %189 = OpFMul %186 %188 
                                Private f32* %190 = OpAccessChain %9 %92 
                                                      OpStore %190 %189 
                                       f32_3 %191 = OpLoad vs_TEXCOORD2 
                                       f32_3 %192 = OpVectorShuffle %191 %191 1 1 1 
                              Uniform f32_4* %194 = OpAccessChain %20 %193 %22 
                                       f32_4 %195 = OpLoad %194 
                                       f32_3 %196 = OpVectorShuffle %195 %195 0 1 2 
                                       f32_3 %197 = OpFMul %192 %196 
                                                      OpStore %150 %197 
                              Uniform f32_4* %198 = OpAccessChain %20 %193 %42 
                                       f32_4 %199 = OpLoad %198 
                                       f32_3 %200 = OpVectorShuffle %199 %199 0 1 2 
                                       f32_3 %201 = OpLoad vs_TEXCOORD2 
                                       f32_3 %202 = OpVectorShuffle %201 %201 0 0 0 
                                       f32_3 %203 = OpFMul %200 %202 
                                       f32_3 %204 = OpLoad %150 
                                       f32_3 %205 = OpFAdd %203 %204 
                                                      OpStore %150 %205 
                              Uniform f32_4* %207 = OpAccessChain %20 %193 %206 
                                       f32_4 %208 = OpLoad %207 
                                       f32_3 %209 = OpVectorShuffle %208 %208 0 1 2 
                                       f32_3 %210 = OpLoad vs_TEXCOORD2 
                                       f32_3 %211 = OpVectorShuffle %210 %210 2 2 2 
                                       f32_3 %212 = OpFMul %209 %211 
                                       f32_3 %213 = OpLoad %150 
                                       f32_3 %214 = OpFAdd %212 %213 
                                                      OpStore %150 %214 
                                       f32_3 %215 = OpLoad %150 
                              Uniform f32_4* %217 = OpAccessChain %20 %193 %216 
                                       f32_4 %218 = OpLoad %217 
                                       f32_3 %219 = OpVectorShuffle %218 %218 0 1 2 
                                       f32_3 %220 = OpFAdd %215 %219 
                                                      OpStore %150 %220 
                                       f32_3 %221 = OpLoad %150 
                                       f32_3 %222 = OpLoad %150 
                                         f32 %223 = OpDot %221 %222 
                                Private f32* %224 = OpAccessChain %39 %92 
                                                      OpStore %224 %223 
                       read_only TextureCube %228 = OpLoad %227 
                                     sampler %232 = OpLoad %231 
                read_only TextureCubeSampled %234 = OpSampledImage %228 %232 
                                       f32_3 %235 = OpLoad %150 
                                       f32_4 %236 = OpImageSampleImplicitLod %234 %235 
                                         f32 %238 = OpCompositeExtract %236 3 
                                Private f32* %239 = OpAccessChain %150 %92 
                                                      OpStore %239 %238 
                         read_only Texture2D %244 = OpLoad %243 
                                     sampler %246 = OpLoad %245 
                  read_only Texture2DSampled %248 = OpSampledImage %244 %246 
                                       f32_3 %249 = OpLoad %39 
                                       f32_2 %250 = OpVectorShuffle %249 %249 0 0 
                                       f32_4 %251 = OpImageSampleImplicitLod %248 %250 
                                         f32 %252 = OpCompositeExtract %251 0 
                                                      OpStore %240 %252 
                                Private f32* %253 = OpAccessChain %150 %92 
                                         f32 %254 = OpLoad %253 
                                         f32 %255 = OpLoad %240 
                                         f32 %256 = OpFMul %254 %255 
                                Private f32* %257 = OpAccessChain %150 %92 
                                                      OpStore %257 %256 
                                       f32_3 %258 = OpLoad %150 
                                       f32_3 %259 = OpVectorShuffle %258 %258 0 0 0 
                              Uniform f32_4* %260 = OpAccessChain %20 %206 
                                       f32_4 %261 = OpLoad %260 
                                       f32_3 %262 = OpVectorShuffle %261 %261 0 1 2 
                                       f32_3 %263 = OpFMul %259 %262 
                                       f32_4 %264 = OpLoad %53 
                                       f32_4 %265 = OpVectorShuffle %264 %263 4 1 5 6 
                                                      OpStore %53 %265 
                                       f32_4 %266 = OpLoad %53 
                                       f32_3 %267 = OpVectorShuffle %266 %266 0 2 3 
                              Uniform f32_4* %268 = OpAccessChain %20 %216 
                                       f32_4 %269 = OpLoad %268 
                                       f32_3 %270 = OpVectorShuffle %269 %269 0 1 2 
                                       f32_3 %271 = OpFMul %267 %270 
                                                      OpStore %83 %271 
                                       f32_3 %272 = OpLoad %9 
                                       f32_3 %273 = OpVectorShuffle %272 %272 0 0 0 
                                       f32_3 %274 = OpLoad %83 
                                       f32_3 %275 = OpFMul %273 %274 
                                                      OpStore %9 %275 
                                Uniform f32* %277 = OpAccessChain %20 %276 
                                         f32 %278 = OpLoad %277 
                                         f32 %279 = OpFNegate %278 
                                         f32 %280 = OpFMul %279 %132 
                                Uniform f32* %282 = OpAccessChain %20 %281 
                                         f32 %283 = OpLoad %282 
                                         f32 %284 = OpFAdd %280 %283 
                                Private f32* %285 = OpAccessChain %83 %92 
                                                      OpStore %285 %284 
                                Private f32* %287 = OpAccessChain %53 %97 
                                         f32 %288 = OpLoad %287 
                                Private f32* %289 = OpAccessChain %83 %92 
                                         f32 %290 = OpLoad %289 
                                         f32 %291 = OpFNegate %290 
                                         f32 %292 = OpFAdd %288 %291 
                                                      OpStore %286 %292 
                                Uniform f32* %294 = OpAccessChain %20 %276 
                                         f32 %295 = OpLoad %294 
                                         f32 %296 = OpFMul %295 %132 
                                Uniform f32* %297 = OpAccessChain %20 %281 
                                         f32 %298 = OpLoad %297 
                                         f32 %299 = OpFAdd %296 %298 
                                                      OpStore %293 %299 
                                Private f32* %300 = OpAccessChain %83 %92 
                                         f32 %301 = OpLoad %300 
                                         f32 %302 = OpFNegate %301 
                                         f32 %303 = OpLoad %293 
                                         f32 %304 = OpFAdd %302 %303 
                                Private f32* %305 = OpAccessChain %83 %92 
                                                      OpStore %305 %304 
                                Private f32* %306 = OpAccessChain %83 %92 
                                         f32 %307 = OpLoad %306 
                                         f32 %308 = OpFDiv %157 %307 
                                Private f32* %309 = OpAccessChain %83 %92 
                                                      OpStore %309 %308 
                                         f32 %310 = OpLoad %286 
                                Private f32* %311 = OpAccessChain %83 %92 
                                         f32 %312 = OpLoad %311 
                                         f32 %313 = OpFMul %310 %312 
                                                      OpStore %286 %313 
                                         f32 %314 = OpLoad %286 
                                         f32 %315 = OpExtInst %1 43 %314 %102 %157 
                                                      OpStore %286 %315 
                                         f32 %316 = OpLoad %286 
                                         f32 %317 = OpFMul %316 %174 
                                         f32 %318 = OpFAdd %317 %176 
                                Private f32* %319 = OpAccessChain %83 %92 
                                                      OpStore %319 %318 
                                         f32 %320 = OpLoad %286 
                                         f32 %321 = OpLoad %286 
                                         f32 %322 = OpFMul %320 %321 
                                                      OpStore %286 %322 
                                         f32 %323 = OpLoad %286 
                                Private f32* %324 = OpAccessChain %83 %92 
                                         f32 %325 = OpLoad %324 
                                         f32 %326 = OpFMul %323 %325 
                                                      OpStore %286 %326 
                                         f32 %327 = OpLoad %286 
                                       f32_3 %328 = OpCompositeConstruct %327 %327 %327 
                              Uniform f32_4* %330 = OpAccessChain %20 %329 
                                       f32_4 %331 = OpLoad %330 
                                       f32_3 %332 = OpVectorShuffle %331 %331 0 1 2 
                                       f32_3 %333 = OpFMul %328 %332 
                                                      OpStore %83 %333 
                         read_only Texture2D %336 = OpLoad %335 
                                     sampler %338 = OpLoad %337 
                  read_only Texture2DSampled %339 = OpSampledImage %336 %338 
                                       f32_2 %342 = OpLoad vs_TEXCOORD0 
                                       f32_4 %343 = OpImageSampleImplicitLod %339 %342 
                                       f32_3 %344 = OpVectorShuffle %343 %343 0 1 2 
                                                      OpStore %334 %344 
                                       f32_3 %346 = OpLoad %334 
                              Uniform f32_4* %348 = OpAccessChain %20 %347 
                                       f32_4 %349 = OpLoad %348 
                                       f32_3 %350 = OpVectorShuffle %349 %349 0 1 2 
                                       f32_3 %351 = OpFMul %346 %350 
                                                      OpStore %345 %351 
                                       f32_4 %352 = OpLoad %53 
                                       f32_3 %353 = OpVectorShuffle %352 %352 0 2 3 
                                       f32_3 %354 = OpLoad %345 
                                       f32_3 %355 = OpFMul %353 %354 
                                       f32_4 %356 = OpLoad %53 
                                       f32_4 %357 = OpVectorShuffle %356 %355 4 5 6 3 
                                                      OpStore %53 %357 
                                       f32_4 %358 = OpLoad %53 
                                       f32_3 %359 = OpVectorShuffle %358 %358 0 1 2 
                                       f32_3 %360 = OpLoad %83 
                                       f32_3 %361 = OpFMul %359 %360 
                                       f32_3 %362 = OpLoad %9 
                                       f32_3 %363 = OpFAdd %361 %362 
                                                      OpStore %9 %363 
                                       f32_3 %366 = OpLoad %9 
                                       f32_4 %367 = OpLoad %365 
                                       f32_4 %368 = OpVectorShuffle %367 %366 4 5 6 3 
                                                      OpStore %365 %368 
                                 Output f32* %370 = OpAccessChain %365 %237 
                                                      OpStore %370 %157 
                                                      OpReturn
                                                      OpFunctionEnd
"
}
SubProgram "gles3 hw_tier00 " {
Keywords { "DIRECTIONAL_COOKIE" }
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToLight[4];
uniform 	vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in highp vec3 in_NORMAL0;
in highp vec4 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out highp vec2 vs_TEXCOORD3;
out highp vec3 vs_TEXCOORD1;
out highp vec3 vs_TEXCOORD2;
out highp vec4 vs_TEXCOORD4;
vec4 u_xlat0;
vec4 u_xlat1;
vec4 u_xlat2;
float u_xlat10;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy;
    u_xlat1.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat1.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat1.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat10 = dot(u_xlat1.xyz, u_xlat1.xyz);
    u_xlat10 = inversesqrt(u_xlat10);
    vs_TEXCOORD1.xyz = vec3(u_xlat10) * u_xlat1.xyz;
    vs_TEXCOORD2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[3] * in_POSITION0.wwww + u_xlat0;
    u_xlat1.xy = u_xlat0.yy * hlslcc_mtx4x4unity_WorldToLight[1].xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_WorldToLight[0].xy * u_xlat0.xx + u_xlat1.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_WorldToLight[2].xy * u_xlat0.zz + u_xlat0.xy;
    vs_TEXCOORD3.xy = hlslcc_mtx4x4unity_WorldToLight[3].xy * u_xlat0.ww + u_xlat0.xy;
    vs_TEXCOORD4 = vec4(0.0, 0.0, 0.0, 0.0);
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec3 _WorldSpaceCameraPos;
uniform 	mediump vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 _LightColor0;
uniform 	mediump vec4 _SpecColor;
uniform 	vec4 hlslcc_mtx4x4unity_WorldToLight[4];
uniform 	mediump vec4 _Color;
uniform 	mediump float _Smoothness;
uniform 	mediump vec4 _HColor;
uniform 	mediump vec4 _SColor;
uniform 	mediump float _RampThreshold;
uniform 	mediump float _RampSmooth;
uniform 	mediump float _SpecSmooth;
UNITY_LOCATION(0) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(1) uniform highp sampler2D _LightTexture0;
in mediump vec2 vs_TEXCOORD0;
in highp vec3 vs_TEXCOORD1;
in highp vec3 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec4 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
mediump vec3 u_xlat16_4;
vec2 u_xlat5;
mediump float u_xlat16_6;
mediump float u_xlat16_7;
mediump float u_xlat16_11;
float u_xlat15;
mediump float u_xlat16_16;
void main()
{
    u_xlat0.xyz = (-vs_TEXCOORD2.xyz) + _WorldSpaceCameraPos.xyz;
    u_xlat15 = dot(u_xlat0.xyz, u_xlat0.xyz);
    u_xlat15 = inversesqrt(u_xlat15);
    u_xlat16_1.xyz = u_xlat0.xyz * vec3(u_xlat15) + _WorldSpaceLightPos0.xyz;
    u_xlat16_16 = dot(u_xlat16_1.xyz, u_xlat16_1.xyz);
    u_xlat16_16 = inversesqrt(u_xlat16_16);
    u_xlat16_1.xyz = vec3(u_xlat16_16) * u_xlat16_1.xyz;
    u_xlat16_16 = dot(vs_TEXCOORD1.xyz, vs_TEXCOORD1.xyz);
    u_xlat16_16 = inversesqrt(u_xlat16_16);
    u_xlat16_2.xyz = vec3(u_xlat16_16) * vs_TEXCOORD1.xyz;
    u_xlat16_1.x = dot(u_xlat16_2.xyz, u_xlat16_1.xyz);
    u_xlat16_1.y = dot(u_xlat16_2.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat16_1.xy = max(u_xlat16_1.xy, vec2(0.0, 0.0));
    u_xlat0.x = log2(u_xlat16_1.x);
    u_xlat16_1.x = _Smoothness * 128.0;
    u_xlat0.x = u_xlat0.x * u_xlat16_1.x;
    u_xlat0.x = exp2(u_xlat0.x);
    u_xlat16_1.x = (-_SpecSmooth) * 0.5 + 0.5;
    u_xlat0.x = u_xlat0.x * 2.0 + (-u_xlat16_1.x);
    u_xlat16_11 = _SpecSmooth * 0.5 + 0.5;
    u_xlat5.x = (-u_xlat16_1.x) + u_xlat16_11;
    u_xlat5.x = float(1.0) / u_xlat5.x;
    u_xlat0.x = u_xlat5.x * u_xlat0.x;
#ifdef UNITY_ADRENO_ES3
    u_xlat0.x = min(max(u_xlat0.x, 0.0), 1.0);
#else
    u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);
#endif
    u_xlat5.x = u_xlat0.x * -2.0 + 3.0;
    u_xlat0.x = u_xlat0.x * u_xlat0.x;
    u_xlat0.x = u_xlat0.x * u_xlat5.x;
    u_xlat5.xy = vs_TEXCOORD2.yy * hlslcc_mtx4x4unity_WorldToLight[1].xy;
    u_xlat5.xy = hlslcc_mtx4x4unity_WorldToLight[0].xy * vs_TEXCOORD2.xx + u_xlat5.xy;
    u_xlat5.xy = hlslcc_mtx4x4unity_WorldToLight[2].xy * vs_TEXCOORD2.zz + u_xlat5.xy;
    u_xlat5.xy = u_xlat5.xy + hlslcc_mtx4x4unity_WorldToLight[3].xy;
    u_xlat5.x = texture(_LightTexture0, u_xlat5.xy).w;
    u_xlat16_1.xzw = u_xlat5.xxx * _LightColor0.xyz;
    u_xlat16_2.xyz = u_xlat16_1.xzw * _SpecColor.xyz;
    u_xlat0.xyz = u_xlat0.xxx * u_xlat16_2.xyz;
    u_xlat16_2.x = (-_RampSmooth) * 0.5 + _RampThreshold;
    u_xlat16_6 = u_xlat16_1.y + (-u_xlat16_2.x);
    u_xlat16_7 = _RampSmooth * 0.5 + _RampThreshold;
    u_xlat16_2.x = (-u_xlat16_2.x) + u_xlat16_7;
    u_xlat16_2.x = float(1.0) / u_xlat16_2.x;
    u_xlat16_6 = u_xlat16_6 * u_xlat16_2.x;
#ifdef UNITY_ADRENO_ES3
    u_xlat16_6 = min(max(u_xlat16_6, 0.0), 1.0);
#else
    u_xlat16_6 = clamp(u_xlat16_6, 0.0, 1.0);
#endif
    u_xlat16_2.x = u_xlat16_6 * -2.0 + 3.0;
    u_xlat16_6 = u_xlat16_6 * u_xlat16_6;
    u_xlat16_6 = u_xlat16_6 * u_xlat16_2.x;
    u_xlat16_2.xyz = (-_HColor.xyz) + _SColor.xyz;
    u_xlat16_2.xyz = _SColor.www * u_xlat16_2.xyz + _HColor.xyz;
    u_xlat16_3.xyz = (-u_xlat16_2.xyz) + _HColor.xyz;
    u_xlat16_2.xyz = vec3(u_xlat16_6) * u_xlat16_3.xyz + u_xlat16_2.xyz;
    u_xlat16_4.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_3.xyz = u_xlat16_4.xyz * _Color.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xzw * u_xlat16_3.xyz;
    u_xlat0.xyz = u_xlat16_1.xyz * u_xlat16_2.xyz + u_xlat0.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier01 " {
Keywords { "DIRECTIONAL_COOKIE" }
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToLight[4];
uniform 	vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in highp vec3 in_NORMAL0;
in highp vec4 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out highp vec2 vs_TEXCOORD3;
out highp vec3 vs_TEXCOORD1;
out highp vec3 vs_TEXCOORD2;
out highp vec4 vs_TEXCOORD4;
vec4 u_xlat0;
vec4 u_xlat1;
vec4 u_xlat2;
float u_xlat10;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy;
    u_xlat1.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat1.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat1.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat10 = dot(u_xlat1.xyz, u_xlat1.xyz);
    u_xlat10 = inversesqrt(u_xlat10);
    vs_TEXCOORD1.xyz = vec3(u_xlat10) * u_xlat1.xyz;
    vs_TEXCOORD2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[3] * in_POSITION0.wwww + u_xlat0;
    u_xlat1.xy = u_xlat0.yy * hlslcc_mtx4x4unity_WorldToLight[1].xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_WorldToLight[0].xy * u_xlat0.xx + u_xlat1.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_WorldToLight[2].xy * u_xlat0.zz + u_xlat0.xy;
    vs_TEXCOORD3.xy = hlslcc_mtx4x4unity_WorldToLight[3].xy * u_xlat0.ww + u_xlat0.xy;
    vs_TEXCOORD4 = vec4(0.0, 0.0, 0.0, 0.0);
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec3 _WorldSpaceCameraPos;
uniform 	mediump vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 _LightColor0;
uniform 	mediump vec4 _SpecColor;
uniform 	vec4 hlslcc_mtx4x4unity_WorldToLight[4];
uniform 	mediump vec4 _Color;
uniform 	mediump float _Smoothness;
uniform 	mediump vec4 _HColor;
uniform 	mediump vec4 _SColor;
uniform 	mediump float _RampThreshold;
uniform 	mediump float _RampSmooth;
uniform 	mediump float _SpecSmooth;
UNITY_LOCATION(0) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(1) uniform highp sampler2D _LightTexture0;
in mediump vec2 vs_TEXCOORD0;
in highp vec3 vs_TEXCOORD1;
in highp vec3 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec4 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
mediump vec3 u_xlat16_4;
vec2 u_xlat5;
mediump float u_xlat16_6;
mediump float u_xlat16_7;
mediump float u_xlat16_11;
float u_xlat15;
mediump float u_xlat16_16;
void main()
{
    u_xlat0.xyz = (-vs_TEXCOORD2.xyz) + _WorldSpaceCameraPos.xyz;
    u_xlat15 = dot(u_xlat0.xyz, u_xlat0.xyz);
    u_xlat15 = inversesqrt(u_xlat15);
    u_xlat16_1.xyz = u_xlat0.xyz * vec3(u_xlat15) + _WorldSpaceLightPos0.xyz;
    u_xlat16_16 = dot(u_xlat16_1.xyz, u_xlat16_1.xyz);
    u_xlat16_16 = inversesqrt(u_xlat16_16);
    u_xlat16_1.xyz = vec3(u_xlat16_16) * u_xlat16_1.xyz;
    u_xlat16_16 = dot(vs_TEXCOORD1.xyz, vs_TEXCOORD1.xyz);
    u_xlat16_16 = inversesqrt(u_xlat16_16);
    u_xlat16_2.xyz = vec3(u_xlat16_16) * vs_TEXCOORD1.xyz;
    u_xlat16_1.x = dot(u_xlat16_2.xyz, u_xlat16_1.xyz);
    u_xlat16_1.y = dot(u_xlat16_2.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat16_1.xy = max(u_xlat16_1.xy, vec2(0.0, 0.0));
    u_xlat0.x = log2(u_xlat16_1.x);
    u_xlat16_1.x = _Smoothness * 128.0;
    u_xlat0.x = u_xlat0.x * u_xlat16_1.x;
    u_xlat0.x = exp2(u_xlat0.x);
    u_xlat16_1.x = (-_SpecSmooth) * 0.5 + 0.5;
    u_xlat0.x = u_xlat0.x * 2.0 + (-u_xlat16_1.x);
    u_xlat16_11 = _SpecSmooth * 0.5 + 0.5;
    u_xlat5.x = (-u_xlat16_1.x) + u_xlat16_11;
    u_xlat5.x = float(1.0) / u_xlat5.x;
    u_xlat0.x = u_xlat5.x * u_xlat0.x;
#ifdef UNITY_ADRENO_ES3
    u_xlat0.x = min(max(u_xlat0.x, 0.0), 1.0);
#else
    u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);
#endif
    u_xlat5.x = u_xlat0.x * -2.0 + 3.0;
    u_xlat0.x = u_xlat0.x * u_xlat0.x;
    u_xlat0.x = u_xlat0.x * u_xlat5.x;
    u_xlat5.xy = vs_TEXCOORD2.yy * hlslcc_mtx4x4unity_WorldToLight[1].xy;
    u_xlat5.xy = hlslcc_mtx4x4unity_WorldToLight[0].xy * vs_TEXCOORD2.xx + u_xlat5.xy;
    u_xlat5.xy = hlslcc_mtx4x4unity_WorldToLight[2].xy * vs_TEXCOORD2.zz + u_xlat5.xy;
    u_xlat5.xy = u_xlat5.xy + hlslcc_mtx4x4unity_WorldToLight[3].xy;
    u_xlat5.x = texture(_LightTexture0, u_xlat5.xy).w;
    u_xlat16_1.xzw = u_xlat5.xxx * _LightColor0.xyz;
    u_xlat16_2.xyz = u_xlat16_1.xzw * _SpecColor.xyz;
    u_xlat0.xyz = u_xlat0.xxx * u_xlat16_2.xyz;
    u_xlat16_2.x = (-_RampSmooth) * 0.5 + _RampThreshold;
    u_xlat16_6 = u_xlat16_1.y + (-u_xlat16_2.x);
    u_xlat16_7 = _RampSmooth * 0.5 + _RampThreshold;
    u_xlat16_2.x = (-u_xlat16_2.x) + u_xlat16_7;
    u_xlat16_2.x = float(1.0) / u_xlat16_2.x;
    u_xlat16_6 = u_xlat16_6 * u_xlat16_2.x;
#ifdef UNITY_ADRENO_ES3
    u_xlat16_6 = min(max(u_xlat16_6, 0.0), 1.0);
#else
    u_xlat16_6 = clamp(u_xlat16_6, 0.0, 1.0);
#endif
    u_xlat16_2.x = u_xlat16_6 * -2.0 + 3.0;
    u_xlat16_6 = u_xlat16_6 * u_xlat16_6;
    u_xlat16_6 = u_xlat16_6 * u_xlat16_2.x;
    u_xlat16_2.xyz = (-_HColor.xyz) + _SColor.xyz;
    u_xlat16_2.xyz = _SColor.www * u_xlat16_2.xyz + _HColor.xyz;
    u_xlat16_3.xyz = (-u_xlat16_2.xyz) + _HColor.xyz;
    u_xlat16_2.xyz = vec3(u_xlat16_6) * u_xlat16_3.xyz + u_xlat16_2.xyz;
    u_xlat16_4.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_3.xyz = u_xlat16_4.xyz * _Color.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xzw * u_xlat16_3.xyz;
    u_xlat0.xyz = u_xlat16_1.xyz * u_xlat16_2.xyz + u_xlat0.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "gles3 hw_tier02 " {
Keywords { "DIRECTIONAL_COOKIE" }
"#ifdef VERTEX
#version 300 es

#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec4 hlslcc_mtx4x4unity_ObjectToWorld[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToObject[4];
uniform 	vec4 hlslcc_mtx4x4unity_MatrixVP[4];
uniform 	vec4 hlslcc_mtx4x4unity_WorldToLight[4];
uniform 	vec4 _MainTex_ST;
in highp vec4 in_POSITION0;
in highp vec3 in_NORMAL0;
in highp vec4 in_TEXCOORD0;
out mediump vec2 vs_TEXCOORD0;
out highp vec2 vs_TEXCOORD3;
out highp vec3 vs_TEXCOORD1;
out highp vec3 vs_TEXCOORD2;
out highp vec4 vs_TEXCOORD4;
vec4 u_xlat0;
vec4 u_xlat1;
vec4 u_xlat2;
float u_xlat10;
void main()
{
    u_xlat0 = in_POSITION0.yyyy * hlslcc_mtx4x4unity_ObjectToWorld[1];
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[0] * in_POSITION0.xxxx + u_xlat0;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[2] * in_POSITION0.zzzz + u_xlat0;
    u_xlat1 = u_xlat0 + hlslcc_mtx4x4unity_ObjectToWorld[3];
    u_xlat2 = u_xlat1.yyyy * hlslcc_mtx4x4unity_MatrixVP[1];
    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[0] * u_xlat1.xxxx + u_xlat2;
    u_xlat2 = hlslcc_mtx4x4unity_MatrixVP[2] * u_xlat1.zzzz + u_xlat2;
    gl_Position = hlslcc_mtx4x4unity_MatrixVP[3] * u_xlat1.wwww + u_xlat2;
    u_xlat1.xy = in_TEXCOORD0.xy * _MainTex_ST.xy + _MainTex_ST.zw;
    vs_TEXCOORD0.xy = u_xlat1.xy;
    u_xlat1.x = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[0].xyz);
    u_xlat1.y = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[1].xyz);
    u_xlat1.z = dot(in_NORMAL0.xyz, hlslcc_mtx4x4unity_WorldToObject[2].xyz);
    u_xlat10 = dot(u_xlat1.xyz, u_xlat1.xyz);
    u_xlat10 = inversesqrt(u_xlat10);
    vs_TEXCOORD1.xyz = vec3(u_xlat10) * u_xlat1.xyz;
    vs_TEXCOORD2.xyz = hlslcc_mtx4x4unity_ObjectToWorld[3].xyz * in_POSITION0.www + u_xlat0.xyz;
    u_xlat0 = hlslcc_mtx4x4unity_ObjectToWorld[3] * in_POSITION0.wwww + u_xlat0;
    u_xlat1.xy = u_xlat0.yy * hlslcc_mtx4x4unity_WorldToLight[1].xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_WorldToLight[0].xy * u_xlat0.xx + u_xlat1.xy;
    u_xlat0.xy = hlslcc_mtx4x4unity_WorldToLight[2].xy * u_xlat0.zz + u_xlat0.xy;
    vs_TEXCOORD3.xy = hlslcc_mtx4x4unity_WorldToLight[3].xy * u_xlat0.ww + u_xlat0.xy;
    vs_TEXCOORD4 = vec4(0.0, 0.0, 0.0, 0.0);
    return;
}

#endif
#ifdef FRAGMENT
#version 300 es

precision highp float;
precision highp int;
#define HLSLCC_ENABLE_UNIFORM_BUFFERS 1
#if HLSLCC_ENABLE_UNIFORM_BUFFERS
#define UNITY_UNIFORM
#else
#define UNITY_UNIFORM uniform
#endif
#define UNITY_SUPPORTS_UNIFORM_LOCATION 1
#if UNITY_SUPPORTS_UNIFORM_LOCATION
#define UNITY_LOCATION(x) layout(location = x)
#define UNITY_BINDING(x) layout(binding = x, std140)
#else
#define UNITY_LOCATION(x)
#define UNITY_BINDING(x) layout(std140)
#endif
uniform 	vec3 _WorldSpaceCameraPos;
uniform 	mediump vec4 _WorldSpaceLightPos0;
uniform 	mediump vec4 _LightColor0;
uniform 	mediump vec4 _SpecColor;
uniform 	vec4 hlslcc_mtx4x4unity_WorldToLight[4];
uniform 	mediump vec4 _Color;
uniform 	mediump float _Smoothness;
uniform 	mediump vec4 _HColor;
uniform 	mediump vec4 _SColor;
uniform 	mediump float _RampThreshold;
uniform 	mediump float _RampSmooth;
uniform 	mediump float _SpecSmooth;
UNITY_LOCATION(0) uniform mediump sampler2D _MainTex;
UNITY_LOCATION(1) uniform highp sampler2D _LightTexture0;
in mediump vec2 vs_TEXCOORD0;
in highp vec3 vs_TEXCOORD1;
in highp vec3 vs_TEXCOORD2;
layout(location = 0) out mediump vec4 SV_Target0;
vec3 u_xlat0;
mediump vec4 u_xlat16_1;
mediump vec3 u_xlat16_2;
mediump vec3 u_xlat16_3;
mediump vec3 u_xlat16_4;
vec2 u_xlat5;
mediump float u_xlat16_6;
mediump float u_xlat16_7;
mediump float u_xlat16_11;
float u_xlat15;
mediump float u_xlat16_16;
void main()
{
    u_xlat0.xyz = (-vs_TEXCOORD2.xyz) + _WorldSpaceCameraPos.xyz;
    u_xlat15 = dot(u_xlat0.xyz, u_xlat0.xyz);
    u_xlat15 = inversesqrt(u_xlat15);
    u_xlat16_1.xyz = u_xlat0.xyz * vec3(u_xlat15) + _WorldSpaceLightPos0.xyz;
    u_xlat16_16 = dot(u_xlat16_1.xyz, u_xlat16_1.xyz);
    u_xlat16_16 = inversesqrt(u_xlat16_16);
    u_xlat16_1.xyz = vec3(u_xlat16_16) * u_xlat16_1.xyz;
    u_xlat16_16 = dot(vs_TEXCOORD1.xyz, vs_TEXCOORD1.xyz);
    u_xlat16_16 = inversesqrt(u_xlat16_16);
    u_xlat16_2.xyz = vec3(u_xlat16_16) * vs_TEXCOORD1.xyz;
    u_xlat16_1.x = dot(u_xlat16_2.xyz, u_xlat16_1.xyz);
    u_xlat16_1.y = dot(u_xlat16_2.xyz, _WorldSpaceLightPos0.xyz);
    u_xlat16_1.xy = max(u_xlat16_1.xy, vec2(0.0, 0.0));
    u_xlat0.x = log2(u_xlat16_1.x);
    u_xlat16_1.x = _Smoothness * 128.0;
    u_xlat0.x = u_xlat0.x * u_xlat16_1.x;
    u_xlat0.x = exp2(u_xlat0.x);
    u_xlat16_1.x = (-_SpecSmooth) * 0.5 + 0.5;
    u_xlat0.x = u_xlat0.x * 2.0 + (-u_xlat16_1.x);
    u_xlat16_11 = _SpecSmooth * 0.5 + 0.5;
    u_xlat5.x = (-u_xlat16_1.x) + u_xlat16_11;
    u_xlat5.x = float(1.0) / u_xlat5.x;
    u_xlat0.x = u_xlat5.x * u_xlat0.x;
#ifdef UNITY_ADRENO_ES3
    u_xlat0.x = min(max(u_xlat0.x, 0.0), 1.0);
#else
    u_xlat0.x = clamp(u_xlat0.x, 0.0, 1.0);
#endif
    u_xlat5.x = u_xlat0.x * -2.0 + 3.0;
    u_xlat0.x = u_xlat0.x * u_xlat0.x;
    u_xlat0.x = u_xlat0.x * u_xlat5.x;
    u_xlat5.xy = vs_TEXCOORD2.yy * hlslcc_mtx4x4unity_WorldToLight[1].xy;
    u_xlat5.xy = hlslcc_mtx4x4unity_WorldToLight[0].xy * vs_TEXCOORD2.xx + u_xlat5.xy;
    u_xlat5.xy = hlslcc_mtx4x4unity_WorldToLight[2].xy * vs_TEXCOORD2.zz + u_xlat5.xy;
    u_xlat5.xy = u_xlat5.xy + hlslcc_mtx4x4unity_WorldToLight[3].xy;
    u_xlat5.x = texture(_LightTexture0, u_xlat5.xy).w;
    u_xlat16_1.xzw = u_xlat5.xxx * _LightColor0.xyz;
    u_xlat16_2.xyz = u_xlat16_1.xzw * _SpecColor.xyz;
    u_xlat0.xyz = u_xlat0.xxx * u_xlat16_2.xyz;
    u_xlat16_2.x = (-_RampSmooth) * 0.5 + _RampThreshold;
    u_xlat16_6 = u_xlat16_1.y + (-u_xlat16_2.x);
    u_xlat16_7 = _RampSmooth * 0.5 + _RampThreshold;
    u_xlat16_2.x = (-u_xlat16_2.x) + u_xlat16_7;
    u_xlat16_2.x = float(1.0) / u_xlat16_2.x;
    u_xlat16_6 = u_xlat16_6 * u_xlat16_2.x;
#ifdef UNITY_ADRENO_ES3
    u_xlat16_6 = min(max(u_xlat16_6, 0.0), 1.0);
#else
    u_xlat16_6 = clamp(u_xlat16_6, 0.0, 1.0);
#endif
    u_xlat16_2.x = u_xlat16_6 * -2.0 + 3.0;
    u_xlat16_6 = u_xlat16_6 * u_xlat16_6;
    u_xlat16_6 = u_xlat16_6 * u_xlat16_2.x;
    u_xlat16_2.xyz = (-_HColor.xyz) + _SColor.xyz;
    u_xlat16_2.xyz = _SColor.www * u_xlat16_2.xyz + _HColor.xyz;
    u_xlat16_3.xyz = (-u_xlat16_2.xyz) + _HColor.xyz;
    u_xlat16_2.xyz = vec3(u_xlat16_6) * u_xlat16_3.xyz + u_xlat16_2.xyz;
    u_xlat16_4.xyz = texture(_MainTex, vs_TEXCOORD0.xy).xyz;
    u_xlat16_3.xyz = u_xlat16_4.xyz * _Color.xyz;
    u_xlat16_1.xyz = u_xlat16_1.xzw * u_xlat16_3.xyz;
    u_xlat0.xyz = u_xlat16_1.xyz * u_xlat16_2.xyz + u_xlat0.xyz;
    SV_Target0.xyz = u_xlat0.xyz;
    SV_Target0.w = 1.0;
    return;
}

#endif
"
}
SubProgram "vulkan hw_tier00 " {
Keywords { "DIRECTIONAL_COOKIE" }
"; SPIR-V
; Version: 1.0
; Generator: Khronos Glslang Reference Front End; 6
; Bound: 209
; Schema: 0
                                                      OpCapability Shader 
                                               %1 = OpExtInstImport "GLSL.std.450" 
                                                      OpMemoryModel Logical GLSL450 
                                                      OpEntryPoint Vertex %4 "main" %11 %75 %85 %101 %106 %137 %143 %190 %200 
                                                      OpName vs_TEXCOORD0 "vs_TEXCOORD0" 
                                                      OpName vs_TEXCOORD1 "vs_TEXCOORD1" 
                                                      OpName vs_TEXCOORD2 "vs_TEXCOORD2" 
                                                      OpName vs_TEXCOORD3 "vs_TEXCOORD3" 
                                                      OpName vs_TEXCOORD4 "vs_TEXCOORD4" 
                                                      OpDecorate %11 Location 11 
                                                      OpDecorate %16 ArrayStride 16 
                                                      OpDecorate %17 ArrayStride 17 
                                                      OpDecorate %18 ArrayStride 18 
                                                      OpDecorate %19 ArrayStride 19 
                                                      OpMemberDecorate %20 0 Offset 20 
                                                      OpMemberDecorate %20 1 Offset 20 
                                                      OpMemberDecorate %20 2 Offset 20 
                                                      OpMemberDecorate %20 3 Offset 20 
                                                      OpMemberDecorate %20 4 Offset 20 
                                                      OpDecorate %20 Block 
                                                      OpDecorate %22 DescriptorSet 22 
                                                      OpDecorate %22 Binding 22 
                                                      OpMemberDecorate %73 0 BuiltIn 73 
                                                      OpMemberDecorate %73 1 BuiltIn 73 
                                                      OpMemberDecorate %73 2 BuiltIn 73 
                                                      OpDecorate %73 Block 
                                                      OpDecorate %85 Location 85 
                                                      OpDecorate vs_TEXCOORD0 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD0 Location 101 
                                                      OpDecorate %106 Location 106 
                                                      OpDecorate vs_TEXCOORD1 Location 137 
                                                      OpDecorate vs_TEXCOORD2 Location 143 
                                                      OpDecorate vs_TEXCOORD3 Location 190 
                                                      OpDecorate vs_TEXCOORD4 Location 200 
                                               %2 = OpTypeVoid 
                                               %3 = OpTypeFunction %2 
                                               %6 = OpTypeFloat 32 
                                               %7 = OpTypeVector %6 4 
                                               %8 = OpTypePointer Private %7 
                                Private f32_4* %9 = OpVariable Private 
                                              %10 = OpTypePointer Input %7 
                                 Input f32_4* %11 = OpVariable Input 
                                              %14 = OpTypeInt 32 0 
                                          u32 %15 = OpConstant 4 
                                              %16 = OpTypeArray %7 %15 
                                              %17 = OpTypeArray %7 %15 
                                              %18 = OpTypeArray %7 %15 
                                              %19 = OpTypeArray %7 %15 
                                              %20 = OpTypeStruct %16 %17 %18 %19 %7 
                                              %21 = OpTypePointer Uniform %20 
Uniform struct {f32_4[4]; f32_4[4]; f32_4[4]; f32_4[4]; f32_4;}* %22 = OpVariable Uniform 
                                              %23 = OpTypeInt 32 1 
                                          i32 %24 = OpConstant 0 
                                          i32 %25 = OpConstant 1 
                                              %26 = OpTypePointer Uniform %7 
                                          i32 %37 = OpConstant 2 
                               Private f32_4* %45 = OpVariable Private 
                                          i32 %47 = OpConstant 3 
                               Private f32_4* %51 = OpVariable Private 
                                          u32 %71 = OpConstant 1 
                                              %72 = OpTypeArray %6 %71 
                                              %73 = OpTypeStruct %7 %6 %72 
                                              %74 = OpTypePointer Output %73 
         Output struct {f32_4; f32; f32[1];}* %75 = OpVariable Output 
                                              %83 = OpTypePointer Output %7 
                                 Input f32_4* %85 = OpVariable Input 
                                              %86 = OpTypeVector %6 2 
                                          i32 %89 = OpConstant 4 
                                             %100 = OpTypePointer Output %86 
                       Output f32_2* vs_TEXCOORD0 = OpVariable Output 
                                             %104 = OpTypeVector %6 3 
                                             %105 = OpTypePointer Input %104 
                                Input f32_3* %106 = OpVariable Input 
                                         u32 %112 = OpConstant 0 
                                             %113 = OpTypePointer Private %6 
                                         u32 %126 = OpConstant 2 
                                Private f32* %128 = OpVariable Private 
                                             %136 = OpTypePointer Output %104 
                       Output f32_3* vs_TEXCOORD1 = OpVariable Output 
                       Output f32_3* vs_TEXCOORD2 = OpVariable Output 
                       Output f32_2* vs_TEXCOORD3 = OpVariable Output 
                       Output f32_4* vs_TEXCOORD4 = OpVariable Output 
                                         f32 %201 = OpConstant 3.674022E-40 
                                       f32_4 %202 = OpConstantComposite %201 %201 %201 %201 
                                             %203 = OpTypePointer Output %6 
                                          void %4 = OpFunction None %3 
                                               %5 = OpLabel 
                                        f32_4 %12 = OpLoad %11 
                                        f32_4 %13 = OpVectorShuffle %12 %12 1 1 1 1 
                               Uniform f32_4* %27 = OpAccessChain %22 %24 %25 
                                        f32_4 %28 = OpLoad %27 
                                        f32_4 %29 = OpFMul %13 %28 
                                                      OpStore %9 %29 
                               Uniform f32_4* %30 = OpAccessChain %22 %24 %24 
                                        f32_4 %31 = OpLoad %30 
                                        f32_4 %32 = OpLoad %11 
                                        f32_4 %33 = OpVectorShuffle %32 %32 0 0 0 0 
                                        f32_4 %34 = OpFMul %31 %33 
                                        f32_4 %35 = OpLoad %9 
                                        f32_4 %36 = OpFAdd %34 %35 
                                                      OpStore %9 %36 
                               Uniform f32_4* %38 = OpAccessChain %22 %24 %37 
                                        f32_4 %39 = OpLoad %38 
                                        f32_4 %40 = OpLoad %11 
                                        f32_4 %41 = OpVectorShuffle %40 %40 2 2 2 2 
                                        f32_4 %42 = OpFMul %39 %41 
                                        f32_4 %43 = OpLoad %9 
                                        f32_4 %44 = OpFAdd %42 %43 
                                                      OpStore %9 %44 
                                        f32_4 %46 = OpLoad %9 
                               Uniform f32_4* %48 = OpAccessChain %22 %24 %47 
                                        f32_4 %49 = OpLoad %48 
                                        f32_4 %50 = OpFAdd %46 %49 
                                                      OpStore %45 %50 
                                        f32_4 %52 = OpLoad %45 
                                        f32_4 %53 = OpVectorShuffle %52 %52 1 1 1 1 
                               Uniform f32_4* %54 = OpAccessChain %22 %37 %25 
                                        f32_4 %55 = OpLoad %54 
                                        f32_4 %56 = OpFMul %53 %55 
                                                      OpStore %51 %56 
                               Uniform f32_4* %57 = OpAccessChain %22 %37 %24 
                                        f32_4 %58 = OpLoad %57 
                                        f32_4 %59 = OpLoad %45 
                                        f32_4 %60 = OpVectorShuffle %59 %59 0 0 0 0 
                                        f32_4 %61 = OpFMul %58 %60 
                                        f32_4 %62 = OpLoad %51 
                                        f32_4 %63 = OpFAdd %61 %62 
                                                      OpStore %51 %63 
                               Uniform f32_4* %64 = OpAccessChain %22 %37 %37 
                                        f32_4 %65 = OpLoad %64 
                                        f32_4 %66 = OpLoad %45 
                                        f32_4 %67 = OpVectorShuffle %66 %66 2 2 2 2 
                                        f32_4 %68 = OpFMul %65 %67 
                                        f32_4 %69 = OpLoad %51 
                                        f32_4 %70 = OpFAdd %68 %69 
                                                      OpStore %51 %70 
                               Uniform f32_4* %76 = OpAccessChain %22 %37 %47 
                                        f32_4 %77 = OpLoad %76 
                                        f32_4 %78 = OpLoad %45 
                                        f32_4 %79 = OpVectorShuffle %78 %78 3 3 3 3 
                                        f32_4 %80 = OpFMul %77 %79 
                                        f32_4 %81 = OpLoad %51 
                                        f32_4 %82 = OpFAdd %80 %81 
                                Output f32_4* %84 = OpAccessChain %75 %24 
                                                      OpStore %84 %82 
                                        f32_4 %87 = OpLoad %85 
                                        f32_2 %88 = OpVectorShuffle %87 %87 0 1 
                               Uniform f32_4* %90 = OpAccessChain %22 %89 
                                        f32_4 %91 = OpLoad %90 
                                        f32_2 %92 = OpVectorShuffle %91 %91 0 1 
                                        f32_2 %93 = OpFMul %88 %92 
                               Uniform f32_4* %94 = OpAccessChain %22 %89 
                                        f32_4 %95 = OpLoad %94 
                                        f32_2 %96 = OpVectorShuffle %95 %95 2 3 
                                        f32_2 %97 = OpFAdd %93 %96 
                                        f32_4 %98 = OpLoad %45 
                                        f32_4 %99 = OpVectorShuffle %98 %97 4 5 2 3 
                                                      OpStore %45 %99 
                                       f32_4 %102 = OpLoad %45 
                                       f32_2 %103 = OpVectorShuffle %102 %102 0 1 
                                                      OpStore vs_TEXCOORD0 %103 
                                       f32_3 %107 = OpLoad %106 
                              Uniform f32_4* %108 = OpAccessChain %22 %25 %24 
                                       f32_4 %109 = OpLoad %108 
                                       f32_3 %110 = OpVectorShuffle %109 %109 0 1 2 
                                         f32 %111 = OpDot %107 %110 
                                Private f32* %114 = OpAccessChain %45 %112 
                                                      OpStore %114 %111 
                                       f32_3 %115 = OpLoad %106 
                              Uniform f32_4* %116 = OpAccessChain %22 %25 %25 
                                       f32_4 %117 = OpLoad %116 
                                       f32_3 %118 = OpVectorShuffle %117 %117 0 1 2 
                                         f32 %119 = OpDot %115 %118 
                                Private f32* %120 = OpAccessChain %45 %71 
                                                      OpStore %120 %119 
                                       f32_3 %121 = OpLoad %106 
                              Uniform f32_4* %122 = OpAccessChain %22 %25 %37 
                                       f32_4 %123 = OpLoad %122 
                                       f32_3 %124 = OpVectorShuffle %123 %123 0 1 2 
                                         f32 %125 = OpDot %121 %124 
                                Private f32* %127 = OpAccessChain %45 %126 
                                                      OpStore %127 %125 
                                       f32_4 %129 = OpLoad %45 
                                       f32_3 %130 = OpVectorShuffle %129 %129 0 1 2 
                                       f32_4 %131 = OpLoad %45 
                                       f32_3 %132 = OpVectorShuffle %131 %131 0 1 2 
                                         f32 %133 = OpDot %130 %132 
                                                      OpStore %128 %133 
                                         f32 %134 = OpLoad %128 
                                         f32 %135 = OpExtInst %1 32 %134 
                                                      OpStore %128 %135 
                                         f32 %138 = OpLoad %128 
                                       f32_3 %139 = OpCompositeConstruct %138 %138 %138 
                                       f32_4 %140 = OpLoad %45 
                                       f32_3 %141 = OpVectorShuffle %140 %140 0 1 2 
                                       f32_3 %142 = OpFMul %139 %141 
                                                      OpStore vs_TEXCOORD1 %142 
                              Uniform f32_4* %144 = OpAccessChain %22 %24 %47 
                                       f32_4 %145 = OpLoad %144 
                                       f32_3 %146 = OpVectorShuffle %145 %145 0 1 2 
                                       f32_4 %147 = OpLoad %11 
                                       f32_3 %148 = OpVectorShuffle %147 %147 3 3 3 
                                       f32_3 %149 = OpFMul %146 %148 
                                       f32_4 %150 = OpLoad %9 
                                       f32_3 %151 = OpVectorShuffle %150 %150 0 1 2 
                                       f32_3 %152 = OpFAdd %149 %151 
                                                      OpStore vs_TEXCOORD2 %152 
                              Uniform f32_4* %153 = OpAccessChain %22 %24 %47 
                                       f32_4 %154 = OpLoad %153 
                                       f32_4 %155 = OpLoad %11 
                                       f32_4 %156 = OpVectorShuffle %155 %155 3 3 3 3 
                                       f32_4 %157 = OpFMul %154 %156 
                                       f32_4 %158 = OpLoad %9 
                                       f32_4 %159 = OpFAdd %157 %158 
                                                      OpStore %9 %159 
                                       f32_4 %160 = OpLoad %9 
                                       f32_2 %161 = OpVectorShuffle %160 %160 1 1 
                              Uniform f32_4* %162 = OpAccessChain %22 %47 %25 
                                       f32_4 %163 = OpLoad %162 
                                       f32_2 %164 = OpVectorShuffle %163 %163 0 1 
                                       f32_2 %165 = OpFMul %161 %164 
                                       f32_4 %166 = OpLoad %45 
                                       f32_4 %167 = OpVectorShuffle %166 %165 4 5 2 3 
                                                      OpStore %45 %167 
                              Uniform f32_4* %168 = OpAccessChain %22 %47 %24 
                                       f32_4 %169 = OpLoad %168 
                                       f32_2 %170 = OpVectorShuffle %169 %169 0 1 
                                       f32_4 %171 = OpLoad %9 
                                       f32_2 %172 = OpVectorShuffle %171 %171 0 0 
                                       f32_2 %173 = OpFMul %170 %172 
                                       f32_4 %174 = OpLoad %45 
                                       f32_2 %175 = OpVectorShuffle %174 %174 0 1 
                                       f32_2 %176 = OpFAdd %173 %175 
                                       f32_4 %177 = OpLoad %9 
                                       f32_4 %178 = OpVectorShuffle %177 %176 4 5 2 3 
                                                      OpStore %9 %178 
                              Uniform f32_4* %179 = OpAccessChain %22 %47 %37 
                                       f32_4 %180 = OpLoad %179 
                                       f32_2 %181 = OpVectorShuffle %180 %180 0 1 
                                       f32_4 %182 = OpLoad %9 
                                       f32_2 %183 = OpVectorShuffle %182 %182 2 2 
                                       f32_2 %184 = OpFMul %181 %183 
                                       f32_4 %185 = OpLoad %9 
                                       f32_2 %186 = OpVectorShuffle %185 %185 0 1 
                                       f32_2 %187 = OpFAdd %184 %186 
                                       f32_4 %188 = OpLoad %9 
                                       f32_4 %189 = OpVectorShuffle %188 %187 4 5 2 3 
                                                      OpStore %9 %189 
                              Uniform f32_4* %191 = OpAccessChain %22 %47 %47 
                                       f32_4 %192 = OpLoad %191 
                                       f32_2 %193 = OpVectorShuffle %192 %192 0 1 
                                       f32_4 %194 = OpLoad %9 
                                       f32_2 %195 = OpVectorShuffle %194 %194 3 3 
                                       f32_2 %196 = OpFMul %193 %195 
                                       f32_4 %197 = OpLoad %9 
                                       f32_2 %198 = OpVectorShuffle %197 %197 0 1 
                                       f32_2 %199 = OpFAdd %196 %198 
                                                      OpStore vs_TEXCOORD3 %199 
                                                      OpStore vs_TEXCOORD4 %202 
                                 Output f32* %204 = OpAccessChain %75 %24 %71 
                                         f32 %205 = OpLoad %204 
                                         f32 %206 = OpFNegate %205 
                                 Output f32* %207 = OpAccessChain %75 %24 %71 
                                                      OpStore %207 %206 
                                                      OpReturn
                                                      OpFunctionEnd
; SPIR-V
; Version: 1.0
; Generator: Khronos Glslang Reference Front End; 6
; Bound: 363
; Schema: 0
                                                      OpCapability Shader 
                                               %1 = OpExtInstImport "GLSL.std.450" 
                                                      OpMemoryModel Logical GLSL450 
                                                      OpEntryPoint Fragment %4 "main" %11 %63 %333 %356 
                                                      OpExecutionMode %4 OriginUpperLeft 
                                                      OpName vs_TEXCOORD2 "vs_TEXCOORD2" 
                                                      OpName vs_TEXCOORD1 "vs_TEXCOORD1" 
                                                      OpName vs_TEXCOORD0 "vs_TEXCOORD0" 
                                                      OpDecorate vs_TEXCOORD2 Location 11 
                                                      OpDecorate %17 ArrayStride 17 
                                                      OpMemberDecorate %18 0 Offset 18 
                                                      OpMemberDecorate %18 1 RelaxedPrecision 
                                                      OpMemberDecorate %18 1 Offset 18 
                                                      OpMemberDecorate %18 2 RelaxedPrecision 
                                                      OpMemberDecorate %18 2 Offset 18 
                                                      OpMemberDecorate %18 3 RelaxedPrecision 
                                                      OpMemberDecorate %18 3 Offset 18 
                                                      OpMemberDecorate %18 4 Offset 18 
                                                      OpMemberDecorate %18 5 RelaxedPrecision 
                                                      OpMemberDecorate %18 5 Offset 18 
                                                      OpMemberDecorate %18 6 RelaxedPrecision 
                                                      OpMemberDecorate %18 6 Offset 18 
                                                      OpMemberDecorate %18 7 RelaxedPrecision 
                                                      OpMemberDecorate %18 7 Offset 18 
                                                      OpMemberDecorate %18 8 RelaxedPrecision 
                                                      OpMemberDecorate %18 8 Offset 18 
                                                      OpMemberDecorate %18 9 RelaxedPrecision 
                                                      OpMemberDecorate %18 9 Offset 18 
                                                      OpMemberDecorate %18 10 RelaxedPrecision 
                                                      OpMemberDecorate %18 10 Offset 18 
                                                      OpMemberDecorate %18 11 RelaxedPrecision 
                                                      OpMemberDecorate %18 11 Offset 18 
                                                      OpDecorate %18 Block 
                                                      OpDecorate %20 DescriptorSet 20 
                                                      OpDecorate %20 Binding 20 
                                                      OpDecorate %35 RelaxedPrecision 
                                                      OpDecorate %43 RelaxedPrecision 
                                                      OpDecorate %44 RelaxedPrecision 
                                                      OpDecorate %48 RelaxedPrecision 
                                                      OpDecorate %49 RelaxedPrecision 
                                                      OpDecorate %50 RelaxedPrecision 
                                                      OpDecorate %51 RelaxedPrecision 
                                                      OpDecorate %52 RelaxedPrecision 
                                                      OpDecorate %53 RelaxedPrecision 
                                                      OpDecorate %54 RelaxedPrecision 
                                                      OpDecorate %55 RelaxedPrecision 
                                                      OpDecorate %56 RelaxedPrecision 
                                                      OpDecorate %57 RelaxedPrecision 
                                                      OpDecorate %58 RelaxedPrecision 
                                                      OpDecorate %59 RelaxedPrecision 
                                                      OpDecorate %60 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD1 Location 63 
                                                      OpDecorate %67 RelaxedPrecision 
                                                      OpDecorate %68 RelaxedPrecision 
                                                      OpDecorate %69 RelaxedPrecision 
                                                      OpDecorate %70 RelaxedPrecision 
                                                      OpDecorate %74 RelaxedPrecision 
                                                      OpDecorate %75 RelaxedPrecision 
                                                      OpDecorate %76 RelaxedPrecision 
                                                      OpDecorate %77 RelaxedPrecision 
                                                      OpDecorate %80 RelaxedPrecision 
                                                      OpDecorate %82 RelaxedPrecision 
                                                      OpDecorate %83 RelaxedPrecision 
                                                      OpDecorate %84 RelaxedPrecision 
                                                      OpDecorate %88 RelaxedPrecision 
                                                      OpDecorate %89 RelaxedPrecision 
                                                      OpDecorate %92 RelaxedPrecision 
                                                      OpDecorate %96 RelaxedPrecision 
                                                      OpDecorate %97 RelaxedPrecision 
                                                      OpDecorate %102 RelaxedPrecision 
                                                      OpDecorate %104 RelaxedPrecision 
                                                      OpDecorate %109 RelaxedPrecision 
                                                      OpDecorate %118 RelaxedPrecision 
                                                      OpDecorate %119 RelaxedPrecision 
                                                      OpDecorate %121 RelaxedPrecision 
                                                      OpDecorate %122 RelaxedPrecision 
                                                      OpDecorate %129 RelaxedPrecision 
                                                      OpDecorate %130 RelaxedPrecision 
                                                      OpDecorate %133 RelaxedPrecision 
                                                      OpDecorate %135 RelaxedPrecision 
                                                      OpDecorate %136 RelaxedPrecision 
                                                      OpDecorate %137 RelaxedPrecision 
                                                      OpDecorate %141 RelaxedPrecision 
                                                      OpDecorate %142 RelaxedPrecision 
                                                      OpDecorate %143 RelaxedPrecision 
                                                      OpDecorate %144 RelaxedPrecision 
                                                      OpDecorate %212 DescriptorSet 212 
                                                      OpDecorate %212 Binding 212 
                                                      OpDecorate %216 DescriptorSet 216 
                                                      OpDecorate %216 Binding 216 
                                                      OpDecorate %228 RelaxedPrecision 
                                                      OpDecorate %229 RelaxedPrecision 
                                                      OpDecorate %233 RelaxedPrecision 
                                                      OpDecorate %234 RelaxedPrecision 
                                                      OpDecorate %236 RelaxedPrecision 
                                                      OpDecorate %237 RelaxedPrecision 
                                                      OpDecorate %238 RelaxedPrecision 
                                                      OpDecorate %241 RelaxedPrecision 
                                                      OpDecorate %245 RelaxedPrecision 
                                                      OpDecorate %246 RelaxedPrecision 
                                                      OpDecorate %247 RelaxedPrecision 
                                                      OpDecorate %250 RelaxedPrecision 
                                                      OpDecorate %251 RelaxedPrecision 
                                                      OpDecorate %253 RelaxedPrecision 
                                                      OpDecorate %255 RelaxedPrecision 
                                                      OpDecorate %257 RelaxedPrecision 
                                                      OpDecorate %258 RelaxedPrecision 
                                                      OpDecorate %259 RelaxedPrecision 
                                                      OpDecorate %260 RelaxedPrecision 
                                                      OpDecorate %262 RelaxedPrecision 
                                                      OpDecorate %263 RelaxedPrecision 
                                                      OpDecorate %265 RelaxedPrecision 
                                                      OpDecorate %266 RelaxedPrecision 
                                                      OpDecorate %268 RelaxedPrecision 
                                                      OpDecorate %269 RelaxedPrecision 
                                                      OpDecorate %270 RelaxedPrecision 
                                                      OpDecorate %271 RelaxedPrecision 
                                                      OpDecorate %274 RelaxedPrecision 
                                                      OpDecorate %275 RelaxedPrecision 
                                                      OpDecorate %277 RelaxedPrecision 
                                                      OpDecorate %279 RelaxedPrecision 
                                                      OpDecorate %280 RelaxedPrecision 
                                                      OpDecorate %281 RelaxedPrecision 
                                                      OpDecorate %282 RelaxedPrecision 
                                                      OpDecorate %283 RelaxedPrecision 
                                                      OpDecorate %284 RelaxedPrecision 
                                                      OpDecorate %285 RelaxedPrecision 
                                                      OpDecorate %287 RelaxedPrecision 
                                                      OpDecorate %288 RelaxedPrecision 
                                                      OpDecorate %289 RelaxedPrecision 
                                                      OpDecorate %290 RelaxedPrecision 
                                                      OpDecorate %292 RelaxedPrecision 
                                                      OpDecorate %293 RelaxedPrecision 
                                                      OpDecorate %296 RelaxedPrecision 
                                                      OpDecorate %297 RelaxedPrecision 
                                                      OpDecorate %298 RelaxedPrecision 
                                                      OpDecorate %301 RelaxedPrecision 
                                                      OpDecorate %302 RelaxedPrecision 
                                                      OpDecorate %303 RelaxedPrecision 
                                                      OpDecorate %305 RelaxedPrecision 
                                                      OpDecorate %306 RelaxedPrecision 
                                                      OpDecorate %307 RelaxedPrecision 
                                                      OpDecorate %308 RelaxedPrecision 
                                                      OpDecorate %310 RelaxedPrecision 
                                                      OpDecorate %311 RelaxedPrecision 
                                                      OpDecorate %312 RelaxedPrecision 
                                                      OpDecorate %313 RelaxedPrecision 
                                                      OpDecorate %314 RelaxedPrecision 
                                                      OpDecorate %315 RelaxedPrecision 
                                                      OpDecorate %317 RelaxedPrecision 
                                                      OpDecorate %318 RelaxedPrecision 
                                                      OpDecorate %319 RelaxedPrecision 
                                                      OpDecorate %320 RelaxedPrecision 
                                                      OpDecorate %321 RelaxedPrecision 
                                                      OpDecorate %322 RelaxedPrecision 
                                                      OpDecorate %323 RelaxedPrecision 
                                                      OpDecorate %324 RelaxedPrecision 
                                                      OpDecorate %325 RelaxedPrecision 
                                                      OpDecorate %326 RelaxedPrecision 
                                                      OpDecorate %327 RelaxedPrecision 
                                                      OpDecorate %327 DescriptorSet 327 
                                                      OpDecorate %327 Binding 327 
                                                      OpDecorate %328 RelaxedPrecision 
                                                      OpDecorate %329 RelaxedPrecision 
                                                      OpDecorate %329 DescriptorSet 329 
                                                      OpDecorate %329 Binding 329 
                                                      OpDecorate %330 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD0 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD0 Location 333 
                                                      OpDecorate %334 RelaxedPrecision 
                                                      OpDecorate %335 RelaxedPrecision 
                                                      OpDecorate %336 RelaxedPrecision 
                                                      OpDecorate %337 RelaxedPrecision 
                                                      OpDecorate %340 RelaxedPrecision 
                                                      OpDecorate %341 RelaxedPrecision 
                                                      OpDecorate %342 RelaxedPrecision 
                                                      OpDecorate %343 RelaxedPrecision 
                                                      OpDecorate %344 RelaxedPrecision 
                                                      OpDecorate %345 RelaxedPrecision 
                                                      OpDecorate %346 RelaxedPrecision 
                                                      OpDecorate %349 RelaxedPrecision 
                                                      OpDecorate %350 RelaxedPrecision 
                                                      OpDecorate %351 RelaxedPrecision 
                                                      OpDecorate %352 RelaxedPrecision 
                                                      OpDecorate %356 RelaxedPrecision 
                                                      OpDecorate %356 Location 356 
                                               %2 = OpTypeVoid 
                                               %3 = OpTypeFunction %2 
                                               %6 = OpTypeFloat 32 
                                               %7 = OpTypeVector %6 3 
                                               %8 = OpTypePointer Private %7 
                                Private f32_3* %9 = OpVariable Private 
                                              %10 = OpTypePointer Input %7 
                        Input f32_3* vs_TEXCOORD2 = OpVariable Input 
                                              %14 = OpTypeVector %6 4 
                                              %15 = OpTypeInt 32 0 
                                          u32 %16 = OpConstant 4 
                                              %17 = OpTypeArray %14 %16 
                                              %18 = OpTypeStruct %7 %14 %14 %14 %17 %14 %6 %14 %14 %6 %6 %6 
                                              %19 = OpTypePointer Uniform %18 
Uniform struct {f32_3; f32_4; f32_4; f32_4; f32_4[4]; f32_4; f32; f32_4; f32_4; f32; f32; f32;}* %20 = OpVariable Uniform 
                                              %21 = OpTypeInt 32 1 
                                          i32 %22 = OpConstant 0 
                                              %23 = OpTypePointer Uniform %7 
                                              %27 = OpTypePointer Private %6 
                                 Private f32* %28 = OpVariable Private 
                                              %34 = OpTypePointer Private %14 
                               Private f32_4* %35 = OpVariable Private 
                                          i32 %40 = OpConstant 1 
                                              %41 = OpTypePointer Uniform %14 
                                 Private f32* %48 = OpVariable Private 
                        Input f32_3* vs_TEXCOORD1 = OpVariable Input 
                               Private f32_3* %69 = OpVariable Private 
                                          u32 %78 = OpConstant 0 
                                          u32 %85 = OpConstant 1 
                                              %87 = OpTypeVector %6 2 
                                          f32 %90 = OpConstant 3.674022E-40 
                                        f32_2 %91 = OpConstantComposite %90 %90 
                                          i32 %99 = OpConstant 6 
                                             %100 = OpTypePointer Uniform %6 
                                         f32 %103 = OpConstant 3.674022E-40 
                                         i32 %116 = OpConstant 11 
                                         f32 %120 = OpConstant 3.674022E-40 
                                         f32 %126 = OpConstant 3.674022E-40 
                                Private f32* %133 = OpVariable Private 
                                             %138 = OpTypePointer Private %87 
                              Private f32_2* %139 = OpVariable Private 
                                         f32 %146 = OpConstant 3.674022E-40 
                                         f32 %163 = OpConstant 3.674022E-40 
                                         f32 %165 = OpConstant 3.674022E-40 
                                         i32 %182 = OpConstant 4 
                                         i32 %195 = OpConstant 2 
                                         i32 %205 = OpConstant 3 
                                             %210 = OpTypeImage %6 Dim2D 0 0 0 1 Unknown 
                                             %211 = OpTypePointer UniformConstant %210 
        UniformConstant read_only Texture2D* %212 = OpVariable UniformConstant 
                                             %214 = OpTypeSampler 
                                             %215 = OpTypePointer UniformConstant %214 
                    UniformConstant sampler* %216 = OpVariable UniformConstant 
                                             %218 = OpTypeSampledImage %210 
                                         u32 %222 = OpConstant 3 
                                         i32 %243 = OpConstant 10 
                                         i32 %248 = OpConstant 9 
                                Private f32* %253 = OpVariable Private 
                                Private f32* %260 = OpVariable Private 
                                         i32 %294 = OpConstant 7 
                                         i32 %299 = OpConstant 8 
                              Private f32_3* %313 = OpVariable Private 
                              Private f32_3* %326 = OpVariable Private 
        UniformConstant read_only Texture2D* %327 = OpVariable UniformConstant 
                    UniformConstant sampler* %329 = OpVariable UniformConstant 
                                             %332 = OpTypePointer Input %87 
                        Input f32_2* vs_TEXCOORD0 = OpVariable Input 
                                         i32 %338 = OpConstant 5 
                                             %355 = OpTypePointer Output %14 
                               Output f32_4* %356 = OpVariable Output 
                                             %360 = OpTypePointer Output %6 
                                          void %4 = OpFunction None %3 
                                               %5 = OpLabel 
                                        f32_3 %12 = OpLoad vs_TEXCOORD2 
                                        f32_3 %13 = OpFNegate %12 
                               Uniform f32_3* %24 = OpAccessChain %20 %22 
                                        f32_3 %25 = OpLoad %24 
                                        f32_3 %26 = OpFAdd %13 %25 
                                                      OpStore %9 %26 
                                        f32_3 %29 = OpLoad %9 
                                        f32_3 %30 = OpLoad %9 
                                          f32 %31 = OpDot %29 %30 
                                                      OpStore %28 %31 
                                          f32 %32 = OpLoad %28 
                                          f32 %33 = OpExtInst %1 32 %32 
                                                      OpStore %28 %33 
                                        f32_3 %36 = OpLoad %9 
                                          f32 %37 = OpLoad %28 
                                        f32_3 %38 = OpCompositeConstruct %37 %37 %37 
                                        f32_3 %39 = OpFMul %36 %38 
                               Uniform f32_4* %42 = OpAccessChain %20 %40 
                                        f32_4 %43 = OpLoad %42 
                                        f32_3 %44 = OpVectorShuffle %43 %43 0 1 2 
                                        f32_3 %45 = OpFAdd %39 %44 
                                        f32_4 %46 = OpLoad %35 
                                        f32_4 %47 = OpVectorShuffle %46 %45 4 5 6 3 
                                                      OpStore %35 %47 
                                        f32_4 %49 = OpLoad %35 
                                        f32_3 %50 = OpVectorShuffle %49 %49 0 1 2 
                                        f32_4 %51 = OpLoad %35 
                                        f32_3 %52 = OpVectorShuffle %51 %51 0 1 2 
                                          f32 %53 = OpDot %50 %52 
                                                      OpStore %48 %53 
                                          f32 %54 = OpLoad %48 
                                          f32 %55 = OpExtInst %1 32 %54 
                                                      OpStore %48 %55 
                                          f32 %56 = OpLoad %48 
                                        f32_3 %57 = OpCompositeConstruct %56 %56 %56 
                                        f32_4 %58 = OpLoad %35 
                                        f32_3 %59 = OpVectorShuffle %58 %58 0 1 2 
                                        f32_3 %60 = OpFMul %57 %59 
                                        f32_4 %61 = OpLoad %35 
                                        f32_4 %62 = OpVectorShuffle %61 %60 4 5 6 3 
                                                      OpStore %35 %62 
                                        f32_3 %64 = OpLoad vs_TEXCOORD1 
                                        f32_3 %65 = OpLoad vs_TEXCOORD1 
                                          f32 %66 = OpDot %64 %65 
                                                      OpStore %48 %66 
                                          f32 %67 = OpLoad %48 
                                          f32 %68 = OpExtInst %1 32 %67 
                                                      OpStore %48 %68 
                                          f32 %70 = OpLoad %48 
                                        f32_3 %71 = OpCompositeConstruct %70 %70 %70 
                                        f32_3 %72 = OpLoad vs_TEXCOORD1 
                                        f32_3 %73 = OpFMul %71 %72 
                                                      OpStore %69 %73 
                                        f32_3 %74 = OpLoad %69 
                                        f32_4 %75 = OpLoad %35 
                                        f32_3 %76 = OpVectorShuffle %75 %75 0 1 2 
                                          f32 %77 = OpDot %74 %76 
                                 Private f32* %79 = OpAccessChain %35 %78 
                                                      OpStore %79 %77 
                                        f32_3 %80 = OpLoad %69 
                               Uniform f32_4* %81 = OpAccessChain %20 %40 
                                        f32_4 %82 = OpLoad %81 
                                        f32_3 %83 = OpVectorShuffle %82 %82 0 1 2 
                                          f32 %84 = OpDot %80 %83 
                                 Private f32* %86 = OpAccessChain %35 %85 
                                                      OpStore %86 %84 
                                        f32_4 %88 = OpLoad %35 
                                        f32_2 %89 = OpVectorShuffle %88 %88 0 1 
                                        f32_2 %92 = OpExtInst %1 40 %89 %91 
                                        f32_4 %93 = OpLoad %35 
                                        f32_4 %94 = OpVectorShuffle %93 %92 4 5 2 3 
                                                      OpStore %35 %94 
                                 Private f32* %95 = OpAccessChain %35 %78 
                                          f32 %96 = OpLoad %95 
                                          f32 %97 = OpExtInst %1 30 %96 
                                 Private f32* %98 = OpAccessChain %9 %78 
                                                      OpStore %98 %97 
                                Uniform f32* %101 = OpAccessChain %20 %99 
                                         f32 %102 = OpLoad %101 
                                         f32 %104 = OpFMul %102 %103 
                                Private f32* %105 = OpAccessChain %35 %78 
                                                      OpStore %105 %104 
                                Private f32* %106 = OpAccessChain %9 %78 
                                         f32 %107 = OpLoad %106 
                                Private f32* %108 = OpAccessChain %35 %78 
                                         f32 %109 = OpLoad %108 
                                         f32 %110 = OpFMul %107 %109 
                                Private f32* %111 = OpAccessChain %9 %78 
                                                      OpStore %111 %110 
                                Private f32* %112 = OpAccessChain %9 %78 
                                         f32 %113 = OpLoad %112 
                                         f32 %114 = OpExtInst %1 29 %113 
                                Private f32* %115 = OpAccessChain %9 %78 
                                                      OpStore %115 %114 
                                Uniform f32* %117 = OpAccessChain %20 %116 
                                         f32 %118 = OpLoad %117 
                                         f32 %119 = OpFNegate %118 
                                         f32 %121 = OpFMul %119 %120 
                                         f32 %122 = OpFAdd %121 %120 
                                Private f32* %123 = OpAccessChain %35 %78 
                                                      OpStore %123 %122 
                                Private f32* %124 = OpAccessChain %9 %78 
                                         f32 %125 = OpLoad %124 
                                         f32 %127 = OpFMul %125 %126 
                                Private f32* %128 = OpAccessChain %35 %78 
                                         f32 %129 = OpLoad %128 
                                         f32 %130 = OpFNegate %129 
                                         f32 %131 = OpFAdd %127 %130 
                                Private f32* %132 = OpAccessChain %9 %78 
                                                      OpStore %132 %131 
                                Uniform f32* %134 = OpAccessChain %20 %116 
                                         f32 %135 = OpLoad %134 
                                         f32 %136 = OpFMul %135 %120 
                                         f32 %137 = OpFAdd %136 %120 
                                                      OpStore %133 %137 
                                Private f32* %140 = OpAccessChain %35 %78 
                                         f32 %141 = OpLoad %140 
                                         f32 %142 = OpFNegate %141 
                                         f32 %143 = OpLoad %133 
                                         f32 %144 = OpFAdd %142 %143 
                                Private f32* %145 = OpAccessChain %139 %78 
                                                      OpStore %145 %144 
                                Private f32* %147 = OpAccessChain %139 %78 
                                         f32 %148 = OpLoad %147 
                                         f32 %149 = OpFDiv %146 %148 
                                Private f32* %150 = OpAccessChain %139 %78 
                                                      OpStore %150 %149 
                                Private f32* %151 = OpAccessChain %139 %78 
                                         f32 %152 = OpLoad %151 
                                Private f32* %153 = OpAccessChain %9 %78 
                                         f32 %154 = OpLoad %153 
                                         f32 %155 = OpFMul %152 %154 
                                Private f32* %156 = OpAccessChain %9 %78 
                                                      OpStore %156 %155 
                                Private f32* %157 = OpAccessChain %9 %78 
                                         f32 %158 = OpLoad %157 
                                         f32 %159 = OpExtInst %1 43 %158 %90 %146 
                                Private f32* %160 = OpAccessChain %9 %78 
                                                      OpStore %160 %159 
                                Private f32* %161 = OpAccessChain %9 %78 
                                         f32 %162 = OpLoad %161 
                                         f32 %164 = OpFMul %162 %163 
                                         f32 %166 = OpFAdd %164 %165 
                                Private f32* %167 = OpAccessChain %139 %78 
                                                      OpStore %167 %166 
                                Private f32* %168 = OpAccessChain %9 %78 
                                         f32 %169 = OpLoad %168 
                                Private f32* %170 = OpAccessChain %9 %78 
                                         f32 %171 = OpLoad %170 
                                         f32 %172 = OpFMul %169 %171 
                                Private f32* %173 = OpAccessChain %9 %78 
                                                      OpStore %173 %172 
                                Private f32* %174 = OpAccessChain %9 %78 
                                         f32 %175 = OpLoad %174 
                                Private f32* %176 = OpAccessChain %139 %78 
                                         f32 %177 = OpLoad %176 
                                         f32 %178 = OpFMul %175 %177 
                                Private f32* %179 = OpAccessChain %9 %78 
                                                      OpStore %179 %178 
                                       f32_3 %180 = OpLoad vs_TEXCOORD2 
                                       f32_2 %181 = OpVectorShuffle %180 %180 1 1 
                              Uniform f32_4* %183 = OpAccessChain %20 %182 %40 
                                       f32_4 %184 = OpLoad %183 
                                       f32_2 %185 = OpVectorShuffle %184 %184 0 1 
                                       f32_2 %186 = OpFMul %181 %185 
                                                      OpStore %139 %186 
                              Uniform f32_4* %187 = OpAccessChain %20 %182 %22 
                                       f32_4 %188 = OpLoad %187 
                                       f32_2 %189 = OpVectorShuffle %188 %188 0 1 
                                       f32_3 %190 = OpLoad vs_TEXCOORD2 
                                       f32_2 %191 = OpVectorShuffle %190 %190 0 0 
                                       f32_2 %192 = OpFMul %189 %191 
                                       f32_2 %193 = OpLoad %139 
                                       f32_2 %194 = OpFAdd %192 %193 
                                                      OpStore %139 %194 
                              Uniform f32_4* %196 = OpAccessChain %20 %182 %195 
                                       f32_4 %197 = OpLoad %196 
                                       f32_2 %198 = OpVectorShuffle %197 %197 0 1 
                                       f32_3 %199 = OpLoad vs_TEXCOORD2 
                                       f32_2 %200 = OpVectorShuffle %199 %199 2 2 
                                       f32_2 %201 = OpFMul %198 %200 
                                       f32_2 %202 = OpLoad %139 
                                       f32_2 %203 = OpFAdd %201 %202 
                                                      OpStore %139 %203 
                                       f32_2 %204 = OpLoad %139 
                              Uniform f32_4* %206 = OpAccessChain %20 %182 %205 
                                       f32_4 %207 = OpLoad %206 
                                       f32_2 %208 = OpVectorShuffle %207 %207 0 1 
                                       f32_2 %209 = OpFAdd %204 %208 
                                                      OpStore %139 %209 
                         read_only Texture2D %213 = OpLoad %212 
                                     sampler %217 = OpLoad %216 
                  read_only Texture2DSampled %219 = OpSampledImage %213 %217 
                                       f32_2 %220 = OpLoad %139 
                                       f32_4 %221 = OpImageSampleImplicitLod %219 %220 
                                         f32 %223 = OpCompositeExtract %221 3 
                                Private f32* %224 = OpAccessChain %139 %78 
                                                      OpStore %224 %223 
                                       f32_2 %225 = OpLoad %139 
                                       f32_3 %226 = OpVectorShuffle %225 %225 0 0 0 
                              Uniform f32_4* %227 = OpAccessChain %20 %195 
                                       f32_4 %228 = OpLoad %227 
                                       f32_3 %229 = OpVectorShuffle %228 %228 0 1 2 
                                       f32_3 %230 = OpFMul %226 %229 
                                       f32_4 %231 = OpLoad %35 
                                       f32_4 %232 = OpVectorShuffle %231 %230 4 1 5 6 
                                                      OpStore %35 %232 
                                       f32_4 %233 = OpLoad %35 
                                       f32_3 %234 = OpVectorShuffle %233 %233 0 2 3 
                              Uniform f32_4* %235 = OpAccessChain %20 %205 
                                       f32_4 %236 = OpLoad %235 
                                       f32_3 %237 = OpVectorShuffle %236 %236 0 1 2 
                                       f32_3 %238 = OpFMul %234 %237 
                                                      OpStore %69 %238 
                                       f32_3 %239 = OpLoad %9 
                                       f32_3 %240 = OpVectorShuffle %239 %239 0 0 0 
                                       f32_3 %241 = OpLoad %69 
                                       f32_3 %242 = OpFMul %240 %241 
                                                      OpStore %9 %242 
                                Uniform f32* %244 = OpAccessChain %20 %243 
                                         f32 %245 = OpLoad %244 
                                         f32 %246 = OpFNegate %245 
                                         f32 %247 = OpFMul %246 %120 
                                Uniform f32* %249 = OpAccessChain %20 %248 
                                         f32 %250 = OpLoad %249 
                                         f32 %251 = OpFAdd %247 %250 
                                Private f32* %252 = OpAccessChain %69 %78 
                                                      OpStore %252 %251 
                                Private f32* %254 = OpAccessChain %35 %85 
                                         f32 %255 = OpLoad %254 
                                Private f32* %256 = OpAccessChain %69 %78 
                                         f32 %257 = OpLoad %256 
                                         f32 %258 = OpFNegate %257 
                                         f32 %259 = OpFAdd %255 %258 
                                                      OpStore %253 %259 
                                Uniform f32* %261 = OpAccessChain %20 %243 
                                         f32 %262 = OpLoad %261 
                                         f32 %263 = OpFMul %262 %120 
                                Uniform f32* %264 = OpAccessChain %20 %248 
                                         f32 %265 = OpLoad %264 
                                         f32 %266 = OpFAdd %263 %265 
                                                      OpStore %260 %266 
                                Private f32* %267 = OpAccessChain %69 %78 
                                         f32 %268 = OpLoad %267 
                                         f32 %269 = OpFNegate %268 
                                         f32 %270 = OpLoad %260 
                                         f32 %271 = OpFAdd %269 %270 
                                Private f32* %272 = OpAccessChain %69 %78 
                                                      OpStore %272 %271 
                                Private f32* %273 = OpAccessChain %69 %78 
                                         f32 %274 = OpLoad %273 
                                         f32 %275 = OpFDiv %146 %274 
                                Private f32* %276 = OpAccessChain %69 %78 
                                                      OpStore %276 %275 
                                         f32 %277 = OpLoad %253 
                                Private f32* %278 = OpAccessChain %69 %78 
                                         f32 %279 = OpLoad %278 
                                         f32 %280 = OpFMul %277 %279 
                                                      OpStore %253 %280 
                                         f32 %281 = OpLoad %253 
                                         f32 %282 = OpExtInst %1 43 %281 %90 %146 
                                                      OpStore %253 %282 
                                         f32 %283 = OpLoad %253 
                                         f32 %284 = OpFMul %283 %163 
                                         f32 %285 = OpFAdd %284 %165 
                                Private f32* %286 = OpAccessChain %69 %78 
                                                      OpStore %286 %285 
                                         f32 %287 = OpLoad %253 
                                         f32 %288 = OpLoad %253 
                                         f32 %289 = OpFMul %287 %288 
                                                      OpStore %253 %289 
                                         f32 %290 = OpLoad %253 
                                Private f32* %291 = OpAccessChain %69 %78 
                                         f32 %292 = OpLoad %291 
                                         f32 %293 = OpFMul %290 %292 
                                                      OpStore %253 %293 
                              Uniform f32_4* %295 = OpAccessChain %20 %294 
                                       f32_4 %296 = OpLoad %295 
                                       f32_3 %297 = OpVectorShuffle %296 %296 0 1 2 
                                       f32_3 %298 = OpFNegate %297 
                              Uniform f32_4* %300 = OpAccessChain %20 %299 
                                       f32_4 %301 = OpLoad %300 
                                       f32_3 %302 = OpVectorShuffle %301 %301 0 1 2 
                                       f32_3 %303 = OpFAdd %298 %302 
                                                      OpStore %69 %303 
                              Uniform f32_4* %304 = OpAccessChain %20 %299 
                                       f32_4 %305 = OpLoad %304 
                                       f32_3 %306 = OpVectorShuffle %305 %305 3 3 3 
                                       f32_3 %307 = OpLoad %69 
                                       f32_3 %308 = OpFMul %306 %307 
                              Uniform f32_4* %309 = OpAccessChain %20 %294 
                                       f32_4 %310 = OpLoad %309 
                                       f32_3 %311 = OpVectorShuffle %310 %310 0 1 2 
                                       f32_3 %312 = OpFAdd %308 %311 
                                                      OpStore %69 %312 
                                       f32_3 %314 = OpLoad %69 
                                       f32_3 %315 = OpFNegate %314 
                              Uniform f32_4* %316 = OpAccessChain %20 %294 
                                       f32_4 %317 = OpLoad %316 
                                       f32_3 %318 = OpVectorShuffle %317 %317 0 1 2 
                                       f32_3 %319 = OpFAdd %315 %318 
                                                      OpStore %313 %319 
                                         f32 %320 = OpLoad %253 
                                       f32_3 %321 = OpCompositeConstruct %320 %320 %320 
                                       f32_3 %322 = OpLoad %313 
                                       f32_3 %323 = OpFMul %321 %322 
                                       f32_3 %324 = OpLoad %69 
                                       f32_3 %325 = OpFAdd %323 %324 
                                                      OpStore %69 %325 
                         read_only Texture2D %328 = OpLoad %327 
                                     sampler %330 = OpLoad %329 
                  read_only Texture2DSampled %331 = OpSampledImage %328 %330 
                                       f32_2 %334 = OpLoad vs_TEXCOORD0 
                                       f32_4 %335 = OpImageSampleImplicitLod %331 %334 
                                       f32_3 %336 = OpVectorShuffle %335 %335 0 1 2 
                                                      OpStore %326 %336 
                                       f32_3 %337 = OpLoad %326 
                              Uniform f32_4* %339 = OpAccessChain %20 %338 
                                       f32_4 %340 = OpLoad %339 
                                       f32_3 %341 = OpVectorShuffle %340 %340 0 1 2 
                                       f32_3 %342 = OpFMul %337 %341 
                                                      OpStore %313 %342 
                                       f32_4 %343 = OpLoad %35 
                                       f32_3 %344 = OpVectorShuffle %343 %343 0 2 3 
                                       f32_3 %345 = OpLoad %313 
                                       f32_3 %346 = OpFMul %344 %345 
                                       f32_4 %347 = OpLoad %35 
                                       f32_4 %348 = OpVectorShuffle %347 %346 4 5 6 3 
                                                      OpStore %35 %348 
                                       f32_4 %349 = OpLoad %35 
                                       f32_3 %350 = OpVectorShuffle %349 %349 0 1 2 
                                       f32_3 %351 = OpLoad %69 
                                       f32_3 %352 = OpFMul %350 %351 
                                       f32_3 %353 = OpLoad %9 
                                       f32_3 %354 = OpFAdd %352 %353 
                                                      OpStore %9 %354 
                                       f32_3 %357 = OpLoad %9 
                                       f32_4 %358 = OpLoad %356 
                                       f32_4 %359 = OpVectorShuffle %358 %357 4 5 6 3 
                                                      OpStore %356 %359 
                                 Output f32* %361 = OpAccessChain %356 %222 
                                                      OpStore %361 %146 
                                                      OpReturn
                                                      OpFunctionEnd
"
}
SubProgram "vulkan hw_tier01 " {
Keywords { "DIRECTIONAL_COOKIE" }
"; SPIR-V
; Version: 1.0
; Generator: Khronos Glslang Reference Front End; 6
; Bound: 209
; Schema: 0
                                                      OpCapability Shader 
                                               %1 = OpExtInstImport "GLSL.std.450" 
                                                      OpMemoryModel Logical GLSL450 
                                                      OpEntryPoint Vertex %4 "main" %11 %75 %85 %101 %106 %137 %143 %190 %200 
                                                      OpName vs_TEXCOORD0 "vs_TEXCOORD0" 
                                                      OpName vs_TEXCOORD1 "vs_TEXCOORD1" 
                                                      OpName vs_TEXCOORD2 "vs_TEXCOORD2" 
                                                      OpName vs_TEXCOORD3 "vs_TEXCOORD3" 
                                                      OpName vs_TEXCOORD4 "vs_TEXCOORD4" 
                                                      OpDecorate %11 Location 11 
                                                      OpDecorate %16 ArrayStride 16 
                                                      OpDecorate %17 ArrayStride 17 
                                                      OpDecorate %18 ArrayStride 18 
                                                      OpDecorate %19 ArrayStride 19 
                                                      OpMemberDecorate %20 0 Offset 20 
                                                      OpMemberDecorate %20 1 Offset 20 
                                                      OpMemberDecorate %20 2 Offset 20 
                                                      OpMemberDecorate %20 3 Offset 20 
                                                      OpMemberDecorate %20 4 Offset 20 
                                                      OpDecorate %20 Block 
                                                      OpDecorate %22 DescriptorSet 22 
                                                      OpDecorate %22 Binding 22 
                                                      OpMemberDecorate %73 0 BuiltIn 73 
                                                      OpMemberDecorate %73 1 BuiltIn 73 
                                                      OpMemberDecorate %73 2 BuiltIn 73 
                                                      OpDecorate %73 Block 
                                                      OpDecorate %85 Location 85 
                                                      OpDecorate vs_TEXCOORD0 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD0 Location 101 
                                                      OpDecorate %106 Location 106 
                                                      OpDecorate vs_TEXCOORD1 Location 137 
                                                      OpDecorate vs_TEXCOORD2 Location 143 
                                                      OpDecorate vs_TEXCOORD3 Location 190 
                                                      OpDecorate vs_TEXCOORD4 Location 200 
                                               %2 = OpTypeVoid 
                                               %3 = OpTypeFunction %2 
                                               %6 = OpTypeFloat 32 
                                               %7 = OpTypeVector %6 4 
                                               %8 = OpTypePointer Private %7 
                                Private f32_4* %9 = OpVariable Private 
                                              %10 = OpTypePointer Input %7 
                                 Input f32_4* %11 = OpVariable Input 
                                              %14 = OpTypeInt 32 0 
                                          u32 %15 = OpConstant 4 
                                              %16 = OpTypeArray %7 %15 
                                              %17 = OpTypeArray %7 %15 
                                              %18 = OpTypeArray %7 %15 
                                              %19 = OpTypeArray %7 %15 
                                              %20 = OpTypeStruct %16 %17 %18 %19 %7 
                                              %21 = OpTypePointer Uniform %20 
Uniform struct {f32_4[4]; f32_4[4]; f32_4[4]; f32_4[4]; f32_4;}* %22 = OpVariable Uniform 
                                              %23 = OpTypeInt 32 1 
                                          i32 %24 = OpConstant 0 
                                          i32 %25 = OpConstant 1 
                                              %26 = OpTypePointer Uniform %7 
                                          i32 %37 = OpConstant 2 
                               Private f32_4* %45 = OpVariable Private 
                                          i32 %47 = OpConstant 3 
                               Private f32_4* %51 = OpVariable Private 
                                          u32 %71 = OpConstant 1 
                                              %72 = OpTypeArray %6 %71 
                                              %73 = OpTypeStruct %7 %6 %72 
                                              %74 = OpTypePointer Output %73 
         Output struct {f32_4; f32; f32[1];}* %75 = OpVariable Output 
                                              %83 = OpTypePointer Output %7 
                                 Input f32_4* %85 = OpVariable Input 
                                              %86 = OpTypeVector %6 2 
                                          i32 %89 = OpConstant 4 
                                             %100 = OpTypePointer Output %86 
                       Output f32_2* vs_TEXCOORD0 = OpVariable Output 
                                             %104 = OpTypeVector %6 3 
                                             %105 = OpTypePointer Input %104 
                                Input f32_3* %106 = OpVariable Input 
                                         u32 %112 = OpConstant 0 
                                             %113 = OpTypePointer Private %6 
                                         u32 %126 = OpConstant 2 
                                Private f32* %128 = OpVariable Private 
                                             %136 = OpTypePointer Output %104 
                       Output f32_3* vs_TEXCOORD1 = OpVariable Output 
                       Output f32_3* vs_TEXCOORD2 = OpVariable Output 
                       Output f32_2* vs_TEXCOORD3 = OpVariable Output 
                       Output f32_4* vs_TEXCOORD4 = OpVariable Output 
                                         f32 %201 = OpConstant 3.674022E-40 
                                       f32_4 %202 = OpConstantComposite %201 %201 %201 %201 
                                             %203 = OpTypePointer Output %6 
                                          void %4 = OpFunction None %3 
                                               %5 = OpLabel 
                                        f32_4 %12 = OpLoad %11 
                                        f32_4 %13 = OpVectorShuffle %12 %12 1 1 1 1 
                               Uniform f32_4* %27 = OpAccessChain %22 %24 %25 
                                        f32_4 %28 = OpLoad %27 
                                        f32_4 %29 = OpFMul %13 %28 
                                                      OpStore %9 %29 
                               Uniform f32_4* %30 = OpAccessChain %22 %24 %24 
                                        f32_4 %31 = OpLoad %30 
                                        f32_4 %32 = OpLoad %11 
                                        f32_4 %33 = OpVectorShuffle %32 %32 0 0 0 0 
                                        f32_4 %34 = OpFMul %31 %33 
                                        f32_4 %35 = OpLoad %9 
                                        f32_4 %36 = OpFAdd %34 %35 
                                                      OpStore %9 %36 
                               Uniform f32_4* %38 = OpAccessChain %22 %24 %37 
                                        f32_4 %39 = OpLoad %38 
                                        f32_4 %40 = OpLoad %11 
                                        f32_4 %41 = OpVectorShuffle %40 %40 2 2 2 2 
                                        f32_4 %42 = OpFMul %39 %41 
                                        f32_4 %43 = OpLoad %9 
                                        f32_4 %44 = OpFAdd %42 %43 
                                                      OpStore %9 %44 
                                        f32_4 %46 = OpLoad %9 
                               Uniform f32_4* %48 = OpAccessChain %22 %24 %47 
                                        f32_4 %49 = OpLoad %48 
                                        f32_4 %50 = OpFAdd %46 %49 
                                                      OpStore %45 %50 
                                        f32_4 %52 = OpLoad %45 
                                        f32_4 %53 = OpVectorShuffle %52 %52 1 1 1 1 
                               Uniform f32_4* %54 = OpAccessChain %22 %37 %25 
                                        f32_4 %55 = OpLoad %54 
                                        f32_4 %56 = OpFMul %53 %55 
                                                      OpStore %51 %56 
                               Uniform f32_4* %57 = OpAccessChain %22 %37 %24 
                                        f32_4 %58 = OpLoad %57 
                                        f32_4 %59 = OpLoad %45 
                                        f32_4 %60 = OpVectorShuffle %59 %59 0 0 0 0 
                                        f32_4 %61 = OpFMul %58 %60 
                                        f32_4 %62 = OpLoad %51 
                                        f32_4 %63 = OpFAdd %61 %62 
                                                      OpStore %51 %63 
                               Uniform f32_4* %64 = OpAccessChain %22 %37 %37 
                                        f32_4 %65 = OpLoad %64 
                                        f32_4 %66 = OpLoad %45 
                                        f32_4 %67 = OpVectorShuffle %66 %66 2 2 2 2 
                                        f32_4 %68 = OpFMul %65 %67 
                                        f32_4 %69 = OpLoad %51 
                                        f32_4 %70 = OpFAdd %68 %69 
                                                      OpStore %51 %70 
                               Uniform f32_4* %76 = OpAccessChain %22 %37 %47 
                                        f32_4 %77 = OpLoad %76 
                                        f32_4 %78 = OpLoad %45 
                                        f32_4 %79 = OpVectorShuffle %78 %78 3 3 3 3 
                                        f32_4 %80 = OpFMul %77 %79 
                                        f32_4 %81 = OpLoad %51 
                                        f32_4 %82 = OpFAdd %80 %81 
                                Output f32_4* %84 = OpAccessChain %75 %24 
                                                      OpStore %84 %82 
                                        f32_4 %87 = OpLoad %85 
                                        f32_2 %88 = OpVectorShuffle %87 %87 0 1 
                               Uniform f32_4* %90 = OpAccessChain %22 %89 
                                        f32_4 %91 = OpLoad %90 
                                        f32_2 %92 = OpVectorShuffle %91 %91 0 1 
                                        f32_2 %93 = OpFMul %88 %92 
                               Uniform f32_4* %94 = OpAccessChain %22 %89 
                                        f32_4 %95 = OpLoad %94 
                                        f32_2 %96 = OpVectorShuffle %95 %95 2 3 
                                        f32_2 %97 = OpFAdd %93 %96 
                                        f32_4 %98 = OpLoad %45 
                                        f32_4 %99 = OpVectorShuffle %98 %97 4 5 2 3 
                                                      OpStore %45 %99 
                                       f32_4 %102 = OpLoad %45 
                                       f32_2 %103 = OpVectorShuffle %102 %102 0 1 
                                                      OpStore vs_TEXCOORD0 %103 
                                       f32_3 %107 = OpLoad %106 
                              Uniform f32_4* %108 = OpAccessChain %22 %25 %24 
                                       f32_4 %109 = OpLoad %108 
                                       f32_3 %110 = OpVectorShuffle %109 %109 0 1 2 
                                         f32 %111 = OpDot %107 %110 
                                Private f32* %114 = OpAccessChain %45 %112 
                                                      OpStore %114 %111 
                                       f32_3 %115 = OpLoad %106 
                              Uniform f32_4* %116 = OpAccessChain %22 %25 %25 
                                       f32_4 %117 = OpLoad %116 
                                       f32_3 %118 = OpVectorShuffle %117 %117 0 1 2 
                                         f32 %119 = OpDot %115 %118 
                                Private f32* %120 = OpAccessChain %45 %71 
                                                      OpStore %120 %119 
                                       f32_3 %121 = OpLoad %106 
                              Uniform f32_4* %122 = OpAccessChain %22 %25 %37 
                                       f32_4 %123 = OpLoad %122 
                                       f32_3 %124 = OpVectorShuffle %123 %123 0 1 2 
                                         f32 %125 = OpDot %121 %124 
                                Private f32* %127 = OpAccessChain %45 %126 
                                                      OpStore %127 %125 
                                       f32_4 %129 = OpLoad %45 
                                       f32_3 %130 = OpVectorShuffle %129 %129 0 1 2 
                                       f32_4 %131 = OpLoad %45 
                                       f32_3 %132 = OpVectorShuffle %131 %131 0 1 2 
                                         f32 %133 = OpDot %130 %132 
                                                      OpStore %128 %133 
                                         f32 %134 = OpLoad %128 
                                         f32 %135 = OpExtInst %1 32 %134 
                                                      OpStore %128 %135 
                                         f32 %138 = OpLoad %128 
                                       f32_3 %139 = OpCompositeConstruct %138 %138 %138 
                                       f32_4 %140 = OpLoad %45 
                                       f32_3 %141 = OpVectorShuffle %140 %140 0 1 2 
                                       f32_3 %142 = OpFMul %139 %141 
                                                      OpStore vs_TEXCOORD1 %142 
                              Uniform f32_4* %144 = OpAccessChain %22 %24 %47 
                                       f32_4 %145 = OpLoad %144 
                                       f32_3 %146 = OpVectorShuffle %145 %145 0 1 2 
                                       f32_4 %147 = OpLoad %11 
                                       f32_3 %148 = OpVectorShuffle %147 %147 3 3 3 
                                       f32_3 %149 = OpFMul %146 %148 
                                       f32_4 %150 = OpLoad %9 
                                       f32_3 %151 = OpVectorShuffle %150 %150 0 1 2 
                                       f32_3 %152 = OpFAdd %149 %151 
                                                      OpStore vs_TEXCOORD2 %152 
                              Uniform f32_4* %153 = OpAccessChain %22 %24 %47 
                                       f32_4 %154 = OpLoad %153 
                                       f32_4 %155 = OpLoad %11 
                                       f32_4 %156 = OpVectorShuffle %155 %155 3 3 3 3 
                                       f32_4 %157 = OpFMul %154 %156 
                                       f32_4 %158 = OpLoad %9 
                                       f32_4 %159 = OpFAdd %157 %158 
                                                      OpStore %9 %159 
                                       f32_4 %160 = OpLoad %9 
                                       f32_2 %161 = OpVectorShuffle %160 %160 1 1 
                              Uniform f32_4* %162 = OpAccessChain %22 %47 %25 
                                       f32_4 %163 = OpLoad %162 
                                       f32_2 %164 = OpVectorShuffle %163 %163 0 1 
                                       f32_2 %165 = OpFMul %161 %164 
                                       f32_4 %166 = OpLoad %45 
                                       f32_4 %167 = OpVectorShuffle %166 %165 4 5 2 3 
                                                      OpStore %45 %167 
                              Uniform f32_4* %168 = OpAccessChain %22 %47 %24 
                                       f32_4 %169 = OpLoad %168 
                                       f32_2 %170 = OpVectorShuffle %169 %169 0 1 
                                       f32_4 %171 = OpLoad %9 
                                       f32_2 %172 = OpVectorShuffle %171 %171 0 0 
                                       f32_2 %173 = OpFMul %170 %172 
                                       f32_4 %174 = OpLoad %45 
                                       f32_2 %175 = OpVectorShuffle %174 %174 0 1 
                                       f32_2 %176 = OpFAdd %173 %175 
                                       f32_4 %177 = OpLoad %9 
                                       f32_4 %178 = OpVectorShuffle %177 %176 4 5 2 3 
                                                      OpStore %9 %178 
                              Uniform f32_4* %179 = OpAccessChain %22 %47 %37 
                                       f32_4 %180 = OpLoad %179 
                                       f32_2 %181 = OpVectorShuffle %180 %180 0 1 
                                       f32_4 %182 = OpLoad %9 
                                       f32_2 %183 = OpVectorShuffle %182 %182 2 2 
                                       f32_2 %184 = OpFMul %181 %183 
                                       f32_4 %185 = OpLoad %9 
                                       f32_2 %186 = OpVectorShuffle %185 %185 0 1 
                                       f32_2 %187 = OpFAdd %184 %186 
                                       f32_4 %188 = OpLoad %9 
                                       f32_4 %189 = OpVectorShuffle %188 %187 4 5 2 3 
                                                      OpStore %9 %189 
                              Uniform f32_4* %191 = OpAccessChain %22 %47 %47 
                                       f32_4 %192 = OpLoad %191 
                                       f32_2 %193 = OpVectorShuffle %192 %192 0 1 
                                       f32_4 %194 = OpLoad %9 
                                       f32_2 %195 = OpVectorShuffle %194 %194 3 3 
                                       f32_2 %196 = OpFMul %193 %195 
                                       f32_4 %197 = OpLoad %9 
                                       f32_2 %198 = OpVectorShuffle %197 %197 0 1 
                                       f32_2 %199 = OpFAdd %196 %198 
                                                      OpStore vs_TEXCOORD3 %199 
                                                      OpStore vs_TEXCOORD4 %202 
                                 Output f32* %204 = OpAccessChain %75 %24 %71 
                                         f32 %205 = OpLoad %204 
                                         f32 %206 = OpFNegate %205 
                                 Output f32* %207 = OpAccessChain %75 %24 %71 
                                                      OpStore %207 %206 
                                                      OpReturn
                                                      OpFunctionEnd
; SPIR-V
; Version: 1.0
; Generator: Khronos Glslang Reference Front End; 6
; Bound: 363
; Schema: 0
                                                      OpCapability Shader 
                                               %1 = OpExtInstImport "GLSL.std.450" 
                                                      OpMemoryModel Logical GLSL450 
                                                      OpEntryPoint Fragment %4 "main" %11 %63 %333 %356 
                                                      OpExecutionMode %4 OriginUpperLeft 
                                                      OpName vs_TEXCOORD2 "vs_TEXCOORD2" 
                                                      OpName vs_TEXCOORD1 "vs_TEXCOORD1" 
                                                      OpName vs_TEXCOORD0 "vs_TEXCOORD0" 
                                                      OpDecorate vs_TEXCOORD2 Location 11 
                                                      OpDecorate %17 ArrayStride 17 
                                                      OpMemberDecorate %18 0 Offset 18 
                                                      OpMemberDecorate %18 1 RelaxedPrecision 
                                                      OpMemberDecorate %18 1 Offset 18 
                                                      OpMemberDecorate %18 2 RelaxedPrecision 
                                                      OpMemberDecorate %18 2 Offset 18 
                                                      OpMemberDecorate %18 3 RelaxedPrecision 
                                                      OpMemberDecorate %18 3 Offset 18 
                                                      OpMemberDecorate %18 4 Offset 18 
                                                      OpMemberDecorate %18 5 RelaxedPrecision 
                                                      OpMemberDecorate %18 5 Offset 18 
                                                      OpMemberDecorate %18 6 RelaxedPrecision 
                                                      OpMemberDecorate %18 6 Offset 18 
                                                      OpMemberDecorate %18 7 RelaxedPrecision 
                                                      OpMemberDecorate %18 7 Offset 18 
                                                      OpMemberDecorate %18 8 RelaxedPrecision 
                                                      OpMemberDecorate %18 8 Offset 18 
                                                      OpMemberDecorate %18 9 RelaxedPrecision 
                                                      OpMemberDecorate %18 9 Offset 18 
                                                      OpMemberDecorate %18 10 RelaxedPrecision 
                                                      OpMemberDecorate %18 10 Offset 18 
                                                      OpMemberDecorate %18 11 RelaxedPrecision 
                                                      OpMemberDecorate %18 11 Offset 18 
                                                      OpDecorate %18 Block 
                                                      OpDecorate %20 DescriptorSet 20 
                                                      OpDecorate %20 Binding 20 
                                                      OpDecorate %35 RelaxedPrecision 
                                                      OpDecorate %43 RelaxedPrecision 
                                                      OpDecorate %44 RelaxedPrecision 
                                                      OpDecorate %48 RelaxedPrecision 
                                                      OpDecorate %49 RelaxedPrecision 
                                                      OpDecorate %50 RelaxedPrecision 
                                                      OpDecorate %51 RelaxedPrecision 
                                                      OpDecorate %52 RelaxedPrecision 
                                                      OpDecorate %53 RelaxedPrecision 
                                                      OpDecorate %54 RelaxedPrecision 
                                                      OpDecorate %55 RelaxedPrecision 
                                                      OpDecorate %56 RelaxedPrecision 
                                                      OpDecorate %57 RelaxedPrecision 
                                                      OpDecorate %58 RelaxedPrecision 
                                                      OpDecorate %59 RelaxedPrecision 
                                                      OpDecorate %60 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD1 Location 63 
                                                      OpDecorate %67 RelaxedPrecision 
                                                      OpDecorate %68 RelaxedPrecision 
                                                      OpDecorate %69 RelaxedPrecision 
                                                      OpDecorate %70 RelaxedPrecision 
                                                      OpDecorate %74 RelaxedPrecision 
                                                      OpDecorate %75 RelaxedPrecision 
                                                      OpDecorate %76 RelaxedPrecision 
                                                      OpDecorate %77 RelaxedPrecision 
                                                      OpDecorate %80 RelaxedPrecision 
                                                      OpDecorate %82 RelaxedPrecision 
                                                      OpDecorate %83 RelaxedPrecision 
                                                      OpDecorate %84 RelaxedPrecision 
                                                      OpDecorate %88 RelaxedPrecision 
                                                      OpDecorate %89 RelaxedPrecision 
                                                      OpDecorate %92 RelaxedPrecision 
                                                      OpDecorate %96 RelaxedPrecision 
                                                      OpDecorate %97 RelaxedPrecision 
                                                      OpDecorate %102 RelaxedPrecision 
                                                      OpDecorate %104 RelaxedPrecision 
                                                      OpDecorate %109 RelaxedPrecision 
                                                      OpDecorate %118 RelaxedPrecision 
                                                      OpDecorate %119 RelaxedPrecision 
                                                      OpDecorate %121 RelaxedPrecision 
                                                      OpDecorate %122 RelaxedPrecision 
                                                      OpDecorate %129 RelaxedPrecision 
                                                      OpDecorate %130 RelaxedPrecision 
                                                      OpDecorate %133 RelaxedPrecision 
                                                      OpDecorate %135 RelaxedPrecision 
                                                      OpDecorate %136 RelaxedPrecision 
                                                      OpDecorate %137 RelaxedPrecision 
                                                      OpDecorate %141 RelaxedPrecision 
                                                      OpDecorate %142 RelaxedPrecision 
                                                      OpDecorate %143 RelaxedPrecision 
                                                      OpDecorate %144 RelaxedPrecision 
                                                      OpDecorate %212 DescriptorSet 212 
                                                      OpDecorate %212 Binding 212 
                                                      OpDecorate %216 DescriptorSet 216 
                                                      OpDecorate %216 Binding 216 
                                                      OpDecorate %228 RelaxedPrecision 
                                                      OpDecorate %229 RelaxedPrecision 
                                                      OpDecorate %233 RelaxedPrecision 
                                                      OpDecorate %234 RelaxedPrecision 
                                                      OpDecorate %236 RelaxedPrecision 
                                                      OpDecorate %237 RelaxedPrecision 
                                                      OpDecorate %238 RelaxedPrecision 
                                                      OpDecorate %241 RelaxedPrecision 
                                                      OpDecorate %245 RelaxedPrecision 
                                                      OpDecorate %246 RelaxedPrecision 
                                                      OpDecorate %247 RelaxedPrecision 
                                                      OpDecorate %250 RelaxedPrecision 
                                                      OpDecorate %251 RelaxedPrecision 
                                                      OpDecorate %253 RelaxedPrecision 
                                                      OpDecorate %255 RelaxedPrecision 
                                                      OpDecorate %257 RelaxedPrecision 
                                                      OpDecorate %258 RelaxedPrecision 
                                                      OpDecorate %259 RelaxedPrecision 
                                                      OpDecorate %260 RelaxedPrecision 
                                                      OpDecorate %262 RelaxedPrecision 
                                                      OpDecorate %263 RelaxedPrecision 
                                                      OpDecorate %265 RelaxedPrecision 
                                                      OpDecorate %266 RelaxedPrecision 
                                                      OpDecorate %268 RelaxedPrecision 
                                                      OpDecorate %269 RelaxedPrecision 
                                                      OpDecorate %270 RelaxedPrecision 
                                                      OpDecorate %271 RelaxedPrecision 
                                                      OpDecorate %274 RelaxedPrecision 
                                                      OpDecorate %275 RelaxedPrecision 
                                                      OpDecorate %277 RelaxedPrecision 
                                                      OpDecorate %279 RelaxedPrecision 
                                                      OpDecorate %280 RelaxedPrecision 
                                                      OpDecorate %281 RelaxedPrecision 
                                                      OpDecorate %282 RelaxedPrecision 
                                                      OpDecorate %283 RelaxedPrecision 
                                                      OpDecorate %284 RelaxedPrecision 
                                                      OpDecorate %285 RelaxedPrecision 
                                                      OpDecorate %287 RelaxedPrecision 
                                                      OpDecorate %288 RelaxedPrecision 
                                                      OpDecorate %289 RelaxedPrecision 
                                                      OpDecorate %290 RelaxedPrecision 
                                                      OpDecorate %292 RelaxedPrecision 
                                                      OpDecorate %293 RelaxedPrecision 
                                                      OpDecorate %296 RelaxedPrecision 
                                                      OpDecorate %297 RelaxedPrecision 
                                                      OpDecorate %298 RelaxedPrecision 
                                                      OpDecorate %301 RelaxedPrecision 
                                                      OpDecorate %302 RelaxedPrecision 
                                                      OpDecorate %303 RelaxedPrecision 
                                                      OpDecorate %305 RelaxedPrecision 
                                                      OpDecorate %306 RelaxedPrecision 
                                                      OpDecorate %307 RelaxedPrecision 
                                                      OpDecorate %308 RelaxedPrecision 
                                                      OpDecorate %310 RelaxedPrecision 
                                                      OpDecorate %311 RelaxedPrecision 
                                                      OpDecorate %312 RelaxedPrecision 
                                                      OpDecorate %313 RelaxedPrecision 
                                                      OpDecorate %314 RelaxedPrecision 
                                                      OpDecorate %315 RelaxedPrecision 
                                                      OpDecorate %317 RelaxedPrecision 
                                                      OpDecorate %318 RelaxedPrecision 
                                                      OpDecorate %319 RelaxedPrecision 
                                                      OpDecorate %320 RelaxedPrecision 
                                                      OpDecorate %321 RelaxedPrecision 
                                                      OpDecorate %322 RelaxedPrecision 
                                                      OpDecorate %323 RelaxedPrecision 
                                                      OpDecorate %324 RelaxedPrecision 
                                                      OpDecorate %325 RelaxedPrecision 
                                                      OpDecorate %326 RelaxedPrecision 
                                                      OpDecorate %327 RelaxedPrecision 
                                                      OpDecorate %327 DescriptorSet 327 
                                                      OpDecorate %327 Binding 327 
                                                      OpDecorate %328 RelaxedPrecision 
                                                      OpDecorate %329 RelaxedPrecision 
                                                      OpDecorate %329 DescriptorSet 329 
                                                      OpDecorate %329 Binding 329 
                                                      OpDecorate %330 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD0 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD0 Location 333 
                                                      OpDecorate %334 RelaxedPrecision 
                                                      OpDecorate %335 RelaxedPrecision 
                                                      OpDecorate %336 RelaxedPrecision 
                                                      OpDecorate %337 RelaxedPrecision 
                                                      OpDecorate %340 RelaxedPrecision 
                                                      OpDecorate %341 RelaxedPrecision 
                                                      OpDecorate %342 RelaxedPrecision 
                                                      OpDecorate %343 RelaxedPrecision 
                                                      OpDecorate %344 RelaxedPrecision 
                                                      OpDecorate %345 RelaxedPrecision 
                                                      OpDecorate %346 RelaxedPrecision 
                                                      OpDecorate %349 RelaxedPrecision 
                                                      OpDecorate %350 RelaxedPrecision 
                                                      OpDecorate %351 RelaxedPrecision 
                                                      OpDecorate %352 RelaxedPrecision 
                                                      OpDecorate %356 RelaxedPrecision 
                                                      OpDecorate %356 Location 356 
                                               %2 = OpTypeVoid 
                                               %3 = OpTypeFunction %2 
                                               %6 = OpTypeFloat 32 
                                               %7 = OpTypeVector %6 3 
                                               %8 = OpTypePointer Private %7 
                                Private f32_3* %9 = OpVariable Private 
                                              %10 = OpTypePointer Input %7 
                        Input f32_3* vs_TEXCOORD2 = OpVariable Input 
                                              %14 = OpTypeVector %6 4 
                                              %15 = OpTypeInt 32 0 
                                          u32 %16 = OpConstant 4 
                                              %17 = OpTypeArray %14 %16 
                                              %18 = OpTypeStruct %7 %14 %14 %14 %17 %14 %6 %14 %14 %6 %6 %6 
                                              %19 = OpTypePointer Uniform %18 
Uniform struct {f32_3; f32_4; f32_4; f32_4; f32_4[4]; f32_4; f32; f32_4; f32_4; f32; f32; f32;}* %20 = OpVariable Uniform 
                                              %21 = OpTypeInt 32 1 
                                          i32 %22 = OpConstant 0 
                                              %23 = OpTypePointer Uniform %7 
                                              %27 = OpTypePointer Private %6 
                                 Private f32* %28 = OpVariable Private 
                                              %34 = OpTypePointer Private %14 
                               Private f32_4* %35 = OpVariable Private 
                                          i32 %40 = OpConstant 1 
                                              %41 = OpTypePointer Uniform %14 
                                 Private f32* %48 = OpVariable Private 
                        Input f32_3* vs_TEXCOORD1 = OpVariable Input 
                               Private f32_3* %69 = OpVariable Private 
                                          u32 %78 = OpConstant 0 
                                          u32 %85 = OpConstant 1 
                                              %87 = OpTypeVector %6 2 
                                          f32 %90 = OpConstant 3.674022E-40 
                                        f32_2 %91 = OpConstantComposite %90 %90 
                                          i32 %99 = OpConstant 6 
                                             %100 = OpTypePointer Uniform %6 
                                         f32 %103 = OpConstant 3.674022E-40 
                                         i32 %116 = OpConstant 11 
                                         f32 %120 = OpConstant 3.674022E-40 
                                         f32 %126 = OpConstant 3.674022E-40 
                                Private f32* %133 = OpVariable Private 
                                             %138 = OpTypePointer Private %87 
                              Private f32_2* %139 = OpVariable Private 
                                         f32 %146 = OpConstant 3.674022E-40 
                                         f32 %163 = OpConstant 3.674022E-40 
                                         f32 %165 = OpConstant 3.674022E-40 
                                         i32 %182 = OpConstant 4 
                                         i32 %195 = OpConstant 2 
                                         i32 %205 = OpConstant 3 
                                             %210 = OpTypeImage %6 Dim2D 0 0 0 1 Unknown 
                                             %211 = OpTypePointer UniformConstant %210 
        UniformConstant read_only Texture2D* %212 = OpVariable UniformConstant 
                                             %214 = OpTypeSampler 
                                             %215 = OpTypePointer UniformConstant %214 
                    UniformConstant sampler* %216 = OpVariable UniformConstant 
                                             %218 = OpTypeSampledImage %210 
                                         u32 %222 = OpConstant 3 
                                         i32 %243 = OpConstant 10 
                                         i32 %248 = OpConstant 9 
                                Private f32* %253 = OpVariable Private 
                                Private f32* %260 = OpVariable Private 
                                         i32 %294 = OpConstant 7 
                                         i32 %299 = OpConstant 8 
                              Private f32_3* %313 = OpVariable Private 
                              Private f32_3* %326 = OpVariable Private 
        UniformConstant read_only Texture2D* %327 = OpVariable UniformConstant 
                    UniformConstant sampler* %329 = OpVariable UniformConstant 
                                             %332 = OpTypePointer Input %87 
                        Input f32_2* vs_TEXCOORD0 = OpVariable Input 
                                         i32 %338 = OpConstant 5 
                                             %355 = OpTypePointer Output %14 
                               Output f32_4* %356 = OpVariable Output 
                                             %360 = OpTypePointer Output %6 
                                          void %4 = OpFunction None %3 
                                               %5 = OpLabel 
                                        f32_3 %12 = OpLoad vs_TEXCOORD2 
                                        f32_3 %13 = OpFNegate %12 
                               Uniform f32_3* %24 = OpAccessChain %20 %22 
                                        f32_3 %25 = OpLoad %24 
                                        f32_3 %26 = OpFAdd %13 %25 
                                                      OpStore %9 %26 
                                        f32_3 %29 = OpLoad %9 
                                        f32_3 %30 = OpLoad %9 
                                          f32 %31 = OpDot %29 %30 
                                                      OpStore %28 %31 
                                          f32 %32 = OpLoad %28 
                                          f32 %33 = OpExtInst %1 32 %32 
                                                      OpStore %28 %33 
                                        f32_3 %36 = OpLoad %9 
                                          f32 %37 = OpLoad %28 
                                        f32_3 %38 = OpCompositeConstruct %37 %37 %37 
                                        f32_3 %39 = OpFMul %36 %38 
                               Uniform f32_4* %42 = OpAccessChain %20 %40 
                                        f32_4 %43 = OpLoad %42 
                                        f32_3 %44 = OpVectorShuffle %43 %43 0 1 2 
                                        f32_3 %45 = OpFAdd %39 %44 
                                        f32_4 %46 = OpLoad %35 
                                        f32_4 %47 = OpVectorShuffle %46 %45 4 5 6 3 
                                                      OpStore %35 %47 
                                        f32_4 %49 = OpLoad %35 
                                        f32_3 %50 = OpVectorShuffle %49 %49 0 1 2 
                                        f32_4 %51 = OpLoad %35 
                                        f32_3 %52 = OpVectorShuffle %51 %51 0 1 2 
                                          f32 %53 = OpDot %50 %52 
                                                      OpStore %48 %53 
                                          f32 %54 = OpLoad %48 
                                          f32 %55 = OpExtInst %1 32 %54 
                                                      OpStore %48 %55 
                                          f32 %56 = OpLoad %48 
                                        f32_3 %57 = OpCompositeConstruct %56 %56 %56 
                                        f32_4 %58 = OpLoad %35 
                                        f32_3 %59 = OpVectorShuffle %58 %58 0 1 2 
                                        f32_3 %60 = OpFMul %57 %59 
                                        f32_4 %61 = OpLoad %35 
                                        f32_4 %62 = OpVectorShuffle %61 %60 4 5 6 3 
                                                      OpStore %35 %62 
                                        f32_3 %64 = OpLoad vs_TEXCOORD1 
                                        f32_3 %65 = OpLoad vs_TEXCOORD1 
                                          f32 %66 = OpDot %64 %65 
                                                      OpStore %48 %66 
                                          f32 %67 = OpLoad %48 
                                          f32 %68 = OpExtInst %1 32 %67 
                                                      OpStore %48 %68 
                                          f32 %70 = OpLoad %48 
                                        f32_3 %71 = OpCompositeConstruct %70 %70 %70 
                                        f32_3 %72 = OpLoad vs_TEXCOORD1 
                                        f32_3 %73 = OpFMul %71 %72 
                                                      OpStore %69 %73 
                                        f32_3 %74 = OpLoad %69 
                                        f32_4 %75 = OpLoad %35 
                                        f32_3 %76 = OpVectorShuffle %75 %75 0 1 2 
                                          f32 %77 = OpDot %74 %76 
                                 Private f32* %79 = OpAccessChain %35 %78 
                                                      OpStore %79 %77 
                                        f32_3 %80 = OpLoad %69 
                               Uniform f32_4* %81 = OpAccessChain %20 %40 
                                        f32_4 %82 = OpLoad %81 
                                        f32_3 %83 = OpVectorShuffle %82 %82 0 1 2 
                                          f32 %84 = OpDot %80 %83 
                                 Private f32* %86 = OpAccessChain %35 %85 
                                                      OpStore %86 %84 
                                        f32_4 %88 = OpLoad %35 
                                        f32_2 %89 = OpVectorShuffle %88 %88 0 1 
                                        f32_2 %92 = OpExtInst %1 40 %89 %91 
                                        f32_4 %93 = OpLoad %35 
                                        f32_4 %94 = OpVectorShuffle %93 %92 4 5 2 3 
                                                      OpStore %35 %94 
                                 Private f32* %95 = OpAccessChain %35 %78 
                                          f32 %96 = OpLoad %95 
                                          f32 %97 = OpExtInst %1 30 %96 
                                 Private f32* %98 = OpAccessChain %9 %78 
                                                      OpStore %98 %97 
                                Uniform f32* %101 = OpAccessChain %20 %99 
                                         f32 %102 = OpLoad %101 
                                         f32 %104 = OpFMul %102 %103 
                                Private f32* %105 = OpAccessChain %35 %78 
                                                      OpStore %105 %104 
                                Private f32* %106 = OpAccessChain %9 %78 
                                         f32 %107 = OpLoad %106 
                                Private f32* %108 = OpAccessChain %35 %78 
                                         f32 %109 = OpLoad %108 
                                         f32 %110 = OpFMul %107 %109 
                                Private f32* %111 = OpAccessChain %9 %78 
                                                      OpStore %111 %110 
                                Private f32* %112 = OpAccessChain %9 %78 
                                         f32 %113 = OpLoad %112 
                                         f32 %114 = OpExtInst %1 29 %113 
                                Private f32* %115 = OpAccessChain %9 %78 
                                                      OpStore %115 %114 
                                Uniform f32* %117 = OpAccessChain %20 %116 
                                         f32 %118 = OpLoad %117 
                                         f32 %119 = OpFNegate %118 
                                         f32 %121 = OpFMul %119 %120 
                                         f32 %122 = OpFAdd %121 %120 
                                Private f32* %123 = OpAccessChain %35 %78 
                                                      OpStore %123 %122 
                                Private f32* %124 = OpAccessChain %9 %78 
                                         f32 %125 = OpLoad %124 
                                         f32 %127 = OpFMul %125 %126 
                                Private f32* %128 = OpAccessChain %35 %78 
                                         f32 %129 = OpLoad %128 
                                         f32 %130 = OpFNegate %129 
                                         f32 %131 = OpFAdd %127 %130 
                                Private f32* %132 = OpAccessChain %9 %78 
                                                      OpStore %132 %131 
                                Uniform f32* %134 = OpAccessChain %20 %116 
                                         f32 %135 = OpLoad %134 
                                         f32 %136 = OpFMul %135 %120 
                                         f32 %137 = OpFAdd %136 %120 
                                                      OpStore %133 %137 
                                Private f32* %140 = OpAccessChain %35 %78 
                                         f32 %141 = OpLoad %140 
                                         f32 %142 = OpFNegate %141 
                                         f32 %143 = OpLoad %133 
                                         f32 %144 = OpFAdd %142 %143 
                                Private f32* %145 = OpAccessChain %139 %78 
                                                      OpStore %145 %144 
                                Private f32* %147 = OpAccessChain %139 %78 
                                         f32 %148 = OpLoad %147 
                                         f32 %149 = OpFDiv %146 %148 
                                Private f32* %150 = OpAccessChain %139 %78 
                                                      OpStore %150 %149 
                                Private f32* %151 = OpAccessChain %139 %78 
                                         f32 %152 = OpLoad %151 
                                Private f32* %153 = OpAccessChain %9 %78 
                                         f32 %154 = OpLoad %153 
                                         f32 %155 = OpFMul %152 %154 
                                Private f32* %156 = OpAccessChain %9 %78 
                                                      OpStore %156 %155 
                                Private f32* %157 = OpAccessChain %9 %78 
                                         f32 %158 = OpLoad %157 
                                         f32 %159 = OpExtInst %1 43 %158 %90 %146 
                                Private f32* %160 = OpAccessChain %9 %78 
                                                      OpStore %160 %159 
                                Private f32* %161 = OpAccessChain %9 %78 
                                         f32 %162 = OpLoad %161 
                                         f32 %164 = OpFMul %162 %163 
                                         f32 %166 = OpFAdd %164 %165 
                                Private f32* %167 = OpAccessChain %139 %78 
                                                      OpStore %167 %166 
                                Private f32* %168 = OpAccessChain %9 %78 
                                         f32 %169 = OpLoad %168 
                                Private f32* %170 = OpAccessChain %9 %78 
                                         f32 %171 = OpLoad %170 
                                         f32 %172 = OpFMul %169 %171 
                                Private f32* %173 = OpAccessChain %9 %78 
                                                      OpStore %173 %172 
                                Private f32* %174 = OpAccessChain %9 %78 
                                         f32 %175 = OpLoad %174 
                                Private f32* %176 = OpAccessChain %139 %78 
                                         f32 %177 = OpLoad %176 
                                         f32 %178 = OpFMul %175 %177 
                                Private f32* %179 = OpAccessChain %9 %78 
                                                      OpStore %179 %178 
                                       f32_3 %180 = OpLoad vs_TEXCOORD2 
                                       f32_2 %181 = OpVectorShuffle %180 %180 1 1 
                              Uniform f32_4* %183 = OpAccessChain %20 %182 %40 
                                       f32_4 %184 = OpLoad %183 
                                       f32_2 %185 = OpVectorShuffle %184 %184 0 1 
                                       f32_2 %186 = OpFMul %181 %185 
                                                      OpStore %139 %186 
                              Uniform f32_4* %187 = OpAccessChain %20 %182 %22 
                                       f32_4 %188 = OpLoad %187 
                                       f32_2 %189 = OpVectorShuffle %188 %188 0 1 
                                       f32_3 %190 = OpLoad vs_TEXCOORD2 
                                       f32_2 %191 = OpVectorShuffle %190 %190 0 0 
                                       f32_2 %192 = OpFMul %189 %191 
                                       f32_2 %193 = OpLoad %139 
                                       f32_2 %194 = OpFAdd %192 %193 
                                                      OpStore %139 %194 
                              Uniform f32_4* %196 = OpAccessChain %20 %182 %195 
                                       f32_4 %197 = OpLoad %196 
                                       f32_2 %198 = OpVectorShuffle %197 %197 0 1 
                                       f32_3 %199 = OpLoad vs_TEXCOORD2 
                                       f32_2 %200 = OpVectorShuffle %199 %199 2 2 
                                       f32_2 %201 = OpFMul %198 %200 
                                       f32_2 %202 = OpLoad %139 
                                       f32_2 %203 = OpFAdd %201 %202 
                                                      OpStore %139 %203 
                                       f32_2 %204 = OpLoad %139 
                              Uniform f32_4* %206 = OpAccessChain %20 %182 %205 
                                       f32_4 %207 = OpLoad %206 
                                       f32_2 %208 = OpVectorShuffle %207 %207 0 1 
                                       f32_2 %209 = OpFAdd %204 %208 
                                                      OpStore %139 %209 
                         read_only Texture2D %213 = OpLoad %212 
                                     sampler %217 = OpLoad %216 
                  read_only Texture2DSampled %219 = OpSampledImage %213 %217 
                                       f32_2 %220 = OpLoad %139 
                                       f32_4 %221 = OpImageSampleImplicitLod %219 %220 
                                         f32 %223 = OpCompositeExtract %221 3 
                                Private f32* %224 = OpAccessChain %139 %78 
                                                      OpStore %224 %223 
                                       f32_2 %225 = OpLoad %139 
                                       f32_3 %226 = OpVectorShuffle %225 %225 0 0 0 
                              Uniform f32_4* %227 = OpAccessChain %20 %195 
                                       f32_4 %228 = OpLoad %227 
                                       f32_3 %229 = OpVectorShuffle %228 %228 0 1 2 
                                       f32_3 %230 = OpFMul %226 %229 
                                       f32_4 %231 = OpLoad %35 
                                       f32_4 %232 = OpVectorShuffle %231 %230 4 1 5 6 
                                                      OpStore %35 %232 
                                       f32_4 %233 = OpLoad %35 
                                       f32_3 %234 = OpVectorShuffle %233 %233 0 2 3 
                              Uniform f32_4* %235 = OpAccessChain %20 %205 
                                       f32_4 %236 = OpLoad %235 
                                       f32_3 %237 = OpVectorShuffle %236 %236 0 1 2 
                                       f32_3 %238 = OpFMul %234 %237 
                                                      OpStore %69 %238 
                                       f32_3 %239 = OpLoad %9 
                                       f32_3 %240 = OpVectorShuffle %239 %239 0 0 0 
                                       f32_3 %241 = OpLoad %69 
                                       f32_3 %242 = OpFMul %240 %241 
                                                      OpStore %9 %242 
                                Uniform f32* %244 = OpAccessChain %20 %243 
                                         f32 %245 = OpLoad %244 
                                         f32 %246 = OpFNegate %245 
                                         f32 %247 = OpFMul %246 %120 
                                Uniform f32* %249 = OpAccessChain %20 %248 
                                         f32 %250 = OpLoad %249 
                                         f32 %251 = OpFAdd %247 %250 
                                Private f32* %252 = OpAccessChain %69 %78 
                                                      OpStore %252 %251 
                                Private f32* %254 = OpAccessChain %35 %85 
                                         f32 %255 = OpLoad %254 
                                Private f32* %256 = OpAccessChain %69 %78 
                                         f32 %257 = OpLoad %256 
                                         f32 %258 = OpFNegate %257 
                                         f32 %259 = OpFAdd %255 %258 
                                                      OpStore %253 %259 
                                Uniform f32* %261 = OpAccessChain %20 %243 
                                         f32 %262 = OpLoad %261 
                                         f32 %263 = OpFMul %262 %120 
                                Uniform f32* %264 = OpAccessChain %20 %248 
                                         f32 %265 = OpLoad %264 
                                         f32 %266 = OpFAdd %263 %265 
                                                      OpStore %260 %266 
                                Private f32* %267 = OpAccessChain %69 %78 
                                         f32 %268 = OpLoad %267 
                                         f32 %269 = OpFNegate %268 
                                         f32 %270 = OpLoad %260 
                                         f32 %271 = OpFAdd %269 %270 
                                Private f32* %272 = OpAccessChain %69 %78 
                                                      OpStore %272 %271 
                                Private f32* %273 = OpAccessChain %69 %78 
                                         f32 %274 = OpLoad %273 
                                         f32 %275 = OpFDiv %146 %274 
                                Private f32* %276 = OpAccessChain %69 %78 
                                                      OpStore %276 %275 
                                         f32 %277 = OpLoad %253 
                                Private f32* %278 = OpAccessChain %69 %78 
                                         f32 %279 = OpLoad %278 
                                         f32 %280 = OpFMul %277 %279 
                                                      OpStore %253 %280 
                                         f32 %281 = OpLoad %253 
                                         f32 %282 = OpExtInst %1 43 %281 %90 %146 
                                                      OpStore %253 %282 
                                         f32 %283 = OpLoad %253 
                                         f32 %284 = OpFMul %283 %163 
                                         f32 %285 = OpFAdd %284 %165 
                                Private f32* %286 = OpAccessChain %69 %78 
                                                      OpStore %286 %285 
                                         f32 %287 = OpLoad %253 
                                         f32 %288 = OpLoad %253 
                                         f32 %289 = OpFMul %287 %288 
                                                      OpStore %253 %289 
                                         f32 %290 = OpLoad %253 
                                Private f32* %291 = OpAccessChain %69 %78 
                                         f32 %292 = OpLoad %291 
                                         f32 %293 = OpFMul %290 %292 
                                                      OpStore %253 %293 
                              Uniform f32_4* %295 = OpAccessChain %20 %294 
                                       f32_4 %296 = OpLoad %295 
                                       f32_3 %297 = OpVectorShuffle %296 %296 0 1 2 
                                       f32_3 %298 = OpFNegate %297 
                              Uniform f32_4* %300 = OpAccessChain %20 %299 
                                       f32_4 %301 = OpLoad %300 
                                       f32_3 %302 = OpVectorShuffle %301 %301 0 1 2 
                                       f32_3 %303 = OpFAdd %298 %302 
                                                      OpStore %69 %303 
                              Uniform f32_4* %304 = OpAccessChain %20 %299 
                                       f32_4 %305 = OpLoad %304 
                                       f32_3 %306 = OpVectorShuffle %305 %305 3 3 3 
                                       f32_3 %307 = OpLoad %69 
                                       f32_3 %308 = OpFMul %306 %307 
                              Uniform f32_4* %309 = OpAccessChain %20 %294 
                                       f32_4 %310 = OpLoad %309 
                                       f32_3 %311 = OpVectorShuffle %310 %310 0 1 2 
                                       f32_3 %312 = OpFAdd %308 %311 
                                                      OpStore %69 %312 
                                       f32_3 %314 = OpLoad %69 
                                       f32_3 %315 = OpFNegate %314 
                              Uniform f32_4* %316 = OpAccessChain %20 %294 
                                       f32_4 %317 = OpLoad %316 
                                       f32_3 %318 = OpVectorShuffle %317 %317 0 1 2 
                                       f32_3 %319 = OpFAdd %315 %318 
                                                      OpStore %313 %319 
                                         f32 %320 = OpLoad %253 
                                       f32_3 %321 = OpCompositeConstruct %320 %320 %320 
                                       f32_3 %322 = OpLoad %313 
                                       f32_3 %323 = OpFMul %321 %322 
                                       f32_3 %324 = OpLoad %69 
                                       f32_3 %325 = OpFAdd %323 %324 
                                                      OpStore %69 %325 
                         read_only Texture2D %328 = OpLoad %327 
                                     sampler %330 = OpLoad %329 
                  read_only Texture2DSampled %331 = OpSampledImage %328 %330 
                                       f32_2 %334 = OpLoad vs_TEXCOORD0 
                                       f32_4 %335 = OpImageSampleImplicitLod %331 %334 
                                       f32_3 %336 = OpVectorShuffle %335 %335 0 1 2 
                                                      OpStore %326 %336 
                                       f32_3 %337 = OpLoad %326 
                              Uniform f32_4* %339 = OpAccessChain %20 %338 
                                       f32_4 %340 = OpLoad %339 
                                       f32_3 %341 = OpVectorShuffle %340 %340 0 1 2 
                                       f32_3 %342 = OpFMul %337 %341 
                                                      OpStore %313 %342 
                                       f32_4 %343 = OpLoad %35 
                                       f32_3 %344 = OpVectorShuffle %343 %343 0 2 3 
                                       f32_3 %345 = OpLoad %313 
                                       f32_3 %346 = OpFMul %344 %345 
                                       f32_4 %347 = OpLoad %35 
                                       f32_4 %348 = OpVectorShuffle %347 %346 4 5 6 3 
                                                      OpStore %35 %348 
                                       f32_4 %349 = OpLoad %35 
                                       f32_3 %350 = OpVectorShuffle %349 %349 0 1 2 
                                       f32_3 %351 = OpLoad %69 
                                       f32_3 %352 = OpFMul %350 %351 
                                       f32_3 %353 = OpLoad %9 
                                       f32_3 %354 = OpFAdd %352 %353 
                                                      OpStore %9 %354 
                                       f32_3 %357 = OpLoad %9 
                                       f32_4 %358 = OpLoad %356 
                                       f32_4 %359 = OpVectorShuffle %358 %357 4 5 6 3 
                                                      OpStore %356 %359 
                                 Output f32* %361 = OpAccessChain %356 %222 
                                                      OpStore %361 %146 
                                                      OpReturn
                                                      OpFunctionEnd
"
}
SubProgram "vulkan hw_tier02 " {
Keywords { "DIRECTIONAL_COOKIE" }
"; SPIR-V
; Version: 1.0
; Generator: Khronos Glslang Reference Front End; 6
; Bound: 209
; Schema: 0
                                                      OpCapability Shader 
                                               %1 = OpExtInstImport "GLSL.std.450" 
                                                      OpMemoryModel Logical GLSL450 
                                                      OpEntryPoint Vertex %4 "main" %11 %75 %85 %101 %106 %137 %143 %190 %200 
                                                      OpName vs_TEXCOORD0 "vs_TEXCOORD0" 
                                                      OpName vs_TEXCOORD1 "vs_TEXCOORD1" 
                                                      OpName vs_TEXCOORD2 "vs_TEXCOORD2" 
                                                      OpName vs_TEXCOORD3 "vs_TEXCOORD3" 
                                                      OpName vs_TEXCOORD4 "vs_TEXCOORD4" 
                                                      OpDecorate %11 Location 11 
                                                      OpDecorate %16 ArrayStride 16 
                                                      OpDecorate %17 ArrayStride 17 
                                                      OpDecorate %18 ArrayStride 18 
                                                      OpDecorate %19 ArrayStride 19 
                                                      OpMemberDecorate %20 0 Offset 20 
                                                      OpMemberDecorate %20 1 Offset 20 
                                                      OpMemberDecorate %20 2 Offset 20 
                                                      OpMemberDecorate %20 3 Offset 20 
                                                      OpMemberDecorate %20 4 Offset 20 
                                                      OpDecorate %20 Block 
                                                      OpDecorate %22 DescriptorSet 22 
                                                      OpDecorate %22 Binding 22 
                                                      OpMemberDecorate %73 0 BuiltIn 73 
                                                      OpMemberDecorate %73 1 BuiltIn 73 
                                                      OpMemberDecorate %73 2 BuiltIn 73 
                                                      OpDecorate %73 Block 
                                                      OpDecorate %85 Location 85 
                                                      OpDecorate vs_TEXCOORD0 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD0 Location 101 
                                                      OpDecorate %106 Location 106 
                                                      OpDecorate vs_TEXCOORD1 Location 137 
                                                      OpDecorate vs_TEXCOORD2 Location 143 
                                                      OpDecorate vs_TEXCOORD3 Location 190 
                                                      OpDecorate vs_TEXCOORD4 Location 200 
                                               %2 = OpTypeVoid 
                                               %3 = OpTypeFunction %2 
                                               %6 = OpTypeFloat 32 
                                               %7 = OpTypeVector %6 4 
                                               %8 = OpTypePointer Private %7 
                                Private f32_4* %9 = OpVariable Private 
                                              %10 = OpTypePointer Input %7 
                                 Input f32_4* %11 = OpVariable Input 
                                              %14 = OpTypeInt 32 0 
                                          u32 %15 = OpConstant 4 
                                              %16 = OpTypeArray %7 %15 
                                              %17 = OpTypeArray %7 %15 
                                              %18 = OpTypeArray %7 %15 
                                              %19 = OpTypeArray %7 %15 
                                              %20 = OpTypeStruct %16 %17 %18 %19 %7 
                                              %21 = OpTypePointer Uniform %20 
Uniform struct {f32_4[4]; f32_4[4]; f32_4[4]; f32_4[4]; f32_4;}* %22 = OpVariable Uniform 
                                              %23 = OpTypeInt 32 1 
                                          i32 %24 = OpConstant 0 
                                          i32 %25 = OpConstant 1 
                                              %26 = OpTypePointer Uniform %7 
                                          i32 %37 = OpConstant 2 
                               Private f32_4* %45 = OpVariable Private 
                                          i32 %47 = OpConstant 3 
                               Private f32_4* %51 = OpVariable Private 
                                          u32 %71 = OpConstant 1 
                                              %72 = OpTypeArray %6 %71 
                                              %73 = OpTypeStruct %7 %6 %72 
                                              %74 = OpTypePointer Output %73 
         Output struct {f32_4; f32; f32[1];}* %75 = OpVariable Output 
                                              %83 = OpTypePointer Output %7 
                                 Input f32_4* %85 = OpVariable Input 
                                              %86 = OpTypeVector %6 2 
                                          i32 %89 = OpConstant 4 
                                             %100 = OpTypePointer Output %86 
                       Output f32_2* vs_TEXCOORD0 = OpVariable Output 
                                             %104 = OpTypeVector %6 3 
                                             %105 = OpTypePointer Input %104 
                                Input f32_3* %106 = OpVariable Input 
                                         u32 %112 = OpConstant 0 
                                             %113 = OpTypePointer Private %6 
                                         u32 %126 = OpConstant 2 
                                Private f32* %128 = OpVariable Private 
                                             %136 = OpTypePointer Output %104 
                       Output f32_3* vs_TEXCOORD1 = OpVariable Output 
                       Output f32_3* vs_TEXCOORD2 = OpVariable Output 
                       Output f32_2* vs_TEXCOORD3 = OpVariable Output 
                       Output f32_4* vs_TEXCOORD4 = OpVariable Output 
                                         f32 %201 = OpConstant 3.674022E-40 
                                       f32_4 %202 = OpConstantComposite %201 %201 %201 %201 
                                             %203 = OpTypePointer Output %6 
                                          void %4 = OpFunction None %3 
                                               %5 = OpLabel 
                                        f32_4 %12 = OpLoad %11 
                                        f32_4 %13 = OpVectorShuffle %12 %12 1 1 1 1 
                               Uniform f32_4* %27 = OpAccessChain %22 %24 %25 
                                        f32_4 %28 = OpLoad %27 
                                        f32_4 %29 = OpFMul %13 %28 
                                                      OpStore %9 %29 
                               Uniform f32_4* %30 = OpAccessChain %22 %24 %24 
                                        f32_4 %31 = OpLoad %30 
                                        f32_4 %32 = OpLoad %11 
                                        f32_4 %33 = OpVectorShuffle %32 %32 0 0 0 0 
                                        f32_4 %34 = OpFMul %31 %33 
                                        f32_4 %35 = OpLoad %9 
                                        f32_4 %36 = OpFAdd %34 %35 
                                                      OpStore %9 %36 
                               Uniform f32_4* %38 = OpAccessChain %22 %24 %37 
                                        f32_4 %39 = OpLoad %38 
                                        f32_4 %40 = OpLoad %11 
                                        f32_4 %41 = OpVectorShuffle %40 %40 2 2 2 2 
                                        f32_4 %42 = OpFMul %39 %41 
                                        f32_4 %43 = OpLoad %9 
                                        f32_4 %44 = OpFAdd %42 %43 
                                                      OpStore %9 %44 
                                        f32_4 %46 = OpLoad %9 
                               Uniform f32_4* %48 = OpAccessChain %22 %24 %47 
                                        f32_4 %49 = OpLoad %48 
                                        f32_4 %50 = OpFAdd %46 %49 
                                                      OpStore %45 %50 
                                        f32_4 %52 = OpLoad %45 
                                        f32_4 %53 = OpVectorShuffle %52 %52 1 1 1 1 
                               Uniform f32_4* %54 = OpAccessChain %22 %37 %25 
                                        f32_4 %55 = OpLoad %54 
                                        f32_4 %56 = OpFMul %53 %55 
                                                      OpStore %51 %56 
                               Uniform f32_4* %57 = OpAccessChain %22 %37 %24 
                                        f32_4 %58 = OpLoad %57 
                                        f32_4 %59 = OpLoad %45 
                                        f32_4 %60 = OpVectorShuffle %59 %59 0 0 0 0 
                                        f32_4 %61 = OpFMul %58 %60 
                                        f32_4 %62 = OpLoad %51 
                                        f32_4 %63 = OpFAdd %61 %62 
                                                      OpStore %51 %63 
                               Uniform f32_4* %64 = OpAccessChain %22 %37 %37 
                                        f32_4 %65 = OpLoad %64 
                                        f32_4 %66 = OpLoad %45 
                                        f32_4 %67 = OpVectorShuffle %66 %66 2 2 2 2 
                                        f32_4 %68 = OpFMul %65 %67 
                                        f32_4 %69 = OpLoad %51 
                                        f32_4 %70 = OpFAdd %68 %69 
                                                      OpStore %51 %70 
                               Uniform f32_4* %76 = OpAccessChain %22 %37 %47 
                                        f32_4 %77 = OpLoad %76 
                                        f32_4 %78 = OpLoad %45 
                                        f32_4 %79 = OpVectorShuffle %78 %78 3 3 3 3 
                                        f32_4 %80 = OpFMul %77 %79 
                                        f32_4 %81 = OpLoad %51 
                                        f32_4 %82 = OpFAdd %80 %81 
                                Output f32_4* %84 = OpAccessChain %75 %24 
                                                      OpStore %84 %82 
                                        f32_4 %87 = OpLoad %85 
                                        f32_2 %88 = OpVectorShuffle %87 %87 0 1 
                               Uniform f32_4* %90 = OpAccessChain %22 %89 
                                        f32_4 %91 = OpLoad %90 
                                        f32_2 %92 = OpVectorShuffle %91 %91 0 1 
                                        f32_2 %93 = OpFMul %88 %92 
                               Uniform f32_4* %94 = OpAccessChain %22 %89 
                                        f32_4 %95 = OpLoad %94 
                                        f32_2 %96 = OpVectorShuffle %95 %95 2 3 
                                        f32_2 %97 = OpFAdd %93 %96 
                                        f32_4 %98 = OpLoad %45 
                                        f32_4 %99 = OpVectorShuffle %98 %97 4 5 2 3 
                                                      OpStore %45 %99 
                                       f32_4 %102 = OpLoad %45 
                                       f32_2 %103 = OpVectorShuffle %102 %102 0 1 
                                                      OpStore vs_TEXCOORD0 %103 
                                       f32_3 %107 = OpLoad %106 
                              Uniform f32_4* %108 = OpAccessChain %22 %25 %24 
                                       f32_4 %109 = OpLoad %108 
                                       f32_3 %110 = OpVectorShuffle %109 %109 0 1 2 
                                         f32 %111 = OpDot %107 %110 
                                Private f32* %114 = OpAccessChain %45 %112 
                                                      OpStore %114 %111 
                                       f32_3 %115 = OpLoad %106 
                              Uniform f32_4* %116 = OpAccessChain %22 %25 %25 
                                       f32_4 %117 = OpLoad %116 
                                       f32_3 %118 = OpVectorShuffle %117 %117 0 1 2 
                                         f32 %119 = OpDot %115 %118 
                                Private f32* %120 = OpAccessChain %45 %71 
                                                      OpStore %120 %119 
                                       f32_3 %121 = OpLoad %106 
                              Uniform f32_4* %122 = OpAccessChain %22 %25 %37 
                                       f32_4 %123 = OpLoad %122 
                                       f32_3 %124 = OpVectorShuffle %123 %123 0 1 2 
                                         f32 %125 = OpDot %121 %124 
                                Private f32* %127 = OpAccessChain %45 %126 
                                                      OpStore %127 %125 
                                       f32_4 %129 = OpLoad %45 
                                       f32_3 %130 = OpVectorShuffle %129 %129 0 1 2 
                                       f32_4 %131 = OpLoad %45 
                                       f32_3 %132 = OpVectorShuffle %131 %131 0 1 2 
                                         f32 %133 = OpDot %130 %132 
                                                      OpStore %128 %133 
                                         f32 %134 = OpLoad %128 
                                         f32 %135 = OpExtInst %1 32 %134 
                                                      OpStore %128 %135 
                                         f32 %138 = OpLoad %128 
                                       f32_3 %139 = OpCompositeConstruct %138 %138 %138 
                                       f32_4 %140 = OpLoad %45 
                                       f32_3 %141 = OpVectorShuffle %140 %140 0 1 2 
                                       f32_3 %142 = OpFMul %139 %141 
                                                      OpStore vs_TEXCOORD1 %142 
                              Uniform f32_4* %144 = OpAccessChain %22 %24 %47 
                                       f32_4 %145 = OpLoad %144 
                                       f32_3 %146 = OpVectorShuffle %145 %145 0 1 2 
                                       f32_4 %147 = OpLoad %11 
                                       f32_3 %148 = OpVectorShuffle %147 %147 3 3 3 
                                       f32_3 %149 = OpFMul %146 %148 
                                       f32_4 %150 = OpLoad %9 
                                       f32_3 %151 = OpVectorShuffle %150 %150 0 1 2 
                                       f32_3 %152 = OpFAdd %149 %151 
                                                      OpStore vs_TEXCOORD2 %152 
                              Uniform f32_4* %153 = OpAccessChain %22 %24 %47 
                                       f32_4 %154 = OpLoad %153 
                                       f32_4 %155 = OpLoad %11 
                                       f32_4 %156 = OpVectorShuffle %155 %155 3 3 3 3 
                                       f32_4 %157 = OpFMul %154 %156 
                                       f32_4 %158 = OpLoad %9 
                                       f32_4 %159 = OpFAdd %157 %158 
                                                      OpStore %9 %159 
                                       f32_4 %160 = OpLoad %9 
                                       f32_2 %161 = OpVectorShuffle %160 %160 1 1 
                              Uniform f32_4* %162 = OpAccessChain %22 %47 %25 
                                       f32_4 %163 = OpLoad %162 
                                       f32_2 %164 = OpVectorShuffle %163 %163 0 1 
                                       f32_2 %165 = OpFMul %161 %164 
                                       f32_4 %166 = OpLoad %45 
                                       f32_4 %167 = OpVectorShuffle %166 %165 4 5 2 3 
                                                      OpStore %45 %167 
                              Uniform f32_4* %168 = OpAccessChain %22 %47 %24 
                                       f32_4 %169 = OpLoad %168 
                                       f32_2 %170 = OpVectorShuffle %169 %169 0 1 
                                       f32_4 %171 = OpLoad %9 
                                       f32_2 %172 = OpVectorShuffle %171 %171 0 0 
                                       f32_2 %173 = OpFMul %170 %172 
                                       f32_4 %174 = OpLoad %45 
                                       f32_2 %175 = OpVectorShuffle %174 %174 0 1 
                                       f32_2 %176 = OpFAdd %173 %175 
                                       f32_4 %177 = OpLoad %9 
                                       f32_4 %178 = OpVectorShuffle %177 %176 4 5 2 3 
                                                      OpStore %9 %178 
                              Uniform f32_4* %179 = OpAccessChain %22 %47 %37 
                                       f32_4 %180 = OpLoad %179 
                                       f32_2 %181 = OpVectorShuffle %180 %180 0 1 
                                       f32_4 %182 = OpLoad %9 
                                       f32_2 %183 = OpVectorShuffle %182 %182 2 2 
                                       f32_2 %184 = OpFMul %181 %183 
                                       f32_4 %185 = OpLoad %9 
                                       f32_2 %186 = OpVectorShuffle %185 %185 0 1 
                                       f32_2 %187 = OpFAdd %184 %186 
                                       f32_4 %188 = OpLoad %9 
                                       f32_4 %189 = OpVectorShuffle %188 %187 4 5 2 3 
                                                      OpStore %9 %189 
                              Uniform f32_4* %191 = OpAccessChain %22 %47 %47 
                                       f32_4 %192 = OpLoad %191 
                                       f32_2 %193 = OpVectorShuffle %192 %192 0 1 
                                       f32_4 %194 = OpLoad %9 
                                       f32_2 %195 = OpVectorShuffle %194 %194 3 3 
                                       f32_2 %196 = OpFMul %193 %195 
                                       f32_4 %197 = OpLoad %9 
                                       f32_2 %198 = OpVectorShuffle %197 %197 0 1 
                                       f32_2 %199 = OpFAdd %196 %198 
                                                      OpStore vs_TEXCOORD3 %199 
                                                      OpStore vs_TEXCOORD4 %202 
                                 Output f32* %204 = OpAccessChain %75 %24 %71 
                                         f32 %205 = OpLoad %204 
                                         f32 %206 = OpFNegate %205 
                                 Output f32* %207 = OpAccessChain %75 %24 %71 
                                                      OpStore %207 %206 
                                                      OpReturn
                                                      OpFunctionEnd
; SPIR-V
; Version: 1.0
; Generator: Khronos Glslang Reference Front End; 6
; Bound: 363
; Schema: 0
                                                      OpCapability Shader 
                                               %1 = OpExtInstImport "GLSL.std.450" 
                                                      OpMemoryModel Logical GLSL450 
                                                      OpEntryPoint Fragment %4 "main" %11 %63 %333 %356 
                                                      OpExecutionMode %4 OriginUpperLeft 
                                                      OpName vs_TEXCOORD2 "vs_TEXCOORD2" 
                                                      OpName vs_TEXCOORD1 "vs_TEXCOORD1" 
                                                      OpName vs_TEXCOORD0 "vs_TEXCOORD0" 
                                                      OpDecorate vs_TEXCOORD2 Location 11 
                                                      OpDecorate %17 ArrayStride 17 
                                                      OpMemberDecorate %18 0 Offset 18 
                                                      OpMemberDecorate %18 1 RelaxedPrecision 
                                                      OpMemberDecorate %18 1 Offset 18 
                                                      OpMemberDecorate %18 2 RelaxedPrecision 
                                                      OpMemberDecorate %18 2 Offset 18 
                                                      OpMemberDecorate %18 3 RelaxedPrecision 
                                                      OpMemberDecorate %18 3 Offset 18 
                                                      OpMemberDecorate %18 4 Offset 18 
                                                      OpMemberDecorate %18 5 RelaxedPrecision 
                                                      OpMemberDecorate %18 5 Offset 18 
                                                      OpMemberDecorate %18 6 RelaxedPrecision 
                                                      OpMemberDecorate %18 6 Offset 18 
                                                      OpMemberDecorate %18 7 RelaxedPrecision 
                                                      OpMemberDecorate %18 7 Offset 18 
                                                      OpMemberDecorate %18 8 RelaxedPrecision 
                                                      OpMemberDecorate %18 8 Offset 18 
                                                      OpMemberDecorate %18 9 RelaxedPrecision 
                                                      OpMemberDecorate %18 9 Offset 18 
                                                      OpMemberDecorate %18 10 RelaxedPrecision 
                                                      OpMemberDecorate %18 10 Offset 18 
                                                      OpMemberDecorate %18 11 RelaxedPrecision 
                                                      OpMemberDecorate %18 11 Offset 18 
                                                      OpDecorate %18 Block 
                                                      OpDecorate %20 DescriptorSet 20 
                                                      OpDecorate %20 Binding 20 
                                                      OpDecorate %35 RelaxedPrecision 
                                                      OpDecorate %43 RelaxedPrecision 
                                                      OpDecorate %44 RelaxedPrecision 
                                                      OpDecorate %48 RelaxedPrecision 
                                                      OpDecorate %49 RelaxedPrecision 
                                                      OpDecorate %50 RelaxedPrecision 
                                                      OpDecorate %51 RelaxedPrecision 
                                                      OpDecorate %52 RelaxedPrecision 
                                                      OpDecorate %53 RelaxedPrecision 
                                                      OpDecorate %54 RelaxedPrecision 
                                                      OpDecorate %55 RelaxedPrecision 
                                                      OpDecorate %56 RelaxedPrecision 
                                                      OpDecorate %57 RelaxedPrecision 
                                                      OpDecorate %58 RelaxedPrecision 
                                                      OpDecorate %59 RelaxedPrecision 
                                                      OpDecorate %60 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD1 Location 63 
                                                      OpDecorate %67 RelaxedPrecision 
                                                      OpDecorate %68 RelaxedPrecision 
                                                      OpDecorate %69 RelaxedPrecision 
                                                      OpDecorate %70 RelaxedPrecision 
                                                      OpDecorate %74 RelaxedPrecision 
                                                      OpDecorate %75 RelaxedPrecision 
                                                      OpDecorate %76 RelaxedPrecision 
                                                      OpDecorate %77 RelaxedPrecision 
                                                      OpDecorate %80 RelaxedPrecision 
                                                      OpDecorate %82 RelaxedPrecision 
                                                      OpDecorate %83 RelaxedPrecision 
                                                      OpDecorate %84 RelaxedPrecision 
                                                      OpDecorate %88 RelaxedPrecision 
                                                      OpDecorate %89 RelaxedPrecision 
                                                      OpDecorate %92 RelaxedPrecision 
                                                      OpDecorate %96 RelaxedPrecision 
                                                      OpDecorate %97 RelaxedPrecision 
                                                      OpDecorate %102 RelaxedPrecision 
                                                      OpDecorate %104 RelaxedPrecision 
                                                      OpDecorate %109 RelaxedPrecision 
                                                      OpDecorate %118 RelaxedPrecision 
                                                      OpDecorate %119 RelaxedPrecision 
                                                      OpDecorate %121 RelaxedPrecision 
                                                      OpDecorate %122 RelaxedPrecision 
                                                      OpDecorate %129 RelaxedPrecision 
                                                      OpDecorate %130 RelaxedPrecision 
                                                      OpDecorate %133 RelaxedPrecision 
                                                      OpDecorate %135 RelaxedPrecision 
                                                      OpDecorate %136 RelaxedPrecision 
                                                      OpDecorate %137 RelaxedPrecision 
                                                      OpDecorate %141 RelaxedPrecision 
                                                      OpDecorate %142 RelaxedPrecision 
                                                      OpDecorate %143 RelaxedPrecision 
                                                      OpDecorate %144 RelaxedPrecision 
                                                      OpDecorate %212 DescriptorSet 212 
                                                      OpDecorate %212 Binding 212 
                                                      OpDecorate %216 DescriptorSet 216 
                                                      OpDecorate %216 Binding 216 
                                                      OpDecorate %228 RelaxedPrecision 
                                                      OpDecorate %229 RelaxedPrecision 
                                                      OpDecorate %233 RelaxedPrecision 
                                                      OpDecorate %234 RelaxedPrecision 
                                                      OpDecorate %236 RelaxedPrecision 
                                                      OpDecorate %237 RelaxedPrecision 
                                                      OpDecorate %238 RelaxedPrecision 
                                                      OpDecorate %241 RelaxedPrecision 
                                                      OpDecorate %245 RelaxedPrecision 
                                                      OpDecorate %246 RelaxedPrecision 
                                                      OpDecorate %247 RelaxedPrecision 
                                                      OpDecorate %250 RelaxedPrecision 
                                                      OpDecorate %251 RelaxedPrecision 
                                                      OpDecorate %253 RelaxedPrecision 
                                                      OpDecorate %255 RelaxedPrecision 
                                                      OpDecorate %257 RelaxedPrecision 
                                                      OpDecorate %258 RelaxedPrecision 
                                                      OpDecorate %259 RelaxedPrecision 
                                                      OpDecorate %260 RelaxedPrecision 
                                                      OpDecorate %262 RelaxedPrecision 
                                                      OpDecorate %263 RelaxedPrecision 
                                                      OpDecorate %265 RelaxedPrecision 
                                                      OpDecorate %266 RelaxedPrecision 
                                                      OpDecorate %268 RelaxedPrecision 
                                                      OpDecorate %269 RelaxedPrecision 
                                                      OpDecorate %270 RelaxedPrecision 
                                                      OpDecorate %271 RelaxedPrecision 
                                                      OpDecorate %274 RelaxedPrecision 
                                                      OpDecorate %275 RelaxedPrecision 
                                                      OpDecorate %277 RelaxedPrecision 
                                                      OpDecorate %279 RelaxedPrecision 
                                                      OpDecorate %280 RelaxedPrecision 
                                                      OpDecorate %281 RelaxedPrecision 
                                                      OpDecorate %282 RelaxedPrecision 
                                                      OpDecorate %283 RelaxedPrecision 
                                                      OpDecorate %284 RelaxedPrecision 
                                                      OpDecorate %285 RelaxedPrecision 
                                                      OpDecorate %287 RelaxedPrecision 
                                                      OpDecorate %288 RelaxedPrecision 
                                                      OpDecorate %289 RelaxedPrecision 
                                                      OpDecorate %290 RelaxedPrecision 
                                                      OpDecorate %292 RelaxedPrecision 
                                                      OpDecorate %293 RelaxedPrecision 
                                                      OpDecorate %296 RelaxedPrecision 
                                                      OpDecorate %297 RelaxedPrecision 
                                                      OpDecorate %298 RelaxedPrecision 
                                                      OpDecorate %301 RelaxedPrecision 
                                                      OpDecorate %302 RelaxedPrecision 
                                                      OpDecorate %303 RelaxedPrecision 
                                                      OpDecorate %305 RelaxedPrecision 
                                                      OpDecorate %306 RelaxedPrecision 
                                                      OpDecorate %307 RelaxedPrecision 
                                                      OpDecorate %308 RelaxedPrecision 
                                                      OpDecorate %310 RelaxedPrecision 
                                                      OpDecorate %311 RelaxedPrecision 
                                                      OpDecorate %312 RelaxedPrecision 
                                                      OpDecorate %313 RelaxedPrecision 
                                                      OpDecorate %314 RelaxedPrecision 
                                                      OpDecorate %315 RelaxedPrecision 
                                                      OpDecorate %317 RelaxedPrecision 
                                                      OpDecorate %318 RelaxedPrecision 
                                                      OpDecorate %319 RelaxedPrecision 
                                                      OpDecorate %320 RelaxedPrecision 
                                                      OpDecorate %321 RelaxedPrecision 
                                                      OpDecorate %322 RelaxedPrecision 
                                                      OpDecorate %323 RelaxedPrecision 
                                                      OpDecorate %324 RelaxedPrecision 
                                                      OpDecorate %325 RelaxedPrecision 
                                                      OpDecorate %326 RelaxedPrecision 
                                                      OpDecorate %327 RelaxedPrecision 
                                                      OpDecorate %327 DescriptorSet 327 
                                                      OpDecorate %327 Binding 327 
                                                      OpDecorate %328 RelaxedPrecision 
                                                      OpDecorate %329 RelaxedPrecision 
                                                      OpDecorate %329 DescriptorSet 329 
                                                      OpDecorate %329 Binding 329 
                                                      OpDecorate %330 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD0 RelaxedPrecision 
                                                      OpDecorate vs_TEXCOORD0 Location 333 
                                                      OpDecorate %334 RelaxedPrecision 
                                                      OpDecorate %335 RelaxedPrecision 
                                                      OpDecorate %336 RelaxedPrecision 
                                                      OpDecorate %337 RelaxedPrecision 
                                                      OpDecorate %340 RelaxedPrecision 
                                                      OpDecorate %341 RelaxedPrecision 
                                                      OpDecorate %342 RelaxedPrecision 
                                                      OpDecorate %343 RelaxedPrecision 
                                                      OpDecorate %344 RelaxedPrecision 
                                                      OpDecorate %345 RelaxedPrecision 
                                                      OpDecorate %346 RelaxedPrecision 
                                                      OpDecorate %349 RelaxedPrecision 
                                                      OpDecorate %350 RelaxedPrecision 
                                                      OpDecorate %351 RelaxedPrecision 
                                                      OpDecorate %352 RelaxedPrecision 
                                                      OpDecorate %356 RelaxedPrecision 
                                                      OpDecorate %356 Location 356 
                                               %2 = OpTypeVoid 
                                               %3 = OpTypeFunction %2 
                                               %6 = OpTypeFloat 32 
                                               %7 = OpTypeVector %6 3 
                                               %8 = OpTypePointer Private %7 
                                Private f32_3* %9 = OpVariable Private 
                                              %10 = OpTypePointer Input %7 
                        Input f32_3* vs_TEXCOORD2 = OpVariable Input 
                                              %14 = OpTypeVector %6 4 
                                              %15 = OpTypeInt 32 0 
                                          u32 %16 = OpConstant 4 
                                              %17 = OpTypeArray %14 %16 
                                              %18 = OpTypeStruct %7 %14 %14 %14 %17 %14 %6 %14 %14 %6 %6 %6 
                                              %19 = OpTypePointer Uniform %18 
Uniform struct {f32_3; f32_4; f32_4; f32_4; f32_4[4]; f32_4; f32; f32_4; f32_4; f32; f32; f32;}* %20 = OpVariable Uniform 
                                              %21 = OpTypeInt 32 1 
                                          i32 %22 = OpConstant 0 
                                              %23 = OpTypePointer Uniform %7 
                                              %27 = OpTypePointer Private %6 
                                 Private f32* %28 = OpVariable Private 
                                              %34 = OpTypePointer Private %14 
                               Private f32_4* %35 = OpVariable Private 
                                          i32 %40 = OpConstant 1 
                                              %41 = OpTypePointer Uniform %14 
                                 Private f32* %48 = OpVariable Private 
                        Input f32_3* vs_TEXCOORD1 = OpVariable Input 
                               Private f32_3* %69 = OpVariable Private 
                                          u32 %78 = OpConstant 0 
                                          u32 %85 = OpConstant 1 
                                              %87 = OpTypeVector %6 2 
                                          f32 %90 = OpConstant 3.674022E-40 
                                        f32_2 %91 = OpConstantComposite %90 %90 
                                          i32 %99 = OpConstant 6 
                                             %100 = OpTypePointer Uniform %6 
                                         f32 %103 = OpConstant 3.674022E-40 
                                         i32 %116 = OpConstant 11 
                                         f32 %120 = OpConstant 3.674022E-40 
                                         f32 %126 = OpConstant 3.674022E-40 
                                Private f32* %133 = OpVariable Private 
                                             %138 = OpTypePointer Private %87 
                              Private f32_2* %139 = OpVariable Private 
                                         f32 %146 = OpConstant 3.674022E-40 
                                         f32 %163 = OpConstant 3.674022E-40 
                                         f32 %165 = OpConstant 3.674022E-40 
                                         i32 %182 = OpConstant 4 
                                         i32 %195 = OpConstant 2 
                                         i32 %205 = OpConstant 3 
                                             %210 = OpTypeImage %6 Dim2D 0 0 0 1 Unknown 
                                             %211 = OpTypePointer UniformConstant %210 
        UniformConstant read_only Texture2D* %212 = OpVariable UniformConstant 
                                             %214 = OpTypeSampler 
                                             %215 = OpTypePointer UniformConstant %214 
                    UniformConstant sampler* %216 = OpVariable UniformConstant 
                                             %218 = OpTypeSampledImage %210 
                                         u32 %222 = OpConstant 3 
                                         i32 %243 = OpConstant 10 
                                         i32 %248 = OpConstant 9 
                                Private f32* %253 = OpVariable Private 
                                Private f32* %260 = OpVariable Private 
                                         i32 %294 = OpConstant 7 
                                         i32 %299 = OpConstant 8 
                              Private f32_3* %313 = OpVariable Private 
                              Private f32_3* %326 = OpVariable Private 
        UniformConstant read_only Texture2D* %327 = OpVariable UniformConstant 
                    UniformConstant sampler* %329 = OpVariable UniformConstant 
                                             %332 = OpTypePointer Input %87 
                        Input f32_2* vs_TEXCOORD0 = OpVariable Input 
                                         i32 %338 = OpConstant 5 
                                             %355 = OpTypePointer Output %14 
                               Output f32_4* %356 = OpVariable Output 
                                             %360 = OpTypePointer Output %6 
                                          void %4 = OpFunction None %3 
                                               %5 = OpLabel 
                                        f32_3 %12 = OpLoad vs_TEXCOORD2 
                                        f32_3 %13 = OpFNegate %12 
                               Uniform f32_3* %24 = OpAccessChain %20 %22 
                                        f32_3 %25 = OpLoad %24 
                                        f32_3 %26 = OpFAdd %13 %25 
                                                      OpStore %9 %26 
                                        f32_3 %29 = OpLoad %9 
                                        f32_3 %30 = OpLoad %9 
                                          f32 %31 = OpDot %29 %30 
                                                      OpStore %28 %31 
                                          f32 %32 = OpLoad %28 
                                          f32 %33 = OpExtInst %1 32 %32 
                                                      OpStore %28 %33 
                                        f32_3 %36 = OpLoad %9 
                                          f32 %37 = OpLoad %28 
                                        f32_3 %38 = OpCompositeConstruct %37 %37 %37 
                                        f32_3 %39 = OpFMul %36 %38 
                               Uniform f32_4* %42 = OpAccessChain %20 %40 
                                        f32_4 %43 = OpLoad %42 
                                        f32_3 %44 = OpVectorShuffle %43 %43 0 1 2 
                                        f32_3 %45 = OpFAdd %39 %44 
                                        f32_4 %46 = OpLoad %35 
                                        f32_4 %47 = OpVectorShuffle %46 %45 4 5 6 3 
                                                      OpStore %35 %47 
                                        f32_4 %49 = OpLoad %35 
                                        f32_3 %50 = OpVectorShuffle %49 %49 0 1 2 
                                        f32_4 %51 = OpLoad %35 
                                        f32_3 %52 = OpVectorShuffle %51 %51 0 1 2 
                                          f32 %53 = OpDot %50 %52 
                                                      OpStore %48 %53 
                                          f32 %54 = OpLoad %48 
                                          f32 %55 = OpExtInst %1 32 %54 
                                                      OpStore %48 %55 
                                          f32 %56 = OpLoad %48 
                                        f32_3 %57 = OpCompositeConstruct %56 %56 %56 
                                        f32_4 %58 = OpLoad %35 
                                        f32_3 %59 = OpVectorShuffle %58 %58 0 1 2 
                                        f32_3 %60 = OpFMul %57 %59 
                                        f32_4 %61 = OpLoad %35 
                                        f32_4 %62 = OpVectorShuffle %61 %60 4 5 6 3 
                                                      OpStore %35 %62 
                                        f32_3 %64 = OpLoad vs_TEXCOORD1 
                                        f32_3 %65 = OpLoad vs_TEXCOORD1 
                                          f32 %66 = OpDot %64 %65 
                                                      OpStore %48 %66 
                                          f32 %67 = OpLoad %48 
                                          f32 %68 = OpExtInst %1 32 %67 
                                                      OpStore %48 %68 
                                          f32 %70 = OpLoad %48 
                                        f32_3 %71 = OpCompositeConstruct %70 %70 %70 
                                        f32_3 %72 = OpLoad vs_TEXCOORD1 
                                        f32_3 %73 = OpFMul %71 %72 
                                                      OpStore %69 %73 
                                        f32_3 %74 = OpLoad %69 
                                        f32_4 %75 = OpLoad %35 
                                        f32_3 %76 = OpVectorShuffle %75 %75 0 1 2 
                                          f32 %77 = OpDot %74 %76 
                                 Private f32* %79 = OpAccessChain %35 %78 
                                                      OpStore %79 %77 
                                        f32_3 %80 = OpLoad %69 
                               Uniform f32_4* %81 = OpAccessChain %20 %40 
                                        f32_4 %82 = OpLoad %81 
                                        f32_3 %83 = OpVectorShuffle %82 %82 0 1 2 
                                          f32 %84 = OpDot %80 %83 
                                 Private f32* %86 = OpAccessChain %35 %85 
                                                      OpStore %86 %84 
                                        f32_4 %88 = OpLoad %35 
                                        f32_2 %89 = OpVectorShuffle %88 %88 0 1 
                                        f32_2 %92 = OpExtInst %1 40 %89 %91 
                                        f32_4 %93 = OpLoad %35 
                                        f32_4 %94 = OpVectorShuffle %93 %92 4 5 2 3 
                                                      OpStore %35 %94 
                                 Private f32* %95 = OpAccessChain %35 %78 
                                          f32 %96 = OpLoad %95 
                                          f32 %97 = OpExtInst %1 30 %96 
                                 Private f32* %98 = OpAccessChain %9 %78 
                                                      OpStore %98 %97 
                                Uniform f32* %101 = OpAccessChain %20 %99 
                                         f32 %102 = OpLoad %101 
                                         f32 %104 = OpFMul %102 %103 
                                Private f32* %105 = OpAccessChain %35 %78 
                                                      OpStore %105 %104 
                                Private f32* %106 = OpAccessChain %9 %78 
                                         f32 %107 = OpLoad %106 
                                Private f32* %108 = OpAccessChain %35 %78 
                                         f32 %109 = OpLoad %108 
                                         f32 %110 = OpFMul %107 %109 
                                Private f32* %111 = OpAccessChain %9 %78 
                                                      OpStore %111 %110 
                                Private f32* %112 = OpAccessChain %9 %78 
                                         f32 %113 = OpLoad %112 
                                         f32 %114 = OpExtInst %1 29 %113 
                                Private f32* %115 = OpAccessChain %9 %78 
                                                      OpStore %115 %114 
                                Uniform f32* %117 = OpAccessChain %20 %116 
                                         f32 %118 = OpLoad %117 
                                         f32 %119 = OpFNegate %118 
                                         f32 %121 = OpFMul %119 %120 
                                         f32 %122 = OpFAdd %121 %120 
                                Private f32* %123 = OpAccessChain %35 %78 
                                                      OpStore %123 %122 
                                Private f32* %124 = OpAccessChain %9 %78 
                                         f32 %125 = OpLoad %124 
                                         f32 %127 = OpFMul %125 %126 
                                Private f32* %128 = OpAccessChain %35 %78 
                                         f32 %129 = OpLoad %128 
                                         f32 %130 = OpFNegate %129 
                                         f32 %131 = OpFAdd %127 %130 
                                Private f32* %132 = OpAccessChain %9 %78 
                                                      OpStore %132 %131 
                                Uniform f32* %134 = OpAccessChain %20 %116 
                                         f32 %135 = OpLoad %134 
                                         f32 %136 = OpFMul %135 %120 
                                         f32 %137 = OpFAdd %136 %120 
                                                      OpStore %133 %137 
                                Private f32* %140 = OpAccessChain %35 %78 
                                         f32 %141 = OpLoad %140 
                                         f32 %142 = OpFNegate %141 
                                         f32 %143 = OpLoad %133 
                                         f32 %144 = OpFAdd %142 %143 
                                Private f32* %145 = OpAccessChain %139 %78 
                                                      OpStore %145 %144 
                                Private f32* %147 = OpAccessChain %139 %78 
                                         f32 %148 = OpLoad %147 
                                         f32 %149 = OpFDiv %146 %148 
                                Private f32* %150 = OpAccessChain %139 %78 
                                                      OpStore %150 %149 
                                Private f32* %151 = OpAccessChain %139 %78 
                                         f32 %152 = OpLoad %151 
                                Private f32* %153 = OpAccessChain %9 %78 
                                         f32 %154 = OpLoad %153 
                                         f32 %155 = OpFMul %152 %154 
                                Private f32* %156 = OpAccessChain %9 %78 
                                                      OpStore %156 %155 
                                Private f32* %157 = OpAccessChain %9 %78 
                                         f32 %158 = OpLoad %157 
                                         f32 %159 = OpExtInst %1 43 %158 %90 %146 
                                Private f32* %160 = OpAccessChain %9 %78 
                                                      OpStore %160 %159 
                                Private f32* %161 = OpAccessChain %9 %78 
                                         f32 %162 = OpLoad %161 
                                         f32 %164 = OpFMul %162 %163 
                                         f32 %166 = OpFAdd %164 %165 
                                Private f32* %167 = OpAccessChain %139 %78 
                                                      OpStore %167 %166 
                                Private f32* %168 = OpAccessChain %9 %78 
                                         f32 %169 = OpLoad %168 
                                Private f32* %170 = OpAccessChain %9 %78 
                                         f32 %171 = OpLoad %170 
                                         f32 %172 = OpFMul %169 %171 
                                Private f32* %173 = OpAccessChain %9 %78 
                                                      OpStore %173 %172 
                                Private f32* %174 = OpAccessChain %9 %78 
                                         f32 %175 = OpLoad %174 
                                Private f32* %176 = OpAccessChain %139 %78 
                                         f32 %177 = OpLoad %176 
                                         f32 %178 = OpFMul %175 %177 
                                Private f32* %179 = OpAccessChain %9 %78 
                                                      OpStore %179 %178 
                                       f32_3 %180 = OpLoad vs_TEXCOORD2 
                                       f32_2 %181 = OpVectorShuffle %180 %180 1 1 
                              Uniform f32_4* %183 = OpAccessChain %20 %182 %40 
                                       f32_4 %184 = OpLoad %183 
                                       f32_2 %185 = OpVectorShuffle %184 %184 0 1 
                                       f32_2 %186 = OpFMul %181 %185 
                                                      OpStore %139 %186 
                              Uniform f32_4* %187 = OpAccessChain %20 %182 %22 
                                       f32_4 %188 = OpLoad %187 
                                       f32_2 %189 = OpVectorShuffle %188 %188 0 1 
                                       f32_3 %190 = OpLoad vs_TEXCOORD2 
                                       f32_2 %191 = OpVectorShuffle %190 %190 0 0 
                                       f32_2 %192 = OpFMul %189 %191 
                                       f32_2 %193 = OpLoad %139 
                                       f32_2 %194 = OpFAdd %192 %193 
                                                      OpStore %139 %194 
                              Uniform f32_4* %196 = OpAccessChain %20 %182 %195 
                                       f32_4 %197 = OpLoad %196 
                                       f32_2 %198 = OpVectorShuffle %197 %197 0 1 
                                       f32_3 %199 = OpLoad vs_TEXCOORD2 
                                       f32_2 %200 = OpVectorShuffle %199 %199 2 2 
                                       f32_2 %201 = OpFMul %198 %200 
                                       f32_2 %202 = OpLoad %139 
                                       f32_2 %203 = OpFAdd %201 %202 
                                                      OpStore %139 %203 
                                       f32_2 %204 = OpLoad %139 
                              Uniform f32_4* %206 = OpAccessChain %20 %182 %205 
                                       f32_4 %207 = OpLoad %206 
                                       f32_2 %208 = OpVectorShuffle %207 %207 0 1 
                                       f32_2 %209 = OpFAdd %204 %208 
                                                      OpStore %139 %209 
                         read_only Texture2D %213 = OpLoad %212 
                                     sampler %217 = OpLoad %216 
                  read_only Texture2DSampled %219 = OpSampledImage %213 %217 
                                       f32_2 %220 = OpLoad %139 
                                       f32_4 %221 = OpImageSampleImplicitLod %219 %220 
                                         f32 %223 = OpCompositeExtract %221 3 
                                Private f32* %224 = OpAccessChain %139 %78 
                                                      OpStore %224 %223 
                                       f32_2 %225 = OpLoad %139 
                                       f32_3 %226 = OpVectorShuffle %225 %225 0 0 0 
                              Uniform f32_4* %227 = OpAccessChain %20 %195 
                                       f32_4 %228 = OpLoad %227 
                                       f32_3 %229 = OpVectorShuffle %228 %228 0 1 2 
                                       f32_3 %230 = OpFMul %226 %229 
                                       f32_4 %231 = OpLoad %35 
                                       f32_4 %232 = OpVectorShuffle %231 %230 4 1 5 6 
                                                      OpStore %35 %232 
                                       f32_4 %233 = OpLoad %35 
                                       f32_3 %234 = OpVectorShuffle %233 %233 0 2 3 
                              Uniform f32_4* %235 = OpAccessChain %20 %205 
                                       f32_4 %236 = OpLoad %235 
                                       f32_3 %237 = OpVectorShuffle %236 %236 0 1 2 
                                       f32_3 %238 = OpFMul %234 %237 
                                                      OpStore %69 %238 
                                       f32_3 %239 = OpLoad %9 
                                       f32_3 %240 = OpVectorShuffle %239 %239 0 0 0 
                                       f32_3 %241 = OpLoad %69 
                                       f32_3 %242 = OpFMul %240 %241 
                                                      OpStore %9 %242 
                                Uniform f32* %244 = OpAccessChain %20 %243 
                                         f32 %245 = OpLoad %244 
                                         f32 %246 = OpFNegate %245 
                                         f32 %247 = OpFMul %246 %120 
                                Uniform f32* %249 = OpAccessChain %20 %248 
                                         f32 %250 = OpLoad %249 
                                         f32 %251 = OpFAdd %247 %250 
                                Private f32* %252 = OpAccessChain %69 %78 
                                                      OpStore %252 %251 
                                Private f32* %254 = OpAccessChain %35 %85 
                                         f32 %255 = OpLoad %254 
                                Private f32* %256 = OpAccessChain %69 %78 
                                         f32 %257 = OpLoad %256 
                                         f32 %258 = OpFNegate %257 
                                         f32 %259 = OpFAdd %255 %258 
                                                      OpStore %253 %259 
                                Uniform f32* %261 = OpAccessChain %20 %243 
                                         f32 %262 = OpLoad %261 
                                         f32 %263 = OpFMul %262 %120 
                                Uniform f32* %264 = OpAccessChain %20 %248 
                                         f32 %265 = OpLoad %264 
                                         f32 %266 = OpFAdd %263 %265 
                                                      OpStore %260 %266 
                                Private f32* %267 = OpAccessChain %69 %78 
                                         f32 %268 = OpLoad %267 
                                         f32 %269 = OpFNegate %268 
                                         f32 %270 = OpLoad %260 
                                         f32 %271 = OpFAdd %269 %270 
                                Private f32* %272 = OpAccessChain %69 %78 
                                                      OpStore %272 %271 
                                Private f32* %273 = OpAccessChain %69 %78 
                                         f32 %274 = OpLoad %273 
                                         f32 %275 = OpFDiv %146 %274 
                                Private f32* %276 = OpAccessChain %69 %78 
                                                      OpStore %276 %275 
                                         f32 %277 = OpLoad %253 
                                Private f32* %278 = OpAccessChain %69 %78 
                                         f32 %279 = OpLoad %278 
                                         f32 %280 = OpFMul %277 %279 
                                                      OpStore %253 %280 
                                         f32 %281 = OpLoad %253 
                                         f32 %282 = OpExtInst %1 43 %281 %90 %146 
                                                      OpStore %253 %282 
                                         f32 %283 = OpLoad %253 
                                         f32 %284 = OpFMul %283 %163 
                                         f32 %285 = OpFAdd %284 %165 
                                Private f32* %286 = OpAccessChain %69 %78 
                                                      OpStore %286 %285 
                                         f32 %287 = OpLoad %253 
                                         f32 %288 = OpLoad %253 
                                         f32 %289 = OpFMul %287 %288 
                                                      OpStore %253 %289 
                                         f32 %290 = OpLoad %253 
                                Private f32* %291 = OpAccessChain %69 %78 
                                         f32 %292 = OpLoad %291 
                                         f32 %293 = OpFMul %290 %292 
                                                      OpStore %253 %293 
                              Uniform f32_4* %295 = OpAccessChain %20 %294 
                                       f32_4 %296 = OpLoad %295 
                                       f32_3 %297 = OpVectorShuffle %296 %296 0 1 2 
                                       f32_3 %298 = OpFNegate %297 
                              Uniform f32_4* %300 = OpAccessChain %20 %299 
                                       f32_4 %301 = OpLoad %300 
                                       f32_3 %302 = OpVectorShuffle %301 %301 0 1 2 
                                       f32_3 %303 = OpFAdd %298 %302 
                                                      OpStore %69 %303 
                              Uniform f32_4* %304 = OpAccessChain %20 %299 
                                       f32_4 %305 = OpLoad %304 
                                       f32_3 %306 = OpVectorShuffle %305 %305 3 3 3 
                                       f32_3 %307 = OpLoad %69 
                                       f32_3 %308 = OpFMul %306 %307 
                              Uniform f32_4* %309 = OpAccessChain %20 %294 
                                       f32_4 %310 = OpLoad %309 
                                       f32_3 %311 = OpVectorShuffle %310 %310 0 1 2 
                                       f32_3 %312 = OpFAdd %308 %311 
                                                      OpStore %69 %312 
                                       f32_3 %314 = OpLoad %69 
                                       f32_3 %315 = OpFNegate %314 
                              Uniform f32_4* %316 = OpAccessChain %20 %294 
                                       f32_4 %317 = OpLoad %316 
                                       f32_3 %318 = OpVectorShuffle %317 %317 0 1 2 
                                       f32_3 %319 = OpFAdd %315 %318 
                                                      OpStore %313 %319 
                                         f32 %320 = OpLoad %253 
                                       f32_3 %321 = OpCompositeConstruct %320 %320 %320 
                                       f32_3 %322 = OpLoad %313 
                                       f32_3 %323 = OpFMul %321 %322 
                                       f32_3 %324 = OpLoad %69 
                                       f32_3 %325 = OpFAdd %323 %324 
                                                      OpStore %69 %325 
                         read_only Texture2D %328 = OpLoad %327 
                                     sampler %330 = OpLoad %329 
                  read_only Texture2DSampled %331 = OpSampledImage %328 %330 
                                       f32_2 %334 = OpLoad vs_TEXCOORD0 
                                       f32_4 %335 = OpImageSampleImplicitLod %331 %334 
                                       f32_3 %336 = OpVectorShuffle %335 %335 0 1 2 
                                                      OpStore %326 %336 
                                       f32_3 %337 = OpLoad %326 
                              Uniform f32_4* %339 = OpAccessChain %20 %338 
                                       f32_4 %340 = OpLoad %339 
                                       f32_3 %341 = OpVectorShuffle %340 %340 0 1 2 
                                       f32_3 %342 = OpFMul %337 %341 
                                                      OpStore %313 %342 
                                       f32_4 %343 = OpLoad %35 
                                       f32_3 %344 = OpVectorShuffle %343 %343 0 2 3 
                                       f32_3 %345 = OpLoad %313 
                                       f32_3 %346 = OpFMul %344 %345 
                                       f32_4 %347 = OpLoad %35 
                                       f32_4 %348 = OpVectorShuffle %347 %346 4 5 6 3 
                                                      OpStore %35 %348 
                                       f32_4 %349 = OpLoad %35 
                                       f32_3 %350 = OpVectorShuffle %349 %349 0 1 2 
                                       f32_3 %351 = OpLoad %69 
                                       f32_3 %352 = OpFMul %350 %351 
                                       f32_3 %353 = OpLoad %9 
                                       f32_3 %354 = OpFAdd %352 %353 
                                                      OpStore %9 %354 
                                       f32_3 %357 = OpLoad %9 
                                       f32_4 %358 = OpLoad %356 
                                       f32_4 %359 = OpVectorShuffle %358 %357 4 5 6 3 
                                                      OpStore %356 %359 
                                 Output f32* %361 = OpAccessChain %356 %222 
                                                      OpStore %361 %146 
                                                      OpReturn
                                                      OpFunctionEnd
"
}
}
Program "fp" {
SubProgram "gles3 hw_tier00 " {
Keywords { "POINT" }
""
}
SubProgram "gles3 hw_tier01 " {
Keywords { "POINT" }
""
}
SubProgram "gles3 hw_tier02 " {
Keywords { "POINT" }
""
}
SubProgram "vulkan hw_tier00 " {
Keywords { "POINT" }
""
}
SubProgram "vulkan hw_tier01 " {
Keywords { "POINT" }
""
}
SubProgram "vulkan hw_tier02 " {
Keywords { "POINT" }
""
}
SubProgram "gles3 hw_tier00 " {
Keywords { "DIRECTIONAL" }
""
}
SubProgram "gles3 hw_tier01 " {
Keywords { "DIRECTIONAL" }
""
}
SubProgram "gles3 hw_tier02 " {
Keywords { "DIRECTIONAL" }
""
}
SubProgram "vulkan hw_tier00 " {
Keywords { "DIRECTIONAL" }
""
}
SubProgram "vulkan hw_tier01 " {
Keywords { "DIRECTIONAL" }
""
}
SubProgram "vulkan hw_tier02 " {
Keywords { "DIRECTIONAL" }
""
}
SubProgram "gles3 hw_tier00 " {
Keywords { "SPOT" }
""
}
SubProgram "gles3 hw_tier01 " {
Keywords { "SPOT" }
""
}
SubProgram "gles3 hw_tier02 " {
Keywords { "SPOT" }
""
}
SubProgram "vulkan hw_tier00 " {
Keywords { "SPOT" }
""
}
SubProgram "vulkan hw_tier01 " {
Keywords { "SPOT" }
""
}
SubProgram "vulkan hw_tier02 " {
Keywords { "SPOT" }
""
}
SubProgram "gles3 hw_tier00 " {
Keywords { "POINT_COOKIE" }
""
}
SubProgram "gles3 hw_tier01 " {
Keywords { "POINT_COOKIE" }
""
}
SubProgram "gles3 hw_tier02 " {
Keywords { "POINT_COOKIE" }
""
}
SubProgram "vulkan hw_tier00 " {
Keywords { "POINT_COOKIE" }
""
}
SubProgram "vulkan hw_tier01 " {
Keywords { "POINT_COOKIE" }
""
}
SubProgram "vulkan hw_tier02 " {
Keywords { "POINT_COOKIE" }
""
}
SubProgram "gles3 hw_tier00 " {
Keywords { "DIRECTIONAL_COOKIE" }
""
}
SubProgram "gles3 hw_tier01 " {
Keywords { "DIRECTIONAL_COOKIE" }
""
}
SubProgram "gles3 hw_tier02 " {
Keywords { "DIRECTIONAL_COOKIE" }
""
}
SubProgram "vulkan hw_tier00 " {
Keywords { "DIRECTIONAL_COOKIE" }
""
}
SubProgram "vulkan hw_tier01 " {
Keywords { "DIRECTIONAL_COOKIE" }
""
}
SubProgram "vulkan hw_tier02 " {
Keywords { "DIRECTIONAL_COOKIE" }
""
}
}
}
}
Fallback "Diffuse"
CustomEditor "TCP2_MaterialInspector_SG"
}